<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2710" onload="init(evt)" viewBox="0 0 1200 2710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2710" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2693.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2693.00"> </text><svg id="frames" x="10" width="1180" total_samples="241821"><g><title>&lt;aptos_crypto::hash::TransactionAccumulatorHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (31 samples, 0.01%)</title><rect x="0.0066%" y="2325" width="0.0128%" height="15" fill="rgb(227,0,7)" fg:x="16" fg:w="31"/><text x="0.2566%" y="2335.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (31 samples, 0.01%)</title><rect x="0.0066%" y="2309" width="0.0128%" height="15" fill="rgb(217,0,24)" fg:x="16" fg:w="31"/><text x="0.2566%" y="2319.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (30 samples, 0.01%)</title><rect x="0.0070%" y="2293" width="0.0124%" height="15" fill="rgb(221,193,54)" fg:x="17" fg:w="30"/><text x="0.2570%" y="2303.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (30 samples, 0.01%)</title><rect x="0.0070%" y="2277" width="0.0124%" height="15" fill="rgb(248,212,6)" fg:x="17" fg:w="30"/><text x="0.2570%" y="2287.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (30 samples, 0.01%)</title><rect x="0.0070%" y="2261" width="0.0124%" height="15" fill="rgb(208,68,35)" fg:x="17" fg:w="30"/><text x="0.2570%" y="2271.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (30 samples, 0.01%)</title><rect x="0.0070%" y="2245" width="0.0124%" height="15" fill="rgb(232,128,0)" fg:x="17" fg:w="30"/><text x="0.2570%" y="2255.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (30 samples, 0.01%)</title><rect x="0.0070%" y="2229" width="0.0124%" height="15" fill="rgb(207,160,47)" fg:x="17" fg:w="30"/><text x="0.2570%" y="2239.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (30 samples, 0.01%)</title><rect x="0.0070%" y="2213" width="0.0124%" height="15" fill="rgb(228,23,34)" fg:x="17" fg:w="30"/><text x="0.2570%" y="2223.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (30 samples, 0.01%)</title><rect x="0.0070%" y="2197" width="0.0124%" height="15" fill="rgb(218,30,26)" fg:x="17" fg:w="30"/><text x="0.2570%" y="2207.50"></text></g><g><title>aptos_accumulator::MerkleAccumulator&lt;R,H&gt;::append (35 samples, 0.01%)</title><rect x="0.0062%" y="2389" width="0.0145%" height="15" fill="rgb(220,122,19)" fg:x="15" fg:w="35"/><text x="0.2562%" y="2399.50"></text></g><g><title>aptos_accumulator::MerkleAccumulatorView&lt;R,H&gt;::append (35 samples, 0.01%)</title><rect x="0.0062%" y="2373" width="0.0145%" height="15" fill="rgb(250,228,42)" fg:x="15" fg:w="35"/><text x="0.2562%" y="2383.50"></text></g><g><title>aptos_accumulator::MerkleAccumulatorView&lt;R,H&gt;::hash_internal_node (34 samples, 0.01%)</title><rect x="0.0066%" y="2357" width="0.0141%" height="15" fill="rgb(240,193,28)" fg:x="16" fg:w="34"/><text x="0.2566%" y="2367.50"></text></g><g><title>&lt;aptos_types::proof::MerkleTreeInternalNode&lt;H&gt; as aptos_crypto::hash::CryptoHash&gt;::hash (34 samples, 0.01%)</title><rect x="0.0066%" y="2341" width="0.0141%" height="15" fill="rgb(216,20,37)" fg:x="16" fg:w="34"/><text x="0.2566%" y="2351.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (33 samples, 0.01%)</title><rect x="0.0211%" y="2197" width="0.0136%" height="15" fill="rgb(206,188,39)" fg:x="51" fg:w="33"/><text x="0.2711%" y="2207.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (33 samples, 0.01%)</title><rect x="0.0211%" y="2181" width="0.0136%" height="15" fill="rgb(217,207,13)" fg:x="51" fg:w="33"/><text x="0.2711%" y="2191.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (33 samples, 0.01%)</title><rect x="0.0211%" y="2165" width="0.0136%" height="15" fill="rgb(231,73,38)" fg:x="51" fg:w="33"/><text x="0.2711%" y="2175.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (33 samples, 0.01%)</title><rect x="0.0211%" y="2149" width="0.0136%" height="15" fill="rgb(225,20,46)" fg:x="51" fg:w="33"/><text x="0.2711%" y="2159.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (33 samples, 0.01%)</title><rect x="0.0211%" y="2133" width="0.0136%" height="15" fill="rgb(210,31,41)" fg:x="51" fg:w="33"/><text x="0.2711%" y="2143.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (33 samples, 0.01%)</title><rect x="0.0211%" y="2117" width="0.0136%" height="15" fill="rgb(221,200,47)" fg:x="51" fg:w="33"/><text x="0.2711%" y="2127.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (33 samples, 0.01%)</title><rect x="0.0211%" y="2101" width="0.0136%" height="15" fill="rgb(226,26,5)" fg:x="51" fg:w="33"/><text x="0.2711%" y="2111.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (33 samples, 0.01%)</title><rect x="0.0211%" y="2085" width="0.0136%" height="15" fill="rgb(249,33,26)" fg:x="51" fg:w="33"/><text x="0.2711%" y="2095.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (33 samples, 0.01%)</title><rect x="0.0211%" y="2069" width="0.0136%" height="15" fill="rgb(235,183,28)" fg:x="51" fg:w="33"/><text x="0.2711%" y="2079.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (93 samples, 0.04%)</title><rect x="0.0207%" y="2389" width="0.0385%" height="15" fill="rgb(221,5,38)" fg:x="50" fg:w="93"/><text x="0.2707%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (93 samples, 0.04%)</title><rect x="0.0207%" y="2373" width="0.0385%" height="15" fill="rgb(247,18,42)" fg:x="50" fg:w="93"/><text x="0.2707%" y="2383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (93 samples, 0.04%)</title><rect x="0.0207%" y="2357" width="0.0385%" height="15" fill="rgb(241,131,45)" fg:x="50" fg:w="93"/><text x="0.2707%" y="2367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (93 samples, 0.04%)</title><rect x="0.0207%" y="2341" width="0.0385%" height="15" fill="rgb(249,31,29)" fg:x="50" fg:w="93"/><text x="0.2707%" y="2351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (93 samples, 0.04%)</title><rect x="0.0207%" y="2325" width="0.0385%" height="15" fill="rgb(225,111,53)" fg:x="50" fg:w="93"/><text x="0.2707%" y="2335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (93 samples, 0.04%)</title><rect x="0.0207%" y="2309" width="0.0385%" height="15" fill="rgb(238,160,17)" fg:x="50" fg:w="93"/><text x="0.2707%" y="2319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (93 samples, 0.04%)</title><rect x="0.0207%" y="2293" width="0.0385%" height="15" fill="rgb(214,148,48)" fg:x="50" fg:w="93"/><text x="0.2707%" y="2303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (93 samples, 0.04%)</title><rect x="0.0207%" y="2277" width="0.0385%" height="15" fill="rgb(232,36,49)" fg:x="50" fg:w="93"/><text x="0.2707%" y="2287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (93 samples, 0.04%)</title><rect x="0.0207%" y="2261" width="0.0385%" height="15" fill="rgb(209,103,24)" fg:x="50" fg:w="93"/><text x="0.2707%" y="2271.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (93 samples, 0.04%)</title><rect x="0.0207%" y="2245" width="0.0385%" height="15" fill="rgb(229,88,8)" fg:x="50" fg:w="93"/><text x="0.2707%" y="2255.50"></text></g><g><title>core::ops::function::FnMut::call_mut (92 samples, 0.04%)</title><rect x="0.0211%" y="2229" width="0.0380%" height="15" fill="rgb(213,181,19)" fg:x="51" fg:w="92"/><text x="0.2711%" y="2239.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfo as aptos_crypto::hash::CryptoHash&gt;::hash (92 samples, 0.04%)</title><rect x="0.0211%" y="2213" width="0.0380%" height="15" fill="rgb(254,191,54)" fg:x="51" fg:w="92"/><text x="0.2711%" y="2223.50"></text></g><g><title>bcs::ser::serialize_into (59 samples, 0.02%)</title><rect x="0.0347%" y="2197" width="0.0244%" height="15" fill="rgb(241,83,37)" fg:x="84" fg:w="59"/><text x="0.2847%" y="2207.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (59 samples, 0.02%)</title><rect x="0.0347%" y="2181" width="0.0244%" height="15" fill="rgb(233,36,39)" fg:x="84" fg:w="59"/><text x="0.2847%" y="2191.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfo&gt;::serialize (59 samples, 0.02%)</title><rect x="0.0347%" y="2165" width="0.0244%" height="15" fill="rgb(226,3,54)" fg:x="84" fg:w="59"/><text x="0.2847%" y="2175.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (59 samples, 0.02%)</title><rect x="0.0347%" y="2149" width="0.0244%" height="15" fill="rgb(245,192,40)" fg:x="84" fg:w="59"/><text x="0.2847%" y="2159.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfoV0&gt;::serialize (59 samples, 0.02%)</title><rect x="0.0347%" y="2133" width="0.0244%" height="15" fill="rgb(238,167,29)" fg:x="84" fg:w="59"/><text x="0.2847%" y="2143.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (59 samples, 0.02%)</title><rect x="0.0347%" y="2117" width="0.0244%" height="15" fill="rgb(232,182,51)" fg:x="84" fg:w="59"/><text x="0.2847%" y="2127.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize (59 samples, 0.02%)</title><rect x="0.0347%" y="2101" width="0.0244%" height="15" fill="rgb(231,60,39)" fg:x="84" fg:w="59"/><text x="0.2847%" y="2111.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::_::&lt;impl serde::ser::Serialize for &lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::Value&gt;::serialize (59 samples, 0.02%)</title><rect x="0.0347%" y="2085" width="0.0244%" height="15" fill="rgb(208,69,12)" fg:x="84" fg:w="59"/><text x="0.2847%" y="2095.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (59 samples, 0.02%)</title><rect x="0.0347%" y="2069" width="0.0244%" height="15" fill="rgb(235,93,37)" fg:x="84" fg:w="59"/><text x="0.2847%" y="2079.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (58 samples, 0.02%)</title><rect x="0.0351%" y="2053" width="0.0240%" height="15" fill="rgb(213,116,39)" fg:x="85" fg:w="58"/><text x="0.2851%" y="2063.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (58 samples, 0.02%)</title><rect x="0.0351%" y="2037" width="0.0240%" height="15" fill="rgb(222,207,29)" fg:x="85" fg:w="58"/><text x="0.2851%" y="2047.50"></text></g><g><title> 32]&gt;::serialize (58 samples, 0.02%)</title><rect x="0.0351%" y="2021" width="0.0240%" height="15" fill="rgb(206,96,30)" fg:x="85" fg:w="58"/><text x="0.2851%" y="2031.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (58 samples, 0.02%)</title><rect x="0.0351%" y="2005" width="0.0240%" height="15" fill="rgb(218,138,4)" fg:x="85" fg:w="58"/><text x="0.2851%" y="2015.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (58 samples, 0.02%)</title><rect x="0.0351%" y="1989" width="0.0240%" height="15" fill="rgb(250,191,14)" fg:x="85" fg:w="58"/><text x="0.2851%" y="1999.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (58 samples, 0.02%)</title><rect x="0.0351%" y="1973" width="0.0240%" height="15" fill="rgb(239,60,40)" fg:x="85" fg:w="58"/><text x="0.2851%" y="1983.50"></text></g><g><title>std::io::Write::write_all (58 samples, 0.02%)</title><rect x="0.0351%" y="1957" width="0.0240%" height="15" fill="rgb(206,27,48)" fg:x="85" fg:w="58"/><text x="0.2851%" y="1967.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoV0Hasher as std::io::Write&gt;::write (58 samples, 0.02%)</title><rect x="0.0351%" y="1941" width="0.0240%" height="15" fill="rgb(225,35,8)" fg:x="85" fg:w="58"/><text x="0.2851%" y="1951.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (39 samples, 0.02%)</title><rect x="0.0430%" y="1925" width="0.0161%" height="15" fill="rgb(250,213,24)" fg:x="104" fg:w="39"/><text x="0.2930%" y="1935.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfoV0&gt;::serialize (25 samples, 0.01%)</title><rect x="0.0620%" y="2229" width="0.0103%" height="15" fill="rgb(247,123,22)" fg:x="150" fg:w="25"/><text x="0.3120%" y="2239.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 0.01%)</title><rect x="0.0620%" y="2213" width="0.0103%" height="15" fill="rgb(231,138,38)" fg:x="150" fg:w="25"/><text x="0.3120%" y="2223.50"></text></g><g><title>aptos_db::schema::transaction_info::&lt;impl aptos_schemadb::schema::ValueCodec&lt;aptos_db::schema::transaction_info::TransactionInfoSchema&gt; for aptos_types::transaction::TransactionInfo&gt;::encode_value (26 samples, 0.01%)</title><rect x="0.0620%" y="2309" width="0.0108%" height="15" fill="rgb(231,145,46)" fg:x="150" fg:w="26"/><text x="0.3120%" y="2319.50"></text></g><g><title>bcs::ser::to_bytes (26 samples, 0.01%)</title><rect x="0.0620%" y="2293" width="0.0108%" height="15" fill="rgb(251,118,11)" fg:x="150" fg:w="26"/><text x="0.3120%" y="2303.50"></text></g><g><title>bcs::ser::serialize_into (26 samples, 0.01%)</title><rect x="0.0620%" y="2277" width="0.0108%" height="15" fill="rgb(217,147,25)" fg:x="150" fg:w="26"/><text x="0.3120%" y="2287.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfo&gt;::serialize (26 samples, 0.01%)</title><rect x="0.0620%" y="2261" width="0.0108%" height="15" fill="rgb(247,81,37)" fg:x="150" fg:w="26"/><text x="0.3120%" y="2271.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (26 samples, 0.01%)</title><rect x="0.0620%" y="2245" width="0.0108%" height="15" fill="rgb(209,12,38)" fg:x="150" fg:w="26"/><text x="0.3120%" y="2255.50"></text></g><g><title>aptos_db::ledger_store::LedgerStore::put_transaction_infos (183 samples, 0.08%)</title><rect x="0.0062%" y="2405" width="0.0757%" height="15" fill="rgb(227,1,9)" fg:x="15" fg:w="183"/><text x="0.2562%" y="2415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (55 samples, 0.02%)</title><rect x="0.0591%" y="2389" width="0.0227%" height="15" fill="rgb(248,47,43)" fg:x="143" fg:w="55"/><text x="0.3091%" y="2399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (55 samples, 0.02%)</title><rect x="0.0591%" y="2373" width="0.0227%" height="15" fill="rgb(221,10,30)" fg:x="143" fg:w="55"/><text x="0.3091%" y="2383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (55 samples, 0.02%)</title><rect x="0.0591%" y="2357" width="0.0227%" height="15" fill="rgb(210,229,1)" fg:x="143" fg:w="55"/><text x="0.3091%" y="2367.50"></text></g><g><title>aptos_db::ledger_store::LedgerStore::put_transaction_infos::{{closure}} (55 samples, 0.02%)</title><rect x="0.0591%" y="2341" width="0.0227%" height="15" fill="rgb(222,148,37)" fg:x="143" fg:w="55"/><text x="0.3091%" y="2351.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (55 samples, 0.02%)</title><rect x="0.0591%" y="2325" width="0.0227%" height="15" fill="rgb(234,67,33)" fg:x="143" fg:w="55"/><text x="0.3091%" y="2335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (32 samples, 0.01%)</title><rect x="0.1203%" y="2197" width="0.0132%" height="15" fill="rgb(247,98,35)" fg:x="291" fg:w="32"/><text x="0.3703%" y="2207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (32 samples, 0.01%)</title><rect x="0.1203%" y="2181" width="0.0132%" height="15" fill="rgb(247,138,52)" fg:x="291" fg:w="32"/><text x="0.3703%" y="2191.50"></text></g><g><title>alloc::alloc::realloc (32 samples, 0.01%)</title><rect x="0.1203%" y="2165" width="0.0132%" height="15" fill="rgb(213,79,30)" fg:x="291" fg:w="32"/><text x="0.3703%" y="2175.50"></text></g><g><title>rallocx (28 samples, 0.01%)</title><rect x="0.1220%" y="2149" width="0.0116%" height="15" fill="rgb(246,177,23)" fg:x="295" fg:w="28"/><text x="0.3720%" y="2159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (38 samples, 0.02%)</title><rect x="0.1183%" y="2293" width="0.0157%" height="15" fill="rgb(230,62,27)" fg:x="286" fg:w="38"/><text x="0.3683%" y="2303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (37 samples, 0.02%)</title><rect x="0.1187%" y="2277" width="0.0153%" height="15" fill="rgb(216,154,8)" fg:x="287" fg:w="37"/><text x="0.3687%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (37 samples, 0.02%)</title><rect x="0.1187%" y="2261" width="0.0153%" height="15" fill="rgb(244,35,45)" fg:x="287" fg:w="37"/><text x="0.3687%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.02%)</title><rect x="0.1187%" y="2245" width="0.0153%" height="15" fill="rgb(251,115,12)" fg:x="287" fg:w="37"/><text x="0.3687%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (37 samples, 0.02%)</title><rect x="0.1187%" y="2229" width="0.0153%" height="15" fill="rgb(240,54,50)" fg:x="287" fg:w="37"/><text x="0.3687%" y="2239.50"></text></g><g><title>alloc::raw_vec::finish_grow (33 samples, 0.01%)</title><rect x="0.1203%" y="2213" width="0.0136%" height="15" fill="rgb(233,84,52)" fg:x="291" fg:w="33"/><text x="0.3703%" y="2223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (49 samples, 0.02%)</title><rect x="0.1183%" y="2325" width="0.0203%" height="15" fill="rgb(207,117,47)" fg:x="286" fg:w="49"/><text x="0.3683%" y="2335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (49 samples, 0.02%)</title><rect x="0.1183%" y="2309" width="0.0203%" height="15" fill="rgb(249,43,39)" fg:x="286" fg:w="49"/><text x="0.3683%" y="2319.50"></text></g><g><title>alloc::raw_vec::finish_grow (38 samples, 0.02%)</title><rect x="0.1514%" y="2037" width="0.0157%" height="15" fill="rgb(209,38,44)" fg:x="366" fg:w="38"/><text x="0.4014%" y="2047.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (38 samples, 0.02%)</title><rect x="0.1514%" y="2021" width="0.0157%" height="15" fill="rgb(236,212,23)" fg:x="366" fg:w="38"/><text x="0.4014%" y="2031.50"></text></g><g><title>alloc::alloc::Global::grow_impl (38 samples, 0.02%)</title><rect x="0.1514%" y="2005" width="0.0157%" height="15" fill="rgb(242,79,21)" fg:x="366" fg:w="38"/><text x="0.4014%" y="2015.50"></text></g><g><title>alloc::alloc::realloc (38 samples, 0.02%)</title><rect x="0.1514%" y="1989" width="0.0157%" height="15" fill="rgb(211,96,35)" fg:x="366" fg:w="38"/><text x="0.4014%" y="1999.50"></text></g><g><title>rallocx (30 samples, 0.01%)</title><rect x="0.1547%" y="1973" width="0.0124%" height="15" fill="rgb(253,215,40)" fg:x="374" fg:w="30"/><text x="0.4047%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (40 samples, 0.02%)</title><rect x="0.1509%" y="2101" width="0.0165%" height="15" fill="rgb(211,81,21)" fg:x="365" fg:w="40"/><text x="0.4009%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (40 samples, 0.02%)</title><rect x="0.1509%" y="2085" width="0.0165%" height="15" fill="rgb(208,190,38)" fg:x="365" fg:w="40"/><text x="0.4009%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (40 samples, 0.02%)</title><rect x="0.1509%" y="2069" width="0.0165%" height="15" fill="rgb(235,213,38)" fg:x="365" fg:w="40"/><text x="0.4009%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (40 samples, 0.02%)</title><rect x="0.1509%" y="2053" width="0.0165%" height="15" fill="rgb(237,122,38)" fg:x="365" fg:w="40"/><text x="0.4009%" y="2063.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (42 samples, 0.02%)</title><rect x="0.1509%" y="2197" width="0.0174%" height="15" fill="rgb(244,218,35)" fg:x="365" fg:w="42"/><text x="0.4009%" y="2207.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (42 samples, 0.02%)</title><rect x="0.1509%" y="2181" width="0.0174%" height="15" fill="rgb(240,68,47)" fg:x="365" fg:w="42"/><text x="0.4009%" y="2191.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (42 samples, 0.02%)</title><rect x="0.1509%" y="2165" width="0.0174%" height="15" fill="rgb(210,16,53)" fg:x="365" fg:w="42"/><text x="0.4009%" y="2175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (42 samples, 0.02%)</title><rect x="0.1509%" y="2149" width="0.0174%" height="15" fill="rgb(235,124,12)" fg:x="365" fg:w="42"/><text x="0.4009%" y="2159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (42 samples, 0.02%)</title><rect x="0.1509%" y="2133" width="0.0174%" height="15" fill="rgb(224,169,11)" fg:x="365" fg:w="42"/><text x="0.4009%" y="2143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (42 samples, 0.02%)</title><rect x="0.1509%" y="2117" width="0.0174%" height="15" fill="rgb(250,166,2)" fg:x="365" fg:w="42"/><text x="0.4009%" y="2127.50"></text></g><g><title>&lt;aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::AccessPath&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (65 samples, 0.03%)</title><rect x="0.1501%" y="2261" width="0.0269%" height="15" fill="rgb(242,216,29)" fg:x="363" fg:w="65"/><text x="0.4001%" y="2271.50"></text></g><g><title>serde_bytes::serialize (65 samples, 0.03%)</title><rect x="0.1501%" y="2245" width="0.0269%" height="15" fill="rgb(230,116,27)" fg:x="363" fg:w="65"/><text x="0.4001%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (65 samples, 0.03%)</title><rect x="0.1501%" y="2229" width="0.0269%" height="15" fill="rgb(228,99,48)" fg:x="363" fg:w="65"/><text x="0.4001%" y="2239.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (63 samples, 0.03%)</title><rect x="0.1509%" y="2213" width="0.0261%" height="15" fill="rgb(253,11,6)" fg:x="365" fg:w="63"/><text x="0.4009%" y="2223.50"></text></g><g><title>iralloct (37 samples, 0.02%)</title><rect x="0.1869%" y="1941" width="0.0153%" height="15" fill="rgb(247,143,39)" fg:x="452" fg:w="37"/><text x="0.4369%" y="1951.50"></text></g><g><title>_rjem_je_arena_ralloc (37 samples, 0.02%)</title><rect x="0.1869%" y="1925" width="0.0153%" height="15" fill="rgb(236,97,10)" fg:x="452" fg:w="37"/><text x="0.4369%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (70 samples, 0.03%)</title><rect x="0.1803%" y="2005" width="0.0289%" height="15" fill="rgb(233,208,19)" fg:x="436" fg:w="70"/><text x="0.4303%" y="2015.50"></text></g><g><title>alloc::alloc::Global::grow_impl (70 samples, 0.03%)</title><rect x="0.1803%" y="1989" width="0.0289%" height="15" fill="rgb(216,164,2)" fg:x="436" fg:w="70"/><text x="0.4303%" y="1999.50"></text></g><g><title>alloc::alloc::realloc (70 samples, 0.03%)</title><rect x="0.1803%" y="1973" width="0.0289%" height="15" fill="rgb(220,129,5)" fg:x="436" fg:w="70"/><text x="0.4303%" y="1983.50"></text></g><g><title>rallocx (62 samples, 0.03%)</title><rect x="0.1836%" y="1957" width="0.0256%" height="15" fill="rgb(242,17,10)" fg:x="444" fg:w="62"/><text x="0.4336%" y="1967.50"></text></g><g><title>alloc::raw_vec::finish_grow (86 samples, 0.04%)</title><rect x="0.1782%" y="2021" width="0.0356%" height="15" fill="rgb(242,107,0)" fg:x="431" fg:w="86"/><text x="0.4282%" y="2031.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (94 samples, 0.04%)</title><rect x="0.1774%" y="2085" width="0.0389%" height="15" fill="rgb(251,28,31)" fg:x="429" fg:w="94"/><text x="0.4274%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (94 samples, 0.04%)</title><rect x="0.1774%" y="2069" width="0.0389%" height="15" fill="rgb(233,223,10)" fg:x="429" fg:w="94"/><text x="0.4274%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (94 samples, 0.04%)</title><rect x="0.1774%" y="2053" width="0.0389%" height="15" fill="rgb(215,21,27)" fg:x="429" fg:w="94"/><text x="0.4274%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (94 samples, 0.04%)</title><rect x="0.1774%" y="2037" width="0.0389%" height="15" fill="rgb(232,23,21)" fg:x="429" fg:w="94"/><text x="0.4274%" y="2047.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::encode (266 samples, 0.11%)</title><rect x="0.1174%" y="2341" width="0.1100%" height="15" fill="rgb(244,5,23)" fg:x="284" fg:w="266"/><text x="0.3674%" y="2351.50"></text></g><g><title>bcs::ser::to_bytes (193 samples, 0.08%)</title><rect x="0.1476%" y="2325" width="0.0798%" height="15" fill="rgb(226,81,46)" fg:x="357" fg:w="193"/><text x="0.3976%" y="2335.50"></text></g><g><title>bcs::ser::serialize_into (188 samples, 0.08%)</title><rect x="0.1497%" y="2309" width="0.0777%" height="15" fill="rgb(247,70,30)" fg:x="362" fg:w="188"/><text x="0.3997%" y="2319.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::AccessPath&gt;::serialize (188 samples, 0.08%)</title><rect x="0.1497%" y="2293" width="0.0777%" height="15" fill="rgb(212,68,19)" fg:x="362" fg:w="188"/><text x="0.3997%" y="2303.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (187 samples, 0.08%)</title><rect x="0.1501%" y="2277" width="0.0773%" height="15" fill="rgb(240,187,13)" fg:x="363" fg:w="187"/><text x="0.4001%" y="2287.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (122 samples, 0.05%)</title><rect x="0.1770%" y="2261" width="0.0505%" height="15" fill="rgb(223,113,26)" fg:x="428" fg:w="122"/><text x="0.4270%" y="2271.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (122 samples, 0.05%)</title><rect x="0.1770%" y="2245" width="0.0505%" height="15" fill="rgb(206,192,2)" fg:x="428" fg:w="122"/><text x="0.4270%" y="2255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (122 samples, 0.05%)</title><rect x="0.1770%" y="2229" width="0.0505%" height="15" fill="rgb(241,108,4)" fg:x="428" fg:w="122"/><text x="0.4270%" y="2239.50"></text></g><g><title> 32]&gt;::serialize (122 samples, 0.05%)</title><rect x="0.1770%" y="2213" width="0.0505%" height="15" fill="rgb(247,173,49)" fg:x="428" fg:w="122"/><text x="0.4270%" y="2223.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (122 samples, 0.05%)</title><rect x="0.1770%" y="2197" width="0.0505%" height="15" fill="rgb(224,114,35)" fg:x="428" fg:w="122"/><text x="0.4270%" y="2207.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (122 samples, 0.05%)</title><rect x="0.1770%" y="2181" width="0.0505%" height="15" fill="rgb(245,159,27)" fg:x="428" fg:w="122"/><text x="0.4270%" y="2191.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (122 samples, 0.05%)</title><rect x="0.1770%" y="2165" width="0.0505%" height="15" fill="rgb(245,172,44)" fg:x="428" fg:w="122"/><text x="0.4270%" y="2175.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (122 samples, 0.05%)</title><rect x="0.1770%" y="2149" width="0.0505%" height="15" fill="rgb(236,23,11)" fg:x="428" fg:w="122"/><text x="0.4270%" y="2159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (122 samples, 0.05%)</title><rect x="0.1770%" y="2133" width="0.0505%" height="15" fill="rgb(205,117,38)" fg:x="428" fg:w="122"/><text x="0.4270%" y="2143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (122 samples, 0.05%)</title><rect x="0.1770%" y="2117" width="0.0505%" height="15" fill="rgb(237,72,25)" fg:x="428" fg:w="122"/><text x="0.4270%" y="2127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (122 samples, 0.05%)</title><rect x="0.1770%" y="2101" width="0.0505%" height="15" fill="rgb(244,70,9)" fg:x="428" fg:w="122"/><text x="0.4270%" y="2111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.01%)</title><rect x="0.2163%" y="2085" width="0.0112%" height="15" fill="rgb(217,125,39)" fg:x="523" fg:w="27"/><text x="0.4663%" y="2095.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (30 samples, 0.01%)</title><rect x="0.2283%" y="2181" width="0.0124%" height="15" fill="rgb(235,36,10)" fg:x="552" fg:w="30"/><text x="0.4783%" y="2191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (30 samples, 0.01%)</title><rect x="0.2283%" y="2165" width="0.0124%" height="15" fill="rgb(251,123,47)" fg:x="552" fg:w="30"/><text x="0.4783%" y="2175.50"></text></g><g><title>alloc::alloc::realloc (30 samples, 0.01%)</title><rect x="0.2283%" y="2149" width="0.0124%" height="15" fill="rgb(221,13,13)" fg:x="552" fg:w="30"/><text x="0.4783%" y="2159.50"></text></g><g><title>rallocx (26 samples, 0.01%)</title><rect x="0.2299%" y="2133" width="0.0108%" height="15" fill="rgb(238,131,9)" fg:x="556" fg:w="26"/><text x="0.4799%" y="2143.50"></text></g><g><title>alloc::raw_vec::finish_grow (37 samples, 0.02%)</title><rect x="0.2279%" y="2197" width="0.0153%" height="15" fill="rgb(211,50,8)" fg:x="551" fg:w="37"/><text x="0.4779%" y="2207.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u64 (40 samples, 0.02%)</title><rect x="0.2274%" y="2341" width="0.0165%" height="15" fill="rgb(245,182,24)" fg:x="550" fg:w="40"/><text x="0.4774%" y="2351.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (40 samples, 0.02%)</title><rect x="0.2274%" y="2325" width="0.0165%" height="15" fill="rgb(242,14,37)" fg:x="550" fg:w="40"/><text x="0.4774%" y="2335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (40 samples, 0.02%)</title><rect x="0.2274%" y="2309" width="0.0165%" height="15" fill="rgb(246,228,12)" fg:x="550" fg:w="40"/><text x="0.4774%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (40 samples, 0.02%)</title><rect x="0.2274%" y="2293" width="0.0165%" height="15" fill="rgb(213,55,15)" fg:x="550" fg:w="40"/><text x="0.4774%" y="2303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (40 samples, 0.02%)</title><rect x="0.2274%" y="2277" width="0.0165%" height="15" fill="rgb(209,9,3)" fg:x="550" fg:w="40"/><text x="0.4774%" y="2287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (39 samples, 0.02%)</title><rect x="0.2279%" y="2261" width="0.0161%" height="15" fill="rgb(230,59,30)" fg:x="551" fg:w="39"/><text x="0.4779%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 0.02%)</title><rect x="0.2279%" y="2245" width="0.0161%" height="15" fill="rgb(209,121,21)" fg:x="551" fg:w="39"/><text x="0.4779%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 0.02%)</title><rect x="0.2279%" y="2229" width="0.0161%" height="15" fill="rgb(220,109,13)" fg:x="551" fg:w="39"/><text x="0.4779%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (39 samples, 0.02%)</title><rect x="0.2279%" y="2213" width="0.0161%" height="15" fill="rgb(232,18,1)" fg:x="551" fg:w="39"/><text x="0.4779%" y="2223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (31 samples, 0.01%)</title><rect x="0.2502%" y="2277" width="0.0128%" height="15" fill="rgb(215,41,42)" fg:x="605" fg:w="31"/><text x="0.5002%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.01%)</title><rect x="0.2502%" y="2261" width="0.0128%" height="15" fill="rgb(224,123,36)" fg:x="605" fg:w="31"/><text x="0.5002%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31 samples, 0.01%)</title><rect x="0.2502%" y="2245" width="0.0128%" height="15" fill="rgb(240,125,3)" fg:x="605" fg:w="31"/><text x="0.5002%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (31 samples, 0.01%)</title><rect x="0.2502%" y="2229" width="0.0128%" height="15" fill="rgb(205,98,50)" fg:x="605" fg:w="31"/><text x="0.5002%" y="2239.50"></text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 0.01%)</title><rect x="0.2510%" y="2213" width="0.0120%" height="15" fill="rgb(205,185,37)" fg:x="607" fg:w="29"/><text x="0.5010%" y="2223.50"></text></g><g><title>aptos_db::schema::stale_state_value_index::&lt;impl aptos_schemadb::schema::KeyCodec&lt;aptos_db::schema::stale_state_value_index::StaleStateValueIndexSchema&gt; for aptos_types::state_store::state_value::StaleStateValueIndex&gt;::encode_key (355 samples, 0.15%)</title><rect x="0.1166%" y="2357" width="0.1468%" height="15" fill="rgb(238,207,15)" fg:x="282" fg:w="355"/><text x="0.3666%" y="2367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (32 samples, 0.01%)</title><rect x="0.2502%" y="2341" width="0.0132%" height="15" fill="rgb(213,199,42)" fg:x="605" fg:w="32"/><text x="0.5002%" y="2351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (32 samples, 0.01%)</title><rect x="0.2502%" y="2325" width="0.0132%" height="15" fill="rgb(235,201,11)" fg:x="605" fg:w="32"/><text x="0.5002%" y="2335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (32 samples, 0.01%)</title><rect x="0.2502%" y="2309" width="0.0132%" height="15" fill="rgb(207,46,11)" fg:x="605" fg:w="32"/><text x="0.5002%" y="2319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (32 samples, 0.01%)</title><rect x="0.2502%" y="2293" width="0.0132%" height="15" fill="rgb(241,35,35)" fg:x="605" fg:w="32"/><text x="0.5002%" y="2303.50"></text></g><g><title>aptos_infallible::mutex::Mutex&lt;T&gt;::lock (47 samples, 0.02%)</title><rect x="0.2634%" y="2357" width="0.0194%" height="15" fill="rgb(243,32,47)" fg:x="637" fg:w="47"/><text x="0.5134%" y="2367.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (47 samples, 0.02%)</title><rect x="0.2634%" y="2341" width="0.0194%" height="15" fill="rgb(247,202,23)" fg:x="637" fg:w="47"/><text x="0.5134%" y="2351.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (47 samples, 0.02%)</title><rect x="0.2634%" y="2325" width="0.0194%" height="15" fill="rgb(219,102,11)" fg:x="637" fg:w="47"/><text x="0.5134%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::Histogram&gt; (25 samples, 0.01%)</title><rect x="0.2829%" y="2357" width="0.0103%" height="15" fill="rgb(243,110,44)" fg:x="684" fg:w="25"/><text x="0.5329%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;prometheus::histogram::HistogramCore&gt;&gt; (25 samples, 0.01%)</title><rect x="0.2829%" y="2341" width="0.0103%" height="15" fill="rgb(222,74,54)" fg:x="684" fg:w="25"/><text x="0.5329%" y="2351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.01%)</title><rect x="0.2829%" y="2325" width="0.0103%" height="15" fill="rgb(216,99,12)" fg:x="684" fg:w="25"/><text x="0.5329%" y="2335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (25 samples, 0.01%)</title><rect x="0.2829%" y="2309" width="0.0103%" height="15" fill="rgb(226,22,26)" fg:x="684" fg:w="25"/><text x="0.5329%" y="2319.50"></text></g><g><title>core::sync::atomic::atomic_sub (25 samples, 0.01%)</title><rect x="0.2829%" y="2293" width="0.0103%" height="15" fill="rgb(217,163,10)" fg:x="684" fg:w="25"/><text x="0.5329%" y="2303.50"></text></g><g><title>prometheus::histogram::Histogram::observe (77 samples, 0.03%)</title><rect x="0.2932%" y="2309" width="0.0318%" height="15" fill="rgb(213,25,53)" fg:x="709" fg:w="77"/><text x="0.5432%" y="2319.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (77 samples, 0.03%)</title><rect x="0.2932%" y="2293" width="0.0318%" height="15" fill="rgb(252,105,26)" fg:x="709" fg:w="77"/><text x="0.5432%" y="2303.50"></text></g><g><title>prometheus::histogram::ShardAndCount::inc (50 samples, 0.02%)</title><rect x="0.3044%" y="2277" width="0.0207%" height="15" fill="rgb(220,39,43)" fg:x="736" fg:w="50"/><text x="0.5544%" y="2287.50"></text></g><g><title>prometheus::histogram::ShardAndCount::inc_by (50 samples, 0.02%)</title><rect x="0.3044%" y="2261" width="0.0207%" height="15" fill="rgb(229,68,48)" fg:x="736" fg:w="50"/><text x="0.5544%" y="2271.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (50 samples, 0.02%)</title><rect x="0.3044%" y="2245" width="0.0207%" height="15" fill="rgb(252,8,32)" fg:x="736" fg:w="50"/><text x="0.5544%" y="2255.50"></text></g><g><title>core::sync::atomic::atomic_add (50 samples, 0.02%)</title><rect x="0.3044%" y="2229" width="0.0207%" height="15" fill="rgb(223,20,43)" fg:x="736" fg:w="50"/><text x="0.5544%" y="2239.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (141 samples, 0.06%)</title><rect x="0.2932%" y="2341" width="0.0583%" height="15" fill="rgb(229,81,49)" fg:x="709" fg:w="141"/><text x="0.5432%" y="2351.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (141 samples, 0.06%)</title><rect x="0.2932%" y="2325" width="0.0583%" height="15" fill="rgb(236,28,36)" fg:x="709" fg:w="141"/><text x="0.5432%" y="2335.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (64 samples, 0.03%)</title><rect x="0.3250%" y="2309" width="0.0265%" height="15" fill="rgb(249,185,26)" fg:x="786" fg:w="64"/><text x="0.5750%" y="2319.50"></text></g><g><title>prometheus::histogram::duration_to_seconds (56 samples, 0.02%)</title><rect x="0.3283%" y="2293" width="0.0232%" height="15" fill="rgb(249,174,33)" fg:x="794" fg:w="56"/><text x="0.5783%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (154 samples, 0.06%)</title><rect x="0.2932%" y="2357" width="0.0637%" height="15" fill="rgb(233,201,37)" fg:x="709" fg:w="154"/><text x="0.5432%" y="2367.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (75 samples, 0.03%)</title><rect x="0.3697%" y="2309" width="0.0310%" height="15" fill="rgb(221,78,26)" fg:x="894" fg:w="75"/><text x="0.6197%" y="2319.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (75 samples, 0.03%)</title><rect x="0.3697%" y="2293" width="0.0310%" height="15" fill="rgb(250,127,30)" fg:x="894" fg:w="75"/><text x="0.6197%" y="2303.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (75 samples, 0.03%)</title><rect x="0.3697%" y="2277" width="0.0310%" height="15" fill="rgb(230,49,44)" fg:x="894" fg:w="75"/><text x="0.6197%" y="2287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (75 samples, 0.03%)</title><rect x="0.3697%" y="2261" width="0.0310%" height="15" fill="rgb(229,67,23)" fg:x="894" fg:w="75"/><text x="0.6197%" y="2271.50"></text></g><g><title>core::sync::atomic::atomic_load (75 samples, 0.03%)</title><rect x="0.3697%" y="2245" width="0.0310%" height="15" fill="rgb(249,83,47)" fg:x="894" fg:w="75"/><text x="0.6197%" y="2255.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (109 samples, 0.05%)</title><rect x="0.3651%" y="2357" width="0.0451%" height="15" fill="rgb(215,43,3)" fg:x="883" fg:w="109"/><text x="0.6151%" y="2367.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (109 samples, 0.05%)</title><rect x="0.3651%" y="2341" width="0.0451%" height="15" fill="rgb(238,154,13)" fg:x="883" fg:w="109"/><text x="0.6151%" y="2351.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (109 samples, 0.05%)</title><rect x="0.3651%" y="2325" width="0.0451%" height="15" fill="rgb(219,56,2)" fg:x="883" fg:w="109"/><text x="0.6151%" y="2335.50"></text></g><g><title>hashbrown::map::make_hash (33 samples, 0.01%)</title><rect x="0.4102%" y="2325" width="0.0136%" height="15" fill="rgb(233,0,4)" fg:x="992" fg:w="33"/><text x="0.6602%" y="2335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (33 samples, 0.01%)</title><rect x="0.4102%" y="2309" width="0.0136%" height="15" fill="rgb(235,30,7)" fg:x="992" fg:w="33"/><text x="0.6602%" y="2319.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (794 samples, 0.33%)</title><rect x="0.1059%" y="2373" width="0.3283%" height="15" fill="rgb(250,79,13)" fg:x="256" fg:w="794"/><text x="0.3559%" y="2383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (58 samples, 0.02%)</title><rect x="0.4102%" y="2357" width="0.0240%" height="15" fill="rgb(211,146,34)" fg:x="992" fg:w="58"/><text x="0.6602%" y="2367.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (58 samples, 0.02%)</title><rect x="0.4102%" y="2341" width="0.0240%" height="15" fill="rgb(228,22,38)" fg:x="992" fg:w="58"/><text x="0.6602%" y="2351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 0.01%)</title><rect x="0.4239%" y="2325" width="0.0103%" height="15" fill="rgb(235,168,5)" fg:x="1025" fg:w="25"/><text x="0.6739%" y="2335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (25 samples, 0.01%)</title><rect x="0.4239%" y="2309" width="0.0103%" height="15" fill="rgb(221,155,16)" fg:x="1025" fg:w="25"/><text x="0.6739%" y="2319.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (39 samples, 0.02%)</title><rect x="0.4437%" y="1861" width="0.0161%" height="15" fill="rgb(215,215,53)" fg:x="1073" fg:w="39"/><text x="0.6937%" y="1871.50"></text></g><g><title>hashbrown::map::make_hash (93 samples, 0.04%)</title><rect x="0.4408%" y="1925" width="0.0385%" height="15" fill="rgb(223,4,10)" fg:x="1066" fg:w="93"/><text x="0.6908%" y="1935.50"></text></g><g><title>core::hash::BuildHasher::hash_one (93 samples, 0.04%)</title><rect x="0.4408%" y="1909" width="0.0385%" height="15" fill="rgb(234,103,6)" fg:x="1066" fg:w="93"/><text x="0.6908%" y="1919.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (87 samples, 0.04%)</title><rect x="0.4433%" y="1893" width="0.0360%" height="15" fill="rgb(227,97,0)" fg:x="1072" fg:w="87"/><text x="0.6933%" y="1903.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (87 samples, 0.04%)</title><rect x="0.4433%" y="1877" width="0.0360%" height="15" fill="rgb(234,150,53)" fg:x="1072" fg:w="87"/><text x="0.6933%" y="1887.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (47 samples, 0.02%)</title><rect x="0.4598%" y="1861" width="0.0194%" height="15" fill="rgb(228,201,54)" fg:x="1112" fg:w="47"/><text x="0.7098%" y="1871.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.02%)</title><rect x="0.4632%" y="1845" width="0.0161%" height="15" fill="rgb(222,22,37)" fg:x="1120" fg:w="39"/><text x="0.7132%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (125 samples, 0.05%)</title><rect x="0.4371%" y="2373" width="0.0517%" height="15" fill="rgb(237,53,32)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2383.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (125 samples, 0.05%)</title><rect x="0.4371%" y="2357" width="0.0517%" height="15" fill="rgb(233,25,53)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2367.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (125 samples, 0.05%)</title><rect x="0.4371%" y="2341" width="0.0517%" height="15" fill="rgb(210,40,34)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2351.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (125 samples, 0.05%)</title><rect x="0.4371%" y="2325" width="0.0517%" height="15" fill="rgb(241,220,44)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2335.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (125 samples, 0.05%)</title><rect x="0.4371%" y="2309" width="0.0517%" height="15" fill="rgb(235,28,35)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (125 samples, 0.05%)</title><rect x="0.4371%" y="2293" width="0.0517%" height="15" fill="rgb(210,56,17)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.05%)</title><rect x="0.4371%" y="2277" width="0.0517%" height="15" fill="rgb(224,130,29)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.05%)</title><rect x="0.4371%" y="2261" width="0.0517%" height="15" fill="rgb(235,212,8)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2271.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.05%)</title><rect x="0.4371%" y="2245" width="0.0517%" height="15" fill="rgb(223,33,50)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2255.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.05%)</title><rect x="0.4371%" y="2229" width="0.0517%" height="15" fill="rgb(219,149,13)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2239.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (125 samples, 0.05%)</title><rect x="0.4371%" y="2213" width="0.0517%" height="15" fill="rgb(250,156,29)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2223.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.05%)</title><rect x="0.4371%" y="2197" width="0.0517%" height="15" fill="rgb(216,193,19)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.05%)</title><rect x="0.4371%" y="2181" width="0.0517%" height="15" fill="rgb(216,135,14)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.05%)</title><rect x="0.4371%" y="2165" width="0.0517%" height="15" fill="rgb(241,47,5)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2175.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (125 samples, 0.05%)</title><rect x="0.4371%" y="2149" width="0.0517%" height="15" fill="rgb(233,42,35)" fg:x="1057" fg:w="125"/><text x="0.6871%" y="2159.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (116 samples, 0.05%)</title><rect x="0.4408%" y="2133" width="0.0480%" height="15" fill="rgb(231,13,6)" fg:x="1066" fg:w="116"/><text x="0.6908%" y="2143.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (116 samples, 0.05%)</title><rect x="0.4408%" y="2117" width="0.0480%" height="15" fill="rgb(207,181,40)" fg:x="1066" fg:w="116"/><text x="0.6908%" y="2127.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (116 samples, 0.05%)</title><rect x="0.4408%" y="2101" width="0.0480%" height="15" fill="rgb(254,173,49)" fg:x="1066" fg:w="116"/><text x="0.6908%" y="2111.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (116 samples, 0.05%)</title><rect x="0.4408%" y="2085" width="0.0480%" height="15" fill="rgb(221,1,38)" fg:x="1066" fg:w="116"/><text x="0.6908%" y="2095.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (116 samples, 0.05%)</title><rect x="0.4408%" y="2069" width="0.0480%" height="15" fill="rgb(206,124,46)" fg:x="1066" fg:w="116"/><text x="0.6908%" y="2079.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (116 samples, 0.05%)</title><rect x="0.4408%" y="2053" width="0.0480%" height="15" fill="rgb(249,21,11)" fg:x="1066" fg:w="116"/><text x="0.6908%" y="2063.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (116 samples, 0.05%)</title><rect x="0.4408%" y="2037" width="0.0480%" height="15" fill="rgb(222,201,40)" fg:x="1066" fg:w="116"/><text x="0.6908%" y="2047.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (116 samples, 0.05%)</title><rect x="0.4408%" y="2021" width="0.0480%" height="15" fill="rgb(235,61,29)" fg:x="1066" fg:w="116"/><text x="0.6908%" y="2031.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (116 samples, 0.05%)</title><rect x="0.4408%" y="2005" width="0.0480%" height="15" fill="rgb(219,207,3)" fg:x="1066" fg:w="116"/><text x="0.6908%" y="2015.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (116 samples, 0.05%)</title><rect x="0.4408%" y="1989" width="0.0480%" height="15" fill="rgb(222,56,46)" fg:x="1066" fg:w="116"/><text x="0.6908%" y="1999.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (116 samples, 0.05%)</title><rect x="0.4408%" y="1973" width="0.0480%" height="15" fill="rgb(239,76,54)" fg:x="1066" fg:w="116"/><text x="0.6908%" y="1983.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (116 samples, 0.05%)</title><rect x="0.4408%" y="1957" width="0.0480%" height="15" fill="rgb(231,124,27)" fg:x="1066" fg:w="116"/><text x="0.6908%" y="1967.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (116 samples, 0.05%)</title><rect x="0.4408%" y="1941" width="0.0480%" height="15" fill="rgb(249,195,6)" fg:x="1066" fg:w="116"/><text x="0.6908%" y="1951.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (27 samples, 0.01%)</title><rect x="0.5008%" y="2293" width="0.0112%" height="15" fill="rgb(237,174,47)" fg:x="1211" fg:w="27"/><text x="0.7508%" y="2303.50"></text></g><g><title>hashbrown::map::make_hash (44 samples, 0.02%)</title><rect x="0.4971%" y="2341" width="0.0182%" height="15" fill="rgb(206,201,31)" fg:x="1202" fg:w="44"/><text x="0.7471%" y="2351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (44 samples, 0.02%)</title><rect x="0.4971%" y="2325" width="0.0182%" height="15" fill="rgb(231,57,52)" fg:x="1202" fg:w="44"/><text x="0.7471%" y="2335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (36 samples, 0.01%)</title><rect x="0.5004%" y="2309" width="0.0149%" height="15" fill="rgb(248,177,22)" fg:x="1210" fg:w="36"/><text x="0.7504%" y="2319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (72 samples, 0.03%)</title><rect x="0.4933%" y="2373" width="0.0298%" height="15" fill="rgb(215,211,37)" fg:x="1193" fg:w="72"/><text x="0.7433%" y="2383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (72 samples, 0.03%)</title><rect x="0.4933%" y="2357" width="0.0298%" height="15" fill="rgb(241,128,51)" fg:x="1193" fg:w="72"/><text x="0.7433%" y="2367.50"></text></g><g><title>aptos_db::state_store::StateStore::put_value_sets (1,080 samples, 0.45%)</title><rect x="0.0819%" y="2405" width="0.4466%" height="15" fill="rgb(227,165,31)" fg:x="198" fg:w="1080"/><text x="0.3319%" y="2415.50"></text></g><g><title>aptos_db::state_store::StateStore::put_stats_and_indices (1,080 samples, 0.45%)</title><rect x="0.0819%" y="2389" width="0.4466%" height="15" fill="rgb(228,167,24)" fg:x="198" fg:w="1080"/><text x="0.3319%" y="2399.50"></text></g><g><title>&lt;aptos_crypto::hash::TransactionAccumulatorHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (36 samples, 0.01%)</title><rect x="0.5368%" y="2053" width="0.0149%" height="15" fill="rgb(228,143,12)" fg:x="1298" fg:w="36"/><text x="0.7868%" y="2063.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (36 samples, 0.01%)</title><rect x="0.5368%" y="2037" width="0.0149%" height="15" fill="rgb(249,149,8)" fg:x="1298" fg:w="36"/><text x="0.7868%" y="2047.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (36 samples, 0.01%)</title><rect x="0.5368%" y="2021" width="0.0149%" height="15" fill="rgb(243,35,44)" fg:x="1298" fg:w="36"/><text x="0.7868%" y="2031.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (35 samples, 0.01%)</title><rect x="0.5372%" y="2005" width="0.0145%" height="15" fill="rgb(246,89,9)" fg:x="1299" fg:w="35"/><text x="0.7872%" y="2015.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (35 samples, 0.01%)</title><rect x="0.5372%" y="1989" width="0.0145%" height="15" fill="rgb(233,213,13)" fg:x="1299" fg:w="35"/><text x="0.7872%" y="1999.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (33 samples, 0.01%)</title><rect x="0.5380%" y="1973" width="0.0136%" height="15" fill="rgb(233,141,41)" fg:x="1301" fg:w="33"/><text x="0.7880%" y="1983.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (33 samples, 0.01%)</title><rect x="0.5380%" y="1957" width="0.0136%" height="15" fill="rgb(239,167,4)" fg:x="1301" fg:w="33"/><text x="0.7880%" y="1967.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (33 samples, 0.01%)</title><rect x="0.5380%" y="1941" width="0.0136%" height="15" fill="rgb(209,217,16)" fg:x="1301" fg:w="33"/><text x="0.7880%" y="1951.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (33 samples, 0.01%)</title><rect x="0.5380%" y="1925" width="0.0136%" height="15" fill="rgb(219,88,35)" fg:x="1301" fg:w="33"/><text x="0.7880%" y="1935.50"></text></g><g><title>aptos_accumulator::MerkleAccumulatorView&lt;R,H&gt;::hash_internal_node (39 samples, 0.02%)</title><rect x="0.5359%" y="2085" width="0.0161%" height="15" fill="rgb(220,193,23)" fg:x="1296" fg:w="39"/><text x="0.7859%" y="2095.50"></text></g><g><title>&lt;aptos_types::proof::MerkleTreeInternalNode&lt;H&gt; as aptos_crypto::hash::CryptoHash&gt;::hash (39 samples, 0.02%)</title><rect x="0.5359%" y="2069" width="0.0161%" height="15" fill="rgb(230,90,52)" fg:x="1296" fg:w="39"/><text x="0.7859%" y="2079.50"></text></g><g><title>aptos_accumulator::MerkleAccumulator&lt;R,H&gt;::append (42 samples, 0.02%)</title><rect x="0.5351%" y="2117" width="0.0174%" height="15" fill="rgb(252,106,19)" fg:x="1294" fg:w="42"/><text x="0.7851%" y="2127.50"></text></g><g><title>aptos_accumulator::MerkleAccumulatorView&lt;R,H&gt;::append (42 samples, 0.02%)</title><rect x="0.5351%" y="2101" width="0.0174%" height="15" fill="rgb(206,74,20)" fg:x="1294" fg:w="42"/><text x="0.7851%" y="2111.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (55 samples, 0.02%)</title><rect x="0.5529%" y="1845" width="0.0227%" height="15" fill="rgb(230,138,44)" fg:x="1337" fg:w="55"/><text x="0.8029%" y="1855.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (55 samples, 0.02%)</title><rect x="0.5529%" y="1829" width="0.0227%" height="15" fill="rgb(235,182,43)" fg:x="1337" fg:w="55"/><text x="0.8029%" y="1839.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (55 samples, 0.02%)</title><rect x="0.5529%" y="1813" width="0.0227%" height="15" fill="rgb(242,16,51)" fg:x="1337" fg:w="55"/><text x="0.8029%" y="1823.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (55 samples, 0.02%)</title><rect x="0.5529%" y="1797" width="0.0227%" height="15" fill="rgb(248,9,4)" fg:x="1337" fg:w="55"/><text x="0.8029%" y="1807.50"></text></g><g><title>&lt;aptos_types::contract_event::ContractEventHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (59 samples, 0.02%)</title><rect x="0.5525%" y="1925" width="0.0244%" height="15" fill="rgb(210,31,22)" fg:x="1336" fg:w="59"/><text x="0.8025%" y="1935.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (59 samples, 0.02%)</title><rect x="0.5525%" y="1909" width="0.0244%" height="15" fill="rgb(239,54,39)" fg:x="1336" fg:w="59"/><text x="0.8025%" y="1919.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (58 samples, 0.02%)</title><rect x="0.5529%" y="1893" width="0.0240%" height="15" fill="rgb(230,99,41)" fg:x="1337" fg:w="58"/><text x="0.8029%" y="1903.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (58 samples, 0.02%)</title><rect x="0.5529%" y="1877" width="0.0240%" height="15" fill="rgb(253,106,12)" fg:x="1337" fg:w="58"/><text x="0.8029%" y="1887.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (58 samples, 0.02%)</title><rect x="0.5529%" y="1861" width="0.0240%" height="15" fill="rgb(213,46,41)" fg:x="1337" fg:w="58"/><text x="0.8029%" y="1871.50"></text></g><g><title>&lt;aptos_types::contract_event::_::&lt;impl serde::ser::Serialize for aptos_types::contract_event::ContractEventV0&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (121 samples, 0.05%)</title><rect x="0.5769%" y="1829" width="0.0500%" height="15" fill="rgb(215,133,35)" fg:x="1395" fg:w="121"/><text x="0.8269%" y="1839.50"></text></g><g><title>serde_bytes::serialize (121 samples, 0.05%)</title><rect x="0.5769%" y="1813" width="0.0500%" height="15" fill="rgb(213,28,5)" fg:x="1395" fg:w="121"/><text x="0.8269%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (121 samples, 0.05%)</title><rect x="0.5769%" y="1797" width="0.0500%" height="15" fill="rgb(215,77,49)" fg:x="1395" fg:w="121"/><text x="0.8269%" y="1807.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (120 samples, 0.05%)</title><rect x="0.5773%" y="1781" width="0.0496%" height="15" fill="rgb(248,100,22)" fg:x="1396" fg:w="120"/><text x="0.8273%" y="1791.50"></text></g><g><title>std::io::Write::write_all (118 samples, 0.05%)</title><rect x="0.5781%" y="1765" width="0.0488%" height="15" fill="rgb(208,67,9)" fg:x="1398" fg:w="118"/><text x="0.8281%" y="1775.50"></text></g><g><title>&lt;aptos_types::contract_event::ContractEventHasher as std::io::Write&gt;::write (118 samples, 0.05%)</title><rect x="0.5781%" y="1749" width="0.0488%" height="15" fill="rgb(219,133,21)" fg:x="1398" fg:w="118"/><text x="0.8281%" y="1759.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (118 samples, 0.05%)</title><rect x="0.5781%" y="1733" width="0.0488%" height="15" fill="rgb(246,46,29)" fg:x="1398" fg:w="118"/><text x="0.8281%" y="1743.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (110 samples, 0.05%)</title><rect x="0.5814%" y="1717" width="0.0455%" height="15" fill="rgb(246,185,52)" fg:x="1406" fg:w="110"/><text x="0.8314%" y="1727.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (110 samples, 0.05%)</title><rect x="0.5814%" y="1701" width="0.0455%" height="15" fill="rgb(252,136,11)" fg:x="1406" fg:w="110"/><text x="0.8314%" y="1711.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (110 samples, 0.05%)</title><rect x="0.5814%" y="1685" width="0.0455%" height="15" fill="rgb(219,138,53)" fg:x="1406" fg:w="110"/><text x="0.8314%" y="1695.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (52 samples, 0.02%)</title><rect x="0.6054%" y="1669" width="0.0215%" height="15" fill="rgb(211,51,23)" fg:x="1464" fg:w="52"/><text x="0.8554%" y="1679.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventKey&gt;::serialize (27 samples, 0.01%)</title><rect x="0.6269%" y="1829" width="0.0112%" height="15" fill="rgb(247,221,28)" fg:x="1516" fg:w="27"/><text x="0.8769%" y="1839.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 0.01%)</title><rect x="0.6269%" y="1813" width="0.0112%" height="15" fill="rgb(251,222,45)" fg:x="1516" fg:w="27"/><text x="0.8769%" y="1823.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (27 samples, 0.01%)</title><rect x="0.6269%" y="1797" width="0.0112%" height="15" fill="rgb(217,162,53)" fg:x="1516" fg:w="27"/><text x="0.8769%" y="1807.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (27 samples, 0.01%)</title><rect x="0.6269%" y="1781" width="0.0112%" height="15" fill="rgb(229,93,14)" fg:x="1516" fg:w="27"/><text x="0.8769%" y="1791.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (27 samples, 0.01%)</title><rect x="0.6269%" y="1765" width="0.0112%" height="15" fill="rgb(209,67,49)" fg:x="1516" fg:w="27"/><text x="0.8769%" y="1775.50"></text></g><g><title> 32]&gt;::serialize (27 samples, 0.01%)</title><rect x="0.6269%" y="1749" width="0.0112%" height="15" fill="rgb(213,87,29)" fg:x="1516" fg:w="27"/><text x="0.8769%" y="1759.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (27 samples, 0.01%)</title><rect x="0.6269%" y="1733" width="0.0112%" height="15" fill="rgb(205,151,52)" fg:x="1516" fg:w="27"/><text x="0.8769%" y="1743.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (27 samples, 0.01%)</title><rect x="0.6269%" y="1717" width="0.0112%" height="15" fill="rgb(253,215,39)" fg:x="1516" fg:w="27"/><text x="0.8769%" y="1727.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (27 samples, 0.01%)</title><rect x="0.6269%" y="1701" width="0.0112%" height="15" fill="rgb(221,220,41)" fg:x="1516" fg:w="27"/><text x="0.8769%" y="1711.50"></text></g><g><title>std::io::Write::write_all (26 samples, 0.01%)</title><rect x="0.6273%" y="1685" width="0.0108%" height="15" fill="rgb(218,133,21)" fg:x="1517" fg:w="26"/><text x="0.8773%" y="1695.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionHasher as std::io::Write&gt;::write (26 samples, 0.01%)</title><rect x="0.6273%" y="1669" width="0.0108%" height="15" fill="rgb(221,193,43)" fg:x="1517" fg:w="26"/><text x="0.8773%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (210 samples, 0.09%)</title><rect x="0.5525%" y="2117" width="0.0868%" height="15" fill="rgb(240,128,52)" fg:x="1336" fg:w="210"/><text x="0.8025%" y="2127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (210 samples, 0.09%)</title><rect x="0.5525%" y="2101" width="0.0868%" height="15" fill="rgb(253,114,12)" fg:x="1336" fg:w="210"/><text x="0.8025%" y="2111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (210 samples, 0.09%)</title><rect x="0.5525%" y="2085" width="0.0868%" height="15" fill="rgb(215,223,47)" fg:x="1336" fg:w="210"/><text x="0.8025%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (210 samples, 0.09%)</title><rect x="0.5525%" y="2069" width="0.0868%" height="15" fill="rgb(248,225,23)" fg:x="1336" fg:w="210"/><text x="0.8025%" y="2079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (210 samples, 0.09%)</title><rect x="0.5525%" y="2053" width="0.0868%" height="15" fill="rgb(250,108,0)" fg:x="1336" fg:w="210"/><text x="0.8025%" y="2063.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (210 samples, 0.09%)</title><rect x="0.5525%" y="2037" width="0.0868%" height="15" fill="rgb(228,208,7)" fg:x="1336" fg:w="210"/><text x="0.8025%" y="2047.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (210 samples, 0.09%)</title><rect x="0.5525%" y="2021" width="0.0868%" height="15" fill="rgb(244,45,10)" fg:x="1336" fg:w="210"/><text x="0.8025%" y="2031.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (210 samples, 0.09%)</title><rect x="0.5525%" y="2005" width="0.0868%" height="15" fill="rgb(207,125,25)" fg:x="1336" fg:w="210"/><text x="0.8025%" y="2015.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (210 samples, 0.09%)</title><rect x="0.5525%" y="1989" width="0.0868%" height="15" fill="rgb(210,195,18)" fg:x="1336" fg:w="210"/><text x="0.8025%" y="1999.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (210 samples, 0.09%)</title><rect x="0.5525%" y="1973" width="0.0868%" height="15" fill="rgb(249,80,12)" fg:x="1336" fg:w="210"/><text x="0.8025%" y="1983.50"></text></g><g><title>core::ops::function::FnMut::call_mut (210 samples, 0.09%)</title><rect x="0.5525%" y="1957" width="0.0868%" height="15" fill="rgb(221,65,9)" fg:x="1336" fg:w="210"/><text x="0.8025%" y="1967.50"></text></g><g><title>&lt;aptos_types::contract_event::ContractEvent as aptos_crypto::hash::CryptoHash&gt;::hash (210 samples, 0.09%)</title><rect x="0.5525%" y="1941" width="0.0868%" height="15" fill="rgb(235,49,36)" fg:x="1336" fg:w="210"/><text x="0.8025%" y="1951.50"></text></g><g><title>bcs::ser::serialize_into (151 samples, 0.06%)</title><rect x="0.5769%" y="1925" width="0.0624%" height="15" fill="rgb(225,32,20)" fg:x="1395" fg:w="151"/><text x="0.8269%" y="1935.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (151 samples, 0.06%)</title><rect x="0.5769%" y="1909" width="0.0624%" height="15" fill="rgb(215,141,46)" fg:x="1395" fg:w="151"/><text x="0.8269%" y="1919.50"></text></g><g><title>aptos_types::contract_event::_::&lt;impl serde::ser::Serialize for aptos_types::contract_event::ContractEvent&gt;::serialize (151 samples, 0.06%)</title><rect x="0.5769%" y="1893" width="0.0624%" height="15" fill="rgb(250,160,47)" fg:x="1395" fg:w="151"/><text x="0.8269%" y="1903.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (151 samples, 0.06%)</title><rect x="0.5769%" y="1877" width="0.0624%" height="15" fill="rgb(216,222,40)" fg:x="1395" fg:w="151"/><text x="0.8269%" y="1887.50"></text></g><g><title>aptos_types::contract_event::_::&lt;impl serde::ser::Serialize for aptos_types::contract_event::ContractEventV0&gt;::serialize (151 samples, 0.06%)</title><rect x="0.5769%" y="1861" width="0.0624%" height="15" fill="rgb(234,217,39)" fg:x="1395" fg:w="151"/><text x="0.8269%" y="1871.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (151 samples, 0.06%)</title><rect x="0.5769%" y="1845" width="0.0624%" height="15" fill="rgb(207,178,40)" fg:x="1395" fg:w="151"/><text x="0.8269%" y="1855.50"></text></g><g><title>prometheus::histogram::Histogram::observe (35 samples, 0.01%)</title><rect x="0.6501%" y="1989" width="0.0145%" height="15" fill="rgb(221,136,13)" fg:x="1572" fg:w="35"/><text x="0.9001%" y="1999.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (35 samples, 0.01%)</title><rect x="0.6501%" y="1973" width="0.0145%" height="15" fill="rgb(249,199,10)" fg:x="1572" fg:w="35"/><text x="0.9001%" y="1983.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="0.6501%" y="2021" width="0.0149%" height="15" fill="rgb(249,222,13)" fg:x="1572" fg:w="36"/><text x="0.9001%" y="2031.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (36 samples, 0.01%)</title><rect x="0.6501%" y="2005" width="0.0149%" height="15" fill="rgb(244,185,38)" fg:x="1572" fg:w="36"/><text x="0.9001%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (38 samples, 0.02%)</title><rect x="0.6501%" y="2037" width="0.0157%" height="15" fill="rgb(236,202,9)" fg:x="1572" fg:w="38"/><text x="0.9001%" y="2047.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (108 samples, 0.04%)</title><rect x="0.6393%" y="2101" width="0.0447%" height="15" fill="rgb(250,229,37)" fg:x="1546" fg:w="108"/><text x="0.8893%" y="2111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (108 samples, 0.04%)</title><rect x="0.6393%" y="2085" width="0.0447%" height="15" fill="rgb(206,174,23)" fg:x="1546" fg:w="108"/><text x="0.8893%" y="2095.50"></text></g><g><title>aptos_db::event_store::EventStore::put_events::{{closure}} (108 samples, 0.04%)</title><rect x="0.6393%" y="2069" width="0.0447%" height="15" fill="rgb(211,33,43)" fg:x="1546" fg:w="108"/><text x="0.8893%" y="2079.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (108 samples, 0.04%)</title><rect x="0.6393%" y="2053" width="0.0447%" height="15" fill="rgb(245,58,50)" fg:x="1546" fg:w="108"/><text x="0.8893%" y="2063.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventKey&gt;::serialize (29 samples, 0.01%)</title><rect x="0.6881%" y="1893" width="0.0120%" height="15" fill="rgb(244,68,36)" fg:x="1664" fg:w="29"/><text x="0.9381%" y="1903.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 0.01%)</title><rect x="0.6881%" y="1877" width="0.0120%" height="15" fill="rgb(232,229,15)" fg:x="1664" fg:w="29"/><text x="0.9381%" y="1887.50"></text></g><g><title>aptos_types::contract_event::_::&lt;impl serde::ser::Serialize for aptos_types::contract_event::ContractEventV0&gt;::serialize (36 samples, 0.01%)</title><rect x="0.6860%" y="1925" width="0.0149%" height="15" fill="rgb(254,30,23)" fg:x="1659" fg:w="36"/><text x="0.9360%" y="1935.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (36 samples, 0.01%)</title><rect x="0.6860%" y="1909" width="0.0149%" height="15" fill="rgb(235,160,14)" fg:x="1659" fg:w="36"/><text x="0.9360%" y="1919.50"></text></g><g><title>aptos_db::schema::event::&lt;impl aptos_schemadb::schema::ValueCodec&lt;aptos_db::schema::event::EventSchema&gt; for aptos_types::contract_event::ContractEvent&gt;::encode_value (37 samples, 0.02%)</title><rect x="0.6860%" y="2005" width="0.0153%" height="15" fill="rgb(212,155,44)" fg:x="1659" fg:w="37"/><text x="0.9360%" y="2015.50"></text></g><g><title>bcs::ser::to_bytes (37 samples, 0.02%)</title><rect x="0.6860%" y="1989" width="0.0153%" height="15" fill="rgb(226,2,50)" fg:x="1659" fg:w="37"/><text x="0.9360%" y="1999.50"></text></g><g><title>bcs::ser::serialize_into (37 samples, 0.02%)</title><rect x="0.6860%" y="1973" width="0.0153%" height="15" fill="rgb(234,177,6)" fg:x="1659" fg:w="37"/><text x="0.9360%" y="1983.50"></text></g><g><title>aptos_types::contract_event::_::&lt;impl serde::ser::Serialize for aptos_types::contract_event::ContractEvent&gt;::serialize (37 samples, 0.02%)</title><rect x="0.6860%" y="1957" width="0.0153%" height="15" fill="rgb(217,24,9)" fg:x="1659" fg:w="37"/><text x="0.9360%" y="1967.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (37 samples, 0.02%)</title><rect x="0.6860%" y="1941" width="0.0153%" height="15" fill="rgb(220,13,46)" fg:x="1659" fg:w="37"/><text x="0.9360%" y="1951.50"></text></g><g><title>aptos_infallible::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.01%)</title><rect x="0.7179%" y="2005" width="0.0103%" height="15" fill="rgb(239,221,27)" fg:x="1736" fg:w="25"/><text x="0.9679%" y="2015.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.01%)</title><rect x="0.7179%" y="1989" width="0.0103%" height="15" fill="rgb(222,198,25)" fg:x="1736" fg:w="25"/><text x="0.9679%" y="1999.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (25 samples, 0.01%)</title><rect x="0.7179%" y="1973" width="0.0103%" height="15" fill="rgb(211,99,13)" fg:x="1736" fg:w="25"/><text x="0.9679%" y="1983.50"></text></g><g><title>&lt;prometheus::atomic64::AtomicU64 as prometheus::atomic64::Atomic&gt;::inc_by (27 samples, 0.01%)</title><rect x="0.7481%" y="1925" width="0.0112%" height="15" fill="rgb(232,111,31)" fg:x="1809" fg:w="27"/><text x="0.9981%" y="1935.50"></text></g><g><title>prometheus::atomic64::AtomicU64::inc_by_with_ordering (27 samples, 0.01%)</title><rect x="0.7481%" y="1909" width="0.0112%" height="15" fill="rgb(245,82,37)" fg:x="1809" fg:w="27"/><text x="0.9981%" y="1919.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (27 samples, 0.01%)</title><rect x="0.7481%" y="1893" width="0.0112%" height="15" fill="rgb(227,149,46)" fg:x="1809" fg:w="27"/><text x="0.9981%" y="1903.50"></text></g><g><title>core::sync::atomic::atomic_add (27 samples, 0.01%)</title><rect x="0.7481%" y="1877" width="0.0112%" height="15" fill="rgb(218,36,50)" fg:x="1809" fg:w="27"/><text x="0.9981%" y="1887.50"></text></g><g><title>prometheus::histogram::Histogram::observe (78 samples, 0.03%)</title><rect x="0.7282%" y="1957" width="0.0323%" height="15" fill="rgb(226,80,48)" fg:x="1761" fg:w="78"/><text x="0.9782%" y="1967.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (78 samples, 0.03%)</title><rect x="0.7282%" y="1941" width="0.0323%" height="15" fill="rgb(238,224,15)" fg:x="1761" fg:w="78"/><text x="0.9782%" y="1951.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (83 samples, 0.03%)</title><rect x="0.7282%" y="1989" width="0.0343%" height="15" fill="rgb(241,136,10)" fg:x="1761" fg:w="83"/><text x="0.9782%" y="1999.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (83 samples, 0.03%)</title><rect x="0.7282%" y="1973" width="0.0343%" height="15" fill="rgb(208,32,45)" fg:x="1761" fg:w="83"/><text x="0.9782%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (103 samples, 0.04%)</title><rect x="0.7282%" y="2005" width="0.0426%" height="15" fill="rgb(207,135,9)" fg:x="1761" fg:w="103"/><text x="0.9782%" y="2015.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (34 samples, 0.01%)</title><rect x="0.7725%" y="2005" width="0.0141%" height="15" fill="rgb(206,86,44)" fg:x="1868" fg:w="34"/><text x="1.0225%" y="2015.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (34 samples, 0.01%)</title><rect x="0.7725%" y="1989" width="0.0141%" height="15" fill="rgb(245,177,15)" fg:x="1868" fg:w="34"/><text x="1.0225%" y="1999.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (34 samples, 0.01%)</title><rect x="0.7725%" y="1973" width="0.0141%" height="15" fill="rgb(206,64,50)" fg:x="1868" fg:w="34"/><text x="1.0225%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (368 samples, 0.15%)</title><rect x="0.6393%" y="2117" width="0.1522%" height="15" fill="rgb(234,36,40)" fg:x="1546" fg:w="368"/><text x="0.8893%" y="2127.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (260 samples, 0.11%)</title><rect x="0.6840%" y="2101" width="0.1075%" height="15" fill="rgb(213,64,8)" fg:x="1654" fg:w="260"/><text x="0.9340%" y="2111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (260 samples, 0.11%)</title><rect x="0.6840%" y="2085" width="0.1075%" height="15" fill="rgb(210,75,36)" fg:x="1654" fg:w="260"/><text x="0.9340%" y="2095.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (260 samples, 0.11%)</title><rect x="0.6840%" y="2069" width="0.1075%" height="15" fill="rgb(229,88,21)" fg:x="1654" fg:w="260"/><text x="0.9340%" y="2079.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (260 samples, 0.11%)</title><rect x="0.6840%" y="2053" width="0.1075%" height="15" fill="rgb(252,204,47)" fg:x="1654" fg:w="260"/><text x="0.9340%" y="2063.50"></text></g><g><title>aptos_db::event_store::EventStore::put_events::{{closure}} (260 samples, 0.11%)</title><rect x="0.6840%" y="2037" width="0.1075%" height="15" fill="rgb(208,77,27)" fg:x="1654" fg:w="260"/><text x="0.9340%" y="2047.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (260 samples, 0.11%)</title><rect x="0.6840%" y="2021" width="0.1075%" height="15" fill="rgb(221,76,26)" fg:x="1654" fg:w="260"/><text x="0.9340%" y="2031.50"></text></g><g><title>aptos_db::event_store::EventStore::put_events (621 samples, 0.26%)</title><rect x="0.5351%" y="2133" width="0.2568%" height="15" fill="rgb(225,139,18)" fg:x="1294" fg:w="621"/><text x="0.7851%" y="2143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (628 samples, 0.26%)</title><rect x="0.5326%" y="2245" width="0.2597%" height="15" fill="rgb(230,137,11)" fg:x="1288" fg:w="628"/><text x="0.7826%" y="2255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (628 samples, 0.26%)</title><rect x="0.5326%" y="2229" width="0.2597%" height="15" fill="rgb(212,28,1)" fg:x="1288" fg:w="628"/><text x="0.7826%" y="2239.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (628 samples, 0.26%)</title><rect x="0.5326%" y="2213" width="0.2597%" height="15" fill="rgb(248,164,17)" fg:x="1288" fg:w="628"/><text x="0.7826%" y="2223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (628 samples, 0.26%)</title><rect x="0.5326%" y="2197" width="0.2597%" height="15" fill="rgb(222,171,42)" fg:x="1288" fg:w="628"/><text x="0.7826%" y="2207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (628 samples, 0.26%)</title><rect x="0.5326%" y="2181" width="0.2597%" height="15" fill="rgb(243,84,45)" fg:x="1288" fg:w="628"/><text x="0.7826%" y="2191.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (628 samples, 0.26%)</title><rect x="0.5326%" y="2165" width="0.2597%" height="15" fill="rgb(252,49,23)" fg:x="1288" fg:w="628"/><text x="0.7826%" y="2175.50"></text></g><g><title>aptos_db::AptosDB::save_transactions_impl::{{closure}}::{{closure}}::{{closure}} (628 samples, 0.26%)</title><rect x="0.5326%" y="2149" width="0.2597%" height="15" fill="rgb(215,19,7)" fg:x="1288" fg:w="628"/><text x="0.7826%" y="2159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (641 samples, 0.27%)</title><rect x="0.5285%" y="2405" width="0.2651%" height="15" fill="rgb(238,81,41)" fg:x="1278" fg:w="641"/><text x="0.7785%" y="2415.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (631 samples, 0.26%)</title><rect x="0.5326%" y="2389" width="0.2609%" height="15" fill="rgb(210,199,37)" fg:x="1288" fg:w="631"/><text x="0.7826%" y="2399.50"></text></g><g><title>core::iter::adapters::try_process (631 samples, 0.26%)</title><rect x="0.5326%" y="2373" width="0.2609%" height="15" fill="rgb(244,192,49)" fg:x="1288" fg:w="631"/><text x="0.7826%" y="2383.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (631 samples, 0.26%)</title><rect x="0.5326%" y="2357" width="0.2609%" height="15" fill="rgb(226,211,11)" fg:x="1288" fg:w="631"/><text x="0.7826%" y="2367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (631 samples, 0.26%)</title><rect x="0.5326%" y="2341" width="0.2609%" height="15" fill="rgb(236,162,54)" fg:x="1288" fg:w="631"/><text x="0.7826%" y="2351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (631 samples, 0.26%)</title><rect x="0.5326%" y="2325" width="0.2609%" height="15" fill="rgb(220,229,9)" fg:x="1288" fg:w="631"/><text x="0.7826%" y="2335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (631 samples, 0.26%)</title><rect x="0.5326%" y="2309" width="0.2609%" height="15" fill="rgb(250,87,22)" fg:x="1288" fg:w="631"/><text x="0.7826%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (631 samples, 0.26%)</title><rect x="0.5326%" y="2293" width="0.2609%" height="15" fill="rgb(239,43,17)" fg:x="1288" fg:w="631"/><text x="0.7826%" y="2303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (631 samples, 0.26%)</title><rect x="0.5326%" y="2277" width="0.2609%" height="15" fill="rgb(231,177,25)" fg:x="1288" fg:w="631"/><text x="0.7826%" y="2287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (631 samples, 0.26%)</title><rect x="0.5326%" y="2261" width="0.2609%" height="15" fill="rgb(219,179,1)" fg:x="1288" fg:w="631"/><text x="0.7826%" y="2271.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (33 samples, 0.01%)</title><rect x="0.8051%" y="2181" width="0.0136%" height="15" fill="rgb(238,219,53)" fg:x="1947" fg:w="33"/><text x="1.0551%" y="2191.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (33 samples, 0.01%)</title><rect x="0.8051%" y="2165" width="0.0136%" height="15" fill="rgb(232,167,36)" fg:x="1947" fg:w="33"/><text x="1.0551%" y="2175.50"></text></g><g><title>aptos_types::transaction::ethereum::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::ethereum::EthTransactionPayload&gt;::serialize (33 samples, 0.01%)</title><rect x="0.8051%" y="2149" width="0.0136%" height="15" fill="rgb(244,19,51)" fg:x="1947" fg:w="33"/><text x="1.0551%" y="2159.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 0.01%)</title><rect x="0.8051%" y="2133" width="0.0136%" height="15" fill="rgb(224,6,22)" fg:x="1947" fg:w="33"/><text x="1.0551%" y="2143.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (30 samples, 0.01%)</title><rect x="0.8064%" y="2117" width="0.0124%" height="15" fill="rgb(224,145,5)" fg:x="1950" fg:w="30"/><text x="1.0564%" y="2127.50"></text></g><g><title>serde::ser::Serializer::collect_seq (30 samples, 0.01%)</title><rect x="0.8064%" y="2101" width="0.0124%" height="15" fill="rgb(234,130,49)" fg:x="1950" fg:w="30"/><text x="1.0564%" y="2111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (29 samples, 0.01%)</title><rect x="0.8068%" y="2085" width="0.0120%" height="15" fill="rgb(254,6,2)" fg:x="1951" fg:w="29"/><text x="1.0568%" y="2095.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (29 samples, 0.01%)</title><rect x="0.8068%" y="2069" width="0.0120%" height="15" fill="rgb(208,96,46)" fg:x="1951" fg:w="29"/><text x="1.0568%" y="2079.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (27 samples, 0.01%)</title><rect x="0.8076%" y="2053" width="0.0112%" height="15" fill="rgb(239,3,39)" fg:x="1953" fg:w="27"/><text x="1.0576%" y="2063.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (27 samples, 0.01%)</title><rect x="0.8076%" y="2037" width="0.0112%" height="15" fill="rgb(233,210,1)" fg:x="1953" fg:w="27"/><text x="1.0576%" y="2047.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (27 samples, 0.01%)</title><rect x="0.8076%" y="2021" width="0.0112%" height="15" fill="rgb(244,137,37)" fg:x="1953" fg:w="27"/><text x="1.0576%" y="2031.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (27 samples, 0.01%)</title><rect x="0.8076%" y="2005" width="0.0112%" height="15" fill="rgb(240,136,2)" fg:x="1953" fg:w="27"/><text x="1.0576%" y="2015.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (27 samples, 0.01%)</title><rect x="0.8076%" y="1989" width="0.0112%" height="15" fill="rgb(239,18,37)" fg:x="1953" fg:w="27"/><text x="1.0576%" y="1999.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (27 samples, 0.01%)</title><rect x="0.8076%" y="1973" width="0.0112%" height="15" fill="rgb(218,185,22)" fg:x="1953" fg:w="27"/><text x="1.0576%" y="1983.50"></text></g><g><title>std::io::Write::write_all (27 samples, 0.01%)</title><rect x="0.8076%" y="1957" width="0.0112%" height="15" fill="rgb(225,218,4)" fg:x="1953" fg:w="27"/><text x="1.0576%" y="1967.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionHasher as std::io::Write&gt;::write (27 samples, 0.01%)</title><rect x="0.8076%" y="1941" width="0.0112%" height="15" fill="rgb(230,182,32)" fg:x="1953" fg:w="27"/><text x="1.0576%" y="1951.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (56 samples, 0.02%)</title><rect x="0.8006%" y="2213" width="0.0232%" height="15" fill="rgb(242,56,43)" fg:x="1936" fg:w="56"/><text x="1.0506%" y="2223.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (56 samples, 0.02%)</title><rect x="0.8006%" y="2197" width="0.0232%" height="15" fill="rgb(233,99,24)" fg:x="1936" fg:w="56"/><text x="1.0506%" y="2207.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as aptos_crypto::hash::CryptoHash&gt;::hash (98 samples, 0.04%)</title><rect x="0.7940%" y="2325" width="0.0405%" height="15" fill="rgb(234,209,42)" fg:x="1920" fg:w="98"/><text x="1.0440%" y="2335.50"></text></g><g><title>bcs::ser::serialize_into (83 samples, 0.03%)</title><rect x="0.8002%" y="2309" width="0.0343%" height="15" fill="rgb(227,7,12)" fg:x="1935" fg:w="83"/><text x="1.0502%" y="2319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (83 samples, 0.03%)</title><rect x="0.8002%" y="2293" width="0.0343%" height="15" fill="rgb(245,203,43)" fg:x="1935" fg:w="83"/><text x="1.0502%" y="2303.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::Transaction&gt;::serialize (83 samples, 0.03%)</title><rect x="0.8002%" y="2277" width="0.0343%" height="15" fill="rgb(238,205,33)" fg:x="1935" fg:w="83"/><text x="1.0502%" y="2287.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (83 samples, 0.03%)</title><rect x="0.8002%" y="2261" width="0.0343%" height="15" fill="rgb(231,56,7)" fg:x="1935" fg:w="83"/><text x="1.0502%" y="2271.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::SignedTransaction&gt;::serialize (82 samples, 0.03%)</title><rect x="0.8006%" y="2245" width="0.0339%" height="15" fill="rgb(244,186,29)" fg:x="1936" fg:w="82"/><text x="1.0506%" y="2255.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (82 samples, 0.03%)</title><rect x="0.8006%" y="2229" width="0.0339%" height="15" fill="rgb(234,111,31)" fg:x="1936" fg:w="82"/><text x="1.0506%" y="2239.50"></text></g><g><title>aptos_types::transaction::authenticator::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::authenticator::TransactionAuthenticator&gt;::serialize (26 samples, 0.01%)</title><rect x="0.8237%" y="2213" width="0.0108%" height="15" fill="rgb(241,149,10)" fg:x="1992" fg:w="26"/><text x="1.0737%" y="2223.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (89 samples, 0.04%)</title><rect x="0.8345%" y="2325" width="0.0368%" height="15" fill="rgb(249,206,44)" fg:x="2018" fg:w="89"/><text x="1.0845%" y="2335.50"></text></g><g><title>keccak_hash::keccak (33 samples, 0.01%)</title><rect x="0.8734%" y="2277" width="0.0136%" height="15" fill="rgb(251,153,30)" fg:x="2112" fg:w="33"/><text x="1.1234%" y="2287.50"></text></g><g><title>keccak_hash::write_keccak (32 samples, 0.01%)</title><rect x="0.8738%" y="2261" width="0.0132%" height="15" fill="rgb(239,152,38)" fg:x="2113" fg:w="32"/><text x="1.1238%" y="2271.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Encodable for alloc::vec::Vec&lt;u8&gt;&gt;::rlp_append (25 samples, 0.01%)</title><rect x="0.8936%" y="2197" width="0.0103%" height="15" fill="rgb(249,139,47)" fg:x="2161" fg:w="25"/><text x="1.1436%" y="2207.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (25 samples, 0.01%)</title><rect x="0.8936%" y="2181" width="0.0103%" height="15" fill="rgb(244,64,35)" fg:x="2161" fg:w="25"/><text x="1.1436%" y="2191.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (25 samples, 0.01%)</title><rect x="0.8936%" y="2165" width="0.0103%" height="15" fill="rgb(216,46,15)" fg:x="2161" fg:w="25"/><text x="1.1436%" y="2175.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (25 samples, 0.01%)</title><rect x="0.8936%" y="2149" width="0.0103%" height="15" fill="rgb(250,74,19)" fg:x="2161" fg:w="25"/><text x="1.1436%" y="2159.50"></text></g><g><title>rlp::stream::RlpStream::append (44 samples, 0.02%)</title><rect x="0.8870%" y="2213" width="0.0182%" height="15" fill="rgb(249,42,33)" fg:x="2145" fg:w="44"/><text x="1.1370%" y="2223.50"></text></g><g><title>&lt;primitives::transaction::TransactionWithSignature as rlp::traits::Encodable&gt;::rlp_append (45 samples, 0.02%)</title><rect x="0.8870%" y="2261" width="0.0186%" height="15" fill="rgb(242,149,17)" fg:x="2145" fg:w="45"/><text x="1.1370%" y="2271.50"></text></g><g><title>rlp::stream::RlpStream::append_internal (45 samples, 0.02%)</title><rect x="0.8870%" y="2245" width="0.0186%" height="15" fill="rgb(244,29,21)" fg:x="2145" fg:w="45"/><text x="1.1370%" y="2255.50"></text></g><g><title>&lt;primitives::transaction::TransactionWithSignatureSerializePart as rlp::traits::Encodable&gt;::rlp_append (45 samples, 0.02%)</title><rect x="0.8870%" y="2229" width="0.0186%" height="15" fill="rgb(220,130,37)" fg:x="2145" fg:w="45"/><text x="1.1370%" y="2239.50"></text></g><g><title>aptos_db::transaction_store::TransactionStore::put_transaction (274 samples, 0.11%)</title><rect x="0.7936%" y="2341" width="0.1133%" height="15" fill="rgb(211,67,2)" fg:x="1919" fg:w="274"/><text x="1.0436%" y="2351.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::eth_transaction (86 samples, 0.04%)</title><rect x="0.8713%" y="2325" width="0.0356%" height="15" fill="rgb(235,68,52)" fg:x="2107" fg:w="86"/><text x="1.1213%" y="2335.50"></text></g><g><title>primitives::transaction::Transaction::with_signature (84 samples, 0.03%)</title><rect x="0.8721%" y="2309" width="0.0347%" height="15" fill="rgb(246,142,3)" fg:x="2109" fg:w="84"/><text x="1.1221%" y="2319.50"></text></g><g><title>primitives::transaction::TransactionWithSignature::compute_hash (81 samples, 0.03%)</title><rect x="0.8734%" y="2293" width="0.0335%" height="15" fill="rgb(241,25,7)" fg:x="2112" fg:w="81"/><text x="1.1234%" y="2303.50"></text></g><g><title>rlp::traits::Encodable::rlp_bytes (48 samples, 0.02%)</title><rect x="0.8870%" y="2277" width="0.0198%" height="15" fill="rgb(242,119,39)" fg:x="2145" fg:w="48"/><text x="1.1370%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;bcs::ser::MapSerializer&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (30 samples, 0.01%)</title><rect x="0.9131%" y="2117" width="0.0124%" height="15" fill="rgb(241,98,45)" fg:x="2208" fg:w="30"/><text x="1.1631%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (30 samples, 0.01%)</title><rect x="0.9131%" y="2101" width="0.0124%" height="15" fill="rgb(254,28,30)" fg:x="2208" fg:w="30"/><text x="1.1631%" y="2111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="0.9131%" y="2085" width="0.0124%" height="15" fill="rgb(241,142,54)" fg:x="2208" fg:w="30"/><text x="1.1631%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (30 samples, 0.01%)</title><rect x="0.9131%" y="2069" width="0.0124%" height="15" fill="rgb(222,85,15)" fg:x="2208" fg:w="30"/><text x="1.1631%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (30 samples, 0.01%)</title><rect x="0.9131%" y="2053" width="0.0124%" height="15" fill="rgb(210,85,47)" fg:x="2208" fg:w="30"/><text x="1.1631%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (30 samples, 0.01%)</title><rect x="0.9131%" y="2037" width="0.0124%" height="15" fill="rgb(224,206,25)" fg:x="2208" fg:w="30"/><text x="1.1631%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (30 samples, 0.01%)</title><rect x="0.9131%" y="2021" width="0.0124%" height="15" fill="rgb(243,201,19)" fg:x="2208" fg:w="30"/><text x="1.1631%" y="2031.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="0.9131%" y="2005" width="0.0124%" height="15" fill="rgb(236,59,4)" fg:x="2208" fg:w="30"/><text x="1.1631%" y="2015.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.01%)</title><rect x="0.9135%" y="1989" width="0.0120%" height="15" fill="rgb(254,179,45)" fg:x="2209" fg:w="29"/><text x="1.1635%" y="1999.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.01%)</title><rect x="0.9135%" y="1973" width="0.0120%" height="15" fill="rgb(226,14,10)" fg:x="2209" fg:w="29"/><text x="1.1635%" y="1983.50"></text></g><g><title>iralloct (45 samples, 0.02%)</title><rect x="0.9284%" y="1909" width="0.0186%" height="15" fill="rgb(244,27,41)" fg:x="2245" fg:w="45"/><text x="1.1784%" y="1919.50"></text></g><g><title>_rjem_je_large_ralloc (40 samples, 0.02%)</title><rect x="0.9304%" y="1893" width="0.0165%" height="15" fill="rgb(235,35,32)" fg:x="2250" fg:w="40"/><text x="1.1804%" y="1903.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (95 samples, 0.04%)</title><rect x="0.9089%" y="2133" width="0.0393%" height="15" fill="rgb(218,68,31)" fg:x="2198" fg:w="95"/><text x="1.1589%" y="2143.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (55 samples, 0.02%)</title><rect x="0.9255%" y="2117" width="0.0227%" height="15" fill="rgb(207,120,37)" fg:x="2238" fg:w="55"/><text x="1.1755%" y="2127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (55 samples, 0.02%)</title><rect x="0.9255%" y="2101" width="0.0227%" height="15" fill="rgb(227,98,0)" fg:x="2238" fg:w="55"/><text x="1.1755%" y="2111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (55 samples, 0.02%)</title><rect x="0.9255%" y="2085" width="0.0227%" height="15" fill="rgb(207,7,3)" fg:x="2238" fg:w="55"/><text x="1.1755%" y="2095.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (55 samples, 0.02%)</title><rect x="0.9255%" y="2069" width="0.0227%" height="15" fill="rgb(206,98,19)" fg:x="2238" fg:w="55"/><text x="1.1755%" y="2079.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (55 samples, 0.02%)</title><rect x="0.9255%" y="2053" width="0.0227%" height="15" fill="rgb(217,5,26)" fg:x="2238" fg:w="55"/><text x="1.1755%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (55 samples, 0.02%)</title><rect x="0.9255%" y="2037" width="0.0227%" height="15" fill="rgb(235,190,38)" fg:x="2238" fg:w="55"/><text x="1.1755%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (55 samples, 0.02%)</title><rect x="0.9255%" y="2021" width="0.0227%" height="15" fill="rgb(247,86,24)" fg:x="2238" fg:w="55"/><text x="1.1755%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (55 samples, 0.02%)</title><rect x="0.9255%" y="2005" width="0.0227%" height="15" fill="rgb(205,101,16)" fg:x="2238" fg:w="55"/><text x="1.1755%" y="2015.50"></text></g><g><title>alloc::raw_vec::finish_grow (54 samples, 0.02%)</title><rect x="0.9259%" y="1989" width="0.0223%" height="15" fill="rgb(246,168,33)" fg:x="2239" fg:w="54"/><text x="1.1759%" y="1999.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (54 samples, 0.02%)</title><rect x="0.9259%" y="1973" width="0.0223%" height="15" fill="rgb(231,114,1)" fg:x="2239" fg:w="54"/><text x="1.1759%" y="1983.50"></text></g><g><title>alloc::alloc::Global::grow_impl (54 samples, 0.02%)</title><rect x="0.9259%" y="1957" width="0.0223%" height="15" fill="rgb(207,184,53)" fg:x="2239" fg:w="54"/><text x="1.1759%" y="1967.50"></text></g><g><title>alloc::alloc::realloc (54 samples, 0.02%)</title><rect x="0.9259%" y="1941" width="0.0223%" height="15" fill="rgb(224,95,51)" fg:x="2239" fg:w="54"/><text x="1.1759%" y="1951.50"></text></g><g><title>rallocx (53 samples, 0.02%)</title><rect x="0.9263%" y="1925" width="0.0219%" height="15" fill="rgb(212,188,45)" fg:x="2240" fg:w="53"/><text x="1.1763%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.01%)</title><rect x="0.9482%" y="2101" width="0.0116%" height="15" fill="rgb(223,154,38)" fg:x="2293" fg:w="28"/><text x="1.1982%" y="2111.50"></text></g><g><title>iralloct (32 samples, 0.01%)</title><rect x="0.9908%" y="1637" width="0.0132%" height="15" fill="rgb(251,22,52)" fg:x="2396" fg:w="32"/><text x="1.2408%" y="1647.50"></text></g><g><title>_rjem_je_arena_ralloc (32 samples, 0.01%)</title><rect x="0.9908%" y="1621" width="0.0132%" height="15" fill="rgb(229,209,22)" fg:x="2396" fg:w="32"/><text x="1.2408%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (69 samples, 0.03%)</title><rect x="0.9854%" y="1701" width="0.0285%" height="15" fill="rgb(234,138,34)" fg:x="2383" fg:w="69"/><text x="1.2354%" y="1711.50"></text></g><g><title>alloc::alloc::Global::grow_impl (69 samples, 0.03%)</title><rect x="0.9854%" y="1685" width="0.0285%" height="15" fill="rgb(212,95,11)" fg:x="2383" fg:w="69"/><text x="1.2354%" y="1695.50"></text></g><g><title>alloc::alloc::realloc (69 samples, 0.03%)</title><rect x="0.9854%" y="1669" width="0.0285%" height="15" fill="rgb(240,179,47)" fg:x="2383" fg:w="69"/><text x="1.2354%" y="1679.50"></text></g><g><title>rallocx (62 samples, 0.03%)</title><rect x="0.9883%" y="1653" width="0.0256%" height="15" fill="rgb(240,163,11)" fg:x="2390" fg:w="62"/><text x="1.2383%" y="1663.50"></text></g><g><title>alloc::raw_vec::finish_grow (73 samples, 0.03%)</title><rect x="0.9846%" y="1717" width="0.0302%" height="15" fill="rgb(236,37,12)" fg:x="2381" fg:w="73"/><text x="1.2346%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (80 samples, 0.03%)</title><rect x="0.9825%" y="1781" width="0.0331%" height="15" fill="rgb(232,164,16)" fg:x="2376" fg:w="80"/><text x="1.2325%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (80 samples, 0.03%)</title><rect x="0.9825%" y="1765" width="0.0331%" height="15" fill="rgb(244,205,15)" fg:x="2376" fg:w="80"/><text x="1.2325%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (80 samples, 0.03%)</title><rect x="0.9825%" y="1749" width="0.0331%" height="15" fill="rgb(223,117,47)" fg:x="2376" fg:w="80"/><text x="1.2325%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (78 samples, 0.03%)</title><rect x="0.9834%" y="1733" width="0.0323%" height="15" fill="rgb(244,107,35)" fg:x="2378" fg:w="78"/><text x="1.2334%" y="1743.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::AccessPath&gt;::serialize (129 samples, 0.05%)</title><rect x="0.9656%" y="1989" width="0.0533%" height="15" fill="rgb(205,140,8)" fg:x="2335" fg:w="129"/><text x="1.2156%" y="1999.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (128 samples, 0.05%)</title><rect x="0.9660%" y="1973" width="0.0529%" height="15" fill="rgb(228,84,46)" fg:x="2336" fg:w="128"/><text x="1.2160%" y="1983.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (113 samples, 0.05%)</title><rect x="0.9722%" y="1957" width="0.0467%" height="15" fill="rgb(254,188,9)" fg:x="2351" fg:w="113"/><text x="1.2222%" y="1967.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (113 samples, 0.05%)</title><rect x="0.9722%" y="1941" width="0.0467%" height="15" fill="rgb(206,112,54)" fg:x="2351" fg:w="113"/><text x="1.2222%" y="1951.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (113 samples, 0.05%)</title><rect x="0.9722%" y="1925" width="0.0467%" height="15" fill="rgb(216,84,49)" fg:x="2351" fg:w="113"/><text x="1.2222%" y="1935.50"></text></g><g><title> 32]&gt;::serialize (113 samples, 0.05%)</title><rect x="0.9722%" y="1909" width="0.0467%" height="15" fill="rgb(214,194,35)" fg:x="2351" fg:w="113"/><text x="1.2222%" y="1919.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (113 samples, 0.05%)</title><rect x="0.9722%" y="1893" width="0.0467%" height="15" fill="rgb(249,28,3)" fg:x="2351" fg:w="113"/><text x="1.2222%" y="1903.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (113 samples, 0.05%)</title><rect x="0.9722%" y="1877" width="0.0467%" height="15" fill="rgb(222,56,52)" fg:x="2351" fg:w="113"/><text x="1.2222%" y="1887.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (113 samples, 0.05%)</title><rect x="0.9722%" y="1861" width="0.0467%" height="15" fill="rgb(245,217,50)" fg:x="2351" fg:w="113"/><text x="1.2222%" y="1871.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (113 samples, 0.05%)</title><rect x="0.9722%" y="1845" width="0.0467%" height="15" fill="rgb(213,201,24)" fg:x="2351" fg:w="113"/><text x="1.2222%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (113 samples, 0.05%)</title><rect x="0.9722%" y="1829" width="0.0467%" height="15" fill="rgb(248,116,28)" fg:x="2351" fg:w="113"/><text x="1.2222%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (113 samples, 0.05%)</title><rect x="0.9722%" y="1813" width="0.0467%" height="15" fill="rgb(219,72,43)" fg:x="2351" fg:w="113"/><text x="1.2222%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (113 samples, 0.05%)</title><rect x="0.9722%" y="1797" width="0.0467%" height="15" fill="rgb(209,138,14)" fg:x="2351" fg:w="113"/><text x="1.2222%" y="1807.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::serialize_key (157 samples, 0.06%)</title><rect x="0.9598%" y="2053" width="0.0649%" height="15" fill="rgb(222,18,33)" fg:x="2321" fg:w="157"/><text x="1.2098%" y="2063.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (157 samples, 0.06%)</title><rect x="0.9598%" y="2037" width="0.0649%" height="15" fill="rgb(213,199,7)" fg:x="2321" fg:w="157"/><text x="1.2098%" y="2047.50"></text></g><g><title>aptos_types::state_store::state_key::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_key::StateKey&gt;::serialize (157 samples, 0.06%)</title><rect x="0.9598%" y="2021" width="0.0649%" height="15" fill="rgb(250,110,10)" fg:x="2321" fg:w="157"/><text x="1.2098%" y="2031.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (144 samples, 0.06%)</title><rect x="0.9652%" y="2005" width="0.0595%" height="15" fill="rgb(248,123,6)" fg:x="2334" fg:w="144"/><text x="1.2152%" y="2015.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (32 samples, 0.01%)</title><rect x="1.0409%" y="2005" width="0.0132%" height="15" fill="rgb(206,91,31)" fg:x="2517" fg:w="32"/><text x="1.2909%" y="2015.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (32 samples, 0.01%)</title><rect x="1.0409%" y="1989" width="0.0132%" height="15" fill="rgb(211,154,13)" fg:x="2517" fg:w="32"/><text x="1.2909%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (32 samples, 0.01%)</title><rect x="1.0409%" y="1973" width="0.0132%" height="15" fill="rgb(225,148,7)" fg:x="2517" fg:w="32"/><text x="1.2909%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (32 samples, 0.01%)</title><rect x="1.0409%" y="1957" width="0.0132%" height="15" fill="rgb(220,160,43)" fg:x="2517" fg:w="32"/><text x="1.2909%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (32 samples, 0.01%)</title><rect x="1.0409%" y="1941" width="0.0132%" height="15" fill="rgb(213,52,39)" fg:x="2517" fg:w="32"/><text x="1.2909%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (32 samples, 0.01%)</title><rect x="1.0409%" y="1925" width="0.0132%" height="15" fill="rgb(243,137,7)" fg:x="2517" fg:w="32"/><text x="1.2909%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.01%)</title><rect x="1.0409%" y="1909" width="0.0132%" height="15" fill="rgb(230,79,13)" fg:x="2517" fg:w="32"/><text x="1.2909%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.01%)</title><rect x="1.0421%" y="1893" width="0.0120%" height="15" fill="rgb(247,105,23)" fg:x="2520" fg:w="29"/><text x="1.2921%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 0.01%)</title><rect x="1.0421%" y="1877" width="0.0120%" height="15" fill="rgb(223,179,41)" fg:x="2520" fg:w="29"/><text x="1.2921%" y="1887.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.01%)</title><rect x="1.0425%" y="1861" width="0.0116%" height="15" fill="rgb(218,9,34)" fg:x="2521" fg:w="28"/><text x="1.2925%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (27 samples, 0.01%)</title><rect x="1.0429%" y="1845" width="0.0112%" height="15" fill="rgb(222,106,8)" fg:x="2522" fg:w="27"/><text x="1.2929%" y="1855.50"></text></g><g><title>alloc::alloc::Global::grow_impl (27 samples, 0.01%)</title><rect x="1.0429%" y="1829" width="0.0112%" height="15" fill="rgb(211,220,0)" fg:x="2522" fg:w="27"/><text x="1.2929%" y="1839.50"></text></g><g><title>alloc::alloc::realloc (27 samples, 0.01%)</title><rect x="1.0429%" y="1813" width="0.0112%" height="15" fill="rgb(229,52,16)" fg:x="2522" fg:w="27"/><text x="1.2929%" y="1823.50"></text></g><g><title>rallocx (25 samples, 0.01%)</title><rect x="1.0437%" y="1797" width="0.0103%" height="15" fill="rgb(212,155,18)" fg:x="2524" fg:w="25"/><text x="1.2937%" y="1807.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (365 samples, 0.15%)</title><rect x="0.9073%" y="2229" width="0.1509%" height="15" fill="rgb(242,21,14)" fg:x="2194" fg:w="365"/><text x="1.1573%" y="2239.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (365 samples, 0.15%)</title><rect x="0.9073%" y="2213" width="0.1509%" height="15" fill="rgb(222,19,48)" fg:x="2194" fg:w="365"/><text x="1.1573%" y="2223.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (365 samples, 0.15%)</title><rect x="0.9073%" y="2197" width="0.1509%" height="15" fill="rgb(232,45,27)" fg:x="2194" fg:w="365"/><text x="1.1573%" y="2207.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (365 samples, 0.15%)</title><rect x="0.9073%" y="2181" width="0.1509%" height="15" fill="rgb(249,103,42)" fg:x="2194" fg:w="365"/><text x="1.1573%" y="2191.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (365 samples, 0.15%)</title><rect x="0.9073%" y="2165" width="0.1509%" height="15" fill="rgb(246,81,33)" fg:x="2194" fg:w="365"/><text x="1.1573%" y="2175.50"></text></g><g><title>serde::ser::Serializer::collect_map (365 samples, 0.15%)</title><rect x="0.9073%" y="2149" width="0.1509%" height="15" fill="rgb(252,33,42)" fg:x="2194" fg:w="365"/><text x="1.1573%" y="2159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (266 samples, 0.11%)</title><rect x="0.9482%" y="2133" width="0.1100%" height="15" fill="rgb(209,212,41)" fg:x="2293" fg:w="266"/><text x="1.1982%" y="2143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (266 samples, 0.11%)</title><rect x="0.9482%" y="2117" width="0.1100%" height="15" fill="rgb(207,154,6)" fg:x="2293" fg:w="266"/><text x="1.1982%" y="2127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (238 samples, 0.10%)</title><rect x="0.9598%" y="2101" width="0.0984%" height="15" fill="rgb(223,64,47)" fg:x="2321" fg:w="238"/><text x="1.2098%" y="2111.50"></text></g><g><title>serde::ser::Serializer::collect_map::{{closure}} (238 samples, 0.10%)</title><rect x="0.9598%" y="2085" width="0.0984%" height="15" fill="rgb(211,161,38)" fg:x="2321" fg:w="238"/><text x="1.2098%" y="2095.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (238 samples, 0.10%)</title><rect x="0.9598%" y="2069" width="0.0984%" height="15" fill="rgb(219,138,40)" fg:x="2321" fg:w="238"/><text x="1.2098%" y="2079.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::serialize_value (81 samples, 0.03%)</title><rect x="1.0247%" y="2053" width="0.0335%" height="15" fill="rgb(241,228,46)" fg:x="2478" fg:w="81"/><text x="1.2747%" y="2063.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (63 samples, 0.03%)</title><rect x="1.0322%" y="2037" width="0.0261%" height="15" fill="rgb(223,209,38)" fg:x="2496" fg:w="63"/><text x="1.2822%" y="2047.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteOp&gt;::serialize (63 samples, 0.03%)</title><rect x="1.0322%" y="2021" width="0.0261%" height="15" fill="rgb(236,164,45)" fg:x="2496" fg:w="63"/><text x="1.2822%" y="2031.50"></text></g><g><title>aptos_db::schema::write_set::&lt;impl aptos_schemadb::schema::ValueCodec&lt;aptos_db::schema::write_set::WriteSetSchema&gt; for aptos_types::write_set::WriteSet&gt;::encode_value (367 samples, 0.15%)</title><rect x="0.9073%" y="2309" width="0.1518%" height="15" fill="rgb(231,15,5)" fg:x="2194" fg:w="367"/><text x="1.1573%" y="2319.50"></text></g><g><title>bcs::ser::to_bytes (367 samples, 0.15%)</title><rect x="0.9073%" y="2293" width="0.1518%" height="15" fill="rgb(252,35,15)" fg:x="2194" fg:w="367"/><text x="1.1573%" y="2303.50"></text></g><g><title>bcs::ser::serialize_into (367 samples, 0.15%)</title><rect x="0.9073%" y="2277" width="0.1518%" height="15" fill="rgb(248,181,18)" fg:x="2194" fg:w="367"/><text x="1.1573%" y="2287.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (367 samples, 0.15%)</title><rect x="0.9073%" y="2261" width="0.1518%" height="15" fill="rgb(233,39,42)" fg:x="2194" fg:w="367"/><text x="1.1573%" y="2271.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (367 samples, 0.15%)</title><rect x="0.9073%" y="2245" width="0.1518%" height="15" fill="rgb(238,110,33)" fg:x="2194" fg:w="367"/><text x="1.1573%" y="2255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (655 samples, 0.27%)</title><rect x="0.7936%" y="2405" width="0.2709%" height="15" fill="rgb(233,195,10)" fg:x="1919" fg:w="655"/><text x="1.0436%" y="2415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (655 samples, 0.27%)</title><rect x="0.7936%" y="2389" width="0.2709%" height="15" fill="rgb(254,105,3)" fg:x="1919" fg:w="655"/><text x="1.0436%" y="2399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (655 samples, 0.27%)</title><rect x="0.7936%" y="2373" width="0.2709%" height="15" fill="rgb(221,225,9)" fg:x="1919" fg:w="655"/><text x="1.0436%" y="2383.50"></text></g><g><title>aptos_db::AptosDB::save_transactions_impl::{{closure}}::{{closure}}::{{closure}} (655 samples, 0.27%)</title><rect x="0.7936%" y="2357" width="0.2709%" height="15" fill="rgb(224,227,45)" fg:x="1919" fg:w="655"/><text x="1.0436%" y="2367.50"></text></g><g><title>aptos_db::transaction_store::TransactionStore::put_write_set (381 samples, 0.16%)</title><rect x="0.9069%" y="2341" width="0.1576%" height="15" fill="rgb(229,198,43)" fg:x="2193" fg:w="381"/><text x="1.1569%" y="2351.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (381 samples, 0.16%)</title><rect x="0.9069%" y="2325" width="0.1576%" height="15" fill="rgb(206,209,35)" fg:x="2193" fg:w="381"/><text x="1.1569%" y="2335.50"></text></g><g><title>aptos_db::AptosDB::save_transactions_impl::{{closure}}::{{closure}} (2,560 samples, 1.06%)</title><rect x="0.0062%" y="2421" width="1.0586%" height="15" fill="rgb(245,195,53)" fg:x="15" fg:w="2560"/><text x="0.2562%" y="2431.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (37 samples, 0.02%)</title><rect x="1.0653%" y="1141" width="0.0153%" height="15" fill="rgb(240,92,26)" fg:x="2576" fg:w="37"/><text x="1.3153%" y="1151.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (37 samples, 0.02%)</title><rect x="1.0653%" y="1125" width="0.0153%" height="15" fill="rgb(207,40,23)" fg:x="2576" fg:w="37"/><text x="1.3153%" y="1135.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (37 samples, 0.02%)</title><rect x="1.0653%" y="1109" width="0.0153%" height="15" fill="rgb(223,111,35)" fg:x="2576" fg:w="37"/><text x="1.3153%" y="1119.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (37 samples, 0.02%)</title><rect x="1.0653%" y="1093" width="0.0153%" height="15" fill="rgb(229,147,28)" fg:x="2576" fg:w="37"/><text x="1.3153%" y="1103.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (37 samples, 0.02%)</title><rect x="1.0653%" y="1077" width="0.0153%" height="15" fill="rgb(211,29,28)" fg:x="2576" fg:w="37"/><text x="1.3153%" y="1087.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (37 samples, 0.02%)</title><rect x="1.0653%" y="1061" width="0.0153%" height="15" fill="rgb(228,72,33)" fg:x="2576" fg:w="37"/><text x="1.3153%" y="1071.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (37 samples, 0.02%)</title><rect x="1.0653%" y="1045" width="0.0153%" height="15" fill="rgb(205,214,31)" fg:x="2576" fg:w="37"/><text x="1.3153%" y="1055.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (37 samples, 0.02%)</title><rect x="1.0653%" y="1029" width="0.0153%" height="15" fill="rgb(224,111,15)" fg:x="2576" fg:w="37"/><text x="1.3153%" y="1039.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (37 samples, 0.02%)</title><rect x="1.0653%" y="1013" width="0.0153%" height="15" fill="rgb(253,21,26)" fg:x="2576" fg:w="37"/><text x="1.3153%" y="1023.50"></text></g><g><title>aptos_types::transaction::ethereum::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::ethereum::EthTransactionPayload&gt;::serialize (93 samples, 0.04%)</title><rect x="1.0847%" y="981" width="0.0385%" height="15" fill="rgb(245,139,43)" fg:x="2623" fg:w="93"/><text x="1.3347%" y="991.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (92 samples, 0.04%)</title><rect x="1.0851%" y="965" width="0.0380%" height="15" fill="rgb(252,170,7)" fg:x="2624" fg:w="92"/><text x="1.3351%" y="975.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (86 samples, 0.04%)</title><rect x="1.0876%" y="949" width="0.0356%" height="15" fill="rgb(231,118,14)" fg:x="2630" fg:w="86"/><text x="1.3376%" y="959.50"></text></g><g><title>serde::ser::Serializer::collect_seq (86 samples, 0.04%)</title><rect x="1.0876%" y="933" width="0.0356%" height="15" fill="rgb(238,83,0)" fg:x="2630" fg:w="86"/><text x="1.3376%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (85 samples, 0.04%)</title><rect x="1.0880%" y="917" width="0.0351%" height="15" fill="rgb(221,39,39)" fg:x="2631" fg:w="85"/><text x="1.3380%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (85 samples, 0.04%)</title><rect x="1.0880%" y="901" width="0.0351%" height="15" fill="rgb(222,119,46)" fg:x="2631" fg:w="85"/><text x="1.3380%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (85 samples, 0.04%)</title><rect x="1.0880%" y="885" width="0.0351%" height="15" fill="rgb(222,165,49)" fg:x="2631" fg:w="85"/><text x="1.3380%" y="895.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (85 samples, 0.04%)</title><rect x="1.0880%" y="869" width="0.0351%" height="15" fill="rgb(219,113,52)" fg:x="2631" fg:w="85"/><text x="1.3380%" y="879.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (85 samples, 0.04%)</title><rect x="1.0880%" y="853" width="0.0351%" height="15" fill="rgb(214,7,15)" fg:x="2631" fg:w="85"/><text x="1.3380%" y="863.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (85 samples, 0.04%)</title><rect x="1.0880%" y="837" width="0.0351%" height="15" fill="rgb(235,32,4)" fg:x="2631" fg:w="85"/><text x="1.3380%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (85 samples, 0.04%)</title><rect x="1.0880%" y="821" width="0.0351%" height="15" fill="rgb(238,90,54)" fg:x="2631" fg:w="85"/><text x="1.3380%" y="831.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (85 samples, 0.04%)</title><rect x="1.0880%" y="805" width="0.0351%" height="15" fill="rgb(213,208,19)" fg:x="2631" fg:w="85"/><text x="1.3380%" y="815.50"></text></g><g><title>std::io::Write::write_all (85 samples, 0.04%)</title><rect x="1.0880%" y="789" width="0.0351%" height="15" fill="rgb(233,156,4)" fg:x="2631" fg:w="85"/><text x="1.3380%" y="799.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionHasher as std::io::Write&gt;::write (85 samples, 0.04%)</title><rect x="1.0880%" y="773" width="0.0351%" height="15" fill="rgb(207,194,5)" fg:x="2631" fg:w="85"/><text x="1.3380%" y="783.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (48 samples, 0.02%)</title><rect x="1.1033%" y="757" width="0.0198%" height="15" fill="rgb(206,111,30)" fg:x="2668" fg:w="48"/><text x="1.3533%" y="767.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (30 samples, 0.01%)</title><rect x="1.1107%" y="741" width="0.0124%" height="15" fill="rgb(243,70,54)" fg:x="2686" fg:w="30"/><text x="1.3607%" y="751.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (30 samples, 0.01%)</title><rect x="1.1107%" y="725" width="0.0124%" height="15" fill="rgb(242,28,8)" fg:x="2686" fg:w="30"/><text x="1.3607%" y="735.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (30 samples, 0.01%)</title><rect x="1.1107%" y="709" width="0.0124%" height="15" fill="rgb(219,106,18)" fg:x="2686" fg:w="30"/><text x="1.3607%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (30 samples, 0.01%)</title><rect x="1.1107%" y="693" width="0.0124%" height="15" fill="rgb(244,222,10)" fg:x="2686" fg:w="30"/><text x="1.3607%" y="703.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (94 samples, 0.04%)</title><rect x="1.0847%" y="1013" width="0.0389%" height="15" fill="rgb(236,179,52)" fg:x="2623" fg:w="94"/><text x="1.3347%" y="1023.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (94 samples, 0.04%)</title><rect x="1.0847%" y="997" width="0.0389%" height="15" fill="rgb(213,23,39)" fg:x="2623" fg:w="94"/><text x="1.3347%" y="1007.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (136 samples, 0.06%)</title><rect x="1.0806%" y="1045" width="0.0562%" height="15" fill="rgb(238,48,10)" fg:x="2613" fg:w="136"/><text x="1.3306%" y="1055.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (136 samples, 0.06%)</title><rect x="1.0806%" y="1029" width="0.0562%" height="15" fill="rgb(251,196,23)" fg:x="2613" fg:w="136"/><text x="1.3306%" y="1039.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (32 samples, 0.01%)</title><rect x="1.1236%" y="1013" width="0.0132%" height="15" fill="rgb(250,152,24)" fg:x="2717" fg:w="32"/><text x="1.3736%" y="1023.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (32 samples, 0.01%)</title><rect x="1.1236%" y="997" width="0.0132%" height="15" fill="rgb(209,150,17)" fg:x="2717" fg:w="32"/><text x="1.3736%" y="1007.50"></text></g><g><title>std::io::Write::write_all (32 samples, 0.01%)</title><rect x="1.1236%" y="981" width="0.0132%" height="15" fill="rgb(234,202,34)" fg:x="2717" fg:w="32"/><text x="1.3736%" y="991.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionHasher as std::io::Write&gt;::write (32 samples, 0.01%)</title><rect x="1.1236%" y="965" width="0.0132%" height="15" fill="rgb(253,148,53)" fg:x="2717" fg:w="32"/><text x="1.3736%" y="975.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (32 samples, 0.01%)</title><rect x="1.1236%" y="949" width="0.0132%" height="15" fill="rgb(218,129,16)" fg:x="2717" fg:w="32"/><text x="1.3736%" y="959.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (32 samples, 0.01%)</title><rect x="1.1236%" y="933" width="0.0132%" height="15" fill="rgb(216,85,19)" fg:x="2717" fg:w="32"/><text x="1.3736%" y="943.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (32 samples, 0.01%)</title><rect x="1.1236%" y="917" width="0.0132%" height="15" fill="rgb(235,228,7)" fg:x="2717" fg:w="32"/><text x="1.3736%" y="927.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (32 samples, 0.01%)</title><rect x="1.1236%" y="901" width="0.0132%" height="15" fill="rgb(245,175,0)" fg:x="2717" fg:w="32"/><text x="1.3736%" y="911.50"></text></g><g><title>&lt;aptos_crypto::secp256k1::Secp256k1PublicKey as serde::ser::Serialize&gt;::serialize (33 samples, 0.01%)</title><rect x="1.1368%" y="1013" width="0.0136%" height="15" fill="rgb(208,168,36)" fg:x="2749" fg:w="33"/><text x="1.3868%" y="1023.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (33 samples, 0.01%)</title><rect x="1.1368%" y="997" width="0.0136%" height="15" fill="rgb(246,171,24)" fg:x="2749" fg:w="33"/><text x="1.3868%" y="1007.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (33 samples, 0.01%)</title><rect x="1.1368%" y="981" width="0.0136%" height="15" fill="rgb(215,142,24)" fg:x="2749" fg:w="33"/><text x="1.3868%" y="991.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (33 samples, 0.01%)</title><rect x="1.1368%" y="965" width="0.0136%" height="15" fill="rgb(250,187,7)" fg:x="2749" fg:w="33"/><text x="1.3868%" y="975.50"></text></g><g><title>std::io::Write::write_all (33 samples, 0.01%)</title><rect x="1.1368%" y="949" width="0.0136%" height="15" fill="rgb(228,66,33)" fg:x="2749" fg:w="33"/><text x="1.3868%" y="959.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionHasher as std::io::Write&gt;::write (33 samples, 0.01%)</title><rect x="1.1368%" y="933" width="0.0136%" height="15" fill="rgb(234,215,21)" fg:x="2749" fg:w="33"/><text x="1.3868%" y="943.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (32 samples, 0.01%)</title><rect x="1.1372%" y="917" width="0.0132%" height="15" fill="rgb(222,191,20)" fg:x="2750" fg:w="32"/><text x="1.3872%" y="927.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (32 samples, 0.01%)</title><rect x="1.1372%" y="901" width="0.0132%" height="15" fill="rgb(245,79,54)" fg:x="2750" fg:w="32"/><text x="1.3872%" y="911.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (32 samples, 0.01%)</title><rect x="1.1372%" y="885" width="0.0132%" height="15" fill="rgb(240,10,37)" fg:x="2750" fg:w="32"/><text x="1.3872%" y="895.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (32 samples, 0.01%)</title><rect x="1.1372%" y="869" width="0.0132%" height="15" fill="rgb(214,192,32)" fg:x="2750" fg:w="32"/><text x="1.3872%" y="879.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (38 samples, 0.02%)</title><rect x="1.1368%" y="1029" width="0.0157%" height="15" fill="rgb(209,36,54)" fg:x="2749" fg:w="38"/><text x="1.3868%" y="1039.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as aptos_crypto::hash::CryptoHash&gt;::hash (215 samples, 0.09%)</title><rect x="1.0653%" y="1157" width="0.0889%" height="15" fill="rgb(220,10,11)" fg:x="2576" fg:w="215"/><text x="1.3153%" y="1167.50"></text></g><g><title>bcs::ser::serialize_into (178 samples, 0.07%)</title><rect x="1.0806%" y="1141" width="0.0736%" height="15" fill="rgb(221,106,17)" fg:x="2613" fg:w="178"/><text x="1.3306%" y="1151.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (178 samples, 0.07%)</title><rect x="1.0806%" y="1125" width="0.0736%" height="15" fill="rgb(251,142,44)" fg:x="2613" fg:w="178"/><text x="1.3306%" y="1135.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::Transaction&gt;::serialize (178 samples, 0.07%)</title><rect x="1.0806%" y="1109" width="0.0736%" height="15" fill="rgb(238,13,15)" fg:x="2613" fg:w="178"/><text x="1.3306%" y="1119.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (178 samples, 0.07%)</title><rect x="1.0806%" y="1093" width="0.0736%" height="15" fill="rgb(208,107,27)" fg:x="2613" fg:w="178"/><text x="1.3306%" y="1103.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::SignedTransaction&gt;::serialize (178 samples, 0.07%)</title><rect x="1.0806%" y="1077" width="0.0736%" height="15" fill="rgb(205,136,37)" fg:x="2613" fg:w="178"/><text x="1.3306%" y="1087.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (178 samples, 0.07%)</title><rect x="1.0806%" y="1061" width="0.0736%" height="15" fill="rgb(250,205,27)" fg:x="2613" fg:w="178"/><text x="1.3306%" y="1071.50"></text></g><g><title>aptos_types::transaction::authenticator::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::authenticator::TransactionAuthenticator&gt;::serialize (42 samples, 0.02%)</title><rect x="1.1368%" y="1045" width="0.0174%" height="15" fill="rgb(210,80,43)" fg:x="2749" fg:w="42"/><text x="1.3868%" y="1055.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (25 samples, 0.01%)</title><rect x="1.1542%" y="1141" width="0.0103%" height="15" fill="rgb(247,160,36)" fg:x="2791" fg:w="25"/><text x="1.4042%" y="1151.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (25 samples, 0.01%)</title><rect x="1.1542%" y="1125" width="0.0103%" height="15" fill="rgb(234,13,49)" fg:x="2791" fg:w="25"/><text x="1.4042%" y="1135.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (25 samples, 0.01%)</title><rect x="1.1542%" y="1109" width="0.0103%" height="15" fill="rgb(234,122,0)" fg:x="2791" fg:w="25"/><text x="1.4042%" y="1119.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (25 samples, 0.01%)</title><rect x="1.1542%" y="1093" width="0.0103%" height="15" fill="rgb(207,146,38)" fg:x="2791" fg:w="25"/><text x="1.4042%" y="1103.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (25 samples, 0.01%)</title><rect x="1.1542%" y="1077" width="0.0103%" height="15" fill="rgb(207,177,25)" fg:x="2791" fg:w="25"/><text x="1.4042%" y="1087.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize (73 samples, 0.03%)</title><rect x="1.1645%" y="1045" width="0.0302%" height="15" fill="rgb(211,178,42)" fg:x="2816" fg:w="73"/><text x="1.4145%" y="1055.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::_::&lt;impl serde::ser::Serialize for &lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::Value&gt;::serialize (73 samples, 0.03%)</title><rect x="1.1645%" y="1029" width="0.0302%" height="15" fill="rgb(230,69,54)" fg:x="2816" fg:w="73"/><text x="1.4145%" y="1039.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (73 samples, 0.03%)</title><rect x="1.1645%" y="1013" width="0.0302%" height="15" fill="rgb(214,135,41)" fg:x="2816" fg:w="73"/><text x="1.4145%" y="1023.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (73 samples, 0.03%)</title><rect x="1.1645%" y="997" width="0.0302%" height="15" fill="rgb(237,67,25)" fg:x="2816" fg:w="73"/><text x="1.4145%" y="1007.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (73 samples, 0.03%)</title><rect x="1.1645%" y="981" width="0.0302%" height="15" fill="rgb(222,189,50)" fg:x="2816" fg:w="73"/><text x="1.4145%" y="991.50"></text></g><g><title> 32]&gt;::serialize (73 samples, 0.03%)</title><rect x="1.1645%" y="965" width="0.0302%" height="15" fill="rgb(245,148,34)" fg:x="2816" fg:w="73"/><text x="1.4145%" y="975.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (73 samples, 0.03%)</title><rect x="1.1645%" y="949" width="0.0302%" height="15" fill="rgb(222,29,6)" fg:x="2816" fg:w="73"/><text x="1.4145%" y="959.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (73 samples, 0.03%)</title><rect x="1.1645%" y="933" width="0.0302%" height="15" fill="rgb(221,189,43)" fg:x="2816" fg:w="73"/><text x="1.4145%" y="943.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (73 samples, 0.03%)</title><rect x="1.1645%" y="917" width="0.0302%" height="15" fill="rgb(207,36,27)" fg:x="2816" fg:w="73"/><text x="1.4145%" y="927.50"></text></g><g><title>std::io::Write::write_all (73 samples, 0.03%)</title><rect x="1.1645%" y="901" width="0.0302%" height="15" fill="rgb(217,90,24)" fg:x="2816" fg:w="73"/><text x="1.4145%" y="911.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoV0Hasher as std::io::Write&gt;::write (73 samples, 0.03%)</title><rect x="1.1645%" y="885" width="0.0302%" height="15" fill="rgb(224,66,35)" fg:x="2816" fg:w="73"/><text x="1.4145%" y="895.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (55 samples, 0.02%)</title><rect x="1.1719%" y="869" width="0.0227%" height="15" fill="rgb(221,13,50)" fg:x="2834" fg:w="55"/><text x="1.4219%" y="879.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (32 samples, 0.01%)</title><rect x="1.1815%" y="853" width="0.0132%" height="15" fill="rgb(236,68,49)" fg:x="2857" fg:w="32"/><text x="1.4315%" y="863.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (32 samples, 0.01%)</title><rect x="1.1815%" y="837" width="0.0132%" height="15" fill="rgb(229,146,28)" fg:x="2857" fg:w="32"/><text x="1.4315%" y="847.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (32 samples, 0.01%)</title><rect x="1.1815%" y="821" width="0.0132%" height="15" fill="rgb(225,31,38)" fg:x="2857" fg:w="32"/><text x="1.4315%" y="831.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfo as aptos_crypto::hash::CryptoHash&gt;::hash (99 samples, 0.04%)</title><rect x="1.1542%" y="1157" width="0.0409%" height="15" fill="rgb(250,208,3)" fg:x="2791" fg:w="99"/><text x="1.4042%" y="1167.50"></text></g><g><title>bcs::ser::serialize_into (74 samples, 0.03%)</title><rect x="1.1645%" y="1141" width="0.0306%" height="15" fill="rgb(246,54,23)" fg:x="2816" fg:w="74"/><text x="1.4145%" y="1151.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (74 samples, 0.03%)</title><rect x="1.1645%" y="1125" width="0.0306%" height="15" fill="rgb(243,76,11)" fg:x="2816" fg:w="74"/><text x="1.4145%" y="1135.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfo&gt;::serialize (74 samples, 0.03%)</title><rect x="1.1645%" y="1109" width="0.0306%" height="15" fill="rgb(245,21,50)" fg:x="2816" fg:w="74"/><text x="1.4145%" y="1119.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (74 samples, 0.03%)</title><rect x="1.1645%" y="1093" width="0.0306%" height="15" fill="rgb(228,9,43)" fg:x="2816" fg:w="74"/><text x="1.4145%" y="1103.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfoV0&gt;::serialize (74 samples, 0.03%)</title><rect x="1.1645%" y="1077" width="0.0306%" height="15" fill="rgb(208,100,47)" fg:x="2816" fg:w="74"/><text x="1.4145%" y="1087.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (74 samples, 0.03%)</title><rect x="1.1645%" y="1061" width="0.0306%" height="15" fill="rgb(232,26,8)" fg:x="2816" fg:w="74"/><text x="1.4145%" y="1071.50"></text></g><g><title>&lt;aptos_crypto::hash::TransactionAccumulatorHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (97 samples, 0.04%)</title><rect x="1.1984%" y="1093" width="0.0401%" height="15" fill="rgb(216,166,38)" fg:x="2898" fg:w="97"/><text x="1.4484%" y="1103.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (97 samples, 0.04%)</title><rect x="1.1984%" y="1077" width="0.0401%" height="15" fill="rgb(251,202,51)" fg:x="2898" fg:w="97"/><text x="1.4484%" y="1087.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (93 samples, 0.04%)</title><rect x="1.2001%" y="1061" width="0.0385%" height="15" fill="rgb(254,216,34)" fg:x="2902" fg:w="93"/><text x="1.4501%" y="1071.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (93 samples, 0.04%)</title><rect x="1.2001%" y="1045" width="0.0385%" height="15" fill="rgb(251,32,27)" fg:x="2902" fg:w="93"/><text x="1.4501%" y="1055.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (93 samples, 0.04%)</title><rect x="1.2001%" y="1029" width="0.0385%" height="15" fill="rgb(208,127,28)" fg:x="2902" fg:w="93"/><text x="1.4501%" y="1039.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (90 samples, 0.04%)</title><rect x="1.2013%" y="1013" width="0.0372%" height="15" fill="rgb(224,137,22)" fg:x="2905" fg:w="90"/><text x="1.4513%" y="1023.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (90 samples, 0.04%)</title><rect x="1.2013%" y="997" width="0.0372%" height="15" fill="rgb(254,70,32)" fg:x="2905" fg:w="90"/><text x="1.4513%" y="1007.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (90 samples, 0.04%)</title><rect x="1.2013%" y="981" width="0.0372%" height="15" fill="rgb(229,75,37)" fg:x="2905" fg:w="90"/><text x="1.4513%" y="991.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (90 samples, 0.04%)</title><rect x="1.2013%" y="965" width="0.0372%" height="15" fill="rgb(252,64,23)" fg:x="2905" fg:w="90"/><text x="1.4513%" y="975.50"></text></g><g><title>aptos_types::proof::accumulator::InMemoryAccumulator&lt;H&gt;::append_one (103 samples, 0.04%)</title><rect x="1.1984%" y="1125" width="0.0426%" height="15" fill="rgb(232,162,48)" fg:x="2898" fg:w="103"/><text x="1.4484%" y="1135.50"></text></g><g><title>&lt;aptos_types::proof::MerkleTreeInternalNode&lt;H&gt; as aptos_crypto::hash::CryptoHash&gt;::hash (103 samples, 0.04%)</title><rect x="1.1984%" y="1109" width="0.0426%" height="15" fill="rgb(246,160,12)" fg:x="2898" fg:w="103"/><text x="1.4484%" y="1119.50"></text></g><g><title>aptos_types::proof::accumulator::InMemoryAccumulator&lt;H&gt;::from_leaves (105 samples, 0.04%)</title><rect x="1.1984%" y="1157" width="0.0434%" height="15" fill="rgb(247,166,0)" fg:x="2898" fg:w="105"/><text x="1.4484%" y="1167.50"></text></g><g><title>aptos_types::proof::accumulator::InMemoryAccumulator&lt;H&gt;::append (105 samples, 0.04%)</title><rect x="1.1984%" y="1141" width="0.0434%" height="15" fill="rgb(249,219,21)" fg:x="2898" fg:w="105"/><text x="1.4484%" y="1151.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff (429 samples, 0.18%)</title><rect x="1.0653%" y="1173" width="0.1774%" height="15" fill="rgb(205,209,3)" fg:x="2576" fg:w="429"/><text x="1.3153%" y="1183.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (72 samples, 0.03%)</title><rect x="1.2555%" y="1045" width="0.0298%" height="15" fill="rgb(243,44,1)" fg:x="3036" fg:w="72"/><text x="1.5055%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (92 samples, 0.04%)</title><rect x="1.2480%" y="1061" width="0.0380%" height="15" fill="rgb(206,159,16)" fg:x="3018" fg:w="92"/><text x="1.4980%" y="1071.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as core::clone::Clone&gt;::clone (152 samples, 0.06%)</title><rect x="1.2435%" y="1141" width="0.0629%" height="15" fill="rgb(244,77,30)" fg:x="3007" fg:w="152"/><text x="1.4935%" y="1151.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetV0 as core::clone::Clone&gt;::clone (152 samples, 0.06%)</title><rect x="1.2435%" y="1125" width="0.0629%" height="15" fill="rgb(218,69,12)" fg:x="3007" fg:w="152"/><text x="1.4935%" y="1135.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetMut as core::clone::Clone&gt;::clone (152 samples, 0.06%)</title><rect x="1.2435%" y="1109" width="0.0629%" height="15" fill="rgb(212,87,7)" fg:x="3007" fg:w="152"/><text x="1.4935%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (152 samples, 0.06%)</title><rect x="1.2435%" y="1093" width="0.0629%" height="15" fill="rgb(245,114,25)" fg:x="3007" fg:w="152"/><text x="1.4935%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (141 samples, 0.06%)</title><rect x="1.2480%" y="1077" width="0.0583%" height="15" fill="rgb(210,61,42)" fg:x="3018" fg:w="141"/><text x="1.4980%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::push (42 samples, 0.02%)</title><rect x="1.2890%" y="1061" width="0.0174%" height="15" fill="rgb(211,52,33)" fg:x="3117" fg:w="42"/><text x="1.5390%" y="1071.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (42 samples, 0.02%)</title><rect x="1.2890%" y="1045" width="0.0174%" height="15" fill="rgb(234,58,33)" fg:x="3117" fg:w="42"/><text x="1.5390%" y="1055.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (87 samples, 0.04%)</title><rect x="1.3063%" y="1045" width="0.0360%" height="15" fill="rgb(220,115,36)" fg:x="3159" fg:w="87"/><text x="1.5563%" y="1055.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (87 samples, 0.04%)</title><rect x="1.3063%" y="1029" width="0.0360%" height="15" fill="rgb(243,153,54)" fg:x="3159" fg:w="87"/><text x="1.5563%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (87 samples, 0.04%)</title><rect x="1.3063%" y="1013" width="0.0360%" height="15" fill="rgb(251,47,18)" fg:x="3159" fg:w="87"/><text x="1.5563%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (87 samples, 0.04%)</title><rect x="1.3063%" y="997" width="0.0360%" height="15" fill="rgb(242,102,42)" fg:x="3159" fg:w="87"/><text x="1.5563%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (87 samples, 0.04%)</title><rect x="1.3063%" y="981" width="0.0360%" height="15" fill="rgb(234,31,38)" fg:x="3159" fg:w="87"/><text x="1.5563%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (87 samples, 0.04%)</title><rect x="1.3063%" y="965" width="0.0360%" height="15" fill="rgb(221,117,51)" fg:x="3159" fg:w="87"/><text x="1.5563%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (87 samples, 0.04%)</title><rect x="1.3063%" y="949" width="0.0360%" height="15" fill="rgb(212,20,18)" fg:x="3159" fg:w="87"/><text x="1.5563%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (87 samples, 0.04%)</title><rect x="1.3063%" y="933" width="0.0360%" height="15" fill="rgb(245,133,36)" fg:x="3159" fg:w="87"/><text x="1.5563%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (87 samples, 0.04%)</title><rect x="1.3063%" y="917" width="0.0360%" height="15" fill="rgb(212,6,19)" fg:x="3159" fg:w="87"/><text x="1.5563%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87 samples, 0.04%)</title><rect x="1.3063%" y="901" width="0.0360%" height="15" fill="rgb(218,1,36)" fg:x="3159" fg:w="87"/><text x="1.5563%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.04%)</title><rect x="1.3063%" y="885" width="0.0360%" height="15" fill="rgb(246,84,54)" fg:x="3159" fg:w="87"/><text x="1.5563%" y="895.50"></text></g><g><title>alloc::alloc::alloc (87 samples, 0.04%)</title><rect x="1.3063%" y="869" width="0.0360%" height="15" fill="rgb(242,110,6)" fg:x="3159" fg:w="87"/><text x="1.5563%" y="879.50"></text></g><g><title>mallocx (74 samples, 0.03%)</title><rect x="1.3117%" y="853" width="0.0306%" height="15" fill="rgb(214,47,5)" fg:x="3172" fg:w="74"/><text x="1.5617%" y="863.50"></text></g><g><title>imalloc (37 samples, 0.02%)</title><rect x="1.3270%" y="837" width="0.0153%" height="15" fill="rgb(218,159,25)" fg:x="3209" fg:w="37"/><text x="1.5770%" y="847.50"></text></g><g><title>imalloc_body (37 samples, 0.02%)</title><rect x="1.3270%" y="821" width="0.0153%" height="15" fill="rgb(215,211,28)" fg:x="3209" fg:w="37"/><text x="1.5770%" y="831.50"></text></g><g><title>imalloc_no_sample (37 samples, 0.02%)</title><rect x="1.3270%" y="805" width="0.0153%" height="15" fill="rgb(238,59,32)" fg:x="3209" fg:w="37"/><text x="1.5770%" y="815.50"></text></g><g><title>iallocztm (37 samples, 0.02%)</title><rect x="1.3270%" y="789" width="0.0153%" height="15" fill="rgb(226,82,3)" fg:x="3209" fg:w="37"/><text x="1.5770%" y="799.50"></text></g><g><title>arena_malloc (37 samples, 0.02%)</title><rect x="1.3270%" y="773" width="0.0153%" height="15" fill="rgb(240,164,32)" fg:x="3209" fg:w="37"/><text x="1.5770%" y="783.50"></text></g><g><title>tcache_alloc_small (37 samples, 0.02%)</title><rect x="1.3270%" y="757" width="0.0153%" height="15" fill="rgb(232,46,7)" fg:x="3209" fg:w="37"/><text x="1.5770%" y="767.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (37 samples, 0.02%)</title><rect x="1.3270%" y="741" width="0.0153%" height="15" fill="rgb(229,129,53)" fg:x="3209" fg:w="37"/><text x="1.5770%" y="751.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (37 samples, 0.02%)</title><rect x="1.3270%" y="725" width="0.0153%" height="15" fill="rgb(234,188,29)" fg:x="3209" fg:w="37"/><text x="1.5770%" y="735.50"></text></g><g><title>arena_slab_reg_alloc (31 samples, 0.01%)</title><rect x="1.3295%" y="709" width="0.0128%" height="15" fill="rgb(246,141,4)" fg:x="3215" fg:w="31"/><text x="1.5795%" y="719.50"></text></g><g><title>bitmap_sfu (31 samples, 0.01%)</title><rect x="1.3295%" y="693" width="0.0128%" height="15" fill="rgb(229,23,39)" fg:x="3215" fg:w="31"/><text x="1.5795%" y="703.50"></text></g><g><title>bitmap_set (31 samples, 0.01%)</title><rect x="1.3295%" y="677" width="0.0128%" height="15" fill="rgb(206,12,3)" fg:x="3215" fg:w="31"/><text x="1.5795%" y="687.50"></text></g><g><title>core::clone::Clone::clone (99 samples, 0.04%)</title><rect x="1.3063%" y="1061" width="0.0409%" height="15" fill="rgb(252,226,20)" fg:x="3159" fg:w="99"/><text x="1.5563%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (153 samples, 0.06%)</title><rect x="1.3063%" y="1093" width="0.0633%" height="15" fill="rgb(216,123,35)" fg:x="3159" fg:w="153"/><text x="1.5563%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (153 samples, 0.06%)</title><rect x="1.3063%" y="1077" width="0.0633%" height="15" fill="rgb(212,68,40)" fg:x="3159" fg:w="153"/><text x="1.5563%" y="1087.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (54 samples, 0.02%)</title><rect x="1.3473%" y="1061" width="0.0223%" height="15" fill="rgb(254,125,32)" fg:x="3258" fg:w="54"/><text x="1.5973%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (54 samples, 0.02%)</title><rect x="1.3473%" y="1045" width="0.0223%" height="15" fill="rgb(253,97,22)" fg:x="3258" fg:w="54"/><text x="1.5973%" y="1055.50"></text></g><g><title>core::ptr::write (54 samples, 0.02%)</title><rect x="1.3473%" y="1029" width="0.0223%" height="15" fill="rgb(241,101,14)" fg:x="3258" fg:w="54"/><text x="1.5973%" y="1039.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (25 samples, 0.01%)</title><rect x="1.3696%" y="869" width="0.0103%" height="15" fill="rgb(238,103,29)" fg:x="3312" fg:w="25"/><text x="1.6196%" y="879.50"></text></g><g><title>arena_bin_malloc_hard (25 samples, 0.01%)</title><rect x="1.3696%" y="853" width="0.0103%" height="15" fill="rgb(233,195,47)" fg:x="3312" fg:w="25"/><text x="1.6196%" y="863.50"></text></g><g><title>arena_bin_nonfull_slab_get (25 samples, 0.01%)</title><rect x="1.3696%" y="837" width="0.0103%" height="15" fill="rgb(246,218,30)" fg:x="3312" fg:w="25"/><text x="1.6196%" y="847.50"></text></g><g><title>arena_slab_alloc (25 samples, 0.01%)</title><rect x="1.3696%" y="821" width="0.0103%" height="15" fill="rgb(219,145,47)" fg:x="3312" fg:w="25"/><text x="1.6196%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (179 samples, 0.07%)</title><rect x="1.3063%" y="1141" width="0.0740%" height="15" fill="rgb(243,12,26)" fg:x="3159" fg:w="179"/><text x="1.5563%" y="1151.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (179 samples, 0.07%)</title><rect x="1.3063%" y="1125" width="0.0740%" height="15" fill="rgb(214,87,16)" fg:x="3159" fg:w="179"/><text x="1.5563%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (179 samples, 0.07%)</title><rect x="1.3063%" y="1109" width="0.0740%" height="15" fill="rgb(208,99,42)" fg:x="3159" fg:w="179"/><text x="1.5563%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (26 samples, 0.01%)</title><rect x="1.3696%" y="1093" width="0.0108%" height="15" fill="rgb(253,99,2)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (26 samples, 0.01%)</title><rect x="1.3696%" y="1077" width="0.0108%" height="15" fill="rgb(220,168,23)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="1087.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (26 samples, 0.01%)</title><rect x="1.3696%" y="1061" width="0.0108%" height="15" fill="rgb(242,38,24)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.01%)</title><rect x="1.3696%" y="1045" width="0.0108%" height="15" fill="rgb(225,182,9)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.01%)</title><rect x="1.3696%" y="1029" width="0.0108%" height="15" fill="rgb(243,178,37)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.01%)</title><rect x="1.3696%" y="1013" width="0.0108%" height="15" fill="rgb(232,139,19)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="1023.50"></text></g><g><title>mallocx (26 samples, 0.01%)</title><rect x="1.3696%" y="997" width="0.0108%" height="15" fill="rgb(225,201,24)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="1007.50"></text></g><g><title>imalloc (26 samples, 0.01%)</title><rect x="1.3696%" y="981" width="0.0108%" height="15" fill="rgb(221,47,46)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="991.50"></text></g><g><title>imalloc_body (26 samples, 0.01%)</title><rect x="1.3696%" y="965" width="0.0108%" height="15" fill="rgb(249,23,13)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="975.50"></text></g><g><title>imalloc_no_sample (26 samples, 0.01%)</title><rect x="1.3696%" y="949" width="0.0108%" height="15" fill="rgb(219,9,5)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="959.50"></text></g><g><title>iallocztm (26 samples, 0.01%)</title><rect x="1.3696%" y="933" width="0.0108%" height="15" fill="rgb(254,171,16)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="943.50"></text></g><g><title>arena_malloc (26 samples, 0.01%)</title><rect x="1.3696%" y="917" width="0.0108%" height="15" fill="rgb(230,171,20)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="927.50"></text></g><g><title>tcache_alloc_small (26 samples, 0.01%)</title><rect x="1.3696%" y="901" width="0.0108%" height="15" fill="rgb(210,71,41)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="911.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (26 samples, 0.01%)</title><rect x="1.3696%" y="885" width="0.0108%" height="15" fill="rgb(206,173,20)" fg:x="3312" fg:w="26"/><text x="1.6196%" y="895.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (30 samples, 0.01%)</title><rect x="1.4014%" y="965" width="0.0124%" height="15" fill="rgb(233,88,34)" fg:x="3389" fg:w="30"/><text x="1.6514%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (30 samples, 0.01%)</title><rect x="1.4014%" y="949" width="0.0124%" height="15" fill="rgb(223,209,46)" fg:x="3389" fg:w="30"/><text x="1.6514%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (30 samples, 0.01%)</title><rect x="1.4014%" y="933" width="0.0124%" height="15" fill="rgb(250,43,18)" fg:x="3389" fg:w="30"/><text x="1.6514%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (30 samples, 0.01%)</title><rect x="1.4014%" y="917" width="0.0124%" height="15" fill="rgb(208,13,10)" fg:x="3389" fg:w="30"/><text x="1.6514%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (30 samples, 0.01%)</title><rect x="1.4014%" y="901" width="0.0124%" height="15" fill="rgb(212,200,36)" fg:x="3389" fg:w="30"/><text x="1.6514%" y="911.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (28 samples, 0.01%)</title><rect x="1.4139%" y="933" width="0.0116%" height="15" fill="rgb(225,90,30)" fg:x="3419" fg:w="28"/><text x="1.6639%" y="943.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (28 samples, 0.01%)</title><rect x="1.4139%" y="917" width="0.0116%" height="15" fill="rgb(236,182,39)" fg:x="3419" fg:w="28"/><text x="1.6639%" y="927.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (28 samples, 0.01%)</title><rect x="1.4139%" y="901" width="0.0116%" height="15" fill="rgb(212,144,35)" fg:x="3419" fg:w="28"/><text x="1.6639%" y="911.50"></text></g><g><title> N]&gt;::hash (28 samples, 0.01%)</title><rect x="1.4139%" y="885" width="0.0116%" height="15" fill="rgb(228,63,44)" fg:x="3419" fg:w="28"/><text x="1.6639%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (28 samples, 0.01%)</title><rect x="1.4139%" y="869" width="0.0116%" height="15" fill="rgb(228,109,6)" fg:x="3419" fg:w="28"/><text x="1.6639%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (28 samples, 0.01%)</title><rect x="1.4139%" y="853" width="0.0116%" height="15" fill="rgb(238,117,24)" fg:x="3419" fg:w="28"/><text x="1.6639%" y="863.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.01%)</title><rect x="1.4139%" y="837" width="0.0116%" height="15" fill="rgb(242,26,26)" fg:x="3419" fg:w="28"/><text x="1.6639%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 0.01%)</title><rect x="1.4139%" y="821" width="0.0116%" height="15" fill="rgb(221,92,48)" fg:x="3419" fg:w="28"/><text x="1.6639%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.01%)</title><rect x="1.4139%" y="805" width="0.0116%" height="15" fill="rgb(209,209,32)" fg:x="3419" fg:w="28"/><text x="1.6639%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (28 samples, 0.01%)</title><rect x="1.4139%" y="789" width="0.0116%" height="15" fill="rgb(221,70,22)" fg:x="3419" fg:w="28"/><text x="1.6639%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (104 samples, 0.04%)</title><rect x="1.4014%" y="997" width="0.0430%" height="15" fill="rgb(248,145,5)" fg:x="3389" fg:w="104"/><text x="1.6514%" y="1007.50"></text></g><g><title>core::hash::BuildHasher::hash_one (104 samples, 0.04%)</title><rect x="1.4014%" y="981" width="0.0430%" height="15" fill="rgb(226,116,26)" fg:x="3389" fg:w="104"/><text x="1.6514%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (74 samples, 0.03%)</title><rect x="1.4139%" y="965" width="0.0306%" height="15" fill="rgb(244,5,17)" fg:x="3419" fg:w="74"/><text x="1.6639%" y="975.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (74 samples, 0.03%)</title><rect x="1.4139%" y="949" width="0.0306%" height="15" fill="rgb(252,159,33)" fg:x="3419" fg:w="74"/><text x="1.6639%" y="959.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (46 samples, 0.02%)</title><rect x="1.4254%" y="933" width="0.0190%" height="15" fill="rgb(206,71,0)" fg:x="3447" fg:w="46"/><text x="1.6754%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (46 samples, 0.02%)</title><rect x="1.4254%" y="917" width="0.0190%" height="15" fill="rgb(233,118,54)" fg:x="3447" fg:w="46"/><text x="1.6754%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (46 samples, 0.02%)</title><rect x="1.4254%" y="901" width="0.0190%" height="15" fill="rgb(234,83,48)" fg:x="3447" fg:w="46"/><text x="1.6754%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (46 samples, 0.02%)</title><rect x="1.4254%" y="885" width="0.0190%" height="15" fill="rgb(228,3,54)" fg:x="3447" fg:w="46"/><text x="1.6754%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (183 samples, 0.08%)</title><rect x="1.3804%" y="1045" width="0.0757%" height="15" fill="rgb(226,155,13)" fg:x="3338" fg:w="183"/><text x="1.6304%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (183 samples, 0.08%)</title><rect x="1.3804%" y="1029" width="0.0757%" height="15" fill="rgb(241,28,37)" fg:x="3338" fg:w="183"/><text x="1.6304%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (148 samples, 0.06%)</title><rect x="1.3948%" y="1013" width="0.0612%" height="15" fill="rgb(233,93,10)" fg:x="3373" fg:w="148"/><text x="1.6448%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (28 samples, 0.01%)</title><rect x="1.4445%" y="997" width="0.0116%" height="15" fill="rgb(225,113,19)" fg:x="3493" fg:w="28"/><text x="1.6945%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (28 samples, 0.01%)</title><rect x="1.4445%" y="981" width="0.0116%" height="15" fill="rgb(241,2,18)" fg:x="3493" fg:w="28"/><text x="1.6945%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::{{closure}} (28 samples, 0.01%)</title><rect x="1.4445%" y="965" width="0.0116%" height="15" fill="rgb(228,207,21)" fg:x="3493" fg:w="28"/><text x="1.6945%" y="975.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (28 samples, 0.01%)</title><rect x="1.4445%" y="949" width="0.0116%" height="15" fill="rgb(213,211,35)" fg:x="3493" fg:w="28"/><text x="1.6945%" y="959.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (28 samples, 0.01%)</title><rect x="1.4445%" y="933" width="0.0116%" height="15" fill="rgb(209,83,10)" fg:x="3493" fg:w="28"/><text x="1.6945%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (28 samples, 0.01%)</title><rect x="1.4445%" y="917" width="0.0116%" height="15" fill="rgb(209,164,1)" fg:x="3493" fg:w="28"/><text x="1.6945%" y="927.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (28 samples, 0.01%)</title><rect x="1.4445%" y="901" width="0.0116%" height="15" fill="rgb(213,184,43)" fg:x="3493" fg:w="28"/><text x="1.6945%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (184 samples, 0.08%)</title><rect x="1.3804%" y="1141" width="0.0761%" height="15" fill="rgb(231,61,34)" fg:x="3338" fg:w="184"/><text x="1.6304%" y="1151.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (184 samples, 0.08%)</title><rect x="1.3804%" y="1125" width="0.0761%" height="15" fill="rgb(235,75,3)" fg:x="3338" fg:w="184"/><text x="1.6304%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (184 samples, 0.08%)</title><rect x="1.3804%" y="1109" width="0.0761%" height="15" fill="rgb(220,106,47)" fg:x="3338" fg:w="184"/><text x="1.6304%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (184 samples, 0.08%)</title><rect x="1.3804%" y="1093" width="0.0761%" height="15" fill="rgb(210,196,33)" fg:x="3338" fg:w="184"/><text x="1.6304%" y="1103.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (184 samples, 0.08%)</title><rect x="1.3804%" y="1077" width="0.0761%" height="15" fill="rgb(229,154,42)" fg:x="3338" fg:w="184"/><text x="1.6304%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (184 samples, 0.08%)</title><rect x="1.3804%" y="1061" width="0.0761%" height="15" fill="rgb(228,114,26)" fg:x="3338" fg:w="184"/><text x="1.6304%" y="1071.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (25 samples, 0.01%)</title><rect x="1.4796%" y="757" width="0.0103%" height="15" fill="rgb(208,144,1)" fg:x="3578" fg:w="25"/><text x="1.7296%" y="767.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (25 samples, 0.01%)</title><rect x="1.4796%" y="741" width="0.0103%" height="15" fill="rgb(239,112,37)" fg:x="3578" fg:w="25"/><text x="1.7296%" y="751.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (25 samples, 0.01%)</title><rect x="1.4796%" y="725" width="0.0103%" height="15" fill="rgb(210,96,50)" fg:x="3578" fg:w="25"/><text x="1.7296%" y="735.50"></text></g><g><title> N]&gt;::hash (25 samples, 0.01%)</title><rect x="1.4796%" y="709" width="0.0103%" height="15" fill="rgb(222,178,2)" fg:x="3578" fg:w="25"/><text x="1.7296%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (25 samples, 0.01%)</title><rect x="1.4796%" y="693" width="0.0103%" height="15" fill="rgb(226,74,18)" fg:x="3578" fg:w="25"/><text x="1.7296%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (25 samples, 0.01%)</title><rect x="1.4796%" y="677" width="0.0103%" height="15" fill="rgb(225,67,54)" fg:x="3578" fg:w="25"/><text x="1.7296%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.01%)</title><rect x="1.4796%" y="661" width="0.0103%" height="15" fill="rgb(251,92,32)" fg:x="3578" fg:w="25"/><text x="1.7296%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (25 samples, 0.01%)</title><rect x="1.4796%" y="645" width="0.0103%" height="15" fill="rgb(228,149,22)" fg:x="3578" fg:w="25"/><text x="1.7296%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25 samples, 0.01%)</title><rect x="1.4796%" y="629" width="0.0103%" height="15" fill="rgb(243,54,13)" fg:x="3578" fg:w="25"/><text x="1.7296%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (25 samples, 0.01%)</title><rect x="1.4796%" y="613" width="0.0103%" height="15" fill="rgb(243,180,28)" fg:x="3578" fg:w="25"/><text x="1.7296%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (25 samples, 0.01%)</title><rect x="1.4796%" y="597" width="0.0103%" height="15" fill="rgb(208,167,24)" fg:x="3578" fg:w="25"/><text x="1.7296%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (73 samples, 0.03%)</title><rect x="1.4709%" y="821" width="0.0302%" height="15" fill="rgb(245,73,45)" fg:x="3557" fg:w="73"/><text x="1.7209%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (73 samples, 0.03%)</title><rect x="1.4709%" y="805" width="0.0302%" height="15" fill="rgb(237,203,48)" fg:x="3557" fg:w="73"/><text x="1.7209%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (52 samples, 0.02%)</title><rect x="1.4796%" y="789" width="0.0215%" height="15" fill="rgb(211,197,16)" fg:x="3578" fg:w="52"/><text x="1.7296%" y="799.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (52 samples, 0.02%)</title><rect x="1.4796%" y="773" width="0.0215%" height="15" fill="rgb(243,99,51)" fg:x="3578" fg:w="52"/><text x="1.7296%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (27 samples, 0.01%)</title><rect x="1.4899%" y="757" width="0.0112%" height="15" fill="rgb(215,123,29)" fg:x="3603" fg:w="27"/><text x="1.7399%" y="767.50"></text></g><g><title>core::hash::Hasher::write_isize (27 samples, 0.01%)</title><rect x="1.4899%" y="741" width="0.0112%" height="15" fill="rgb(239,186,37)" fg:x="3603" fg:w="27"/><text x="1.7399%" y="751.50"></text></g><g><title>core::hash::Hasher::write_usize (27 samples, 0.01%)</title><rect x="1.4899%" y="725" width="0.0112%" height="15" fill="rgb(252,136,39)" fg:x="3603" fg:w="27"/><text x="1.7399%" y="735.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.01%)</title><rect x="1.4899%" y="709" width="0.0112%" height="15" fill="rgb(223,213,32)" fg:x="3603" fg:w="27"/><text x="1.7399%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.01%)</title><rect x="1.4899%" y="693" width="0.0112%" height="15" fill="rgb(233,115,5)" fg:x="3603" fg:w="27"/><text x="1.7399%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.01%)</title><rect x="1.4899%" y="677" width="0.0112%" height="15" fill="rgb(207,226,44)" fg:x="3603" fg:w="27"/><text x="1.7399%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (31 samples, 0.01%)</title><rect x="1.5015%" y="741" width="0.0128%" height="15" fill="rgb(208,126,0)" fg:x="3631" fg:w="31"/><text x="1.7515%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (74 samples, 0.03%)</title><rect x="1.5164%" y="741" width="0.0306%" height="15" fill="rgb(244,66,21)" fg:x="3667" fg:w="74"/><text x="1.7664%" y="751.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (74 samples, 0.03%)</title><rect x="1.5164%" y="725" width="0.0306%" height="15" fill="rgb(222,97,12)" fg:x="3667" fg:w="74"/><text x="1.7664%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (74 samples, 0.03%)</title><rect x="1.5164%" y="709" width="0.0306%" height="15" fill="rgb(219,213,19)" fg:x="3667" fg:w="74"/><text x="1.7664%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (74 samples, 0.03%)</title><rect x="1.5164%" y="693" width="0.0306%" height="15" fill="rgb(252,169,30)" fg:x="3667" fg:w="74"/><text x="1.7664%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (74 samples, 0.03%)</title><rect x="1.5164%" y="677" width="0.0306%" height="15" fill="rgb(206,32,51)" fg:x="3667" fg:w="74"/><text x="1.7664%" y="687.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (74 samples, 0.03%)</title><rect x="1.5164%" y="661" width="0.0306%" height="15" fill="rgb(250,172,42)" fg:x="3667" fg:w="74"/><text x="1.7664%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (43 samples, 0.02%)</title><rect x="1.5292%" y="645" width="0.0178%" height="15" fill="rgb(209,34,43)" fg:x="3698" fg:w="43"/><text x="1.7792%" y="655.50"></text></g><g><title>core::hash::Hasher::write_isize (43 samples, 0.02%)</title><rect x="1.5292%" y="629" width="0.0178%" height="15" fill="rgb(223,11,35)" fg:x="3698" fg:w="43"/><text x="1.7792%" y="639.50"></text></g><g><title>core::hash::Hasher::write_usize (43 samples, 0.02%)</title><rect x="1.5292%" y="613" width="0.0178%" height="15" fill="rgb(251,219,26)" fg:x="3698" fg:w="43"/><text x="1.7792%" y="623.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (43 samples, 0.02%)</title><rect x="1.5292%" y="597" width="0.0178%" height="15" fill="rgb(231,119,3)" fg:x="3698" fg:w="43"/><text x="1.7792%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (43 samples, 0.02%)</title><rect x="1.5292%" y="581" width="0.0178%" height="15" fill="rgb(216,97,11)" fg:x="3698" fg:w="43"/><text x="1.7792%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (43 samples, 0.02%)</title><rect x="1.5292%" y="565" width="0.0178%" height="15" fill="rgb(223,59,9)" fg:x="3698" fg:w="43"/><text x="1.7792%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (121 samples, 0.05%)</title><rect x="1.5011%" y="805" width="0.0500%" height="15" fill="rgb(233,93,31)" fg:x="3630" fg:w="121"/><text x="1.7511%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (120 samples, 0.05%)</title><rect x="1.5015%" y="789" width="0.0496%" height="15" fill="rgb(239,81,33)" fg:x="3631" fg:w="120"/><text x="1.7515%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (120 samples, 0.05%)</title><rect x="1.5015%" y="773" width="0.0496%" height="15" fill="rgb(213,120,34)" fg:x="3631" fg:w="120"/><text x="1.7515%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (120 samples, 0.05%)</title><rect x="1.5015%" y="757" width="0.0496%" height="15" fill="rgb(243,49,53)" fg:x="3631" fg:w="120"/><text x="1.7515%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (229 samples, 0.09%)</title><rect x="1.4705%" y="901" width="0.0947%" height="15" fill="rgb(247,216,33)" fg:x="3556" fg:w="229"/><text x="1.7205%" y="911.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::{{closure}} (229 samples, 0.09%)</title><rect x="1.4705%" y="885" width="0.0947%" height="15" fill="rgb(226,26,14)" fg:x="3556" fg:w="229"/><text x="1.7205%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (229 samples, 0.09%)</title><rect x="1.4705%" y="869" width="0.0947%" height="15" fill="rgb(215,49,53)" fg:x="3556" fg:w="229"/><text x="1.7205%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (229 samples, 0.09%)</title><rect x="1.4705%" y="853" width="0.0947%" height="15" fill="rgb(245,162,40)" fg:x="3556" fg:w="229"/><text x="1.7205%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (228 samples, 0.09%)</title><rect x="1.4709%" y="837" width="0.0943%" height="15" fill="rgb(229,68,17)" fg:x="3557" fg:w="228"/><text x="1.7209%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (155 samples, 0.06%)</title><rect x="1.5011%" y="821" width="0.0641%" height="15" fill="rgb(213,182,10)" fg:x="3630" fg:w="155"/><text x="1.7511%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (34 samples, 0.01%)</title><rect x="1.5511%" y="805" width="0.0141%" height="15" fill="rgb(245,125,30)" fg:x="3751" fg:w="34"/><text x="1.8011%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (34 samples, 0.01%)</title><rect x="1.5511%" y="789" width="0.0141%" height="15" fill="rgb(232,202,2)" fg:x="3751" fg:w="34"/><text x="1.8011%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (34 samples, 0.01%)</title><rect x="1.5511%" y="773" width="0.0141%" height="15" fill="rgb(237,140,51)" fg:x="3751" fg:w="34"/><text x="1.8011%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.01%)</title><rect x="1.5511%" y="757" width="0.0141%" height="15" fill="rgb(236,157,25)" fg:x="3751" fg:w="34"/><text x="1.8011%" y="767.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (667 samples, 0.28%)</title><rect x="1.5851%" y="741" width="0.2758%" height="15" fill="rgb(219,209,0)" fg:x="3833" fg:w="667"/><text x="1.8351%" y="751.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (667 samples, 0.28%)</title><rect x="1.5851%" y="725" width="0.2758%" height="15" fill="rgb(240,116,54)" fg:x="3833" fg:w="667"/><text x="1.8351%" y="735.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (667 samples, 0.28%)</title><rect x="1.5851%" y="709" width="0.2758%" height="15" fill="rgb(216,10,36)" fg:x="3833" fg:w="667"/><text x="1.8351%" y="719.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (666 samples, 0.28%)</title><rect x="1.5855%" y="693" width="0.2754%" height="15" fill="rgb(222,72,44)" fg:x="3834" fg:w="666"/><text x="1.8355%" y="703.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (696 samples, 0.29%)</title><rect x="1.5801%" y="821" width="0.2878%" height="15" fill="rgb(232,159,9)" fg:x="3821" fg:w="696"/><text x="1.8301%" y="831.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (696 samples, 0.29%)</title><rect x="1.5801%" y="805" width="0.2878%" height="15" fill="rgb(210,39,32)" fg:x="3821" fg:w="696"/><text x="1.8301%" y="815.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (687 samples, 0.28%)</title><rect x="1.5838%" y="789" width="0.2841%" height="15" fill="rgb(216,194,45)" fg:x="3830" fg:w="687"/><text x="1.8338%" y="799.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (687 samples, 0.28%)</title><rect x="1.5838%" y="773" width="0.2841%" height="15" fill="rgb(218,18,35)" fg:x="3830" fg:w="687"/><text x="1.8338%" y="783.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (684 samples, 0.28%)</title><rect x="1.5851%" y="757" width="0.2829%" height="15" fill="rgb(207,83,51)" fg:x="3833" fg:w="684"/><text x="1.8351%" y="767.50"></text></g><g><title>tiny_keccak::Buffer::xorin (261 samples, 0.11%)</title><rect x="1.8766%" y="645" width="0.1079%" height="15" fill="rgb(225,63,43)" fg:x="4538" fg:w="261"/><text x="2.1266%" y="655.50"></text></g><g><title>tiny_keccak::Buffer::execute (261 samples, 0.11%)</title><rect x="1.8766%" y="629" width="0.1079%" height="15" fill="rgb(207,57,36)" fg:x="4538" fg:w="261"/><text x="2.1266%" y="639.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (261 samples, 0.11%)</title><rect x="1.8766%" y="613" width="0.1079%" height="15" fill="rgb(216,99,33)" fg:x="4538" fg:w="261"/><text x="2.1266%" y="623.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValue as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (8,406 samples, 3.48%)</title><rect x="1.5768%" y="869" width="3.4761%" height="15" fill="rgb(225,42,16)" fg:x="3813" fg:w="8406"/><text x="1.8268%" y="879.50">&lt;ap..</text></g><g><title>aptos_types::state_store::state_value::StateValue::new (8,406 samples, 3.48%)</title><rect x="1.5768%" y="853" width="3.4761%" height="15" fill="rgb(220,201,45)" fg:x="3813" fg:w="8406"/><text x="1.8268%" y="863.50">apt..</text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (8,398 samples, 3.47%)</title><rect x="1.5801%" y="837" width="3.4728%" height="15" fill="rgb(225,33,4)" fg:x="3821" fg:w="8398"/><text x="1.8301%" y="847.50">&lt;ap..</text></g><g><title>bcs::ser::serialize_into (7,695 samples, 3.18%)</title><rect x="1.8708%" y="821" width="3.1821%" height="15" fill="rgb(224,33,50)" fg:x="4524" fg:w="7695"/><text x="2.1208%" y="831.50">bcs..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7,695 samples, 3.18%)</title><rect x="1.8708%" y="805" width="3.1821%" height="15" fill="rgb(246,198,51)" fg:x="4524" fg:w="7695"/><text x="2.1208%" y="815.50">ser..</text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (7,695 samples, 3.18%)</title><rect x="1.8708%" y="789" width="3.1821%" height="15" fill="rgb(205,22,4)" fg:x="4524" fg:w="7695"/><text x="2.1208%" y="799.50">apt..</text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (7,695 samples, 3.18%)</title><rect x="1.8708%" y="773" width="3.1821%" height="15" fill="rgb(206,3,8)" fg:x="4524" fg:w="7695"/><text x="2.1208%" y="783.50">&lt;bc..</text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (7,695 samples, 3.18%)</title><rect x="1.8708%" y="757" width="3.1821%" height="15" fill="rgb(251,23,15)" fg:x="4524" fg:w="7695"/><text x="2.1208%" y="767.50">&lt;ap..</text></g><g><title>serde_bytes::serialize (7,695 samples, 3.18%)</title><rect x="1.8708%" y="741" width="3.1821%" height="15" fill="rgb(252,88,28)" fg:x="4524" fg:w="7695"/><text x="2.1208%" y="751.50">ser..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (7,695 samples, 3.18%)</title><rect x="1.8708%" y="725" width="3.1821%" height="15" fill="rgb(212,127,14)" fg:x="4524" fg:w="7695"/><text x="2.1208%" y="735.50">&lt;al..</text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (7,695 samples, 3.18%)</title><rect x="1.8708%" y="709" width="3.1821%" height="15" fill="rgb(247,145,37)" fg:x="4524" fg:w="7695"/><text x="2.1208%" y="719.50">&lt;bc..</text></g><g><title>std::io::Write::write_all (7,695 samples, 3.18%)</title><rect x="1.8708%" y="693" width="3.1821%" height="15" fill="rgb(209,117,53)" fg:x="4524" fg:w="7695"/><text x="2.1208%" y="703.50">std..</text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as std::io::Write&gt;::write (7,695 samples, 3.18%)</title><rect x="1.8708%" y="677" width="3.1821%" height="15" fill="rgb(212,90,42)" fg:x="4524" fg:w="7695"/><text x="2.1208%" y="687.50">&lt;ap..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (7,681 samples, 3.18%)</title><rect x="1.8766%" y="661" width="3.1763%" height="15" fill="rgb(218,164,37)" fg:x="4538" fg:w="7681"/><text x="2.1266%" y="671.50">tin..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7,420 samples, 3.07%)</title><rect x="1.9845%" y="645" width="3.0684%" height="15" fill="rgb(246,65,34)" fg:x="4799" fg:w="7420"/><text x="2.2345%" y="655.50">tin..</text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7,420 samples, 3.07%)</title><rect x="1.9845%" y="629" width="3.0684%" height="15" fill="rgb(231,100,33)" fg:x="4799" fg:w="7420"/><text x="2.2345%" y="639.50">&lt;ti..</text></g><g><title>tiny_keccak::keccakf::keccakf (7,406 samples, 3.06%)</title><rect x="1.9903%" y="613" width="3.0626%" height="15" fill="rgb(228,126,14)" fg:x="4813" fg:w="7406"/><text x="2.2403%" y="623.50">tin..</text></g><g><title>_rjem_je_extent_alloc (37 samples, 0.02%)</title><rect x="5.0583%" y="453" width="0.0153%" height="15" fill="rgb(215,173,21)" fg:x="12232" fg:w="37"/><text x="5.3083%" y="463.50"></text></g><g><title>_rjem_je_extent_avail_remove (37 samples, 0.02%)</title><rect x="5.0583%" y="437" width="0.0153%" height="15" fill="rgb(210,6,40)" fg:x="12232" fg:w="37"/><text x="5.3083%" y="447.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (49 samples, 0.02%)</title><rect x="5.0537%" y="533" width="0.0203%" height="15" fill="rgb(212,48,18)" fg:x="12221" fg:w="49"/><text x="5.3037%" y="543.50"></text></g><g><title>extent_recycle (49 samples, 0.02%)</title><rect x="5.0537%" y="517" width="0.0203%" height="15" fill="rgb(230,214,11)" fg:x="12221" fg:w="49"/><text x="5.3037%" y="527.50"></text></g><g><title>extent_recycle_split (38 samples, 0.02%)</title><rect x="5.0583%" y="501" width="0.0157%" height="15" fill="rgb(254,105,39)" fg:x="12232" fg:w="38"/><text x="5.3083%" y="511.50"></text></g><g><title>extent_split_interior (38 samples, 0.02%)</title><rect x="5.0583%" y="485" width="0.0157%" height="15" fill="rgb(245,158,5)" fg:x="12232" fg:w="38"/><text x="5.3083%" y="495.50"></text></g><g><title>extent_split_impl (38 samples, 0.02%)</title><rect x="5.0583%" y="469" width="0.0157%" height="15" fill="rgb(249,208,11)" fg:x="12232" fg:w="38"/><text x="5.3083%" y="479.50"></text></g><g><title>tcache_alloc_large (50 samples, 0.02%)</title><rect x="5.0537%" y="565" width="0.0207%" height="15" fill="rgb(210,39,28)" fg:x="12221" fg:w="50"/><text x="5.3037%" y="575.50"></text></g><g><title>_rjem_je_large_palloc (50 samples, 0.02%)</title><rect x="5.0537%" y="549" width="0.0207%" height="15" fill="rgb(211,56,53)" fg:x="12221" fg:w="50"/><text x="5.3037%" y="559.50"></text></g><g><title>_rjem_je_extent_alloc (40 samples, 0.02%)</title><rect x="5.0843%" y="405" width="0.0165%" height="15" fill="rgb(226,201,30)" fg:x="12295" fg:w="40"/><text x="5.3343%" y="415.50"></text></g><g><title>_rjem_je_extent_avail_remove (40 samples, 0.02%)</title><rect x="5.0843%" y="389" width="0.0165%" height="15" fill="rgb(239,101,34)" fg:x="12295" fg:w="40"/><text x="5.3343%" y="399.50"></text></g><g><title>arena_bin_nonfull_slab_get (63 samples, 0.03%)</title><rect x="5.0781%" y="501" width="0.0261%" height="15" fill="rgb(226,209,5)" fg:x="12280" fg:w="63"/><text x="5.3281%" y="511.50"></text></g><g><title>arena_slab_alloc (63 samples, 0.03%)</title><rect x="5.0781%" y="485" width="0.0261%" height="15" fill="rgb(250,105,47)" fg:x="12280" fg:w="63"/><text x="5.3281%" y="495.50"></text></g><g><title>extent_recycle (62 samples, 0.03%)</title><rect x="5.0785%" y="469" width="0.0256%" height="15" fill="rgb(230,72,3)" fg:x="12281" fg:w="62"/><text x="5.3285%" y="479.50"></text></g><g><title>extent_recycle_split (52 samples, 0.02%)</title><rect x="5.0827%" y="453" width="0.0215%" height="15" fill="rgb(232,218,39)" fg:x="12291" fg:w="52"/><text x="5.3327%" y="463.50"></text></g><g><title>extent_split_interior (51 samples, 0.02%)</title><rect x="5.0831%" y="437" width="0.0211%" height="15" fill="rgb(248,166,6)" fg:x="12292" fg:w="51"/><text x="5.3331%" y="447.50"></text></g><g><title>extent_split_impl (49 samples, 0.02%)</title><rect x="5.0839%" y="421" width="0.0203%" height="15" fill="rgb(247,89,20)" fg:x="12294" fg:w="49"/><text x="5.3339%" y="431.50"></text></g><g><title>imalloc_body (126 samples, 0.05%)</title><rect x="5.0537%" y="629" width="0.0521%" height="15" fill="rgb(248,130,54)" fg:x="12221" fg:w="126"/><text x="5.3037%" y="639.50"></text></g><g><title>imalloc_no_sample (126 samples, 0.05%)</title><rect x="5.0537%" y="613" width="0.0521%" height="15" fill="rgb(234,196,4)" fg:x="12221" fg:w="126"/><text x="5.3037%" y="623.50"></text></g><g><title>iallocztm (126 samples, 0.05%)</title><rect x="5.0537%" y="597" width="0.0521%" height="15" fill="rgb(250,143,31)" fg:x="12221" fg:w="126"/><text x="5.3037%" y="607.50"></text></g><g><title>arena_malloc (126 samples, 0.05%)</title><rect x="5.0537%" y="581" width="0.0521%" height="15" fill="rgb(211,110,34)" fg:x="12221" fg:w="126"/><text x="5.3037%" y="591.50"></text></g><g><title>tcache_alloc_small (76 samples, 0.03%)</title><rect x="5.0744%" y="565" width="0.0314%" height="15" fill="rgb(215,124,48)" fg:x="12271" fg:w="76"/><text x="5.3244%" y="575.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (76 samples, 0.03%)</title><rect x="5.0744%" y="549" width="0.0314%" height="15" fill="rgb(216,46,13)" fg:x="12271" fg:w="76"/><text x="5.3244%" y="559.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (75 samples, 0.03%)</title><rect x="5.0748%" y="533" width="0.0310%" height="15" fill="rgb(205,184,25)" fg:x="12272" fg:w="75"/><text x="5.3248%" y="543.50"></text></g><g><title>arena_bin_malloc_hard (67 samples, 0.03%)</title><rect x="5.0781%" y="517" width="0.0277%" height="15" fill="rgb(228,1,10)" fg:x="12280" fg:w="67"/><text x="5.3281%" y="527.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (145 samples, 0.06%)</title><rect x="5.0529%" y="869" width="0.0600%" height="15" fill="rgb(213,116,27)" fg:x="12219" fg:w="145"/><text x="5.3029%" y="879.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValue as core::clone::Clone&gt;::clone (145 samples, 0.06%)</title><rect x="5.0529%" y="853" width="0.0600%" height="15" fill="rgb(241,95,50)" fg:x="12219" fg:w="145"/><text x="5.3029%" y="863.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as core::clone::Clone&gt;::clone (145 samples, 0.06%)</title><rect x="5.0529%" y="837" width="0.0600%" height="15" fill="rgb(238,48,32)" fg:x="12219" fg:w="145"/><text x="5.3029%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (145 samples, 0.06%)</title><rect x="5.0529%" y="821" width="0.0600%" height="15" fill="rgb(235,113,49)" fg:x="12219" fg:w="145"/><text x="5.3029%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (145 samples, 0.06%)</title><rect x="5.0529%" y="805" width="0.0600%" height="15" fill="rgb(205,127,43)" fg:x="12219" fg:w="145"/><text x="5.3029%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (145 samples, 0.06%)</title><rect x="5.0529%" y="789" width="0.0600%" height="15" fill="rgb(250,162,2)" fg:x="12219" fg:w="145"/><text x="5.3029%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (145 samples, 0.06%)</title><rect x="5.0529%" y="773" width="0.0600%" height="15" fill="rgb(220,13,41)" fg:x="12219" fg:w="145"/><text x="5.3029%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (145 samples, 0.06%)</title><rect x="5.0529%" y="757" width="0.0600%" height="15" fill="rgb(249,221,25)" fg:x="12219" fg:w="145"/><text x="5.3029%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (145 samples, 0.06%)</title><rect x="5.0529%" y="741" width="0.0600%" height="15" fill="rgb(215,208,19)" fg:x="12219" fg:w="145"/><text x="5.3029%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (145 samples, 0.06%)</title><rect x="5.0529%" y="725" width="0.0600%" height="15" fill="rgb(236,175,2)" fg:x="12219" fg:w="145"/><text x="5.3029%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (145 samples, 0.06%)</title><rect x="5.0529%" y="709" width="0.0600%" height="15" fill="rgb(241,52,2)" fg:x="12219" fg:w="145"/><text x="5.3029%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (145 samples, 0.06%)</title><rect x="5.0529%" y="693" width="0.0600%" height="15" fill="rgb(248,140,14)" fg:x="12219" fg:w="145"/><text x="5.3029%" y="703.50"></text></g><g><title>alloc::alloc::alloc (145 samples, 0.06%)</title><rect x="5.0529%" y="677" width="0.0600%" height="15" fill="rgb(253,22,42)" fg:x="12219" fg:w="145"/><text x="5.3029%" y="687.50"></text></g><g><title>mallocx (143 samples, 0.06%)</title><rect x="5.0537%" y="661" width="0.0591%" height="15" fill="rgb(234,61,47)" fg:x="12221" fg:w="143"/><text x="5.3037%" y="671.50"></text></g><g><title>imalloc (143 samples, 0.06%)</title><rect x="5.0537%" y="645" width="0.0591%" height="15" fill="rgb(208,226,15)" fg:x="12221" fg:w="143"/><text x="5.3037%" y="655.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.01%)</title><rect x="5.1290%" y="805" width="0.0108%" height="15" fill="rgb(217,221,4)" fg:x="12403" fg:w="26"/><text x="5.3790%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (26 samples, 0.01%)</title><rect x="5.1290%" y="789" width="0.0108%" height="15" fill="rgb(212,174,34)" fg:x="12403" fg:w="26"/><text x="5.3790%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (26 samples, 0.01%)</title><rect x="5.1290%" y="773" width="0.0108%" height="15" fill="rgb(253,83,4)" fg:x="12403" fg:w="26"/><text x="5.3790%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.01%)</title><rect x="5.1290%" y="757" width="0.0108%" height="15" fill="rgb(250,195,49)" fg:x="12403" fg:w="26"/><text x="5.3790%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (26 samples, 0.01%)</title><rect x="5.1290%" y="741" width="0.0108%" height="15" fill="rgb(241,192,25)" fg:x="12403" fg:w="26"/><text x="5.3790%" y="751.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (31 samples, 0.01%)</title><rect x="5.1398%" y="773" width="0.0128%" height="15" fill="rgb(208,124,10)" fg:x="12429" fg:w="31"/><text x="5.3898%" y="783.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (31 samples, 0.01%)</title><rect x="5.1398%" y="757" width="0.0128%" height="15" fill="rgb(222,33,0)" fg:x="12429" fg:w="31"/><text x="5.3898%" y="767.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (31 samples, 0.01%)</title><rect x="5.1398%" y="741" width="0.0128%" height="15" fill="rgb(234,209,28)" fg:x="12429" fg:w="31"/><text x="5.3898%" y="751.50"></text></g><g><title> N]&gt;::hash (31 samples, 0.01%)</title><rect x="5.1398%" y="725" width="0.0128%" height="15" fill="rgb(224,11,23)" fg:x="12429" fg:w="31"/><text x="5.3898%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (31 samples, 0.01%)</title><rect x="5.1398%" y="709" width="0.0128%" height="15" fill="rgb(232,99,1)" fg:x="12429" fg:w="31"/><text x="5.3898%" y="719.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (31 samples, 0.01%)</title><rect x="5.1398%" y="693" width="0.0128%" height="15" fill="rgb(237,95,45)" fg:x="12429" fg:w="31"/><text x="5.3898%" y="703.50"></text></g><g><title>core::hash::Hasher::write_usize (31 samples, 0.01%)</title><rect x="5.1398%" y="677" width="0.0128%" height="15" fill="rgb(208,109,11)" fg:x="12429" fg:w="31"/><text x="5.3898%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (31 samples, 0.01%)</title><rect x="5.1398%" y="661" width="0.0128%" height="15" fill="rgb(216,190,48)" fg:x="12429" fg:w="31"/><text x="5.3898%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (31 samples, 0.01%)</title><rect x="5.1398%" y="645" width="0.0128%" height="15" fill="rgb(251,171,36)" fg:x="12429" fg:w="31"/><text x="5.3898%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (31 samples, 0.01%)</title><rect x="5.1398%" y="629" width="0.0128%" height="15" fill="rgb(230,62,22)" fg:x="12429" fg:w="31"/><text x="5.3898%" y="639.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (42 samples, 0.02%)</title><rect x="5.1526%" y="773" width="0.0174%" height="15" fill="rgb(225,114,35)" fg:x="12460" fg:w="42"/><text x="5.4026%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (42 samples, 0.02%)</title><rect x="5.1526%" y="757" width="0.0174%" height="15" fill="rgb(215,118,42)" fg:x="12460" fg:w="42"/><text x="5.4026%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (42 samples, 0.02%)</title><rect x="5.1526%" y="741" width="0.0174%" height="15" fill="rgb(243,119,21)" fg:x="12460" fg:w="42"/><text x="5.4026%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (42 samples, 0.02%)</title><rect x="5.1526%" y="725" width="0.0174%" height="15" fill="rgb(252,177,53)" fg:x="12460" fg:w="42"/><text x="5.4026%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (100 samples, 0.04%)</title><rect x="5.1290%" y="837" width="0.0414%" height="15" fill="rgb(237,209,29)" fg:x="12403" fg:w="100"/><text x="5.3790%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (100 samples, 0.04%)</title><rect x="5.1290%" y="821" width="0.0414%" height="15" fill="rgb(212,65,23)" fg:x="12403" fg:w="100"/><text x="5.3790%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (74 samples, 0.03%)</title><rect x="5.1398%" y="805" width="0.0306%" height="15" fill="rgb(230,222,46)" fg:x="12429" fg:w="74"/><text x="5.3898%" y="815.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (74 samples, 0.03%)</title><rect x="5.1398%" y="789" width="0.0306%" height="15" fill="rgb(215,135,32)" fg:x="12429" fg:w="74"/><text x="5.3898%" y="799.50"></text></g><g><title>aptos_executor_types::in_memory_state_calculator::InMemoryStateCalculator::add_transaction (9,547 samples, 3.95%)</title><rect x="1.2435%" y="1157" width="3.9480%" height="15" fill="rgb(246,101,22)" fg:x="3007" fg:w="9547"/><text x="1.4935%" y="1167.50">apto..</text></g><g><title>aptos_executor_types::in_memory_state_calculator::process_write_set (9,032 samples, 3.73%)</title><rect x="1.4564%" y="1141" width="3.7350%" height="15" fill="rgb(206,107,13)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="1151.50">apto..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (9,032 samples, 3.73%)</title><rect x="1.4564%" y="1125" width="3.7350%" height="15" fill="rgb(250,100,44)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="1135.50">core..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (9,032 samples, 3.73%)</title><rect x="1.4564%" y="1109" width="3.7350%" height="15" fill="rgb(231,147,38)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="1119.50">&lt;cor..</text></g><g><title>core::iter::adapters::try_process (9,032 samples, 3.73%)</title><rect x="1.4564%" y="1093" width="3.7350%" height="15" fill="rgb(229,8,40)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="1103.50">core..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (9,032 samples, 3.73%)</title><rect x="1.4564%" y="1077" width="3.7350%" height="15" fill="rgb(221,135,30)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="1087.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (9,032 samples, 3.73%)</title><rect x="1.4564%" y="1061" width="3.7350%" height="15" fill="rgb(249,193,18)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="1071.50">core..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9,032 samples, 3.73%)</title><rect x="1.4564%" y="1045" width="3.7350%" height="15" fill="rgb(209,133,39)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="1055.50">&lt;std..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9,032 samples, 3.73%)</title><rect x="1.4564%" y="1029" width="3.7350%" height="15" fill="rgb(232,100,14)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="1039.50">&lt;std..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9,032 samples, 3.73%)</title><rect x="1.4564%" y="1013" width="3.7350%" height="15" fill="rgb(224,185,1)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="1023.50">&lt;has..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9,032 samples, 3.73%)</title><rect x="1.4564%" y="997" width="3.7350%" height="15" fill="rgb(223,139,8)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="1007.50">core..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,032 samples, 3.73%)</title><rect x="1.4564%" y="981" width="3.7350%" height="15" fill="rgb(232,213,38)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="991.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,032 samples, 3.73%)</title><rect x="1.4564%" y="965" width="3.7350%" height="15" fill="rgb(207,94,22)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="975.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,032 samples, 3.73%)</title><rect x="1.4564%" y="949" width="3.7350%" height="15" fill="rgb(219,183,54)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="959.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9,032 samples, 3.73%)</title><rect x="1.4564%" y="933" width="3.7350%" height="15" fill="rgb(216,185,54)" fg:x="3522" fg:w="9032"/><text x="1.7064%" y="943.50">core..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (9,018 samples, 3.73%)</title><rect x="1.4622%" y="917" width="3.7292%" height="15" fill="rgb(254,217,39)" fg:x="3536" fg:w="9018"/><text x="1.7122%" y="927.50">core..</text></g><g><title>aptos_executor_types::in_memory_state_calculator::process_write_set::{{closure}} (8,769 samples, 3.63%)</title><rect x="1.5652%" y="901" width="3.6262%" height="15" fill="rgb(240,178,23)" fg:x="3785" fg:w="8769"/><text x="1.8152%" y="911.50">apto..</text></g><g><title>aptos_executor_types::in_memory_state_calculator::process_state_key_write_op (8,769 samples, 3.63%)</title><rect x="1.5652%" y="885" width="3.6262%" height="15" fill="rgb(218,11,47)" fg:x="3785" fg:w="8769"/><text x="1.8152%" y="895.50">apto..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (167 samples, 0.07%)</title><rect x="5.1224%" y="869" width="0.0691%" height="15" fill="rgb(218,51,51)" fg:x="12387" fg:w="167"/><text x="5.3724%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (167 samples, 0.07%)</title><rect x="5.1224%" y="853" width="0.0691%" height="15" fill="rgb(238,126,27)" fg:x="12387" fg:w="167"/><text x="5.3724%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (51 samples, 0.02%)</title><rect x="5.1704%" y="837" width="0.0211%" height="15" fill="rgb(249,202,22)" fg:x="12503" fg:w="51"/><text x="5.4204%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (51 samples, 0.02%)</title><rect x="5.1704%" y="821" width="0.0211%" height="15" fill="rgb(254,195,49)" fg:x="12503" fg:w="51"/><text x="5.4204%" y="831.50"></text></g><g><title>hashbrown::raw::h2 (51 samples, 0.02%)</title><rect x="5.1704%" y="805" width="0.0211%" height="15" fill="rgb(208,123,14)" fg:x="12503" fg:w="51"/><text x="5.4204%" y="815.50"></text></g><g><title>aptos_executor::components::chunk_output::ChunkOutput::apply_to_ledger (9,980 samples, 4.13%)</title><rect x="1.0653%" y="1205" width="4.1270%" height="15" fill="rgb(224,200,8)" fg:x="2576" fg:w="9980"/><text x="1.3153%" y="1215.50">apto..</text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::apply (9,980 samples, 4.13%)</title><rect x="1.0653%" y="1189" width="4.1270%" height="15" fill="rgb(217,61,36)" fg:x="2576" fg:w="9980"/><text x="1.3153%" y="1199.50">apto..</text></g><g><title>aptos_executor_types::in_memory_state_calculator::InMemoryStateCalculator::calculate_for_transaction_chunk (9,549 samples, 3.95%)</title><rect x="1.2435%" y="1173" width="3.9488%" height="15" fill="rgb(206,35,45)" fg:x="3007" fg:w="9549"/><text x="1.4935%" y="1183.50">apto..</text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (35 samples, 0.01%)</title><rect x="5.2043%" y="949" width="0.0145%" height="15" fill="rgb(217,65,33)" fg:x="12585" fg:w="35"/><text x="5.4543%" y="959.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (35 samples, 0.01%)</title><rect x="5.2043%" y="933" width="0.0145%" height="15" fill="rgb(222,158,48)" fg:x="12585" fg:w="35"/><text x="5.4543%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.01%)</title><rect x="5.2043%" y="917" width="0.0145%" height="15" fill="rgb(254,2,54)" fg:x="12585" fg:w="35"/><text x="5.4543%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35 samples, 0.01%)</title><rect x="5.2043%" y="901" width="0.0145%" height="15" fill="rgb(250,143,38)" fg:x="12585" fg:w="35"/><text x="5.4543%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (35 samples, 0.01%)</title><rect x="5.2043%" y="885" width="0.0145%" height="15" fill="rgb(248,25,0)" fg:x="12585" fg:w="35"/><text x="5.4543%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35 samples, 0.01%)</title><rect x="5.2043%" y="869" width="0.0145%" height="15" fill="rgb(206,152,27)" fg:x="12585" fg:w="35"/><text x="5.4543%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (35 samples, 0.01%)</title><rect x="5.2043%" y="853" width="0.0145%" height="15" fill="rgb(240,77,30)" fg:x="12585" fg:w="35"/><text x="5.4543%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (35 samples, 0.01%)</title><rect x="5.2043%" y="837" width="0.0145%" height="15" fill="rgb(231,5,3)" fg:x="12585" fg:w="35"/><text x="5.4543%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (35 samples, 0.01%)</title><rect x="5.2043%" y="821" width="0.0145%" height="15" fill="rgb(207,226,32)" fg:x="12585" fg:w="35"/><text x="5.4543%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.01%)</title><rect x="5.2043%" y="805" width="0.0145%" height="15" fill="rgb(222,207,47)" fg:x="12585" fg:w="35"/><text x="5.4543%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.01%)</title><rect x="5.2043%" y="789" width="0.0145%" height="15" fill="rgb(229,115,45)" fg:x="12585" fg:w="35"/><text x="5.4543%" y="799.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.01%)</title><rect x="5.2043%" y="773" width="0.0145%" height="15" fill="rgb(224,191,6)" fg:x="12585" fg:w="35"/><text x="5.4543%" y="783.50"></text></g><g><title>mallocx (32 samples, 0.01%)</title><rect x="5.2055%" y="757" width="0.0132%" height="15" fill="rgb(230,227,24)" fg:x="12588" fg:w="32"/><text x="5.4555%" y="767.50"></text></g><g><title>imalloc (32 samples, 0.01%)</title><rect x="5.2055%" y="741" width="0.0132%" height="15" fill="rgb(228,80,19)" fg:x="12588" fg:w="32"/><text x="5.4555%" y="751.50"></text></g><g><title>imalloc_body (32 samples, 0.01%)</title><rect x="5.2055%" y="725" width="0.0132%" height="15" fill="rgb(247,229,0)" fg:x="12588" fg:w="32"/><text x="5.4555%" y="735.50"></text></g><g><title>imalloc_no_sample (32 samples, 0.01%)</title><rect x="5.2055%" y="709" width="0.0132%" height="15" fill="rgb(237,194,15)" fg:x="12588" fg:w="32"/><text x="5.4555%" y="719.50"></text></g><g><title>tcaches_get (32 samples, 0.01%)</title><rect x="5.2055%" y="693" width="0.0132%" height="15" fill="rgb(219,203,20)" fg:x="12588" fg:w="32"/><text x="5.4555%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.02%)</title><rect x="5.2010%" y="1013" width="0.0186%" height="15" fill="rgb(234,128,8)" fg:x="12577" fg:w="45"/><text x="5.4510%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (38 samples, 0.02%)</title><rect x="5.2038%" y="997" width="0.0157%" height="15" fill="rgb(248,202,8)" fg:x="12584" fg:w="38"/><text x="5.4538%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (37 samples, 0.02%)</title><rect x="5.2043%" y="981" width="0.0153%" height="15" fill="rgb(206,104,37)" fg:x="12585" fg:w="37"/><text x="5.4543%" y="991.50"></text></g><g><title>&lt;aptos_block_executor::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes::{{closure}} (37 samples, 0.02%)</title><rect x="5.2043%" y="965" width="0.0153%" height="15" fill="rgb(223,8,27)" fg:x="12585" fg:w="37"/><text x="5.4543%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (77 samples, 0.03%)</title><rect x="5.2010%" y="1045" width="0.0318%" height="15" fill="rgb(216,217,28)" fg:x="12577" fg:w="77"/><text x="5.4510%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (77 samples, 0.03%)</title><rect x="5.2010%" y="1029" width="0.0318%" height="15" fill="rgb(249,199,1)" fg:x="12577" fg:w="77"/><text x="5.4510%" y="1039.50"></text></g><g><title>core::ptr::write (32 samples, 0.01%)</title><rect x="5.2196%" y="1013" width="0.0132%" height="15" fill="rgb(240,85,17)" fg:x="12622" fg:w="32"/><text x="5.4696%" y="1023.50"></text></g><g><title>&lt;aptos_block_executor::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (90 samples, 0.04%)</title><rect x="5.2005%" y="1125" width="0.0372%" height="15" fill="rgb(206,108,45)" fg:x="12576" fg:w="90"/><text x="5.4505%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (89 samples, 0.04%)</title><rect x="5.2010%" y="1109" width="0.0368%" height="15" fill="rgb(245,210,41)" fg:x="12577" fg:w="89"/><text x="5.4510%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (89 samples, 0.04%)</title><rect x="5.2010%" y="1093" width="0.0368%" height="15" fill="rgb(206,13,37)" fg:x="12577" fg:w="89"/><text x="5.4510%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (89 samples, 0.04%)</title><rect x="5.2010%" y="1077" width="0.0368%" height="15" fill="rgb(250,61,18)" fg:x="12577" fg:w="89"/><text x="5.4510%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (89 samples, 0.04%)</title><rect x="5.2010%" y="1061" width="0.0368%" height="15" fill="rgb(235,172,48)" fg:x="12577" fg:w="89"/><text x="5.4510%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (26 samples, 0.01%)</title><rect x="5.2861%" y="885" width="0.0108%" height="15" fill="rgb(249,201,17)" fg:x="12783" fg:w="26"/><text x="5.5361%" y="895.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (88 samples, 0.04%)</title><rect x="5.2696%" y="1093" width="0.0364%" height="15" fill="rgb(219,208,6)" fg:x="12743" fg:w="88"/><text x="5.5196%" y="1103.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::Debug&gt;::fmt (88 samples, 0.04%)</title><rect x="5.2696%" y="1077" width="0.0364%" height="15" fill="rgb(248,31,23)" fg:x="12743" fg:w="88"/><text x="5.5196%" y="1087.50"></text></g><g><title>core::fmt::Formatter::write_fmt (88 samples, 0.04%)</title><rect x="5.2696%" y="1061" width="0.0364%" height="15" fill="rgb(245,15,42)" fg:x="12743" fg:w="88"/><text x="5.5196%" y="1071.50"></text></g><g><title>core::fmt::write (88 samples, 0.04%)</title><rect x="5.2696%" y="1045" width="0.0364%" height="15" fill="rgb(222,217,39)" fg:x="12743" fg:w="88"/><text x="5.5196%" y="1055.50"></text></g><g><title>core::fmt::rt::Argument::fmt (87 samples, 0.04%)</title><rect x="5.2700%" y="1029" width="0.0360%" height="15" fill="rgb(210,219,27)" fg:x="12744" fg:w="87"/><text x="5.5200%" y="1039.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (87 samples, 0.04%)</title><rect x="5.2700%" y="1013" width="0.0360%" height="15" fill="rgb(252,166,36)" fg:x="12744" fg:w="87"/><text x="5.5200%" y="1023.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::LowerHex&gt;::fmt (87 samples, 0.04%)</title><rect x="5.2700%" y="997" width="0.0360%" height="15" fill="rgb(245,132,34)" fg:x="12744" fg:w="87"/><text x="5.5200%" y="1007.50"></text></g><g><title>core::fmt::Formatter::write_fmt (78 samples, 0.03%)</title><rect x="5.2737%" y="981" width="0.0323%" height="15" fill="rgb(236,54,3)" fg:x="12753" fg:w="78"/><text x="5.5237%" y="991.50"></text></g><g><title>core::fmt::write (78 samples, 0.03%)</title><rect x="5.2737%" y="965" width="0.0323%" height="15" fill="rgb(241,173,43)" fg:x="12753" fg:w="78"/><text x="5.5237%" y="975.50"></text></g><g><title>core::fmt::run (78 samples, 0.03%)</title><rect x="5.2737%" y="949" width="0.0323%" height="15" fill="rgb(215,190,9)" fg:x="12753" fg:w="78"/><text x="5.5237%" y="959.50"></text></g><g><title>core::fmt::rt::Argument::fmt (61 samples, 0.03%)</title><rect x="5.2808%" y="933" width="0.0252%" height="15" fill="rgb(242,101,16)" fg:x="12770" fg:w="61"/><text x="5.5308%" y="943.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (53 samples, 0.02%)</title><rect x="5.2841%" y="917" width="0.0219%" height="15" fill="rgb(223,190,21)" fg:x="12778" fg:w="53"/><text x="5.5341%" y="927.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (51 samples, 0.02%)</title><rect x="5.2849%" y="901" width="0.0211%" height="15" fill="rgb(215,228,25)" fg:x="12780" fg:w="51"/><text x="5.5349%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::strong_count (31 samples, 0.01%)</title><rect x="5.3399%" y="1045" width="0.0128%" height="15" fill="rgb(225,36,22)" fg:x="12913" fg:w="31"/><text x="5.5899%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (31 samples, 0.01%)</title><rect x="5.3399%" y="1029" width="0.0128%" height="15" fill="rgb(251,106,46)" fg:x="12913" fg:w="31"/><text x="5.5899%" y="1039.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (31 samples, 0.01%)</title><rect x="5.3399%" y="1013" width="0.0128%" height="15" fill="rgb(208,90,1)" fg:x="12913" fg:w="31"/><text x="5.5899%" y="1023.50"></text></g><g><title>&lt;aptos_types::access_path::EvmPath as core::hash::Hash&gt;::hash (28 samples, 0.01%)</title><rect x="5.3738%" y="885" width="0.0116%" height="15" fill="rgb(243,10,4)" fg:x="12995" fg:w="28"/><text x="5.6238%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (49 samples, 0.02%)</title><rect x="5.3726%" y="949" width="0.0203%" height="15" fill="rgb(212,137,27)" fg:x="12992" fg:w="49"/><text x="5.6226%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (49 samples, 0.02%)</title><rect x="5.3726%" y="933" width="0.0203%" height="15" fill="rgb(231,220,49)" fg:x="12992" fg:w="49"/><text x="5.6226%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (46 samples, 0.02%)</title><rect x="5.3738%" y="917" width="0.0190%" height="15" fill="rgb(237,96,20)" fg:x="12995" fg:w="46"/><text x="5.6238%" y="927.50"></text></g><g><title>&lt;aptos_evm::storage_key::StorageKey as core::hash::Hash&gt;::hash (46 samples, 0.02%)</title><rect x="5.3738%" y="901" width="0.0190%" height="15" fill="rgb(239,229,30)" fg:x="12995" fg:w="46"/><text x="5.6238%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (47 samples, 0.02%)</title><rect x="5.3932%" y="869" width="0.0194%" height="15" fill="rgb(219,65,33)" fg:x="13042" fg:w="47"/><text x="5.6432%" y="879.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (47 samples, 0.02%)</title><rect x="5.3932%" y="853" width="0.0194%" height="15" fill="rgb(243,134,7)" fg:x="13042" fg:w="47"/><text x="5.6432%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (47 samples, 0.02%)</title><rect x="5.3932%" y="837" width="0.0194%" height="15" fill="rgb(216,177,54)" fg:x="13042" fg:w="47"/><text x="5.6432%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (47 samples, 0.02%)</title><rect x="5.3932%" y="821" width="0.0194%" height="15" fill="rgb(211,160,20)" fg:x="13042" fg:w="47"/><text x="5.6432%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.01%)</title><rect x="5.4011%" y="805" width="0.0116%" height="15" fill="rgb(239,85,39)" fg:x="13061" fg:w="28"/><text x="5.6511%" y="815.50"></text></g><g><title>&lt;aptos_evm::storage_key::StorageKey as core::hash::Hash&gt;::hash (28 samples, 0.01%)</title><rect x="5.4011%" y="789" width="0.0116%" height="15" fill="rgb(232,125,22)" fg:x="13061" fg:w="28"/><text x="5.6511%" y="799.50"></text></g><g><title>&lt;aptos_types::access_path::EvmPath as core::hash::Hash&gt;::hash (28 samples, 0.01%)</title><rect x="5.4011%" y="773" width="0.0116%" height="15" fill="rgb(244,57,34)" fg:x="13061" fg:w="28"/><text x="5.6511%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (26 samples, 0.01%)</title><rect x="5.4127%" y="869" width="0.0108%" height="15" fill="rgb(214,203,32)" fg:x="13089" fg:w="26"/><text x="5.6627%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (26 samples, 0.01%)</title><rect x="5.4127%" y="853" width="0.0108%" height="15" fill="rgb(207,58,43)" fg:x="13089" fg:w="26"/><text x="5.6627%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (26 samples, 0.01%)</title><rect x="5.4127%" y="837" width="0.0108%" height="15" fill="rgb(215,193,15)" fg:x="13089" fg:w="26"/><text x="5.6627%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (77 samples, 0.03%)</title><rect x="5.3928%" y="933" width="0.0318%" height="15" fill="rgb(232,15,44)" fg:x="13041" fg:w="77"/><text x="5.6428%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (77 samples, 0.03%)</title><rect x="5.3928%" y="917" width="0.0318%" height="15" fill="rgb(212,3,48)" fg:x="13041" fg:w="77"/><text x="5.6428%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (77 samples, 0.03%)</title><rect x="5.3928%" y="901" width="0.0318%" height="15" fill="rgb(218,128,7)" fg:x="13041" fg:w="77"/><text x="5.6428%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (77 samples, 0.03%)</title><rect x="5.3928%" y="885" width="0.0318%" height="15" fill="rgb(226,216,39)" fg:x="13041" fg:w="77"/><text x="5.6428%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (89 samples, 0.04%)</title><rect x="5.3928%" y="949" width="0.0368%" height="15" fill="rgb(243,47,51)" fg:x="13041" fg:w="89"/><text x="5.6428%" y="959.50"></text></g><g><title>&lt;cfx_storage::StorageKeyWrapper&lt;T,Key&gt; as cfx_storage::StorageTrait&gt;::set (171 samples, 0.07%)</title><rect x="5.3651%" y="1013" width="0.0707%" height="15" fill="rgb(241,183,40)" fg:x="12974" fg:w="171"/><text x="5.6151%" y="1023.50"></text></g><g><title>&lt;&amp;mut aptos_evm::state::ViewWrapper&lt;S&gt; as cfx_storage::StorageTrait&gt;::set (160 samples, 0.07%)</title><rect x="5.3697%" y="997" width="0.0662%" height="15" fill="rgb(231,217,32)" fg:x="12985" fg:w="160"/><text x="5.6197%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (154 samples, 0.06%)</title><rect x="5.3722%" y="981" width="0.0637%" height="15" fill="rgb(229,61,38)" fg:x="12991" fg:w="154"/><text x="5.6222%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (153 samples, 0.06%)</title><rect x="5.3726%" y="965" width="0.0633%" height="15" fill="rgb(225,210,5)" fg:x="12992" fg:w="153"/><text x="5.6226%" y="975.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::set_raw (193 samples, 0.08%)</title><rect x="5.3606%" y="1029" width="0.0798%" height="15" fill="rgb(231,79,45)" fg:x="12963" fg:w="193"/><text x="5.6106%" y="1039.50"></text></g><g><title>_rjem_je_arena_ralloc (38 samples, 0.02%)</title><rect x="5.4462%" y="901" width="0.0157%" height="15" fill="rgb(224,100,7)" fg:x="13170" fg:w="38"/><text x="5.6962%" y="911.50"></text></g><g><title>arena_ralloc_move_helper (29 samples, 0.01%)</title><rect x="5.4499%" y="885" width="0.0120%" height="15" fill="rgb(241,198,18)" fg:x="13179" fg:w="29"/><text x="5.6999%" y="895.50"></text></g><g><title>ipalloct (29 samples, 0.01%)</title><rect x="5.4499%" y="869" width="0.0120%" height="15" fill="rgb(252,97,53)" fg:x="13179" fg:w="29"/><text x="5.6999%" y="879.50"></text></g><g><title>ipallocztm (29 samples, 0.01%)</title><rect x="5.4499%" y="853" width="0.0120%" height="15" fill="rgb(220,88,7)" fg:x="13179" fg:w="29"/><text x="5.6999%" y="863.50"></text></g><g><title>_rjem_je_arena_palloc (29 samples, 0.01%)</title><rect x="5.4499%" y="837" width="0.0120%" height="15" fill="rgb(213,176,14)" fg:x="13179" fg:w="29"/><text x="5.6999%" y="847.50"></text></g><g><title>_rjem_je_arena_palloc (29 samples, 0.01%)</title><rect x="5.4499%" y="821" width="0.0120%" height="15" fill="rgb(246,73,7)" fg:x="13179" fg:w="29"/><text x="5.6999%" y="831.50"></text></g><g><title>arena_malloc (29 samples, 0.01%)</title><rect x="5.4499%" y="805" width="0.0120%" height="15" fill="rgb(245,64,36)" fg:x="13179" fg:w="29"/><text x="5.6999%" y="815.50"></text></g><g><title>tcache_alloc_small (29 samples, 0.01%)</title><rect x="5.4499%" y="789" width="0.0120%" height="15" fill="rgb(245,80,10)" fg:x="13179" fg:w="29"/><text x="5.6999%" y="799.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (25 samples, 0.01%)</title><rect x="5.4623%" y="853" width="0.0103%" height="15" fill="rgb(232,107,50)" fg:x="13209" fg:w="25"/><text x="5.7123%" y="863.50"></text></g><g><title>extent_record (25 samples, 0.01%)</title><rect x="5.4623%" y="837" width="0.0103%" height="15" fill="rgb(253,3,0)" fg:x="13209" fg:w="25"/><text x="5.7123%" y="847.50"></text></g><g><title>_rjem_je_extent_alloc (39 samples, 0.02%)</title><rect x="5.4751%" y="837" width="0.0161%" height="15" fill="rgb(212,99,53)" fg:x="13240" fg:w="39"/><text x="5.7251%" y="847.50"></text></g><g><title>_rjem_je_extent_avail_remove (37 samples, 0.02%)</title><rect x="5.4760%" y="821" width="0.0153%" height="15" fill="rgb(249,111,54)" fg:x="13242" fg:w="37"/><text x="5.7260%" y="831.50"></text></g><g><title>iralloct (110 samples, 0.05%)</title><rect x="5.4462%" y="917" width="0.0455%" height="15" fill="rgb(249,55,30)" fg:x="13170" fg:w="110"/><text x="5.6962%" y="927.50"></text></g><g><title>_rjem_je_large_ralloc (72 samples, 0.03%)</title><rect x="5.4619%" y="901" width="0.0298%" height="15" fill="rgb(237,47,42)" fg:x="13208" fg:w="72"/><text x="5.7119%" y="911.50"></text></g><g><title>_rjem_je_large_ralloc_no_move (72 samples, 0.03%)</title><rect x="5.4619%" y="885" width="0.0298%" height="15" fill="rgb(211,20,18)" fg:x="13208" fg:w="72"/><text x="5.7119%" y="895.50"></text></g><g><title>large_ralloc_no_move_shrink (72 samples, 0.03%)</title><rect x="5.4619%" y="869" width="0.0298%" height="15" fill="rgb(231,203,46)" fg:x="13208" fg:w="72"/><text x="5.7119%" y="879.50"></text></g><g><title>extent_split_impl (44 samples, 0.02%)</title><rect x="5.4735%" y="853" width="0.0182%" height="15" fill="rgb(237,142,3)" fg:x="13236" fg:w="44"/><text x="5.7235%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (126 samples, 0.05%)</title><rect x="5.4416%" y="1029" width="0.0521%" height="15" fill="rgb(241,107,1)" fg:x="13159" fg:w="126"/><text x="5.6916%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (126 samples, 0.05%)</title><rect x="5.4416%" y="1013" width="0.0521%" height="15" fill="rgb(229,83,13)" fg:x="13159" fg:w="126"/><text x="5.6916%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (126 samples, 0.05%)</title><rect x="5.4416%" y="997" width="0.0521%" height="15" fill="rgb(241,91,40)" fg:x="13159" fg:w="126"/><text x="5.6916%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (126 samples, 0.05%)</title><rect x="5.4416%" y="981" width="0.0521%" height="15" fill="rgb(225,3,45)" fg:x="13159" fg:w="126"/><text x="5.6916%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (126 samples, 0.05%)</title><rect x="5.4416%" y="965" width="0.0521%" height="15" fill="rgb(244,223,14)" fg:x="13159" fg:w="126"/><text x="5.6916%" y="975.50"></text></g><g><title>alloc::alloc::realloc (126 samples, 0.05%)</title><rect x="5.4416%" y="949" width="0.0521%" height="15" fill="rgb(224,124,37)" fg:x="13159" fg:w="126"/><text x="5.6916%" y="959.50"></text></g><g><title>rallocx (118 samples, 0.05%)</title><rect x="5.4449%" y="933" width="0.0488%" height="15" fill="rgb(251,171,30)" fg:x="13167" fg:w="118"/><text x="5.6949%" y="943.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (71 samples, 0.03%)</title><rect x="5.5037%" y="885" width="0.0294%" height="15" fill="rgb(236,46,54)" fg:x="13309" fg:w="71"/><text x="5.7537%" y="895.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (71 samples, 0.03%)</title><rect x="5.5037%" y="869" width="0.0294%" height="15" fill="rgb(245,213,5)" fg:x="13309" fg:w="71"/><text x="5.7537%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (25 samples, 0.01%)</title><rect x="5.5227%" y="853" width="0.0103%" height="15" fill="rgb(230,144,27)" fg:x="13355" fg:w="25"/><text x="5.7727%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (25 samples, 0.01%)</title><rect x="5.5227%" y="837" width="0.0103%" height="15" fill="rgb(220,86,6)" fg:x="13355" fg:w="25"/><text x="5.7727%" y="847.50"></text></g><g><title>primitive_types::rlp::&lt;impl rlp::traits::Encodable for primitive_types::H256&gt;::rlp_append (78 samples, 0.03%)</title><rect x="5.5016%" y="933" width="0.0323%" height="15" fill="rgb(240,20,13)" fg:x="13304" fg:w="78"/><text x="5.7516%" y="943.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (77 samples, 0.03%)</title><rect x="5.5020%" y="917" width="0.0318%" height="15" fill="rgb(217,89,34)" fg:x="13305" fg:w="77"/><text x="5.7520%" y="927.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (77 samples, 0.03%)</title><rect x="5.5020%" y="901" width="0.0318%" height="15" fill="rgb(229,13,5)" fg:x="13305" fg:w="77"/><text x="5.7520%" y="911.50"></text></g><g><title>primitive_types::rlp::&lt;impl rlp::traits::Encodable for primitive_types::U256&gt;::rlp_append (28 samples, 0.01%)</title><rect x="5.5338%" y="933" width="0.0116%" height="15" fill="rgb(244,67,35)" fg:x="13382" fg:w="28"/><text x="5.7838%" y="943.50"></text></g><g><title>rlp::stream::RlpStream::append (121 samples, 0.05%)</title><rect x="5.4983%" y="949" width="0.0500%" height="15" fill="rgb(221,40,2)" fg:x="13296" fg:w="121"/><text x="5.7483%" y="959.50"></text></g><g><title>&lt;primitives::account::Account as rlp::traits::Encodable&gt;::rlp_append (127 samples, 0.05%)</title><rect x="5.4983%" y="997" width="0.0525%" height="15" fill="rgb(237,157,21)" fg:x="13296" fg:w="127"/><text x="5.7483%" y="1007.50"></text></g><g><title>rlp::stream::RlpStream::append_internal (127 samples, 0.05%)</title><rect x="5.4983%" y="981" width="0.0525%" height="15" fill="rgb(222,94,11)" fg:x="13296" fg:w="127"/><text x="5.7483%" y="991.50"></text></g><g><title>primitives::account::_IMPL_RLP_ENCODABLE_FOR_EthereumAccount::&lt;impl rlp::traits::Encodable for primitives::account::EthereumAccount&gt;::rlp_append (127 samples, 0.05%)</title><rect x="5.4983%" y="965" width="0.0525%" height="15" fill="rgb(249,113,6)" fg:x="13296" fg:w="127"/><text x="5.7483%" y="975.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2,828 samples, 1.17%)</title><rect x="7.3554%" y="885" width="1.1695%" height="15" fill="rgb(238,137,36)" fg:x="17787" fg:w="2828"/><text x="7.6054%" y="895.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (8,100 samples, 3.35%)</title><rect x="7.3546%" y="901" width="3.3496%" height="15" fill="rgb(210,102,26)" fg:x="17785" fg:w="8100"/><text x="7.6046%" y="911.50">byt..</text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (5,270 samples, 2.18%)</title><rect x="8.5249%" y="885" width="2.1793%" height="15" fill="rgb(218,30,30)" fg:x="20615" fg:w="5270"/><text x="8.7749%" y="895.50">b..</text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (5,270 samples, 2.18%)</title><rect x="8.5249%" y="869" width="2.1793%" height="15" fill="rgb(214,67,26)" fg:x="20615" fg:w="5270"/><text x="8.7749%" y="879.50">&lt;..</text></g><g><title>arena_bin_malloc_hard (29 samples, 0.01%)</title><rect x="10.7224%" y="549" width="0.0120%" height="15" fill="rgb(251,9,53)" fg:x="25929" fg:w="29"/><text x="10.9724%" y="559.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (32 samples, 0.01%)</title><rect x="10.7224%" y="565" width="0.0132%" height="15" fill="rgb(228,204,25)" fg:x="25929" fg:w="32"/><text x="10.9724%" y="575.50"></text></g><g><title>ipalloct (34 samples, 0.01%)</title><rect x="10.7220%" y="677" width="0.0141%" height="15" fill="rgb(207,153,8)" fg:x="25928" fg:w="34"/><text x="10.9720%" y="687.50"></text></g><g><title>ipallocztm (34 samples, 0.01%)</title><rect x="10.7220%" y="661" width="0.0141%" height="15" fill="rgb(242,9,16)" fg:x="25928" fg:w="34"/><text x="10.9720%" y="671.50"></text></g><g><title>_rjem_je_arena_palloc (34 samples, 0.01%)</title><rect x="10.7220%" y="645" width="0.0141%" height="15" fill="rgb(217,211,10)" fg:x="25928" fg:w="34"/><text x="10.9720%" y="655.50"></text></g><g><title>_rjem_je_arena_palloc (34 samples, 0.01%)</title><rect x="10.7220%" y="629" width="0.0141%" height="15" fill="rgb(219,228,52)" fg:x="25928" fg:w="34"/><text x="10.9720%" y="639.50"></text></g><g><title>arena_malloc (34 samples, 0.01%)</title><rect x="10.7220%" y="613" width="0.0141%" height="15" fill="rgb(231,92,29)" fg:x="25928" fg:w="34"/><text x="10.9720%" y="623.50"></text></g><g><title>tcache_alloc_small (34 samples, 0.01%)</title><rect x="10.7220%" y="597" width="0.0141%" height="15" fill="rgb(232,8,23)" fg:x="25928" fg:w="34"/><text x="10.9720%" y="607.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (34 samples, 0.01%)</title><rect x="10.7220%" y="581" width="0.0141%" height="15" fill="rgb(216,211,34)" fg:x="25928" fg:w="34"/><text x="10.9720%" y="591.50"></text></g><g><title>iralloct (69 samples, 0.03%)</title><rect x="10.7116%" y="725" width="0.0285%" height="15" fill="rgb(236,151,0)" fg:x="25903" fg:w="69"/><text x="10.9616%" y="735.50"></text></g><g><title>_rjem_je_arena_ralloc (69 samples, 0.03%)</title><rect x="10.7116%" y="709" width="0.0285%" height="15" fill="rgb(209,168,3)" fg:x="25903" fg:w="69"/><text x="10.9616%" y="719.50"></text></g><g><title>arena_ralloc_move_helper (67 samples, 0.03%)</title><rect x="10.7125%" y="693" width="0.0277%" height="15" fill="rgb(208,129,28)" fg:x="25905" fg:w="67"/><text x="10.9625%" y="703.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (12,542 samples, 5.19%)</title><rect x="5.5549%" y="917" width="5.1865%" height="15" fill="rgb(229,78,22)" fg:x="13433" fg:w="12542"/><text x="5.8049%" y="927.50">&lt;bytes..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve (90 samples, 0.04%)</title><rect x="10.7042%" y="901" width="0.0372%" height="15" fill="rgb(228,187,13)" fg:x="25885" fg:w="90"/><text x="10.9542%" y="911.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (90 samples, 0.04%)</title><rect x="10.7042%" y="885" width="0.0372%" height="15" fill="rgb(240,119,24)" fg:x="25885" fg:w="90"/><text x="10.9542%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (88 samples, 0.04%)</title><rect x="10.7050%" y="869" width="0.0364%" height="15" fill="rgb(209,194,42)" fg:x="25887" fg:w="88"/><text x="10.9550%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (88 samples, 0.04%)</title><rect x="10.7050%" y="853" width="0.0364%" height="15" fill="rgb(247,200,46)" fg:x="25887" fg:w="88"/><text x="10.9550%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (88 samples, 0.04%)</title><rect x="10.7050%" y="837" width="0.0364%" height="15" fill="rgb(218,76,16)" fg:x="25887" fg:w="88"/><text x="10.9550%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (77 samples, 0.03%)</title><rect x="10.7096%" y="821" width="0.0318%" height="15" fill="rgb(225,21,48)" fg:x="25898" fg:w="77"/><text x="10.9596%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (77 samples, 0.03%)</title><rect x="10.7096%" y="805" width="0.0318%" height="15" fill="rgb(239,223,50)" fg:x="25898" fg:w="77"/><text x="10.9596%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (77 samples, 0.03%)</title><rect x="10.7096%" y="789" width="0.0318%" height="15" fill="rgb(244,45,21)" fg:x="25898" fg:w="77"/><text x="10.9596%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (77 samples, 0.03%)</title><rect x="10.7096%" y="773" width="0.0318%" height="15" fill="rgb(232,33,43)" fg:x="25898" fg:w="77"/><text x="10.9596%" y="783.50"></text></g><g><title>alloc::alloc::realloc (76 samples, 0.03%)</title><rect x="10.7100%" y="757" width="0.0314%" height="15" fill="rgb(209,8,3)" fg:x="25899" fg:w="76"/><text x="10.9600%" y="767.50"></text></g><g><title>rallocx (72 samples, 0.03%)</title><rect x="10.7116%" y="741" width="0.0298%" height="15" fill="rgb(214,25,53)" fg:x="25903" fg:w="72"/><text x="10.9616%" y="751.50"></text></g><g><title>rlp::stream::RlpStream::append (12,557 samples, 5.19%)</title><rect x="5.5512%" y="981" width="5.1927%" height="15" fill="rgb(254,186,54)" fg:x="13424" fg:w="12557"/><text x="5.8012%" y="991.50">rlp::s..</text></g><g><title>rlp::impls::&lt;impl rlp::traits::Encodable for alloc::vec::Vec&lt;u8&gt;&gt;::rlp_append (12,557 samples, 5.19%)</title><rect x="5.5512%" y="965" width="5.1927%" height="15" fill="rgb(208,174,49)" fg:x="13424" fg:w="12557"/><text x="5.8012%" y="975.50">rlp::i..</text></g><g><title>rlp::stream::BasicEncoder::encode_value (12,553 samples, 5.19%)</title><rect x="5.5529%" y="949" width="5.1910%" height="15" fill="rgb(233,191,51)" fg:x="13428" fg:w="12553"/><text x="5.8029%" y="959.50">rlp::s..</text></g><g><title>rlp::stream::BasicEncoder::encode_iter (12,553 samples, 5.19%)</title><rect x="5.5529%" y="933" width="5.1910%" height="15" fill="rgb(222,134,10)" fg:x="13428" fg:w="12553"/><text x="5.8029%" y="943.50">rlp::s..</text></g><g><title>&lt;primitives::account::CodeInfo as rlp::traits::Encodable&gt;::rlp_append (12,559 samples, 5.19%)</title><rect x="5.5508%" y="997" width="5.1935%" height="15" fill="rgb(230,226,20)" fg:x="13423" fg:w="12559"/><text x="5.8008%" y="1007.50">&lt;primi..</text></g><g><title>rlp::stream::RlpStream::append (30 samples, 0.01%)</title><rect x="10.7447%" y="981" width="0.0124%" height="15" fill="rgb(251,111,25)" fg:x="25983" fg:w="30"/><text x="10.9947%" y="991.50"></text></g><g><title>primitive_types::rlp::&lt;impl rlp::traits::Encodable for primitive_types::U256&gt;::rlp_append (29 samples, 0.01%)</title><rect x="10.7451%" y="965" width="0.0120%" height="15" fill="rgb(224,40,46)" fg:x="25984" fg:w="29"/><text x="10.9951%" y="975.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (27 samples, 0.01%)</title><rect x="10.7460%" y="949" width="0.0112%" height="15" fill="rgb(236,108,47)" fg:x="25986" fg:w="27"/><text x="10.9960%" y="959.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (27 samples, 0.01%)</title><rect x="10.7460%" y="933" width="0.0112%" height="15" fill="rgb(234,93,0)" fg:x="25986" fg:w="27"/><text x="10.9960%" y="943.50"></text></g><g><title>primitives::storage::_IMPL_RLP_ENCODABLE_FOR_StorageValue::&lt;impl rlp::traits::Encodable for primitives::storage::StorageValue&gt;::rlp_append (35 samples, 0.01%)</title><rect x="10.7443%" y="997" width="0.0145%" height="15" fill="rgb(224,213,32)" fg:x="25982" fg:w="35"/><text x="10.9943%" y="1007.50"></text></g><g><title>extent_split_impl (31 samples, 0.01%)</title><rect x="10.7869%" y="597" width="0.0128%" height="15" fill="rgb(251,11,48)" fg:x="26085" fg:w="31"/><text x="11.0369%" y="607.50"></text></g><g><title>extent_recycle (49 samples, 0.02%)</title><rect x="10.7803%" y="645" width="0.0203%" height="15" fill="rgb(236,173,5)" fg:x="26069" fg:w="49"/><text x="11.0303%" y="655.50"></text></g><g><title>extent_recycle_split (34 samples, 0.01%)</title><rect x="10.7865%" y="629" width="0.0141%" height="15" fill="rgb(230,95,12)" fg:x="26084" fg:w="34"/><text x="11.0365%" y="639.50"></text></g><g><title>extent_split_interior (33 samples, 0.01%)</title><rect x="10.7869%" y="613" width="0.0136%" height="15" fill="rgb(232,209,1)" fg:x="26085" fg:w="33"/><text x="11.0369%" y="623.50"></text></g><g><title>arena_malloc (62 samples, 0.03%)</title><rect x="10.7786%" y="709" width="0.0256%" height="15" fill="rgb(232,6,1)" fg:x="26065" fg:w="62"/><text x="11.0286%" y="719.50"></text></g><g><title>tcache_alloc_large (62 samples, 0.03%)</title><rect x="10.7786%" y="693" width="0.0256%" height="15" fill="rgb(210,224,50)" fg:x="26065" fg:w="62"/><text x="11.0286%" y="703.50"></text></g><g><title>_rjem_je_large_palloc (61 samples, 0.03%)</title><rect x="10.7790%" y="677" width="0.0252%" height="15" fill="rgb(228,127,35)" fg:x="26066" fg:w="61"/><text x="11.0290%" y="687.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (58 samples, 0.02%)</title><rect x="10.7803%" y="661" width="0.0240%" height="15" fill="rgb(245,102,45)" fg:x="26069" fg:w="58"/><text x="11.0303%" y="671.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (26 samples, 0.01%)</title><rect x="10.8055%" y="597" width="0.0108%" height="15" fill="rgb(214,1,49)" fg:x="26130" fg:w="26"/><text x="11.0555%" y="607.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (30 samples, 0.01%)</title><rect x="10.8043%" y="613" width="0.0124%" height="15" fill="rgb(226,163,40)" fg:x="26127" fg:w="30"/><text x="11.0543%" y="623.50"></text></g><g><title>_rjem_je_arena_ralloc (116 samples, 0.05%)</title><rect x="10.7691%" y="741" width="0.0480%" height="15" fill="rgb(239,212,28)" fg:x="26042" fg:w="116"/><text x="11.0191%" y="751.50"></text></g><g><title>arena_ralloc_move_helper (110 samples, 0.05%)</title><rect x="10.7716%" y="725" width="0.0455%" height="15" fill="rgb(220,20,13)" fg:x="26048" fg:w="110"/><text x="11.0216%" y="735.50"></text></g><g><title>ipalloct (31 samples, 0.01%)</title><rect x="10.8043%" y="709" width="0.0128%" height="15" fill="rgb(210,164,35)" fg:x="26127" fg:w="31"/><text x="11.0543%" y="719.50"></text></g><g><title>ipallocztm (31 samples, 0.01%)</title><rect x="10.8043%" y="693" width="0.0128%" height="15" fill="rgb(248,109,41)" fg:x="26127" fg:w="31"/><text x="11.0543%" y="703.50"></text></g><g><title>_rjem_je_arena_palloc (31 samples, 0.01%)</title><rect x="10.8043%" y="677" width="0.0128%" height="15" fill="rgb(238,23,50)" fg:x="26127" fg:w="31"/><text x="11.0543%" y="687.50"></text></g><g><title>_rjem_je_arena_palloc (31 samples, 0.01%)</title><rect x="10.8043%" y="661" width="0.0128%" height="15" fill="rgb(211,48,49)" fg:x="26127" fg:w="31"/><text x="11.0543%" y="671.50"></text></g><g><title>arena_malloc (31 samples, 0.01%)</title><rect x="10.8043%" y="645" width="0.0128%" height="15" fill="rgb(223,36,21)" fg:x="26127" fg:w="31"/><text x="11.0543%" y="655.50"></text></g><g><title>tcache_alloc_small (31 samples, 0.01%)</title><rect x="10.8043%" y="629" width="0.0128%" height="15" fill="rgb(207,123,46)" fg:x="26127" fg:w="31"/><text x="11.0543%" y="639.50"></text></g><g><title>_rjem_je_large_ralloc_no_move (43 samples, 0.02%)</title><rect x="10.8183%" y="725" width="0.0178%" height="15" fill="rgb(240,218,32)" fg:x="26161" fg:w="43"/><text x="11.0683%" y="735.50"></text></g><g><title>large_ralloc_no_move_expand (42 samples, 0.02%)</title><rect x="10.8187%" y="709" width="0.0174%" height="15" fill="rgb(252,5,43)" fg:x="26162" fg:w="42"/><text x="11.0687%" y="719.50"></text></g><g><title>iralloct (208 samples, 0.09%)</title><rect x="10.7691%" y="757" width="0.0860%" height="15" fill="rgb(252,84,19)" fg:x="26042" fg:w="208"/><text x="11.0191%" y="767.50"></text></g><g><title>_rjem_je_large_ralloc (92 samples, 0.04%)</title><rect x="10.8171%" y="741" width="0.0380%" height="15" fill="rgb(243,152,39)" fg:x="26158" fg:w="92"/><text x="11.0671%" y="751.50"></text></g><g><title>large_ralloc_move_helper (46 samples, 0.02%)</title><rect x="10.8361%" y="725" width="0.0190%" height="15" fill="rgb(234,160,15)" fg:x="26204" fg:w="46"/><text x="11.0861%" y="735.50"></text></g><g><title>_rjem_je_large_palloc (46 samples, 0.02%)</title><rect x="10.8361%" y="709" width="0.0190%" height="15" fill="rgb(237,34,20)" fg:x="26204" fg:w="46"/><text x="11.0861%" y="719.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (44 samples, 0.02%)</title><rect x="10.8369%" y="693" width="0.0182%" height="15" fill="rgb(229,97,13)" fg:x="26206" fg:w="44"/><text x="11.0869%" y="703.50"></text></g><g><title>extent_recycle (42 samples, 0.02%)</title><rect x="10.8378%" y="677" width="0.0174%" height="15" fill="rgb(234,71,50)" fg:x="26208" fg:w="42"/><text x="11.0878%" y="687.50"></text></g><g><title>extent_recycle_split (28 samples, 0.01%)</title><rect x="10.8436%" y="661" width="0.0116%" height="15" fill="rgb(253,155,4)" fg:x="26222" fg:w="28"/><text x="11.0936%" y="671.50"></text></g><g><title>extent_split_interior (28 samples, 0.01%)</title><rect x="10.8436%" y="645" width="0.0116%" height="15" fill="rgb(222,185,37)" fg:x="26222" fg:w="28"/><text x="11.0936%" y="655.50"></text></g><g><title>extent_split_impl (28 samples, 0.01%)</title><rect x="10.8436%" y="629" width="0.0116%" height="15" fill="rgb(251,177,13)" fg:x="26222" fg:w="28"/><text x="11.0936%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (225 samples, 0.09%)</title><rect x="10.7633%" y="949" width="0.0930%" height="15" fill="rgb(250,179,40)" fg:x="26028" fg:w="225"/><text x="11.0133%" y="959.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (225 samples, 0.09%)</title><rect x="10.7633%" y="933" width="0.0930%" height="15" fill="rgb(242,44,2)" fg:x="26028" fg:w="225"/><text x="11.0133%" y="943.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (221 samples, 0.09%)</title><rect x="10.7650%" y="917" width="0.0914%" height="15" fill="rgb(216,177,13)" fg:x="26032" fg:w="221"/><text x="11.0150%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (218 samples, 0.09%)</title><rect x="10.7662%" y="901" width="0.0901%" height="15" fill="rgb(216,106,43)" fg:x="26035" fg:w="218"/><text x="11.0162%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (218 samples, 0.09%)</title><rect x="10.7662%" y="885" width="0.0901%" height="15" fill="rgb(216,183,2)" fg:x="26035" fg:w="218"/><text x="11.0162%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (218 samples, 0.09%)</title><rect x="10.7662%" y="869" width="0.0901%" height="15" fill="rgb(249,75,3)" fg:x="26035" fg:w="218"/><text x="11.0162%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (218 samples, 0.09%)</title><rect x="10.7662%" y="853" width="0.0901%" height="15" fill="rgb(219,67,39)" fg:x="26035" fg:w="218"/><text x="11.0162%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (213 samples, 0.09%)</title><rect x="10.7683%" y="837" width="0.0881%" height="15" fill="rgb(253,228,2)" fg:x="26040" fg:w="213"/><text x="11.0183%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (212 samples, 0.09%)</title><rect x="10.7687%" y="821" width="0.0877%" height="15" fill="rgb(235,138,27)" fg:x="26041" fg:w="212"/><text x="11.0187%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (212 samples, 0.09%)</title><rect x="10.7687%" y="805" width="0.0877%" height="15" fill="rgb(236,97,51)" fg:x="26041" fg:w="212"/><text x="11.0187%" y="815.50"></text></g><g><title>alloc::alloc::realloc (212 samples, 0.09%)</title><rect x="10.7687%" y="789" width="0.0877%" height="15" fill="rgb(240,80,30)" fg:x="26041" fg:w="212"/><text x="11.0187%" y="799.50"></text></g><g><title>rallocx (211 samples, 0.09%)</title><rect x="10.7691%" y="773" width="0.0873%" height="15" fill="rgb(230,178,19)" fg:x="26042" fg:w="211"/><text x="11.0191%" y="783.50"></text></g><g><title>rlp::stream::BasicEncoder::insert_list_payload (231 samples, 0.10%)</title><rect x="10.7625%" y="981" width="0.0955%" height="15" fill="rgb(210,190,27)" fg:x="26026" fg:w="231"/><text x="11.0125%" y="991.50"></text></g><g><title>rlp::stream::BasicEncoder::insert_size (229 samples, 0.09%)</title><rect x="10.7633%" y="965" width="0.0947%" height="15" fill="rgb(222,107,31)" fg:x="26028" fg:w="229"/><text x="11.0133%" y="975.50"></text></g><g><title>rlp::stream::RlpStream::append (12,962 samples, 5.36%)</title><rect x="5.4983%" y="1013" width="5.3602%" height="15" fill="rgb(216,127,34)" fg:x="13296" fg:w="12962"/><text x="5.7483%" y="1023.50">rlp::st..</text></g><g><title>rlp::stream::RlpStream::note_appended (241 samples, 0.10%)</title><rect x="10.7588%" y="997" width="0.0997%" height="15" fill="rgb(234,116,52)" fg:x="26017" fg:w="241"/><text x="11.0088%" y="1007.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::set (13,340 samples, 5.52%)</title><rect x="5.3552%" y="1045" width="5.5165%" height="15" fill="rgb(222,124,15)" fg:x="12950" fg:w="13340"/><text x="5.6052%" y="1055.50">cfx_sta..</text></g><g><title>rlp::encode (13,001 samples, 5.38%)</title><rect x="5.4954%" y="1029" width="5.3763%" height="15" fill="rgb(231,179,28)" fg:x="13289" fg:w="13001"/><text x="5.7454%" y="1039.50">rlp::en..</text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::commit (13,395 samples, 5.54%)</title><rect x="5.3333%" y="1061" width="5.5392%" height="15" fill="rgb(226,93,45)" fg:x="12897" fg:w="13395"/><text x="5.5833%" y="1071.50">cfx_evm..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.02%)</title><rect x="10.8812%" y="821" width="0.0165%" height="15" fill="rgb(215,8,51)" fg:x="26313" fg:w="40"/><text x="11.1312%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (40 samples, 0.02%)</title><rect x="10.8812%" y="805" width="0.0165%" height="15" fill="rgb(223,106,5)" fg:x="26313" fg:w="40"/><text x="11.1312%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (40 samples, 0.02%)</title><rect x="10.8812%" y="789" width="0.0165%" height="15" fill="rgb(250,191,5)" fg:x="26313" fg:w="40"/><text x="11.1312%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (40 samples, 0.02%)</title><rect x="10.8812%" y="773" width="0.0165%" height="15" fill="rgb(242,132,44)" fg:x="26313" fg:w="40"/><text x="11.1312%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (40 samples, 0.02%)</title><rect x="10.8812%" y="757" width="0.0165%" height="15" fill="rgb(251,152,29)" fg:x="26313" fg:w="40"/><text x="11.1312%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,primitive_types::U256)&gt; (40 samples, 0.02%)</title><rect x="10.8812%" y="741" width="0.0165%" height="15" fill="rgb(218,179,5)" fg:x="26313" fg:w="40"/><text x="11.1312%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (40 samples, 0.02%)</title><rect x="10.8812%" y="725" width="0.0165%" height="15" fill="rgb(227,67,19)" fg:x="26313" fg:w="40"/><text x="11.1312%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (40 samples, 0.02%)</title><rect x="10.8812%" y="709" width="0.0165%" height="15" fill="rgb(233,119,31)" fg:x="26313" fg:w="40"/><text x="11.1312%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.02%)</title><rect x="10.8812%" y="693" width="0.0165%" height="15" fill="rgb(241,120,22)" fg:x="26313" fg:w="40"/><text x="11.1312%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.01%)</title><rect x="10.8874%" y="677" width="0.0103%" height="15" fill="rgb(224,102,30)" fg:x="26328" fg:w="25"/><text x="11.1374%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.01%)</title><rect x="10.8874%" y="661" width="0.0103%" height="15" fill="rgb(210,164,37)" fg:x="26328" fg:w="25"/><text x="11.1374%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,primitive_types::U256&gt;&gt;&gt;&gt; (46 samples, 0.02%)</title><rect x="10.8804%" y="949" width="0.0190%" height="15" fill="rgb(226,191,16)" fg:x="26311" fg:w="46"/><text x="11.1304%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.02%)</title><rect x="10.8804%" y="933" width="0.0190%" height="15" fill="rgb(214,40,45)" fg:x="26311" fg:w="46"/><text x="11.1304%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (44 samples, 0.02%)</title><rect x="10.8812%" y="917" width="0.0182%" height="15" fill="rgb(244,29,26)" fg:x="26313" fg:w="44"/><text x="11.1312%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,primitive_types::U256&gt;&gt;&gt; (44 samples, 0.02%)</title><rect x="10.8812%" y="901" width="0.0182%" height="15" fill="rgb(216,16,5)" fg:x="26313" fg:w="44"/><text x="11.1312%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,primitive_types::U256&gt;&gt;&gt; (44 samples, 0.02%)</title><rect x="10.8812%" y="885" width="0.0182%" height="15" fill="rgb(249,76,35)" fg:x="26313" fg:w="44"/><text x="11.1312%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,primitive_types::U256&gt;&gt; (44 samples, 0.02%)</title><rect x="10.8812%" y="869" width="0.0182%" height="15" fill="rgb(207,11,44)" fg:x="26313" fg:w="44"/><text x="11.1312%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,primitive_types::U256,std::hash::random::RandomState&gt;&gt; (44 samples, 0.02%)</title><rect x="10.8812%" y="853" width="0.0182%" height="15" fill="rgb(228,190,49)" fg:x="26313" fg:w="44"/><text x="11.1312%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::vec::Vec&lt;u8&gt;,primitive_types::U256)&gt;&gt; (44 samples, 0.02%)</title><rect x="10.8812%" y="837" width="0.0182%" height="15" fill="rgb(214,173,12)" fg:x="26313" fg:w="44"/><text x="11.1312%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;(cfx_types::AddressWithSpace,cfx_evm::state::account_entry::AccountEntry)&gt; (75 samples, 0.03%)</title><rect x="10.8804%" y="1013" width="0.0310%" height="15" fill="rgb(218,26,35)" fg:x="26311" fg:w="75"/><text x="11.1304%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;cfx_evm::state::account_entry::AccountEntry&gt; (75 samples, 0.03%)</title><rect x="10.8804%" y="997" width="0.0310%" height="15" fill="rgb(220,200,19)" fg:x="26311" fg:w="75"/><text x="11.1304%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;cfx_evm::state::account_entry::OverlayAccount&gt;&gt; (75 samples, 0.03%)</title><rect x="10.8804%" y="981" width="0.0310%" height="15" fill="rgb(239,95,49)" fg:x="26311" fg:w="75"/><text x="11.1304%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;cfx_evm::state::account_entry::OverlayAccount&gt; (75 samples, 0.03%)</title><rect x="10.8804%" y="965" width="0.0310%" height="15" fill="rgb(235,85,53)" fg:x="26311" fg:w="75"/><text x="11.1304%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,primitive_types::U256&gt;&gt;&gt; (29 samples, 0.01%)</title><rect x="10.8994%" y="949" width="0.0120%" height="15" fill="rgb(233,133,31)" fg:x="26357" fg:w="29"/><text x="11.1494%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.01%)</title><rect x="10.8994%" y="933" width="0.0120%" height="15" fill="rgb(218,25,20)" fg:x="26357" fg:w="29"/><text x="11.1494%" y="943.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateTrait&gt;::commit (13,539 samples, 5.60%)</title><rect x="5.3134%" y="1077" width="5.5988%" height="15" fill="rgb(252,210,38)" fg:x="12849" fg:w="13539"/><text x="5.5634%" y="1087.50">&lt;cfx_ev..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(cfx_types::AddressWithSpace,cfx_evm::state::account_entry::AccountEntry)&gt;&gt; (89 samples, 0.04%)</title><rect x="10.8754%" y="1061" width="0.0368%" height="15" fill="rgb(242,134,21)" fg:x="26299" fg:w="89"/><text x="11.1254%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.04%)</title><rect x="10.8754%" y="1045" width="0.0368%" height="15" fill="rgb(213,28,48)" fg:x="26299" fg:w="89"/><text x="11.1254%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(cfx_types::AddressWithSpace,cfx_evm::state::account_entry::AccountEntry)]&gt; (89 samples, 0.04%)</title><rect x="10.8754%" y="1029" width="0.0368%" height="15" fill="rgb(250,196,2)" fg:x="26299" fg:w="89"/><text x="11.1254%" y="1039.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as core::clone::Clone&gt;::clone (32 samples, 0.01%)</title><rect x="10.9130%" y="981" width="0.0132%" height="15" fill="rgb(227,5,17)" fg:x="26390" fg:w="32"/><text x="11.1630%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.01%)</title><rect x="10.9130%" y="965" width="0.0132%" height="15" fill="rgb(221,226,24)" fg:x="26390" fg:w="32"/><text x="11.1630%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.01%)</title><rect x="10.9130%" y="949" width="0.0132%" height="15" fill="rgb(211,5,48)" fg:x="26390" fg:w="32"/><text x="11.1630%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.01%)</title><rect x="10.9130%" y="933" width="0.0132%" height="15" fill="rgb(219,150,6)" fg:x="26390" fg:w="32"/><text x="11.1630%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.01%)</title><rect x="10.9130%" y="917" width="0.0132%" height="15" fill="rgb(251,46,16)" fg:x="26390" fg:w="32"/><text x="11.1630%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.01%)</title><rect x="10.9130%" y="901" width="0.0132%" height="15" fill="rgb(220,204,40)" fg:x="26390" fg:w="32"/><text x="11.1630%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32 samples, 0.01%)</title><rect x="10.9130%" y="885" width="0.0132%" height="15" fill="rgb(211,85,2)" fg:x="26390" fg:w="32"/><text x="11.1630%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (32 samples, 0.01%)</title><rect x="10.9130%" y="869" width="0.0132%" height="15" fill="rgb(229,17,7)" fg:x="26390" fg:w="32"/><text x="11.1630%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.01%)</title><rect x="10.9130%" y="853" width="0.0132%" height="15" fill="rgb(239,72,28)" fg:x="26390" fg:w="32"/><text x="11.1630%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.01%)</title><rect x="10.9130%" y="837" width="0.0132%" height="15" fill="rgb(230,47,54)" fg:x="26390" fg:w="32"/><text x="11.1630%" y="847.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.01%)</title><rect x="10.9130%" y="821" width="0.0132%" height="15" fill="rgb(214,50,8)" fg:x="26390" fg:w="32"/><text x="11.1630%" y="831.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as core::clone::Clone&gt;::clone (60 samples, 0.02%)</title><rect x="10.9122%" y="1061" width="0.0248%" height="15" fill="rgb(216,198,43)" fg:x="26388" fg:w="60"/><text x="11.1622%" y="1071.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetV0 as core::clone::Clone&gt;::clone (60 samples, 0.02%)</title><rect x="10.9122%" y="1045" width="0.0248%" height="15" fill="rgb(234,20,35)" fg:x="26388" fg:w="60"/><text x="11.1622%" y="1055.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetMut as core::clone::Clone&gt;::clone (60 samples, 0.02%)</title><rect x="10.9122%" y="1029" width="0.0248%" height="15" fill="rgb(254,45,19)" fg:x="26388" fg:w="60"/><text x="11.1622%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (60 samples, 0.02%)</title><rect x="10.9122%" y="1013" width="0.0248%" height="15" fill="rgb(219,14,44)" fg:x="26388" fg:w="60"/><text x="11.1622%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (60 samples, 0.02%)</title><rect x="10.9122%" y="997" width="0.0248%" height="15" fill="rgb(217,220,26)" fg:x="26388" fg:w="60"/><text x="11.1622%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.02%)</title><rect x="11.0011%" y="1013" width="0.0170%" height="15" fill="rgb(213,158,28)" fg:x="26603" fg:w="41"/><text x="11.2511%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (41 samples, 0.02%)</title><rect x="11.0011%" y="997" width="0.0170%" height="15" fill="rgb(252,51,52)" fg:x="26603" fg:w="41"/><text x="11.2511%" y="1007.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="11.0247%" y="821" width="0.0116%" height="15" fill="rgb(246,89,16)" fg:x="26660" fg:w="28"/><text x="11.2747%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.01%)</title><rect x="11.0247%" y="853" width="0.0141%" height="15" fill="rgb(216,158,49)" fg:x="26660" fg:w="34"/><text x="11.2747%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (34 samples, 0.01%)</title><rect x="11.0247%" y="837" width="0.0141%" height="15" fill="rgb(236,107,19)" fg:x="26660" fg:w="34"/><text x="11.2747%" y="847.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.03%)</title><rect x="11.0226%" y="917" width="0.0261%" height="15" fill="rgb(228,185,30)" fg:x="26655" fg:w="63"/><text x="11.2726%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (63 samples, 0.03%)</title><rect x="11.0226%" y="901" width="0.0261%" height="15" fill="rgb(246,134,8)" fg:x="26655" fg:w="63"/><text x="11.2726%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (63 samples, 0.03%)</title><rect x="11.0226%" y="885" width="0.0261%" height="15" fill="rgb(214,143,50)" fg:x="26655" fg:w="63"/><text x="11.2726%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (63 samples, 0.03%)</title><rect x="11.0226%" y="869" width="0.0261%" height="15" fill="rgb(228,75,8)" fg:x="26655" fg:w="63"/><text x="11.2726%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.03%)</title><rect x="11.0226%" y="949" width="0.0343%" height="15" fill="rgb(207,175,4)" fg:x="26655" fg:w="83"/><text x="11.2726%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (83 samples, 0.03%)</title><rect x="11.0226%" y="933" width="0.0343%" height="15" fill="rgb(205,108,24)" fg:x="26655" fg:w="83"/><text x="11.2726%" y="943.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (128 samples, 0.05%)</title><rect x="11.0181%" y="1013" width="0.0529%" height="15" fill="rgb(244,120,49)" fg:x="26644" fg:w="128"/><text x="11.2681%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (117 samples, 0.05%)</title><rect x="11.0226%" y="997" width="0.0484%" height="15" fill="rgb(223,47,38)" fg:x="26655" fg:w="117"/><text x="11.2726%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (117 samples, 0.05%)</title><rect x="11.0226%" y="981" width="0.0484%" height="15" fill="rgb(229,179,11)" fg:x="26655" fg:w="117"/><text x="11.2726%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (117 samples, 0.05%)</title><rect x="11.0226%" y="965" width="0.0484%" height="15" fill="rgb(231,122,1)" fg:x="26655" fg:w="117"/><text x="11.2726%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (34 samples, 0.01%)</title><rect x="11.0569%" y="949" width="0.0141%" height="15" fill="rgb(245,119,9)" fg:x="26738" fg:w="34"/><text x="11.3069%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.01%)</title><rect x="11.0569%" y="933" width="0.0141%" height="15" fill="rgb(241,163,25)" fg:x="26738" fg:w="34"/><text x="11.3069%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.01%)</title><rect x="11.0569%" y="917" width="0.0141%" height="15" fill="rgb(217,214,3)" fg:x="26738" fg:w="34"/><text x="11.3069%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.01%)</title><rect x="11.0569%" y="901" width="0.0141%" height="15" fill="rgb(240,86,28)" fg:x="26738" fg:w="34"/><text x="11.3069%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (40 samples, 0.02%)</title><rect x="11.0768%" y="1013" width="0.0165%" height="15" fill="rgb(215,47,9)" fg:x="26786" fg:w="40"/><text x="11.3268%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (31 samples, 0.01%)</title><rect x="11.0805%" y="997" width="0.0128%" height="15" fill="rgb(252,25,45)" fg:x="26795" fg:w="31"/><text x="11.3305%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (29 samples, 0.01%)</title><rect x="11.1318%" y="741" width="0.0120%" height="15" fill="rgb(251,164,9)" fg:x="26919" fg:w="29"/><text x="11.3818%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (41 samples, 0.02%)</title><rect x="11.1272%" y="837" width="0.0170%" height="15" fill="rgb(233,194,0)" fg:x="26908" fg:w="41"/><text x="11.3772%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (41 samples, 0.02%)</title><rect x="11.1272%" y="821" width="0.0170%" height="15" fill="rgb(249,111,24)" fg:x="26908" fg:w="41"/><text x="11.3772%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (32 samples, 0.01%)</title><rect x="11.1310%" y="805" width="0.0132%" height="15" fill="rgb(250,223,3)" fg:x="26917" fg:w="32"/><text x="11.3810%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (32 samples, 0.01%)</title><rect x="11.1310%" y="789" width="0.0132%" height="15" fill="rgb(236,178,37)" fg:x="26917" fg:w="32"/><text x="11.3810%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.01%)</title><rect x="11.1310%" y="773" width="0.0132%" height="15" fill="rgb(241,158,50)" fg:x="26917" fg:w="32"/><text x="11.3810%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (32 samples, 0.01%)</title><rect x="11.1310%" y="757" width="0.0132%" height="15" fill="rgb(213,121,41)" fg:x="26917" fg:w="32"/><text x="11.3810%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (73 samples, 0.03%)</title><rect x="11.1198%" y="853" width="0.0302%" height="15" fill="rgb(240,92,3)" fg:x="26890" fg:w="73"/><text x="11.3698%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (103 samples, 0.04%)</title><rect x="11.1107%" y="933" width="0.0426%" height="15" fill="rgb(205,123,3)" fg:x="26868" fg:w="103"/><text x="11.3607%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (85 samples, 0.04%)</title><rect x="11.1181%" y="917" width="0.0351%" height="15" fill="rgb(205,97,47)" fg:x="26886" fg:w="85"/><text x="11.3681%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (85 samples, 0.04%)</title><rect x="11.1181%" y="901" width="0.0351%" height="15" fill="rgb(247,152,14)" fg:x="26886" fg:w="85"/><text x="11.3681%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (85 samples, 0.04%)</title><rect x="11.1181%" y="885" width="0.0351%" height="15" fill="rgb(248,195,53)" fg:x="26886" fg:w="85"/><text x="11.3681%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (85 samples, 0.04%)</title><rect x="11.1181%" y="869" width="0.0351%" height="15" fill="rgb(226,201,16)" fg:x="26886" fg:w="85"/><text x="11.3681%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (119 samples, 0.05%)</title><rect x="11.1066%" y="1013" width="0.0492%" height="15" fill="rgb(205,98,0)" fg:x="26858" fg:w="119"/><text x="11.3566%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (119 samples, 0.05%)</title><rect x="11.1066%" y="997" width="0.0492%" height="15" fill="rgb(214,191,48)" fg:x="26858" fg:w="119"/><text x="11.3566%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (119 samples, 0.05%)</title><rect x="11.1066%" y="981" width="0.0492%" height="15" fill="rgb(237,112,39)" fg:x="26858" fg:w="119"/><text x="11.3566%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (119 samples, 0.05%)</title><rect x="11.1066%" y="965" width="0.0492%" height="15" fill="rgb(247,203,27)" fg:x="26858" fg:w="119"/><text x="11.3566%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (119 samples, 0.05%)</title><rect x="11.1066%" y="949" width="0.0492%" height="15" fill="rgb(235,124,28)" fg:x="26858" fg:w="119"/><text x="11.3566%" y="959.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (31 samples, 0.01%)</title><rect x="11.2029%" y="533" width="0.0128%" height="15" fill="rgb(208,207,46)" fg:x="27091" fg:w="31"/><text x="11.4529%" y="543.50"></text></g><g><title>arena_slab_reg_alloc (25 samples, 0.01%)</title><rect x="11.2054%" y="517" width="0.0103%" height="15" fill="rgb(234,176,4)" fg:x="27097" fg:w="25"/><text x="11.4554%" y="527.50"></text></g><g><title>bitmap_sfu (25 samples, 0.01%)</title><rect x="11.2054%" y="501" width="0.0103%" height="15" fill="rgb(230,133,28)" fg:x="27097" fg:w="25"/><text x="11.4554%" y="511.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (76 samples, 0.03%)</title><rect x="11.1851%" y="853" width="0.0314%" height="15" fill="rgb(211,137,40)" fg:x="27048" fg:w="76"/><text x="11.4351%" y="863.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (76 samples, 0.03%)</title><rect x="11.1851%" y="837" width="0.0314%" height="15" fill="rgb(254,35,13)" fg:x="27048" fg:w="76"/><text x="11.4351%" y="847.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (57 samples, 0.02%)</title><rect x="11.1930%" y="821" width="0.0236%" height="15" fill="rgb(225,49,51)" fg:x="27067" fg:w="57"/><text x="11.4430%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (57 samples, 0.02%)</title><rect x="11.1930%" y="805" width="0.0236%" height="15" fill="rgb(251,10,15)" fg:x="27067" fg:w="57"/><text x="11.4430%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (57 samples, 0.02%)</title><rect x="11.1930%" y="789" width="0.0236%" height="15" fill="rgb(228,207,15)" fg:x="27067" fg:w="57"/><text x="11.4430%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (57 samples, 0.02%)</title><rect x="11.1930%" y="773" width="0.0236%" height="15" fill="rgb(241,99,19)" fg:x="27067" fg:w="57"/><text x="11.4430%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (57 samples, 0.02%)</title><rect x="11.1930%" y="757" width="0.0236%" height="15" fill="rgb(207,104,49)" fg:x="27067" fg:w="57"/><text x="11.4430%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (57 samples, 0.02%)</title><rect x="11.1930%" y="741" width="0.0236%" height="15" fill="rgb(234,99,18)" fg:x="27067" fg:w="57"/><text x="11.4430%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (57 samples, 0.02%)</title><rect x="11.1930%" y="725" width="0.0236%" height="15" fill="rgb(213,191,49)" fg:x="27067" fg:w="57"/><text x="11.4430%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (57 samples, 0.02%)</title><rect x="11.1930%" y="709" width="0.0236%" height="15" fill="rgb(210,226,19)" fg:x="27067" fg:w="57"/><text x="11.4430%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (57 samples, 0.02%)</title><rect x="11.1930%" y="693" width="0.0236%" height="15" fill="rgb(229,97,18)" fg:x="27067" fg:w="57"/><text x="11.4430%" y="703.50"></text></g><g><title>alloc::alloc::alloc (57 samples, 0.02%)</title><rect x="11.1930%" y="677" width="0.0236%" height="15" fill="rgb(211,167,15)" fg:x="27067" fg:w="57"/><text x="11.4430%" y="687.50"></text></g><g><title>mallocx (46 samples, 0.02%)</title><rect x="11.1975%" y="661" width="0.0190%" height="15" fill="rgb(210,169,34)" fg:x="27078" fg:w="46"/><text x="11.4475%" y="671.50"></text></g><g><title>imalloc (35 samples, 0.01%)</title><rect x="11.2021%" y="645" width="0.0145%" height="15" fill="rgb(241,121,31)" fg:x="27089" fg:w="35"/><text x="11.4521%" y="655.50"></text></g><g><title>imalloc_body (35 samples, 0.01%)</title><rect x="11.2021%" y="629" width="0.0145%" height="15" fill="rgb(232,40,11)" fg:x="27089" fg:w="35"/><text x="11.4521%" y="639.50"></text></g><g><title>imalloc_no_sample (35 samples, 0.01%)</title><rect x="11.2021%" y="613" width="0.0145%" height="15" fill="rgb(205,86,26)" fg:x="27089" fg:w="35"/><text x="11.4521%" y="623.50"></text></g><g><title>iallocztm (35 samples, 0.01%)</title><rect x="11.2021%" y="597" width="0.0145%" height="15" fill="rgb(231,126,28)" fg:x="27089" fg:w="35"/><text x="11.4521%" y="607.50"></text></g><g><title>arena_malloc (35 samples, 0.01%)</title><rect x="11.2021%" y="581" width="0.0145%" height="15" fill="rgb(219,221,18)" fg:x="27089" fg:w="35"/><text x="11.4521%" y="591.50"></text></g><g><title>tcache_alloc_small (35 samples, 0.01%)</title><rect x="11.2021%" y="565" width="0.0145%" height="15" fill="rgb(211,40,0)" fg:x="27089" fg:w="35"/><text x="11.4521%" y="575.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (35 samples, 0.01%)</title><rect x="11.2021%" y="549" width="0.0145%" height="15" fill="rgb(239,85,43)" fg:x="27089" fg:w="35"/><text x="11.4521%" y="559.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (86 samples, 0.04%)</title><rect x="11.1851%" y="885" width="0.0356%" height="15" fill="rgb(231,55,21)" fg:x="27048" fg:w="86"/><text x="11.4351%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (86 samples, 0.04%)</title><rect x="11.1851%" y="869" width="0.0356%" height="15" fill="rgb(225,184,43)" fg:x="27048" fg:w="86"/><text x="11.4351%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (101 samples, 0.04%)</title><rect x="11.1851%" y="949" width="0.0418%" height="15" fill="rgb(251,158,41)" fg:x="27048" fg:w="101"/><text x="11.4351%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (101 samples, 0.04%)</title><rect x="11.1851%" y="933" width="0.0418%" height="15" fill="rgb(234,159,37)" fg:x="27048" fg:w="101"/><text x="11.4351%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (101 samples, 0.04%)</title><rect x="11.1851%" y="917" width="0.0418%" height="15" fill="rgb(216,204,22)" fg:x="27048" fg:w="101"/><text x="11.4351%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (101 samples, 0.04%)</title><rect x="11.1851%" y="901" width="0.0418%" height="15" fill="rgb(214,17,3)" fg:x="27048" fg:w="101"/><text x="11.4351%" y="911.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (149 samples, 0.06%)</title><rect x="11.1851%" y="965" width="0.0616%" height="15" fill="rgb(212,111,17)" fg:x="27048" fg:w="149"/><text x="11.4351%" y="975.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (48 samples, 0.02%)</title><rect x="11.2269%" y="949" width="0.0198%" height="15" fill="rgb(221,157,24)" fg:x="27149" fg:w="48"/><text x="11.4769%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (48 samples, 0.02%)</title><rect x="11.2269%" y="933" width="0.0198%" height="15" fill="rgb(252,16,13)" fg:x="27149" fg:w="48"/><text x="11.4769%" y="943.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (48 samples, 0.02%)</title><rect x="11.2269%" y="917" width="0.0198%" height="15" fill="rgb(221,62,2)" fg:x="27149" fg:w="48"/><text x="11.4769%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (48 samples, 0.02%)</title><rect x="11.2269%" y="901" width="0.0198%" height="15" fill="rgb(247,87,22)" fg:x="27149" fg:w="48"/><text x="11.4769%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (48 samples, 0.02%)</title><rect x="11.2269%" y="885" width="0.0198%" height="15" fill="rgb(215,73,9)" fg:x="27149" fg:w="48"/><text x="11.4769%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (48 samples, 0.02%)</title><rect x="11.2269%" y="869" width="0.0198%" height="15" fill="rgb(207,175,33)" fg:x="27149" fg:w="48"/><text x="11.4769%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (48 samples, 0.02%)</title><rect x="11.2269%" y="853" width="0.0198%" height="15" fill="rgb(243,129,54)" fg:x="27149" fg:w="48"/><text x="11.4769%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48 samples, 0.02%)</title><rect x="11.2269%" y="837" width="0.0198%" height="15" fill="rgb(227,119,45)" fg:x="27149" fg:w="48"/><text x="11.4769%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.02%)</title><rect x="11.2269%" y="821" width="0.0198%" height="15" fill="rgb(205,109,36)" fg:x="27149" fg:w="48"/><text x="11.4769%" y="831.50"></text></g><g><title>alloc::alloc::alloc (48 samples, 0.02%)</title><rect x="11.2269%" y="805" width="0.0198%" height="15" fill="rgb(205,6,39)" fg:x="27149" fg:w="48"/><text x="11.4769%" y="815.50"></text></g><g><title>mallocx (40 samples, 0.02%)</title><rect x="11.2302%" y="789" width="0.0165%" height="15" fill="rgb(221,32,16)" fg:x="27157" fg:w="40"/><text x="11.4802%" y="799.50"></text></g><g><title>imalloc (40 samples, 0.02%)</title><rect x="11.2302%" y="773" width="0.0165%" height="15" fill="rgb(228,144,50)" fg:x="27157" fg:w="40"/><text x="11.4802%" y="783.50"></text></g><g><title>imalloc_body (40 samples, 0.02%)</title><rect x="11.2302%" y="757" width="0.0165%" height="15" fill="rgb(229,201,53)" fg:x="27157" fg:w="40"/><text x="11.4802%" y="767.50"></text></g><g><title>imalloc_no_sample (40 samples, 0.02%)</title><rect x="11.2302%" y="741" width="0.0165%" height="15" fill="rgb(249,153,27)" fg:x="27157" fg:w="40"/><text x="11.4802%" y="751.50"></text></g><g><title>iallocztm (40 samples, 0.02%)</title><rect x="11.2302%" y="725" width="0.0165%" height="15" fill="rgb(227,106,25)" fg:x="27157" fg:w="40"/><text x="11.4802%" y="735.50"></text></g><g><title>arena_malloc (40 samples, 0.02%)</title><rect x="11.2302%" y="709" width="0.0165%" height="15" fill="rgb(230,65,29)" fg:x="27157" fg:w="40"/><text x="11.4802%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (35 samples, 0.01%)</title><rect x="11.2467%" y="917" width="0.0145%" height="15" fill="rgb(221,57,46)" fg:x="27197" fg:w="35"/><text x="11.4967%" y="927.50"></text></g><g><title>core::hash::BuildHasher::hash_one (35 samples, 0.01%)</title><rect x="11.2467%" y="901" width="0.0145%" height="15" fill="rgb(229,161,17)" fg:x="27197" fg:w="35"/><text x="11.4967%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (290 samples, 0.12%)</title><rect x="11.1727%" y="1013" width="0.1199%" height="15" fill="rgb(222,213,11)" fg:x="27018" fg:w="290"/><text x="11.4227%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (290 samples, 0.12%)</title><rect x="11.1727%" y="997" width="0.1199%" height="15" fill="rgb(235,35,13)" fg:x="27018" fg:w="290"/><text x="11.4227%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (260 samples, 0.11%)</title><rect x="11.1851%" y="981" width="0.1075%" height="15" fill="rgb(233,158,34)" fg:x="27048" fg:w="260"/><text x="11.4351%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (111 samples, 0.05%)</title><rect x="11.2467%" y="965" width="0.0459%" height="15" fill="rgb(215,151,48)" fg:x="27197" fg:w="111"/><text x="11.4967%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (111 samples, 0.05%)</title><rect x="11.2467%" y="949" width="0.0459%" height="15" fill="rgb(229,84,14)" fg:x="27197" fg:w="111"/><text x="11.4967%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (111 samples, 0.05%)</title><rect x="11.2467%" y="933" width="0.0459%" height="15" fill="rgb(229,68,14)" fg:x="27197" fg:w="111"/><text x="11.4967%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (76 samples, 0.03%)</title><rect x="11.2612%" y="917" width="0.0314%" height="15" fill="rgb(243,106,26)" fg:x="27232" fg:w="76"/><text x="11.5112%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (76 samples, 0.03%)</title><rect x="11.2612%" y="901" width="0.0314%" height="15" fill="rgb(206,45,38)" fg:x="27232" fg:w="76"/><text x="11.5112%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (76 samples, 0.03%)</title><rect x="11.2612%" y="885" width="0.0314%" height="15" fill="rgb(226,6,15)" fg:x="27232" fg:w="76"/><text x="11.5112%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (64 samples, 0.03%)</title><rect x="11.2662%" y="869" width="0.0265%" height="15" fill="rgb(232,22,54)" fg:x="27244" fg:w="64"/><text x="11.5162%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (64 samples, 0.03%)</title><rect x="11.2662%" y="853" width="0.0265%" height="15" fill="rgb(229,222,32)" fg:x="27244" fg:w="64"/><text x="11.5162%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (64 samples, 0.03%)</title><rect x="11.2662%" y="837" width="0.0265%" height="15" fill="rgb(228,62,29)" fg:x="27244" fg:w="64"/><text x="11.5162%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (33 samples, 0.01%)</title><rect x="11.3162%" y="837" width="0.0136%" height="15" fill="rgb(251,103,34)" fg:x="27365" fg:w="33"/><text x="11.5662%" y="847.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="11.3162%" y="821" width="0.0136%" height="15" fill="rgb(233,12,30)" fg:x="27365" fg:w="33"/><text x="11.5662%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (33 samples, 0.01%)</title><rect x="11.3162%" y="805" width="0.0136%" height="15" fill="rgb(238,52,0)" fg:x="27365" fg:w="33"/><text x="11.5662%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (33 samples, 0.01%)</title><rect x="11.3162%" y="789" width="0.0136%" height="15" fill="rgb(223,98,5)" fg:x="27365" fg:w="33"/><text x="11.5662%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (33 samples, 0.01%)</title><rect x="11.3162%" y="773" width="0.0136%" height="15" fill="rgb(228,75,37)" fg:x="27365" fg:w="33"/><text x="11.5662%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="11.3162%" y="757" width="0.0136%" height="15" fill="rgb(205,115,49)" fg:x="27365" fg:w="33"/><text x="11.5662%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (33 samples, 0.01%)</title><rect x="11.3162%" y="741" width="0.0136%" height="15" fill="rgb(250,154,43)" fg:x="27365" fg:w="33"/><text x="11.5662%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (33 samples, 0.01%)</title><rect x="11.3162%" y="725" width="0.0136%" height="15" fill="rgb(226,43,29)" fg:x="27365" fg:w="33"/><text x="11.5662%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (52 samples, 0.02%)</title><rect x="11.3092%" y="853" width="0.0215%" height="15" fill="rgb(249,228,39)" fg:x="27348" fg:w="52"/><text x="11.5592%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.03%)</title><rect x="11.3038%" y="901" width="0.0289%" height="15" fill="rgb(216,79,43)" fg:x="27335" fg:w="70"/><text x="11.5538%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (70 samples, 0.03%)</title><rect x="11.3038%" y="885" width="0.0289%" height="15" fill="rgb(228,95,12)" fg:x="27335" fg:w="70"/><text x="11.5538%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (70 samples, 0.03%)</title><rect x="11.3038%" y="869" width="0.0289%" height="15" fill="rgb(249,221,15)" fg:x="27335" fg:w="70"/><text x="11.5538%" y="879.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.04%)</title><rect x="11.3009%" y="965" width="0.0356%" height="15" fill="rgb(233,34,13)" fg:x="27328" fg:w="86"/><text x="11.5509%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (79 samples, 0.03%)</title><rect x="11.3038%" y="949" width="0.0327%" height="15" fill="rgb(214,103,39)" fg:x="27335" fg:w="79"/><text x="11.5538%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (79 samples, 0.03%)</title><rect x="11.3038%" y="933" width="0.0327%" height="15" fill="rgb(251,126,39)" fg:x="27335" fg:w="79"/><text x="11.5538%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (79 samples, 0.03%)</title><rect x="11.3038%" y="917" width="0.0327%" height="15" fill="rgb(214,216,36)" fg:x="27335" fg:w="79"/><text x="11.5538%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (101 samples, 0.04%)</title><rect x="11.3009%" y="981" width="0.0418%" height="15" fill="rgb(220,221,8)" fg:x="27328" fg:w="101"/><text x="11.5509%" y="991.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::into_effect (123 samples, 0.05%)</title><rect x="11.2927%" y="1013" width="0.0509%" height="15" fill="rgb(240,216,3)" fg:x="27308" fg:w="123"/><text x="11.5427%" y="1023.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::into_effect (123 samples, 0.05%)</title><rect x="11.2927%" y="997" width="0.0509%" height="15" fill="rgb(232,218,17)" fg:x="27308" fg:w="123"/><text x="11.5427%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (26 samples, 0.01%)</title><rect x="11.3873%" y="741" width="0.0108%" height="15" fill="rgb(229,163,45)" fg:x="27537" fg:w="26"/><text x="11.6373%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (26 samples, 0.01%)</title><rect x="11.3873%" y="725" width="0.0108%" height="15" fill="rgb(231,110,42)" fg:x="27537" fg:w="26"/><text x="11.6373%" y="735.50"></text></g><g><title>alloc::alloc::realloc (26 samples, 0.01%)</title><rect x="11.3873%" y="709" width="0.0108%" height="15" fill="rgb(208,170,48)" fg:x="27537" fg:w="26"/><text x="11.6373%" y="719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (50 samples, 0.02%)</title><rect x="11.3857%" y="901" width="0.0207%" height="15" fill="rgb(239,116,25)" fg:x="27533" fg:w="50"/><text x="11.6357%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (50 samples, 0.02%)</title><rect x="11.3857%" y="885" width="0.0207%" height="15" fill="rgb(219,200,50)" fg:x="27533" fg:w="50"/><text x="11.6357%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (50 samples, 0.02%)</title><rect x="11.3857%" y="869" width="0.0207%" height="15" fill="rgb(245,200,0)" fg:x="27533" fg:w="50"/><text x="11.6357%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (50 samples, 0.02%)</title><rect x="11.3857%" y="853" width="0.0207%" height="15" fill="rgb(245,119,33)" fg:x="27533" fg:w="50"/><text x="11.6357%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (50 samples, 0.02%)</title><rect x="11.3857%" y="837" width="0.0207%" height="15" fill="rgb(231,125,12)" fg:x="27533" fg:w="50"/><text x="11.6357%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (50 samples, 0.02%)</title><rect x="11.3857%" y="821" width="0.0207%" height="15" fill="rgb(216,96,41)" fg:x="27533" fg:w="50"/><text x="11.6357%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (50 samples, 0.02%)</title><rect x="11.3857%" y="805" width="0.0207%" height="15" fill="rgb(248,43,45)" fg:x="27533" fg:w="50"/><text x="11.6357%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (50 samples, 0.02%)</title><rect x="11.3857%" y="789" width="0.0207%" height="15" fill="rgb(217,222,7)" fg:x="27533" fg:w="50"/><text x="11.6357%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (50 samples, 0.02%)</title><rect x="11.3857%" y="773" width="0.0207%" height="15" fill="rgb(233,28,6)" fg:x="27533" fg:w="50"/><text x="11.6357%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (47 samples, 0.02%)</title><rect x="11.3869%" y="757" width="0.0194%" height="15" fill="rgb(231,218,15)" fg:x="27536" fg:w="47"/><text x="11.6369%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (29 samples, 0.01%)</title><rect x="11.4101%" y="645" width="0.0120%" height="15" fill="rgb(226,171,48)" fg:x="27592" fg:w="29"/><text x="11.6601%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (29 samples, 0.01%)</title><rect x="11.4101%" y="629" width="0.0120%" height="15" fill="rgb(235,201,9)" fg:x="27592" fg:w="29"/><text x="11.6601%" y="639.50"></text></g><g><title>alloc::alloc::realloc (29 samples, 0.01%)</title><rect x="11.4101%" y="613" width="0.0120%" height="15" fill="rgb(217,80,15)" fg:x="27592" fg:w="29"/><text x="11.6601%" y="623.50"></text></g><g><title>rallocx (28 samples, 0.01%)</title><rect x="11.4105%" y="597" width="0.0116%" height="15" fill="rgb(219,152,8)" fg:x="27593" fg:w="28"/><text x="11.6605%" y="607.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (41 samples, 0.02%)</title><rect x="11.4064%" y="901" width="0.0170%" height="15" fill="rgb(243,107,38)" fg:x="27583" fg:w="41"/><text x="11.6564%" y="911.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (41 samples, 0.02%)</title><rect x="11.4064%" y="885" width="0.0170%" height="15" fill="rgb(231,17,5)" fg:x="27583" fg:w="41"/><text x="11.6564%" y="895.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (34 samples, 0.01%)</title><rect x="11.4093%" y="869" width="0.0141%" height="15" fill="rgb(209,25,54)" fg:x="27590" fg:w="34"/><text x="11.6593%" y="879.50"></text></g><g><title> 32]&gt;::serialize (34 samples, 0.01%)</title><rect x="11.4093%" y="853" width="0.0141%" height="15" fill="rgb(219,0,2)" fg:x="27590" fg:w="34"/><text x="11.6593%" y="863.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (34 samples, 0.01%)</title><rect x="11.4093%" y="837" width="0.0141%" height="15" fill="rgb(246,9,5)" fg:x="27590" fg:w="34"/><text x="11.6593%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (34 samples, 0.01%)</title><rect x="11.4093%" y="821" width="0.0141%" height="15" fill="rgb(226,159,4)" fg:x="27590" fg:w="34"/><text x="11.6593%" y="831.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (34 samples, 0.01%)</title><rect x="11.4093%" y="805" width="0.0141%" height="15" fill="rgb(219,175,34)" fg:x="27590" fg:w="34"/><text x="11.6593%" y="815.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (34 samples, 0.01%)</title><rect x="11.4093%" y="789" width="0.0141%" height="15" fill="rgb(236,10,46)" fg:x="27590" fg:w="34"/><text x="11.6593%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.01%)</title><rect x="11.4093%" y="773" width="0.0141%" height="15" fill="rgb(240,211,16)" fg:x="27590" fg:w="34"/><text x="11.6593%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.01%)</title><rect x="11.4093%" y="757" width="0.0141%" height="15" fill="rgb(205,3,43)" fg:x="27590" fg:w="34"/><text x="11.6593%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 0.01%)</title><rect x="11.4093%" y="741" width="0.0141%" height="15" fill="rgb(245,7,22)" fg:x="27590" fg:w="34"/><text x="11.6593%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (34 samples, 0.01%)</title><rect x="11.4093%" y="725" width="0.0141%" height="15" fill="rgb(239,132,32)" fg:x="27590" fg:w="34"/><text x="11.6593%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (34 samples, 0.01%)</title><rect x="11.4093%" y="709" width="0.0141%" height="15" fill="rgb(228,202,34)" fg:x="27590" fg:w="34"/><text x="11.6593%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 0.01%)</title><rect x="11.4093%" y="693" width="0.0141%" height="15" fill="rgb(254,200,22)" fg:x="27590" fg:w="34"/><text x="11.6593%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34 samples, 0.01%)</title><rect x="11.4093%" y="677" width="0.0141%" height="15" fill="rgb(219,10,39)" fg:x="27590" fg:w="34"/><text x="11.6593%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.01%)</title><rect x="11.4101%" y="661" width="0.0132%" height="15" fill="rgb(226,210,39)" fg:x="27592" fg:w="32"/><text x="11.6601%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (41 samples, 0.02%)</title><rect x="11.4510%" y="853" width="0.0170%" height="15" fill="rgb(208,219,16)" fg:x="27691" fg:w="41"/><text x="11.7010%" y="863.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (41 samples, 0.02%)</title><rect x="11.4510%" y="837" width="0.0170%" height="15" fill="rgb(216,158,51)" fg:x="27691" fg:w="41"/><text x="11.7010%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (41 samples, 0.02%)</title><rect x="11.4510%" y="821" width="0.0170%" height="15" fill="rgb(233,14,44)" fg:x="27691" fg:w="41"/><text x="11.7010%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (41 samples, 0.02%)</title><rect x="11.4510%" y="805" width="0.0170%" height="15" fill="rgb(237,97,39)" fg:x="27691" fg:w="41"/><text x="11.7010%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (41 samples, 0.02%)</title><rect x="11.4510%" y="789" width="0.0170%" height="15" fill="rgb(218,198,43)" fg:x="27691" fg:w="41"/><text x="11.7010%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (41 samples, 0.02%)</title><rect x="11.4510%" y="773" width="0.0170%" height="15" fill="rgb(231,104,20)" fg:x="27691" fg:w="41"/><text x="11.7010%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (41 samples, 0.02%)</title><rect x="11.4510%" y="757" width="0.0170%" height="15" fill="rgb(254,36,13)" fg:x="27691" fg:w="41"/><text x="11.7010%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (41 samples, 0.02%)</title><rect x="11.4510%" y="741" width="0.0170%" height="15" fill="rgb(248,14,50)" fg:x="27691" fg:w="41"/><text x="11.7010%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34 samples, 0.01%)</title><rect x="11.4539%" y="725" width="0.0141%" height="15" fill="rgb(217,107,29)" fg:x="27698" fg:w="34"/><text x="11.7039%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (34 samples, 0.01%)</title><rect x="11.4539%" y="709" width="0.0141%" height="15" fill="rgb(251,169,33)" fg:x="27698" fg:w="34"/><text x="11.7039%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.01%)</title><rect x="11.5060%" y="517" width="0.0103%" height="15" fill="rgb(217,108,32)" fg:x="27824" fg:w="25"/><text x="11.7560%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (87 samples, 0.04%)</title><rect x="11.4820%" y="789" width="0.0360%" height="15" fill="rgb(219,66,42)" fg:x="27766" fg:w="87"/><text x="11.7320%" y="799.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (87 samples, 0.04%)</title><rect x="11.4820%" y="773" width="0.0360%" height="15" fill="rgb(206,180,7)" fg:x="27766" fg:w="87"/><text x="11.7320%" y="783.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (58 samples, 0.02%)</title><rect x="11.4940%" y="757" width="0.0240%" height="15" fill="rgb(208,226,31)" fg:x="27795" fg:w="58"/><text x="11.7440%" y="767.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (56 samples, 0.02%)</title><rect x="11.4949%" y="741" width="0.0232%" height="15" fill="rgb(218,26,49)" fg:x="27797" fg:w="56"/><text x="11.7449%" y="751.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (56 samples, 0.02%)</title><rect x="11.4949%" y="725" width="0.0232%" height="15" fill="rgb(233,197,48)" fg:x="27797" fg:w="56"/><text x="11.7449%" y="735.50"></text></g><g><title> 32]&gt;::serialize (56 samples, 0.02%)</title><rect x="11.4949%" y="709" width="0.0232%" height="15" fill="rgb(252,181,51)" fg:x="27797" fg:w="56"/><text x="11.7449%" y="719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (56 samples, 0.02%)</title><rect x="11.4949%" y="693" width="0.0232%" height="15" fill="rgb(253,90,19)" fg:x="27797" fg:w="56"/><text x="11.7449%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (29 samples, 0.01%)</title><rect x="11.5060%" y="677" width="0.0120%" height="15" fill="rgb(215,171,30)" fg:x="27824" fg:w="29"/><text x="11.7560%" y="687.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (29 samples, 0.01%)</title><rect x="11.5060%" y="661" width="0.0120%" height="15" fill="rgb(214,222,9)" fg:x="27824" fg:w="29"/><text x="11.7560%" y="671.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (29 samples, 0.01%)</title><rect x="11.5060%" y="645" width="0.0120%" height="15" fill="rgb(223,3,22)" fg:x="27824" fg:w="29"/><text x="11.7560%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (29 samples, 0.01%)</title><rect x="11.5060%" y="629" width="0.0120%" height="15" fill="rgb(225,196,46)" fg:x="27824" fg:w="29"/><text x="11.7560%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (29 samples, 0.01%)</title><rect x="11.5060%" y="613" width="0.0120%" height="15" fill="rgb(209,110,37)" fg:x="27824" fg:w="29"/><text x="11.7560%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (29 samples, 0.01%)</title><rect x="11.5060%" y="597" width="0.0120%" height="15" fill="rgb(249,89,12)" fg:x="27824" fg:w="29"/><text x="11.7560%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (29 samples, 0.01%)</title><rect x="11.5060%" y="581" width="0.0120%" height="15" fill="rgb(226,27,33)" fg:x="27824" fg:w="29"/><text x="11.7560%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (29 samples, 0.01%)</title><rect x="11.5060%" y="565" width="0.0120%" height="15" fill="rgb(213,82,22)" fg:x="27824" fg:w="29"/><text x="11.7560%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.01%)</title><rect x="11.5060%" y="549" width="0.0120%" height="15" fill="rgb(248,140,0)" fg:x="27824" fg:w="29"/><text x="11.7560%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 0.01%)</title><rect x="11.5060%" y="533" width="0.0120%" height="15" fill="rgb(228,106,3)" fg:x="27824" fg:w="29"/><text x="11.7560%" y="543.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (219 samples, 0.09%)</title><rect x="11.4287%" y="885" width="0.0906%" height="15" fill="rgb(209,23,37)" fg:x="27637" fg:w="219"/><text x="11.6787%" y="895.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (219 samples, 0.09%)</title><rect x="11.4287%" y="869" width="0.0906%" height="15" fill="rgb(241,93,50)" fg:x="27637" fg:w="219"/><text x="11.6787%" y="879.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (124 samples, 0.05%)</title><rect x="11.4680%" y="853" width="0.0513%" height="15" fill="rgb(253,46,43)" fg:x="27732" fg:w="124"/><text x="11.7180%" y="863.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (120 samples, 0.05%)</title><rect x="11.4696%" y="837" width="0.0496%" height="15" fill="rgb(226,206,43)" fg:x="27736" fg:w="120"/><text x="11.7196%" y="847.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (120 samples, 0.05%)</title><rect x="11.4696%" y="821" width="0.0496%" height="15" fill="rgb(217,54,7)" fg:x="27736" fg:w="120"/><text x="11.7196%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (92 samples, 0.04%)</title><rect x="11.4812%" y="805" width="0.0380%" height="15" fill="rgb(223,5,52)" fg:x="27764" fg:w="92"/><text x="11.7312%" y="815.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (235 samples, 0.10%)</title><rect x="11.4233%" y="901" width="0.0972%" height="15" fill="rgb(206,52,46)" fg:x="27624" fg:w="235"/><text x="11.6733%" y="911.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (432 samples, 0.18%)</title><rect x="11.3505%" y="933" width="0.1786%" height="15" fill="rgb(253,136,11)" fg:x="27448" fg:w="432"/><text x="11.6005%" y="943.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (432 samples, 0.18%)</title><rect x="11.3505%" y="917" width="0.1786%" height="15" fill="rgb(208,106,33)" fg:x="27448" fg:w="432"/><text x="11.6005%" y="927.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (446 samples, 0.18%)</title><rect x="11.3456%" y="949" width="0.1844%" height="15" fill="rgb(206,54,4)" fg:x="27436" fg:w="446"/><text x="11.5956%" y="959.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (465 samples, 0.19%)</title><rect x="11.3435%" y="1013" width="0.1923%" height="15" fill="rgb(213,3,15)" fg:x="27431" fg:w="465"/><text x="11.5935%" y="1023.50"></text></g><g><title>bcs::ser::to_bytes (465 samples, 0.19%)</title><rect x="11.3435%" y="997" width="0.1923%" height="15" fill="rgb(252,211,39)" fg:x="27431" fg:w="465"/><text x="11.5935%" y="1007.50"></text></g><g><title>bcs::ser::serialize_into (460 samples, 0.19%)</title><rect x="11.3456%" y="981" width="0.1902%" height="15" fill="rgb(223,6,36)" fg:x="27436" fg:w="460"/><text x="11.5956%" y="991.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (460 samples, 0.19%)</title><rect x="11.3456%" y="965" width="0.1902%" height="15" fill="rgb(252,169,45)" fg:x="27436" fg:w="460"/><text x="11.5956%" y="975.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionExt&lt;S&gt;::finish (1,471 samples, 0.61%)</title><rect x="10.9440%" y="1061" width="0.6083%" height="15" fill="rgb(212,48,26)" fg:x="26465" fg:w="1471"/><text x="11.1940%" y="1071.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::finish_with_extensions (1,392 samples, 0.58%)</title><rect x="10.9767%" y="1045" width="0.5756%" height="15" fill="rgb(251,102,48)" fg:x="26544" fg:w="1392"/><text x="11.2267%" y="1055.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::into_effects (1,392 samples, 0.58%)</title><rect x="10.9767%" y="1029" width="0.5756%" height="15" fill="rgb(243,208,16)" fg:x="26544" fg:w="1392"/><text x="11.2267%" y="1039.50"></text></g><g><title>sdallocx (40 samples, 0.02%)</title><rect x="11.5358%" y="1013" width="0.0165%" height="15" fill="rgb(219,96,24)" fg:x="27896" fg:w="40"/><text x="11.7858%" y="1023.50"></text></g><g><title>isfree (40 samples, 0.02%)</title><rect x="11.5358%" y="997" width="0.0165%" height="15" fill="rgb(219,33,29)" fg:x="27896" fg:w="40"/><text x="11.7858%" y="1007.50"></text></g><g><title>isdalloct (40 samples, 0.02%)</title><rect x="11.5358%" y="981" width="0.0165%" height="15" fill="rgb(223,176,5)" fg:x="27896" fg:w="40"/><text x="11.7858%" y="991.50"></text></g><g><title>arena_sdalloc (40 samples, 0.02%)</title><rect x="11.5358%" y="965" width="0.0165%" height="15" fill="rgb(228,140,14)" fg:x="27896" fg:w="40"/><text x="11.7858%" y="975.50"></text></g><g><title>sz_size2index (40 samples, 0.02%)</title><rect x="11.5358%" y="949" width="0.0165%" height="15" fill="rgb(217,179,31)" fg:x="27896" fg:w="40"/><text x="11.7858%" y="959.50"></text></g><g><title>sz_size2index_lookup (40 samples, 0.02%)</title><rect x="11.5358%" y="933" width="0.0165%" height="15" fill="rgb(230,9,30)" fg:x="27896" fg:w="40"/><text x="11.7858%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="11.5681%" y="997" width="0.0116%" height="15" fill="rgb(230,136,20)" fg:x="27974" fg:w="28"/><text x="11.8181%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (28 samples, 0.01%)</title><rect x="11.5681%" y="981" width="0.0116%" height="15" fill="rgb(215,210,22)" fg:x="27974" fg:w="28"/><text x="11.8181%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (28 samples, 0.01%)</title><rect x="11.5681%" y="965" width="0.0116%" height="15" fill="rgb(218,43,5)" fg:x="27974" fg:w="28"/><text x="11.8181%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (28 samples, 0.01%)</title><rect x="11.5681%" y="949" width="0.0116%" height="15" fill="rgb(216,11,5)" fg:x="27974" fg:w="28"/><text x="11.8181%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (28 samples, 0.01%)</title><rect x="11.5681%" y="933" width="0.0116%" height="15" fill="rgb(209,82,29)" fg:x="27974" fg:w="28"/><text x="11.8181%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (26 samples, 0.01%)</title><rect x="11.5689%" y="917" width="0.0108%" height="15" fill="rgb(244,115,12)" fg:x="27976" fg:w="26"/><text x="11.8189%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (26 samples, 0.01%)</title><rect x="11.5689%" y="901" width="0.0108%" height="15" fill="rgb(222,82,18)" fg:x="27976" fg:w="26"/><text x="11.8189%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.01%)</title><rect x="11.5689%" y="885" width="0.0108%" height="15" fill="rgb(249,227,8)" fg:x="27976" fg:w="26"/><text x="11.8189%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.01%)</title><rect x="11.5689%" y="869" width="0.0108%" height="15" fill="rgb(253,141,45)" fg:x="27976" fg:w="26"/><text x="11.8189%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.01%)</title><rect x="11.5689%" y="853" width="0.0108%" height="15" fill="rgb(234,184,4)" fg:x="27976" fg:w="26"/><text x="11.8189%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (34 samples, 0.01%)</title><rect x="11.5681%" y="1013" width="0.0141%" height="15" fill="rgb(218,194,23)" fg:x="27974" fg:w="34"/><text x="11.8181%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (67 samples, 0.03%)</title><rect x="11.5681%" y="1029" width="0.0277%" height="15" fill="rgb(235,66,41)" fg:x="27974" fg:w="67"/><text x="11.8181%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (33 samples, 0.01%)</title><rect x="11.5821%" y="1013" width="0.0136%" height="15" fill="rgb(245,217,1)" fg:x="28008" fg:w="33"/><text x="11.8321%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (33 samples, 0.01%)</title><rect x="11.5821%" y="997" width="0.0136%" height="15" fill="rgb(229,91,1)" fg:x="28008" fg:w="33"/><text x="11.8321%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="11.5821%" y="981" width="0.0136%" height="15" fill="rgb(207,101,30)" fg:x="28008" fg:w="33"/><text x="11.8321%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.01%)</title><rect x="11.5821%" y="965" width="0.0136%" height="15" fill="rgb(223,82,49)" fg:x="28008" fg:w="33"/><text x="11.8321%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.01%)</title><rect x="11.5821%" y="949" width="0.0136%" height="15" fill="rgb(218,167,17)" fg:x="28008" fg:w="33"/><text x="11.8321%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (42 samples, 0.02%)</title><rect x="11.6235%" y="693" width="0.0174%" height="15" fill="rgb(208,103,14)" fg:x="28108" fg:w="42"/><text x="11.8735%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (42 samples, 0.02%)</title><rect x="11.6235%" y="677" width="0.0174%" height="15" fill="rgb(238,20,8)" fg:x="28108" fg:w="42"/><text x="11.8735%" y="687.50"></text></g><g><title>alloc::alloc::realloc (42 samples, 0.02%)</title><rect x="11.6235%" y="661" width="0.0174%" height="15" fill="rgb(218,80,54)" fg:x="28108" fg:w="42"/><text x="11.8735%" y="671.50"></text></g><g><title>rallocx (37 samples, 0.02%)</title><rect x="11.6255%" y="645" width="0.0153%" height="15" fill="rgb(240,144,17)" fg:x="28113" fg:w="37"/><text x="11.8755%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (51 samples, 0.02%)</title><rect x="11.6226%" y="709" width="0.0211%" height="15" fill="rgb(245,27,50)" fg:x="28106" fg:w="51"/><text x="11.8726%" y="719.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (64 samples, 0.03%)</title><rect x="11.6226%" y="949" width="0.0265%" height="15" fill="rgb(251,51,7)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="959.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (64 samples, 0.03%)</title><rect x="11.6226%" y="933" width="0.0265%" height="15" fill="rgb(245,217,29)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="943.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (64 samples, 0.03%)</title><rect x="11.6226%" y="917" width="0.0265%" height="15" fill="rgb(221,176,29)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="927.50"></text></g><g><title> 32]&gt;::serialize (64 samples, 0.03%)</title><rect x="11.6226%" y="901" width="0.0265%" height="15" fill="rgb(212,180,24)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="911.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (64 samples, 0.03%)</title><rect x="11.6226%" y="885" width="0.0265%" height="15" fill="rgb(254,24,2)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="895.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (64 samples, 0.03%)</title><rect x="11.6226%" y="869" width="0.0265%" height="15" fill="rgb(230,100,2)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="879.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (64 samples, 0.03%)</title><rect x="11.6226%" y="853" width="0.0265%" height="15" fill="rgb(219,142,25)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="863.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (64 samples, 0.03%)</title><rect x="11.6226%" y="837" width="0.0265%" height="15" fill="rgb(240,73,43)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (64 samples, 0.03%)</title><rect x="11.6226%" y="821" width="0.0265%" height="15" fill="rgb(214,114,15)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (64 samples, 0.03%)</title><rect x="11.6226%" y="805" width="0.0265%" height="15" fill="rgb(207,130,4)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (64 samples, 0.03%)</title><rect x="11.6226%" y="789" width="0.0265%" height="15" fill="rgb(221,25,40)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (64 samples, 0.03%)</title><rect x="11.6226%" y="773" width="0.0265%" height="15" fill="rgb(241,184,7)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (64 samples, 0.03%)</title><rect x="11.6226%" y="757" width="0.0265%" height="15" fill="rgb(235,159,4)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (64 samples, 0.03%)</title><rect x="11.6226%" y="741" width="0.0265%" height="15" fill="rgb(214,87,48)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (64 samples, 0.03%)</title><rect x="11.6226%" y="725" width="0.0265%" height="15" fill="rgb(246,198,24)" fg:x="28106" fg:w="64"/><text x="11.8726%" y="735.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (37 samples, 0.02%)</title><rect x="11.6491%" y="949" width="0.0153%" height="15" fill="rgb(209,66,40)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="959.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (37 samples, 0.02%)</title><rect x="11.6491%" y="933" width="0.0153%" height="15" fill="rgb(233,147,39)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="943.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (37 samples, 0.02%)</title><rect x="11.6491%" y="917" width="0.0153%" height="15" fill="rgb(231,145,52)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="927.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (37 samples, 0.02%)</title><rect x="11.6491%" y="901" width="0.0153%" height="15" fill="rgb(206,20,26)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="911.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (37 samples, 0.02%)</title><rect x="11.6491%" y="885" width="0.0153%" height="15" fill="rgb(238,220,4)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="895.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (37 samples, 0.02%)</title><rect x="11.6491%" y="869" width="0.0153%" height="15" fill="rgb(252,195,42)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="879.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (37 samples, 0.02%)</title><rect x="11.6491%" y="853" width="0.0153%" height="15" fill="rgb(209,10,6)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="863.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (37 samples, 0.02%)</title><rect x="11.6491%" y="837" width="0.0153%" height="15" fill="rgb(229,3,52)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="847.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (37 samples, 0.02%)</title><rect x="11.6491%" y="821" width="0.0153%" height="15" fill="rgb(253,49,37)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (37 samples, 0.02%)</title><rect x="11.6491%" y="805" width="0.0153%" height="15" fill="rgb(240,103,49)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (37 samples, 0.02%)</title><rect x="11.6491%" y="789" width="0.0153%" height="15" fill="rgb(250,182,30)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (37 samples, 0.02%)</title><rect x="11.6491%" y="773" width="0.0153%" height="15" fill="rgb(248,8,30)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (37 samples, 0.02%)</title><rect x="11.6491%" y="757" width="0.0153%" height="15" fill="rgb(237,120,30)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (37 samples, 0.02%)</title><rect x="11.6491%" y="741" width="0.0153%" height="15" fill="rgb(221,146,34)" fg:x="28170" fg:w="37"/><text x="11.8991%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.01%)</title><rect x="11.6702%" y="565" width="0.0116%" height="15" fill="rgb(242,55,13)" fg:x="28221" fg:w="28"/><text x="11.9202%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.01%)</title><rect x="11.6702%" y="549" width="0.0116%" height="15" fill="rgb(242,112,31)" fg:x="28221" fg:w="28"/><text x="11.9202%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (28 samples, 0.01%)</title><rect x="11.6702%" y="533" width="0.0116%" height="15" fill="rgb(249,192,27)" fg:x="28221" fg:w="28"/><text x="11.9202%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.01%)</title><rect x="11.6702%" y="517" width="0.0116%" height="15" fill="rgb(208,204,44)" fg:x="28221" fg:w="28"/><text x="11.9202%" y="527.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (74 samples, 0.03%)</title><rect x="11.6702%" y="741" width="0.0306%" height="15" fill="rgb(208,93,54)" fg:x="28221" fg:w="74"/><text x="11.9202%" y="751.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (74 samples, 0.03%)</title><rect x="11.6702%" y="725" width="0.0306%" height="15" fill="rgb(242,1,31)" fg:x="28221" fg:w="74"/><text x="11.9202%" y="735.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (74 samples, 0.03%)</title><rect x="11.6702%" y="709" width="0.0306%" height="15" fill="rgb(241,83,25)" fg:x="28221" fg:w="74"/><text x="11.9202%" y="719.50"></text></g><g><title> 32]&gt;::serialize (74 samples, 0.03%)</title><rect x="11.6702%" y="693" width="0.0306%" height="15" fill="rgb(205,169,50)" fg:x="28221" fg:w="74"/><text x="11.9202%" y="703.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (74 samples, 0.03%)</title><rect x="11.6702%" y="677" width="0.0306%" height="15" fill="rgb(239,186,37)" fg:x="28221" fg:w="74"/><text x="11.9202%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (74 samples, 0.03%)</title><rect x="11.6702%" y="661" width="0.0306%" height="15" fill="rgb(205,221,10)" fg:x="28221" fg:w="74"/><text x="11.9202%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (74 samples, 0.03%)</title><rect x="11.6702%" y="645" width="0.0306%" height="15" fill="rgb(218,196,15)" fg:x="28221" fg:w="74"/><text x="11.9202%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (74 samples, 0.03%)</title><rect x="11.6702%" y="629" width="0.0306%" height="15" fill="rgb(218,196,35)" fg:x="28221" fg:w="74"/><text x="11.9202%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (74 samples, 0.03%)</title><rect x="11.6702%" y="613" width="0.0306%" height="15" fill="rgb(233,63,24)" fg:x="28221" fg:w="74"/><text x="11.9202%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (74 samples, 0.03%)</title><rect x="11.6702%" y="597" width="0.0306%" height="15" fill="rgb(225,8,4)" fg:x="28221" fg:w="74"/><text x="11.9202%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (74 samples, 0.03%)</title><rect x="11.6702%" y="581" width="0.0306%" height="15" fill="rgb(234,105,35)" fg:x="28221" fg:w="74"/><text x="11.9202%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (46 samples, 0.02%)</title><rect x="11.6818%" y="565" width="0.0190%" height="15" fill="rgb(236,21,32)" fg:x="28249" fg:w="46"/><text x="11.9318%" y="575.50"></text></g><g><title>bcs::ser::to_bytes (234 samples, 0.10%)</title><rect x="11.6073%" y="1013" width="0.0968%" height="15" fill="rgb(228,109,6)" fg:x="28069" fg:w="234"/><text x="11.8573%" y="1023.50"></text></g><g><title>bcs::ser::serialize_into (234 samples, 0.10%)</title><rect x="11.6073%" y="997" width="0.0968%" height="15" fill="rgb(229,215,31)" fg:x="28069" fg:w="234"/><text x="11.8573%" y="1007.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (234 samples, 0.10%)</title><rect x="11.6073%" y="981" width="0.0968%" height="15" fill="rgb(221,52,54)" fg:x="28069" fg:w="234"/><text x="11.8573%" y="991.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (197 samples, 0.08%)</title><rect x="11.6226%" y="965" width="0.0815%" height="15" fill="rgb(252,129,43)" fg:x="28106" fg:w="197"/><text x="11.8726%" y="975.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (96 samples, 0.04%)</title><rect x="11.6644%" y="949" width="0.0397%" height="15" fill="rgb(248,183,27)" fg:x="28207" fg:w="96"/><text x="11.9144%" y="959.50"></text></g><g><title>serde::ser::Serializer::collect_seq (96 samples, 0.04%)</title><rect x="11.6644%" y="933" width="0.0397%" height="15" fill="rgb(250,0,22)" fg:x="28207" fg:w="96"/><text x="11.9144%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (91 samples, 0.04%)</title><rect x="11.6665%" y="917" width="0.0376%" height="15" fill="rgb(213,166,10)" fg:x="28212" fg:w="91"/><text x="11.9165%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (91 samples, 0.04%)</title><rect x="11.6665%" y="901" width="0.0376%" height="15" fill="rgb(207,163,36)" fg:x="28212" fg:w="91"/><text x="11.9165%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (91 samples, 0.04%)</title><rect x="11.6665%" y="885" width="0.0376%" height="15" fill="rgb(208,122,22)" fg:x="28212" fg:w="91"/><text x="11.9165%" y="895.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (91 samples, 0.04%)</title><rect x="11.6665%" y="869" width="0.0376%" height="15" fill="rgb(207,104,49)" fg:x="28212" fg:w="91"/><text x="11.9165%" y="879.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (91 samples, 0.04%)</title><rect x="11.6665%" y="853" width="0.0376%" height="15" fill="rgb(248,211,50)" fg:x="28212" fg:w="91"/><text x="11.9165%" y="863.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (91 samples, 0.04%)</title><rect x="11.6665%" y="837" width="0.0376%" height="15" fill="rgb(217,13,45)" fg:x="28212" fg:w="91"/><text x="11.9165%" y="847.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (91 samples, 0.04%)</title><rect x="11.6665%" y="821" width="0.0376%" height="15" fill="rgb(211,216,49)" fg:x="28212" fg:w="91"/><text x="11.9165%" y="831.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (82 samples, 0.03%)</title><rect x="11.6702%" y="805" width="0.0339%" height="15" fill="rgb(221,58,53)" fg:x="28221" fg:w="82"/><text x="11.9202%" y="815.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (82 samples, 0.03%)</title><rect x="11.6702%" y="789" width="0.0339%" height="15" fill="rgb(220,112,41)" fg:x="28221" fg:w="82"/><text x="11.9202%" y="799.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (82 samples, 0.03%)</title><rect x="11.6702%" y="773" width="0.0339%" height="15" fill="rgb(236,38,28)" fg:x="28221" fg:w="82"/><text x="11.9202%" y="783.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (82 samples, 0.03%)</title><rect x="11.6702%" y="757" width="0.0339%" height="15" fill="rgb(227,195,22)" fg:x="28221" fg:w="82"/><text x="11.9202%" y="767.50"></text></g><g><title>&lt;() as aptos_block_executor::access_path_cache::AccessPathCache&gt;::get_resource_path (335 samples, 0.14%)</title><rect x="11.5681%" y="1045" width="0.1385%" height="15" fill="rgb(214,55,33)" fg:x="27974" fg:w="335"/><text x="11.8181%" y="1055.50"></text></g><g><title>move_core_types::language_storage::StructTag::access_vector (268 samples, 0.11%)</title><rect x="11.5958%" y="1029" width="0.1108%" height="15" fill="rgb(248,80,13)" fg:x="28041" fg:w="268"/><text x="11.8458%" y="1039.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::insert (42 samples, 0.02%)</title><rect x="11.7194%" y="1045" width="0.0174%" height="15" fill="rgb(238,52,6)" fg:x="28340" fg:w="42"/><text x="11.9694%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (30 samples, 0.01%)</title><rect x="11.7244%" y="1029" width="0.0124%" height="15" fill="rgb(224,198,47)" fg:x="28352" fg:w="30"/><text x="11.9744%" y="1039.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (68 samples, 0.03%)</title><rect x="11.7430%" y="661" width="0.0281%" height="15" fill="rgb(233,171,20)" fg:x="28397" fg:w="68"/><text x="11.9930%" y="671.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (68 samples, 0.03%)</title><rect x="11.7430%" y="645" width="0.0281%" height="15" fill="rgb(241,30,25)" fg:x="28397" fg:w="68"/><text x="11.9930%" y="655.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (68 samples, 0.03%)</title><rect x="11.7430%" y="629" width="0.0281%" height="15" fill="rgb(207,171,38)" fg:x="28397" fg:w="68"/><text x="11.9930%" y="639.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (68 samples, 0.03%)</title><rect x="11.7430%" y="613" width="0.0281%" height="15" fill="rgb(234,70,1)" fg:x="28397" fg:w="68"/><text x="11.9930%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (68 samples, 0.03%)</title><rect x="11.7430%" y="597" width="0.0281%" height="15" fill="rgb(232,178,18)" fg:x="28397" fg:w="68"/><text x="11.9930%" y="607.50"></text></g><g><title> 32]&gt;::deserialize (68 samples, 0.03%)</title><rect x="11.7430%" y="581" width="0.0281%" height="15" fill="rgb(241,78,40)" fg:x="28397" fg:w="68"/><text x="11.9930%" y="591.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (68 samples, 0.03%)</title><rect x="11.7430%" y="565" width="0.0281%" height="15" fill="rgb(222,35,25)" fg:x="28397" fg:w="68"/><text x="11.9930%" y="575.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (68 samples, 0.03%)</title><rect x="11.7430%" y="549" width="0.0281%" height="15" fill="rgb(207,92,16)" fg:x="28397" fg:w="68"/><text x="11.9930%" y="559.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (68 samples, 0.03%)</title><rect x="11.7430%" y="533" width="0.0281%" height="15" fill="rgb(216,59,51)" fg:x="28397" fg:w="68"/><text x="11.9930%" y="543.50"></text></g><g><title>serde::de::SeqAccess::next_element (38 samples, 0.02%)</title><rect x="11.7554%" y="517" width="0.0157%" height="15" fill="rgb(213,80,28)" fg:x="28427" fg:w="38"/><text x="12.0054%" y="527.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (38 samples, 0.02%)</title><rect x="11.7554%" y="501" width="0.0157%" height="15" fill="rgb(220,93,7)" fg:x="28427" fg:w="38"/><text x="12.0054%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (38 samples, 0.02%)</title><rect x="11.7554%" y="485" width="0.0157%" height="15" fill="rgb(225,24,44)" fg:x="28427" fg:w="38"/><text x="12.0054%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (38 samples, 0.02%)</title><rect x="11.7554%" y="469" width="0.0157%" height="15" fill="rgb(243,74,40)" fg:x="28427" fg:w="38"/><text x="12.0054%" y="479.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (38 samples, 0.02%)</title><rect x="11.7554%" y="453" width="0.0157%" height="15" fill="rgb(228,39,7)" fg:x="28427" fg:w="38"/><text x="12.0054%" y="463.50"></text></g><g><title>bcs::de::from_bytes (76 samples, 0.03%)</title><rect x="11.7430%" y="773" width="0.0314%" height="15" fill="rgb(227,79,8)" fg:x="28397" fg:w="76"/><text x="11.9930%" y="783.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::de::Deserialize for aptos_types::event::EventKey&gt;::deserialize (76 samples, 0.03%)</title><rect x="11.7430%" y="757" width="0.0314%" height="15" fill="rgb(236,58,11)" fg:x="28397" fg:w="76"/><text x="11.9930%" y="767.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (76 samples, 0.03%)</title><rect x="11.7430%" y="741" width="0.0314%" height="15" fill="rgb(249,63,35)" fg:x="28397" fg:w="76"/><text x="11.9930%" y="751.50"></text></g><g><title>&lt;aptos_types::event::_::&lt;impl serde::de::Deserialize for aptos_types::event::EventKey&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (76 samples, 0.03%)</title><rect x="11.7430%" y="725" width="0.0314%" height="15" fill="rgb(252,114,16)" fg:x="28397" fg:w="76"/><text x="11.9930%" y="735.50"></text></g><g><title>serde::de::SeqAccess::next_element (76 samples, 0.03%)</title><rect x="11.7430%" y="709" width="0.0314%" height="15" fill="rgb(254,151,24)" fg:x="28397" fg:w="76"/><text x="11.9930%" y="719.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (76 samples, 0.03%)</title><rect x="11.7430%" y="693" width="0.0314%" height="15" fill="rgb(253,54,39)" fg:x="28397" fg:w="76"/><text x="11.9930%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (76 samples, 0.03%)</title><rect x="11.7430%" y="677" width="0.0314%" height="15" fill="rgb(243,25,45)" fg:x="28397" fg:w="76"/><text x="11.9930%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (87 samples, 0.04%)</title><rect x="11.7413%" y="885" width="0.0360%" height="15" fill="rgb(234,134,9)" fg:x="28393" fg:w="87"/><text x="11.9913%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (87 samples, 0.04%)</title><rect x="11.7413%" y="869" width="0.0360%" height="15" fill="rgb(227,166,31)" fg:x="28393" fg:w="87"/><text x="11.9913%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (87 samples, 0.04%)</title><rect x="11.7413%" y="853" width="0.0360%" height="15" fill="rgb(245,143,41)" fg:x="28393" fg:w="87"/><text x="11.9913%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (87 samples, 0.04%)</title><rect x="11.7413%" y="837" width="0.0360%" height="15" fill="rgb(238,181,32)" fg:x="28393" fg:w="87"/><text x="11.9913%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (87 samples, 0.04%)</title><rect x="11.7413%" y="821" width="0.0360%" height="15" fill="rgb(224,113,18)" fg:x="28393" fg:w="87"/><text x="11.9913%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (87 samples, 0.04%)</title><rect x="11.7413%" y="805" width="0.0360%" height="15" fill="rgb(240,229,28)" fg:x="28393" fg:w="87"/><text x="11.9913%" y="815.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionOutput::into_change_set::{{closure}} (83 samples, 0.03%)</title><rect x="11.7430%" y="789" width="0.0343%" height="15" fill="rgb(250,185,3)" fg:x="28397" fg:w="83"/><text x="11.9930%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (105 samples, 0.04%)</title><rect x="11.7413%" y="917" width="0.0434%" height="15" fill="rgb(212,59,25)" fg:x="28393" fg:w="105"/><text x="11.9913%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (105 samples, 0.04%)</title><rect x="11.7413%" y="901" width="0.0434%" height="15" fill="rgb(221,87,20)" fg:x="28393" fg:w="105"/><text x="11.9913%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.01%)</title><rect x="11.7847%" y="917" width="0.0132%" height="15" fill="rgb(213,74,28)" fg:x="28498" fg:w="32"/><text x="12.0347%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (32 samples, 0.01%)</title><rect x="11.7847%" y="901" width="0.0132%" height="15" fill="rgb(224,132,34)" fg:x="28498" fg:w="32"/><text x="12.0347%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (32 samples, 0.01%)</title><rect x="11.7847%" y="885" width="0.0132%" height="15" fill="rgb(222,101,24)" fg:x="28498" fg:w="32"/><text x="12.0347%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (32 samples, 0.01%)</title><rect x="11.7847%" y="869" width="0.0132%" height="15" fill="rgb(254,142,4)" fg:x="28498" fg:w="32"/><text x="12.0347%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (32 samples, 0.01%)</title><rect x="11.7847%" y="853" width="0.0132%" height="15" fill="rgb(230,229,49)" fg:x="28498" fg:w="32"/><text x="12.0347%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (32 samples, 0.01%)</title><rect x="11.7847%" y="837" width="0.0132%" height="15" fill="rgb(238,70,47)" fg:x="28498" fg:w="32"/><text x="12.0347%" y="847.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionOutput::into_change_set::{{closure}} (32 samples, 0.01%)</title><rect x="11.7847%" y="821" width="0.0132%" height="15" fill="rgb(231,160,17)" fg:x="28498" fg:w="32"/><text x="12.0347%" y="831.50"></text></g><g><title>bcs::de::from_bytes (32 samples, 0.01%)</title><rect x="11.7847%" y="805" width="0.0132%" height="15" fill="rgb(218,68,53)" fg:x="28498" fg:w="32"/><text x="12.0347%" y="815.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::de::Deserialize for aptos_types::event::EventKey&gt;::deserialize (32 samples, 0.01%)</title><rect x="11.7847%" y="789" width="0.0132%" height="15" fill="rgb(236,111,10)" fg:x="28498" fg:w="32"/><text x="12.0347%" y="799.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (32 samples, 0.01%)</title><rect x="11.7847%" y="773" width="0.0132%" height="15" fill="rgb(224,34,41)" fg:x="28498" fg:w="32"/><text x="12.0347%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (146 samples, 0.06%)</title><rect x="11.7380%" y="1045" width="0.0604%" height="15" fill="rgb(241,118,19)" fg:x="28385" fg:w="146"/><text x="11.9880%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (146 samples, 0.06%)</title><rect x="11.7380%" y="1029" width="0.0604%" height="15" fill="rgb(238,129,25)" fg:x="28385" fg:w="146"/><text x="11.9880%" y="1039.50"></text></g><g><title>core::iter::adapters::try_process (146 samples, 0.06%)</title><rect x="11.7380%" y="1013" width="0.0604%" height="15" fill="rgb(238,22,31)" fg:x="28385" fg:w="146"/><text x="11.9880%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (145 samples, 0.06%)</title><rect x="11.7384%" y="997" width="0.0600%" height="15" fill="rgb(222,174,48)" fg:x="28386" fg:w="145"/><text x="11.9884%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (145 samples, 0.06%)</title><rect x="11.7384%" y="981" width="0.0600%" height="15" fill="rgb(206,152,40)" fg:x="28386" fg:w="145"/><text x="11.9884%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (145 samples, 0.06%)</title><rect x="11.7384%" y="965" width="0.0600%" height="15" fill="rgb(218,99,54)" fg:x="28386" fg:w="145"/><text x="11.9884%" y="975.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (145 samples, 0.06%)</title><rect x="11.7384%" y="949" width="0.0600%" height="15" fill="rgb(220,174,26)" fg:x="28386" fg:w="145"/><text x="11.9884%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (138 samples, 0.06%)</title><rect x="11.7413%" y="933" width="0.0571%" height="15" fill="rgb(245,116,9)" fg:x="28393" fg:w="138"/><text x="11.9913%" y="943.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionOutput::into_change_set (603 samples, 0.25%)</title><rect x="11.5523%" y="1061" width="0.2494%" height="15" fill="rgb(209,72,35)" fg:x="27936" fg:w="603"/><text x="11.8023%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (29 samples, 0.01%)</title><rect x="11.8129%" y="949" width="0.0120%" height="15" fill="rgb(226,126,21)" fg:x="28566" fg:w="29"/><text x="12.0629%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (29 samples, 0.01%)</title><rect x="11.8129%" y="933" width="0.0120%" height="15" fill="rgb(227,192,1)" fg:x="28566" fg:w="29"/><text x="12.0629%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (29 samples, 0.01%)</title><rect x="11.8129%" y="917" width="0.0120%" height="15" fill="rgb(237,180,29)" fg:x="28566" fg:w="29"/><text x="12.0629%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.02%)</title><rect x="11.8104%" y="1013" width="0.0174%" height="15" fill="rgb(230,197,35)" fg:x="28560" fg:w="42"/><text x="12.0604%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::contract_event::ContractEvent]&gt; (38 samples, 0.02%)</title><rect x="11.8120%" y="997" width="0.0157%" height="15" fill="rgb(246,193,31)" fg:x="28564" fg:w="38"/><text x="12.0620%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::contract_event::ContractEvent&gt; (38 samples, 0.02%)</title><rect x="11.8120%" y="981" width="0.0157%" height="15" fill="rgb(241,36,4)" fg:x="28564" fg:w="38"/><text x="12.0620%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::contract_event::ContractEventV0&gt; (38 samples, 0.02%)</title><rect x="11.8120%" y="965" width="0.0157%" height="15" fill="rgb(241,130,17)" fg:x="28564" fg:w="38"/><text x="12.0620%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::contract_event::ContractEvent&gt;&gt; (45 samples, 0.02%)</title><rect x="11.8104%" y="1029" width="0.0186%" height="15" fill="rgb(206,137,32)" fg:x="28560" fg:w="45"/><text x="12.0604%" y="1039.50"></text></g><g><title>core::mem::drop (26 samples, 0.01%)</title><rect x="11.8294%" y="949" width="0.0108%" height="15" fill="rgb(237,228,51)" fg:x="28606" fg:w="26"/><text x="12.0794%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (26 samples, 0.01%)</title><rect x="11.8294%" y="933" width="0.0108%" height="15" fill="rgb(243,6,42)" fg:x="28606" fg:w="26"/><text x="12.0794%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.01%)</title><rect x="11.8294%" y="917" width="0.0108%" height="15" fill="rgb(251,74,28)" fg:x="28606" fg:w="26"/><text x="12.0794%" y="927.50"></text></g><g><title>aptos_block_executor::aptos_vm::CrossSpaceHandler&lt;S&gt;::finalize (2,248 samples, 0.93%)</title><rect x="10.9122%" y="1077" width="0.9296%" height="15" fill="rgb(218,20,49)" fg:x="26388" fg:w="2248"/><text x="11.1622%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_aggregator::transaction::ChangeSetExt&gt; (76 samples, 0.03%)</title><rect x="11.8104%" y="1061" width="0.0314%" height="15" fill="rgb(238,28,14)" fg:x="28560" fg:w="76"/><text x="12.0604%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::change_set::ChangeSet&gt; (76 samples, 0.03%)</title><rect x="11.8104%" y="1045" width="0.0314%" height="15" fill="rgb(229,40,46)" fg:x="28560" fg:w="76"/><text x="12.0604%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (31 samples, 0.01%)</title><rect x="11.8290%" y="1029" width="0.0128%" height="15" fill="rgb(244,195,20)" fg:x="28605" fg:w="31"/><text x="12.0790%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (31 samples, 0.01%)</title><rect x="11.8290%" y="1013" width="0.0128%" height="15" fill="rgb(253,56,35)" fg:x="28605" fg:w="31"/><text x="12.0790%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (31 samples, 0.01%)</title><rect x="11.8290%" y="997" width="0.0128%" height="15" fill="rgb(210,149,44)" fg:x="28605" fg:w="31"/><text x="12.0790%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (31 samples, 0.01%)</title><rect x="11.8290%" y="981" width="0.0128%" height="15" fill="rgb(240,135,12)" fg:x="28605" fg:w="31"/><text x="12.0790%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="11.8294%" y="965" width="0.0124%" height="15" fill="rgb(251,24,50)" fg:x="28606" fg:w="30"/><text x="12.0794%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.01%)</title><rect x="11.8513%" y="885" width="0.0124%" height="15" fill="rgb(243,200,47)" fg:x="28659" fg:w="30"/><text x="12.1013%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (30 samples, 0.01%)</title><rect x="11.8513%" y="869" width="0.0124%" height="15" fill="rgb(224,166,26)" fg:x="28659" fg:w="30"/><text x="12.1013%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.01%)</title><rect x="11.8513%" y="853" width="0.0124%" height="15" fill="rgb(233,0,47)" fg:x="28659" fg:w="30"/><text x="12.1013%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.01%)</title><rect x="11.8513%" y="837" width="0.0124%" height="15" fill="rgb(253,80,5)" fg:x="28659" fg:w="30"/><text x="12.1013%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.01%)</title><rect x="11.8513%" y="821" width="0.0124%" height="15" fill="rgb(214,133,25)" fg:x="28659" fg:w="30"/><text x="12.1013%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (30 samples, 0.01%)</title><rect x="11.8513%" y="805" width="0.0124%" height="15" fill="rgb(209,27,14)" fg:x="28659" fg:w="30"/><text x="12.1013%" y="815.50"></text></g><g><title>aptos_evm::events::assign_event_nonce::{{closure}} (30 samples, 0.01%)</title><rect x="11.8513%" y="789" width="0.0124%" height="15" fill="rgb(219,102,51)" fg:x="28659" fg:w="30"/><text x="12.1013%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (35 samples, 0.01%)</title><rect x="11.8497%" y="917" width="0.0145%" height="15" fill="rgb(237,18,16)" fg:x="28655" fg:w="35"/><text x="12.0997%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (35 samples, 0.01%)</title><rect x="11.8497%" y="901" width="0.0145%" height="15" fill="rgb(241,85,17)" fg:x="28655" fg:w="35"/><text x="12.0997%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (29 samples, 0.01%)</title><rect x="11.8641%" y="837" width="0.0120%" height="15" fill="rgb(236,90,42)" fg:x="28690" fg:w="29"/><text x="12.1141%" y="847.50"></text></g><g><title>aptos_evm::events::assign_event_nonce::{{closure}} (29 samples, 0.01%)</title><rect x="11.8641%" y="821" width="0.0120%" height="15" fill="rgb(249,57,21)" fg:x="28690" fg:w="29"/><text x="12.1141%" y="831.50"></text></g><g><title>aptos_evm::events::read_nonce (26 samples, 0.01%)</title><rect x="11.8654%" y="805" width="0.0108%" height="15" fill="rgb(243,12,36)" fg:x="28693" fg:w="26"/><text x="12.1154%" y="815.50"></text></g><g><title>&lt;&amp;mut aptos_evm::state::ViewWrapper&lt;S&gt; as cfx_storage::StorageTrait&gt;::get (26 samples, 0.01%)</title><rect x="11.8654%" y="789" width="0.0108%" height="15" fill="rgb(253,128,47)" fg:x="28693" fg:w="26"/><text x="12.1154%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.02%)</title><rect x="11.8641%" y="917" width="0.0165%" height="15" fill="rgb(207,33,20)" fg:x="28690" fg:w="40"/><text x="12.1141%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (40 samples, 0.02%)</title><rect x="11.8641%" y="901" width="0.0165%" height="15" fill="rgb(233,215,35)" fg:x="28690" fg:w="40"/><text x="12.1141%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.02%)</title><rect x="11.8641%" y="885" width="0.0165%" height="15" fill="rgb(249,188,52)" fg:x="28690" fg:w="40"/><text x="12.1141%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.02%)</title><rect x="11.8641%" y="869" width="0.0165%" height="15" fill="rgb(225,12,32)" fg:x="28690" fg:w="40"/><text x="12.1141%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.02%)</title><rect x="11.8641%" y="853" width="0.0165%" height="15" fill="rgb(247,98,14)" fg:x="28690" fg:w="40"/><text x="12.1141%" y="863.50"></text></g><g><title>aptos_evm::events::assign_event_nonce (97 samples, 0.04%)</title><rect x="11.8418%" y="1061" width="0.0401%" height="15" fill="rgb(247,219,48)" fg:x="28636" fg:w="97"/><text x="12.0918%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (82 samples, 0.03%)</title><rect x="11.8480%" y="1045" width="0.0339%" height="15" fill="rgb(253,60,48)" fg:x="28651" fg:w="82"/><text x="12.0980%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (82 samples, 0.03%)</title><rect x="11.8480%" y="1029" width="0.0339%" height="15" fill="rgb(245,15,52)" fg:x="28651" fg:w="82"/><text x="12.0980%" y="1039.50"></text></g><g><title>core::iter::adapters::try_process (82 samples, 0.03%)</title><rect x="11.8480%" y="1013" width="0.0339%" height="15" fill="rgb(220,133,28)" fg:x="28651" fg:w="82"/><text x="12.0980%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (78 samples, 0.03%)</title><rect x="11.8497%" y="997" width="0.0323%" height="15" fill="rgb(217,180,4)" fg:x="28655" fg:w="78"/><text x="12.0997%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (78 samples, 0.03%)</title><rect x="11.8497%" y="981" width="0.0323%" height="15" fill="rgb(251,24,1)" fg:x="28655" fg:w="78"/><text x="12.0997%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (78 samples, 0.03%)</title><rect x="11.8497%" y="965" width="0.0323%" height="15" fill="rgb(212,185,49)" fg:x="28655" fg:w="78"/><text x="12.0997%" y="975.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (78 samples, 0.03%)</title><rect x="11.8497%" y="949" width="0.0323%" height="15" fill="rgb(215,175,22)" fg:x="28655" fg:w="78"/><text x="12.0997%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (78 samples, 0.03%)</title><rect x="11.8497%" y="933" width="0.0323%" height="15" fill="rgb(250,205,14)" fg:x="28655" fg:w="78"/><text x="12.0997%" y="943.50"></text></g><g><title>solidity_abi::basic::&lt;impl solidity_abi::ABIVariable for primitive_types::H256&gt;::to_abi (25 samples, 0.01%)</title><rect x="11.9072%" y="757" width="0.0103%" height="15" fill="rgb(225,211,22)" fg:x="28794" fg:w="25"/><text x="12.1572%" y="767.50"></text></g><g><title>solidity_abi::bytes::&lt;impl solidity_abi::ABIVariable for [u8 (25 samples, 0.01%)</title><rect x="11.9072%" y="741" width="0.0103%" height="15" fill="rgb(251,179,42)" fg:x="28794" fg:w="25"/><text x="12.1572%" y="751.50"></text></g><g><title> N]&gt;::to_abi (25 samples, 0.01%)</title><rect x="11.9072%" y="725" width="0.0103%" height="15" fill="rgb(208,216,51)" fg:x="28794" fg:w="25"/><text x="12.1572%" y="735.50"></text></g><g><title>solidity_abi::utils::ABIListWriter::write_down (31 samples, 0.01%)</title><rect x="11.9051%" y="773" width="0.0128%" height="15" fill="rgb(235,36,11)" fg:x="28789" fg:w="31"/><text x="12.1551%" y="783.50"></text></g><g><title>solidity_abi::array::&lt;impl solidity_abi::ABIVariable for alloc::vec::Vec&lt;T&gt;&gt;::to_abi (68 samples, 0.03%)</title><rect x="11.8972%" y="789" width="0.0281%" height="15" fill="rgb(213,189,28)" fg:x="28770" fg:w="68"/><text x="12.1472%" y="799.50"></text></g><g><title>aptos_evm::events::_IMPL_ABI_VARIABLE_DUMMY_LogEntryPayload::&lt;impl solidity_abi::ABIVariable for aptos_evm::events::LogEntryPayload&gt;::to_abi (117 samples, 0.05%)</title><rect x="11.8952%" y="821" width="0.0484%" height="15" fill="rgb(227,203,42)" fg:x="28765" fg:w="117"/><text x="12.1452%" y="831.50"></text></g><g><title>solidity_abi::utils::ABIListWriter::write_down (115 samples, 0.05%)</title><rect x="11.8960%" y="805" width="0.0476%" height="15" fill="rgb(244,72,36)" fg:x="28767" fg:w="115"/><text x="12.1460%" y="815.50"></text></g><g><title>solidity_abi::utils::ABIListWriter::write_down (137 samples, 0.06%)</title><rect x="11.8919%" y="837" width="0.0567%" height="15" fill="rgb(213,53,17)" fg:x="28757" fg:w="137"/><text x="12.1419%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (36 samples, 0.01%)</title><rect x="11.9526%" y="693" width="0.0149%" height="15" fill="rgb(207,167,3)" fg:x="28904" fg:w="36"/><text x="12.2026%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (36 samples, 0.01%)</title><rect x="11.9526%" y="677" width="0.0149%" height="15" fill="rgb(216,98,30)" fg:x="28904" fg:w="36"/><text x="12.2026%" y="687.50"></text></g><g><title>alloc::alloc::realloc (36 samples, 0.01%)</title><rect x="11.9526%" y="661" width="0.0149%" height="15" fill="rgb(236,123,15)" fg:x="28904" fg:w="36"/><text x="12.2026%" y="671.50"></text></g><g><title>rallocx (33 samples, 0.01%)</title><rect x="11.9539%" y="645" width="0.0136%" height="15" fill="rgb(248,81,50)" fg:x="28907" fg:w="33"/><text x="12.2039%" y="655.50"></text></g><g><title>iralloct (33 samples, 0.01%)</title><rect x="11.9539%" y="629" width="0.0136%" height="15" fill="rgb(214,120,4)" fg:x="28907" fg:w="33"/><text x="12.2039%" y="639.50"></text></g><g><title>&lt;T as solidity_abi::ABIEncodable&gt;::abi_encode (201 samples, 0.08%)</title><rect x="11.8865%" y="853" width="0.0831%" height="15" fill="rgb(208,179,34)" fg:x="28744" fg:w="201"/><text x="12.1365%" y="863.50"></text></g><g><title>solidity_abi::utils::LinkedBytes::to_vec (51 samples, 0.02%)</title><rect x="11.9485%" y="837" width="0.0211%" height="15" fill="rgb(227,140,7)" fg:x="28894" fg:w="51"/><text x="12.1985%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (51 samples, 0.02%)</title><rect x="11.9485%" y="821" width="0.0211%" height="15" fill="rgb(214,22,6)" fg:x="28894" fg:w="51"/><text x="12.1985%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (51 samples, 0.02%)</title><rect x="11.9485%" y="805" width="0.0211%" height="15" fill="rgb(207,137,27)" fg:x="28894" fg:w="51"/><text x="12.1985%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (51 samples, 0.02%)</title><rect x="11.9485%" y="789" width="0.0211%" height="15" fill="rgb(210,8,46)" fg:x="28894" fg:w="51"/><text x="12.1985%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (51 samples, 0.02%)</title><rect x="11.9485%" y="773" width="0.0211%" height="15" fill="rgb(240,16,54)" fg:x="28894" fg:w="51"/><text x="12.1985%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (51 samples, 0.02%)</title><rect x="11.9485%" y="757" width="0.0211%" height="15" fill="rgb(211,209,29)" fg:x="28894" fg:w="51"/><text x="12.1985%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (45 samples, 0.02%)</title><rect x="11.9510%" y="741" width="0.0186%" height="15" fill="rgb(226,228,24)" fg:x="28900" fg:w="45"/><text x="12.2010%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (45 samples, 0.02%)</title><rect x="11.9510%" y="725" width="0.0186%" height="15" fill="rgb(222,84,9)" fg:x="28900" fg:w="45"/><text x="12.2010%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (42 samples, 0.02%)</title><rect x="11.9522%" y="709" width="0.0174%" height="15" fill="rgb(234,203,30)" fg:x="28903" fg:w="42"/><text x="12.2022%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (261 samples, 0.11%)</title><rect x="11.8819%" y="917" width="0.1079%" height="15" fill="rgb(238,109,14)" fg:x="28733" fg:w="261"/><text x="12.1319%" y="927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (255 samples, 0.11%)</title><rect x="11.8844%" y="901" width="0.1054%" height="15" fill="rgb(233,206,34)" fg:x="28739" fg:w="255"/><text x="12.1344%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (255 samples, 0.11%)</title><rect x="11.8844%" y="885" width="0.1054%" height="15" fill="rgb(220,167,47)" fg:x="28739" fg:w="255"/><text x="12.1344%" y="895.50"></text></g><g><title>aptos_evm::events::&lt;impl core::convert::From&lt;aptos_evm::events::LogEntryWithNonce&gt; for aptos_types::contract_event::ContractEvent&gt;::from (255 samples, 0.11%)</title><rect x="11.8844%" y="869" width="0.1054%" height="15" fill="rgb(238,105,10)" fg:x="28739" fg:w="255"/><text x="12.1344%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_evm::events::LogEntryPayload&gt; (44 samples, 0.02%)</title><rect x="11.9717%" y="853" width="0.0182%" height="15" fill="rgb(213,227,17)" fg:x="28950" fg:w="44"/><text x="12.2217%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;primitive_types::H256&gt;&gt; (44 samples, 0.02%)</title><rect x="11.9717%" y="837" width="0.0182%" height="15" fill="rgb(217,132,38)" fg:x="28950" fg:w="44"/><text x="12.2217%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;primitive_types::H256&gt;&gt; (44 samples, 0.02%)</title><rect x="11.9717%" y="821" width="0.0182%" height="15" fill="rgb(242,146,4)" fg:x="28950" fg:w="44"/><text x="12.2217%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.02%)</title><rect x="11.9717%" y="805" width="0.0182%" height="15" fill="rgb(212,61,9)" fg:x="28950" fg:w="44"/><text x="12.2217%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (44 samples, 0.02%)</title><rect x="11.9717%" y="789" width="0.0182%" height="15" fill="rgb(247,126,22)" fg:x="28950" fg:w="44"/><text x="12.2217%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (44 samples, 0.02%)</title><rect x="11.9717%" y="773" width="0.0182%" height="15" fill="rgb(220,196,2)" fg:x="28950" fg:w="44"/><text x="12.2217%" y="783.50"></text></g><g><title>sdallocx (40 samples, 0.02%)</title><rect x="11.9733%" y="757" width="0.0165%" height="15" fill="rgb(208,46,4)" fg:x="28954" fg:w="40"/><text x="12.2233%" y="767.50"></text></g><g><title>isfree (40 samples, 0.02%)</title><rect x="11.9733%" y="741" width="0.0165%" height="15" fill="rgb(252,104,46)" fg:x="28954" fg:w="40"/><text x="12.2233%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (265 samples, 0.11%)</title><rect x="11.8819%" y="997" width="0.1096%" height="15" fill="rgb(237,152,48)" fg:x="28733" fg:w="265"/><text x="12.1319%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (265 samples, 0.11%)</title><rect x="11.8819%" y="981" width="0.1096%" height="15" fill="rgb(221,59,37)" fg:x="28733" fg:w="265"/><text x="12.1319%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (265 samples, 0.11%)</title><rect x="11.8819%" y="965" width="0.1096%" height="15" fill="rgb(209,202,51)" fg:x="28733" fg:w="265"/><text x="12.1319%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (265 samples, 0.11%)</title><rect x="11.8819%" y="949" width="0.1096%" height="15" fill="rgb(228,81,30)" fg:x="28733" fg:w="265"/><text x="12.1319%" y="959.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (265 samples, 0.11%)</title><rect x="11.8819%" y="933" width="0.1096%" height="15" fill="rgb(227,42,39)" fg:x="28733" fg:w="265"/><text x="12.1319%" y="943.50"></text></g><g><title>aptos_evm::events::evm_events_to_aptos_events (380 samples, 0.16%)</title><rect x="11.8418%" y="1077" width="0.1571%" height="15" fill="rgb(221,26,2)" fg:x="28636" fg:w="380"/><text x="12.0918%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (283 samples, 0.12%)</title><rect x="11.8819%" y="1061" width="0.1170%" height="15" fill="rgb(254,61,31)" fg:x="28733" fg:w="283"/><text x="12.1319%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (283 samples, 0.12%)</title><rect x="11.8819%" y="1045" width="0.1170%" height="15" fill="rgb(222,173,38)" fg:x="28733" fg:w="283"/><text x="12.1319%" y="1055.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (283 samples, 0.12%)</title><rect x="11.8819%" y="1029" width="0.1170%" height="15" fill="rgb(218,50,12)" fg:x="28733" fg:w="283"/><text x="12.1319%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (283 samples, 0.12%)</title><rect x="11.8819%" y="1013" width="0.1170%" height="15" fill="rgb(223,88,40)" fg:x="28733" fg:w="283"/><text x="12.1319%" y="1023.50"></text></g><g><title>&lt;aptos_block_executor::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (39 samples, 0.02%)</title><rect x="12.0043%" y="933" width="0.0161%" height="15" fill="rgb(237,54,19)" fg:x="29029" fg:w="39"/><text x="12.2543%" y="943.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (39 samples, 0.02%)</title><rect x="12.0043%" y="917" width="0.0161%" height="15" fill="rgb(251,129,25)" fg:x="29029" fg:w="39"/><text x="12.2543%" y="927.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (39 samples, 0.02%)</title><rect x="12.0043%" y="901" width="0.0161%" height="15" fill="rgb(238,97,19)" fg:x="29029" fg:w="39"/><text x="12.2543%" y="911.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (39 samples, 0.02%)</title><rect x="12.0043%" y="885" width="0.0161%" height="15" fill="rgb(240,169,18)" fg:x="29029" fg:w="39"/><text x="12.2543%" y="895.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (39 samples, 0.02%)</title><rect x="12.0043%" y="869" width="0.0161%" height="15" fill="rgb(230,187,49)" fg:x="29029" fg:w="39"/><text x="12.2543%" y="879.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (39 samples, 0.02%)</title><rect x="12.0043%" y="853" width="0.0161%" height="15" fill="rgb(209,44,26)" fg:x="29029" fg:w="39"/><text x="12.2543%" y="863.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (39 samples, 0.02%)</title><rect x="12.0043%" y="837" width="0.0161%" height="15" fill="rgb(244,0,6)" fg:x="29029" fg:w="39"/><text x="12.2543%" y="847.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (39 samples, 0.02%)</title><rect x="12.0043%" y="821" width="0.0161%" height="15" fill="rgb(248,18,21)" fg:x="29029" fg:w="39"/><text x="12.2543%" y="831.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (38 samples, 0.02%)</title><rect x="12.0047%" y="805" width="0.0157%" height="15" fill="rgb(245,180,19)" fg:x="29030" fg:w="38"/><text x="12.2547%" y="815.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionId::as_uuid (41 samples, 0.02%)</title><rect x="12.0039%" y="965" width="0.0170%" height="15" fill="rgb(252,118,36)" fg:x="29028" fg:w="41"/><text x="12.2539%" y="975.50"></text></g><g><title>&lt;aptos_block_executor::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (40 samples, 0.02%)</title><rect x="12.0043%" y="949" width="0.0165%" height="15" fill="rgb(210,224,19)" fg:x="29029" fg:w="40"/><text x="12.2543%" y="959.50"></text></g><g><title>aptos_block_executor::aptos_vm_impl::AptosVMImpl::new_session (60 samples, 0.02%)</title><rect x="12.0031%" y="1013" width="0.0248%" height="15" fill="rgb(218,30,24)" fg:x="29026" fg:w="60"/><text x="12.2531%" y="1023.50"></text></g><g><title>aptos_block_executor::move_vm_ext::vm::MoveVmExt::new_session (60 samples, 0.02%)</title><rect x="12.0031%" y="997" width="0.0248%" height="15" fill="rgb(219,75,50)" fg:x="29026" fg:w="60"/><text x="12.2531%" y="1007.50"></text></g><g><title>aptos_block_executor::move_vm_ext::vm::MoveVmExt::new_session_inner (60 samples, 0.02%)</title><rect x="12.0031%" y="981" width="0.0248%" height="15" fill="rgb(234,72,50)" fg:x="29026" fg:w="60"/><text x="12.2531%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (25 samples, 0.01%)</title><rect x="12.0378%" y="725" width="0.0103%" height="15" fill="rgb(219,100,48)" fg:x="29110" fg:w="25"/><text x="12.2878%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_block_executor::data_cache::StorageAdapter&lt;aptos_block_executor::state_view::DbStateView&gt;&gt;&gt; (47 samples, 0.02%)</title><rect x="12.0308%" y="981" width="0.0194%" height="15" fill="rgb(253,5,41)" fg:x="29093" fg:w="47"/><text x="12.2808%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (47 samples, 0.02%)</title><rect x="12.0308%" y="965" width="0.0194%" height="15" fill="rgb(247,181,11)" fg:x="29093" fg:w="47"/><text x="12.2808%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.02%)</title><rect x="12.0308%" y="949" width="0.0194%" height="15" fill="rgb(222,223,25)" fg:x="29093" fg:w="47"/><text x="12.2808%" y="959.50"></text></g><g><title>core::mem::drop (47 samples, 0.02%)</title><rect x="12.0308%" y="933" width="0.0194%" height="15" fill="rgb(214,198,28)" fg:x="29093" fg:w="47"/><text x="12.2808%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (47 samples, 0.02%)</title><rect x="12.0308%" y="917" width="0.0194%" height="15" fill="rgb(230,46,43)" fg:x="29093" fg:w="47"/><text x="12.2808%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.02%)</title><rect x="12.0308%" y="901" width="0.0194%" height="15" fill="rgb(233,65,53)" fg:x="29093" fg:w="47"/><text x="12.2808%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (41 samples, 0.02%)</title><rect x="12.0333%" y="885" width="0.0170%" height="15" fill="rgb(221,121,27)" fg:x="29099" fg:w="41"/><text x="12.2833%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (41 samples, 0.02%)</title><rect x="12.0333%" y="869" width="0.0170%" height="15" fill="rgb(247,70,47)" fg:x="29099" fg:w="41"/><text x="12.2833%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (41 samples, 0.02%)</title><rect x="12.0333%" y="853" width="0.0170%" height="15" fill="rgb(228,85,35)" fg:x="29099" fg:w="41"/><text x="12.2833%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (40 samples, 0.02%)</title><rect x="12.0337%" y="837" width="0.0165%" height="15" fill="rgb(209,50,18)" fg:x="29100" fg:w="40"/><text x="12.2837%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.02%)</title><rect x="12.0337%" y="821" width="0.0165%" height="15" fill="rgb(250,19,35)" fg:x="29100" fg:w="40"/><text x="12.2837%" y="831.50"></text></g><g><title>core::mem::drop (37 samples, 0.02%)</title><rect x="12.0349%" y="805" width="0.0153%" height="15" fill="rgb(253,107,29)" fg:x="29103" fg:w="37"/><text x="12.2849%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (37 samples, 0.02%)</title><rect x="12.0349%" y="789" width="0.0153%" height="15" fill="rgb(252,179,29)" fg:x="29103" fg:w="37"/><text x="12.2849%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.02%)</title><rect x="12.0349%" y="773" width="0.0153%" height="15" fill="rgb(238,194,6)" fg:x="29103" fg:w="37"/><text x="12.2849%" y="783.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (31 samples, 0.01%)</title><rect x="12.0374%" y="757" width="0.0128%" height="15" fill="rgb(238,164,29)" fg:x="29109" fg:w="31"/><text x="12.2874%" y="767.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (31 samples, 0.01%)</title><rect x="12.0374%" y="741" width="0.0128%" height="15" fill="rgb(224,25,9)" fg:x="29109" fg:w="31"/><text x="12.2874%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::move_vm_ext::session::SessionExt&lt;aptos_block_executor::data_cache::StorageAdapter&lt;aptos_block_executor::state_view::DbStateView&gt;&gt;&gt; (86 samples, 0.04%)</title><rect x="12.0291%" y="1013" width="0.0356%" height="15" fill="rgb(244,153,23)" fg:x="29089" fg:w="86"/><text x="12.2791%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_block_executor::data_cache::StorageAdapter&lt;aptos_block_executor::state_view::DbStateView&gt;&gt;&gt; (82 samples, 0.03%)</title><rect x="12.0308%" y="997" width="0.0339%" height="15" fill="rgb(212,203,14)" fg:x="29093" fg:w="82"/><text x="12.2808%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::native_extensions::NativeContextExtensions&gt; (35 samples, 0.01%)</title><rect x="12.0502%" y="981" width="0.0145%" height="15" fill="rgb(220,164,20)" fg:x="29140" fg:w="35"/><text x="12.3002%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt;&gt; (35 samples, 0.01%)</title><rect x="12.0502%" y="965" width="0.0145%" height="15" fill="rgb(222,203,48)" fg:x="29140" fg:w="35"/><text x="12.3002%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;,std::hash::random::RandomState&gt;&gt; (35 samples, 0.01%)</title><rect x="12.0502%" y="949" width="0.0145%" height="15" fill="rgb(215,159,22)" fg:x="29140" fg:w="35"/><text x="12.3002%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt;&gt; (35 samples, 0.01%)</title><rect x="12.0502%" y="933" width="0.0145%" height="15" fill="rgb(216,183,47)" fg:x="29140" fg:w="35"/><text x="12.3002%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.01%)</title><rect x="12.0502%" y="917" width="0.0145%" height="15" fill="rgb(229,195,25)" fg:x="29140" fg:w="35"/><text x="12.3002%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (29 samples, 0.01%)</title><rect x="12.0527%" y="901" width="0.0120%" height="15" fill="rgb(224,132,51)" fg:x="29146" fg:w="29"/><text x="12.3027%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (29 samples, 0.01%)</title><rect x="12.0527%" y="885" width="0.0120%" height="15" fill="rgb(240,63,7)" fg:x="29146" fg:w="29"/><text x="12.3027%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (29 samples, 0.01%)</title><rect x="12.0527%" y="869" width="0.0120%" height="15" fill="rgb(249,182,41)" fg:x="29146" fg:w="29"/><text x="12.3027%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (29 samples, 0.01%)</title><rect x="12.0527%" y="853" width="0.0120%" height="15" fill="rgb(243,47,26)" fg:x="29146" fg:w="29"/><text x="12.3027%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt; (29 samples, 0.01%)</title><rect x="12.0527%" y="837" width="0.0120%" height="15" fill="rgb(233,48,2)" fg:x="29146" fg:w="29"/><text x="12.3027%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt; (29 samples, 0.01%)</title><rect x="12.0527%" y="821" width="0.0120%" height="15" fill="rgb(244,165,34)" fg:x="29146" fg:w="29"/><text x="12.3027%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (67 samples, 0.03%)</title><rect x="12.0767%" y="981" width="0.0277%" height="15" fill="rgb(207,89,7)" fg:x="29204" fg:w="67"/><text x="12.3267%" y="991.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (52 samples, 0.02%)</title><rect x="12.1367%" y="901" width="0.0215%" height="15" fill="rgb(244,117,36)" fg:x="29349" fg:w="52"/><text x="12.3867%" y="911.50"></text></g><g><title>bcs::ser::to_bytes (32 samples, 0.01%)</title><rect x="12.1797%" y="789" width="0.0132%" height="15" fill="rgb(226,144,34)" fg:x="29453" fg:w="32"/><text x="12.4297%" y="799.50"></text></g><g><title>bcs::ser::serialize_into (27 samples, 0.01%)</title><rect x="12.1817%" y="773" width="0.0112%" height="15" fill="rgb(213,23,19)" fg:x="29458" fg:w="27"/><text x="12.4317%" y="783.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (27 samples, 0.01%)</title><rect x="12.1817%" y="757" width="0.0112%" height="15" fill="rgb(217,75,12)" fg:x="29458" fg:w="27"/><text x="12.4317%" y="767.50"></text></g><g><title>aptos_block_executor::data_cache::create_access_path (50 samples, 0.02%)</title><rect x="12.1755%" y="837" width="0.0207%" height="15" fill="rgb(224,159,17)" fg:x="29443" fg:w="50"/><text x="12.4255%" y="847.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (40 samples, 0.02%)</title><rect x="12.1797%" y="821" width="0.0165%" height="15" fill="rgb(217,118,1)" fg:x="29453" fg:w="40"/><text x="12.4297%" y="831.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (40 samples, 0.02%)</title><rect x="12.1797%" y="805" width="0.0165%" height="15" fill="rgb(232,180,48)" fg:x="29453" fg:w="40"/><text x="12.4297%" y="815.50"></text></g><g><title>&lt;aptos_block_executor::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (75 samples, 0.03%)</title><rect x="12.1660%" y="853" width="0.0310%" height="15" fill="rgb(230,27,33)" fg:x="29420" fg:w="75"/><text x="12.4160%" y="863.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (27 samples, 0.01%)</title><rect x="12.2136%" y="725" width="0.0112%" height="15" fill="rgb(205,31,21)" fg:x="29535" fg:w="27"/><text x="12.4636%" y="735.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (25 samples, 0.01%)</title><rect x="12.2144%" y="709" width="0.0103%" height="15" fill="rgb(253,59,4)" fg:x="29537" fg:w="25"/><text x="12.4644%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.01%)</title><rect x="12.2144%" y="693" width="0.0103%" height="15" fill="rgb(224,201,9)" fg:x="29537" fg:w="25"/><text x="12.4644%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.01%)</title><rect x="12.2144%" y="677" width="0.0103%" height="15" fill="rgb(229,206,30)" fg:x="29537" fg:w="25"/><text x="12.4644%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.01%)</title><rect x="12.2144%" y="661" width="0.0103%" height="15" fill="rgb(212,67,47)" fg:x="29537" fg:w="25"/><text x="12.4644%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.01%)</title><rect x="12.2144%" y="645" width="0.0103%" height="15" fill="rgb(211,96,50)" fg:x="29537" fg:w="25"/><text x="12.4644%" y="655.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (33 samples, 0.01%)</title><rect x="12.2136%" y="805" width="0.0136%" height="15" fill="rgb(252,114,18)" fg:x="29535" fg:w="33"/><text x="12.4636%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (33 samples, 0.01%)</title><rect x="12.2136%" y="789" width="0.0136%" height="15" fill="rgb(223,58,37)" fg:x="29535" fg:w="33"/><text x="12.4636%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33 samples, 0.01%)</title><rect x="12.2136%" y="773" width="0.0136%" height="15" fill="rgb(237,70,4)" fg:x="29535" fg:w="33"/><text x="12.4636%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (33 samples, 0.01%)</title><rect x="12.2136%" y="757" width="0.0136%" height="15" fill="rgb(244,85,46)" fg:x="29535" fg:w="33"/><text x="12.4636%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33 samples, 0.01%)</title><rect x="12.2136%" y="741" width="0.0136%" height="15" fill="rgb(223,39,52)" fg:x="29535" fg:w="33"/><text x="12.4636%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (46 samples, 0.02%)</title><rect x="12.2090%" y="853" width="0.0190%" height="15" fill="rgb(218,200,14)" fg:x="29524" fg:w="46"/><text x="12.4590%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (45 samples, 0.02%)</title><rect x="12.2094%" y="837" width="0.0186%" height="15" fill="rgb(208,171,16)" fg:x="29525" fg:w="45"/><text x="12.4594%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (38 samples, 0.02%)</title><rect x="12.2123%" y="821" width="0.0157%" height="15" fill="rgb(234,200,18)" fg:x="29532" fg:w="38"/><text x="12.4623%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (27 samples, 0.01%)</title><rect x="12.2467%" y="501" width="0.0112%" height="15" fill="rgb(228,45,11)" fg:x="29615" fg:w="27"/><text x="12.4967%" y="511.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (27 samples, 0.01%)</title><rect x="12.2467%" y="485" width="0.0112%" height="15" fill="rgb(237,182,11)" fg:x="29615" fg:w="27"/><text x="12.4967%" y="495.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (27 samples, 0.01%)</title><rect x="12.2467%" y="469" width="0.0112%" height="15" fill="rgb(241,175,49)" fg:x="29615" fg:w="27"/><text x="12.4967%" y="479.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (27 samples, 0.01%)</title><rect x="12.2467%" y="453" width="0.0112%" height="15" fill="rgb(247,38,35)" fg:x="29615" fg:w="27"/><text x="12.4967%" y="463.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (27 samples, 0.01%)</title><rect x="12.2467%" y="437" width="0.0112%" height="15" fill="rgb(228,39,49)" fg:x="29615" fg:w="27"/><text x="12.4967%" y="447.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (25 samples, 0.01%)</title><rect x="12.2475%" y="421" width="0.0103%" height="15" fill="rgb(226,101,26)" fg:x="29617" fg:w="25"/><text x="12.4975%" y="431.50"></text></g><g><title> 32]&gt;::deserialize (25 samples, 0.01%)</title><rect x="12.2475%" y="405" width="0.0103%" height="15" fill="rgb(206,141,19)" fg:x="29617" fg:w="25"/><text x="12.4975%" y="415.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (25 samples, 0.01%)</title><rect x="12.2475%" y="389" width="0.0103%" height="15" fill="rgb(211,200,13)" fg:x="29617" fg:w="25"/><text x="12.4975%" y="399.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (25 samples, 0.01%)</title><rect x="12.2475%" y="373" width="0.0103%" height="15" fill="rgb(241,121,6)" fg:x="29617" fg:w="25"/><text x="12.4975%" y="383.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (25 samples, 0.01%)</title><rect x="12.2475%" y="357" width="0.0103%" height="15" fill="rgb(234,221,29)" fg:x="29617" fg:w="25"/><text x="12.4975%" y="367.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (37 samples, 0.02%)</title><rect x="12.2467%" y="517" width="0.0153%" height="15" fill="rgb(229,136,5)" fg:x="29615" fg:w="37"/><text x="12.4967%" y="527.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (39 samples, 0.02%)</title><rect x="12.2467%" y="549" width="0.0161%" height="15" fill="rgb(238,36,11)" fg:x="29615" fg:w="39"/><text x="12.4967%" y="559.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (39 samples, 0.02%)</title><rect x="12.2467%" y="533" width="0.0161%" height="15" fill="rgb(251,55,41)" fg:x="29615" fg:w="39"/><text x="12.4967%" y="543.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (40 samples, 0.02%)</title><rect x="12.2467%" y="565" width="0.0165%" height="15" fill="rgb(242,34,40)" fg:x="29615" fg:w="40"/><text x="12.4967%" y="575.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (44 samples, 0.02%)</title><rect x="12.2462%" y="597" width="0.0182%" height="15" fill="rgb(215,42,17)" fg:x="29614" fg:w="44"/><text x="12.4962%" y="607.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (44 samples, 0.02%)</title><rect x="12.2462%" y="581" width="0.0182%" height="15" fill="rgb(207,44,46)" fg:x="29614" fg:w="44"/><text x="12.4962%" y="591.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (54 samples, 0.02%)</title><rect x="12.2454%" y="645" width="0.0223%" height="15" fill="rgb(211,206,28)" fg:x="29612" fg:w="54"/><text x="12.4954%" y="655.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (52 samples, 0.02%)</title><rect x="12.2462%" y="629" width="0.0215%" height="15" fill="rgb(237,167,16)" fg:x="29614" fg:w="52"/><text x="12.4962%" y="639.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (52 samples, 0.02%)</title><rect x="12.2462%" y="613" width="0.0215%" height="15" fill="rgb(233,66,6)" fg:x="29614" fg:w="52"/><text x="12.4962%" y="623.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (59 samples, 0.02%)</title><rect x="12.2454%" y="677" width="0.0244%" height="15" fill="rgb(246,123,29)" fg:x="29612" fg:w="59"/><text x="12.4954%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (59 samples, 0.02%)</title><rect x="12.2454%" y="661" width="0.0244%" height="15" fill="rgb(209,62,40)" fg:x="29612" fg:w="59"/><text x="12.4954%" y="671.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (65 samples, 0.03%)</title><rect x="12.2454%" y="725" width="0.0269%" height="15" fill="rgb(218,4,25)" fg:x="29612" fg:w="65"/><text x="12.4954%" y="735.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (65 samples, 0.03%)</title><rect x="12.2454%" y="709" width="0.0269%" height="15" fill="rgb(253,91,49)" fg:x="29612" fg:w="65"/><text x="12.4954%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (65 samples, 0.03%)</title><rect x="12.2454%" y="693" width="0.0269%" height="15" fill="rgb(228,155,29)" fg:x="29612" fg:w="65"/><text x="12.4954%" y="703.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (75 samples, 0.03%)</title><rect x="12.2438%" y="757" width="0.0310%" height="15" fill="rgb(243,57,37)" fg:x="29608" fg:w="75"/><text x="12.4938%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (75 samples, 0.03%)</title><rect x="12.2438%" y="741" width="0.0310%" height="15" fill="rgb(244,167,17)" fg:x="29608" fg:w="75"/><text x="12.4938%" y="751.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (95 samples, 0.04%)</title><rect x="12.2380%" y="789" width="0.0393%" height="15" fill="rgb(207,181,38)" fg:x="29594" fg:w="95"/><text x="12.4880%" y="799.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (95 samples, 0.04%)</title><rect x="12.2380%" y="773" width="0.0393%" height="15" fill="rgb(211,8,23)" fg:x="29594" fg:w="95"/><text x="12.4880%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (104 samples, 0.04%)</title><rect x="12.2372%" y="821" width="0.0430%" height="15" fill="rgb(235,11,44)" fg:x="29592" fg:w="104"/><text x="12.4872%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (102 samples, 0.04%)</title><rect x="12.2380%" y="805" width="0.0422%" height="15" fill="rgb(248,18,52)" fg:x="29594" fg:w="102"/><text x="12.4880%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (111 samples, 0.05%)</title><rect x="12.2359%" y="853" width="0.0459%" height="15" fill="rgb(208,4,7)" fg:x="29589" fg:w="111"/><text x="12.4859%" y="863.50"></text></g><g><title>bcs::de::from_bytes_seed (108 samples, 0.04%)</title><rect x="12.2372%" y="837" width="0.0447%" height="15" fill="rgb(240,17,39)" fg:x="29592" fg:w="108"/><text x="12.4872%" y="847.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (292 samples, 0.12%)</title><rect x="12.1615%" y="869" width="0.1208%" height="15" fill="rgb(207,170,3)" fg:x="29409" fg:w="292"/><text x="12.4115%" y="879.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (294 samples, 0.12%)</title><rect x="12.1615%" y="885" width="0.1216%" height="15" fill="rgb(236,100,52)" fg:x="29409" fg:w="294"/><text x="12.4115%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (298 samples, 0.12%)</title><rect x="12.1602%" y="901" width="0.1232%" height="15" fill="rgb(246,78,51)" fg:x="29406" fg:w="298"/><text x="12.4102%" y="911.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (26 samples, 0.01%)</title><rect x="12.3137%" y="789" width="0.0108%" height="15" fill="rgb(211,17,15)" fg:x="29777" fg:w="26"/><text x="12.5637%" y="799.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (26 samples, 0.01%)</title><rect x="12.3137%" y="773" width="0.0108%" height="15" fill="rgb(209,59,46)" fg:x="29777" fg:w="26"/><text x="12.5637%" y="783.50"></text></g><g><title> 32]&gt;::deserialize (26 samples, 0.01%)</title><rect x="12.3137%" y="757" width="0.0108%" height="15" fill="rgb(210,92,25)" fg:x="29777" fg:w="26"/><text x="12.5637%" y="767.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (26 samples, 0.01%)</title><rect x="12.3137%" y="741" width="0.0108%" height="15" fill="rgb(238,174,52)" fg:x="29777" fg:w="26"/><text x="12.5637%" y="751.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (26 samples, 0.01%)</title><rect x="12.3137%" y="725" width="0.0108%" height="15" fill="rgb(230,73,7)" fg:x="29777" fg:w="26"/><text x="12.5637%" y="735.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (26 samples, 0.01%)</title><rect x="12.3137%" y="709" width="0.0108%" height="15" fill="rgb(243,124,40)" fg:x="29777" fg:w="26"/><text x="12.5637%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (42 samples, 0.02%)</title><rect x="12.3083%" y="853" width="0.0174%" height="15" fill="rgb(244,170,11)" fg:x="29764" fg:w="42"/><text x="12.5583%" y="863.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (37 samples, 0.02%)</title><rect x="12.3103%" y="837" width="0.0153%" height="15" fill="rgb(207,114,54)" fg:x="29769" fg:w="37"/><text x="12.5603%" y="847.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (30 samples, 0.01%)</title><rect x="12.3132%" y="821" width="0.0124%" height="15" fill="rgb(205,42,20)" fg:x="29776" fg:w="30"/><text x="12.5632%" y="831.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (30 samples, 0.01%)</title><rect x="12.3132%" y="805" width="0.0124%" height="15" fill="rgb(230,30,28)" fg:x="29776" fg:w="30"/><text x="12.5632%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (480 samples, 0.20%)</title><rect x="12.1276%" y="933" width="0.1985%" height="15" fill="rgb(205,73,54)" fg:x="29327" fg:w="480"/><text x="12.3776%" y="943.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (480 samples, 0.20%)</title><rect x="12.1276%" y="917" width="0.1985%" height="15" fill="rgb(254,227,23)" fg:x="29327" fg:w="480"/><text x="12.3776%" y="927.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (48 samples, 0.02%)</title><rect x="12.3062%" y="901" width="0.0198%" height="15" fill="rgb(228,202,34)" fg:x="29759" fg:w="48"/><text x="12.5562%" y="911.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (45 samples, 0.02%)</title><rect x="12.3075%" y="885" width="0.0186%" height="15" fill="rgb(222,225,37)" fg:x="29762" fg:w="45"/><text x="12.5575%" y="895.50"></text></g><g><title>bcs::de::from_bytes_seed (45 samples, 0.02%)</title><rect x="12.3075%" y="869" width="0.0186%" height="15" fill="rgb(221,14,54)" fg:x="29762" fg:w="45"/><text x="12.5575%" y="879.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (528 samples, 0.22%)</title><rect x="12.1172%" y="965" width="0.2183%" height="15" fill="rgb(254,102,2)" fg:x="29302" fg:w="528"/><text x="12.3672%" y="975.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (528 samples, 0.22%)</title><rect x="12.1172%" y="949" width="0.2183%" height="15" fill="rgb(232,104,17)" fg:x="29302" fg:w="528"/><text x="12.3672%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (29 samples, 0.01%)</title><rect x="12.3401%" y="949" width="0.0120%" height="15" fill="rgb(250,220,14)" fg:x="29841" fg:w="29"/><text x="12.5901%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (29 samples, 0.01%)</title><rect x="12.3401%" y="933" width="0.0120%" height="15" fill="rgb(241,158,9)" fg:x="29841" fg:w="29"/><text x="12.5901%" y="943.50"></text></g><g><title>core::iter::adapters::try_process (29 samples, 0.01%)</title><rect x="12.3401%" y="917" width="0.0120%" height="15" fill="rgb(246,9,43)" fg:x="29841" fg:w="29"/><text x="12.5901%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (29 samples, 0.01%)</title><rect x="12.3401%" y="901" width="0.0120%" height="15" fill="rgb(206,73,33)" fg:x="29841" fg:w="29"/><text x="12.5901%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (29 samples, 0.01%)</title><rect x="12.3401%" y="885" width="0.0120%" height="15" fill="rgb(222,79,8)" fg:x="29841" fg:w="29"/><text x="12.5901%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (29 samples, 0.01%)</title><rect x="12.3401%" y="869" width="0.0120%" height="15" fill="rgb(234,8,54)" fg:x="29841" fg:w="29"/><text x="12.5901%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 0.01%)</title><rect x="12.3401%" y="853" width="0.0120%" height="15" fill="rgb(209,134,38)" fg:x="29841" fg:w="29"/><text x="12.5901%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (26 samples, 0.01%)</title><rect x="12.3414%" y="837" width="0.0108%" height="15" fill="rgb(230,127,29)" fg:x="29844" fg:w="26"/><text x="12.5914%" y="847.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (31 samples, 0.01%)</title><rect x="12.3401%" y="965" width="0.0128%" height="15" fill="rgb(242,44,41)" fg:x="29841" fg:w="31"/><text x="12.5901%" y="975.50"></text></g><g><title>aptos_block_executor::evm_context_loader::ContextView&lt;S&gt;::view_framework (851 samples, 0.35%)</title><rect x="12.0014%" y="1029" width="0.3519%" height="15" fill="rgb(222,56,43)" fg:x="29022" fg:w="851"/><text x="12.2514%" y="1039.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (687 samples, 0.28%)</title><rect x="12.0693%" y="1013" width="0.2841%" height="15" fill="rgb(238,39,47)" fg:x="29186" fg:w="687"/><text x="12.3193%" y="1023.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (687 samples, 0.28%)</title><rect x="12.0693%" y="997" width="0.2841%" height="15" fill="rgb(226,79,43)" fg:x="29186" fg:w="687"/><text x="12.3193%" y="1007.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (602 samples, 0.25%)</title><rect x="12.1044%" y="981" width="0.2489%" height="15" fill="rgb(242,105,53)" fg:x="29271" fg:w="602"/><text x="12.3544%" y="991.50"></text></g><g><title>&lt;aptos_block_executor::evm_context_loader::ContextView&lt;S&gt; as aptos_evm::context::ContextReader&gt;::get_block_height (861 samples, 0.36%)</title><rect x="11.9990%" y="1045" width="0.3560%" height="15" fill="rgb(251,132,46)" fg:x="29016" fg:w="861"/><text x="12.2490%" y="1055.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (37 samples, 0.02%)</title><rect x="12.3591%" y="853" width="0.0153%" height="15" fill="rgb(231,77,14)" fg:x="29887" fg:w="37"/><text x="12.6091%" y="863.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (37 samples, 0.02%)</title><rect x="12.3591%" y="837" width="0.0153%" height="15" fill="rgb(240,135,9)" fg:x="29887" fg:w="37"/><text x="12.6091%" y="847.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (37 samples, 0.02%)</title><rect x="12.3591%" y="821" width="0.0153%" height="15" fill="rgb(248,109,14)" fg:x="29887" fg:w="37"/><text x="12.6091%" y="831.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (36 samples, 0.01%)</title><rect x="12.3596%" y="805" width="0.0149%" height="15" fill="rgb(227,146,52)" fg:x="29888" fg:w="36"/><text x="12.6096%" y="815.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionId::as_uuid (38 samples, 0.02%)</title><rect x="12.3591%" y="965" width="0.0157%" height="15" fill="rgb(232,54,3)" fg:x="29887" fg:w="38"/><text x="12.6091%" y="975.50"></text></g><g><title>&lt;aptos_block_executor::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (38 samples, 0.02%)</title><rect x="12.3591%" y="949" width="0.0157%" height="15" fill="rgb(229,201,43)" fg:x="29887" fg:w="38"/><text x="12.6091%" y="959.50"></text></g><g><title>&lt;aptos_block_executor::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (38 samples, 0.02%)</title><rect x="12.3591%" y="933" width="0.0157%" height="15" fill="rgb(252,161,33)" fg:x="29887" fg:w="38"/><text x="12.6091%" y="943.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (38 samples, 0.02%)</title><rect x="12.3591%" y="917" width="0.0157%" height="15" fill="rgb(226,146,40)" fg:x="29887" fg:w="38"/><text x="12.6091%" y="927.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (38 samples, 0.02%)</title><rect x="12.3591%" y="901" width="0.0157%" height="15" fill="rgb(219,47,25)" fg:x="29887" fg:w="38"/><text x="12.6091%" y="911.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (38 samples, 0.02%)</title><rect x="12.3591%" y="885" width="0.0157%" height="15" fill="rgb(250,135,13)" fg:x="29887" fg:w="38"/><text x="12.6091%" y="895.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (38 samples, 0.02%)</title><rect x="12.3591%" y="869" width="0.0157%" height="15" fill="rgb(219,229,18)" fg:x="29887" fg:w="38"/><text x="12.6091%" y="879.50"></text></g><g><title>aptos_block_executor::aptos_vm_impl::AptosVMImpl::new_session (70 samples, 0.03%)</title><rect x="12.3587%" y="1013" width="0.0289%" height="15" fill="rgb(217,152,27)" fg:x="29886" fg:w="70"/><text x="12.6087%" y="1023.50"></text></g><g><title>aptos_block_executor::move_vm_ext::vm::MoveVmExt::new_session (70 samples, 0.03%)</title><rect x="12.3587%" y="997" width="0.0289%" height="15" fill="rgb(225,71,47)" fg:x="29886" fg:w="70"/><text x="12.6087%" y="1007.50"></text></g><g><title>aptos_block_executor::move_vm_ext::vm::MoveVmExt::new_session_inner (70 samples, 0.03%)</title><rect x="12.3587%" y="981" width="0.0289%" height="15" fill="rgb(220,139,14)" fg:x="29886" fg:w="70"/><text x="12.6087%" y="991.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (29 samples, 0.01%)</title><rect x="12.3757%" y="965" width="0.0120%" height="15" fill="rgb(247,54,32)" fg:x="29927" fg:w="29"/><text x="12.6257%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (27 samples, 0.01%)</title><rect x="12.3765%" y="949" width="0.0112%" height="15" fill="rgb(252,131,39)" fg:x="29929" fg:w="27"/><text x="12.6265%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (26 samples, 0.01%)</title><rect x="12.3769%" y="933" width="0.0108%" height="15" fill="rgb(210,108,39)" fg:x="29930" fg:w="26"/><text x="12.6269%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::move_vm_ext::session::SessionExt&lt;aptos_block_executor::data_cache::StorageAdapter&lt;aptos_block_executor::state_view::DbStateView&gt;&gt;&gt; (31 samples, 0.01%)</title><rect x="12.3877%" y="1013" width="0.0128%" height="15" fill="rgb(205,23,29)" fg:x="29956" fg:w="31"/><text x="12.6377%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_block_executor::data_cache::StorageAdapter&lt;aptos_block_executor::state_view::DbStateView&gt;&gt;&gt; (31 samples, 0.01%)</title><rect x="12.3877%" y="997" width="0.0128%" height="15" fill="rgb(246,139,46)" fg:x="29956" fg:w="31"/><text x="12.6377%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (33 samples, 0.01%)</title><rect x="12.4038%" y="981" width="0.0136%" height="15" fill="rgb(250,81,26)" fg:x="29995" fg:w="33"/><text x="12.6538%" y="991.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (33 samples, 0.01%)</title><rect x="12.4435%" y="901" width="0.0136%" height="15" fill="rgb(214,104,7)" fg:x="30091" fg:w="33"/><text x="12.6935%" y="911.50"></text></g><g><title>&lt;aptos_block_executor::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (31 samples, 0.01%)</title><rect x="12.4650%" y="853" width="0.0128%" height="15" fill="rgb(233,189,8)" fg:x="30143" fg:w="31"/><text x="12.7150%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (67 samples, 0.03%)</title><rect x="12.4638%" y="885" width="0.0277%" height="15" fill="rgb(228,141,17)" fg:x="30140" fg:w="67"/><text x="12.7138%" y="895.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (67 samples, 0.03%)</title><rect x="12.4638%" y="869" width="0.0277%" height="15" fill="rgb(247,157,1)" fg:x="30140" fg:w="67"/><text x="12.7138%" y="879.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (68 samples, 0.03%)</title><rect x="12.4638%" y="901" width="0.0281%" height="15" fill="rgb(249,225,5)" fg:x="30140" fg:w="68"/><text x="12.7138%" y="911.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (175 samples, 0.07%)</title><rect x="12.4365%" y="933" width="0.0724%" height="15" fill="rgb(242,55,13)" fg:x="30074" fg:w="175"/><text x="12.6865%" y="943.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (175 samples, 0.07%)</title><rect x="12.4365%" y="917" width="0.0724%" height="15" fill="rgb(230,49,50)" fg:x="30074" fg:w="175"/><text x="12.6865%" y="927.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (25 samples, 0.01%)</title><rect x="12.4985%" y="901" width="0.0103%" height="15" fill="rgb(241,111,38)" fg:x="30224" fg:w="25"/><text x="12.7485%" y="911.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (246 samples, 0.10%)</title><rect x="12.4208%" y="965" width="0.1017%" height="15" fill="rgb(252,155,4)" fg:x="30036" fg:w="246"/><text x="12.6708%" y="975.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (246 samples, 0.10%)</title><rect x="12.4208%" y="949" width="0.1017%" height="15" fill="rgb(212,69,32)" fg:x="30036" fg:w="246"/><text x="12.6708%" y="959.50"></text></g><g><title>&lt;aptos_block_executor::evm_context_loader::ContextView&lt;S&gt; as aptos_evm::context::ContextReader&gt;::get_timestamp (426 samples, 0.18%)</title><rect x="12.3550%" y="1045" width="0.1762%" height="15" fill="rgb(243,107,47)" fg:x="29877" fg:w="426"/><text x="12.6050%" y="1055.50"></text></g><g><title>aptos_block_executor::evm_context_loader::ContextView&lt;S&gt;::view_framework (422 samples, 0.17%)</title><rect x="12.3567%" y="1029" width="0.1745%" height="15" fill="rgb(247,130,12)" fg:x="29881" fg:w="422"/><text x="12.6067%" y="1039.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (312 samples, 0.13%)</title><rect x="12.4021%" y="1013" width="0.1290%" height="15" fill="rgb(233,74,16)" fg:x="29991" fg:w="312"/><text x="12.6521%" y="1023.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (311 samples, 0.13%)</title><rect x="12.4026%" y="997" width="0.1286%" height="15" fill="rgb(208,58,18)" fg:x="29992" fg:w="311"/><text x="12.6526%" y="1007.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (275 samples, 0.11%)</title><rect x="12.4174%" y="981" width="0.1137%" height="15" fill="rgb(242,225,1)" fg:x="30028" fg:w="275"/><text x="12.6674%" y="991.50"></text></g><g><title>aptos_evm::machine::EvmMachine::make_context (1,292 samples, 0.53%)</title><rect x="11.9990%" y="1077" width="0.5343%" height="15" fill="rgb(249,39,40)" fg:x="29016" fg:w="1292"/><text x="12.2490%" y="1087.50"></text></g><g><title>aptos_evm::context::EvmContext::make_for_new_block (1,292 samples, 0.53%)</title><rect x="11.9990%" y="1061" width="0.5343%" height="15" fill="rgb(207,72,44)" fg:x="29016" fg:w="1292"/><text x="12.2490%" y="1071.50"></text></g><g><title>&lt;cfx_storage::StorageKeyWrapper&lt;T,Key&gt; as cfx_storage::StorageTrait&gt;::get (44 samples, 0.02%)</title><rect x="12.5502%" y="997" width="0.0182%" height="15" fill="rgb(215,193,12)" fg:x="30349" fg:w="44"/><text x="12.8002%" y="1007.50"></text></g><g><title>&lt;&amp;mut aptos_evm::state::ViewWrapper&lt;S&gt; as cfx_storage::StorageTrait&gt;::get (40 samples, 0.02%)</title><rect x="12.5518%" y="981" width="0.0165%" height="15" fill="rgb(248,41,39)" fg:x="30353" fg:w="40"/><text x="12.8018%" y="991.50"></text></g><g><title>cfx_evm::state::State::new_with_move_vm (64 samples, 0.03%)</title><rect x="12.5436%" y="1061" width="0.0265%" height="15" fill="rgb(253,85,4)" fg:x="30333" fg:w="64"/><text x="12.7936%" y="1071.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_total_issued_tokens (61 samples, 0.03%)</title><rect x="12.5448%" y="1045" width="0.0252%" height="15" fill="rgb(243,70,31)" fg:x="30336" fg:w="61"/><text x="12.7948%" y="1055.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get (49 samples, 0.02%)</title><rect x="12.5498%" y="1029" width="0.0203%" height="15" fill="rgb(253,195,26)" fg:x="30348" fg:w="49"/><text x="12.7998%" y="1039.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::get_raw (49 samples, 0.02%)</title><rect x="12.5498%" y="1013" width="0.0203%" height="15" fill="rgb(243,42,11)" fg:x="30348" fg:w="49"/><text x="12.7998%" y="1023.50"></text></g><g><title>aptos_evm::state::EvmState::new_with_move_vm (68 samples, 0.03%)</title><rect x="12.5432%" y="1077" width="0.0281%" height="15" fill="rgb(239,66,17)" fg:x="30332" fg:w="68"/><text x="12.7932%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (51 samples, 0.02%)</title><rect x="12.5887%" y="837" width="0.0211%" height="15" fill="rgb(217,132,21)" fg:x="30442" fg:w="51"/><text x="12.8387%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (51 samples, 0.02%)</title><rect x="12.5887%" y="821" width="0.0211%" height="15" fill="rgb(252,202,21)" fg:x="30442" fg:w="51"/><text x="12.8387%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (51 samples, 0.02%)</title><rect x="12.5887%" y="805" width="0.0211%" height="15" fill="rgb(233,98,36)" fg:x="30442" fg:w="51"/><text x="12.8387%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (51 samples, 0.02%)</title><rect x="12.5887%" y="789" width="0.0211%" height="15" fill="rgb(216,153,54)" fg:x="30442" fg:w="51"/><text x="12.8387%" y="799.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (94 samples, 0.04%)</title><rect x="12.5887%" y="869" width="0.0389%" height="15" fill="rgb(250,99,7)" fg:x="30442" fg:w="94"/><text x="12.8387%" y="879.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (94 samples, 0.04%)</title><rect x="12.5887%" y="853" width="0.0389%" height="15" fill="rgb(207,56,50)" fg:x="30442" fg:w="94"/><text x="12.8387%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (43 samples, 0.02%)</title><rect x="12.6097%" y="837" width="0.0178%" height="15" fill="rgb(244,61,34)" fg:x="30493" fg:w="43"/><text x="12.8597%" y="847.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (43 samples, 0.02%)</title><rect x="12.6097%" y="821" width="0.0178%" height="15" fill="rgb(241,50,38)" fg:x="30493" fg:w="43"/><text x="12.8597%" y="831.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::EvmPath&gt;::serialize (82 samples, 0.03%)</title><rect x="12.6321%" y="741" width="0.0339%" height="15" fill="rgb(212,166,30)" fg:x="30547" fg:w="82"/><text x="12.8821%" y="751.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (82 samples, 0.03%)</title><rect x="12.6321%" y="725" width="0.0339%" height="15" fill="rgb(249,127,32)" fg:x="30547" fg:w="82"/><text x="12.8821%" y="735.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (82 samples, 0.03%)</title><rect x="12.6321%" y="709" width="0.0339%" height="15" fill="rgb(209,103,0)" fg:x="30547" fg:w="82"/><text x="12.8821%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (82 samples, 0.03%)</title><rect x="12.6321%" y="693" width="0.0339%" height="15" fill="rgb(238,209,51)" fg:x="30547" fg:w="82"/><text x="12.8821%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (82 samples, 0.03%)</title><rect x="12.6321%" y="677" width="0.0339%" height="15" fill="rgb(237,56,23)" fg:x="30547" fg:w="82"/><text x="12.8821%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (82 samples, 0.03%)</title><rect x="12.6321%" y="661" width="0.0339%" height="15" fill="rgb(215,153,46)" fg:x="30547" fg:w="82"/><text x="12.8821%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (66 samples, 0.03%)</title><rect x="12.6387%" y="645" width="0.0273%" height="15" fill="rgb(224,49,31)" fg:x="30563" fg:w="66"/><text x="12.8887%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (66 samples, 0.03%)</title><rect x="12.6387%" y="629" width="0.0273%" height="15" fill="rgb(250,18,42)" fg:x="30563" fg:w="66"/><text x="12.8887%" y="639.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (66 samples, 0.03%)</title><rect x="12.6387%" y="613" width="0.0273%" height="15" fill="rgb(215,176,39)" fg:x="30563" fg:w="66"/><text x="12.8887%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (66 samples, 0.03%)</title><rect x="12.6387%" y="597" width="0.0273%" height="15" fill="rgb(223,77,29)" fg:x="30563" fg:w="66"/><text x="12.8887%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (66 samples, 0.03%)</title><rect x="12.6387%" y="581" width="0.0273%" height="15" fill="rgb(234,94,52)" fg:x="30563" fg:w="66"/><text x="12.8887%" y="591.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (66 samples, 0.03%)</title><rect x="12.6387%" y="565" width="0.0273%" height="15" fill="rgb(220,154,50)" fg:x="30563" fg:w="66"/><text x="12.8887%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (66 samples, 0.03%)</title><rect x="12.6387%" y="549" width="0.0273%" height="15" fill="rgb(212,11,10)" fg:x="30563" fg:w="66"/><text x="12.8887%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (66 samples, 0.03%)</title><rect x="12.6387%" y="533" width="0.0273%" height="15" fill="rgb(205,166,19)" fg:x="30563" fg:w="66"/><text x="12.8887%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (66 samples, 0.03%)</title><rect x="12.6387%" y="517" width="0.0273%" height="15" fill="rgb(244,198,16)" fg:x="30563" fg:w="66"/><text x="12.8887%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (66 samples, 0.03%)</title><rect x="12.6387%" y="501" width="0.0273%" height="15" fill="rgb(219,69,12)" fg:x="30563" fg:w="66"/><text x="12.8887%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (66 samples, 0.03%)</title><rect x="12.6387%" y="485" width="0.0273%" height="15" fill="rgb(245,30,7)" fg:x="30563" fg:w="66"/><text x="12.8887%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (66 samples, 0.03%)</title><rect x="12.6387%" y="469" width="0.0273%" height="15" fill="rgb(218,221,48)" fg:x="30563" fg:w="66"/><text x="12.8887%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (66 samples, 0.03%)</title><rect x="12.6387%" y="453" width="0.0273%" height="15" fill="rgb(216,66,15)" fg:x="30563" fg:w="66"/><text x="12.8887%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (59 samples, 0.02%)</title><rect x="12.6416%" y="437" width="0.0244%" height="15" fill="rgb(226,122,50)" fg:x="30570" fg:w="59"/><text x="12.8916%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (59 samples, 0.02%)</title><rect x="12.6416%" y="421" width="0.0244%" height="15" fill="rgb(239,156,16)" fg:x="30570" fg:w="59"/><text x="12.8916%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (55 samples, 0.02%)</title><rect x="12.6432%" y="405" width="0.0227%" height="15" fill="rgb(224,27,38)" fg:x="30574" fg:w="55"/><text x="12.8932%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (55 samples, 0.02%)</title><rect x="12.6432%" y="389" width="0.0227%" height="15" fill="rgb(224,39,27)" fg:x="30574" fg:w="55"/><text x="12.8932%" y="399.50"></text></g><g><title>alloc::alloc::realloc (55 samples, 0.02%)</title><rect x="12.6432%" y="373" width="0.0227%" height="15" fill="rgb(215,92,29)" fg:x="30574" fg:w="55"/><text x="12.8932%" y="383.50"></text></g><g><title>rallocx (50 samples, 0.02%)</title><rect x="12.6453%" y="357" width="0.0207%" height="15" fill="rgb(207,159,16)" fg:x="30579" fg:w="50"/><text x="12.8953%" y="367.50"></text></g><g><title>rtree_szind_slab_read (29 samples, 0.01%)</title><rect x="12.6540%" y="341" width="0.0120%" height="15" fill="rgb(238,163,47)" fg:x="30600" fg:w="29"/><text x="12.9040%" y="351.50"></text></g><g><title>rtree_leaf_elm_bits_read (29 samples, 0.01%)</title><rect x="12.6540%" y="325" width="0.0120%" height="15" fill="rgb(219,91,49)" fg:x="30600" fg:w="29"/><text x="12.9040%" y="335.50"></text></g><g><title>atomic_load_p (29 samples, 0.01%)</title><rect x="12.6540%" y="309" width="0.0120%" height="15" fill="rgb(227,167,31)" fg:x="30600" fg:w="29"/><text x="12.9040%" y="319.50"></text></g><g><title>bcs::ser::to_bytes (101 samples, 0.04%)</title><rect x="12.6321%" y="805" width="0.0418%" height="15" fill="rgb(234,80,54)" fg:x="30547" fg:w="101"/><text x="12.8821%" y="815.50"></text></g><g><title>bcs::ser::serialize_into (101 samples, 0.04%)</title><rect x="12.6321%" y="789" width="0.0418%" height="15" fill="rgb(212,114,2)" fg:x="30547" fg:w="101"/><text x="12.8821%" y="799.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (101 samples, 0.04%)</title><rect x="12.6321%" y="773" width="0.0418%" height="15" fill="rgb(234,50,24)" fg:x="30547" fg:w="101"/><text x="12.8821%" y="783.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (101 samples, 0.04%)</title><rect x="12.6321%" y="757" width="0.0418%" height="15" fill="rgb(221,68,8)" fg:x="30547" fg:w="101"/><text x="12.8821%" y="767.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (123 samples, 0.05%)</title><rect x="12.6275%" y="869" width="0.0509%" height="15" fill="rgb(254,180,31)" fg:x="30536" fg:w="123"/><text x="12.8775%" y="879.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::state_store::state_key::StateKey&gt;::from (123 samples, 0.05%)</title><rect x="12.6275%" y="853" width="0.0509%" height="15" fill="rgb(247,130,50)" fg:x="30536" fg:w="123"/><text x="12.8775%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (120 samples, 0.05%)</title><rect x="12.6288%" y="837" width="0.0496%" height="15" fill="rgb(211,109,4)" fg:x="30539" fg:w="120"/><text x="12.8788%" y="847.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::access_path::AccessPath&gt;::from (120 samples, 0.05%)</title><rect x="12.6288%" y="821" width="0.0496%" height="15" fill="rgb(238,50,21)" fg:x="30539" fg:w="120"/><text x="12.8788%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (42 samples, 0.02%)</title><rect x="12.6821%" y="869" width="0.0174%" height="15" fill="rgb(225,57,45)" fg:x="30668" fg:w="42"/><text x="12.9321%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.02%)</title><rect x="12.6821%" y="853" width="0.0174%" height="15" fill="rgb(209,196,50)" fg:x="30668" fg:w="42"/><text x="12.9321%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (42 samples, 0.02%)</title><rect x="12.6821%" y="837" width="0.0174%" height="15" fill="rgb(242,140,13)" fg:x="30668" fg:w="42"/><text x="12.9321%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (42 samples, 0.02%)</title><rect x="12.6821%" y="821" width="0.0174%" height="15" fill="rgb(217,111,7)" fg:x="30668" fg:w="42"/><text x="12.9321%" y="831.50"></text></g><g><title>sdallocx (28 samples, 0.01%)</title><rect x="12.6879%" y="805" width="0.0116%" height="15" fill="rgb(253,193,51)" fg:x="30682" fg:w="28"/><text x="12.9379%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (318 samples, 0.13%)</title><rect x="12.5713%" y="965" width="0.1315%" height="15" fill="rgb(252,70,29)" fg:x="30400" fg:w="318"/><text x="12.8213%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (318 samples, 0.13%)</title><rect x="12.5713%" y="949" width="0.1315%" height="15" fill="rgb(232,127,12)" fg:x="30400" fg:w="318"/><text x="12.8213%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (318 samples, 0.13%)</title><rect x="12.5713%" y="933" width="0.1315%" height="15" fill="rgb(211,180,21)" fg:x="30400" fg:w="318"/><text x="12.8213%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (318 samples, 0.13%)</title><rect x="12.5713%" y="917" width="0.1315%" height="15" fill="rgb(229,72,13)" fg:x="30400" fg:w="318"/><text x="12.8213%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (288 samples, 0.12%)</title><rect x="12.5837%" y="901" width="0.1191%" height="15" fill="rgb(240,211,49)" fg:x="30430" fg:w="288"/><text x="12.8337%" y="911.50"></text></g><g><title>aptos_evm::state::ViewWrapper&lt;S&gt;::drain::{{closure}} (276 samples, 0.11%)</title><rect x="12.5887%" y="885" width="0.1141%" height="15" fill="rgb(219,149,40)" fg:x="30442" fg:w="276"/><text x="12.8387%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (331 samples, 0.14%)</title><rect x="12.5713%" y="997" width="0.1369%" height="15" fill="rgb(210,127,46)" fg:x="30400" fg:w="331"/><text x="12.8213%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (331 samples, 0.14%)</title><rect x="12.5713%" y="981" width="0.1369%" height="15" fill="rgb(220,106,7)" fg:x="30400" fg:w="331"/><text x="12.8213%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (349 samples, 0.14%)</title><rect x="12.5713%" y="1061" width="0.1443%" height="15" fill="rgb(249,31,22)" fg:x="30400" fg:w="349"/><text x="12.8213%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (349 samples, 0.14%)</title><rect x="12.5713%" y="1045" width="0.1443%" height="15" fill="rgb(253,1,49)" fg:x="30400" fg:w="349"/><text x="12.8213%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (349 samples, 0.14%)</title><rect x="12.5713%" y="1029" width="0.1443%" height="15" fill="rgb(227,144,33)" fg:x="30400" fg:w="349"/><text x="12.8213%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (349 samples, 0.14%)</title><rect x="12.5713%" y="1013" width="0.1443%" height="15" fill="rgb(249,163,44)" fg:x="30400" fg:w="349"/><text x="12.8213%" y="1023.50"></text></g><g><title>aptos_evm::state::ViewWrapper&lt;S&gt;::drain (350 samples, 0.14%)</title><rect x="12.5713%" y="1077" width="0.1447%" height="15" fill="rgb(234,15,39)" fg:x="30400" fg:w="350"/><text x="12.8213%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::dedup_sorted_iter::DedupSortedIter&lt;K,V,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.02%)</title><rect x="12.7293%" y="997" width="0.0232%" height="15" fill="rgb(207,66,16)" fg:x="30782" fg:w="56"/><text x="12.9793%" y="1007.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (56 samples, 0.02%)</title><rect x="12.7293%" y="981" width="0.0232%" height="15" fill="rgb(233,112,24)" fg:x="30782" fg:w="56"/><text x="12.9793%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (56 samples, 0.02%)</title><rect x="12.7293%" y="965" width="0.0232%" height="15" fill="rgb(230,90,22)" fg:x="30782" fg:w="56"/><text x="12.9793%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::bulk_build_from_sorted_iter (91 samples, 0.04%)</title><rect x="12.7164%" y="1029" width="0.0376%" height="15" fill="rgb(229,61,13)" fg:x="30751" fg:w="91"/><text x="12.9664%" y="1039.50"></text></g><g><title>alloc::collections::btree::append::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (91 samples, 0.04%)</title><rect x="12.7164%" y="1013" width="0.0376%" height="15" fill="rgb(225,57,24)" fg:x="30751" fg:w="91"/><text x="12.9664%" y="1023.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (34 samples, 0.01%)</title><rect x="12.7541%" y="981" width="0.0141%" height="15" fill="rgb(208,169,48)" fg:x="30842" fg:w="34"/><text x="13.0041%" y="991.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (34 samples, 0.01%)</title><rect x="12.7541%" y="965" width="0.0141%" height="15" fill="rgb(244,218,51)" fg:x="30842" fg:w="34"/><text x="13.0041%" y="975.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::new (128 samples, 0.05%)</title><rect x="12.7160%" y="1077" width="0.0529%" height="15" fill="rgb(214,148,10)" fg:x="30750" fg:w="128"/><text x="12.9660%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (128 samples, 0.05%)</title><rect x="12.7160%" y="1061" width="0.0529%" height="15" fill="rgb(225,174,27)" fg:x="30750" fg:w="128"/><text x="12.9660%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (128 samples, 0.05%)</title><rect x="12.7160%" y="1045" width="0.0529%" height="15" fill="rgb(230,96,26)" fg:x="30750" fg:w="128"/><text x="12.9660%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (36 samples, 0.01%)</title><rect x="12.7541%" y="1029" width="0.0149%" height="15" fill="rgb(232,10,30)" fg:x="30842" fg:w="36"/><text x="13.0041%" y="1039.50"></text></g><g><title>alloc::slice::stable_sort (36 samples, 0.01%)</title><rect x="12.7541%" y="1013" width="0.0149%" height="15" fill="rgb(222,8,50)" fg:x="30842" fg:w="36"/><text x="13.0041%" y="1023.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (36 samples, 0.01%)</title><rect x="12.7541%" y="997" width="0.0149%" height="15" fill="rgb(213,81,27)" fg:x="30842" fg:w="36"/><text x="13.0041%" y="1007.50"></text></g><g><title>cfx_evm::state::State::update_account_cache (30 samples, 0.01%)</title><rect x="14.5240%" y="917" width="0.0124%" height="15" fill="rgb(245,50,10)" fg:x="35122" fg:w="30"/><text x="14.7740%" y="927.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::cache_code (30 samples, 0.01%)</title><rect x="14.5240%" y="901" width="0.0124%" height="15" fill="rgb(216,100,18)" fg:x="35122" fg:w="30"/><text x="14.7740%" y="911.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_code (30 samples, 0.01%)</title><rect x="14.5240%" y="885" width="0.0124%" height="15" fill="rgb(236,147,54)" fg:x="35122" fg:w="30"/><text x="14.7740%" y="895.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get (30 samples, 0.01%)</title><rect x="14.5240%" y="869" width="0.0124%" height="15" fill="rgb(205,143,26)" fg:x="35122" fg:w="30"/><text x="14.7740%" y="879.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::code (63 samples, 0.03%)</title><rect x="14.5236%" y="949" width="0.0261%" height="15" fill="rgb(236,26,9)" fg:x="35121" fg:w="63"/><text x="14.7736%" y="959.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (63 samples, 0.03%)</title><rect x="14.5236%" y="933" width="0.0261%" height="15" fill="rgb(221,165,53)" fg:x="35121" fg:w="63"/><text x="14.7736%" y="943.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::call (74 samples, 0.03%)</title><rect x="14.5236%" y="965" width="0.0306%" height="15" fill="rgb(214,110,17)" fg:x="35121" fg:w="74"/><text x="14.7736%" y="975.50"></text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::exec_instruction (4,324 samples, 1.79%)</title><rect x="12.7706%" y="981" width="1.7881%" height="15" fill="rgb(237,197,12)" fg:x="30882" fg:w="4324"/><text x="13.0206%" y="991.50">c..</text></g><g><title>cfx_evm::evm::interpreter::shared_cache::SharedCache::jump_and_sub_destinations (47 samples, 0.02%)</title><rect x="14.5587%" y="981" width="0.0194%" height="15" fill="rgb(205,84,17)" fg:x="35206" fg:w="47"/><text x="14.8087%" y="991.50"></text></g><g><title>memory_cache::MemoryLruCache&lt;K,V&gt;::insert (42 samples, 0.02%)</title><rect x="14.5608%" y="965" width="0.0174%" height="15" fill="rgb(237,18,45)" fg:x="35211" fg:w="42"/><text x="14.8108%" y="975.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt; as cfx_evm::vm::Exec&gt;::exec (4,372 samples, 1.81%)</title><rect x="12.7706%" y="1029" width="1.8079%" height="15" fill="rgb(221,87,14)" fg:x="30882" fg:w="4372"/><text x="13.0206%" y="1039.50">&lt;..</text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::step (4,372 samples, 1.81%)</title><rect x="12.7706%" y="1013" width="1.8079%" height="15" fill="rgb(238,186,15)" fg:x="30882" fg:w="4372"/><text x="13.0206%" y="1023.50">c..</text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::step_inner (4,372 samples, 1.81%)</title><rect x="12.7706%" y="997" width="1.8079%" height="15" fill="rgb(208,115,11)" fg:x="30882" fg:w="4372"/><text x="13.0206%" y="1007.50">c..</text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::exec (4,402 samples, 1.82%)</title><rect x="12.7706%" y="1045" width="1.8204%" height="15" fill="rgb(254,175,0)" fg:x="30882" fg:w="4402"/><text x="13.0206%" y="1055.50">c..</text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (39 samples, 0.02%)</title><rect x="14.6699%" y="869" width="0.0161%" height="15" fill="rgb(227,24,42)" fg:x="35475" fg:w="39"/><text x="14.9199%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (39 samples, 0.02%)</title><rect x="14.6699%" y="853" width="0.0161%" height="15" fill="rgb(223,211,37)" fg:x="35475" fg:w="39"/><text x="14.9199%" y="863.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (39 samples, 0.02%)</title><rect x="14.6699%" y="837" width="0.0161%" height="15" fill="rgb(235,49,27)" fg:x="35475" fg:w="39"/><text x="14.9199%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (39 samples, 0.02%)</title><rect x="14.6699%" y="821" width="0.0161%" height="15" fill="rgb(254,97,51)" fg:x="35475" fg:w="39"/><text x="14.9199%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (39 samples, 0.02%)</title><rect x="14.6699%" y="805" width="0.0161%" height="15" fill="rgb(249,51,40)" fg:x="35475" fg:w="39"/><text x="14.9199%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.02%)</title><rect x="14.6699%" y="789" width="0.0161%" height="15" fill="rgb(210,128,45)" fg:x="35475" fg:w="39"/><text x="14.9199%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.02%)</title><rect x="14.6699%" y="773" width="0.0161%" height="15" fill="rgb(224,137,50)" fg:x="35475" fg:w="39"/><text x="14.9199%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.02%)</title><rect x="14.6699%" y="757" width="0.0161%" height="15" fill="rgb(242,15,9)" fg:x="35475" fg:w="39"/><text x="14.9199%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (39 samples, 0.02%)</title><rect x="14.6699%" y="741" width="0.0161%" height="15" fill="rgb(233,187,41)" fg:x="35475" fg:w="39"/><text x="14.9199%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.02%)</title><rect x="14.6699%" y="725" width="0.0161%" height="15" fill="rgb(227,2,29)" fg:x="35475" fg:w="39"/><text x="14.9199%" y="735.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_seq (39 samples, 0.02%)</title><rect x="14.6902%" y="805" width="0.0161%" height="15" fill="rgb(222,70,3)" fg:x="35524" fg:w="39"/><text x="14.9402%" y="815.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (39 samples, 0.02%)</title><rect x="14.6902%" y="789" width="0.0161%" height="15" fill="rgb(213,11,42)" fg:x="35524" fg:w="39"/><text x="14.9402%" y="799.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (39 samples, 0.02%)</title><rect x="14.6902%" y="773" width="0.0161%" height="15" fill="rgb(225,150,9)" fg:x="35524" fg:w="39"/><text x="14.9402%" y="783.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (39 samples, 0.02%)</title><rect x="14.6902%" y="757" width="0.0161%" height="15" fill="rgb(230,162,45)" fg:x="35524" fg:w="39"/><text x="14.9402%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (39 samples, 0.02%)</title><rect x="14.6902%" y="741" width="0.0161%" height="15" fill="rgb(222,14,52)" fg:x="35524" fg:w="39"/><text x="14.9402%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (39 samples, 0.02%)</title><rect x="14.6902%" y="725" width="0.0161%" height="15" fill="rgb(254,198,14)" fg:x="35524" fg:w="39"/><text x="14.9402%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (39 samples, 0.02%)</title><rect x="14.6902%" y="709" width="0.0161%" height="15" fill="rgb(220,217,30)" fg:x="35524" fg:w="39"/><text x="14.9402%" y="719.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (34 samples, 0.01%)</title><rect x="14.7063%" y="709" width="0.0141%" height="15" fill="rgb(215,146,41)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (34 samples, 0.01%)</title><rect x="14.7063%" y="693" width="0.0141%" height="15" fill="rgb(217,27,36)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (34 samples, 0.01%)</title><rect x="14.7063%" y="677" width="0.0141%" height="15" fill="rgb(219,218,39)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34 samples, 0.01%)</title><rect x="14.7063%" y="661" width="0.0141%" height="15" fill="rgb(219,4,42)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (34 samples, 0.01%)</title><rect x="14.7063%" y="645" width="0.0141%" height="15" fill="rgb(249,119,36)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (34 samples, 0.01%)</title><rect x="14.7063%" y="629" width="0.0141%" height="15" fill="rgb(209,23,33)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="639.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (34 samples, 0.01%)</title><rect x="14.7063%" y="613" width="0.0141%" height="15" fill="rgb(211,10,0)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (34 samples, 0.01%)</title><rect x="14.7063%" y="597" width="0.0141%" height="15" fill="rgb(208,99,37)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (34 samples, 0.01%)</title><rect x="14.7063%" y="581" width="0.0141%" height="15" fill="rgb(213,132,31)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="591.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (34 samples, 0.01%)</title><rect x="14.7063%" y="565" width="0.0141%" height="15" fill="rgb(243,129,40)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (34 samples, 0.01%)</title><rect x="14.7063%" y="549" width="0.0141%" height="15" fill="rgb(210,66,33)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.01%)</title><rect x="14.7063%" y="533" width="0.0141%" height="15" fill="rgb(209,189,4)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.01%)</title><rect x="14.7063%" y="517" width="0.0141%" height="15" fill="rgb(214,107,37)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 0.01%)</title><rect x="14.7063%" y="501" width="0.0141%" height="15" fill="rgb(245,88,54)" fg:x="35563" fg:w="34"/><text x="14.9563%" y="511.50"></text></g><g><title>bcs::ser::to_bytes (105 samples, 0.04%)</title><rect x="14.6902%" y="869" width="0.0434%" height="15" fill="rgb(205,146,20)" fg:x="35524" fg:w="105"/><text x="14.9402%" y="879.50"></text></g><g><title>bcs::ser::serialize_into (105 samples, 0.04%)</title><rect x="14.6902%" y="853" width="0.0434%" height="15" fill="rgb(220,161,25)" fg:x="35524" fg:w="105"/><text x="14.9402%" y="863.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (105 samples, 0.04%)</title><rect x="14.6902%" y="837" width="0.0434%" height="15" fill="rgb(215,152,15)" fg:x="35524" fg:w="105"/><text x="14.9402%" y="847.50"></text></g><g><title>serde::ser::Serializer::collect_seq (105 samples, 0.04%)</title><rect x="14.6902%" y="821" width="0.0434%" height="15" fill="rgb(233,192,44)" fg:x="35524" fg:w="105"/><text x="14.9402%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (66 samples, 0.03%)</title><rect x="14.7063%" y="805" width="0.0273%" height="15" fill="rgb(240,170,46)" fg:x="35563" fg:w="66"/><text x="14.9563%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (66 samples, 0.03%)</title><rect x="14.7063%" y="789" width="0.0273%" height="15" fill="rgb(207,104,33)" fg:x="35563" fg:w="66"/><text x="14.9563%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (66 samples, 0.03%)</title><rect x="14.7063%" y="773" width="0.0273%" height="15" fill="rgb(219,21,39)" fg:x="35563" fg:w="66"/><text x="14.9563%" y="783.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (66 samples, 0.03%)</title><rect x="14.7063%" y="757" width="0.0273%" height="15" fill="rgb(214,133,29)" fg:x="35563" fg:w="66"/><text x="14.9563%" y="767.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (66 samples, 0.03%)</title><rect x="14.7063%" y="741" width="0.0273%" height="15" fill="rgb(226,93,6)" fg:x="35563" fg:w="66"/><text x="14.9563%" y="751.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (66 samples, 0.03%)</title><rect x="14.7063%" y="725" width="0.0273%" height="15" fill="rgb(252,222,34)" fg:x="35563" fg:w="66"/><text x="14.9563%" y="735.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (32 samples, 0.01%)</title><rect x="14.7204%" y="709" width="0.0132%" height="15" fill="rgb(252,92,48)" fg:x="35597" fg:w="32"/><text x="14.9704%" y="719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (32 samples, 0.01%)</title><rect x="14.7204%" y="693" width="0.0132%" height="15" fill="rgb(245,223,24)" fg:x="35597" fg:w="32"/><text x="14.9704%" y="703.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (32 samples, 0.01%)</title><rect x="14.7204%" y="677" width="0.0132%" height="15" fill="rgb(205,176,3)" fg:x="35597" fg:w="32"/><text x="14.9704%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (32 samples, 0.01%)</title><rect x="14.7204%" y="661" width="0.0132%" height="15" fill="rgb(235,151,15)" fg:x="35597" fg:w="32"/><text x="14.9704%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (32 samples, 0.01%)</title><rect x="14.7204%" y="645" width="0.0132%" height="15" fill="rgb(237,209,11)" fg:x="35597" fg:w="32"/><text x="14.9704%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (32 samples, 0.01%)</title><rect x="14.7204%" y="629" width="0.0132%" height="15" fill="rgb(243,227,24)" fg:x="35597" fg:w="32"/><text x="14.9704%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (32 samples, 0.01%)</title><rect x="14.7204%" y="613" width="0.0132%" height="15" fill="rgb(239,193,16)" fg:x="35597" fg:w="32"/><text x="14.9704%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.01%)</title><rect x="14.7204%" y="597" width="0.0132%" height="15" fill="rgb(231,27,9)" fg:x="35597" fg:w="32"/><text x="14.9704%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.01%)</title><rect x="14.7204%" y="581" width="0.0132%" height="15" fill="rgb(219,169,10)" fg:x="35597" fg:w="32"/><text x="14.9704%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.01%)</title><rect x="14.7204%" y="565" width="0.0132%" height="15" fill="rgb(244,229,43)" fg:x="35597" fg:w="32"/><text x="14.9704%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.01%)</title><rect x="14.7204%" y="549" width="0.0132%" height="15" fill="rgb(254,38,20)" fg:x="35597" fg:w="32"/><text x="14.9704%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (27 samples, 0.01%)</title><rect x="14.7225%" y="533" width="0.0112%" height="15" fill="rgb(250,47,30)" fg:x="35602" fg:w="27"/><text x="14.9725%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (27 samples, 0.01%)</title><rect x="14.7225%" y="517" width="0.0112%" height="15" fill="rgb(224,124,36)" fg:x="35602" fg:w="27"/><text x="14.9725%" y="527.50"></text></g><g><title>alloc::alloc::realloc (27 samples, 0.01%)</title><rect x="14.7225%" y="501" width="0.0112%" height="15" fill="rgb(246,68,51)" fg:x="35602" fg:w="27"/><text x="14.9725%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (25 samples, 0.01%)</title><rect x="14.7336%" y="869" width="0.0103%" height="15" fill="rgb(253,43,49)" fg:x="35629" fg:w="25"/><text x="14.9836%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;V&gt; as core::iter::traits::collect::FromIterator&lt;core::option::Option&lt;A&gt;&gt;&gt;::from_iter (25 samples, 0.01%)</title><rect x="14.7336%" y="853" width="0.0103%" height="15" fill="rgb(219,54,36)" fg:x="35629" fg:w="25"/><text x="14.9836%" y="863.50"></text></g><g><title>core::iter::adapters::try_process (25 samples, 0.01%)</title><rect x="14.7336%" y="837" width="0.0103%" height="15" fill="rgb(227,133,34)" fg:x="35629" fg:w="25"/><text x="14.9836%" y="847.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (28 samples, 0.01%)</title><rect x="14.7642%" y="853" width="0.0116%" height="15" fill="rgb(247,227,15)" fg:x="35703" fg:w="28"/><text x="15.0142%" y="863.50"></text></g><g><title>move_core_types::identifier::Identifier::new (57 samples, 0.02%)</title><rect x="14.7609%" y="869" width="0.0236%" height="15" fill="rgb(229,96,14)" fg:x="35695" fg:w="57"/><text x="15.0109%" y="879.50"></text></g><g><title>&lt;move_core_types::value::VectorElementVisitor as serde::de::Visitor&gt;::visit_seq (32 samples, 0.01%)</title><rect x="14.7952%" y="805" width="0.0132%" height="15" fill="rgb(220,79,17)" fg:x="35778" fg:w="32"/><text x="15.0452%" y="815.50"></text></g><g><title>&lt;&amp;move_core_types::value::MoveTypeLayout as serde::de::DeserializeSeed&gt;::deserialize (58 samples, 0.02%)</title><rect x="14.7874%" y="837" width="0.0240%" height="15" fill="rgb(205,131,53)" fg:x="35759" fg:w="58"/><text x="15.0374%" y="847.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (40 samples, 0.02%)</title><rect x="14.7948%" y="821" width="0.0165%" height="15" fill="rgb(209,50,29)" fg:x="35777" fg:w="40"/><text x="15.0448%" y="831.50"></text></g><g><title>move_core_types::value::MoveValue::simple_deserialize (67 samples, 0.03%)</title><rect x="14.7845%" y="869" width="0.0277%" height="15" fill="rgb(245,86,46)" fg:x="35752" fg:w="67"/><text x="15.0345%" y="879.50"></text></g><g><title>bcs::de::from_bytes_seed (60 samples, 0.02%)</title><rect x="14.7874%" y="853" width="0.0248%" height="15" fill="rgb(235,66,46)" fg:x="35759" fg:w="60"/><text x="15.0374%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.01%)</title><rect x="14.8209%" y="821" width="0.0103%" height="15" fill="rgb(232,148,31)" fg:x="35840" fg:w="25"/><text x="15.0709%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (25 samples, 0.01%)</title><rect x="14.8209%" y="805" width="0.0103%" height="15" fill="rgb(217,149,8)" fg:x="35840" fg:w="25"/><text x="15.0709%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (25 samples, 0.01%)</title><rect x="14.8209%" y="789" width="0.0103%" height="15" fill="rgb(209,183,11)" fg:x="35840" fg:w="25"/><text x="15.0709%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (50 samples, 0.02%)</title><rect x="14.8122%" y="837" width="0.0207%" height="15" fill="rgb(208,55,20)" fg:x="35819" fg:w="50"/><text x="15.0622%" y="847.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name (36 samples, 0.01%)</title><rect x="14.8341%" y="837" width="0.0149%" height="15" fill="rgb(218,39,14)" fg:x="35872" fg:w="36"/><text x="15.0841%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (36 samples, 0.01%)</title><rect x="14.8341%" y="821" width="0.0149%" height="15" fill="rgb(216,169,33)" fg:x="35872" fg:w="36"/><text x="15.0841%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 0.01%)</title><rect x="14.8341%" y="805" width="0.0149%" height="15" fill="rgb(233,80,24)" fg:x="35872" fg:w="36"/><text x="15.0841%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (36 samples, 0.01%)</title><rect x="14.8341%" y="789" width="0.0149%" height="15" fill="rgb(213,179,31)" fg:x="35872" fg:w="36"/><text x="15.0841%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (36 samples, 0.01%)</title><rect x="14.8341%" y="773" width="0.0149%" height="15" fill="rgb(209,19,5)" fg:x="35872" fg:w="36"/><text x="15.0841%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (36 samples, 0.01%)</title><rect x="14.8341%" y="757" width="0.0149%" height="15" fill="rgb(219,18,35)" fg:x="35872" fg:w="36"/><text x="15.0841%" y="767.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name::{{closure}} (36 samples, 0.01%)</title><rect x="14.8341%" y="741" width="0.0149%" height="15" fill="rgb(209,169,16)" fg:x="35872" fg:w="36"/><text x="15.0841%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (36 samples, 0.01%)</title><rect x="14.8341%" y="725" width="0.0149%" height="15" fill="rgb(245,90,51)" fg:x="35872" fg:w="36"/><text x="15.0841%" y="735.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as core::cmp::PartialEq&gt;::eq (36 samples, 0.01%)</title><rect x="14.8341%" y="709" width="0.0149%" height="15" fill="rgb(220,99,45)" fg:x="35872" fg:w="36"/><text x="15.0841%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (36 samples, 0.01%)</title><rect x="14.8341%" y="693" width="0.0149%" height="15" fill="rgb(249,89,25)" fg:x="35872" fg:w="36"/><text x="15.0841%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (36 samples, 0.01%)</title><rect x="14.8341%" y="677" width="0.0149%" height="15" fill="rgb(239,193,0)" fg:x="35872" fg:w="36"/><text x="15.0841%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (36 samples, 0.01%)</title><rect x="14.8341%" y="661" width="0.0149%" height="15" fill="rgb(231,126,1)" fg:x="35872" fg:w="36"/><text x="15.0841%" y="671.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (36 samples, 0.01%)</title><rect x="14.8341%" y="645" width="0.0149%" height="15" fill="rgb(243,166,3)" fg:x="35872" fg:w="36"/><text x="15.0841%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (25 samples, 0.01%)</title><rect x="14.8490%" y="821" width="0.0103%" height="15" fill="rgb(223,22,34)" fg:x="35908" fg:w="25"/><text x="15.0990%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (25 samples, 0.01%)</title><rect x="14.8490%" y="805" width="0.0103%" height="15" fill="rgb(251,52,51)" fg:x="35908" fg:w="25"/><text x="15.0990%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (25 samples, 0.01%)</title><rect x="14.8490%" y="789" width="0.0103%" height="15" fill="rgb(221,165,28)" fg:x="35908" fg:w="25"/><text x="15.0990%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_type (36 samples, 0.01%)</title><rect x="14.8755%" y="549" width="0.0149%" height="15" fill="rgb(218,121,47)" fg:x="35972" fg:w="36"/><text x="15.1255%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (66 samples, 0.03%)</title><rect x="14.8713%" y="693" width="0.0273%" height="15" fill="rgb(209,120,9)" fg:x="35962" fg:w="66"/><text x="15.1213%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (66 samples, 0.03%)</title><rect x="14.8713%" y="677" width="0.0273%" height="15" fill="rgb(236,68,12)" fg:x="35962" fg:w="66"/><text x="15.1213%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.03%)</title><rect x="14.8713%" y="661" width="0.0273%" height="15" fill="rgb(225,194,26)" fg:x="35962" fg:w="66"/><text x="15.1213%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (66 samples, 0.03%)</title><rect x="14.8713%" y="645" width="0.0273%" height="15" fill="rgb(231,84,39)" fg:x="35962" fg:w="66"/><text x="15.1213%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (66 samples, 0.03%)</title><rect x="14.8713%" y="629" width="0.0273%" height="15" fill="rgb(210,11,45)" fg:x="35962" fg:w="66"/><text x="15.1213%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (66 samples, 0.03%)</title><rect x="14.8713%" y="613" width="0.0273%" height="15" fill="rgb(224,54,52)" fg:x="35962" fg:w="66"/><text x="15.1213%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (66 samples, 0.03%)</title><rect x="14.8713%" y="597" width="0.0273%" height="15" fill="rgb(238,102,14)" fg:x="35962" fg:w="66"/><text x="15.1213%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (66 samples, 0.03%)</title><rect x="14.8713%" y="581" width="0.0273%" height="15" fill="rgb(243,160,52)" fg:x="35962" fg:w="66"/><text x="15.1213%" y="591.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (56 samples, 0.02%)</title><rect x="14.8755%" y="565" width="0.0232%" height="15" fill="rgb(216,114,19)" fg:x="35972" fg:w="56"/><text x="15.1255%" y="575.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (51 samples, 0.02%)</title><rect x="14.9139%" y="565" width="0.0211%" height="15" fill="rgb(244,166,37)" fg:x="36065" fg:w="51"/><text x="15.1639%" y="575.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (42 samples, 0.02%)</title><rect x="14.9176%" y="549" width="0.0174%" height="15" fill="rgb(246,29,44)" fg:x="36074" fg:w="42"/><text x="15.1676%" y="559.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (28 samples, 0.01%)</title><rect x="14.9234%" y="533" width="0.0116%" height="15" fill="rgb(215,56,53)" fg:x="36088" fg:w="28"/><text x="15.1734%" y="543.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (28 samples, 0.01%)</title><rect x="14.9234%" y="517" width="0.0116%" height="15" fill="rgb(217,60,2)" fg:x="36088" fg:w="28"/><text x="15.1734%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (28 samples, 0.01%)</title><rect x="14.9234%" y="501" width="0.0116%" height="15" fill="rgb(207,26,24)" fg:x="36088" fg:w="28"/><text x="15.1734%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (28 samples, 0.01%)</title><rect x="14.9234%" y="485" width="0.0116%" height="15" fill="rgb(252,210,15)" fg:x="36088" fg:w="28"/><text x="15.1734%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (28 samples, 0.01%)</title><rect x="14.9234%" y="469" width="0.0116%" height="15" fill="rgb(253,209,26)" fg:x="36088" fg:w="28"/><text x="15.1734%" y="479.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_type (126 samples, 0.05%)</title><rect x="14.9015%" y="581" width="0.0521%" height="15" fill="rgb(238,170,14)" fg:x="36035" fg:w="126"/><text x="15.1515%" y="591.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_struct_by_name (45 samples, 0.02%)</title><rect x="14.9350%" y="565" width="0.0186%" height="15" fill="rgb(216,178,15)" fg:x="36116" fg:w="45"/><text x="15.1850%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (45 samples, 0.02%)</title><rect x="14.9350%" y="549" width="0.0186%" height="15" fill="rgb(250,197,2)" fg:x="36116" fg:w="45"/><text x="15.1850%" y="559.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_struct_by_name::{{closure}} (45 samples, 0.02%)</title><rect x="14.9350%" y="533" width="0.0186%" height="15" fill="rgb(212,70,42)" fg:x="36116" fg:w="45"/><text x="15.1850%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (45 samples, 0.02%)</title><rect x="14.9350%" y="517" width="0.0186%" height="15" fill="rgb(227,213,9)" fg:x="36116" fg:w="45"/><text x="15.1850%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (45 samples, 0.02%)</title><rect x="14.9350%" y="501" width="0.0186%" height="15" fill="rgb(245,99,25)" fg:x="36116" fg:w="45"/><text x="15.1850%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (45 samples, 0.02%)</title><rect x="14.9350%" y="485" width="0.0186%" height="15" fill="rgb(250,82,29)" fg:x="36116" fg:w="45"/><text x="15.1850%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (41 samples, 0.02%)</title><rect x="14.9367%" y="469" width="0.0170%" height="15" fill="rgb(241,226,54)" fg:x="36120" fg:w="41"/><text x="15.1867%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (41 samples, 0.02%)</title><rect x="14.9367%" y="453" width="0.0170%" height="15" fill="rgb(221,99,41)" fg:x="36120" fg:w="41"/><text x="15.1867%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (41 samples, 0.02%)</title><rect x="14.9367%" y="437" width="0.0170%" height="15" fill="rgb(213,90,21)" fg:x="36120" fg:w="41"/><text x="15.1867%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (41 samples, 0.02%)</title><rect x="14.9367%" y="421" width="0.0170%" height="15" fill="rgb(205,208,24)" fg:x="36120" fg:w="41"/><text x="15.1867%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (41 samples, 0.02%)</title><rect x="14.9367%" y="405" width="0.0170%" height="15" fill="rgb(246,31,12)" fg:x="36120" fg:w="41"/><text x="15.1867%" y="415.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (41 samples, 0.02%)</title><rect x="14.9367%" y="389" width="0.0170%" height="15" fill="rgb(213,154,6)" fg:x="36120" fg:w="41"/><text x="15.1867%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (41 samples, 0.02%)</title><rect x="14.9367%" y="373" width="0.0170%" height="15" fill="rgb(222,163,29)" fg:x="36120" fg:w="41"/><text x="15.1867%" y="383.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as core::cmp::PartialEq&gt;::eq (41 samples, 0.02%)</title><rect x="14.9367%" y="357" width="0.0170%" height="15" fill="rgb(227,201,8)" fg:x="36120" fg:w="41"/><text x="15.1867%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (41 samples, 0.02%)</title><rect x="14.9367%" y="341" width="0.0170%" height="15" fill="rgb(233,9,32)" fg:x="36120" fg:w="41"/><text x="15.1867%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (41 samples, 0.02%)</title><rect x="14.9367%" y="325" width="0.0170%" height="15" fill="rgb(217,54,24)" fg:x="36120" fg:w="41"/><text x="15.1867%" y="335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (41 samples, 0.02%)</title><rect x="14.9367%" y="309" width="0.0170%" height="15" fill="rgb(235,192,0)" fg:x="36120" fg:w="41"/><text x="15.1867%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (41 samples, 0.02%)</title><rect x="14.9367%" y="293" width="0.0170%" height="15" fill="rgb(235,45,9)" fg:x="36120" fg:w="41"/><text x="15.1867%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 0.07%)</title><rect x="14.8986%" y="693" width="0.0674%" height="15" fill="rgb(246,42,40)" fg:x="36028" fg:w="163"/><text x="15.1486%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (163 samples, 0.07%)</title><rect x="14.8986%" y="677" width="0.0674%" height="15" fill="rgb(248,111,24)" fg:x="36028" fg:w="163"/><text x="15.1486%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (163 samples, 0.07%)</title><rect x="14.8986%" y="661" width="0.0674%" height="15" fill="rgb(249,65,22)" fg:x="36028" fg:w="163"/><text x="15.1486%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (163 samples, 0.07%)</title><rect x="14.8986%" y="645" width="0.0674%" height="15" fill="rgb(238,111,51)" fg:x="36028" fg:w="163"/><text x="15.1486%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (163 samples, 0.07%)</title><rect x="14.8986%" y="629" width="0.0674%" height="15" fill="rgb(250,118,22)" fg:x="36028" fg:w="163"/><text x="15.1486%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (156 samples, 0.06%)</title><rect x="14.9015%" y="613" width="0.0645%" height="15" fill="rgb(234,84,26)" fg:x="36035" fg:w="156"/><text x="15.1515%" y="623.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (156 samples, 0.06%)</title><rect x="14.9015%" y="597" width="0.0645%" height="15" fill="rgb(243,172,12)" fg:x="36035" fg:w="156"/><text x="15.1515%" y="607.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type (26 samples, 0.01%)</title><rect x="14.9553%" y="581" width="0.0108%" height="15" fill="rgb(236,150,49)" fg:x="36165" fg:w="26"/><text x="15.2053%" y="591.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (25 samples, 0.01%)</title><rect x="14.9557%" y="565" width="0.0103%" height="15" fill="rgb(225,197,26)" fg:x="36166" fg:w="25"/><text x="15.2057%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (267 samples, 0.11%)</title><rect x="14.8593%" y="821" width="0.1104%" height="15" fill="rgb(214,17,42)" fg:x="35933" fg:w="267"/><text x="15.1093%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (267 samples, 0.11%)</title><rect x="14.8593%" y="805" width="0.1104%" height="15" fill="rgb(224,165,40)" fg:x="35933" fg:w="267"/><text x="15.1093%" y="815.50"></text></g><g><title>core::iter::adapters::try_process (267 samples, 0.11%)</title><rect x="14.8593%" y="789" width="0.1104%" height="15" fill="rgb(246,100,4)" fg:x="35933" fg:w="267"/><text x="15.1093%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (262 samples, 0.11%)</title><rect x="14.8614%" y="773" width="0.1083%" height="15" fill="rgb(222,103,0)" fg:x="35938" fg:w="262"/><text x="15.1114%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (262 samples, 0.11%)</title><rect x="14.8614%" y="757" width="0.1083%" height="15" fill="rgb(227,189,26)" fg:x="35938" fg:w="262"/><text x="15.1114%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (262 samples, 0.11%)</title><rect x="14.8614%" y="741" width="0.1083%" height="15" fill="rgb(214,202,17)" fg:x="35938" fg:w="262"/><text x="15.1114%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (258 samples, 0.11%)</title><rect x="14.8631%" y="725" width="0.1067%" height="15" fill="rgb(229,111,3)" fg:x="35942" fg:w="258"/><text x="15.1131%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (238 samples, 0.10%)</title><rect x="14.8713%" y="709" width="0.0984%" height="15" fill="rgb(229,172,15)" fg:x="35962" fg:w="238"/><text x="15.1213%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (31 samples, 0.01%)</title><rect x="14.9954%" y="693" width="0.0128%" height="15" fill="rgb(230,224,35)" fg:x="36262" fg:w="31"/><text x="15.2454%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (28 samples, 0.01%)</title><rect x="14.9966%" y="677" width="0.0116%" height="15" fill="rgb(251,141,6)" fg:x="36265" fg:w="28"/><text x="15.2466%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (62 samples, 0.03%)</title><rect x="14.9941%" y="725" width="0.0256%" height="15" fill="rgb(225,208,6)" fg:x="36259" fg:w="62"/><text x="15.2441%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (59 samples, 0.02%)</title><rect x="14.9954%" y="709" width="0.0244%" height="15" fill="rgb(246,181,16)" fg:x="36262" fg:w="59"/><text x="15.2454%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (78 samples, 0.03%)</title><rect x="14.9933%" y="757" width="0.0323%" height="15" fill="rgb(227,129,36)" fg:x="36257" fg:w="78"/><text x="15.2433%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (76 samples, 0.03%)</title><rect x="14.9941%" y="741" width="0.0314%" height="15" fill="rgb(248,117,24)" fg:x="36259" fg:w="76"/><text x="15.2441%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (90 samples, 0.04%)</title><rect x="14.9929%" y="789" width="0.0372%" height="15" fill="rgb(214,185,35)" fg:x="36256" fg:w="90"/><text x="15.2429%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (89 samples, 0.04%)</title><rect x="14.9933%" y="773" width="0.0368%" height="15" fill="rgb(236,150,34)" fg:x="36257" fg:w="89"/><text x="15.2433%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (183 samples, 0.08%)</title><rect x="14.9698%" y="821" width="0.0757%" height="15" fill="rgb(243,228,27)" fg:x="36200" fg:w="183"/><text x="15.2198%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (173 samples, 0.07%)</title><rect x="14.9739%" y="805" width="0.0715%" height="15" fill="rgb(245,77,44)" fg:x="36210" fg:w="173"/><text x="15.2239%" y="815.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (37 samples, 0.02%)</title><rect x="15.0301%" y="789" width="0.0153%" height="15" fill="rgb(235,214,42)" fg:x="36346" fg:w="37"/><text x="15.2801%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (535 samples, 0.22%)</title><rect x="14.8490%" y="837" width="0.2212%" height="15" fill="rgb(221,74,3)" fg:x="35908" fg:w="535"/><text x="15.0990%" y="847.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (44 samples, 0.02%)</title><rect x="15.0520%" y="821" width="0.0182%" height="15" fill="rgb(206,121,29)" fg:x="36399" fg:w="44"/><text x="15.3020%" y="831.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (49 samples, 0.02%)</title><rect x="15.0996%" y="597" width="0.0203%" height="15" fill="rgb(249,131,53)" fg:x="36514" fg:w="49"/><text x="15.3496%" y="607.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (48 samples, 0.02%)</title><rect x="15.1000%" y="581" width="0.0198%" height="15" fill="rgb(236,170,29)" fg:x="36515" fg:w="48"/><text x="15.3500%" y="591.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (85 samples, 0.04%)</title><rect x="15.0876%" y="693" width="0.0351%" height="15" fill="rgb(247,96,15)" fg:x="36485" fg:w="85"/><text x="15.3376%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (85 samples, 0.04%)</title><rect x="15.0876%" y="677" width="0.0351%" height="15" fill="rgb(211,210,7)" fg:x="36485" fg:w="85"/><text x="15.3376%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (77 samples, 0.03%)</title><rect x="15.0909%" y="661" width="0.0318%" height="15" fill="rgb(240,88,50)" fg:x="36493" fg:w="77"/><text x="15.3409%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (77 samples, 0.03%)</title><rect x="15.0909%" y="645" width="0.0318%" height="15" fill="rgb(209,229,26)" fg:x="36493" fg:w="77"/><text x="15.3409%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (77 samples, 0.03%)</title><rect x="15.0909%" y="629" width="0.0318%" height="15" fill="rgb(210,68,23)" fg:x="36493" fg:w="77"/><text x="15.3409%" y="639.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl::{{closure}} (77 samples, 0.03%)</title><rect x="15.0909%" y="613" width="0.0318%" height="15" fill="rgb(229,180,13)" fg:x="36493" fg:w="77"/><text x="15.3409%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (124 samples, 0.05%)</title><rect x="15.0773%" y="821" width="0.0513%" height="15" fill="rgb(236,53,44)" fg:x="36460" fg:w="124"/><text x="15.3273%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (115 samples, 0.05%)</title><rect x="15.0810%" y="805" width="0.0476%" height="15" fill="rgb(244,214,29)" fg:x="36469" fg:w="115"/><text x="15.3310%" y="815.50"></text></g><g><title>core::iter::adapters::try_process (115 samples, 0.05%)</title><rect x="15.0810%" y="789" width="0.0476%" height="15" fill="rgb(220,75,29)" fg:x="36469" fg:w="115"/><text x="15.3310%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (115 samples, 0.05%)</title><rect x="15.0810%" y="773" width="0.0476%" height="15" fill="rgb(214,183,37)" fg:x="36469" fg:w="115"/><text x="15.3310%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (115 samples, 0.05%)</title><rect x="15.0810%" y="757" width="0.0476%" height="15" fill="rgb(239,117,29)" fg:x="36469" fg:w="115"/><text x="15.3310%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (115 samples, 0.05%)</title><rect x="15.0810%" y="741" width="0.0476%" height="15" fill="rgb(237,171,35)" fg:x="36469" fg:w="115"/><text x="15.3310%" y="751.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (115 samples, 0.05%)</title><rect x="15.0810%" y="725" width="0.0476%" height="15" fill="rgb(229,178,53)" fg:x="36469" fg:w="115"/><text x="15.3310%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (99 samples, 0.04%)</title><rect x="15.0876%" y="709" width="0.0409%" height="15" fill="rgb(210,102,19)" fg:x="36485" fg:w="99"/><text x="15.3376%" y="719.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (45 samples, 0.02%)</title><rect x="15.2117%" y="693" width="0.0186%" height="15" fill="rgb(235,127,22)" fg:x="36785" fg:w="45"/><text x="15.4617%" y="703.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (45 samples, 0.02%)</title><rect x="15.2117%" y="677" width="0.0186%" height="15" fill="rgb(244,31,31)" fg:x="36785" fg:w="45"/><text x="15.4617%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (45 samples, 0.02%)</title><rect x="15.2117%" y="661" width="0.0186%" height="15" fill="rgb(231,43,21)" fg:x="36785" fg:w="45"/><text x="15.4617%" y="671.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (45 samples, 0.02%)</title><rect x="15.2117%" y="645" width="0.0186%" height="15" fill="rgb(217,131,35)" fg:x="36785" fg:w="45"/><text x="15.4617%" y="655.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (25 samples, 0.01%)</title><rect x="15.2199%" y="629" width="0.0103%" height="15" fill="rgb(221,149,4)" fg:x="36805" fg:w="25"/><text x="15.4699%" y="639.50"></text></g><g><title>&lt;aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size::Visitor as move_vm_types::views::ValueVisitor&gt;::visit_u64 (25 samples, 0.01%)</title><rect x="15.2199%" y="613" width="0.0103%" height="15" fill="rgb(232,170,28)" fg:x="36805" fg:w="25"/><text x="15.4699%" y="623.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (27 samples, 0.01%)</title><rect x="15.2303%" y="677" width="0.0112%" height="15" fill="rgb(238,56,10)" fg:x="36830" fg:w="27"/><text x="15.4803%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (27 samples, 0.01%)</title><rect x="15.2303%" y="661" width="0.0112%" height="15" fill="rgb(235,196,14)" fg:x="36830" fg:w="27"/><text x="15.4803%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.01%)</title><rect x="15.2414%" y="645" width="0.0141%" height="15" fill="rgb(216,45,48)" fg:x="36857" fg:w="34"/><text x="15.4914%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (26 samples, 0.01%)</title><rect x="15.2447%" y="629" width="0.0108%" height="15" fill="rgb(238,213,17)" fg:x="36865" fg:w="26"/><text x="15.4947%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (26 samples, 0.01%)</title><rect x="15.2447%" y="613" width="0.0108%" height="15" fill="rgb(212,13,2)" fg:x="36865" fg:w="26"/><text x="15.4947%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (26 samples, 0.01%)</title><rect x="15.2447%" y="597" width="0.0108%" height="15" fill="rgb(240,114,20)" fg:x="36865" fg:w="26"/><text x="15.4947%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (169 samples, 0.07%)</title><rect x="15.2005%" y="741" width="0.0699%" height="15" fill="rgb(228,41,40)" fg:x="36758" fg:w="169"/><text x="15.4505%" y="751.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame::{{closure}} (169 samples, 0.07%)</title><rect x="15.2005%" y="725" width="0.0699%" height="15" fill="rgb(244,132,35)" fg:x="36758" fg:w="169"/><text x="15.4505%" y="735.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (169 samples, 0.07%)</title><rect x="15.2005%" y="709" width="0.0699%" height="15" fill="rgb(253,189,4)" fg:x="36758" fg:w="169"/><text x="15.4505%" y="719.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (97 samples, 0.04%)</title><rect x="15.2303%" y="693" width="0.0401%" height="15" fill="rgb(224,37,19)" fg:x="36830" fg:w="97"/><text x="15.4803%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (70 samples, 0.03%)</title><rect x="15.2414%" y="677" width="0.0289%" height="15" fill="rgb(235,223,18)" fg:x="36857" fg:w="70"/><text x="15.4914%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (70 samples, 0.03%)</title><rect x="15.2414%" y="661" width="0.0289%" height="15" fill="rgb(235,163,25)" fg:x="36857" fg:w="70"/><text x="15.4914%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.02%)</title><rect x="15.2704%" y="725" width="0.0186%" height="15" fill="rgb(217,145,28)" fg:x="36927" fg:w="45"/><text x="15.5204%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(usize,move_vm_types::values::values_impl::Value)]&gt; (45 samples, 0.02%)</title><rect x="15.2704%" y="709" width="0.0186%" height="15" fill="rgb(223,223,32)" fg:x="36927" fg:w="45"/><text x="15.5204%" y="719.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame (227 samples, 0.09%)</title><rect x="15.2005%" y="789" width="0.0939%" height="15" fill="rgb(227,189,39)" fg:x="36758" fg:w="227"/><text x="15.4505%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (227 samples, 0.09%)</title><rect x="15.2005%" y="773" width="0.0939%" height="15" fill="rgb(248,10,22)" fg:x="36758" fg:w="227"/><text x="15.4505%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (227 samples, 0.09%)</title><rect x="15.2005%" y="757" width="0.0939%" height="15" fill="rgb(248,46,39)" fg:x="36758" fg:w="227"/><text x="15.4505%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (58 samples, 0.02%)</title><rect x="15.2704%" y="741" width="0.0240%" height="15" fill="rgb(248,113,48)" fg:x="36927" fg:w="58"/><text x="15.5204%" y="751.50"></text></g><g><title>__rust_dealloc (50 samples, 0.02%)</title><rect x="15.2944%" y="789" width="0.0207%" height="15" fill="rgb(245,16,25)" fg:x="36985" fg:w="50"/><text x="15.5444%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (87 samples, 0.04%)</title><rect x="15.3217%" y="773" width="0.0360%" height="15" fill="rgb(249,152,16)" fg:x="37051" fg:w="87"/><text x="15.5717%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 0.04%)</title><rect x="15.3217%" y="757" width="0.0360%" height="15" fill="rgb(250,16,1)" fg:x="37051" fg:w="87"/><text x="15.5717%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (87 samples, 0.04%)</title><rect x="15.3217%" y="741" width="0.0360%" height="15" fill="rgb(249,138,3)" fg:x="37051" fg:w="87"/><text x="15.5717%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (87 samples, 0.04%)</title><rect x="15.3217%" y="725" width="0.0360%" height="15" fill="rgb(227,71,41)" fg:x="37051" fg:w="87"/><text x="15.5717%" y="735.50"></text></g><g><title>__rust_dealloc (52 samples, 0.02%)</title><rect x="15.4416%" y="645" width="0.0215%" height="15" fill="rgb(209,184,23)" fg:x="37341" fg:w="52"/><text x="15.6916%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.05%)</title><rect x="15.4209%" y="693" width="0.0480%" height="15" fill="rgb(223,215,31)" fg:x="37291" fg:w="116"/><text x="15.6709%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (116 samples, 0.05%)</title><rect x="15.4209%" y="677" width="0.0480%" height="15" fill="rgb(210,146,28)" fg:x="37291" fg:w="116"/><text x="15.6709%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (116 samples, 0.05%)</title><rect x="15.4209%" y="661" width="0.0480%" height="15" fill="rgb(209,183,41)" fg:x="37291" fg:w="116"/><text x="15.6709%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (198 samples, 0.08%)</title><rect x="15.4784%" y="693" width="0.0819%" height="15" fill="rgb(209,224,45)" fg:x="37430" fg:w="198"/><text x="15.7284%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (612 samples, 0.25%)</title><rect x="15.4209%" y="709" width="0.2531%" height="15" fill="rgb(224,209,51)" fg:x="37291" fg:w="612"/><text x="15.6709%" y="719.50"></text></g><g><title>sdallocx (275 samples, 0.11%)</title><rect x="15.5603%" y="693" width="0.1137%" height="15" fill="rgb(223,17,39)" fg:x="37628" fg:w="275"/><text x="15.8103%" y="703.50"></text></g><g><title>isfree (275 samples, 0.11%)</title><rect x="15.5603%" y="677" width="0.1137%" height="15" fill="rgb(234,204,37)" fg:x="37628" fg:w="275"/><text x="15.8103%" y="687.50"></text></g><g><title>isdalloct (275 samples, 0.11%)</title><rect x="15.5603%" y="661" width="0.1137%" height="15" fill="rgb(236,120,5)" fg:x="37628" fg:w="275"/><text x="15.8103%" y="671.50"></text></g><g><title>arena_sdalloc (275 samples, 0.11%)</title><rect x="15.5603%" y="645" width="0.1137%" height="15" fill="rgb(248,97,27)" fg:x="37628" fg:w="275"/><text x="15.8103%" y="655.50"></text></g><g><title>tcache_dalloc_small (275 samples, 0.11%)</title><rect x="15.5603%" y="629" width="0.1137%" height="15" fill="rgb(240,66,17)" fg:x="37628" fg:w="275"/><text x="15.8103%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (792 samples, 0.33%)</title><rect x="15.3576%" y="757" width="0.3275%" height="15" fill="rgb(210,79,3)" fg:x="37138" fg:w="792"/><text x="15.6076%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (792 samples, 0.33%)</title><rect x="15.3576%" y="741" width="0.3275%" height="15" fill="rgb(214,176,27)" fg:x="37138" fg:w="792"/><text x="15.6076%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (639 samples, 0.26%)</title><rect x="15.4209%" y="725" width="0.2642%" height="15" fill="rgb(235,185,3)" fg:x="37291" fg:w="639"/><text x="15.6709%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (27 samples, 0.01%)</title><rect x="15.6740%" y="709" width="0.0112%" height="15" fill="rgb(227,24,12)" fg:x="37903" fg:w="27"/><text x="15.9240%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.01%)</title><rect x="15.6740%" y="693" width="0.0112%" height="15" fill="rgb(252,169,48)" fg:x="37903" fg:w="27"/><text x="15.9240%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (27 samples, 0.01%)</title><rect x="15.6740%" y="677" width="0.0112%" height="15" fill="rgb(212,65,1)" fg:x="37903" fg:w="27"/><text x="15.9240%" y="687.50"></text></g><g><title>__rust_dealloc (179 samples, 0.07%)</title><rect x="15.6959%" y="693" width="0.0740%" height="15" fill="rgb(242,39,24)" fg:x="37956" fg:w="179"/><text x="15.9459%" y="703.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (179 samples, 0.07%)</title><rect x="15.6959%" y="677" width="0.0740%" height="15" fill="rgb(249,32,23)" fg:x="37956" fg:w="179"/><text x="15.9459%" y="687.50"></text></g><g><title>jemallocator::layout_to_flags (61 samples, 0.03%)</title><rect x="15.7447%" y="661" width="0.0252%" height="15" fill="rgb(251,195,23)" fg:x="38074" fg:w="61"/><text x="15.9947%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (1,351 samples, 0.56%)</title><rect x="15.3576%" y="773" width="0.5587%" height="15" fill="rgb(236,174,8)" fg:x="37138" fg:w="1351"/><text x="15.6076%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (559 samples, 0.23%)</title><rect x="15.6852%" y="757" width="0.2312%" height="15" fill="rgb(220,197,8)" fg:x="37930" fg:w="559"/><text x="15.9352%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (559 samples, 0.23%)</title><rect x="15.6852%" y="741" width="0.2312%" height="15" fill="rgb(240,108,37)" fg:x="37930" fg:w="559"/><text x="15.9352%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (559 samples, 0.23%)</title><rect x="15.6852%" y="725" width="0.2312%" height="15" fill="rgb(232,176,24)" fg:x="37930" fg:w="559"/><text x="15.9352%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (559 samples, 0.23%)</title><rect x="15.6852%" y="709" width="0.2312%" height="15" fill="rgb(243,35,29)" fg:x="37930" fg:w="559"/><text x="15.9352%" y="719.50"></text></g><g><title>sdallocx (350 samples, 0.14%)</title><rect x="15.7716%" y="693" width="0.1447%" height="15" fill="rgb(210,37,18)" fg:x="38139" fg:w="350"/><text x="16.0216%" y="703.50"></text></g><g><title>isfree (350 samples, 0.14%)</title><rect x="15.7716%" y="677" width="0.1447%" height="15" fill="rgb(224,184,40)" fg:x="38139" fg:w="350"/><text x="16.0216%" y="687.50"></text></g><g><title>isdalloct (350 samples, 0.14%)</title><rect x="15.7716%" y="661" width="0.1447%" height="15" fill="rgb(236,39,29)" fg:x="38139" fg:w="350"/><text x="16.0216%" y="671.50"></text></g><g><title>arena_sdalloc (350 samples, 0.14%)</title><rect x="15.7716%" y="645" width="0.1447%" height="15" fill="rgb(232,48,39)" fg:x="38139" fg:w="350"/><text x="16.0216%" y="655.50"></text></g><g><title>sz_size2index (350 samples, 0.14%)</title><rect x="15.7716%" y="629" width="0.1447%" height="15" fill="rgb(236,34,42)" fg:x="38139" fg:w="350"/><text x="16.0216%" y="639.50"></text></g><g><title>sz_size2index_lookup (350 samples, 0.14%)</title><rect x="15.7716%" y="613" width="0.1447%" height="15" fill="rgb(243,106,37)" fg:x="38139" fg:w="350"/><text x="16.0216%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.02%)</title><rect x="15.9403%" y="677" width="0.0157%" height="15" fill="rgb(218,96,6)" fg:x="38547" fg:w="38"/><text x="16.1903%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (38 samples, 0.02%)</title><rect x="15.9403%" y="661" width="0.0157%" height="15" fill="rgb(235,130,12)" fg:x="38547" fg:w="38"/><text x="16.1903%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (31 samples, 0.01%)</title><rect x="15.9432%" y="645" width="0.0128%" height="15" fill="rgb(231,95,0)" fg:x="38554" fg:w="31"/><text x="16.1932%" y="655.50"></text></g><g><title>__rust_dealloc (55 samples, 0.02%)</title><rect x="15.9635%" y="613" width="0.0227%" height="15" fill="rgb(228,12,23)" fg:x="38603" fg:w="55"/><text x="16.2135%" y="623.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (55 samples, 0.02%)</title><rect x="15.9635%" y="597" width="0.0227%" height="15" fill="rgb(216,12,1)" fg:x="38603" fg:w="55"/><text x="16.2135%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (368 samples, 0.15%)</title><rect x="15.9163%" y="741" width="0.1522%" height="15" fill="rgb(219,59,3)" fg:x="38489" fg:w="368"/><text x="16.1663%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (310 samples, 0.13%)</title><rect x="15.9403%" y="725" width="0.1282%" height="15" fill="rgb(215,208,46)" fg:x="38547" fg:w="310"/><text x="16.1903%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (310 samples, 0.13%)</title><rect x="15.9403%" y="709" width="0.1282%" height="15" fill="rgb(254,224,29)" fg:x="38547" fg:w="310"/><text x="16.1903%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (310 samples, 0.13%)</title><rect x="15.9403%" y="693" width="0.1282%" height="15" fill="rgb(232,14,29)" fg:x="38547" fg:w="310"/><text x="16.1903%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (272 samples, 0.11%)</title><rect x="15.9560%" y="677" width="0.1125%" height="15" fill="rgb(208,45,52)" fg:x="38585" fg:w="272"/><text x="16.2060%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (272 samples, 0.11%)</title><rect x="15.9560%" y="661" width="0.1125%" height="15" fill="rgb(234,191,28)" fg:x="38585" fg:w="272"/><text x="16.2060%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (272 samples, 0.11%)</title><rect x="15.9560%" y="645" width="0.1125%" height="15" fill="rgb(244,67,43)" fg:x="38585" fg:w="272"/><text x="16.2060%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (272 samples, 0.11%)</title><rect x="15.9560%" y="629" width="0.1125%" height="15" fill="rgb(236,189,24)" fg:x="38585" fg:w="272"/><text x="16.2060%" y="639.50"></text></g><g><title>sdallocx (187 samples, 0.08%)</title><rect x="15.9912%" y="613" width="0.0773%" height="15" fill="rgb(239,214,33)" fg:x="38670" fg:w="187"/><text x="16.2412%" y="623.50"></text></g><g><title>__rust_dealloc (34 samples, 0.01%)</title><rect x="16.0685%" y="741" width="0.0141%" height="15" fill="rgb(226,176,41)" fg:x="38857" fg:w="34"/><text x="16.3185%" y="751.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (34 samples, 0.01%)</title><rect x="16.0685%" y="725" width="0.0141%" height="15" fill="rgb(248,47,8)" fg:x="38857" fg:w="34"/><text x="16.3185%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::interpreter::Frame&gt; (1,865 samples, 0.77%)</title><rect x="15.3217%" y="789" width="0.7712%" height="15" fill="rgb(218,81,44)" fg:x="37051" fg:w="1865"/><text x="15.5717%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (427 samples, 0.18%)</title><rect x="15.9163%" y="773" width="0.1766%" height="15" fill="rgb(213,98,6)" fg:x="38489" fg:w="427"/><text x="16.1663%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (427 samples, 0.18%)</title><rect x="15.9163%" y="757" width="0.1766%" height="15" fill="rgb(222,85,22)" fg:x="38489" fg:w="427"/><text x="16.1663%" y="767.50"></text></g><g><title>_rjem_je_tcache_event_hard (25 samples, 0.01%)</title><rect x="16.0826%" y="741" width="0.0103%" height="15" fill="rgb(239,46,39)" fg:x="38891" fg:w="25"/><text x="16.3326%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Resolver&gt; (1,162 samples, 0.48%)</title><rect x="16.0929%" y="789" width="0.4805%" height="15" fill="rgb(237,12,29)" fg:x="38916" fg:w="1162"/><text x="16.3429%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryType&gt; (1,162 samples, 0.48%)</title><rect x="16.0929%" y="773" width="0.4805%" height="15" fill="rgb(214,77,8)" fg:x="38916" fg:w="1162"/><text x="16.3429%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (1,162 samples, 0.48%)</title><rect x="16.0929%" y="757" width="0.4805%" height="15" fill="rgb(217,168,37)" fg:x="38916" fg:w="1162"/><text x="16.3429%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,162 samples, 0.48%)</title><rect x="16.0929%" y="741" width="0.4805%" height="15" fill="rgb(221,217,23)" fg:x="38916" fg:w="1162"/><text x="16.3429%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,162 samples, 0.48%)</title><rect x="16.0929%" y="725" width="0.4805%" height="15" fill="rgb(243,229,36)" fg:x="38916" fg:w="1162"/><text x="16.3429%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,162 samples, 0.48%)</title><rect x="16.0929%" y="709" width="0.4805%" height="15" fill="rgb(251,163,40)" fg:x="38916" fg:w="1162"/><text x="16.3429%" y="719.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::pop (50 samples, 0.02%)</title><rect x="16.5734%" y="789" width="0.0207%" height="15" fill="rgb(237,222,12)" fg:x="40078" fg:w="50"/><text x="16.8234%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::push (86 samples, 0.04%)</title><rect x="16.5941%" y="789" width="0.0356%" height="15" fill="rgb(248,132,6)" fg:x="40128" fg:w="86"/><text x="16.8441%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (86 samples, 0.04%)</title><rect x="16.5941%" y="773" width="0.0356%" height="15" fill="rgb(227,167,50)" fg:x="40128" fg:w="86"/><text x="16.8441%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (38 samples, 0.02%)</title><rect x="16.6139%" y="757" width="0.0157%" height="15" fill="rgb(242,84,37)" fg:x="40176" fg:w="38"/><text x="16.8639%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (38 samples, 0.02%)</title><rect x="16.6139%" y="741" width="0.0157%" height="15" fill="rgb(212,4,50)" fg:x="40176" fg:w="38"/><text x="16.8639%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (33 samples, 0.01%)</title><rect x="16.6160%" y="725" width="0.0136%" height="15" fill="rgb(230,228,32)" fg:x="40181" fg:w="33"/><text x="16.8660%" y="735.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (155 samples, 0.06%)</title><rect x="17.8066%" y="725" width="0.0641%" height="15" fill="rgb(248,217,23)" fg:x="43060" fg:w="155"/><text x="18.0566%" y="735.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (155 samples, 0.06%)</title><rect x="17.8066%" y="709" width="0.0641%" height="15" fill="rgb(238,197,32)" fg:x="43060" fg:w="155"/><text x="18.0566%" y="719.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (155 samples, 0.06%)</title><rect x="17.8066%" y="693" width="0.0641%" height="15" fill="rgb(236,106,1)" fg:x="43060" fg:w="155"/><text x="18.0566%" y="703.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (155 samples, 0.06%)</title><rect x="17.8066%" y="677" width="0.0641%" height="15" fill="rgb(219,228,13)" fg:x="43060" fg:w="155"/><text x="18.0566%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (155 samples, 0.06%)</title><rect x="17.8066%" y="661" width="0.0641%" height="15" fill="rgb(238,30,35)" fg:x="43060" fg:w="155"/><text x="18.0566%" y="671.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (155 samples, 0.06%)</title><rect x="17.8066%" y="645" width="0.0641%" height="15" fill="rgb(236,70,23)" fg:x="43060" fg:w="155"/><text x="18.0566%" y="655.50"></text></g><g><title>&lt;aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size::Visitor as move_vm_types::views::ValueVisitor&gt;::visit_u8 (155 samples, 0.06%)</title><rect x="17.8066%" y="629" width="0.0641%" height="15" fill="rgb(249,104,48)" fg:x="43060" fg:w="155"/><text x="18.0566%" y="639.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_copy_loc (242 samples, 0.10%)</title><rect x="17.8066%" y="757" width="0.1001%" height="15" fill="rgb(254,117,50)" fg:x="43060" fg:w="242"/><text x="18.0566%" y="767.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size_stack_and_heap (242 samples, 0.10%)</title><rect x="17.8066%" y="741" width="0.1001%" height="15" fill="rgb(223,152,4)" fg:x="43060" fg:w="242"/><text x="18.0566%" y="751.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (87 samples, 0.04%)</title><rect x="17.8707%" y="725" width="0.0360%" height="15" fill="rgb(245,6,2)" fg:x="43215" fg:w="87"/><text x="18.1207%" y="735.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (87 samples, 0.04%)</title><rect x="17.8707%" y="709" width="0.0360%" height="15" fill="rgb(249,150,24)" fg:x="43215" fg:w="87"/><text x="18.1207%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (87 samples, 0.04%)</title><rect x="17.8707%" y="693" width="0.0360%" height="15" fill="rgb(228,185,42)" fg:x="43215" fg:w="87"/><text x="18.1207%" y="703.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (87 samples, 0.04%)</title><rect x="17.8707%" y="677" width="0.0360%" height="15" fill="rgb(226,39,33)" fg:x="43215" fg:w="87"/><text x="18.1207%" y="687.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (87 samples, 0.04%)</title><rect x="17.8707%" y="661" width="0.0360%" height="15" fill="rgb(221,166,19)" fg:x="43215" fg:w="87"/><text x="18.1207%" y="671.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (25 samples, 0.01%)</title><rect x="17.9066%" y="741" width="0.0103%" height="15" fill="rgb(209,109,2)" fg:x="43302" fg:w="25"/><text x="18.1566%" y="751.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_eq (98 samples, 0.04%)</title><rect x="17.9066%" y="757" width="0.0405%" height="15" fill="rgb(252,216,26)" fg:x="43302" fg:w="98"/><text x="18.1566%" y="767.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size_dereferenced (73 samples, 0.03%)</title><rect x="17.9170%" y="741" width="0.0302%" height="15" fill="rgb(227,173,36)" fg:x="43327" fg:w="73"/><text x="18.1670%" y="751.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (73 samples, 0.03%)</title><rect x="17.9170%" y="725" width="0.0302%" height="15" fill="rgb(209,90,7)" fg:x="43327" fg:w="73"/><text x="18.1670%" y="735.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (73 samples, 0.03%)</title><rect x="17.9170%" y="709" width="0.0302%" height="15" fill="rgb(250,194,11)" fg:x="43327" fg:w="73"/><text x="18.1670%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (73 samples, 0.03%)</title><rect x="17.9170%" y="693" width="0.0302%" height="15" fill="rgb(220,72,50)" fg:x="43327" fg:w="73"/><text x="18.1670%" y="703.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (56 samples, 0.02%)</title><rect x="17.9240%" y="677" width="0.0232%" height="15" fill="rgb(222,106,48)" fg:x="43344" fg:w="56"/><text x="18.1740%" y="687.50"></text></g><g><title>&lt;aptos_gas::misc::DerefVisitor&lt;V&gt; as move_vm_types::views::ValueVisitor&gt;::visit_u64 (56 samples, 0.02%)</title><rect x="17.9240%" y="661" width="0.0232%" height="15" fill="rgb(216,220,45)" fg:x="43344" fg:w="56"/><text x="18.1740%" y="671.50"></text></g><g><title>&lt;aptos_gas::misc::AbstractValueSizeVisitor as move_vm_types::views::ValueVisitor&gt;::visit_u64 (56 samples, 0.02%)</title><rect x="17.9240%" y="645" width="0.0232%" height="15" fill="rgb(234,112,18)" fg:x="43344" fg:w="56"/><text x="18.1740%" y="655.50"></text></g><g><title>&lt;move_core_types::gas_algebra::GasQuantity&lt;U&gt; as core::ops::arith::AddAssign&gt;::add_assign (56 samples, 0.02%)</title><rect x="17.9240%" y="629" width="0.0232%" height="15" fill="rgb(206,179,9)" fg:x="43344" fg:w="56"/><text x="18.1740%" y="639.50"></text></g><g><title>&lt;move_core_types::gas_algebra::GasQuantity&lt;U&gt; as core::ops::arith::Add&gt;::add (56 samples, 0.02%)</title><rect x="17.9240%" y="613" width="0.0232%" height="15" fill="rgb(215,115,40)" fg:x="43344" fg:w="56"/><text x="18.1740%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (56 samples, 0.02%)</title><rect x="17.9240%" y="597" width="0.0232%" height="15" fill="rgb(222,69,34)" fg:x="43344" fg:w="56"/><text x="18.1740%" y="607.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_pop (39 samples, 0.02%)</title><rect x="17.9472%" y="757" width="0.0161%" height="15" fill="rgb(209,161,10)" fg:x="43400" fg:w="39"/><text x="18.1972%" y="767.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (39 samples, 0.02%)</title><rect x="17.9472%" y="741" width="0.0161%" height="15" fill="rgb(217,6,38)" fg:x="43400" fg:w="39"/><text x="18.1972%" y="751.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (327 samples, 0.14%)</title><rect x="17.9633%" y="725" width="0.1352%" height="15" fill="rgb(229,229,48)" fg:x="43439" fg:w="327"/><text x="18.2133%" y="735.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (327 samples, 0.14%)</title><rect x="17.9633%" y="709" width="0.1352%" height="15" fill="rgb(225,21,28)" fg:x="43439" fg:w="327"/><text x="18.2133%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (327 samples, 0.14%)</title><rect x="17.9633%" y="693" width="0.1352%" height="15" fill="rgb(206,33,13)" fg:x="43439" fg:w="327"/><text x="18.2133%" y="703.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_indexed (36 samples, 0.01%)</title><rect x="18.0836%" y="677" width="0.0149%" height="15" fill="rgb(242,178,17)" fg:x="43730" fg:w="36"/><text x="18.3336%" y="687.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (36 samples, 0.01%)</title><rect x="18.0836%" y="661" width="0.0149%" height="15" fill="rgb(220,162,5)" fg:x="43730" fg:w="36"/><text x="18.3336%" y="671.50"></text></g><g><title>&lt;aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size::Visitor as move_vm_types::views::ValueVisitor&gt;::visit_u64 (36 samples, 0.01%)</title><rect x="18.0836%" y="645" width="0.0149%" height="15" fill="rgb(210,33,43)" fg:x="43730" fg:w="36"/><text x="18.3336%" y="655.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_read_ref (459 samples, 0.19%)</title><rect x="17.9633%" y="757" width="0.1898%" height="15" fill="rgb(216,116,54)" fg:x="43439" fg:w="459"/><text x="18.2133%" y="767.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size_stack_and_heap (459 samples, 0.19%)</title><rect x="17.9633%" y="741" width="0.1898%" height="15" fill="rgb(249,92,24)" fg:x="43439" fg:w="459"/><text x="18.2133%" y="751.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (132 samples, 0.05%)</title><rect x="18.0985%" y="725" width="0.0546%" height="15" fill="rgb(231,189,14)" fg:x="43766" fg:w="132"/><text x="18.3485%" y="735.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (132 samples, 0.05%)</title><rect x="18.0985%" y="709" width="0.0546%" height="15" fill="rgb(230,8,41)" fg:x="43766" fg:w="132"/><text x="18.3485%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_indexed (131 samples, 0.05%)</title><rect x="18.0989%" y="693" width="0.0542%" height="15" fill="rgb(249,7,27)" fg:x="43767" fg:w="131"/><text x="18.3489%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (131 samples, 0.05%)</title><rect x="18.0989%" y="677" width="0.0542%" height="15" fill="rgb(232,86,5)" fg:x="43767" fg:w="131"/><text x="18.3489%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (131 samples, 0.05%)</title><rect x="18.0989%" y="661" width="0.0542%" height="15" fill="rgb(224,175,18)" fg:x="43767" fg:w="131"/><text x="18.3489%" y="671.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (131 samples, 0.05%)</title><rect x="18.0989%" y="645" width="0.0542%" height="15" fill="rgb(220,129,12)" fg:x="43767" fg:w="131"/><text x="18.3489%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (131 samples, 0.05%)</title><rect x="18.0989%" y="629" width="0.0542%" height="15" fill="rgb(210,19,36)" fg:x="43767" fg:w="131"/><text x="18.3489%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (131 samples, 0.05%)</title><rect x="18.0989%" y="613" width="0.0542%" height="15" fill="rgb(219,96,14)" fg:x="43767" fg:w="131"/><text x="18.3489%" y="623.50"></text></g><g><title>core::mem::replace (131 samples, 0.05%)</title><rect x="18.0989%" y="597" width="0.0542%" height="15" fill="rgb(249,106,1)" fg:x="43767" fg:w="131"/><text x="18.3489%" y="607.50"></text></g><g><title>core::ptr::write (131 samples, 0.05%)</title><rect x="18.0989%" y="581" width="0.0542%" height="15" fill="rgb(249,155,20)" fg:x="43767" fg:w="131"/><text x="18.3489%" y="591.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_vec_pop_back (57 samples, 0.02%)</title><rect x="18.1531%" y="757" width="0.0236%" height="15" fill="rgb(244,168,9)" fg:x="43898" fg:w="57"/><text x="18.4031%" y="767.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_packed_size (57 samples, 0.02%)</title><rect x="18.1531%" y="741" width="0.0236%" height="15" fill="rgb(216,23,50)" fg:x="43898" fg:w="57"/><text x="18.4031%" y="751.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (57 samples, 0.02%)</title><rect x="18.1531%" y="725" width="0.0236%" height="15" fill="rgb(224,219,20)" fg:x="43898" fg:w="57"/><text x="18.4031%" y="735.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (57 samples, 0.02%)</title><rect x="18.1531%" y="709" width="0.0236%" height="15" fill="rgb(222,156,15)" fg:x="43898" fg:w="57"/><text x="18.4031%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (57 samples, 0.02%)</title><rect x="18.1531%" y="693" width="0.0236%" height="15" fill="rgb(231,97,17)" fg:x="43898" fg:w="57"/><text x="18.4031%" y="703.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (57 samples, 0.02%)</title><rect x="18.1531%" y="677" width="0.0236%" height="15" fill="rgb(218,70,48)" fg:x="43898" fg:w="57"/><text x="18.4031%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14,968 samples, 6.19%)</title><rect x="18.1845%" y="757" width="6.1897%" height="15" fill="rgb(212,196,52)" fg:x="43974" fg:w="14968"/><text x="18.4345%" y="767.50">&lt;core::r..</text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (112 samples, 0.05%)</title><rect x="24.3891%" y="757" width="0.0463%" height="15" fill="rgb(243,203,18)" fg:x="58978" fg:w="112"/><text x="24.6391%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (95 samples, 0.04%)</title><rect x="24.4354%" y="757" width="0.0393%" height="15" fill="rgb(252,125,41)" fg:x="59090" fg:w="95"/><text x="24.6854%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5,360 samples, 2.22%)</title><rect x="24.9255%" y="741" width="2.2165%" height="15" fill="rgb(223,180,33)" fg:x="60275" fg:w="5360"/><text x="25.1755%" y="751.50">&lt;..</text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (93 samples, 0.04%)</title><rect x="27.7585%" y="645" width="0.0385%" height="15" fill="rgb(254,159,46)" fg:x="67126" fg:w="93"/><text x="28.0085%" y="655.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (547 samples, 0.23%)</title><rect x="27.7585%" y="661" width="0.2262%" height="15" fill="rgb(254,38,10)" fg:x="67126" fg:w="547"/><text x="28.0085%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (454 samples, 0.19%)</title><rect x="27.7970%" y="645" width="0.1877%" height="15" fill="rgb(208,217,32)" fg:x="67219" fg:w="454"/><text x="28.0470%" y="655.50"></text></g><g><title>core::ptr::write (454 samples, 0.19%)</title><rect x="27.7970%" y="629" width="0.1877%" height="15" fill="rgb(221,120,13)" fg:x="67219" fg:w="454"/><text x="28.0470%" y="639.50"></text></g><g><title>__rust_alloc (66 samples, 0.03%)</title><rect x="27.9930%" y="581" width="0.0273%" height="15" fill="rgb(246,54,52)" fg:x="67693" fg:w="66"/><text x="28.2430%" y="591.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (66 samples, 0.03%)</title><rect x="27.9930%" y="565" width="0.0273%" height="15" fill="rgb(242,34,25)" fg:x="67693" fg:w="66"/><text x="28.2430%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (782 samples, 0.32%)</title><rect x="27.7585%" y="677" width="0.3234%" height="15" fill="rgb(247,209,9)" fg:x="67126" fg:w="782"/><text x="28.0085%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (235 samples, 0.10%)</title><rect x="27.9847%" y="661" width="0.0972%" height="15" fill="rgb(228,71,26)" fg:x="67673" fg:w="235"/><text x="28.2347%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (235 samples, 0.10%)</title><rect x="27.9847%" y="645" width="0.0972%" height="15" fill="rgb(222,145,49)" fg:x="67673" fg:w="235"/><text x="28.2347%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (235 samples, 0.10%)</title><rect x="27.9847%" y="629" width="0.0972%" height="15" fill="rgb(218,121,17)" fg:x="67673" fg:w="235"/><text x="28.2347%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (235 samples, 0.10%)</title><rect x="27.9847%" y="613" width="0.0972%" height="15" fill="rgb(244,50,7)" fg:x="67673" fg:w="235"/><text x="28.2347%" y="623.50"></text></g><g><title>alloc::alloc::alloc (235 samples, 0.10%)</title><rect x="27.9847%" y="597" width="0.0972%" height="15" fill="rgb(246,229,37)" fg:x="67673" fg:w="235"/><text x="28.2347%" y="607.50"></text></g><g><title>mallocx (149 samples, 0.06%)</title><rect x="28.0203%" y="581" width="0.0616%" height="15" fill="rgb(225,18,5)" fg:x="67759" fg:w="149"/><text x="28.2703%" y="591.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (76 samples, 0.03%)</title><rect x="28.0819%" y="613" width="0.0314%" height="15" fill="rgb(213,204,8)" fg:x="67908" fg:w="76"/><text x="28.3319%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.01%)</title><rect x="28.0989%" y="597" width="0.0145%" height="15" fill="rgb(238,103,6)" fg:x="67949" fg:w="35"/><text x="28.3489%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35 samples, 0.01%)</title><rect x="28.0989%" y="581" width="0.0145%" height="15" fill="rgb(222,25,35)" fg:x="67949" fg:w="35"/><text x="28.3489%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (35 samples, 0.01%)</title><rect x="28.0989%" y="565" width="0.0145%" height="15" fill="rgb(213,203,35)" fg:x="67949" fg:w="35"/><text x="28.3489%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35 samples, 0.01%)</title><rect x="28.0989%" y="549" width="0.0145%" height="15" fill="rgb(221,79,53)" fg:x="67949" fg:w="35"/><text x="28.3489%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (84 samples, 0.03%)</title><rect x="28.1134%" y="613" width="0.0347%" height="15" fill="rgb(243,200,35)" fg:x="67984" fg:w="84"/><text x="28.3634%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (84 samples, 0.03%)</title><rect x="28.1134%" y="597" width="0.0347%" height="15" fill="rgb(248,60,25)" fg:x="67984" fg:w="84"/><text x="28.3634%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (84 samples, 0.03%)</title><rect x="28.1134%" y="581" width="0.0347%" height="15" fill="rgb(227,53,46)" fg:x="67984" fg:w="84"/><text x="28.3634%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (84 samples, 0.03%)</title><rect x="28.1134%" y="565" width="0.0347%" height="15" fill="rgb(216,120,32)" fg:x="67984" fg:w="84"/><text x="28.3634%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (84 samples, 0.03%)</title><rect x="28.1134%" y="549" width="0.0347%" height="15" fill="rgb(220,134,1)" fg:x="67984" fg:w="84"/><text x="28.3634%" y="559.50"></text></g><g><title>alloc::alloc::alloc (84 samples, 0.03%)</title><rect x="28.1134%" y="533" width="0.0347%" height="15" fill="rgb(237,168,5)" fg:x="67984" fg:w="84"/><text x="28.3634%" y="543.50"></text></g><g><title>mallocx (55 samples, 0.02%)</title><rect x="28.1253%" y="517" width="0.0227%" height="15" fill="rgb(231,100,33)" fg:x="68013" fg:w="55"/><text x="28.3753%" y="527.50"></text></g><g><title>imalloc (55 samples, 0.02%)</title><rect x="28.1253%" y="501" width="0.0227%" height="15" fill="rgb(236,177,47)" fg:x="68013" fg:w="55"/><text x="28.3753%" y="511.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (1,023 samples, 0.42%)</title><rect x="27.7585%" y="709" width="0.4230%" height="15" fill="rgb(235,7,49)" fg:x="67126" fg:w="1023"/><text x="28.0085%" y="719.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (1,023 samples, 0.42%)</title><rect x="27.7585%" y="693" width="0.4230%" height="15" fill="rgb(232,119,22)" fg:x="67126" fg:w="1023"/><text x="28.0085%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (241 samples, 0.10%)</title><rect x="28.0819%" y="677" width="0.0997%" height="15" fill="rgb(254,73,53)" fg:x="67908" fg:w="241"/><text x="28.3319%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (241 samples, 0.10%)</title><rect x="28.0819%" y="661" width="0.0997%" height="15" fill="rgb(251,35,20)" fg:x="67908" fg:w="241"/><text x="28.3319%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (241 samples, 0.10%)</title><rect x="28.0819%" y="645" width="0.0997%" height="15" fill="rgb(241,119,20)" fg:x="67908" fg:w="241"/><text x="28.3319%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (241 samples, 0.10%)</title><rect x="28.0819%" y="629" width="0.0997%" height="15" fill="rgb(207,102,14)" fg:x="67908" fg:w="241"/><text x="28.3319%" y="639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (81 samples, 0.03%)</title><rect x="28.1481%" y="613" width="0.0335%" height="15" fill="rgb(248,201,50)" fg:x="68068" fg:w="81"/><text x="28.3981%" y="623.50"></text></g><g><title>__rust_alloc (216 samples, 0.09%)</title><rect x="28.2109%" y="629" width="0.0893%" height="15" fill="rgb(222,185,44)" fg:x="68220" fg:w="216"/><text x="28.4609%" y="639.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (216 samples, 0.09%)</title><rect x="28.2109%" y="613" width="0.0893%" height="15" fill="rgb(218,107,18)" fg:x="68220" fg:w="216"/><text x="28.4609%" y="623.50"></text></g><g><title>jemallocator::layout_to_flags (68 samples, 0.03%)</title><rect x="28.2722%" y="597" width="0.0281%" height="15" fill="rgb(237,177,39)" fg:x="68368" fg:w="68"/><text x="28.5222%" y="607.50"></text></g><g><title>iallocztm (61 samples, 0.03%)</title><rect x="28.3003%" y="565" width="0.0252%" height="15" fill="rgb(246,69,6)" fg:x="68436" fg:w="61"/><text x="28.5503%" y="575.50"></text></g><g><title>arena_malloc (61 samples, 0.03%)</title><rect x="28.3003%" y="549" width="0.0252%" height="15" fill="rgb(234,208,37)" fg:x="68436" fg:w="61"/><text x="28.5503%" y="559.50"></text></g><g><title>tcache_alloc_large (61 samples, 0.03%)</title><rect x="28.3003%" y="533" width="0.0252%" height="15" fill="rgb(225,4,6)" fg:x="68436" fg:w="61"/><text x="28.5503%" y="543.50"></text></g><g><title>tcache_event (61 samples, 0.03%)</title><rect x="28.3003%" y="517" width="0.0252%" height="15" fill="rgb(233,45,0)" fg:x="68436" fg:w="61"/><text x="28.5503%" y="527.50"></text></g><g><title>_rjem_je_tcache_event_hard (61 samples, 0.03%)</title><rect x="28.3003%" y="501" width="0.0252%" height="15" fill="rgb(226,136,5)" fg:x="68436" fg:w="61"/><text x="28.5503%" y="511.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (46 samples, 0.02%)</title><rect x="28.3065%" y="485" width="0.0190%" height="15" fill="rgb(211,91,47)" fg:x="68451" fg:w="46"/><text x="28.5565%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,822 samples, 0.75%)</title><rect x="27.7585%" y="725" width="0.7534%" height="15" fill="rgb(242,88,51)" fg:x="67126" fg:w="1822"/><text x="28.0085%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (799 samples, 0.33%)</title><rect x="28.1816%" y="709" width="0.3304%" height="15" fill="rgb(230,91,28)" fg:x="68149" fg:w="799"/><text x="28.4316%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (799 samples, 0.33%)</title><rect x="28.1816%" y="693" width="0.3304%" height="15" fill="rgb(254,186,29)" fg:x="68149" fg:w="799"/><text x="28.4316%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (799 samples, 0.33%)</title><rect x="28.1816%" y="677" width="0.3304%" height="15" fill="rgb(238,6,4)" fg:x="68149" fg:w="799"/><text x="28.4316%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (799 samples, 0.33%)</title><rect x="28.1816%" y="661" width="0.3304%" height="15" fill="rgb(221,151,16)" fg:x="68149" fg:w="799"/><text x="28.4316%" y="671.50"></text></g><g><title>alloc::alloc::alloc (799 samples, 0.33%)</title><rect x="28.1816%" y="645" width="0.3304%" height="15" fill="rgb(251,143,52)" fg:x="68149" fg:w="799"/><text x="28.4316%" y="655.50"></text></g><g><title>mallocx (512 samples, 0.21%)</title><rect x="28.3003%" y="629" width="0.2117%" height="15" fill="rgb(206,90,15)" fg:x="68436" fg:w="512"/><text x="28.5503%" y="639.50"></text></g><g><title>imalloc (512 samples, 0.21%)</title><rect x="28.3003%" y="613" width="0.2117%" height="15" fill="rgb(218,35,8)" fg:x="68436" fg:w="512"/><text x="28.5503%" y="623.50"></text></g><g><title>imalloc_body (512 samples, 0.21%)</title><rect x="28.3003%" y="597" width="0.2117%" height="15" fill="rgb(239,215,6)" fg:x="68436" fg:w="512"/><text x="28.5503%" y="607.50"></text></g><g><title>imalloc_no_sample (512 samples, 0.21%)</title><rect x="28.3003%" y="581" width="0.2117%" height="15" fill="rgb(245,116,39)" fg:x="68436" fg:w="512"/><text x="28.5503%" y="591.50"></text></g><g><title>tcaches_get (451 samples, 0.19%)</title><rect x="28.3255%" y="565" width="0.1865%" height="15" fill="rgb(242,65,28)" fg:x="68497" fg:w="451"/><text x="28.5755%" y="575.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (3,377 samples, 1.40%)</title><rect x="27.1420%" y="741" width="1.3965%" height="15" fill="rgb(252,132,53)" fg:x="65635" fg:w="3377"/><text x="27.3920%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (64 samples, 0.03%)</title><rect x="28.5120%" y="725" width="0.0265%" height="15" fill="rgb(224,159,50)" fg:x="68948" fg:w="64"/><text x="28.7620%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.02%)</title><rect x="28.5223%" y="709" width="0.0161%" height="15" fill="rgb(224,93,4)" fg:x="68973" fg:w="39"/><text x="28.7723%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.02%)</title><rect x="28.5223%" y="693" width="0.0161%" height="15" fill="rgb(208,81,34)" fg:x="68973" fg:w="39"/><text x="28.7723%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.02%)</title><rect x="28.5223%" y="677" width="0.0161%" height="15" fill="rgb(233,92,54)" fg:x="68973" fg:w="39"/><text x="28.7723%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29 samples, 0.01%)</title><rect x="28.5265%" y="661" width="0.0120%" height="15" fill="rgb(237,21,14)" fg:x="68983" fg:w="29"/><text x="28.7765%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.01%)</title><rect x="28.5265%" y="645" width="0.0120%" height="15" fill="rgb(249,128,51)" fg:x="68983" fg:w="29"/><text x="28.7765%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (29 samples, 0.01%)</title><rect x="28.5265%" y="629" width="0.0120%" height="15" fill="rgb(223,129,24)" fg:x="68983" fg:w="29"/><text x="28.7765%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.01%)</title><rect x="28.5265%" y="613" width="0.0120%" height="15" fill="rgb(231,168,25)" fg:x="68983" fg:w="29"/><text x="28.7765%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.01%)</title><rect x="28.5265%" y="597" width="0.0120%" height="15" fill="rgb(224,39,20)" fg:x="68983" fg:w="29"/><text x="28.7765%" y="607.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.01%)</title><rect x="28.5265%" y="581" width="0.0120%" height="15" fill="rgb(225,152,53)" fg:x="68983" fg:w="29"/><text x="28.7765%" y="591.50"></text></g><g><title>__rust_dealloc (290 samples, 0.12%)</title><rect x="28.5385%" y="741" width="0.1199%" height="15" fill="rgb(252,17,24)" fg:x="69012" fg:w="290"/><text x="28.7885%" y="751.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (290 samples, 0.12%)</title><rect x="28.5385%" y="725" width="0.1199%" height="15" fill="rgb(250,114,30)" fg:x="69012" fg:w="290"/><text x="28.7885%" y="735.50"></text></g><g><title>jemallocator::layout_to_flags (121 samples, 0.05%)</title><rect x="28.6084%" y="709" width="0.0500%" height="15" fill="rgb(229,5,4)" fg:x="69181" fg:w="121"/><text x="28.8584%" y="719.50"></text></g><g><title>_rjem_je_tcache_event_hard (60 samples, 0.02%)</title><rect x="28.6584%" y="741" width="0.0248%" height="15" fill="rgb(225,176,49)" fg:x="69302" fg:w="60"/><text x="28.9084%" y="751.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (36 samples, 0.01%)</title><rect x="28.6683%" y="725" width="0.0149%" height="15" fill="rgb(224,221,49)" fg:x="69326" fg:w="36"/><text x="28.9183%" y="735.50"></text></g><g><title>__rust_alloc (232 samples, 0.10%)</title><rect x="28.7593%" y="661" width="0.0959%" height="15" fill="rgb(253,169,27)" fg:x="69546" fg:w="232"/><text x="29.0093%" y="671.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (154 samples, 0.06%)</title><rect x="28.7915%" y="645" width="0.0637%" height="15" fill="rgb(211,206,16)" fg:x="69624" fg:w="154"/><text x="29.0415%" y="655.50"></text></g><g><title>jemallocator::layout_to_flags (93 samples, 0.04%)</title><rect x="28.8168%" y="629" width="0.0385%" height="15" fill="rgb(244,87,35)" fg:x="69685" fg:w="93"/><text x="29.0668%" y="639.50"></text></g><g><title>tcache_alloc_large (62 samples, 0.03%)</title><rect x="28.8552%" y="565" width="0.0256%" height="15" fill="rgb(246,28,10)" fg:x="69778" fg:w="62"/><text x="29.1052%" y="575.50"></text></g><g><title>tcache_event (62 samples, 0.03%)</title><rect x="28.8552%" y="549" width="0.0256%" height="15" fill="rgb(229,12,44)" fg:x="69778" fg:w="62"/><text x="29.1052%" y="559.50"></text></g><g><title>_rjem_je_tcache_event_hard (62 samples, 0.03%)</title><rect x="28.8552%" y="533" width="0.0256%" height="15" fill="rgb(210,145,37)" fg:x="69778" fg:w="62"/><text x="29.1052%" y="543.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (43 samples, 0.02%)</title><rect x="28.8631%" y="517" width="0.0178%" height="15" fill="rgb(227,112,52)" fg:x="69797" fg:w="43"/><text x="29.1131%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (956 samples, 0.40%)</title><rect x="28.6832%" y="741" width="0.3953%" height="15" fill="rgb(238,155,34)" fg:x="69362" fg:w="956"/><text x="28.9332%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (956 samples, 0.40%)</title><rect x="28.6832%" y="725" width="0.3953%" height="15" fill="rgb(239,226,36)" fg:x="69362" fg:w="956"/><text x="28.9332%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (885 samples, 0.37%)</title><rect x="28.7126%" y="709" width="0.3660%" height="15" fill="rgb(230,16,23)" fg:x="69433" fg:w="885"/><text x="28.9626%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (885 samples, 0.37%)</title><rect x="28.7126%" y="693" width="0.3660%" height="15" fill="rgb(236,171,36)" fg:x="69433" fg:w="885"/><text x="28.9626%" y="703.50"></text></g><g><title>alloc::alloc::alloc (885 samples, 0.37%)</title><rect x="28.7126%" y="677" width="0.3660%" height="15" fill="rgb(221,22,14)" fg:x="69433" fg:w="885"/><text x="28.9626%" y="687.50"></text></g><g><title>mallocx (540 samples, 0.22%)</title><rect x="28.8552%" y="661" width="0.2233%" height="15" fill="rgb(242,43,11)" fg:x="69778" fg:w="540"/><text x="29.1052%" y="671.50"></text></g><g><title>imalloc (540 samples, 0.22%)</title><rect x="28.8552%" y="645" width="0.2233%" height="15" fill="rgb(232,69,23)" fg:x="69778" fg:w="540"/><text x="29.1052%" y="655.50"></text></g><g><title>imalloc_body (540 samples, 0.22%)</title><rect x="28.8552%" y="629" width="0.2233%" height="15" fill="rgb(216,180,54)" fg:x="69778" fg:w="540"/><text x="29.1052%" y="639.50"></text></g><g><title>imalloc_no_sample (540 samples, 0.22%)</title><rect x="28.8552%" y="613" width="0.2233%" height="15" fill="rgb(216,5,24)" fg:x="69778" fg:w="540"/><text x="29.1052%" y="623.50"></text></g><g><title>iallocztm (540 samples, 0.22%)</title><rect x="28.8552%" y="597" width="0.2233%" height="15" fill="rgb(225,89,9)" fg:x="69778" fg:w="540"/><text x="29.1052%" y="607.50"></text></g><g><title>arena_malloc (540 samples, 0.22%)</title><rect x="28.8552%" y="581" width="0.2233%" height="15" fill="rgb(243,75,33)" fg:x="69778" fg:w="540"/><text x="29.1052%" y="591.50"></text></g><g><title>tcache_alloc_small (478 samples, 0.20%)</title><rect x="28.8809%" y="565" width="0.1977%" height="15" fill="rgb(247,141,45)" fg:x="69840" fg:w="478"/><text x="29.1309%" y="575.50"></text></g><g><title>cache_bin_alloc_easy (472 samples, 0.20%)</title><rect x="28.8833%" y="549" width="0.1952%" height="15" fill="rgb(232,177,36)" fg:x="69846" fg:w="472"/><text x="29.1333%" y="559.50"></text></g><g><title>core::cmp::PartialEq::ne (31 samples, 0.01%)</title><rect x="29.0785%" y="741" width="0.0128%" height="15" fill="rgb(219,125,36)" fg:x="70318" fg:w="31"/><text x="29.3285%" y="751.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (31 samples, 0.01%)</title><rect x="29.0785%" y="725" width="0.0128%" height="15" fill="rgb(227,94,9)" fg:x="70318" fg:w="31"/><text x="29.3285%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.01%)</title><rect x="29.0984%" y="725" width="0.0103%" height="15" fill="rgb(240,34,52)" fg:x="70366" fg:w="25"/><text x="29.3484%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.01%)</title><rect x="29.0984%" y="709" width="0.0103%" height="15" fill="rgb(216,45,12)" fg:x="70366" fg:w="25"/><text x="29.3484%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.01%)</title><rect x="29.0984%" y="693" width="0.0103%" height="15" fill="rgb(246,21,19)" fg:x="70366" fg:w="25"/><text x="29.3484%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (34 samples, 0.01%)</title><rect x="29.1091%" y="725" width="0.0141%" height="15" fill="rgb(213,98,42)" fg:x="70392" fg:w="34"/><text x="29.3591%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (82 samples, 0.03%)</title><rect x="29.0914%" y="741" width="0.0339%" height="15" fill="rgb(250,136,47)" fg:x="70349" fg:w="82"/><text x="29.3414%" y="751.50"></text></g><g><title>__rust_dealloc (531 samples, 0.22%)</title><rect x="29.4383%" y="709" width="0.2196%" height="15" fill="rgb(251,124,27)" fg:x="71188" fg:w="531"/><text x="29.6883%" y="719.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (531 samples, 0.22%)</title><rect x="29.4383%" y="693" width="0.2196%" height="15" fill="rgb(229,180,14)" fg:x="71188" fg:w="531"/><text x="29.6883%" y="703.50"></text></g><g><title>jemallocator::layout_to_flags (83 samples, 0.03%)</title><rect x="29.6236%" y="677" width="0.0343%" height="15" fill="rgb(245,216,25)" fg:x="71636" fg:w="83"/><text x="29.8736%" y="687.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (29 samples, 0.01%)</title><rect x="29.6604%" y="693" width="0.0120%" height="15" fill="rgb(251,43,5)" fg:x="71725" fg:w="29"/><text x="29.9104%" y="703.50"></text></g><g><title>_rjem_je_tcache_event_hard (42 samples, 0.02%)</title><rect x="29.6579%" y="709" width="0.0174%" height="15" fill="rgb(250,128,24)" fg:x="71719" fg:w="42"/><text x="29.9079%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (118 samples, 0.05%)</title><rect x="29.8254%" y="677" width="0.0488%" height="15" fill="rgb(217,117,27)" fg:x="72124" fg:w="118"/><text x="30.0754%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (129 samples, 0.05%)</title><rect x="29.8229%" y="693" width="0.0533%" height="15" fill="rgb(245,147,4)" fg:x="72118" fg:w="129"/><text x="30.0729%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (526 samples, 0.22%)</title><rect x="29.6753%" y="709" width="0.2175%" height="15" fill="rgb(242,201,35)" fg:x="71761" fg:w="526"/><text x="29.9253%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (40 samples, 0.02%)</title><rect x="29.8762%" y="693" width="0.0165%" height="15" fill="rgb(218,181,1)" fg:x="72247" fg:w="40"/><text x="30.1262%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.02%)</title><rect x="29.8762%" y="677" width="0.0165%" height="15" fill="rgb(222,6,29)" fg:x="72247" fg:w="40"/><text x="30.1262%" y="687.50"></text></g><g><title>inallocx (1,066 samples, 0.44%)</title><rect x="29.8928%" y="693" width="0.4408%" height="15" fill="rgb(208,186,3)" fg:x="72287" fg:w="1066"/><text x="30.1428%" y="703.50"></text></g><g><title>sz_s2u (1,066 samples, 0.44%)</title><rect x="29.8928%" y="677" width="0.4408%" height="15" fill="rgb(216,36,26)" fg:x="72287" fg:w="1066"/><text x="30.1428%" y="687.50"></text></g><g><title>sz_s2u_lookup (1,066 samples, 0.44%)</title><rect x="29.8928%" y="661" width="0.4408%" height="15" fill="rgb(248,201,23)" fg:x="72287" fg:w="1066"/><text x="30.1428%" y="671.50"></text></g><g><title>sz_size2index_lookup (1,066 samples, 0.44%)</title><rect x="29.8928%" y="645" width="0.4408%" height="15" fill="rgb(251,170,31)" fg:x="72287" fg:w="1066"/><text x="30.1428%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (2,207 samples, 0.91%)</title><rect x="29.4218%" y="725" width="0.9127%" height="15" fill="rgb(207,110,25)" fg:x="71148" fg:w="2207"/><text x="29.6718%" y="735.50"></text></g><g><title>sdallocx (1,068 samples, 0.44%)</title><rect x="29.8928%" y="709" width="0.4416%" height="15" fill="rgb(250,54,15)" fg:x="72287" fg:w="1068"/><text x="30.1428%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (2,945 samples, 1.22%)</title><rect x="29.1298%" y="741" width="1.2178%" height="15" fill="rgb(227,68,33)" fg:x="70442" fg:w="2945"/><text x="29.3798%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (32 samples, 0.01%)</title><rect x="30.3344%" y="725" width="0.0132%" height="15" fill="rgb(238,34,41)" fg:x="73355" fg:w="32"/><text x="30.5844%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.01%)</title><rect x="30.3344%" y="709" width="0.0132%" height="15" fill="rgb(220,11,15)" fg:x="73355" fg:w="32"/><text x="30.5844%" y="719.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (373 samples, 0.15%)</title><rect x="30.3477%" y="741" width="0.1542%" height="15" fill="rgb(246,111,35)" fg:x="73387" fg:w="373"/><text x="30.5977%" y="751.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (3,666 samples, 1.52%)</title><rect x="30.5106%" y="741" width="1.5160%" height="15" fill="rgb(209,88,53)" fg:x="73781" fg:w="3666"/><text x="30.7606%" y="751.50"></text></g><g><title>move_vm_runtime::interpreter::check_ability (156 samples, 0.06%)</title><rect x="32.0266%" y="741" width="0.0645%" height="15" fill="rgb(231,185,47)" fg:x="77447" fg:w="156"/><text x="32.2766%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (38 samples, 0.02%)</title><rect x="32.3326%" y="597" width="0.0157%" height="15" fill="rgb(233,154,1)" fg:x="78187" fg:w="38"/><text x="32.5826%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (38 samples, 0.02%)</title><rect x="32.3326%" y="581" width="0.0157%" height="15" fill="rgb(225,15,46)" fg:x="78187" fg:w="38"/><text x="32.5826%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.02%)</title><rect x="32.3326%" y="565" width="0.0157%" height="15" fill="rgb(211,135,41)" fg:x="78187" fg:w="38"/><text x="32.5826%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (38 samples, 0.02%)</title><rect x="32.3326%" y="549" width="0.0157%" height="15" fill="rgb(208,54,0)" fg:x="78187" fg:w="38"/><text x="32.5826%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (38 samples, 0.02%)</title><rect x="32.3326%" y="533" width="0.0157%" height="15" fill="rgb(244,136,14)" fg:x="78187" fg:w="38"/><text x="32.5826%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (38 samples, 0.02%)</title><rect x="32.3326%" y="517" width="0.0157%" height="15" fill="rgb(241,56,14)" fg:x="78187" fg:w="38"/><text x="32.5826%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (38 samples, 0.02%)</title><rect x="32.3326%" y="501" width="0.0157%" height="15" fill="rgb(205,80,24)" fg:x="78187" fg:w="38"/><text x="32.5826%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (38 samples, 0.02%)</title><rect x="32.3326%" y="485" width="0.0157%" height="15" fill="rgb(220,57,4)" fg:x="78187" fg:w="38"/><text x="32.5826%" y="495.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities::{{closure}} (38 samples, 0.02%)</title><rect x="32.3326%" y="469" width="0.0157%" height="15" fill="rgb(226,193,50)" fg:x="78187" fg:w="38"/><text x="32.5826%" y="479.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (38 samples, 0.02%)</title><rect x="32.3326%" y="453" width="0.0157%" height="15" fill="rgb(231,168,22)" fg:x="78187" fg:w="38"/><text x="32.5826%" y="463.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::struct_at (38 samples, 0.02%)</title><rect x="32.3326%" y="437" width="0.0157%" height="15" fill="rgb(254,215,14)" fg:x="78187" fg:w="38"/><text x="32.5826%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (62 samples, 0.03%)</title><rect x="32.3326%" y="725" width="0.0256%" height="15" fill="rgb(211,115,16)" fg:x="78187" fg:w="62"/><text x="32.5826%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (62 samples, 0.03%)</title><rect x="32.3326%" y="709" width="0.0256%" height="15" fill="rgb(236,210,16)" fg:x="78187" fg:w="62"/><text x="32.5826%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (62 samples, 0.03%)</title><rect x="32.3326%" y="693" width="0.0256%" height="15" fill="rgb(221,94,12)" fg:x="78187" fg:w="62"/><text x="32.5826%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (62 samples, 0.03%)</title><rect x="32.3326%" y="677" width="0.0256%" height="15" fill="rgb(235,218,49)" fg:x="78187" fg:w="62"/><text x="32.5826%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (62 samples, 0.03%)</title><rect x="32.3326%" y="661" width="0.0256%" height="15" fill="rgb(217,114,14)" fg:x="78187" fg:w="62"/><text x="32.5826%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (62 samples, 0.03%)</title><rect x="32.3326%" y="645" width="0.0256%" height="15" fill="rgb(216,145,22)" fg:x="78187" fg:w="62"/><text x="32.5826%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (62 samples, 0.03%)</title><rect x="32.3326%" y="629" width="0.0256%" height="15" fill="rgb(217,112,39)" fg:x="78187" fg:w="62"/><text x="32.5826%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (62 samples, 0.03%)</title><rect x="32.3326%" y="613" width="0.0256%" height="15" fill="rgb(225,85,32)" fg:x="78187" fg:w="62"/><text x="32.5826%" y="623.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (68 samples, 0.03%)</title><rect x="32.3582%" y="725" width="0.0281%" height="15" fill="rgb(245,209,47)" fg:x="78249" fg:w="68"/><text x="32.6082%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 0.03%)</title><rect x="32.3582%" y="709" width="0.0281%" height="15" fill="rgb(218,220,15)" fg:x="78249" fg:w="68"/><text x="32.6082%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 0.03%)</title><rect x="32.3582%" y="693" width="0.0281%" height="15" fill="rgb(222,202,31)" fg:x="78249" fg:w="68"/><text x="32.6082%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 0.03%)</title><rect x="32.3582%" y="677" width="0.0281%" height="15" fill="rgb(243,203,4)" fg:x="78249" fg:w="68"/><text x="32.6082%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (68 samples, 0.03%)</title><rect x="32.3582%" y="661" width="0.0281%" height="15" fill="rgb(237,92,17)" fg:x="78249" fg:w="68"/><text x="32.6082%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (718 samples, 0.30%)</title><rect x="32.0911%" y="741" width="0.2969%" height="15" fill="rgb(231,119,7)" fg:x="77603" fg:w="718"/><text x="32.3411%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (47 samples, 0.02%)</title><rect x="32.3946%" y="725" width="0.0194%" height="15" fill="rgb(237,82,41)" fg:x="78337" fg:w="47"/><text x="32.6446%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (60 samples, 0.02%)</title><rect x="32.4645%" y="469" width="0.0248%" height="15" fill="rgb(226,81,48)" fg:x="78506" fg:w="60"/><text x="32.7145%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (60 samples, 0.02%)</title><rect x="32.4645%" y="453" width="0.0248%" height="15" fill="rgb(234,70,51)" fg:x="78506" fg:w="60"/><text x="32.7145%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (87 samples, 0.04%)</title><rect x="32.4645%" y="597" width="0.0360%" height="15" fill="rgb(251,86,4)" fg:x="78506" fg:w="87"/><text x="32.7145%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (87 samples, 0.04%)</title><rect x="32.4645%" y="581" width="0.0360%" height="15" fill="rgb(244,144,28)" fg:x="78506" fg:w="87"/><text x="32.7145%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (87 samples, 0.04%)</title><rect x="32.4645%" y="565" width="0.0360%" height="15" fill="rgb(232,161,39)" fg:x="78506" fg:w="87"/><text x="32.7145%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (87 samples, 0.04%)</title><rect x="32.4645%" y="549" width="0.0360%" height="15" fill="rgb(247,34,51)" fg:x="78506" fg:w="87"/><text x="32.7145%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (87 samples, 0.04%)</title><rect x="32.4645%" y="533" width="0.0360%" height="15" fill="rgb(225,132,2)" fg:x="78506" fg:w="87"/><text x="32.7145%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (87 samples, 0.04%)</title><rect x="32.4645%" y="517" width="0.0360%" height="15" fill="rgb(209,159,44)" fg:x="78506" fg:w="87"/><text x="32.7145%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (87 samples, 0.04%)</title><rect x="32.4645%" y="501" width="0.0360%" height="15" fill="rgb(251,214,1)" fg:x="78506" fg:w="87"/><text x="32.7145%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (87 samples, 0.04%)</title><rect x="32.4645%" y="485" width="0.0360%" height="15" fill="rgb(247,84,47)" fg:x="78506" fg:w="87"/><text x="32.7145%" y="495.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_to_struct::{{closure}} (27 samples, 0.01%)</title><rect x="32.4893%" y="469" width="0.0112%" height="15" fill="rgb(240,111,43)" fg:x="78566" fg:w="27"/><text x="32.7393%" y="479.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (27 samples, 0.01%)</title><rect x="32.4893%" y="453" width="0.0112%" height="15" fill="rgb(215,214,35)" fg:x="78566" fg:w="27"/><text x="32.7393%" y="463.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (25 samples, 0.01%)</title><rect x="32.4901%" y="437" width="0.0103%" height="15" fill="rgb(248,207,23)" fg:x="78568" fg:w="25"/><text x="32.7401%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (144 samples, 0.06%)</title><rect x="32.5005%" y="517" width="0.0595%" height="15" fill="rgb(214,186,4)" fg:x="78593" fg:w="144"/><text x="32.7505%" y="527.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (144 samples, 0.06%)</title><rect x="32.5005%" y="501" width="0.0595%" height="15" fill="rgb(220,133,22)" fg:x="78593" fg:w="144"/><text x="32.7505%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (369 samples, 0.15%)</title><rect x="32.5005%" y="597" width="0.1526%" height="15" fill="rgb(239,134,19)" fg:x="78593" fg:w="369"/><text x="32.7505%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (369 samples, 0.15%)</title><rect x="32.5005%" y="581" width="0.1526%" height="15" fill="rgb(250,140,9)" fg:x="78593" fg:w="369"/><text x="32.7505%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (369 samples, 0.15%)</title><rect x="32.5005%" y="565" width="0.1526%" height="15" fill="rgb(225,59,14)" fg:x="78593" fg:w="369"/><text x="32.7505%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (369 samples, 0.15%)</title><rect x="32.5005%" y="549" width="0.1526%" height="15" fill="rgb(214,152,51)" fg:x="78593" fg:w="369"/><text x="32.7505%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (369 samples, 0.15%)</title><rect x="32.5005%" y="533" width="0.1526%" height="15" fill="rgb(251,227,43)" fg:x="78593" fg:w="369"/><text x="32.7505%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (225 samples, 0.09%)</title><rect x="32.5600%" y="517" width="0.0930%" height="15" fill="rgb(241,96,17)" fg:x="78737" fg:w="225"/><text x="32.8100%" y="527.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (225 samples, 0.09%)</title><rect x="32.5600%" y="501" width="0.0930%" height="15" fill="rgb(234,198,43)" fg:x="78737" fg:w="225"/><text x="32.8100%" y="511.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (223 samples, 0.09%)</title><rect x="32.5609%" y="485" width="0.0922%" height="15" fill="rgb(220,108,29)" fg:x="78739" fg:w="223"/><text x="32.8109%" y="495.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (213 samples, 0.09%)</title><rect x="32.5650%" y="469" width="0.0881%" height="15" fill="rgb(226,163,33)" fg:x="78749" fg:w="213"/><text x="32.8150%" y="479.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (71 samples, 0.03%)</title><rect x="32.6237%" y="453" width="0.0294%" height="15" fill="rgb(205,194,45)" fg:x="78891" fg:w="71"/><text x="32.8737%" y="463.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (71 samples, 0.03%)</title><rect x="32.6237%" y="437" width="0.0294%" height="15" fill="rgb(206,143,44)" fg:x="78891" fg:w="71"/><text x="32.8737%" y="447.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (71 samples, 0.03%)</title><rect x="32.6237%" y="421" width="0.0294%" height="15" fill="rgb(236,136,36)" fg:x="78891" fg:w="71"/><text x="32.8737%" y="431.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_to_struct (698 samples, 0.29%)</title><rect x="32.3946%" y="741" width="0.2886%" height="15" fill="rgb(249,172,42)" fg:x="78337" fg:w="698"/><text x="32.6446%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (651 samples, 0.27%)</title><rect x="32.4141%" y="725" width="0.2692%" height="15" fill="rgb(216,139,23)" fg:x="78384" fg:w="651"/><text x="32.6641%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (651 samples, 0.27%)</title><rect x="32.4141%" y="709" width="0.2692%" height="15" fill="rgb(207,166,20)" fg:x="78384" fg:w="651"/><text x="32.6641%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (650 samples, 0.27%)</title><rect x="32.4145%" y="693" width="0.2688%" height="15" fill="rgb(210,209,22)" fg:x="78385" fg:w="650"/><text x="32.6645%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (529 samples, 0.22%)</title><rect x="32.4645%" y="677" width="0.2188%" height="15" fill="rgb(232,118,20)" fg:x="78506" fg:w="529"/><text x="32.7145%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (529 samples, 0.22%)</title><rect x="32.4645%" y="661" width="0.2188%" height="15" fill="rgb(238,113,42)" fg:x="78506" fg:w="529"/><text x="32.7145%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (529 samples, 0.22%)</title><rect x="32.4645%" y="645" width="0.2188%" height="15" fill="rgb(231,42,5)" fg:x="78506" fg:w="529"/><text x="32.7145%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (529 samples, 0.22%)</title><rect x="32.4645%" y="629" width="0.2188%" height="15" fill="rgb(243,166,24)" fg:x="78506" fg:w="529"/><text x="32.7145%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (529 samples, 0.22%)</title><rect x="32.4645%" y="613" width="0.2188%" height="15" fill="rgb(237,226,12)" fg:x="78506" fg:w="529"/><text x="32.7145%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (73 samples, 0.03%)</title><rect x="32.6531%" y="597" width="0.0302%" height="15" fill="rgb(229,133,24)" fg:x="78962" fg:w="73"/><text x="32.9031%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (73 samples, 0.03%)</title><rect x="32.6531%" y="581" width="0.0302%" height="15" fill="rgb(238,33,43)" fg:x="78962" fg:w="73"/><text x="32.9031%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (73 samples, 0.03%)</title><rect x="32.6531%" y="565" width="0.0302%" height="15" fill="rgb(227,59,38)" fg:x="78962" fg:w="73"/><text x="32.9031%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (73 samples, 0.03%)</title><rect x="32.6531%" y="549" width="0.0302%" height="15" fill="rgb(230,97,0)" fg:x="78962" fg:w="73"/><text x="32.9031%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (73 samples, 0.03%)</title><rect x="32.6531%" y="533" width="0.0302%" height="15" fill="rgb(250,173,50)" fg:x="78962" fg:w="73"/><text x="32.9031%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (73 samples, 0.03%)</title><rect x="32.6531%" y="517" width="0.0302%" height="15" fill="rgb(240,15,50)" fg:x="78962" fg:w="73"/><text x="32.9031%" y="527.50"></text></g><g><title>alloc::alloc::alloc (73 samples, 0.03%)</title><rect x="32.6531%" y="501" width="0.0302%" height="15" fill="rgb(221,93,22)" fg:x="78962" fg:w="73"/><text x="32.9031%" y="511.50"></text></g><g><title>mallocx (49 samples, 0.02%)</title><rect x="32.6630%" y="485" width="0.0203%" height="15" fill="rgb(245,180,53)" fg:x="78986" fg:w="49"/><text x="32.9130%" y="495.50"></text></g><g><title>imalloc (49 samples, 0.02%)</title><rect x="32.6630%" y="469" width="0.0203%" height="15" fill="rgb(231,88,51)" fg:x="78986" fg:w="49"/><text x="32.9130%" y="479.50"></text></g><g><title>imalloc_body (49 samples, 0.02%)</title><rect x="32.6630%" y="453" width="0.0203%" height="15" fill="rgb(240,58,21)" fg:x="78986" fg:w="49"/><text x="32.9130%" y="463.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_field_type (49 samples, 0.02%)</title><rect x="32.6833%" y="741" width="0.0203%" height="15" fill="rgb(237,21,10)" fg:x="79035" fg:w="49"/><text x="32.9333%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_types::loaded_data::runtime_types::StructType&gt;&gt; (30 samples, 0.01%)</title><rect x="32.6911%" y="725" width="0.0124%" height="15" fill="rgb(218,43,11)" fg:x="79054" fg:w="30"/><text x="32.9411%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="32.6911%" y="709" width="0.0124%" height="15" fill="rgb(218,221,29)" fg:x="79054" fg:w="30"/><text x="32.9411%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (30 samples, 0.01%)</title><rect x="32.6911%" y="693" width="0.0124%" height="15" fill="rgb(214,118,42)" fg:x="79054" fg:w="30"/><text x="32.9411%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (30 samples, 0.01%)</title><rect x="32.6911%" y="677" width="0.0124%" height="15" fill="rgb(251,200,26)" fg:x="79054" fg:w="30"/><text x="32.9411%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_struct_fields (28 samples, 0.01%)</title><rect x="32.7035%" y="741" width="0.0116%" height="15" fill="rgb(237,101,39)" fg:x="79084" fg:w="28"/><text x="32.9535%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_struct_type (28 samples, 0.01%)</title><rect x="32.7035%" y="725" width="0.0116%" height="15" fill="rgb(251,117,11)" fg:x="79084" fg:w="28"/><text x="32.9535%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (28 samples, 0.01%)</title><rect x="32.7035%" y="709" width="0.0116%" height="15" fill="rgb(216,223,23)" fg:x="79084" fg:w="28"/><text x="32.9535%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (48 samples, 0.02%)</title><rect x="32.7647%" y="469" width="0.0198%" height="15" fill="rgb(251,54,12)" fg:x="79232" fg:w="48"/><text x="33.0147%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (48 samples, 0.02%)</title><rect x="32.7647%" y="453" width="0.0198%" height="15" fill="rgb(254,176,54)" fg:x="79232" fg:w="48"/><text x="33.0147%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (66 samples, 0.03%)</title><rect x="32.7647%" y="597" width="0.0273%" height="15" fill="rgb(210,32,8)" fg:x="79232" fg:w="66"/><text x="33.0147%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (66 samples, 0.03%)</title><rect x="32.7647%" y="581" width="0.0273%" height="15" fill="rgb(235,52,38)" fg:x="79232" fg:w="66"/><text x="33.0147%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.03%)</title><rect x="32.7647%" y="565" width="0.0273%" height="15" fill="rgb(231,4,44)" fg:x="79232" fg:w="66"/><text x="33.0147%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (66 samples, 0.03%)</title><rect x="32.7647%" y="549" width="0.0273%" height="15" fill="rgb(249,2,32)" fg:x="79232" fg:w="66"/><text x="33.0147%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (66 samples, 0.03%)</title><rect x="32.7647%" y="533" width="0.0273%" height="15" fill="rgb(224,65,26)" fg:x="79232" fg:w="66"/><text x="33.0147%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (66 samples, 0.03%)</title><rect x="32.7647%" y="517" width="0.0273%" height="15" fill="rgb(250,73,40)" fg:x="79232" fg:w="66"/><text x="33.0147%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (66 samples, 0.03%)</title><rect x="32.7647%" y="501" width="0.0273%" height="15" fill="rgb(253,177,16)" fg:x="79232" fg:w="66"/><text x="33.0147%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (66 samples, 0.03%)</title><rect x="32.7647%" y="485" width="0.0273%" height="15" fill="rgb(217,32,34)" fg:x="79232" fg:w="66"/><text x="33.0147%" y="495.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (147 samples, 0.06%)</title><rect x="32.7920%" y="517" width="0.0608%" height="15" fill="rgb(212,7,10)" fg:x="79298" fg:w="147"/><text x="33.0420%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (346 samples, 0.14%)</title><rect x="32.7920%" y="597" width="0.1431%" height="15" fill="rgb(245,89,8)" fg:x="79298" fg:w="346"/><text x="33.0420%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (346 samples, 0.14%)</title><rect x="32.7920%" y="581" width="0.1431%" height="15" fill="rgb(237,16,53)" fg:x="79298" fg:w="346"/><text x="33.0420%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (346 samples, 0.14%)</title><rect x="32.7920%" y="565" width="0.1431%" height="15" fill="rgb(250,204,30)" fg:x="79298" fg:w="346"/><text x="33.0420%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (346 samples, 0.14%)</title><rect x="32.7920%" y="549" width="0.1431%" height="15" fill="rgb(208,77,27)" fg:x="79298" fg:w="346"/><text x="33.0420%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (346 samples, 0.14%)</title><rect x="32.7920%" y="533" width="0.1431%" height="15" fill="rgb(250,204,28)" fg:x="79298" fg:w="346"/><text x="33.0420%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (199 samples, 0.08%)</title><rect x="32.8528%" y="517" width="0.0823%" height="15" fill="rgb(244,63,21)" fg:x="79445" fg:w="199"/><text x="33.1028%" y="527.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (199 samples, 0.08%)</title><rect x="32.8528%" y="501" width="0.0823%" height="15" fill="rgb(236,85,44)" fg:x="79445" fg:w="199"/><text x="33.1028%" y="511.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (197 samples, 0.08%)</title><rect x="32.8536%" y="485" width="0.0815%" height="15" fill="rgb(215,98,4)" fg:x="79447" fg:w="197"/><text x="33.1036%" y="495.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (194 samples, 0.08%)</title><rect x="32.8549%" y="469" width="0.0802%" height="15" fill="rgb(235,38,11)" fg:x="79450" fg:w="194"/><text x="33.1049%" y="479.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (79 samples, 0.03%)</title><rect x="32.9024%" y="453" width="0.0327%" height="15" fill="rgb(254,186,25)" fg:x="79565" fg:w="79"/><text x="33.1524%" y="463.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (79 samples, 0.03%)</title><rect x="32.9024%" y="437" width="0.0327%" height="15" fill="rgb(225,55,31)" fg:x="79565" fg:w="79"/><text x="33.1524%" y="447.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (79 samples, 0.03%)</title><rect x="32.9024%" y="421" width="0.0327%" height="15" fill="rgb(211,15,21)" fg:x="79565" fg:w="79"/><text x="33.1524%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (578 samples, 0.24%)</title><rect x="32.7230%" y="725" width="0.2390%" height="15" fill="rgb(215,187,41)" fg:x="79131" fg:w="578"/><text x="32.9730%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (578 samples, 0.24%)</title><rect x="32.7230%" y="709" width="0.2390%" height="15" fill="rgb(248,69,32)" fg:x="79131" fg:w="578"/><text x="32.9730%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (578 samples, 0.24%)</title><rect x="32.7230%" y="693" width="0.2390%" height="15" fill="rgb(252,102,52)" fg:x="79131" fg:w="578"/><text x="32.9730%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (477 samples, 0.20%)</title><rect x="32.7647%" y="677" width="0.1973%" height="15" fill="rgb(253,140,32)" fg:x="79232" fg:w="477"/><text x="33.0147%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (477 samples, 0.20%)</title><rect x="32.7647%" y="661" width="0.1973%" height="15" fill="rgb(216,56,42)" fg:x="79232" fg:w="477"/><text x="33.0147%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (477 samples, 0.20%)</title><rect x="32.7647%" y="645" width="0.1973%" height="15" fill="rgb(216,184,14)" fg:x="79232" fg:w="477"/><text x="33.0147%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (477 samples, 0.20%)</title><rect x="32.7647%" y="629" width="0.1973%" height="15" fill="rgb(237,187,27)" fg:x="79232" fg:w="477"/><text x="33.0147%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (477 samples, 0.20%)</title><rect x="32.7647%" y="613" width="0.1973%" height="15" fill="rgb(219,65,3)" fg:x="79232" fg:w="477"/><text x="33.0147%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (65 samples, 0.03%)</title><rect x="32.9351%" y="597" width="0.0269%" height="15" fill="rgb(245,83,25)" fg:x="79644" fg:w="65"/><text x="33.1851%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (65 samples, 0.03%)</title><rect x="32.9351%" y="581" width="0.0269%" height="15" fill="rgb(214,205,45)" fg:x="79644" fg:w="65"/><text x="33.1851%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (65 samples, 0.03%)</title><rect x="32.9351%" y="565" width="0.0269%" height="15" fill="rgb(241,20,18)" fg:x="79644" fg:w="65"/><text x="33.1851%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (65 samples, 0.03%)</title><rect x="32.9351%" y="549" width="0.0269%" height="15" fill="rgb(232,163,23)" fg:x="79644" fg:w="65"/><text x="33.1851%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (65 samples, 0.03%)</title><rect x="32.9351%" y="533" width="0.0269%" height="15" fill="rgb(214,5,46)" fg:x="79644" fg:w="65"/><text x="33.1851%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (65 samples, 0.03%)</title><rect x="32.9351%" y="517" width="0.0269%" height="15" fill="rgb(229,78,17)" fg:x="79644" fg:w="65"/><text x="33.1851%" y="527.50"></text></g><g><title>alloc::alloc::alloc (65 samples, 0.03%)</title><rect x="32.9351%" y="501" width="0.0269%" height="15" fill="rgb(248,89,10)" fg:x="79644" fg:w="65"/><text x="33.1851%" y="511.50"></text></g><g><title>mallocx (44 samples, 0.02%)</title><rect x="32.9438%" y="485" width="0.0182%" height="15" fill="rgb(248,54,15)" fg:x="79665" fg:w="44"/><text x="33.1938%" y="495.50"></text></g><g><title>imalloc (44 samples, 0.02%)</title><rect x="32.9438%" y="469" width="0.0182%" height="15" fill="rgb(223,116,6)" fg:x="79665" fg:w="44"/><text x="33.1938%" y="479.50"></text></g><g><title>imalloc_body (44 samples, 0.02%)</title><rect x="32.9438%" y="453" width="0.0182%" height="15" fill="rgb(205,125,38)" fg:x="79665" fg:w="44"/><text x="33.1938%" y="463.50"></text></g><g><title>sz_size2index (40 samples, 0.02%)</title><rect x="32.9454%" y="437" width="0.0165%" height="15" fill="rgb(251,78,38)" fg:x="79669" fg:w="40"/><text x="33.1954%" y="447.50"></text></g><g><title>sz_size2index_lookup (40 samples, 0.02%)</title><rect x="32.9454%" y="421" width="0.0165%" height="15" fill="rgb(253,78,28)" fg:x="79669" fg:w="40"/><text x="33.1954%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.02%)</title><rect x="32.9620%" y="709" width="0.0174%" height="15" fill="rgb(209,120,3)" fg:x="79709" fg:w="42"/><text x="33.2120%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (42 samples, 0.02%)</title><rect x="32.9620%" y="693" width="0.0174%" height="15" fill="rgb(238,229,9)" fg:x="79709" fg:w="42"/><text x="33.2120%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (42 samples, 0.02%)</title><rect x="32.9620%" y="677" width="0.0174%" height="15" fill="rgb(253,159,18)" fg:x="79709" fg:w="42"/><text x="33.2120%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (127 samples, 0.05%)</title><rect x="32.9620%" y="725" width="0.0525%" height="15" fill="rgb(244,42,34)" fg:x="79709" fg:w="127"/><text x="33.2120%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (85 samples, 0.04%)</title><rect x="32.9794%" y="709" width="0.0351%" height="15" fill="rgb(224,8,7)" fg:x="79751" fg:w="85"/><text x="33.2294%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (85 samples, 0.04%)</title><rect x="32.9794%" y="693" width="0.0351%" height="15" fill="rgb(210,201,45)" fg:x="79751" fg:w="85"/><text x="33.2294%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (85 samples, 0.04%)</title><rect x="32.9794%" y="677" width="0.0351%" height="15" fill="rgb(252,185,21)" fg:x="79751" fg:w="85"/><text x="33.2294%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (85 samples, 0.04%)</title><rect x="32.9794%" y="661" width="0.0351%" height="15" fill="rgb(223,131,1)" fg:x="79751" fg:w="85"/><text x="33.2294%" y="671.50"></text></g><g><title>sdallocx (65 samples, 0.03%)</title><rect x="32.9876%" y="645" width="0.0269%" height="15" fill="rgb(245,141,16)" fg:x="79771" fg:w="65"/><text x="33.2376%" y="655.50"></text></g><g><title>isfree (65 samples, 0.03%)</title><rect x="32.9876%" y="629" width="0.0269%" height="15" fill="rgb(229,55,45)" fg:x="79771" fg:w="65"/><text x="33.2376%" y="639.50"></text></g><g><title>isdalloct (65 samples, 0.03%)</title><rect x="32.9876%" y="613" width="0.0269%" height="15" fill="rgb(208,92,15)" fg:x="79771" fg:w="65"/><text x="33.2376%" y="623.50"></text></g><g><title>arena_sdalloc (65 samples, 0.03%)</title><rect x="32.9876%" y="597" width="0.0269%" height="15" fill="rgb(234,185,47)" fg:x="79771" fg:w="65"/><text x="33.2376%" y="607.50"></text></g><g><title>tcache_dalloc_small (65 samples, 0.03%)</title><rect x="32.9876%" y="581" width="0.0269%" height="15" fill="rgb(253,104,50)" fg:x="79771" fg:w="65"/><text x="33.2376%" y="591.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_struct_type (141 samples, 0.06%)</title><rect x="33.0145%" y="725" width="0.0583%" height="15" fill="rgb(205,70,7)" fg:x="79836" fg:w="141"/><text x="33.2645%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (141 samples, 0.06%)</title><rect x="33.0145%" y="709" width="0.0583%" height="15" fill="rgb(240,178,43)" fg:x="79836" fg:w="141"/><text x="33.2645%" y="719.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (141 samples, 0.06%)</title><rect x="33.0145%" y="693" width="0.0583%" height="15" fill="rgb(214,112,2)" fg:x="79836" fg:w="141"/><text x="33.2645%" y="703.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (141 samples, 0.06%)</title><rect x="33.0145%" y="677" width="0.0583%" height="15" fill="rgb(206,46,17)" fg:x="79836" fg:w="141"/><text x="33.2645%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (86 samples, 0.04%)</title><rect x="33.0753%" y="693" width="0.0356%" height="15" fill="rgb(225,220,16)" fg:x="79983" fg:w="86"/><text x="33.3253%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (35 samples, 0.01%)</title><rect x="33.1125%" y="693" width="0.0145%" height="15" fill="rgb(238,65,40)" fg:x="80073" fg:w="35"/><text x="33.3625%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (35 samples, 0.01%)</title><rect x="33.1125%" y="677" width="0.0145%" height="15" fill="rgb(230,151,21)" fg:x="80073" fg:w="35"/><text x="33.3625%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (35 samples, 0.01%)</title><rect x="33.1125%" y="661" width="0.0145%" height="15" fill="rgb(218,58,49)" fg:x="80073" fg:w="35"/><text x="33.3625%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (27 samples, 0.01%)</title><rect x="33.1158%" y="645" width="0.0112%" height="15" fill="rgb(219,179,14)" fg:x="80081" fg:w="27"/><text x="33.3658%" y="655.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field (1,063 samples, 0.44%)</title><rect x="32.7188%" y="741" width="0.4396%" height="15" fill="rgb(223,72,1)" fg:x="79121" fg:w="1063"/><text x="32.9688%" y="751.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (207 samples, 0.09%)</title><rect x="33.0728%" y="725" width="0.0856%" height="15" fill="rgb(238,126,10)" fg:x="79977" fg:w="207"/><text x="33.3228%" y="735.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (201 samples, 0.08%)</title><rect x="33.0753%" y="709" width="0.0831%" height="15" fill="rgb(224,206,38)" fg:x="79983" fg:w="201"/><text x="33.3253%" y="719.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (76 samples, 0.03%)</title><rect x="33.1270%" y="693" width="0.0314%" height="15" fill="rgb(212,201,54)" fg:x="80108" fg:w="76"/><text x="33.3770%" y="703.50"></text></g><g><title>iralloct (26 samples, 0.01%)</title><rect x="33.1903%" y="421" width="0.0108%" height="15" fill="rgb(218,154,48)" fg:x="80261" fg:w="26"/><text x="33.4403%" y="431.50"></text></g><g><title>_rjem_je_arena_ralloc (26 samples, 0.01%)</title><rect x="33.1903%" y="405" width="0.0108%" height="15" fill="rgb(232,93,24)" fg:x="80261" fg:w="26"/><text x="33.4403%" y="415.50"></text></g><g><title>arena_ralloc_move_helper (26 samples, 0.01%)</title><rect x="33.1903%" y="389" width="0.0108%" height="15" fill="rgb(245,30,21)" fg:x="80261" fg:w="26"/><text x="33.4403%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (35 samples, 0.01%)</title><rect x="33.1878%" y="597" width="0.0145%" height="15" fill="rgb(242,148,29)" fg:x="80255" fg:w="35"/><text x="33.4378%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (35 samples, 0.01%)</title><rect x="33.1878%" y="581" width="0.0145%" height="15" fill="rgb(244,153,54)" fg:x="80255" fg:w="35"/><text x="33.4378%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (30 samples, 0.01%)</title><rect x="33.1898%" y="565" width="0.0124%" height="15" fill="rgb(252,87,22)" fg:x="80260" fg:w="30"/><text x="33.4398%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.01%)</title><rect x="33.1898%" y="549" width="0.0124%" height="15" fill="rgb(210,51,29)" fg:x="80260" fg:w="30"/><text x="33.4398%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.01%)</title><rect x="33.1898%" y="533" width="0.0124%" height="15" fill="rgb(242,136,47)" fg:x="80260" fg:w="30"/><text x="33.4398%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.01%)</title><rect x="33.1898%" y="517" width="0.0124%" height="15" fill="rgb(238,68,4)" fg:x="80260" fg:w="30"/><text x="33.4398%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 0.01%)</title><rect x="33.1903%" y="501" width="0.0120%" height="15" fill="rgb(242,161,30)" fg:x="80261" fg:w="29"/><text x="33.4403%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (29 samples, 0.01%)</title><rect x="33.1903%" y="485" width="0.0120%" height="15" fill="rgb(218,58,44)" fg:x="80261" fg:w="29"/><text x="33.4403%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (29 samples, 0.01%)</title><rect x="33.1903%" y="469" width="0.0120%" height="15" fill="rgb(252,125,32)" fg:x="80261" fg:w="29"/><text x="33.4403%" y="479.50"></text></g><g><title>alloc::alloc::realloc (29 samples, 0.01%)</title><rect x="33.1903%" y="453" width="0.0120%" height="15" fill="rgb(219,178,0)" fg:x="80261" fg:w="29"/><text x="33.4403%" y="463.50"></text></g><g><title>rallocx (29 samples, 0.01%)</title><rect x="33.1903%" y="437" width="0.0120%" height="15" fill="rgb(213,152,7)" fg:x="80261" fg:w="29"/><text x="33.4403%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.02%)</title><rect x="33.2022%" y="549" width="0.0194%" height="15" fill="rgb(249,109,34)" fg:x="80290" fg:w="47"/><text x="33.4522%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 0.02%)</title><rect x="33.2022%" y="533" width="0.0194%" height="15" fill="rgb(232,96,21)" fg:x="80290" fg:w="47"/><text x="33.4522%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (47 samples, 0.02%)</title><rect x="33.2022%" y="517" width="0.0194%" height="15" fill="rgb(228,27,39)" fg:x="80290" fg:w="47"/><text x="33.4522%" y="527.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (25 samples, 0.01%)</title><rect x="33.2113%" y="501" width="0.0103%" height="15" fill="rgb(211,182,52)" fg:x="80312" fg:w="25"/><text x="33.4613%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (67 samples, 0.03%)</title><rect x="33.2022%" y="581" width="0.0277%" height="15" fill="rgb(234,178,38)" fg:x="80290" fg:w="67"/><text x="33.4522%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (67 samples, 0.03%)</title><rect x="33.2022%" y="565" width="0.0277%" height="15" fill="rgb(221,111,3)" fg:x="80290" fg:w="67"/><text x="33.4522%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.04%)</title><rect x="33.2022%" y="597" width="0.0368%" height="15" fill="rgb(228,175,21)" fg:x="80290" fg:w="89"/><text x="33.4522%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (186 samples, 0.08%)</title><rect x="33.1712%" y="725" width="0.0769%" height="15" fill="rgb(228,174,43)" fg:x="80215" fg:w="186"/><text x="33.4212%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (186 samples, 0.08%)</title><rect x="33.1712%" y="709" width="0.0769%" height="15" fill="rgb(211,191,0)" fg:x="80215" fg:w="186"/><text x="33.4212%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (186 samples, 0.08%)</title><rect x="33.1712%" y="693" width="0.0769%" height="15" fill="rgb(253,117,3)" fg:x="80215" fg:w="186"/><text x="33.4212%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (173 samples, 0.07%)</title><rect x="33.1766%" y="677" width="0.0715%" height="15" fill="rgb(241,127,19)" fg:x="80228" fg:w="173"/><text x="33.4266%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (173 samples, 0.07%)</title><rect x="33.1766%" y="661" width="0.0715%" height="15" fill="rgb(218,103,12)" fg:x="80228" fg:w="173"/><text x="33.4266%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (173 samples, 0.07%)</title><rect x="33.1766%" y="645" width="0.0715%" height="15" fill="rgb(236,214,43)" fg:x="80228" fg:w="173"/><text x="33.4266%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (162 samples, 0.07%)</title><rect x="33.1812%" y="629" width="0.0670%" height="15" fill="rgb(244,144,19)" fg:x="80239" fg:w="162"/><text x="33.4312%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (146 samples, 0.06%)</title><rect x="33.1878%" y="613" width="0.0604%" height="15" fill="rgb(246,188,10)" fg:x="80255" fg:w="146"/><text x="33.4378%" y="623.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_struct_fields (237 samples, 0.10%)</title><rect x="33.1584%" y="741" width="0.0980%" height="15" fill="rgb(212,193,33)" fg:x="80184" fg:w="237"/><text x="33.4084%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (36 samples, 0.01%)</title><rect x="33.3048%" y="501" width="0.0149%" height="15" fill="rgb(241,51,29)" fg:x="80538" fg:w="36"/><text x="33.5548%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (36 samples, 0.01%)</title><rect x="33.3048%" y="485" width="0.0149%" height="15" fill="rgb(211,58,19)" fg:x="80538" fg:w="36"/><text x="33.5548%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.03%)</title><rect x="33.3048%" y="597" width="0.0298%" height="15" fill="rgb(229,111,26)" fg:x="80538" fg:w="72"/><text x="33.5548%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (72 samples, 0.03%)</title><rect x="33.3048%" y="581" width="0.0298%" height="15" fill="rgb(213,115,40)" fg:x="80538" fg:w="72"/><text x="33.5548%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (72 samples, 0.03%)</title><rect x="33.3048%" y="565" width="0.0298%" height="15" fill="rgb(209,56,44)" fg:x="80538" fg:w="72"/><text x="33.5548%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (72 samples, 0.03%)</title><rect x="33.3048%" y="549" width="0.0298%" height="15" fill="rgb(230,108,32)" fg:x="80538" fg:w="72"/><text x="33.5548%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (72 samples, 0.03%)</title><rect x="33.3048%" y="533" width="0.0298%" height="15" fill="rgb(216,165,31)" fg:x="80538" fg:w="72"/><text x="33.5548%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (72 samples, 0.03%)</title><rect x="33.3048%" y="517" width="0.0298%" height="15" fill="rgb(218,122,21)" fg:x="80538" fg:w="72"/><text x="33.5548%" y="527.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (36 samples, 0.01%)</title><rect x="33.3197%" y="501" width="0.0149%" height="15" fill="rgb(223,224,47)" fg:x="80574" fg:w="36"/><text x="33.5697%" y="511.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (36 samples, 0.01%)</title><rect x="33.3197%" y="485" width="0.0149%" height="15" fill="rgb(238,102,44)" fg:x="80574" fg:w="36"/><text x="33.5697%" y="495.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (35 samples, 0.01%)</title><rect x="33.3201%" y="469" width="0.0145%" height="15" fill="rgb(236,46,40)" fg:x="80575" fg:w="35"/><text x="33.5701%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (144 samples, 0.06%)</title><rect x="33.2837%" y="725" width="0.0595%" height="15" fill="rgb(247,202,50)" fg:x="80487" fg:w="144"/><text x="33.5337%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (144 samples, 0.06%)</title><rect x="33.2837%" y="709" width="0.0595%" height="15" fill="rgb(209,99,20)" fg:x="80487" fg:w="144"/><text x="33.5337%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (144 samples, 0.06%)</title><rect x="33.2837%" y="693" width="0.0595%" height="15" fill="rgb(252,27,34)" fg:x="80487" fg:w="144"/><text x="33.5337%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (113 samples, 0.05%)</title><rect x="33.2965%" y="677" width="0.0467%" height="15" fill="rgb(215,206,23)" fg:x="80518" fg:w="113"/><text x="33.5465%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (113 samples, 0.05%)</title><rect x="33.2965%" y="661" width="0.0467%" height="15" fill="rgb(212,135,36)" fg:x="80518" fg:w="113"/><text x="33.5465%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (113 samples, 0.05%)</title><rect x="33.2965%" y="645" width="0.0467%" height="15" fill="rgb(240,189,1)" fg:x="80518" fg:w="113"/><text x="33.5465%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (113 samples, 0.05%)</title><rect x="33.2965%" y="629" width="0.0467%" height="15" fill="rgb(242,56,20)" fg:x="80518" fg:w="113"/><text x="33.5465%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (113 samples, 0.05%)</title><rect x="33.2965%" y="613" width="0.0467%" height="15" fill="rgb(247,132,33)" fg:x="80518" fg:w="113"/><text x="33.5465%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (52 samples, 0.02%)</title><rect x="33.3433%" y="709" width="0.0215%" height="15" fill="rgb(208,149,11)" fg:x="80631" fg:w="52"/><text x="33.5933%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (52 samples, 0.02%)</title><rect x="33.3433%" y="693" width="0.0215%" height="15" fill="rgb(211,33,11)" fg:x="80631" fg:w="52"/><text x="33.5933%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (52 samples, 0.02%)</title><rect x="33.3433%" y="677" width="0.0215%" height="15" fill="rgb(221,29,38)" fg:x="80631" fg:w="52"/><text x="33.5933%" y="687.50"></text></g><g><title>alloc::alloc::alloc (52 samples, 0.02%)</title><rect x="33.3433%" y="661" width="0.0215%" height="15" fill="rgb(206,182,49)" fg:x="80631" fg:w="52"/><text x="33.5933%" y="671.50"></text></g><g><title>mallocx (30 samples, 0.01%)</title><rect x="33.3524%" y="645" width="0.0124%" height="15" fill="rgb(216,140,1)" fg:x="80653" fg:w="30"/><text x="33.6024%" y="655.50"></text></g><g><title>imalloc (30 samples, 0.01%)</title><rect x="33.3524%" y="629" width="0.0124%" height="15" fill="rgb(232,57,40)" fg:x="80653" fg:w="30"/><text x="33.6024%" y="639.50"></text></g><g><title>imalloc_body (30 samples, 0.01%)</title><rect x="33.3524%" y="613" width="0.0124%" height="15" fill="rgb(224,186,18)" fg:x="80653" fg:w="30"/><text x="33.6024%" y="623.50"></text></g><g><title>imalloc_no_sample (30 samples, 0.01%)</title><rect x="33.3524%" y="597" width="0.0124%" height="15" fill="rgb(215,121,11)" fg:x="80653" fg:w="30"/><text x="33.6024%" y="607.50"></text></g><g><title>iallocztm (30 samples, 0.01%)</title><rect x="33.3524%" y="581" width="0.0124%" height="15" fill="rgb(245,147,10)" fg:x="80653" fg:w="30"/><text x="33.6024%" y="591.50"></text></g><g><title>arena_malloc (30 samples, 0.01%)</title><rect x="33.3524%" y="565" width="0.0124%" height="15" fill="rgb(238,153,13)" fg:x="80653" fg:w="30"/><text x="33.6024%" y="575.50"></text></g><g><title>tcache_alloc_small (29 samples, 0.01%)</title><rect x="33.3528%" y="549" width="0.0120%" height="15" fill="rgb(233,108,0)" fg:x="80654" fg:w="29"/><text x="33.6028%" y="559.50"></text></g><g><title>cache_bin_alloc_easy (29 samples, 0.01%)</title><rect x="33.3528%" y="533" width="0.0120%" height="15" fill="rgb(212,157,17)" fg:x="80654" fg:w="29"/><text x="33.6028%" y="543.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (312 samples, 0.13%)</title><rect x="33.2564%" y="741" width="0.1290%" height="15" fill="rgb(225,213,38)" fg:x="80421" fg:w="312"/><text x="33.5064%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (102 samples, 0.04%)</title><rect x="33.3433%" y="725" width="0.0422%" height="15" fill="rgb(248,16,11)" fg:x="80631" fg:w="102"/><text x="33.5933%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (50 samples, 0.02%)</title><rect x="33.3648%" y="709" width="0.0207%" height="15" fill="rgb(241,33,4)" fg:x="80683" fg:w="50"/><text x="33.6148%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (50 samples, 0.02%)</title><rect x="33.3648%" y="693" width="0.0207%" height="15" fill="rgb(222,26,43)" fg:x="80683" fg:w="50"/><text x="33.6148%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.02%)</title><rect x="33.3648%" y="677" width="0.0207%" height="15" fill="rgb(243,29,36)" fg:x="80683" fg:w="50"/><text x="33.6148%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (50 samples, 0.02%)</title><rect x="33.3648%" y="661" width="0.0207%" height="15" fill="rgb(241,9,27)" fg:x="80683" fg:w="50"/><text x="33.6148%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (50 samples, 0.02%)</title><rect x="33.3648%" y="645" width="0.0207%" height="15" fill="rgb(205,117,26)" fg:x="80683" fg:w="50"/><text x="33.6148%" y="655.50"></text></g><g><title>sdallocx (33 samples, 0.01%)</title><rect x="33.3718%" y="629" width="0.0136%" height="15" fill="rgb(209,80,39)" fg:x="80700" fg:w="33"/><text x="33.6218%" y="639.50"></text></g><g><title>isfree (33 samples, 0.01%)</title><rect x="33.3718%" y="613" width="0.0136%" height="15" fill="rgb(239,155,6)" fg:x="80700" fg:w="33"/><text x="33.6218%" y="623.50"></text></g><g><title>isdalloct (33 samples, 0.01%)</title><rect x="33.3718%" y="597" width="0.0136%" height="15" fill="rgb(212,104,12)" fg:x="80700" fg:w="33"/><text x="33.6218%" y="607.50"></text></g><g><title>arena_sdalloc (33 samples, 0.01%)</title><rect x="33.3718%" y="581" width="0.0136%" height="15" fill="rgb(234,204,3)" fg:x="80700" fg:w="33"/><text x="33.6218%" y="591.50"></text></g><g><title>sz_size2index (33 samples, 0.01%)</title><rect x="33.3718%" y="565" width="0.0136%" height="15" fill="rgb(251,218,7)" fg:x="80700" fg:w="33"/><text x="33.6218%" y="575.50"></text></g><g><title>sz_size2index_lookup (33 samples, 0.01%)</title><rect x="33.3718%" y="549" width="0.0136%" height="15" fill="rgb(221,81,32)" fg:x="80700" fg:w="33"/><text x="33.6218%" y="559.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (52 samples, 0.02%)</title><rect x="33.4930%" y="725" width="0.0215%" height="15" fill="rgb(214,152,26)" fg:x="80993" fg:w="52"/><text x="33.7430%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_single_type (784 samples, 0.32%)</title><rect x="33.3854%" y="741" width="0.3242%" height="15" fill="rgb(223,22,3)" fg:x="80733" fg:w="784"/><text x="33.6354%" y="751.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (472 samples, 0.20%)</title><rect x="33.5145%" y="725" width="0.1952%" height="15" fill="rgb(207,174,7)" fg:x="81045" fg:w="472"/><text x="33.7645%" y="735.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (439 samples, 0.18%)</title><rect x="33.5281%" y="709" width="0.1815%" height="15" fill="rgb(224,19,52)" fg:x="81078" fg:w="439"/><text x="33.7781%" y="719.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (96 samples, 0.04%)</title><rect x="33.6699%" y="693" width="0.0397%" height="15" fill="rgb(228,24,14)" fg:x="81421" fg:w="96"/><text x="33.9199%" y="703.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (96 samples, 0.04%)</title><rect x="33.6699%" y="677" width="0.0397%" height="15" fill="rgb(230,153,43)" fg:x="81421" fg:w="96"/><text x="33.9199%" y="687.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (96 samples, 0.04%)</title><rect x="33.6699%" y="661" width="0.0397%" height="15" fill="rgb(231,106,12)" fg:x="81421" fg:w="96"/><text x="33.9199%" y="671.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (502 samples, 0.21%)</title><rect x="33.7096%" y="741" width="0.2076%" height="15" fill="rgb(215,92,2)" fg:x="81517" fg:w="502"/><text x="33.9596%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (363 samples, 0.15%)</title><rect x="33.7671%" y="725" width="0.1501%" height="15" fill="rgb(249,143,25)" fg:x="81656" fg:w="363"/><text x="34.0171%" y="735.50"></text></g><g><title>core::cmp::PartialEq::ne (363 samples, 0.15%)</title><rect x="33.7671%" y="709" width="0.1501%" height="15" fill="rgb(252,7,35)" fg:x="81656" fg:w="363"/><text x="34.0171%" y="719.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (305 samples, 0.13%)</title><rect x="33.7911%" y="693" width="0.1261%" height="15" fill="rgb(216,69,40)" fg:x="81714" fg:w="305"/><text x="34.0411%" y="703.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_ref_eq (43 samples, 0.02%)</title><rect x="33.9172%" y="741" width="0.0178%" height="15" fill="rgb(240,36,33)" fg:x="82019" fg:w="43"/><text x="34.1672%" y="751.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (30 samples, 0.01%)</title><rect x="33.9226%" y="725" width="0.0124%" height="15" fill="rgb(231,128,14)" fg:x="82032" fg:w="30"/><text x="34.1726%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (30 samples, 0.01%)</title><rect x="33.9226%" y="709" width="0.0124%" height="15" fill="rgb(245,143,14)" fg:x="82032" fg:w="30"/><text x="34.1726%" y="719.50"></text></g><g><title>core::cmp::PartialEq::ne (30 samples, 0.01%)</title><rect x="33.9226%" y="693" width="0.0124%" height="15" fill="rgb(222,130,28)" fg:x="82032" fg:w="30"/><text x="34.1726%" y="703.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (30 samples, 0.01%)</title><rect x="33.9226%" y="677" width="0.0124%" height="15" fill="rgb(212,10,48)" fg:x="82032" fg:w="30"/><text x="34.1726%" y="687.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (154 samples, 0.06%)</title><rect x="34.0235%" y="725" width="0.0637%" height="15" fill="rgb(254,118,45)" fg:x="82276" fg:w="154"/><text x="34.2735%" y="735.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_vec_ref (495 samples, 0.20%)</title><rect x="33.9350%" y="741" width="0.2047%" height="15" fill="rgb(228,6,45)" fg:x="82062" fg:w="495"/><text x="34.1850%" y="751.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (127 samples, 0.05%)</title><rect x="34.0872%" y="725" width="0.0525%" height="15" fill="rgb(241,18,35)" fg:x="82430" fg:w="127"/><text x="34.3372%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (127 samples, 0.05%)</title><rect x="34.0872%" y="709" width="0.0525%" height="15" fill="rgb(227,214,53)" fg:x="82430" fg:w="127"/><text x="34.3372%" y="719.50"></text></g><g><title>core::cmp::PartialEq::ne (127 samples, 0.05%)</title><rect x="34.0872%" y="693" width="0.0525%" height="15" fill="rgb(224,107,51)" fg:x="82430" fg:w="127"/><text x="34.3372%" y="703.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (127 samples, 0.05%)</title><rect x="34.0872%" y="677" width="0.0525%" height="15" fill="rgb(248,60,28)" fg:x="82430" fg:w="127"/><text x="34.3372%" y="687.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::from_const_signature (45 samples, 0.02%)</title><rect x="34.1397%" y="741" width="0.0186%" height="15" fill="rgb(249,101,23)" fg:x="82557" fg:w="45"/><text x="34.3897%" y="751.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (24,226 samples, 10.02%)</title><rect x="24.4813%" y="757" width="10.0182%" height="15" fill="rgb(228,51,19)" fg:x="59201" fg:w="24226"/><text x="24.7313%" y="767.50">move_vm_runtim..</text></g><g><title>sdallocx (825 samples, 0.34%)</title><rect x="34.1583%" y="741" width="0.3412%" height="15" fill="rgb(213,20,6)" fg:x="82602" fg:w="825"/><text x="34.4083%" y="751.50"></text></g><g><title>isfree (825 samples, 0.34%)</title><rect x="34.1583%" y="725" width="0.3412%" height="15" fill="rgb(212,124,10)" fg:x="82602" fg:w="825"/><text x="34.4083%" y="735.50"></text></g><g><title>isdalloct (825 samples, 0.34%)</title><rect x="34.1583%" y="709" width="0.3412%" height="15" fill="rgb(248,3,40)" fg:x="82602" fg:w="825"/><text x="34.4083%" y="719.50"></text></g><g><title>arena_sdalloc (825 samples, 0.34%)</title><rect x="34.1583%" y="693" width="0.3412%" height="15" fill="rgb(223,178,23)" fg:x="82602" fg:w="825"/><text x="34.4083%" y="703.50"></text></g><g><title>tcache_dalloc_small (821 samples, 0.34%)</title><rect x="34.1600%" y="677" width="0.3395%" height="15" fill="rgb(240,132,45)" fg:x="82606" fg:w="821"/><text x="34.4100%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3,458 samples, 1.43%)</title><rect x="34.5698%" y="741" width="1.4300%" height="15" fill="rgb(245,164,36)" fg:x="83597" fg:w="3458"/><text x="34.8198%" y="751.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (28 samples, 0.01%)</title><rect x="36.1466%" y="613" width="0.0116%" height="15" fill="rgb(231,188,53)" fg:x="87410" fg:w="28"/><text x="36.3966%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (56 samples, 0.02%)</title><rect x="36.1408%" y="677" width="0.0232%" height="15" fill="rgb(237,198,39)" fg:x="87396" fg:w="56"/><text x="36.3908%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42 samples, 0.02%)</title><rect x="36.1466%" y="661" width="0.0174%" height="15" fill="rgb(223,120,35)" fg:x="87410" fg:w="42"/><text x="36.3966%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (42 samples, 0.02%)</title><rect x="36.1466%" y="645" width="0.0174%" height="15" fill="rgb(253,107,49)" fg:x="87410" fg:w="42"/><text x="36.3966%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42 samples, 0.02%)</title><rect x="36.1466%" y="629" width="0.0174%" height="15" fill="rgb(216,44,31)" fg:x="87410" fg:w="42"/><text x="36.3966%" y="639.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (67 samples, 0.03%)</title><rect x="36.1408%" y="709" width="0.0277%" height="15" fill="rgb(253,87,21)" fg:x="87396" fg:w="67"/><text x="36.3908%" y="719.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (67 samples, 0.03%)</title><rect x="36.1408%" y="693" width="0.0277%" height="15" fill="rgb(226,18,2)" fg:x="87396" fg:w="67"/><text x="36.3908%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (88 samples, 0.04%)</title><rect x="36.1408%" y="725" width="0.0364%" height="15" fill="rgb(216,8,46)" fg:x="87396" fg:w="88"/><text x="36.3908%" y="735.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (451 samples, 0.19%)</title><rect x="35.9998%" y="741" width="0.1865%" height="15" fill="rgb(226,140,39)" fg:x="87055" fg:w="451"/><text x="36.2498%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (34 samples, 0.01%)</title><rect x="36.3335%" y="709" width="0.0141%" height="15" fill="rgb(221,194,54)" fg:x="87862" fg:w="34"/><text x="36.5835%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (55 samples, 0.02%)</title><rect x="36.3322%" y="725" width="0.0227%" height="15" fill="rgb(213,92,11)" fg:x="87859" fg:w="55"/><text x="36.5822%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (394 samples, 0.16%)</title><rect x="36.1937%" y="741" width="0.1629%" height="15" fill="rgb(229,162,46)" fg:x="87524" fg:w="394"/><text x="36.4437%" y="751.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (174 samples, 0.07%)</title><rect x="36.3566%" y="741" width="0.0720%" height="15" fill="rgb(214,111,36)" fg:x="87918" fg:w="174"/><text x="36.6066%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (174 samples, 0.07%)</title><rect x="36.3566%" y="725" width="0.0720%" height="15" fill="rgb(207,6,21)" fg:x="87918" fg:w="174"/><text x="36.6066%" y="735.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (29 samples, 0.01%)</title><rect x="36.4480%" y="725" width="0.0120%" height="15" fill="rgb(213,127,38)" fg:x="88139" fg:w="29"/><text x="36.6980%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.01%)</title><rect x="36.4480%" y="709" width="0.0120%" height="15" fill="rgb(238,118,32)" fg:x="88139" fg:w="29"/><text x="36.6980%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.01%)</title><rect x="36.4480%" y="693" width="0.0120%" height="15" fill="rgb(240,139,39)" fg:x="88139" fg:w="29"/><text x="36.6980%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.01%)</title><rect x="36.4480%" y="677" width="0.0120%" height="15" fill="rgb(235,10,37)" fg:x="88139" fg:w="29"/><text x="36.6980%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (29 samples, 0.01%)</title><rect x="36.4480%" y="661" width="0.0120%" height="15" fill="rgb(249,171,38)" fg:x="88139" fg:w="29"/><text x="36.6980%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (93 samples, 0.04%)</title><rect x="36.4286%" y="741" width="0.0385%" height="15" fill="rgb(242,144,32)" fg:x="88092" fg:w="93"/><text x="36.6786%" y="751.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (258 samples, 0.11%)</title><rect x="36.4671%" y="741" width="0.1067%" height="15" fill="rgb(217,117,21)" fg:x="88185" fg:w="258"/><text x="36.7171%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (199 samples, 0.08%)</title><rect x="36.4915%" y="725" width="0.0823%" height="15" fill="rgb(249,87,1)" fg:x="88244" fg:w="199"/><text x="36.7415%" y="735.50"></text></g><g><title>core::cmp::PartialEq::ne (199 samples, 0.08%)</title><rect x="36.4915%" y="709" width="0.0823%" height="15" fill="rgb(248,196,48)" fg:x="88244" fg:w="199"/><text x="36.7415%" y="719.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (169 samples, 0.07%)</title><rect x="36.5039%" y="693" width="0.0699%" height="15" fill="rgb(251,206,33)" fg:x="88274" fg:w="169"/><text x="36.7539%" y="703.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::is_invalid (280 samples, 0.12%)</title><rect x="36.5737%" y="741" width="0.1158%" height="15" fill="rgb(232,141,28)" fg:x="88443" fg:w="280"/><text x="36.8237%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (280 samples, 0.12%)</title><rect x="36.5737%" y="725" width="0.1158%" height="15" fill="rgb(209,167,14)" fg:x="88443" fg:w="280"/><text x="36.8237%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (280 samples, 0.12%)</title><rect x="36.5737%" y="709" width="0.1158%" height="15" fill="rgb(225,11,50)" fg:x="88443" fg:w="280"/><text x="36.8237%" y="719.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (280 samples, 0.12%)</title><rect x="36.5737%" y="693" width="0.1158%" height="15" fill="rgb(209,50,20)" fg:x="88443" fg:w="280"/><text x="36.8237%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (280 samples, 0.12%)</title><rect x="36.5737%" y="677" width="0.1158%" height="15" fill="rgb(212,17,46)" fg:x="88443" fg:w="280"/><text x="36.8237%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (280 samples, 0.12%)</title><rect x="36.5737%" y="661" width="0.1158%" height="15" fill="rgb(216,101,39)" fg:x="88443" fg:w="280"/><text x="36.8237%" y="671.50"></text></g><g><title>core::mem::replace (280 samples, 0.12%)</title><rect x="36.5737%" y="645" width="0.1158%" height="15" fill="rgb(212,228,48)" fg:x="88443" fg:w="280"/><text x="36.8237%" y="655.50"></text></g><g><title>core::ptr::write (280 samples, 0.12%)</title><rect x="36.5737%" y="629" width="0.1158%" height="15" fill="rgb(250,6,50)" fg:x="88443" fg:w="280"/><text x="36.8237%" y="639.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (5,327 samples, 2.20%)</title><rect x="34.4995%" y="757" width="2.2029%" height="15" fill="rgb(250,160,48)" fg:x="83427" fg:w="5327"/><text x="34.7495%" y="767.50">m..</text></g><g><title>sdallocx (31 samples, 0.01%)</title><rect x="36.6895%" y="741" width="0.0128%" height="15" fill="rgb(244,216,33)" fg:x="88723" fg:w="31"/><text x="36.9395%" y="751.50"></text></g><g><title>tsd_fetch (31 samples, 0.01%)</title><rect x="36.6895%" y="725" width="0.0128%" height="15" fill="rgb(207,157,5)" fg:x="88723" fg:w="31"/><text x="36.9395%" y="735.50"></text></g><g><title>tsd_fetch_impl (31 samples, 0.01%)</title><rect x="36.6895%" y="709" width="0.0128%" height="15" fill="rgb(228,199,8)" fg:x="88723" fg:w="31"/><text x="36.9395%" y="719.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool::{{closure}} (298 samples, 0.12%)</title><rect x="37.3839%" y="725" width="0.1232%" height="15" fill="rgb(227,80,20)" fg:x="90402" fg:w="298"/><text x="37.6339%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (298 samples, 0.12%)</title><rect x="37.3839%" y="709" width="0.1232%" height="15" fill="rgb(222,9,33)" fg:x="90402" fg:w="298"/><text x="37.6339%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::lt (94 samples, 0.04%)</title><rect x="37.4682%" y="693" width="0.0389%" height="15" fill="rgb(239,44,28)" fg:x="90606" fg:w="94"/><text x="37.7182%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (686 samples, 0.28%)</title><rect x="37.5071%" y="709" width="0.2837%" height="15" fill="rgb(249,187,43)" fg:x="90700" fg:w="686"/><text x="37.7571%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (58 samples, 0.02%)</title><rect x="37.7908%" y="693" width="0.0240%" height="15" fill="rgb(216,141,28)" fg:x="91386" fg:w="58"/><text x="38.0408%" y="703.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (260 samples, 0.11%)</title><rect x="37.7908%" y="709" width="0.1075%" height="15" fill="rgb(230,154,53)" fg:x="91386" fg:w="260"/><text x="38.0408%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (202 samples, 0.08%)</title><rect x="37.8147%" y="693" width="0.0835%" height="15" fill="rgb(227,82,4)" fg:x="91444" fg:w="202"/><text x="38.0647%" y="703.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (1,309 samples, 0.54%)</title><rect x="37.5071%" y="725" width="0.5413%" height="15" fill="rgb(220,107,16)" fg:x="90700" fg:w="1309"/><text x="37.7571%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (363 samples, 0.15%)</title><rect x="37.8983%" y="709" width="0.1501%" height="15" fill="rgb(207,187,2)" fg:x="91646" fg:w="363"/><text x="38.1483%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (297 samples, 0.12%)</title><rect x="37.9256%" y="693" width="0.1228%" height="15" fill="rgb(210,162,52)" fg:x="91712" fg:w="297"/><text x="38.1756%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (62 samples, 0.03%)</title><rect x="38.0228%" y="677" width="0.0256%" height="15" fill="rgb(217,216,49)" fg:x="91947" fg:w="62"/><text x="38.2728%" y="687.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool (3,979 samples, 1.65%)</title><rect x="36.7024%" y="757" width="1.6454%" height="15" fill="rgb(218,146,49)" fg:x="88754" fg:w="3979"/><text x="36.9524%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (3,979 samples, 1.65%)</title><rect x="36.7024%" y="741" width="1.6454%" height="15" fill="rgb(216,55,40)" fg:x="88754" fg:w="3979"/><text x="36.9524%" y="751.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (724 samples, 0.30%)</title><rect x="38.0484%" y="725" width="0.2994%" height="15" fill="rgb(208,196,21)" fg:x="92009" fg:w="724"/><text x="38.2984%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (724 samples, 0.30%)</title><rect x="38.0484%" y="709" width="0.2994%" height="15" fill="rgb(242,117,42)" fg:x="92009" fg:w="724"/><text x="38.2984%" y="719.50"></text></g><g><title>core::ptr::write (724 samples, 0.30%)</title><rect x="38.0484%" y="693" width="0.2994%" height="15" fill="rgb(210,11,23)" fg:x="92009" fg:w="724"/><text x="38.2984%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (834 samples, 0.34%)</title><rect x="38.3478%" y="709" width="0.3449%" height="15" fill="rgb(217,110,2)" fg:x="92733" fg:w="834"/><text x="38.5978%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::add_checked (50 samples, 0.02%)</title><rect x="38.7063%" y="693" width="0.0207%" height="15" fill="rgb(229,77,54)" fg:x="93600" fg:w="50"/><text x="38.9563%" y="703.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int::{{closure}} (961 samples, 0.40%)</title><rect x="38.3478%" y="725" width="0.3974%" height="15" fill="rgb(218,53,16)" fg:x="92733" fg:w="961"/><text x="38.5978%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (127 samples, 0.05%)</title><rect x="38.6927%" y="709" width="0.0525%" height="15" fill="rgb(215,38,13)" fg:x="93567" fg:w="127"/><text x="38.9427%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::sub_checked (27 samples, 0.01%)</title><rect x="38.7340%" y="693" width="0.0112%" height="15" fill="rgb(235,42,18)" fg:x="93667" fg:w="27"/><text x="38.9840%" y="703.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (109 samples, 0.05%)</title><rect x="38.7845%" y="709" width="0.0451%" height="15" fill="rgb(219,66,54)" fg:x="93789" fg:w="109"/><text x="39.0345%" y="719.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (611 samples, 0.25%)</title><rect x="38.7452%" y="725" width="0.2527%" height="15" fill="rgb(222,205,4)" fg:x="93694" fg:w="611"/><text x="38.9952%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (407 samples, 0.17%)</title><rect x="38.8295%" y="709" width="0.1683%" height="15" fill="rgb(227,213,46)" fg:x="93898" fg:w="407"/><text x="39.0795%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (136 samples, 0.06%)</title><rect x="38.9416%" y="693" width="0.0562%" height="15" fill="rgb(250,145,42)" fg:x="94169" fg:w="136"/><text x="39.1916%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (32 samples, 0.01%)</title><rect x="38.9846%" y="677" width="0.0132%" height="15" fill="rgb(219,15,2)" fg:x="94273" fg:w="32"/><text x="39.2346%" y="687.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (1,847 samples, 0.76%)</title><rect x="38.3478%" y="757" width="0.7638%" height="15" fill="rgb(231,181,52)" fg:x="92733" fg:w="1847"/><text x="38.5978%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (1,847 samples, 0.76%)</title><rect x="38.3478%" y="741" width="0.7638%" height="15" fill="rgb(235,1,42)" fg:x="92733" fg:w="1847"/><text x="38.5978%" y="751.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (275 samples, 0.11%)</title><rect x="38.9979%" y="725" width="0.1137%" height="15" fill="rgb(249,88,27)" fg:x="94305" fg:w="275"/><text x="39.2479%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (275 samples, 0.11%)</title><rect x="38.9979%" y="709" width="0.1137%" height="15" fill="rgb(235,145,16)" fg:x="94305" fg:w="275"/><text x="39.2479%" y="719.50"></text></g><g><title>core::ptr::write (275 samples, 0.11%)</title><rect x="38.9979%" y="693" width="0.1137%" height="15" fill="rgb(237,114,19)" fg:x="94305" fg:w="275"/><text x="39.2479%" y="703.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (52 samples, 0.02%)</title><rect x="39.1298%" y="645" width="0.0215%" height="15" fill="rgb(238,51,50)" fg:x="94624" fg:w="52"/><text x="39.3798%" y="655.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (68 samples, 0.03%)</title><rect x="39.1298%" y="709" width="0.0281%" height="15" fill="rgb(205,194,25)" fg:x="94624" fg:w="68"/><text x="39.3798%" y="719.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (68 samples, 0.03%)</title><rect x="39.1298%" y="693" width="0.0281%" height="15" fill="rgb(215,203,17)" fg:x="94624" fg:w="68"/><text x="39.3798%" y="703.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (68 samples, 0.03%)</title><rect x="39.1298%" y="677" width="0.0281%" height="15" fill="rgb(233,112,49)" fg:x="94624" fg:w="68"/><text x="39.3798%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::GlobalValue::view::Wrapper as move_vm_types::views::ValueView&gt;::visit (68 samples, 0.03%)</title><rect x="39.1298%" y="661" width="0.0281%" height="15" fill="rgb(241,130,26)" fg:x="94624" fg:w="68"/><text x="39.3798%" y="671.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_load_resource (98 samples, 0.04%)</title><rect x="39.1198%" y="725" width="0.0405%" height="15" fill="rgb(252,223,19)" fg:x="94600" fg:w="98"/><text x="39.3698%" y="735.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (37 samples, 0.02%)</title><rect x="39.1678%" y="613" width="0.0153%" height="15" fill="rgb(211,95,25)" fg:x="94716" fg:w="37"/><text x="39.4178%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.01%)</title><rect x="39.1715%" y="597" width="0.0116%" height="15" fill="rgb(251,182,27)" fg:x="94725" fg:w="28"/><text x="39.4215%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (58 samples, 0.02%)</title><rect x="39.1678%" y="677" width="0.0240%" height="15" fill="rgb(238,24,4)" fg:x="94716" fg:w="58"/><text x="39.4178%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (58 samples, 0.02%)</title><rect x="39.1678%" y="661" width="0.0240%" height="15" fill="rgb(224,220,25)" fg:x="94716" fg:w="58"/><text x="39.4178%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (58 samples, 0.02%)</title><rect x="39.1678%" y="645" width="0.0240%" height="15" fill="rgb(239,133,26)" fg:x="94716" fg:w="58"/><text x="39.4178%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (58 samples, 0.02%)</title><rect x="39.1678%" y="629" width="0.0240%" height="15" fill="rgb(211,94,48)" fg:x="94716" fg:w="58"/><text x="39.4178%" y="639.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (74 samples, 0.03%)</title><rect x="39.1678%" y="693" width="0.0306%" height="15" fill="rgb(239,87,6)" fg:x="94716" fg:w="74"/><text x="39.4178%" y="703.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (44 samples, 0.02%)</title><rect x="39.2141%" y="597" width="0.0182%" height="15" fill="rgb(227,62,0)" fg:x="94828" fg:w="44"/><text x="39.4641%" y="607.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (44 samples, 0.02%)</title><rect x="39.2141%" y="581" width="0.0182%" height="15" fill="rgb(211,226,4)" fg:x="94828" fg:w="44"/><text x="39.4641%" y="591.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (44 samples, 0.02%)</title><rect x="39.2141%" y="565" width="0.0182%" height="15" fill="rgb(253,38,52)" fg:x="94828" fg:w="44"/><text x="39.4641%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (44 samples, 0.02%)</title><rect x="39.2141%" y="549" width="0.0182%" height="15" fill="rgb(229,126,40)" fg:x="94828" fg:w="44"/><text x="39.4641%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (44 samples, 0.02%)</title><rect x="39.2141%" y="533" width="0.0182%" height="15" fill="rgb(229,165,44)" fg:x="94828" fg:w="44"/><text x="39.4641%" y="543.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (111 samples, 0.05%)</title><rect x="39.1997%" y="677" width="0.0459%" height="15" fill="rgb(247,95,47)" fg:x="94793" fg:w="111"/><text x="39.4497%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (85 samples, 0.04%)</title><rect x="39.2104%" y="661" width="0.0351%" height="15" fill="rgb(216,140,30)" fg:x="94819" fg:w="85"/><text x="39.4604%" y="671.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (85 samples, 0.04%)</title><rect x="39.2104%" y="645" width="0.0351%" height="15" fill="rgb(246,214,8)" fg:x="94819" fg:w="85"/><text x="39.4604%" y="655.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (84 samples, 0.03%)</title><rect x="39.2108%" y="629" width="0.0347%" height="15" fill="rgb(227,224,15)" fg:x="94820" fg:w="84"/><text x="39.4608%" y="639.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (84 samples, 0.03%)</title><rect x="39.2108%" y="613" width="0.0347%" height="15" fill="rgb(233,175,4)" fg:x="94820" fg:w="84"/><text x="39.4608%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (32 samples, 0.01%)</title><rect x="39.2323%" y="597" width="0.0132%" height="15" fill="rgb(221,66,45)" fg:x="94872" fg:w="32"/><text x="39.4823%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (32 samples, 0.01%)</title><rect x="39.2323%" y="581" width="0.0132%" height="15" fill="rgb(221,178,18)" fg:x="94872" fg:w="32"/><text x="39.4823%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (32 samples, 0.01%)</title><rect x="39.2323%" y="565" width="0.0132%" height="15" fill="rgb(213,81,29)" fg:x="94872" fg:w="32"/><text x="39.4823%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (32 samples, 0.01%)</title><rect x="39.2323%" y="549" width="0.0132%" height="15" fill="rgb(220,89,49)" fg:x="94872" fg:w="32"/><text x="39.4823%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (32 samples, 0.01%)</title><rect x="39.2323%" y="533" width="0.0132%" height="15" fill="rgb(227,60,33)" fg:x="94872" fg:w="32"/><text x="39.4823%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (27 samples, 0.01%)</title><rect x="39.2344%" y="517" width="0.0112%" height="15" fill="rgb(205,113,12)" fg:x="94877" fg:w="27"/><text x="39.4844%" y="527.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (27 samples, 0.01%)</title><rect x="39.2344%" y="501" width="0.0112%" height="15" fill="rgb(211,32,1)" fg:x="94877" fg:w="27"/><text x="39.4844%" y="511.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (25 samples, 0.01%)</title><rect x="39.2456%" y="677" width="0.0103%" height="15" fill="rgb(246,2,12)" fg:x="94904" fg:w="25"/><text x="39.4956%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.01%)</title><rect x="39.2456%" y="661" width="0.0103%" height="15" fill="rgb(243,37,27)" fg:x="94904" fg:w="25"/><text x="39.4956%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.01%)</title><rect x="39.2456%" y="645" width="0.0103%" height="15" fill="rgb(248,211,31)" fg:x="94904" fg:w="25"/><text x="39.4956%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.01%)</title><rect x="39.2456%" y="629" width="0.0103%" height="15" fill="rgb(242,146,47)" fg:x="94904" fg:w="25"/><text x="39.4956%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.01%)</title><rect x="39.2456%" y="613" width="0.0103%" height="15" fill="rgb(206,70,20)" fg:x="94904" fg:w="25"/><text x="39.4956%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.01%)</title><rect x="39.2456%" y="597" width="0.0103%" height="15" fill="rgb(215,10,51)" fg:x="94904" fg:w="25"/><text x="39.4956%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.01%)</title><rect x="39.2456%" y="581" width="0.0103%" height="15" fill="rgb(243,178,53)" fg:x="94904" fg:w="25"/><text x="39.4956%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (25 samples, 0.01%)</title><rect x="39.2456%" y="565" width="0.0103%" height="15" fill="rgb(233,221,20)" fg:x="94904" fg:w="25"/><text x="39.4956%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.01%)</title><rect x="39.2456%" y="549" width="0.0103%" height="15" fill="rgb(218,95,35)" fg:x="94904" fg:w="25"/><text x="39.4956%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.01%)</title><rect x="39.2456%" y="533" width="0.0103%" height="15" fill="rgb(229,13,5)" fg:x="94904" fg:w="25"/><text x="39.4956%" y="543.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.01%)</title><rect x="39.2456%" y="517" width="0.0103%" height="15" fill="rgb(252,164,30)" fg:x="94904" fg:w="25"/><text x="39.4956%" y="527.50"></text></g><g><title>aptos_block_executor::data_cache::StorageAdapter&lt;S&gt;::get (147 samples, 0.06%)</title><rect x="39.1984%" y="693" width="0.0608%" height="15" fill="rgb(232,68,36)" fg:x="94790" fg:w="147"/><text x="39.4484%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (101 samples, 0.04%)</title><rect x="39.2960%" y="309" width="0.0418%" height="15" fill="rgb(219,59,54)" fg:x="95026" fg:w="101"/><text x="39.5460%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (98 samples, 0.04%)</title><rect x="39.2972%" y="293" width="0.0405%" height="15" fill="rgb(250,92,33)" fg:x="95029" fg:w="98"/><text x="39.5472%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (98 samples, 0.04%)</title><rect x="39.2972%" y="277" width="0.0405%" height="15" fill="rgb(229,162,54)" fg:x="95029" fg:w="98"/><text x="39.5472%" y="287.50"></text></g><g><title>alloc::alloc::realloc (98 samples, 0.04%)</title><rect x="39.2972%" y="261" width="0.0405%" height="15" fill="rgb(244,114,52)" fg:x="95029" fg:w="98"/><text x="39.5472%" y="271.50"></text></g><g><title>rallocx (88 samples, 0.04%)</title><rect x="39.3014%" y="245" width="0.0364%" height="15" fill="rgb(212,211,43)" fg:x="95039" fg:w="88"/><text x="39.5514%" y="255.50"></text></g><g><title>iralloct (36 samples, 0.01%)</title><rect x="39.3229%" y="229" width="0.0149%" height="15" fill="rgb(226,147,8)" fg:x="95091" fg:w="36"/><text x="39.5729%" y="239.50"></text></g><g><title>_rjem_je_arena_ralloc (35 samples, 0.01%)</title><rect x="39.3233%" y="213" width="0.0145%" height="15" fill="rgb(226,23,13)" fg:x="95092" fg:w="35"/><text x="39.5733%" y="223.50"></text></g><g><title>arena_ralloc_move_helper (28 samples, 0.01%)</title><rect x="39.3262%" y="197" width="0.0116%" height="15" fill="rgb(240,63,4)" fg:x="95099" fg:w="28"/><text x="39.5762%" y="207.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (126 samples, 0.05%)</title><rect x="39.2873%" y="549" width="0.0521%" height="15" fill="rgb(221,1,32)" fg:x="95005" fg:w="126"/><text x="39.5373%" y="559.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (126 samples, 0.05%)</title><rect x="39.2873%" y="533" width="0.0521%" height="15" fill="rgb(242,117,10)" fg:x="95005" fg:w="126"/><text x="39.5373%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (126 samples, 0.05%)</title><rect x="39.2873%" y="517" width="0.0521%" height="15" fill="rgb(249,172,44)" fg:x="95005" fg:w="126"/><text x="39.5373%" y="527.50"></text></g><g><title> 32]&gt;::serialize (126 samples, 0.05%)</title><rect x="39.2873%" y="501" width="0.0521%" height="15" fill="rgb(244,46,45)" fg:x="95005" fg:w="126"/><text x="39.5373%" y="511.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (126 samples, 0.05%)</title><rect x="39.2873%" y="485" width="0.0521%" height="15" fill="rgb(206,43,17)" fg:x="95005" fg:w="126"/><text x="39.5373%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (126 samples, 0.05%)</title><rect x="39.2873%" y="469" width="0.0521%" height="15" fill="rgb(239,218,39)" fg:x="95005" fg:w="126"/><text x="39.5373%" y="479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (126 samples, 0.05%)</title><rect x="39.2873%" y="453" width="0.0521%" height="15" fill="rgb(208,169,54)" fg:x="95005" fg:w="126"/><text x="39.5373%" y="463.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (126 samples, 0.05%)</title><rect x="39.2873%" y="437" width="0.0521%" height="15" fill="rgb(247,25,42)" fg:x="95005" fg:w="126"/><text x="39.5373%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (126 samples, 0.05%)</title><rect x="39.2873%" y="421" width="0.0521%" height="15" fill="rgb(226,23,31)" fg:x="95005" fg:w="126"/><text x="39.5373%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (126 samples, 0.05%)</title><rect x="39.2873%" y="405" width="0.0521%" height="15" fill="rgb(247,16,28)" fg:x="95005" fg:w="126"/><text x="39.5373%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (126 samples, 0.05%)</title><rect x="39.2873%" y="389" width="0.0521%" height="15" fill="rgb(231,147,38)" fg:x="95005" fg:w="126"/><text x="39.5373%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (126 samples, 0.05%)</title><rect x="39.2873%" y="373" width="0.0521%" height="15" fill="rgb(253,81,48)" fg:x="95005" fg:w="126"/><text x="39.5373%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (126 samples, 0.05%)</title><rect x="39.2873%" y="357" width="0.0521%" height="15" fill="rgb(249,222,43)" fg:x="95005" fg:w="126"/><text x="39.5373%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (105 samples, 0.04%)</title><rect x="39.2960%" y="341" width="0.0434%" height="15" fill="rgb(221,3,27)" fg:x="95026" fg:w="105"/><text x="39.5460%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (105 samples, 0.04%)</title><rect x="39.2960%" y="325" width="0.0434%" height="15" fill="rgb(228,180,5)" fg:x="95026" fg:w="105"/><text x="39.5460%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (36 samples, 0.01%)</title><rect x="39.3576%" y="101" width="0.0149%" height="15" fill="rgb(227,131,42)" fg:x="95175" fg:w="36"/><text x="39.6076%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (35 samples, 0.01%)</title><rect x="39.3580%" y="85" width="0.0145%" height="15" fill="rgb(212,3,39)" fg:x="95176" fg:w="35"/><text x="39.6080%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (35 samples, 0.01%)</title><rect x="39.3580%" y="69" width="0.0145%" height="15" fill="rgb(226,45,5)" fg:x="95176" fg:w="35"/><text x="39.6080%" y="79.50"></text></g><g><title>alloc::alloc::realloc (35 samples, 0.01%)</title><rect x="39.3580%" y="53" width="0.0145%" height="15" fill="rgb(215,167,45)" fg:x="95176" fg:w="35"/><text x="39.6080%" y="63.50"></text></g><g><title>rallocx (31 samples, 0.01%)</title><rect x="39.3597%" y="37" width="0.0128%" height="15" fill="rgb(250,218,53)" fg:x="95180" fg:w="31"/><text x="39.6097%" y="47.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (51 samples, 0.02%)</title><rect x="39.3522%" y="341" width="0.0211%" height="15" fill="rgb(207,140,0)" fg:x="95162" fg:w="51"/><text x="39.6022%" y="351.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (51 samples, 0.02%)</title><rect x="39.3522%" y="325" width="0.0211%" height="15" fill="rgb(238,133,51)" fg:x="95162" fg:w="51"/><text x="39.6022%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (51 samples, 0.02%)</title><rect x="39.3522%" y="309" width="0.0211%" height="15" fill="rgb(218,203,53)" fg:x="95162" fg:w="51"/><text x="39.6022%" y="319.50"></text></g><g><title> 32]&gt;::serialize (51 samples, 0.02%)</title><rect x="39.3522%" y="293" width="0.0211%" height="15" fill="rgb(226,184,25)" fg:x="95162" fg:w="51"/><text x="39.6022%" y="303.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (51 samples, 0.02%)</title><rect x="39.3522%" y="277" width="0.0211%" height="15" fill="rgb(231,121,21)" fg:x="95162" fg:w="51"/><text x="39.6022%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (51 samples, 0.02%)</title><rect x="39.3522%" y="261" width="0.0211%" height="15" fill="rgb(251,14,34)" fg:x="95162" fg:w="51"/><text x="39.6022%" y="271.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (51 samples, 0.02%)</title><rect x="39.3522%" y="245" width="0.0211%" height="15" fill="rgb(249,193,11)" fg:x="95162" fg:w="51"/><text x="39.6022%" y="255.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (51 samples, 0.02%)</title><rect x="39.3522%" y="229" width="0.0211%" height="15" fill="rgb(220,172,37)" fg:x="95162" fg:w="51"/><text x="39.6022%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (51 samples, 0.02%)</title><rect x="39.3522%" y="213" width="0.0211%" height="15" fill="rgb(231,229,43)" fg:x="95162" fg:w="51"/><text x="39.6022%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (51 samples, 0.02%)</title><rect x="39.3522%" y="197" width="0.0211%" height="15" fill="rgb(250,161,5)" fg:x="95162" fg:w="51"/><text x="39.6022%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (51 samples, 0.02%)</title><rect x="39.3522%" y="181" width="0.0211%" height="15" fill="rgb(218,225,18)" fg:x="95162" fg:w="51"/><text x="39.6022%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (51 samples, 0.02%)</title><rect x="39.3522%" y="165" width="0.0211%" height="15" fill="rgb(245,45,42)" fg:x="95162" fg:w="51"/><text x="39.6022%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (51 samples, 0.02%)</title><rect x="39.3522%" y="149" width="0.0211%" height="15" fill="rgb(211,115,1)" fg:x="95162" fg:w="51"/><text x="39.6022%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (38 samples, 0.02%)</title><rect x="39.3576%" y="133" width="0.0157%" height="15" fill="rgb(248,133,52)" fg:x="95175" fg:w="38"/><text x="39.6076%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (38 samples, 0.02%)</title><rect x="39.3576%" y="117" width="0.0157%" height="15" fill="rgb(238,100,21)" fg:x="95175" fg:w="38"/><text x="39.6076%" y="127.50"></text></g><g><title>bcs::ser::to_bytes (257 samples, 0.11%)</title><rect x="39.2683%" y="645" width="0.1063%" height="15" fill="rgb(247,144,11)" fg:x="94959" fg:w="257"/><text x="39.5183%" y="655.50"></text></g><g><title>bcs::ser::serialize_into (252 samples, 0.10%)</title><rect x="39.2704%" y="629" width="0.1042%" height="15" fill="rgb(206,164,16)" fg:x="94964" fg:w="252"/><text x="39.5204%" y="639.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (252 samples, 0.10%)</title><rect x="39.2704%" y="613" width="0.1042%" height="15" fill="rgb(222,34,3)" fg:x="94964" fg:w="252"/><text x="39.5204%" y="623.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (241 samples, 0.10%)</title><rect x="39.2749%" y="597" width="0.0997%" height="15" fill="rgb(248,82,4)" fg:x="94975" fg:w="241"/><text x="39.5249%" y="607.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (225 samples, 0.09%)</title><rect x="39.2815%" y="581" width="0.0930%" height="15" fill="rgb(228,81,46)" fg:x="94991" fg:w="225"/><text x="39.5315%" y="591.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (220 samples, 0.09%)</title><rect x="39.2836%" y="565" width="0.0910%" height="15" fill="rgb(227,67,47)" fg:x="94996" fg:w="220"/><text x="39.5336%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (72 samples, 0.03%)</title><rect x="39.3448%" y="549" width="0.0298%" height="15" fill="rgb(215,93,53)" fg:x="95144" fg:w="72"/><text x="39.5948%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (72 samples, 0.03%)</title><rect x="39.3448%" y="533" width="0.0298%" height="15" fill="rgb(248,194,39)" fg:x="95144" fg:w="72"/><text x="39.5948%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (72 samples, 0.03%)</title><rect x="39.3448%" y="517" width="0.0298%" height="15" fill="rgb(215,5,19)" fg:x="95144" fg:w="72"/><text x="39.5948%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (72 samples, 0.03%)</title><rect x="39.3448%" y="501" width="0.0298%" height="15" fill="rgb(226,215,51)" fg:x="95144" fg:w="72"/><text x="39.5948%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (72 samples, 0.03%)</title><rect x="39.3448%" y="485" width="0.0298%" height="15" fill="rgb(225,56,26)" fg:x="95144" fg:w="72"/><text x="39.5948%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (72 samples, 0.03%)</title><rect x="39.3448%" y="469" width="0.0298%" height="15" fill="rgb(222,75,29)" fg:x="95144" fg:w="72"/><text x="39.5948%" y="479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (72 samples, 0.03%)</title><rect x="39.3448%" y="453" width="0.0298%" height="15" fill="rgb(236,139,6)" fg:x="95144" fg:w="72"/><text x="39.5948%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (72 samples, 0.03%)</title><rect x="39.3448%" y="437" width="0.0298%" height="15" fill="rgb(223,137,36)" fg:x="95144" fg:w="72"/><text x="39.5948%" y="447.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (71 samples, 0.03%)</title><rect x="39.3452%" y="421" width="0.0294%" height="15" fill="rgb(226,99,2)" fg:x="95145" fg:w="71"/><text x="39.5952%" y="431.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (56 samples, 0.02%)</title><rect x="39.3514%" y="405" width="0.0232%" height="15" fill="rgb(206,133,23)" fg:x="95160" fg:w="56"/><text x="39.6014%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (56 samples, 0.02%)</title><rect x="39.3514%" y="389" width="0.0232%" height="15" fill="rgb(243,173,15)" fg:x="95160" fg:w="56"/><text x="39.6014%" y="399.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (56 samples, 0.02%)</title><rect x="39.3514%" y="373" width="0.0232%" height="15" fill="rgb(228,69,28)" fg:x="95160" fg:w="56"/><text x="39.6014%" y="383.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (54 samples, 0.02%)</title><rect x="39.3522%" y="357" width="0.0223%" height="15" fill="rgb(212,51,22)" fg:x="95162" fg:w="54"/><text x="39.6022%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (54 samples, 0.02%)</title><rect x="39.3746%" y="645" width="0.0223%" height="15" fill="rgb(227,113,0)" fg:x="95216" fg:w="54"/><text x="39.6246%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (47 samples, 0.02%)</title><rect x="39.3775%" y="629" width="0.0194%" height="15" fill="rgb(252,84,27)" fg:x="95223" fg:w="47"/><text x="39.6275%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (34 samples, 0.01%)</title><rect x="39.3828%" y="613" width="0.0141%" height="15" fill="rgb(223,145,39)" fg:x="95236" fg:w="34"/><text x="39.6328%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (34 samples, 0.01%)</title><rect x="39.3828%" y="597" width="0.0141%" height="15" fill="rgb(239,219,30)" fg:x="95236" fg:w="34"/><text x="39.6328%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.01%)</title><rect x="39.3828%" y="581" width="0.0141%" height="15" fill="rgb(224,196,39)" fg:x="95236" fg:w="34"/><text x="39.6328%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.01%)</title><rect x="39.3828%" y="565" width="0.0141%" height="15" fill="rgb(205,35,43)" fg:x="95236" fg:w="34"/><text x="39.6328%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.01%)</title><rect x="39.3828%" y="549" width="0.0141%" height="15" fill="rgb(228,201,21)" fg:x="95236" fg:w="34"/><text x="39.6328%" y="559.50"></text></g><g><title>sdallocx (25 samples, 0.01%)</title><rect x="39.3866%" y="533" width="0.0103%" height="15" fill="rgb(237,118,16)" fg:x="95245" fg:w="25"/><text x="39.6366%" y="543.50"></text></g><g><title>tsd_fetch (25 samples, 0.01%)</title><rect x="39.3866%" y="517" width="0.0103%" height="15" fill="rgb(241,17,19)" fg:x="95245" fg:w="25"/><text x="39.6366%" y="527.50"></text></g><g><title>tsd_fetch_impl (25 samples, 0.01%)</title><rect x="39.3866%" y="501" width="0.0103%" height="15" fill="rgb(214,10,25)" fg:x="95245" fg:w="25"/><text x="39.6366%" y="511.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (315 samples, 0.13%)</title><rect x="39.2679%" y="661" width="0.1303%" height="15" fill="rgb(238,37,29)" fg:x="94958" fg:w="315"/><text x="39.5179%" y="671.50"></text></g><g><title>aptos_block_executor::data_cache::create_access_path (339 samples, 0.14%)</title><rect x="39.2592%" y="693" width="0.1402%" height="15" fill="rgb(253,83,25)" fg:x="94937" fg:w="339"/><text x="39.5092%" y="703.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (320 samples, 0.13%)</title><rect x="39.2671%" y="677" width="0.1323%" height="15" fill="rgb(234,192,12)" fg:x="94956" fg:w="320"/><text x="39.5171%" y="687.50"></text></g><g><title>&lt;aptos_block_executor::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (577 samples, 0.24%)</title><rect x="39.1637%" y="709" width="0.2386%" height="15" fill="rgb(241,216,45)" fg:x="94706" fg:w="577"/><text x="39.4137%" y="719.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (32 samples, 0.01%)</title><rect x="39.4023%" y="709" width="0.0132%" height="15" fill="rgb(242,22,33)" fg:x="95283" fg:w="32"/><text x="39.6523%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (46 samples, 0.02%)</title><rect x="39.4159%" y="709" width="0.0190%" height="15" fill="rgb(231,105,49)" fg:x="95316" fg:w="46"/><text x="39.6659%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (46 samples, 0.02%)</title><rect x="39.4159%" y="693" width="0.0190%" height="15" fill="rgb(218,204,15)" fg:x="95316" fg:w="46"/><text x="39.6659%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (46 samples, 0.02%)</title><rect x="39.4159%" y="677" width="0.0190%" height="15" fill="rgb(235,138,41)" fg:x="95316" fg:w="46"/><text x="39.6659%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (46 samples, 0.02%)</title><rect x="39.4159%" y="661" width="0.0190%" height="15" fill="rgb(246,0,9)" fg:x="95316" fg:w="46"/><text x="39.6659%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (46 samples, 0.02%)</title><rect x="39.4159%" y="645" width="0.0190%" height="15" fill="rgb(210,74,4)" fg:x="95316" fg:w="46"/><text x="39.6659%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (32 samples, 0.01%)</title><rect x="39.4217%" y="629" width="0.0132%" height="15" fill="rgb(250,60,41)" fg:x="95330" fg:w="32"/><text x="39.6717%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (59 samples, 0.02%)</title><rect x="39.4350%" y="709" width="0.0244%" height="15" fill="rgb(220,115,12)" fg:x="95362" fg:w="59"/><text x="39.6850%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (59 samples, 0.02%)</title><rect x="39.4350%" y="693" width="0.0244%" height="15" fill="rgb(237,100,13)" fg:x="95362" fg:w="59"/><text x="39.6850%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (59 samples, 0.02%)</title><rect x="39.4350%" y="677" width="0.0244%" height="15" fill="rgb(213,55,26)" fg:x="95362" fg:w="59"/><text x="39.6850%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (59 samples, 0.02%)</title><rect x="39.4350%" y="661" width="0.0244%" height="15" fill="rgb(216,17,4)" fg:x="95362" fg:w="59"/><text x="39.6850%" y="671.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (59 samples, 0.02%)</title><rect x="39.4350%" y="645" width="0.0244%" height="15" fill="rgb(220,153,47)" fg:x="95362" fg:w="59"/><text x="39.6850%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (30 samples, 0.01%)</title><rect x="39.4469%" y="629" width="0.0124%" height="15" fill="rgb(215,131,9)" fg:x="95391" fg:w="30"/><text x="39.6969%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (30 samples, 0.01%)</title><rect x="39.4469%" y="613" width="0.0124%" height="15" fill="rgb(233,46,42)" fg:x="95391" fg:w="30"/><text x="39.6969%" y="623.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (30 samples, 0.01%)</title><rect x="39.4469%" y="597" width="0.0124%" height="15" fill="rgb(226,86,7)" fg:x="95391" fg:w="30"/><text x="39.6969%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (31 samples, 0.01%)</title><rect x="39.4594%" y="693" width="0.0128%" height="15" fill="rgb(239,226,21)" fg:x="95421" fg:w="31"/><text x="39.7094%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (62 samples, 0.03%)</title><rect x="39.4594%" y="709" width="0.0256%" height="15" fill="rgb(244,137,22)" fg:x="95421" fg:w="62"/><text x="39.7094%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (31 samples, 0.01%)</title><rect x="39.4722%" y="693" width="0.0128%" height="15" fill="rgb(211,139,35)" fg:x="95452" fg:w="31"/><text x="39.7222%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.01%)</title><rect x="39.4850%" y="661" width="0.0108%" height="15" fill="rgb(214,62,50)" fg:x="95483" fg:w="26"/><text x="39.7350%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (36 samples, 0.01%)</title><rect x="39.4850%" y="677" width="0.0149%" height="15" fill="rgb(212,113,44)" fg:x="95483" fg:w="36"/><text x="39.7350%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (46 samples, 0.02%)</title><rect x="39.4850%" y="709" width="0.0190%" height="15" fill="rgb(226,150,43)" fg:x="95483" fg:w="46"/><text x="39.7350%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (46 samples, 0.02%)</title><rect x="39.4850%" y="693" width="0.0190%" height="15" fill="rgb(250,71,37)" fg:x="95483" fg:w="46"/><text x="39.7350%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (78 samples, 0.03%)</title><rect x="39.5044%" y="693" width="0.0323%" height="15" fill="rgb(219,76,19)" fg:x="95530" fg:w="78"/><text x="39.7544%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (78 samples, 0.03%)</title><rect x="39.5044%" y="677" width="0.0323%" height="15" fill="rgb(250,39,11)" fg:x="95530" fg:w="78"/><text x="39.7544%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (78 samples, 0.03%)</title><rect x="39.5044%" y="661" width="0.0323%" height="15" fill="rgb(230,64,31)" fg:x="95530" fg:w="78"/><text x="39.7544%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (78 samples, 0.03%)</title><rect x="39.5044%" y="645" width="0.0323%" height="15" fill="rgb(208,222,23)" fg:x="95530" fg:w="78"/><text x="39.7544%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (78 samples, 0.03%)</title><rect x="39.5044%" y="629" width="0.0323%" height="15" fill="rgb(227,125,18)" fg:x="95530" fg:w="78"/><text x="39.7544%" y="639.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (78 samples, 0.03%)</title><rect x="39.5044%" y="613" width="0.0323%" height="15" fill="rgb(234,210,9)" fg:x="95530" fg:w="78"/><text x="39.7544%" y="623.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T (78 samples, 0.03%)</title><rect x="39.5044%" y="597" width="0.0323%" height="15" fill="rgb(217,127,24)" fg:x="95530" fg:w="78"/><text x="39.7544%" y="607.50"></text></g><g><title> N]&gt;::cmp (78 samples, 0.03%)</title><rect x="39.5044%" y="581" width="0.0323%" height="15" fill="rgb(239,141,48)" fg:x="95530" fg:w="78"/><text x="39.7544%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (78 samples, 0.03%)</title><rect x="39.5044%" y="565" width="0.0323%" height="15" fill="rgb(227,109,8)" fg:x="95530" fg:w="78"/><text x="39.7544%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (78 samples, 0.03%)</title><rect x="39.5044%" y="549" width="0.0323%" height="15" fill="rgb(235,184,23)" fg:x="95530" fg:w="78"/><text x="39.7544%" y="559.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (78 samples, 0.03%)</title><rect x="39.5044%" y="533" width="0.0323%" height="15" fill="rgb(227,226,48)" fg:x="95530" fg:w="78"/><text x="39.7544%" y="543.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (87 samples, 0.04%)</title><rect x="39.5044%" y="709" width="0.0360%" height="15" fill="rgb(206,150,11)" fg:x="95530" fg:w="87"/><text x="39.7544%" y="719.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (47 samples, 0.02%)</title><rect x="39.5822%" y="341" width="0.0194%" height="15" fill="rgb(254,2,33)" fg:x="95718" fg:w="47"/><text x="39.8322%" y="351.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (47 samples, 0.02%)</title><rect x="39.5822%" y="325" width="0.0194%" height="15" fill="rgb(243,160,20)" fg:x="95718" fg:w="47"/><text x="39.8322%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.01%)</title><rect x="39.5884%" y="309" width="0.0132%" height="15" fill="rgb(218,208,30)" fg:x="95733" fg:w="32"/><text x="39.8384%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.01%)</title><rect x="39.5884%" y="293" width="0.0132%" height="15" fill="rgb(224,120,49)" fg:x="95733" fg:w="32"/><text x="39.8384%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.01%)</title><rect x="39.5884%" y="277" width="0.0132%" height="15" fill="rgb(246,12,2)" fg:x="95733" fg:w="32"/><text x="39.8384%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.01%)</title><rect x="39.5884%" y="261" width="0.0132%" height="15" fill="rgb(236,117,3)" fg:x="95733" fg:w="32"/><text x="39.8384%" y="271.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (69 samples, 0.03%)</title><rect x="39.5789%" y="453" width="0.0285%" height="15" fill="rgb(216,128,52)" fg:x="95710" fg:w="69"/><text x="39.8289%" y="463.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (69 samples, 0.03%)</title><rect x="39.5789%" y="437" width="0.0285%" height="15" fill="rgb(246,145,19)" fg:x="95710" fg:w="69"/><text x="39.8289%" y="447.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (61 samples, 0.03%)</title><rect x="39.5822%" y="421" width="0.0252%" height="15" fill="rgb(222,11,46)" fg:x="95718" fg:w="61"/><text x="39.8322%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (61 samples, 0.03%)</title><rect x="39.5822%" y="405" width="0.0252%" height="15" fill="rgb(245,82,36)" fg:x="95718" fg:w="61"/><text x="39.8322%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (61 samples, 0.03%)</title><rect x="39.5822%" y="389" width="0.0252%" height="15" fill="rgb(250,73,51)" fg:x="95718" fg:w="61"/><text x="39.8322%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (61 samples, 0.03%)</title><rect x="39.5822%" y="373" width="0.0252%" height="15" fill="rgb(221,189,23)" fg:x="95718" fg:w="61"/><text x="39.8322%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (61 samples, 0.03%)</title><rect x="39.5822%" y="357" width="0.0252%" height="15" fill="rgb(210,33,7)" fg:x="95718" fg:w="61"/><text x="39.8322%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (73 samples, 0.03%)</title><rect x="39.5789%" y="469" width="0.0302%" height="15" fill="rgb(210,107,22)" fg:x="95710" fg:w="73"/><text x="39.8289%" y="479.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (25 samples, 0.01%)</title><rect x="39.6111%" y="389" width="0.0103%" height="15" fill="rgb(222,116,37)" fg:x="95788" fg:w="25"/><text x="39.8611%" y="399.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (25 samples, 0.01%)</title><rect x="39.6111%" y="373" width="0.0103%" height="15" fill="rgb(254,17,48)" fg:x="95788" fg:w="25"/><text x="39.8611%" y="383.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (126 samples, 0.05%)</title><rect x="39.5698%" y="485" width="0.0521%" height="15" fill="rgb(224,36,32)" fg:x="95688" fg:w="126"/><text x="39.8198%" y="495.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (31 samples, 0.01%)</title><rect x="39.6090%" y="469" width="0.0128%" height="15" fill="rgb(232,90,46)" fg:x="95783" fg:w="31"/><text x="39.8590%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.01%)</title><rect x="39.6090%" y="453" width="0.0128%" height="15" fill="rgb(241,66,40)" fg:x="95783" fg:w="31"/><text x="39.8590%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 0.01%)</title><rect x="39.6111%" y="437" width="0.0108%" height="15" fill="rgb(249,184,29)" fg:x="95788" fg:w="26"/><text x="39.8611%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.01%)</title><rect x="39.6111%" y="421" width="0.0108%" height="15" fill="rgb(231,181,1)" fg:x="95788" fg:w="26"/><text x="39.8611%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 0.01%)</title><rect x="39.6111%" y="405" width="0.0108%" height="15" fill="rgb(224,94,2)" fg:x="95788" fg:w="26"/><text x="39.8611%" y="415.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (223 samples, 0.09%)</title><rect x="39.5470%" y="581" width="0.0922%" height="15" fill="rgb(229,170,15)" fg:x="95633" fg:w="223"/><text x="39.7970%" y="591.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (214 samples, 0.09%)</title><rect x="39.5507%" y="565" width="0.0885%" height="15" fill="rgb(240,127,35)" fg:x="95642" fg:w="214"/><text x="39.8007%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (168 samples, 0.07%)</title><rect x="39.5698%" y="549" width="0.0695%" height="15" fill="rgb(248,196,34)" fg:x="95688" fg:w="168"/><text x="39.8198%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (168 samples, 0.07%)</title><rect x="39.5698%" y="533" width="0.0695%" height="15" fill="rgb(236,137,7)" fg:x="95688" fg:w="168"/><text x="39.8198%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (168 samples, 0.07%)</title><rect x="39.5698%" y="517" width="0.0695%" height="15" fill="rgb(235,127,16)" fg:x="95688" fg:w="168"/><text x="39.8198%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (168 samples, 0.07%)</title><rect x="39.5698%" y="501" width="0.0695%" height="15" fill="rgb(250,192,54)" fg:x="95688" fg:w="168"/><text x="39.8198%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (26 samples, 0.01%)</title><rect x="39.6285%" y="485" width="0.0108%" height="15" fill="rgb(218,98,20)" fg:x="95830" fg:w="26"/><text x="39.8785%" y="495.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (264 samples, 0.11%)</title><rect x="39.5466%" y="661" width="0.1092%" height="15" fill="rgb(230,176,47)" fg:x="95632" fg:w="264"/><text x="39.7966%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (263 samples, 0.11%)</title><rect x="39.5470%" y="645" width="0.1088%" height="15" fill="rgb(244,2,33)" fg:x="95633" fg:w="263"/><text x="39.7970%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (263 samples, 0.11%)</title><rect x="39.5470%" y="629" width="0.1088%" height="15" fill="rgb(231,100,17)" fg:x="95633" fg:w="263"/><text x="39.7970%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (263 samples, 0.11%)</title><rect x="39.5470%" y="613" width="0.1088%" height="15" fill="rgb(245,23,12)" fg:x="95633" fg:w="263"/><text x="39.7970%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (263 samples, 0.11%)</title><rect x="39.5470%" y="597" width="0.1088%" height="15" fill="rgb(249,55,22)" fg:x="95633" fg:w="263"/><text x="39.7970%" y="607.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (330 samples, 0.14%)</title><rect x="39.5404%" y="709" width="0.1365%" height="15" fill="rgb(207,134,9)" fg:x="95617" fg:w="330"/><text x="39.7904%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (324 samples, 0.13%)</title><rect x="39.5429%" y="693" width="0.1340%" height="15" fill="rgb(218,134,0)" fg:x="95623" fg:w="324"/><text x="39.7929%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (315 samples, 0.13%)</title><rect x="39.5466%" y="677" width="0.1303%" height="15" fill="rgb(213,212,33)" fg:x="95632" fg:w="315"/><text x="39.7966%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (51 samples, 0.02%)</title><rect x="39.6558%" y="661" width="0.0211%" height="15" fill="rgb(252,106,18)" fg:x="95896" fg:w="51"/><text x="39.9058%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (51 samples, 0.02%)</title><rect x="39.6558%" y="645" width="0.0211%" height="15" fill="rgb(208,126,42)" fg:x="95896" fg:w="51"/><text x="39.9058%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (51 samples, 0.02%)</title><rect x="39.6558%" y="629" width="0.0211%" height="15" fill="rgb(246,175,29)" fg:x="95896" fg:w="51"/><text x="39.9058%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (31 samples, 0.01%)</title><rect x="39.6640%" y="613" width="0.0128%" height="15" fill="rgb(215,13,50)" fg:x="95916" fg:w="31"/><text x="39.9140%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (31 samples, 0.01%)</title><rect x="39.6640%" y="597" width="0.0128%" height="15" fill="rgb(216,172,15)" fg:x="95916" fg:w="31"/><text x="39.9140%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (31 samples, 0.01%)</title><rect x="39.6640%" y="581" width="0.0128%" height="15" fill="rgb(212,103,13)" fg:x="95916" fg:w="31"/><text x="39.9140%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (31 samples, 0.01%)</title><rect x="39.6640%" y="565" width="0.0128%" height="15" fill="rgb(231,171,36)" fg:x="95916" fg:w="31"/><text x="39.9140%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (31 samples, 0.01%)</title><rect x="39.6640%" y="549" width="0.0128%" height="15" fill="rgb(250,123,20)" fg:x="95916" fg:w="31"/><text x="39.9140%" y="559.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (31 samples, 0.01%)</title><rect x="39.6640%" y="533" width="0.0128%" height="15" fill="rgb(212,53,50)" fg:x="95916" fg:w="31"/><text x="39.9140%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (31 samples, 0.01%)</title><rect x="39.6640%" y="517" width="0.0128%" height="15" fill="rgb(243,54,12)" fg:x="95916" fg:w="31"/><text x="39.9140%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (31 samples, 0.01%)</title><rect x="39.6640%" y="501" width="0.0128%" height="15" fill="rgb(234,101,34)" fg:x="95916" fg:w="31"/><text x="39.9140%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (31 samples, 0.01%)</title><rect x="39.6640%" y="485" width="0.0128%" height="15" fill="rgb(254,67,22)" fg:x="95916" fg:w="31"/><text x="39.9140%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (29 samples, 0.01%)</title><rect x="39.6649%" y="469" width="0.0120%" height="15" fill="rgb(250,35,47)" fg:x="95918" fg:w="29"/><text x="39.9149%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (29 samples, 0.01%)</title><rect x="39.6649%" y="453" width="0.0120%" height="15" fill="rgb(226,126,38)" fg:x="95918" fg:w="29"/><text x="39.9149%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (29 samples, 0.01%)</title><rect x="39.6649%" y="437" width="0.0120%" height="15" fill="rgb(216,138,53)" fg:x="95918" fg:w="29"/><text x="39.9149%" y="447.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (35 samples, 0.01%)</title><rect x="39.6864%" y="581" width="0.0145%" height="15" fill="rgb(246,199,43)" fg:x="95970" fg:w="35"/><text x="39.9364%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40 samples, 0.02%)</title><rect x="39.6864%" y="645" width="0.0165%" height="15" fill="rgb(232,125,11)" fg:x="95970" fg:w="40"/><text x="39.9364%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (40 samples, 0.02%)</title><rect x="39.6864%" y="629" width="0.0165%" height="15" fill="rgb(218,219,45)" fg:x="95970" fg:w="40"/><text x="39.9364%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (40 samples, 0.02%)</title><rect x="39.6864%" y="613" width="0.0165%" height="15" fill="rgb(216,102,54)" fg:x="95970" fg:w="40"/><text x="39.9364%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (40 samples, 0.02%)</title><rect x="39.6864%" y="597" width="0.0165%" height="15" fill="rgb(250,228,7)" fg:x="95970" fg:w="40"/><text x="39.9364%" y="607.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (63 samples, 0.03%)</title><rect x="39.6864%" y="661" width="0.0261%" height="15" fill="rgb(226,125,25)" fg:x="95970" fg:w="63"/><text x="39.9364%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (169 samples, 0.07%)</title><rect x="39.6769%" y="709" width="0.0699%" height="15" fill="rgb(224,165,27)" fg:x="95947" fg:w="169"/><text x="39.9269%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (169 samples, 0.07%)</title><rect x="39.6769%" y="693" width="0.0699%" height="15" fill="rgb(233,86,3)" fg:x="95947" fg:w="169"/><text x="39.9269%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (146 samples, 0.06%)</title><rect x="39.6864%" y="677" width="0.0604%" height="15" fill="rgb(228,116,20)" fg:x="95970" fg:w="146"/><text x="39.9364%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (83 samples, 0.03%)</title><rect x="39.7124%" y="661" width="0.0343%" height="15" fill="rgb(209,192,17)" fg:x="96033" fg:w="83"/><text x="39.9624%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (83 samples, 0.03%)</title><rect x="39.7124%" y="645" width="0.0343%" height="15" fill="rgb(224,88,34)" fg:x="96033" fg:w="83"/><text x="39.9624%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (83 samples, 0.03%)</title><rect x="39.7124%" y="629" width="0.0343%" height="15" fill="rgb(233,38,6)" fg:x="96033" fg:w="83"/><text x="39.9624%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (63 samples, 0.03%)</title><rect x="39.7207%" y="613" width="0.0261%" height="15" fill="rgb(212,59,30)" fg:x="96053" fg:w="63"/><text x="39.9707%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (63 samples, 0.03%)</title><rect x="39.7207%" y="597" width="0.0261%" height="15" fill="rgb(213,80,3)" fg:x="96053" fg:w="63"/><text x="39.9707%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (63 samples, 0.03%)</title><rect x="39.7207%" y="581" width="0.0261%" height="15" fill="rgb(251,178,7)" fg:x="96053" fg:w="63"/><text x="39.9707%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (63 samples, 0.03%)</title><rect x="39.7207%" y="565" width="0.0261%" height="15" fill="rgb(213,154,26)" fg:x="96053" fg:w="63"/><text x="39.9707%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (63 samples, 0.03%)</title><rect x="39.7207%" y="549" width="0.0261%" height="15" fill="rgb(238,165,49)" fg:x="96053" fg:w="63"/><text x="39.9707%" y="559.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (63 samples, 0.03%)</title><rect x="39.7207%" y="533" width="0.0261%" height="15" fill="rgb(248,91,46)" fg:x="96053" fg:w="63"/><text x="39.9707%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (63 samples, 0.03%)</title><rect x="39.7207%" y="517" width="0.0261%" height="15" fill="rgb(244,21,52)" fg:x="96053" fg:w="63"/><text x="39.9707%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (63 samples, 0.03%)</title><rect x="39.7207%" y="501" width="0.0261%" height="15" fill="rgb(247,122,20)" fg:x="96053" fg:w="63"/><text x="39.9707%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (63 samples, 0.03%)</title><rect x="39.7207%" y="485" width="0.0261%" height="15" fill="rgb(218,27,9)" fg:x="96053" fg:w="63"/><text x="39.9707%" y="495.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (29 samples, 0.01%)</title><rect x="39.7753%" y="421" width="0.0120%" height="15" fill="rgb(246,7,6)" fg:x="96185" fg:w="29"/><text x="40.0253%" y="431.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (28 samples, 0.01%)</title><rect x="39.7757%" y="405" width="0.0116%" height="15" fill="rgb(227,135,54)" fg:x="96186" fg:w="28"/><text x="40.0257%" y="415.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (30 samples, 0.01%)</title><rect x="39.7753%" y="437" width="0.0124%" height="15" fill="rgb(247,14,11)" fg:x="96185" fg:w="30"/><text x="40.0253%" y="447.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (31 samples, 0.01%)</title><rect x="39.7753%" y="453" width="0.0128%" height="15" fill="rgb(206,149,34)" fg:x="96185" fg:w="31"/><text x="40.0253%" y="463.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::VectorElementVisitor as serde::de::Visitor&gt;::visit_seq (33 samples, 0.01%)</title><rect x="39.7753%" y="485" width="0.0136%" height="15" fill="rgb(227,228,4)" fg:x="96185" fg:w="33"/><text x="40.0253%" y="495.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (33 samples, 0.01%)</title><rect x="39.7753%" y="469" width="0.0136%" height="15" fill="rgb(238,218,28)" fg:x="96185" fg:w="33"/><text x="40.0253%" y="479.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (35 samples, 0.01%)</title><rect x="39.7749%" y="501" width="0.0145%" height="15" fill="rgb(252,86,40)" fg:x="96184" fg:w="35"/><text x="40.0249%" y="511.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (32 samples, 0.01%)</title><rect x="39.7893%" y="501" width="0.0132%" height="15" fill="rgb(251,225,11)" fg:x="96219" fg:w="32"/><text x="40.0393%" y="511.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (26 samples, 0.01%)</title><rect x="39.7918%" y="485" width="0.0108%" height="15" fill="rgb(206,46,49)" fg:x="96225" fg:w="26"/><text x="40.0418%" y="495.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (26 samples, 0.01%)</title><rect x="39.7918%" y="469" width="0.0108%" height="15" fill="rgb(245,128,24)" fg:x="96225" fg:w="26"/><text x="40.0418%" y="479.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (26 samples, 0.01%)</title><rect x="39.7918%" y="453" width="0.0108%" height="15" fill="rgb(219,177,34)" fg:x="96225" fg:w="26"/><text x="40.0418%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (26 samples, 0.01%)</title><rect x="39.7918%" y="437" width="0.0108%" height="15" fill="rgb(218,60,48)" fg:x="96225" fg:w="26"/><text x="40.0418%" y="447.50"></text></g><g><title> 32]&gt;::deserialize (26 samples, 0.01%)</title><rect x="39.7918%" y="421" width="0.0108%" height="15" fill="rgb(221,11,5)" fg:x="96225" fg:w="26"/><text x="40.0418%" y="431.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (26 samples, 0.01%)</title><rect x="39.7918%" y="405" width="0.0108%" height="15" fill="rgb(220,148,13)" fg:x="96225" fg:w="26"/><text x="40.0418%" y="415.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (26 samples, 0.01%)</title><rect x="39.7918%" y="389" width="0.0108%" height="15" fill="rgb(210,16,3)" fg:x="96225" fg:w="26"/><text x="40.0418%" y="399.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (26 samples, 0.01%)</title><rect x="39.7918%" y="373" width="0.0108%" height="15" fill="rgb(236,80,2)" fg:x="96225" fg:w="26"/><text x="40.0418%" y="383.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (48 samples, 0.02%)</title><rect x="39.8067%" y="293" width="0.0198%" height="15" fill="rgb(239,129,19)" fg:x="96261" fg:w="48"/><text x="40.0567%" y="303.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (44 samples, 0.02%)</title><rect x="39.8084%" y="277" width="0.0182%" height="15" fill="rgb(220,106,35)" fg:x="96265" fg:w="44"/><text x="40.0584%" y="287.50"></text></g><g><title> 32]&gt;::deserialize (44 samples, 0.02%)</title><rect x="39.8084%" y="261" width="0.0182%" height="15" fill="rgb(252,139,45)" fg:x="96265" fg:w="44"/><text x="40.0584%" y="271.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (44 samples, 0.02%)</title><rect x="39.8084%" y="245" width="0.0182%" height="15" fill="rgb(229,8,36)" fg:x="96265" fg:w="44"/><text x="40.0584%" y="255.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (44 samples, 0.02%)</title><rect x="39.8084%" y="229" width="0.0182%" height="15" fill="rgb(230,126,33)" fg:x="96265" fg:w="44"/><text x="40.0584%" y="239.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (44 samples, 0.02%)</title><rect x="39.8084%" y="213" width="0.0182%" height="15" fill="rgb(239,140,21)" fg:x="96265" fg:w="44"/><text x="40.0584%" y="223.50"></text></g><g><title>serde::de::SeqAccess::next_element (35 samples, 0.01%)</title><rect x="39.8121%" y="197" width="0.0145%" height="15" fill="rgb(254,104,9)" fg:x="96274" fg:w="35"/><text x="40.0621%" y="207.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (35 samples, 0.01%)</title><rect x="39.8121%" y="181" width="0.0145%" height="15" fill="rgb(239,52,14)" fg:x="96274" fg:w="35"/><text x="40.0621%" y="191.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (49 samples, 0.02%)</title><rect x="39.8067%" y="341" width="0.0203%" height="15" fill="rgb(208,227,44)" fg:x="96261" fg:w="49"/><text x="40.0567%" y="351.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (49 samples, 0.02%)</title><rect x="39.8067%" y="325" width="0.0203%" height="15" fill="rgb(246,18,19)" fg:x="96261" fg:w="49"/><text x="40.0567%" y="335.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (49 samples, 0.02%)</title><rect x="39.8067%" y="309" width="0.0203%" height="15" fill="rgb(235,228,25)" fg:x="96261" fg:w="49"/><text x="40.0567%" y="319.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (56 samples, 0.02%)</title><rect x="39.8046%" y="373" width="0.0232%" height="15" fill="rgb(240,156,20)" fg:x="96256" fg:w="56"/><text x="40.0546%" y="383.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (56 samples, 0.02%)</title><rect x="39.8046%" y="357" width="0.0232%" height="15" fill="rgb(224,8,20)" fg:x="96256" fg:w="56"/><text x="40.0546%" y="367.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (78 samples, 0.03%)</title><rect x="39.8046%" y="421" width="0.0323%" height="15" fill="rgb(214,12,52)" fg:x="96256" fg:w="78"/><text x="40.0546%" y="431.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (78 samples, 0.03%)</title><rect x="39.8046%" y="405" width="0.0323%" height="15" fill="rgb(211,220,47)" fg:x="96256" fg:w="78"/><text x="40.0546%" y="415.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (78 samples, 0.03%)</title><rect x="39.8046%" y="389" width="0.0323%" height="15" fill="rgb(250,173,5)" fg:x="96256" fg:w="78"/><text x="40.0546%" y="399.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (84 samples, 0.03%)</title><rect x="39.8026%" y="453" width="0.0347%" height="15" fill="rgb(250,125,52)" fg:x="96251" fg:w="84"/><text x="40.0526%" y="463.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (84 samples, 0.03%)</title><rect x="39.8026%" y="437" width="0.0347%" height="15" fill="rgb(209,133,18)" fg:x="96251" fg:w="84"/><text x="40.0526%" y="447.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (91 samples, 0.04%)</title><rect x="39.8026%" y="485" width="0.0376%" height="15" fill="rgb(216,173,22)" fg:x="96251" fg:w="91"/><text x="40.0526%" y="495.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (91 samples, 0.04%)</title><rect x="39.8026%" y="469" width="0.0376%" height="15" fill="rgb(205,3,22)" fg:x="96251" fg:w="91"/><text x="40.0526%" y="479.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (92 samples, 0.04%)</title><rect x="39.8026%" y="501" width="0.0380%" height="15" fill="rgb(248,22,20)" fg:x="96251" fg:w="92"/><text x="40.0526%" y="511.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (195 samples, 0.08%)</title><rect x="39.7749%" y="533" width="0.0806%" height="15" fill="rgb(233,6,29)" fg:x="96184" fg:w="195"/><text x="40.0249%" y="543.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (195 samples, 0.08%)</title><rect x="39.7749%" y="517" width="0.0806%" height="15" fill="rgb(240,22,54)" fg:x="96184" fg:w="195"/><text x="40.0249%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (52 samples, 0.02%)</title><rect x="39.8555%" y="533" width="0.0215%" height="15" fill="rgb(231,133,32)" fg:x="96379" fg:w="52"/><text x="40.1055%" y="543.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (271 samples, 0.11%)</title><rect x="39.7749%" y="565" width="0.1121%" height="15" fill="rgb(248,193,4)" fg:x="96184" fg:w="271"/><text x="40.0249%" y="575.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (271 samples, 0.11%)</title><rect x="39.7749%" y="549" width="0.1121%" height="15" fill="rgb(211,178,46)" fg:x="96184" fg:w="271"/><text x="40.0249%" y="559.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (279 samples, 0.12%)</title><rect x="39.7749%" y="581" width="0.1154%" height="15" fill="rgb(224,5,42)" fg:x="96184" fg:w="279"/><text x="40.0249%" y="591.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (340 samples, 0.14%)</title><rect x="39.7616%" y="613" width="0.1406%" height="15" fill="rgb(239,176,25)" fg:x="96152" fg:w="340"/><text x="40.0116%" y="623.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (340 samples, 0.14%)</title><rect x="39.7616%" y="597" width="0.1406%" height="15" fill="rgb(245,187,50)" fg:x="96152" fg:w="340"/><text x="40.0116%" y="607.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (404 samples, 0.17%)</title><rect x="39.7616%" y="645" width="0.1671%" height="15" fill="rgb(248,24,15)" fg:x="96152" fg:w="404"/><text x="40.0116%" y="655.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (404 samples, 0.17%)</title><rect x="39.7616%" y="629" width="0.1671%" height="15" fill="rgb(205,166,13)" fg:x="96152" fg:w="404"/><text x="40.0116%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (64 samples, 0.03%)</title><rect x="39.9022%" y="613" width="0.0265%" height="15" fill="rgb(208,114,23)" fg:x="96492" fg:w="64"/><text x="40.1522%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (54 samples, 0.02%)</title><rect x="39.9064%" y="597" width="0.0223%" height="15" fill="rgb(239,127,18)" fg:x="96502" fg:w="54"/><text x="40.1564%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (54 samples, 0.02%)</title><rect x="39.9064%" y="581" width="0.0223%" height="15" fill="rgb(219,154,28)" fg:x="96502" fg:w="54"/><text x="40.1564%" y="591.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (408 samples, 0.17%)</title><rect x="39.7616%" y="661" width="0.1687%" height="15" fill="rgb(225,157,23)" fg:x="96152" fg:w="408"/><text x="40.0116%" y="671.50"></text></g><g><title>bcs::de::from_bytes_seed (437 samples, 0.18%)</title><rect x="39.7505%" y="693" width="0.1807%" height="15" fill="rgb(219,8,6)" fg:x="96125" fg:w="437"/><text x="40.0005%" y="703.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (416 samples, 0.17%)</title><rect x="39.7592%" y="677" width="0.1720%" height="15" fill="rgb(212,47,6)" fg:x="96146" fg:w="416"/><text x="40.0092%" y="687.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (439 samples, 0.18%)</title><rect x="39.7505%" y="709" width="0.1815%" height="15" fill="rgb(224,190,4)" fg:x="96125" fg:w="439"/><text x="40.0005%" y="719.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (1,969 samples, 0.81%)</title><rect x="39.1198%" y="741" width="0.8142%" height="15" fill="rgb(239,183,29)" fg:x="94600" fg:w="1969"/><text x="39.3698%" y="751.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (1,871 samples, 0.77%)</title><rect x="39.1604%" y="725" width="0.7737%" height="15" fill="rgb(213,57,7)" fg:x="94698" fg:w="1871"/><text x="39.4104%" y="735.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (2,036 samples, 0.84%)</title><rect x="39.1116%" y="757" width="0.8419%" height="15" fill="rgb(216,148,1)" fg:x="94580" fg:w="2036"/><text x="39.3616%" y="767.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (31 samples, 0.01%)</title><rect x="39.9535%" y="709" width="0.0128%" height="15" fill="rgb(236,182,29)" fg:x="96616" fg:w="31"/><text x="40.2035%" y="719.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (31 samples, 0.01%)</title><rect x="39.9535%" y="693" width="0.0128%" height="15" fill="rgb(244,120,48)" fg:x="96616" fg:w="31"/><text x="40.2035%" y="703.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (31 samples, 0.01%)</title><rect x="39.9535%" y="677" width="0.0128%" height="15" fill="rgb(206,71,34)" fg:x="96616" fg:w="31"/><text x="40.2035%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::GlobalValue::view::Wrapper as move_vm_types::views::ValueView&gt;::visit (31 samples, 0.01%)</title><rect x="39.9535%" y="661" width="0.0128%" height="15" fill="rgb(242,32,6)" fg:x="96616" fg:w="31"/><text x="40.2035%" y="671.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_load_resource (33 samples, 0.01%)</title><rect x="39.9535%" y="725" width="0.0136%" height="15" fill="rgb(241,35,3)" fg:x="96616" fg:w="33"/><text x="40.2035%" y="735.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (28 samples, 0.01%)</title><rect x="39.9758%" y="613" width="0.0116%" height="15" fill="rgb(222,62,19)" fg:x="96670" fg:w="28"/><text x="40.2258%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.01%)</title><rect x="39.9758%" y="597" width="0.0116%" height="15" fill="rgb(223,110,41)" fg:x="96670" fg:w="28"/><text x="40.2258%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40 samples, 0.02%)</title><rect x="39.9746%" y="677" width="0.0165%" height="15" fill="rgb(208,224,4)" fg:x="96667" fg:w="40"/><text x="40.2246%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37 samples, 0.02%)</title><rect x="39.9758%" y="661" width="0.0153%" height="15" fill="rgb(241,137,19)" fg:x="96670" fg:w="37"/><text x="40.2258%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 0.02%)</title><rect x="39.9758%" y="645" width="0.0153%" height="15" fill="rgb(244,24,17)" fg:x="96670" fg:w="37"/><text x="40.2258%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37 samples, 0.02%)</title><rect x="39.9758%" y="629" width="0.0153%" height="15" fill="rgb(245,178,49)" fg:x="96670" fg:w="37"/><text x="40.2258%" y="639.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (61 samples, 0.03%)</title><rect x="39.9688%" y="693" width="0.0252%" height="15" fill="rgb(219,160,38)" fg:x="96653" fg:w="61"/><text x="40.2188%" y="703.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (38 samples, 0.02%)</title><rect x="39.9940%" y="677" width="0.0157%" height="15" fill="rgb(228,137,14)" fg:x="96714" fg:w="38"/><text x="40.2440%" y="687.50"></text></g><g><title>aptos_block_executor::data_cache::StorageAdapter&lt;S&gt;::get (48 samples, 0.02%)</title><rect x="39.9940%" y="693" width="0.0198%" height="15" fill="rgb(237,134,11)" fg:x="96714" fg:w="48"/><text x="40.2440%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (47 samples, 0.02%)</title><rect x="40.0271%" y="293" width="0.0194%" height="15" fill="rgb(211,126,44)" fg:x="96794" fg:w="47"/><text x="40.2771%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (47 samples, 0.02%)</title><rect x="40.0271%" y="277" width="0.0194%" height="15" fill="rgb(226,171,33)" fg:x="96794" fg:w="47"/><text x="40.2771%" y="287.50"></text></g><g><title>alloc::alloc::realloc (47 samples, 0.02%)</title><rect x="40.0271%" y="261" width="0.0194%" height="15" fill="rgb(253,99,13)" fg:x="96794" fg:w="47"/><text x="40.2771%" y="271.50"></text></g><g><title>rallocx (42 samples, 0.02%)</title><rect x="40.0292%" y="245" width="0.0174%" height="15" fill="rgb(244,48,7)" fg:x="96799" fg:w="42"/><text x="40.2792%" y="255.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (60 samples, 0.02%)</title><rect x="40.0234%" y="549" width="0.0248%" height="15" fill="rgb(244,217,54)" fg:x="96785" fg:w="60"/><text x="40.2734%" y="559.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (60 samples, 0.02%)</title><rect x="40.0234%" y="533" width="0.0248%" height="15" fill="rgb(224,15,18)" fg:x="96785" fg:w="60"/><text x="40.2734%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (60 samples, 0.02%)</title><rect x="40.0234%" y="517" width="0.0248%" height="15" fill="rgb(244,99,12)" fg:x="96785" fg:w="60"/><text x="40.2734%" y="527.50"></text></g><g><title> 32]&gt;::serialize (60 samples, 0.02%)</title><rect x="40.0234%" y="501" width="0.0248%" height="15" fill="rgb(233,226,8)" fg:x="96785" fg:w="60"/><text x="40.2734%" y="511.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (54 samples, 0.02%)</title><rect x="40.0259%" y="485" width="0.0223%" height="15" fill="rgb(229,211,3)" fg:x="96791" fg:w="54"/><text x="40.2759%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (54 samples, 0.02%)</title><rect x="40.0259%" y="469" width="0.0223%" height="15" fill="rgb(216,140,21)" fg:x="96791" fg:w="54"/><text x="40.2759%" y="479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (54 samples, 0.02%)</title><rect x="40.0259%" y="453" width="0.0223%" height="15" fill="rgb(234,122,30)" fg:x="96791" fg:w="54"/><text x="40.2759%" y="463.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (54 samples, 0.02%)</title><rect x="40.0259%" y="437" width="0.0223%" height="15" fill="rgb(236,25,46)" fg:x="96791" fg:w="54"/><text x="40.2759%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (54 samples, 0.02%)</title><rect x="40.0259%" y="421" width="0.0223%" height="15" fill="rgb(217,52,54)" fg:x="96791" fg:w="54"/><text x="40.2759%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (54 samples, 0.02%)</title><rect x="40.0259%" y="405" width="0.0223%" height="15" fill="rgb(222,29,26)" fg:x="96791" fg:w="54"/><text x="40.2759%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (54 samples, 0.02%)</title><rect x="40.0259%" y="389" width="0.0223%" height="15" fill="rgb(216,177,29)" fg:x="96791" fg:w="54"/><text x="40.2759%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (54 samples, 0.02%)</title><rect x="40.0259%" y="373" width="0.0223%" height="15" fill="rgb(247,136,51)" fg:x="96791" fg:w="54"/><text x="40.2759%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (54 samples, 0.02%)</title><rect x="40.0259%" y="357" width="0.0223%" height="15" fill="rgb(231,47,47)" fg:x="96791" fg:w="54"/><text x="40.2759%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (53 samples, 0.02%)</title><rect x="40.0263%" y="341" width="0.0219%" height="15" fill="rgb(211,192,36)" fg:x="96792" fg:w="53"/><text x="40.2763%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (53 samples, 0.02%)</title><rect x="40.0263%" y="325" width="0.0219%" height="15" fill="rgb(229,156,32)" fg:x="96792" fg:w="53"/><text x="40.2763%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (51 samples, 0.02%)</title><rect x="40.0271%" y="309" width="0.0211%" height="15" fill="rgb(248,213,20)" fg:x="96794" fg:w="51"/><text x="40.2771%" y="319.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (33 samples, 0.01%)</title><rect x="40.0544%" y="341" width="0.0136%" height="15" fill="rgb(217,64,7)" fg:x="96860" fg:w="33"/><text x="40.3044%" y="351.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (33 samples, 0.01%)</title><rect x="40.0544%" y="325" width="0.0136%" height="15" fill="rgb(232,142,8)" fg:x="96860" fg:w="33"/><text x="40.3044%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (33 samples, 0.01%)</title><rect x="40.0544%" y="309" width="0.0136%" height="15" fill="rgb(224,92,44)" fg:x="96860" fg:w="33"/><text x="40.3044%" y="319.50"></text></g><g><title> 32]&gt;::serialize (33 samples, 0.01%)</title><rect x="40.0544%" y="293" width="0.0136%" height="15" fill="rgb(214,169,17)" fg:x="96860" fg:w="33"/><text x="40.3044%" y="303.50"></text></g><g><title>bcs::ser::to_bytes (128 samples, 0.05%)</title><rect x="40.0168%" y="645" width="0.0529%" height="15" fill="rgb(210,59,37)" fg:x="96769" fg:w="128"/><text x="40.2668%" y="655.50"></text></g><g><title>bcs::ser::serialize_into (128 samples, 0.05%)</title><rect x="40.0168%" y="629" width="0.0529%" height="15" fill="rgb(214,116,48)" fg:x="96769" fg:w="128"/><text x="40.2668%" y="639.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (128 samples, 0.05%)</title><rect x="40.0168%" y="613" width="0.0529%" height="15" fill="rgb(244,191,6)" fg:x="96769" fg:w="128"/><text x="40.2668%" y="623.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (128 samples, 0.05%)</title><rect x="40.0168%" y="597" width="0.0529%" height="15" fill="rgb(241,50,52)" fg:x="96769" fg:w="128"/><text x="40.2668%" y="607.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (114 samples, 0.05%)</title><rect x="40.0226%" y="581" width="0.0471%" height="15" fill="rgb(236,75,39)" fg:x="96783" fg:w="114"/><text x="40.2726%" y="591.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (112 samples, 0.05%)</title><rect x="40.0234%" y="565" width="0.0463%" height="15" fill="rgb(236,99,0)" fg:x="96785" fg:w="112"/><text x="40.2734%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (50 samples, 0.02%)</title><rect x="40.0490%" y="549" width="0.0207%" height="15" fill="rgb(207,202,15)" fg:x="96847" fg:w="50"/><text x="40.2990%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (50 samples, 0.02%)</title><rect x="40.0490%" y="533" width="0.0207%" height="15" fill="rgb(233,207,14)" fg:x="96847" fg:w="50"/><text x="40.2990%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (50 samples, 0.02%)</title><rect x="40.0490%" y="517" width="0.0207%" height="15" fill="rgb(226,27,51)" fg:x="96847" fg:w="50"/><text x="40.2990%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (50 samples, 0.02%)</title><rect x="40.0490%" y="501" width="0.0207%" height="15" fill="rgb(206,104,42)" fg:x="96847" fg:w="50"/><text x="40.2990%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (50 samples, 0.02%)</title><rect x="40.0490%" y="485" width="0.0207%" height="15" fill="rgb(212,225,4)" fg:x="96847" fg:w="50"/><text x="40.2990%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (50 samples, 0.02%)</title><rect x="40.0490%" y="469" width="0.0207%" height="15" fill="rgb(233,96,42)" fg:x="96847" fg:w="50"/><text x="40.2990%" y="479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (50 samples, 0.02%)</title><rect x="40.0490%" y="453" width="0.0207%" height="15" fill="rgb(229,21,32)" fg:x="96847" fg:w="50"/><text x="40.2990%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (50 samples, 0.02%)</title><rect x="40.0490%" y="437" width="0.0207%" height="15" fill="rgb(226,216,24)" fg:x="96847" fg:w="50"/><text x="40.2990%" y="447.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (48 samples, 0.02%)</title><rect x="40.0499%" y="421" width="0.0198%" height="15" fill="rgb(221,163,17)" fg:x="96849" fg:w="48"/><text x="40.2999%" y="431.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (38 samples, 0.02%)</title><rect x="40.0540%" y="405" width="0.0157%" height="15" fill="rgb(216,216,42)" fg:x="96859" fg:w="38"/><text x="40.3040%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (38 samples, 0.02%)</title><rect x="40.0540%" y="389" width="0.0157%" height="15" fill="rgb(240,118,7)" fg:x="96859" fg:w="38"/><text x="40.3040%" y="399.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (38 samples, 0.02%)</title><rect x="40.0540%" y="373" width="0.0157%" height="15" fill="rgb(221,67,37)" fg:x="96859" fg:w="38"/><text x="40.3040%" y="383.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (37 samples, 0.02%)</title><rect x="40.0544%" y="357" width="0.0153%" height="15" fill="rgb(241,32,44)" fg:x="96860" fg:w="37"/><text x="40.3044%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (34 samples, 0.01%)</title><rect x="40.0697%" y="645" width="0.0141%" height="15" fill="rgb(235,204,43)" fg:x="96897" fg:w="34"/><text x="40.3197%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (31 samples, 0.01%)</title><rect x="40.0710%" y="629" width="0.0128%" height="15" fill="rgb(213,116,10)" fg:x="96900" fg:w="31"/><text x="40.3210%" y="639.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (168 samples, 0.07%)</title><rect x="40.0147%" y="677" width="0.0695%" height="15" fill="rgb(239,15,48)" fg:x="96764" fg:w="168"/><text x="40.2647%" y="687.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (166 samples, 0.07%)</title><rect x="40.0155%" y="661" width="0.0686%" height="15" fill="rgb(207,123,36)" fg:x="96766" fg:w="166"/><text x="40.2655%" y="671.50"></text></g><g><title>aptos_block_executor::data_cache::create_access_path (171 samples, 0.07%)</title><rect x="40.0139%" y="693" width="0.0707%" height="15" fill="rgb(209,103,30)" fg:x="96762" fg:w="171"/><text x="40.2639%" y="703.50"></text></g><g><title>&lt;aptos_block_executor::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (282 samples, 0.12%)</title><rect x="39.9688%" y="709" width="0.1166%" height="15" fill="rgb(238,100,19)" fg:x="96653" fg:w="282"/><text x="40.2188%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (27 samples, 0.01%)</title><rect x="40.0912%" y="709" width="0.0112%" height="15" fill="rgb(244,30,14)" fg:x="96949" fg:w="27"/><text x="40.3412%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (27 samples, 0.01%)</title><rect x="40.0912%" y="693" width="0.0112%" height="15" fill="rgb(249,174,6)" fg:x="96949" fg:w="27"/><text x="40.3412%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (27 samples, 0.01%)</title><rect x="40.0912%" y="677" width="0.0112%" height="15" fill="rgb(235,213,41)" fg:x="96949" fg:w="27"/><text x="40.3412%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (27 samples, 0.01%)</title><rect x="40.0912%" y="661" width="0.0112%" height="15" fill="rgb(213,118,6)" fg:x="96949" fg:w="27"/><text x="40.3412%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (27 samples, 0.01%)</title><rect x="40.0912%" y="645" width="0.0112%" height="15" fill="rgb(235,44,51)" fg:x="96949" fg:w="27"/><text x="40.3412%" y="655.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (27 samples, 0.01%)</title><rect x="40.0912%" y="629" width="0.0112%" height="15" fill="rgb(217,9,53)" fg:x="96949" fg:w="27"/><text x="40.3412%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (29 samples, 0.01%)</title><rect x="40.1024%" y="709" width="0.0120%" height="15" fill="rgb(237,172,34)" fg:x="96976" fg:w="29"/><text x="40.3524%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (29 samples, 0.01%)</title><rect x="40.1024%" y="693" width="0.0120%" height="15" fill="rgb(206,206,11)" fg:x="96976" fg:w="29"/><text x="40.3524%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (29 samples, 0.01%)</title><rect x="40.1024%" y="677" width="0.0120%" height="15" fill="rgb(214,149,29)" fg:x="96976" fg:w="29"/><text x="40.3524%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (29 samples, 0.01%)</title><rect x="40.1024%" y="661" width="0.0120%" height="15" fill="rgb(208,123,3)" fg:x="96976" fg:w="29"/><text x="40.3524%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (32 samples, 0.01%)</title><rect x="40.1144%" y="709" width="0.0132%" height="15" fill="rgb(229,126,4)" fg:x="97005" fg:w="32"/><text x="40.3644%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (35 samples, 0.01%)</title><rect x="40.1276%" y="709" width="0.0145%" height="15" fill="rgb(222,92,36)" fg:x="97037" fg:w="35"/><text x="40.3776%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (32 samples, 0.01%)</title><rect x="40.1289%" y="693" width="0.0132%" height="15" fill="rgb(216,39,41)" fg:x="97040" fg:w="32"/><text x="40.3789%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (30 samples, 0.01%)</title><rect x="40.1450%" y="693" width="0.0124%" height="15" fill="rgb(253,127,28)" fg:x="97079" fg:w="30"/><text x="40.3950%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (30 samples, 0.01%)</title><rect x="40.1450%" y="677" width="0.0124%" height="15" fill="rgb(249,152,51)" fg:x="97079" fg:w="30"/><text x="40.3950%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (30 samples, 0.01%)</title><rect x="40.1450%" y="661" width="0.0124%" height="15" fill="rgb(209,123,42)" fg:x="97079" fg:w="30"/><text x="40.3950%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (30 samples, 0.01%)</title><rect x="40.1450%" y="645" width="0.0124%" height="15" fill="rgb(241,118,22)" fg:x="97079" fg:w="30"/><text x="40.3950%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (30 samples, 0.01%)</title><rect x="40.1450%" y="629" width="0.0124%" height="15" fill="rgb(208,25,7)" fg:x="97079" fg:w="30"/><text x="40.3950%" y="639.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (35 samples, 0.01%)</title><rect x="40.1450%" y="709" width="0.0145%" height="15" fill="rgb(243,144,39)" fg:x="97079" fg:w="35"/><text x="40.3950%" y="719.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (34 samples, 0.01%)</title><rect x="40.1760%" y="389" width="0.0141%" height="15" fill="rgb(250,50,5)" fg:x="97154" fg:w="34"/><text x="40.4260%" y="399.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (25 samples, 0.01%)</title><rect x="40.1797%" y="373" width="0.0103%" height="15" fill="rgb(207,67,11)" fg:x="97163" fg:w="25"/><text x="40.4297%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.01%)</title><rect x="40.1797%" y="357" width="0.0103%" height="15" fill="rgb(245,204,40)" fg:x="97163" fg:w="25"/><text x="40.4297%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.01%)</title><rect x="40.1797%" y="341" width="0.0103%" height="15" fill="rgb(238,228,24)" fg:x="97163" fg:w="25"/><text x="40.4297%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.01%)</title><rect x="40.1797%" y="325" width="0.0103%" height="15" fill="rgb(217,116,22)" fg:x="97163" fg:w="25"/><text x="40.4297%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.01%)</title><rect x="40.1797%" y="309" width="0.0103%" height="15" fill="rgb(234,98,12)" fg:x="97163" fg:w="25"/><text x="40.4297%" y="319.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (77 samples, 0.03%)</title><rect x="40.1669%" y="485" width="0.0318%" height="15" fill="rgb(242,170,50)" fg:x="97132" fg:w="77"/><text x="40.4169%" y="495.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (55 samples, 0.02%)</title><rect x="40.1760%" y="469" width="0.0227%" height="15" fill="rgb(235,7,5)" fg:x="97154" fg:w="55"/><text x="40.4260%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (55 samples, 0.02%)</title><rect x="40.1760%" y="453" width="0.0227%" height="15" fill="rgb(241,114,28)" fg:x="97154" fg:w="55"/><text x="40.4260%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (55 samples, 0.02%)</title><rect x="40.1760%" y="437" width="0.0227%" height="15" fill="rgb(246,112,42)" fg:x="97154" fg:w="55"/><text x="40.4260%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (55 samples, 0.02%)</title><rect x="40.1760%" y="421" width="0.0227%" height="15" fill="rgb(248,228,14)" fg:x="97154" fg:w="55"/><text x="40.4260%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (55 samples, 0.02%)</title><rect x="40.1760%" y="405" width="0.0227%" height="15" fill="rgb(208,133,18)" fg:x="97154" fg:w="55"/><text x="40.4260%" y="415.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (120 samples, 0.05%)</title><rect x="40.1607%" y="581" width="0.0496%" height="15" fill="rgb(207,35,49)" fg:x="97117" fg:w="120"/><text x="40.4107%" y="591.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (105 samples, 0.04%)</title><rect x="40.1669%" y="565" width="0.0434%" height="15" fill="rgb(205,68,36)" fg:x="97132" fg:w="105"/><text x="40.4169%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (105 samples, 0.04%)</title><rect x="40.1669%" y="549" width="0.0434%" height="15" fill="rgb(245,62,40)" fg:x="97132" fg:w="105"/><text x="40.4169%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (105 samples, 0.04%)</title><rect x="40.1669%" y="533" width="0.0434%" height="15" fill="rgb(228,27,24)" fg:x="97132" fg:w="105"/><text x="40.4169%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (105 samples, 0.04%)</title><rect x="40.1669%" y="517" width="0.0434%" height="15" fill="rgb(253,19,12)" fg:x="97132" fg:w="105"/><text x="40.4169%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (105 samples, 0.04%)</title><rect x="40.1669%" y="501" width="0.0434%" height="15" fill="rgb(232,28,20)" fg:x="97132" fg:w="105"/><text x="40.4169%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.01%)</title><rect x="40.1987%" y="485" width="0.0116%" height="15" fill="rgb(218,35,51)" fg:x="97209" fg:w="28"/><text x="40.4487%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.01%)</title><rect x="40.1987%" y="469" width="0.0116%" height="15" fill="rgb(212,90,40)" fg:x="97209" fg:w="28"/><text x="40.4487%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (28 samples, 0.01%)</title><rect x="40.1987%" y="453" width="0.0116%" height="15" fill="rgb(220,172,12)" fg:x="97209" fg:w="28"/><text x="40.4487%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.01%)</title><rect x="40.1987%" y="437" width="0.0116%" height="15" fill="rgb(226,159,20)" fg:x="97209" fg:w="28"/><text x="40.4487%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.01%)</title><rect x="40.1987%" y="421" width="0.0116%" height="15" fill="rgb(234,205,16)" fg:x="97209" fg:w="28"/><text x="40.4487%" y="431.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.01%)</title><rect x="40.1987%" y="405" width="0.0116%" height="15" fill="rgb(207,9,39)" fg:x="97209" fg:w="28"/><text x="40.4487%" y="415.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (135 samples, 0.06%)</title><rect x="40.1607%" y="661" width="0.0558%" height="15" fill="rgb(249,143,15)" fg:x="97117" fg:w="135"/><text x="40.4107%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (135 samples, 0.06%)</title><rect x="40.1607%" y="645" width="0.0558%" height="15" fill="rgb(253,133,29)" fg:x="97117" fg:w="135"/><text x="40.4107%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (135 samples, 0.06%)</title><rect x="40.1607%" y="629" width="0.0558%" height="15" fill="rgb(221,187,0)" fg:x="97117" fg:w="135"/><text x="40.4107%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (135 samples, 0.06%)</title><rect x="40.1607%" y="613" width="0.0558%" height="15" fill="rgb(205,204,26)" fg:x="97117" fg:w="135"/><text x="40.4107%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (135 samples, 0.06%)</title><rect x="40.1607%" y="597" width="0.0558%" height="15" fill="rgb(224,68,54)" fg:x="97117" fg:w="135"/><text x="40.4107%" y="607.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (171 samples, 0.07%)</title><rect x="40.1595%" y="709" width="0.0707%" height="15" fill="rgb(209,67,4)" fg:x="97114" fg:w="171"/><text x="40.4095%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (170 samples, 0.07%)</title><rect x="40.1599%" y="693" width="0.0703%" height="15" fill="rgb(228,229,18)" fg:x="97115" fg:w="170"/><text x="40.4099%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (168 samples, 0.07%)</title><rect x="40.1607%" y="677" width="0.0695%" height="15" fill="rgb(231,89,13)" fg:x="97117" fg:w="168"/><text x="40.4107%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (33 samples, 0.01%)</title><rect x="40.2165%" y="661" width="0.0136%" height="15" fill="rgb(210,182,18)" fg:x="97252" fg:w="33"/><text x="40.4665%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (33 samples, 0.01%)</title><rect x="40.2165%" y="645" width="0.0136%" height="15" fill="rgb(240,105,2)" fg:x="97252" fg:w="33"/><text x="40.4665%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (33 samples, 0.01%)</title><rect x="40.2165%" y="629" width="0.0136%" height="15" fill="rgb(207,170,50)" fg:x="97252" fg:w="33"/><text x="40.4665%" y="639.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (72 samples, 0.03%)</title><rect x="40.2302%" y="709" width="0.0298%" height="15" fill="rgb(232,133,24)" fg:x="97285" fg:w="72"/><text x="40.4802%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (72 samples, 0.03%)</title><rect x="40.2302%" y="693" width="0.0298%" height="15" fill="rgb(235,166,27)" fg:x="97285" fg:w="72"/><text x="40.4802%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (68 samples, 0.03%)</title><rect x="40.2318%" y="677" width="0.0281%" height="15" fill="rgb(209,19,13)" fg:x="97289" fg:w="68"/><text x="40.4818%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (44 samples, 0.02%)</title><rect x="40.2417%" y="661" width="0.0182%" height="15" fill="rgb(226,79,39)" fg:x="97313" fg:w="44"/><text x="40.4917%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (44 samples, 0.02%)</title><rect x="40.2417%" y="645" width="0.0182%" height="15" fill="rgb(222,163,10)" fg:x="97313" fg:w="44"/><text x="40.4917%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (44 samples, 0.02%)</title><rect x="40.2417%" y="629" width="0.0182%" height="15" fill="rgb(214,44,19)" fg:x="97313" fg:w="44"/><text x="40.4917%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (32 samples, 0.01%)</title><rect x="40.2467%" y="613" width="0.0132%" height="15" fill="rgb(210,217,13)" fg:x="97325" fg:w="32"/><text x="40.4967%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (32 samples, 0.01%)</title><rect x="40.2467%" y="597" width="0.0132%" height="15" fill="rgb(237,61,54)" fg:x="97325" fg:w="32"/><text x="40.4967%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (32 samples, 0.01%)</title><rect x="40.2467%" y="581" width="0.0132%" height="15" fill="rgb(226,184,24)" fg:x="97325" fg:w="32"/><text x="40.4967%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (32 samples, 0.01%)</title><rect x="40.2467%" y="565" width="0.0132%" height="15" fill="rgb(223,226,4)" fg:x="97325" fg:w="32"/><text x="40.4967%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (32 samples, 0.01%)</title><rect x="40.2467%" y="549" width="0.0132%" height="15" fill="rgb(210,26,41)" fg:x="97325" fg:w="32"/><text x="40.4967%" y="559.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (32 samples, 0.01%)</title><rect x="40.2467%" y="533" width="0.0132%" height="15" fill="rgb(220,221,6)" fg:x="97325" fg:w="32"/><text x="40.4967%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (32 samples, 0.01%)</title><rect x="40.2467%" y="517" width="0.0132%" height="15" fill="rgb(225,89,49)" fg:x="97325" fg:w="32"/><text x="40.4967%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (32 samples, 0.01%)</title><rect x="40.2467%" y="501" width="0.0132%" height="15" fill="rgb(218,70,45)" fg:x="97325" fg:w="32"/><text x="40.4967%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (32 samples, 0.01%)</title><rect x="40.2467%" y="485" width="0.0132%" height="15" fill="rgb(238,166,21)" fg:x="97325" fg:w="32"/><text x="40.4967%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (33 samples, 0.01%)</title><rect x="40.3087%" y="117" width="0.0136%" height="15" fill="rgb(224,141,44)" fg:x="97475" fg:w="33"/><text x="40.5587%" y="127.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (107 samples, 0.04%)</title><rect x="40.2910%" y="293" width="0.0442%" height="15" fill="rgb(230,12,49)" fg:x="97432" fg:w="107"/><text x="40.5410%" y="303.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (100 samples, 0.04%)</title><rect x="40.2939%" y="277" width="0.0414%" height="15" fill="rgb(212,174,12)" fg:x="97439" fg:w="100"/><text x="40.5439%" y="287.50"></text></g><g><title> 32]&gt;::deserialize (100 samples, 0.04%)</title><rect x="40.2939%" y="261" width="0.0414%" height="15" fill="rgb(246,67,9)" fg:x="97439" fg:w="100"/><text x="40.5439%" y="271.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (100 samples, 0.04%)</title><rect x="40.2939%" y="245" width="0.0414%" height="15" fill="rgb(239,35,23)" fg:x="97439" fg:w="100"/><text x="40.5439%" y="255.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (65 samples, 0.03%)</title><rect x="40.3083%" y="229" width="0.0269%" height="15" fill="rgb(211,167,0)" fg:x="97474" fg:w="65"/><text x="40.5583%" y="239.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (65 samples, 0.03%)</title><rect x="40.3083%" y="213" width="0.0269%" height="15" fill="rgb(225,119,45)" fg:x="97474" fg:w="65"/><text x="40.5583%" y="223.50"></text></g><g><title>serde::de::SeqAccess::next_element (64 samples, 0.03%)</title><rect x="40.3087%" y="197" width="0.0265%" height="15" fill="rgb(210,162,6)" fg:x="97475" fg:w="64"/><text x="40.5587%" y="207.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (64 samples, 0.03%)</title><rect x="40.3087%" y="181" width="0.0265%" height="15" fill="rgb(208,118,35)" fg:x="97475" fg:w="64"/><text x="40.5587%" y="191.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (64 samples, 0.03%)</title><rect x="40.3087%" y="165" width="0.0265%" height="15" fill="rgb(239,4,53)" fg:x="97475" fg:w="64"/><text x="40.5587%" y="175.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (64 samples, 0.03%)</title><rect x="40.3087%" y="149" width="0.0265%" height="15" fill="rgb(213,130,21)" fg:x="97475" fg:w="64"/><text x="40.5587%" y="159.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (64 samples, 0.03%)</title><rect x="40.3087%" y="133" width="0.0265%" height="15" fill="rgb(235,148,0)" fg:x="97475" fg:w="64"/><text x="40.5587%" y="143.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (109 samples, 0.05%)</title><rect x="40.2905%" y="341" width="0.0451%" height="15" fill="rgb(244,224,18)" fg:x="97431" fg:w="109"/><text x="40.5405%" y="351.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (109 samples, 0.05%)</title><rect x="40.2905%" y="325" width="0.0451%" height="15" fill="rgb(211,214,4)" fg:x="97431" fg:w="109"/><text x="40.5405%" y="335.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (109 samples, 0.05%)</title><rect x="40.2905%" y="309" width="0.0451%" height="15" fill="rgb(206,119,25)" fg:x="97431" fg:w="109"/><text x="40.5405%" y="319.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (127 samples, 0.05%)</title><rect x="40.2856%" y="373" width="0.0525%" height="15" fill="rgb(243,93,47)" fg:x="97419" fg:w="127"/><text x="40.5356%" y="383.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (127 samples, 0.05%)</title><rect x="40.2856%" y="357" width="0.0525%" height="15" fill="rgb(224,194,6)" fg:x="97419" fg:w="127"/><text x="40.5356%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (31 samples, 0.01%)</title><rect x="40.3381%" y="373" width="0.0128%" height="15" fill="rgb(243,229,6)" fg:x="97546" fg:w="31"/><text x="40.5881%" y="383.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (177 samples, 0.07%)</title><rect x="40.2856%" y="405" width="0.0732%" height="15" fill="rgb(207,23,50)" fg:x="97419" fg:w="177"/><text x="40.5356%" y="415.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (177 samples, 0.07%)</title><rect x="40.2856%" y="389" width="0.0732%" height="15" fill="rgb(253,192,32)" fg:x="97419" fg:w="177"/><text x="40.5356%" y="399.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (190 samples, 0.08%)</title><rect x="40.2810%" y="421" width="0.0786%" height="15" fill="rgb(213,21,6)" fg:x="97408" fg:w="190"/><text x="40.5310%" y="431.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (194 samples, 0.08%)</title><rect x="40.2810%" y="437" width="0.0802%" height="15" fill="rgb(243,151,13)" fg:x="97408" fg:w="194"/><text x="40.5310%" y="447.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (212 samples, 0.09%)</title><rect x="40.2810%" y="453" width="0.0877%" height="15" fill="rgb(233,165,41)" fg:x="97408" fg:w="212"/><text x="40.5310%" y="463.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (222 samples, 0.09%)</title><rect x="40.2810%" y="485" width="0.0918%" height="15" fill="rgb(246,176,45)" fg:x="97408" fg:w="222"/><text x="40.5310%" y="495.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (222 samples, 0.09%)</title><rect x="40.2810%" y="469" width="0.0918%" height="15" fill="rgb(217,170,52)" fg:x="97408" fg:w="222"/><text x="40.5310%" y="479.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (224 samples, 0.09%)</title><rect x="40.2810%" y="501" width="0.0926%" height="15" fill="rgb(214,203,54)" fg:x="97408" fg:w="224"/><text x="40.5310%" y="511.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (262 samples, 0.11%)</title><rect x="40.2740%" y="533" width="0.1083%" height="15" fill="rgb(248,215,49)" fg:x="97391" fg:w="262"/><text x="40.5240%" y="543.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (262 samples, 0.11%)</title><rect x="40.2740%" y="517" width="0.1083%" height="15" fill="rgb(208,46,10)" fg:x="97391" fg:w="262"/><text x="40.5240%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (46 samples, 0.02%)</title><rect x="40.3823%" y="533" width="0.0190%" height="15" fill="rgb(254,5,31)" fg:x="97653" fg:w="46"/><text x="40.6323%" y="543.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (318 samples, 0.13%)</title><rect x="40.2740%" y="565" width="0.1315%" height="15" fill="rgb(222,104,33)" fg:x="97391" fg:w="318"/><text x="40.5240%" y="575.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (318 samples, 0.13%)</title><rect x="40.2740%" y="549" width="0.1315%" height="15" fill="rgb(248,49,16)" fg:x="97391" fg:w="318"/><text x="40.5240%" y="559.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (330 samples, 0.14%)</title><rect x="40.2707%" y="581" width="0.1365%" height="15" fill="rgb(232,198,41)" fg:x="97383" fg:w="330"/><text x="40.5207%" y="591.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (343 samples, 0.14%)</title><rect x="40.2707%" y="613" width="0.1418%" height="15" fill="rgb(214,125,3)" fg:x="97383" fg:w="343"/><text x="40.5207%" y="623.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (343 samples, 0.14%)</title><rect x="40.2707%" y="597" width="0.1418%" height="15" fill="rgb(229,220,28)" fg:x="97383" fg:w="343"/><text x="40.5207%" y="607.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (380 samples, 0.16%)</title><rect x="40.2707%" y="661" width="0.1571%" height="15" fill="rgb(222,64,37)" fg:x="97383" fg:w="380"/><text x="40.5207%" y="671.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (380 samples, 0.16%)</title><rect x="40.2707%" y="645" width="0.1571%" height="15" fill="rgb(249,184,13)" fg:x="97383" fg:w="380"/><text x="40.5207%" y="655.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (380 samples, 0.16%)</title><rect x="40.2707%" y="629" width="0.1571%" height="15" fill="rgb(252,176,6)" fg:x="97383" fg:w="380"/><text x="40.5207%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (37 samples, 0.02%)</title><rect x="40.4125%" y="613" width="0.0153%" height="15" fill="rgb(228,153,7)" fg:x="97726" fg:w="37"/><text x="40.6625%" y="623.50"></text></g><g><title>core::ptr::write (31 samples, 0.01%)</title><rect x="40.4150%" y="597" width="0.0128%" height="15" fill="rgb(242,193,5)" fg:x="97732" fg:w="31"/><text x="40.6650%" y="607.50"></text></g><g><title>bcs::de::from_bytes_seed (401 samples, 0.17%)</title><rect x="40.2624%" y="693" width="0.1658%" height="15" fill="rgb(232,140,9)" fg:x="97363" fg:w="401"/><text x="40.5124%" y="703.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (385 samples, 0.16%)</title><rect x="40.2690%" y="677" width="0.1592%" height="15" fill="rgb(213,222,16)" fg:x="97379" fg:w="385"/><text x="40.5190%" y="687.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (1,151 samples, 0.48%)</title><rect x="39.9535%" y="757" width="0.4760%" height="15" fill="rgb(222,75,50)" fg:x="96616" fg:w="1151"/><text x="40.2035%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (1,151 samples, 0.48%)</title><rect x="39.9535%" y="741" width="0.4760%" height="15" fill="rgb(205,180,2)" fg:x="96616" fg:w="1151"/><text x="40.2035%" y="751.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (1,118 samples, 0.46%)</title><rect x="39.9672%" y="725" width="0.4623%" height="15" fill="rgb(216,34,7)" fg:x="96649" fg:w="1118"/><text x="40.2172%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (404 samples, 0.17%)</title><rect x="40.2624%" y="709" width="0.1671%" height="15" fill="rgb(253,16,32)" fg:x="97363" fg:w="404"/><text x="40.5124%" y="719.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::check_balance (1,397 samples, 0.58%)</title><rect x="40.4295%" y="757" width="0.5777%" height="15" fill="rgb(208,97,28)" fg:x="97767" fg:w="1397"/><text x="40.6795%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (1,059 samples, 0.44%)</title><rect x="41.0093%" y="757" width="0.4379%" height="15" fill="rgb(225,92,11)" fg:x="99169" fg:w="1059"/><text x="41.2593%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;bool&gt;&gt;::cast (183 samples, 0.08%)</title><rect x="41.4472%" y="725" width="0.0757%" height="15" fill="rgb(243,38,12)" fg:x="100228" fg:w="183"/><text x="41.6972%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (69 samples, 0.03%)</title><rect x="41.4943%" y="709" width="0.0285%" height="15" fill="rgb(208,139,16)" fg:x="100342" fg:w="69"/><text x="41.7443%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::Reference&gt;&gt;::cast (364 samples, 0.15%)</title><rect x="41.5344%" y="725" width="0.1505%" height="15" fill="rgb(227,24,9)" fg:x="100439" fg:w="364"/><text x="41.7844%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (33 samples, 0.01%)</title><rect x="41.6928%" y="709" width="0.0136%" height="15" fill="rgb(206,62,11)" fg:x="100822" fg:w="33"/><text x="41.9428%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (99 samples, 0.04%)</title><rect x="41.6903%" y="725" width="0.0409%" height="15" fill="rgb(228,134,27)" fg:x="100816" fg:w="99"/><text x="41.9403%" y="735.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::ContainerRef&gt;&gt;::cast (60 samples, 0.02%)</title><rect x="41.7065%" y="709" width="0.0248%" height="15" fill="rgb(205,55,33)" fg:x="100855" fg:w="60"/><text x="41.9565%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::VectorRef&gt;&gt;::cast (530 samples, 0.22%)</title><rect x="41.7325%" y="725" width="0.2192%" height="15" fill="rgb(243,75,43)" fg:x="100918" fg:w="530"/><text x="41.9825%" y="735.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (1,287 samples, 0.53%)</title><rect x="41.4472%" y="757" width="0.5322%" height="15" fill="rgb(223,27,42)" fg:x="100228" fg:w="1287"/><text x="41.6972%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (1,287 samples, 0.53%)</title><rect x="41.4472%" y="741" width="0.5322%" height="15" fill="rgb(232,189,33)" fg:x="100228" fg:w="1287"/><text x="41.6972%" y="751.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;u64&gt;&gt;::cast (67 samples, 0.03%)</title><rect x="41.9517%" y="725" width="0.0277%" height="15" fill="rgb(210,9,39)" fg:x="101448" fg:w="67"/><text x="42.2017%" y="735.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (3,567 samples, 1.48%)</title><rect x="41.9889%" y="757" width="1.4751%" height="15" fill="rgb(242,85,26)" fg:x="101538" fg:w="3567"/><text x="42.2389%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,567 samples, 1.48%)</title><rect x="41.9889%" y="741" width="1.4751%" height="15" fill="rgb(248,44,4)" fg:x="101538" fg:w="3567"/><text x="42.2389%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Resolver::constant_at (43 samples, 0.02%)</title><rect x="43.4660%" y="757" width="0.0178%" height="15" fill="rgb(250,96,46)" fg:x="105110" fg:w="43"/><text x="43.7160%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (43 samples, 0.02%)</title><rect x="43.4660%" y="741" width="0.0178%" height="15" fill="rgb(229,116,26)" fg:x="105110" fg:w="43"/><text x="43.7160%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (43 samples, 0.02%)</title><rect x="43.4660%" y="725" width="0.0178%" height="15" fill="rgb(246,94,34)" fg:x="105110" fg:w="43"/><text x="43.7160%" y="735.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (43 samples, 0.02%)</title><rect x="43.4660%" y="709" width="0.0178%" height="15" fill="rgb(251,73,21)" fg:x="105110" fg:w="43"/><text x="43.7160%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_offset (28 samples, 0.01%)</title><rect x="43.4896%" y="757" width="0.0116%" height="15" fill="rgb(254,121,25)" fg:x="105167" fg:w="28"/><text x="43.7396%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (36 samples, 0.01%)</title><rect x="43.5198%" y="613" width="0.0149%" height="15" fill="rgb(215,161,49)" fg:x="105240" fg:w="36"/><text x="43.7698%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (36 samples, 0.01%)</title><rect x="43.5198%" y="597" width="0.0149%" height="15" fill="rgb(221,43,13)" fg:x="105240" fg:w="36"/><text x="43.7698%" y="607.50"></text></g><g><title>core::ptr::write (25 samples, 0.01%)</title><rect x="43.5243%" y="581" width="0.0103%" height="15" fill="rgb(249,5,37)" fg:x="105251" fg:w="25"/><text x="43.7743%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (33 samples, 0.01%)</title><rect x="43.5367%" y="469" width="0.0136%" height="15" fill="rgb(226,25,44)" fg:x="105281" fg:w="33"/><text x="43.7867%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.02%)</title><rect x="43.5347%" y="565" width="0.0198%" height="15" fill="rgb(238,189,16)" fg:x="105276" fg:w="48"/><text x="43.7847%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (48 samples, 0.02%)</title><rect x="43.5347%" y="549" width="0.0198%" height="15" fill="rgb(251,186,8)" fg:x="105276" fg:w="48"/><text x="43.7847%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (48 samples, 0.02%)</title><rect x="43.5347%" y="533" width="0.0198%" height="15" fill="rgb(254,34,31)" fg:x="105276" fg:w="48"/><text x="43.7847%" y="543.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (48 samples, 0.02%)</title><rect x="43.5347%" y="517" width="0.0198%" height="15" fill="rgb(225,215,27)" fg:x="105276" fg:w="48"/><text x="43.7847%" y="527.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (48 samples, 0.02%)</title><rect x="43.5347%" y="501" width="0.0198%" height="15" fill="rgb(221,192,48)" fg:x="105276" fg:w="48"/><text x="43.7847%" y="511.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (43 samples, 0.02%)</title><rect x="43.5367%" y="485" width="0.0178%" height="15" fill="rgb(219,137,20)" fg:x="105281" fg:w="43"/><text x="43.7867%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 0.03%)</title><rect x="43.5347%" y="613" width="0.0343%" height="15" fill="rgb(219,84,11)" fg:x="105276" fg:w="83"/><text x="43.7847%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (83 samples, 0.03%)</title><rect x="43.5347%" y="597" width="0.0343%" height="15" fill="rgb(224,10,23)" fg:x="105276" fg:w="83"/><text x="43.7847%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (83 samples, 0.03%)</title><rect x="43.5347%" y="581" width="0.0343%" height="15" fill="rgb(248,22,39)" fg:x="105276" fg:w="83"/><text x="43.7847%" y="591.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (35 samples, 0.01%)</title><rect x="43.5545%" y="565" width="0.0145%" height="15" fill="rgb(212,154,20)" fg:x="105324" fg:w="35"/><text x="43.8045%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (166 samples, 0.07%)</title><rect x="43.5074%" y="741" width="0.0686%" height="15" fill="rgb(236,199,50)" fg:x="105210" fg:w="166"/><text x="43.7574%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (166 samples, 0.07%)</title><rect x="43.5074%" y="725" width="0.0686%" height="15" fill="rgb(211,9,17)" fg:x="105210" fg:w="166"/><text x="43.7574%" y="735.50"></text></g><g><title>core::iter::adapters::try_process (166 samples, 0.07%)</title><rect x="43.5074%" y="709" width="0.0686%" height="15" fill="rgb(243,216,36)" fg:x="105210" fg:w="166"/><text x="43.7574%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (136 samples, 0.06%)</title><rect x="43.5198%" y="693" width="0.0562%" height="15" fill="rgb(250,2,10)" fg:x="105240" fg:w="136"/><text x="43.7698%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (136 samples, 0.06%)</title><rect x="43.5198%" y="677" width="0.0562%" height="15" fill="rgb(226,50,48)" fg:x="105240" fg:w="136"/><text x="43.7698%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (136 samples, 0.06%)</title><rect x="43.5198%" y="661" width="0.0562%" height="15" fill="rgb(243,81,16)" fg:x="105240" fg:w="136"/><text x="43.7698%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (136 samples, 0.06%)</title><rect x="43.5198%" y="645" width="0.0562%" height="15" fill="rgb(250,14,2)" fg:x="105240" fg:w="136"/><text x="43.7698%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (136 samples, 0.06%)</title><rect x="43.5198%" y="629" width="0.0562%" height="15" fill="rgb(233,135,29)" fg:x="105240" fg:w="136"/><text x="43.7698%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (60 samples, 0.02%)</title><rect x="43.5760%" y="725" width="0.0248%" height="15" fill="rgb(224,64,43)" fg:x="105376" fg:w="60"/><text x="43.8260%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (60 samples, 0.02%)</title><rect x="43.5760%" y="709" width="0.0248%" height="15" fill="rgb(238,84,13)" fg:x="105376" fg:w="60"/><text x="43.8260%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (60 samples, 0.02%)</title><rect x="43.5760%" y="693" width="0.0248%" height="15" fill="rgb(253,48,26)" fg:x="105376" fg:w="60"/><text x="43.8260%" y="703.50"></text></g><g><title>alloc::alloc::alloc (60 samples, 0.02%)</title><rect x="43.5760%" y="677" width="0.0248%" height="15" fill="rgb(205,223,31)" fg:x="105376" fg:w="60"/><text x="43.8260%" y="687.50"></text></g><g><title>mallocx (34 samples, 0.01%)</title><rect x="43.5868%" y="661" width="0.0141%" height="15" fill="rgb(221,41,32)" fg:x="105402" fg:w="34"/><text x="43.8368%" y="671.50"></text></g><g><title>imalloc (34 samples, 0.01%)</title><rect x="43.5868%" y="645" width="0.0141%" height="15" fill="rgb(213,158,31)" fg:x="105402" fg:w="34"/><text x="43.8368%" y="655.50"></text></g><g><title>imalloc_body (34 samples, 0.01%)</title><rect x="43.5868%" y="629" width="0.0141%" height="15" fill="rgb(245,126,43)" fg:x="105402" fg:w="34"/><text x="43.8368%" y="639.50"></text></g><g><title>imalloc_no_sample (34 samples, 0.01%)</title><rect x="43.5868%" y="613" width="0.0141%" height="15" fill="rgb(227,7,22)" fg:x="105402" fg:w="34"/><text x="43.8368%" y="623.50"></text></g><g><title>iallocztm (34 samples, 0.01%)</title><rect x="43.5868%" y="597" width="0.0141%" height="15" fill="rgb(252,90,44)" fg:x="105402" fg:w="34"/><text x="43.8368%" y="607.50"></text></g><g><title>arena_malloc (34 samples, 0.01%)</title><rect x="43.5868%" y="581" width="0.0141%" height="15" fill="rgb(253,91,0)" fg:x="105402" fg:w="34"/><text x="43.8368%" y="591.50"></text></g><g><title>tcache_alloc_small (30 samples, 0.01%)</title><rect x="43.5884%" y="565" width="0.0124%" height="15" fill="rgb(252,175,49)" fg:x="105406" fg:w="30"/><text x="43.8384%" y="575.50"></text></g><g><title>cache_bin_alloc_easy (30 samples, 0.01%)</title><rect x="43.5884%" y="549" width="0.0124%" height="15" fill="rgb(246,150,1)" fg:x="105406" fg:w="30"/><text x="43.8384%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (73 samples, 0.03%)</title><rect x="43.6008%" y="725" width="0.0302%" height="15" fill="rgb(241,192,25)" fg:x="105436" fg:w="73"/><text x="43.8508%" y="735.50"></text></g><g><title>core::ptr::read (73 samples, 0.03%)</title><rect x="43.6008%" y="709" width="0.0302%" height="15" fill="rgb(239,187,11)" fg:x="105436" fg:w="73"/><text x="43.8508%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (346 samples, 0.14%)</title><rect x="43.5074%" y="757" width="0.1431%" height="15" fill="rgb(218,202,51)" fg:x="105210" fg:w="346"/><text x="43.7574%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (180 samples, 0.07%)</title><rect x="43.5760%" y="741" width="0.0744%" height="15" fill="rgb(225,176,8)" fg:x="105376" fg:w="180"/><text x="43.8260%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (47 samples, 0.02%)</title><rect x="43.6310%" y="725" width="0.0194%" height="15" fill="rgb(219,122,41)" fg:x="105509" fg:w="47"/><text x="43.8810%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (47 samples, 0.02%)</title><rect x="43.6310%" y="709" width="0.0194%" height="15" fill="rgb(248,140,20)" fg:x="105509" fg:w="47"/><text x="43.8810%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.02%)</title><rect x="43.6310%" y="693" width="0.0194%" height="15" fill="rgb(245,41,37)" fg:x="105509" fg:w="47"/><text x="43.8810%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (47 samples, 0.02%)</title><rect x="43.6310%" y="677" width="0.0194%" height="15" fill="rgb(235,82,39)" fg:x="105509" fg:w="47"/><text x="43.8810%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (47 samples, 0.02%)</title><rect x="43.6310%" y="661" width="0.0194%" height="15" fill="rgb(230,108,42)" fg:x="105509" fg:w="47"/><text x="43.8810%" y="671.50"></text></g><g><title>sdallocx (29 samples, 0.01%)</title><rect x="43.6385%" y="645" width="0.0120%" height="15" fill="rgb(215,150,50)" fg:x="105527" fg:w="29"/><text x="43.8885%" y="655.50"></text></g><g><title>isfree (29 samples, 0.01%)</title><rect x="43.6385%" y="629" width="0.0120%" height="15" fill="rgb(233,212,5)" fg:x="105527" fg:w="29"/><text x="43.8885%" y="639.50"></text></g><g><title>isdalloct (29 samples, 0.01%)</title><rect x="43.6385%" y="613" width="0.0120%" height="15" fill="rgb(245,80,22)" fg:x="105527" fg:w="29"/><text x="43.8885%" y="623.50"></text></g><g><title>arena_sdalloc (29 samples, 0.01%)</title><rect x="43.6385%" y="597" width="0.0120%" height="15" fill="rgb(238,129,16)" fg:x="105527" fg:w="29"/><text x="43.8885%" y="607.50"></text></g><g><title>tcache_dalloc_small (29 samples, 0.01%)</title><rect x="43.6385%" y="581" width="0.0120%" height="15" fill="rgb(240,19,0)" fg:x="105527" fg:w="29"/><text x="43.8885%" y="591.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (43 samples, 0.02%)</title><rect x="43.6583%" y="741" width="0.0178%" height="15" fill="rgb(232,42,35)" fg:x="105575" fg:w="43"/><text x="43.9083%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Resolver::single_type_at (203 samples, 0.08%)</title><rect x="43.6761%" y="741" width="0.0839%" height="15" fill="rgb(223,130,24)" fg:x="105618" fg:w="203"/><text x="43.9261%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Module::single_type_at (203 samples, 0.08%)</title><rect x="43.6761%" y="725" width="0.0839%" height="15" fill="rgb(237,16,22)" fg:x="105618" fg:w="203"/><text x="43.9261%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (203 samples, 0.08%)</title><rect x="43.6761%" y="709" width="0.0839%" height="15" fill="rgb(248,192,20)" fg:x="105618" fg:w="203"/><text x="43.9261%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (203 samples, 0.08%)</title><rect x="43.6761%" y="693" width="0.0839%" height="15" fill="rgb(233,167,2)" fg:x="105618" fg:w="203"/><text x="43.9261%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (203 samples, 0.08%)</title><rect x="43.6761%" y="677" width="0.0839%" height="15" fill="rgb(252,71,44)" fg:x="105618" fg:w="203"/><text x="43.9261%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (203 samples, 0.08%)</title><rect x="43.6761%" y="661" width="0.0839%" height="15" fill="rgb(238,37,47)" fg:x="105618" fg:w="203"/><text x="43.9261%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (203 samples, 0.08%)</title><rect x="43.6761%" y="645" width="0.0839%" height="15" fill="rgb(214,202,54)" fg:x="105618" fg:w="203"/><text x="43.9261%" y="655.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_single_type (960 samples, 0.40%)</title><rect x="43.6505%" y="757" width="0.3970%" height="15" fill="rgb(254,165,40)" fg:x="105556" fg:w="960"/><text x="43.9005%" y="767.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (695 samples, 0.29%)</title><rect x="43.7601%" y="741" width="0.2874%" height="15" fill="rgb(246,173,38)" fg:x="105821" fg:w="695"/><text x="44.0101%" y="751.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (650 samples, 0.27%)</title><rect x="43.7787%" y="725" width="0.2688%" height="15" fill="rgb(215,3,27)" fg:x="105866" fg:w="650"/><text x="44.0287%" y="735.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (101 samples, 0.04%)</title><rect x="44.0057%" y="709" width="0.0418%" height="15" fill="rgb(239,169,51)" fg:x="106415" fg:w="101"/><text x="44.2557%" y="719.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (101 samples, 0.04%)</title><rect x="44.0057%" y="693" width="0.0418%" height="15" fill="rgb(212,5,25)" fg:x="106415" fg:w="101"/><text x="44.2557%" y="703.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (101 samples, 0.04%)</title><rect x="44.0057%" y="677" width="0.0418%" height="15" fill="rgb(243,45,17)" fg:x="106415" fg:w="101"/><text x="44.2557%" y="687.50"></text></g><g><title>move_vm_runtime::tracing::trace (1,544 samples, 0.64%)</title><rect x="44.0475%" y="757" width="0.6385%" height="15" fill="rgb(242,97,9)" fg:x="106516" fg:w="1544"/><text x="44.2975%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::borrow_loc (477 samples, 0.20%)</title><rect x="44.6909%" y="757" width="0.1973%" height="15" fill="rgb(228,71,31)" fg:x="108072" fg:w="477"/><text x="44.9409%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,038 samples, 0.84%)</title><rect x="44.8906%" y="741" width="0.8428%" height="15" fill="rgb(252,184,16)" fg:x="108555" fg:w="2038"/><text x="45.1406%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::copy_loc (2,989 samples, 1.24%)</title><rect x="44.8882%" y="757" width="1.2360%" height="15" fill="rgb(236,169,46)" fg:x="108549" fg:w="2989"/><text x="45.1382%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (945 samples, 0.39%)</title><rect x="45.7334%" y="741" width="0.3908%" height="15" fill="rgb(207,17,47)" fg:x="110593" fg:w="945"/><text x="45.9834%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::copy_value (45 samples, 0.02%)</title><rect x="46.1056%" y="725" width="0.0186%" height="15" fill="rgb(206,201,28)" fg:x="111493" fg:w="45"/><text x="46.3556%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_by_ref (45 samples, 0.02%)</title><rect x="46.1056%" y="709" width="0.0186%" height="15" fill="rgb(224,184,23)" fg:x="111493" fg:w="45"/><text x="46.3556%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::move_loc (1,515 samples, 0.63%)</title><rect x="46.1242%" y="757" width="0.6265%" height="15" fill="rgb(208,139,48)" fg:x="111538" fg:w="1515"/><text x="46.3742%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (1,134 samples, 0.47%)</title><rect x="46.2818%" y="741" width="0.4689%" height="15" fill="rgb(208,130,10)" fg:x="111919" fg:w="1134"/><text x="46.5318%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (128 samples, 0.05%)</title><rect x="46.7507%" y="741" width="0.0529%" height="15" fill="rgb(211,213,45)" fg:x="113053" fg:w="128"/><text x="47.0007%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (728 samples, 0.30%)</title><rect x="46.7507%" y="757" width="0.3010%" height="15" fill="rgb(235,100,30)" fg:x="113053" fg:w="728"/><text x="47.0007%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (600 samples, 0.25%)</title><rect x="46.8036%" y="741" width="0.2481%" height="15" fill="rgb(206,144,31)" fg:x="113181" fg:w="600"/><text x="47.0536%" y="751.50"></text></g><g><title>core::mem::replace (600 samples, 0.25%)</title><rect x="46.8036%" y="725" width="0.2481%" height="15" fill="rgb(224,200,26)" fg:x="113181" fg:w="600"/><text x="47.0536%" y="735.50"></text></g><g><title>core::ptr::write (600 samples, 0.25%)</title><rect x="46.8036%" y="709" width="0.2481%" height="15" fill="rgb(247,104,53)" fg:x="113181" fg:w="600"/><text x="47.0536%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::IndexedRef&gt; (44 samples, 0.02%)</title><rect x="47.1837%" y="709" width="0.0182%" height="15" fill="rgb(220,14,17)" fg:x="114100" fg:w="44"/><text x="47.4337%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ContainerRef&gt; (44 samples, 0.02%)</title><rect x="47.1837%" y="693" width="0.0182%" height="15" fill="rgb(230,140,40)" fg:x="114100" fg:w="44"/><text x="47.4337%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (37 samples, 0.02%)</title><rect x="47.1866%" y="677" width="0.0153%" height="15" fill="rgb(229,2,41)" fg:x="114107" fg:w="37"/><text x="47.4366%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (37 samples, 0.02%)</title><rect x="47.1866%" y="661" width="0.0153%" height="15" fill="rgb(232,89,16)" fg:x="114107" fg:w="37"/><text x="47.4366%" y="671.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (405 samples, 0.17%)</title><rect x="47.0517%" y="757" width="0.1675%" height="15" fill="rgb(247,59,52)" fg:x="113781" fg:w="405"/><text x="47.3017%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (97 samples, 0.04%)</title><rect x="47.1791%" y="741" width="0.0401%" height="15" fill="rgb(226,110,21)" fg:x="114089" fg:w="97"/><text x="47.4291%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (86 samples, 0.04%)</title><rect x="47.1837%" y="725" width="0.0356%" height="15" fill="rgb(224,176,43)" fg:x="114100" fg:w="86"/><text x="47.4337%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (42 samples, 0.02%)</title><rect x="47.2019%" y="709" width="0.0174%" height="15" fill="rgb(221,73,6)" fg:x="114144" fg:w="42"/><text x="47.4519%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::write_ref (30 samples, 0.01%)</title><rect x="47.2192%" y="757" width="0.0124%" height="15" fill="rgb(232,78,19)" fg:x="114186" fg:w="30"/><text x="47.4692%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::write_ref (30 samples, 0.01%)</title><rect x="47.2192%" y="741" width="0.0124%" height="15" fill="rgb(233,112,48)" fg:x="114186" fg:w="30"/><text x="47.4692%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (82 samples, 0.03%)</title><rect x="47.2333%" y="741" width="0.0339%" height="15" fill="rgb(243,131,47)" fg:x="114220" fg:w="82"/><text x="47.4833%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::Container::len (26 samples, 0.01%)</title><rect x="47.3218%" y="725" width="0.0108%" height="15" fill="rgb(226,51,1)" fg:x="114434" fg:w="26"/><text x="47.5718%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (269 samples, 0.11%)</title><rect x="47.2320%" y="757" width="0.1112%" height="15" fill="rgb(247,58,7)" fg:x="114217" fg:w="269"/><text x="47.4820%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (184 samples, 0.08%)</title><rect x="47.2672%" y="741" width="0.0761%" height="15" fill="rgb(209,7,32)" fg:x="114302" fg:w="184"/><text x="47.5172%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::copy_value (26 samples, 0.01%)</title><rect x="47.3325%" y="725" width="0.0108%" height="15" fill="rgb(209,39,41)" fg:x="114460" fg:w="26"/><text x="47.5825%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_by_ref (26 samples, 0.01%)</title><rect x="47.3325%" y="709" width="0.0108%" height="15" fill="rgb(226,182,46)" fg:x="114460" fg:w="26"/><text x="47.5825%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::Value::constant_sig_token_to_layout (59 samples, 0.02%)</title><rect x="47.3673%" y="741" width="0.0244%" height="15" fill="rgb(230,219,10)" fg:x="114544" fg:w="59"/><text x="47.6173%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (57 samples, 0.02%)</title><rect x="47.4508%" y="693" width="0.0236%" height="15" fill="rgb(227,175,30)" fg:x="114746" fg:w="57"/><text x="47.7008%" y="703.50"></text></g><g><title>bcs::de::Deserializer::peek (43 samples, 0.02%)</title><rect x="47.5438%" y="437" width="0.0178%" height="15" fill="rgb(217,2,50)" fg:x="114971" fg:w="43"/><text x="47.7938%" y="447.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (43 samples, 0.02%)</title><rect x="47.5438%" y="421" width="0.0178%" height="15" fill="rgb(229,160,0)" fg:x="114971" fg:w="43"/><text x="47.7938%" y="431.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (206 samples, 0.09%)</title><rect x="47.4810%" y="645" width="0.0852%" height="15" fill="rgb(207,78,37)" fg:x="114819" fg:w="206"/><text x="47.7310%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (206 samples, 0.09%)</title><rect x="47.4810%" y="629" width="0.0852%" height="15" fill="rgb(225,57,0)" fg:x="114819" fg:w="206"/><text x="47.7310%" y="639.50"></text></g><g><title> 32]&gt;::deserialize (206 samples, 0.09%)</title><rect x="47.4810%" y="613" width="0.0852%" height="15" fill="rgb(232,154,2)" fg:x="114819" fg:w="206"/><text x="47.7310%" y="623.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (206 samples, 0.09%)</title><rect x="47.4810%" y="597" width="0.0852%" height="15" fill="rgb(241,212,25)" fg:x="114819" fg:w="206"/><text x="47.7310%" y="607.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (206 samples, 0.09%)</title><rect x="47.4810%" y="581" width="0.0852%" height="15" fill="rgb(226,69,20)" fg:x="114819" fg:w="206"/><text x="47.7310%" y="591.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (206 samples, 0.09%)</title><rect x="47.4810%" y="565" width="0.0852%" height="15" fill="rgb(247,184,54)" fg:x="114819" fg:w="206"/><text x="47.7310%" y="575.50"></text></g><g><title>serde::de::SeqAccess::next_element (139 samples, 0.06%)</title><rect x="47.5087%" y="549" width="0.0575%" height="15" fill="rgb(210,145,0)" fg:x="114886" fg:w="139"/><text x="47.7587%" y="559.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (139 samples, 0.06%)</title><rect x="47.5087%" y="533" width="0.0575%" height="15" fill="rgb(253,82,12)" fg:x="114886" fg:w="139"/><text x="47.7587%" y="543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (66 samples, 0.03%)</title><rect x="47.5389%" y="517" width="0.0273%" height="15" fill="rgb(245,42,11)" fg:x="114959" fg:w="66"/><text x="47.7889%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (66 samples, 0.03%)</title><rect x="47.5389%" y="501" width="0.0273%" height="15" fill="rgb(219,147,32)" fg:x="114959" fg:w="66"/><text x="47.7889%" y="511.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (66 samples, 0.03%)</title><rect x="47.5389%" y="485" width="0.0273%" height="15" fill="rgb(246,12,7)" fg:x="114959" fg:w="66"/><text x="47.7889%" y="495.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (54 samples, 0.02%)</title><rect x="47.5438%" y="469" width="0.0223%" height="15" fill="rgb(243,50,9)" fg:x="114971" fg:w="54"/><text x="47.7938%" y="479.50"></text></g><g><title>bcs::de::Deserializer::next (54 samples, 0.02%)</title><rect x="47.5438%" y="453" width="0.0223%" height="15" fill="rgb(219,149,6)" fg:x="114971" fg:w="54"/><text x="47.7938%" y="463.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (232 samples, 0.10%)</title><rect x="47.4744%" y="693" width="0.0959%" height="15" fill="rgb(241,51,42)" fg:x="114803" fg:w="232"/><text x="47.7244%" y="703.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (216 samples, 0.09%)</title><rect x="47.4810%" y="677" width="0.0893%" height="15" fill="rgb(226,128,27)" fg:x="114819" fg:w="216"/><text x="47.7310%" y="687.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (216 samples, 0.09%)</title><rect x="47.4810%" y="661" width="0.0893%" height="15" fill="rgb(244,144,4)" fg:x="114819" fg:w="216"/><text x="47.7310%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (43 samples, 0.02%)</title><rect x="47.5765%" y="645" width="0.0178%" height="15" fill="rgb(221,4,13)" fg:x="115050" fg:w="43"/><text x="47.8265%" y="655.50"></text></g><g><title>core::ptr::write (43 samples, 0.02%)</title><rect x="47.5765%" y="629" width="0.0178%" height="15" fill="rgb(208,170,28)" fg:x="115050" fg:w="43"/><text x="47.8265%" y="639.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (67 samples, 0.03%)</title><rect x="47.5765%" y="661" width="0.0277%" height="15" fill="rgb(226,131,13)" fg:x="115050" fg:w="67"/><text x="47.8265%" y="671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (81 samples, 0.03%)</title><rect x="47.5740%" y="693" width="0.0335%" height="15" fill="rgb(215,72,41)" fg:x="115044" fg:w="81"/><text x="47.8240%" y="703.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (81 samples, 0.03%)</title><rect x="47.5740%" y="677" width="0.0335%" height="15" fill="rgb(243,108,20)" fg:x="115044" fg:w="81"/><text x="47.8240%" y="687.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (530 samples, 0.22%)</title><rect x="47.3917%" y="741" width="0.2192%" height="15" fill="rgb(230,189,17)" fg:x="114603" fg:w="530"/><text x="47.6417%" y="751.50"></text></g><g><title>bcs::de::from_bytes_seed (529 samples, 0.22%)</title><rect x="47.3921%" y="725" width="0.2188%" height="15" fill="rgb(220,50,17)" fg:x="114604" fg:w="529"/><text x="47.6421%" y="735.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (391 samples, 0.16%)</title><rect x="47.4491%" y="709" width="0.1617%" height="15" fill="rgb(248,152,48)" fg:x="114742" fg:w="391"/><text x="47.6991%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (655 samples, 0.27%)</title><rect x="47.3433%" y="757" width="0.2709%" height="15" fill="rgb(244,91,11)" fg:x="114486" fg:w="655"/><text x="47.5933%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (45 samples, 0.02%)</title><rect x="47.6179%" y="725" width="0.0186%" height="15" fill="rgb(220,157,5)" fg:x="115150" fg:w="45"/><text x="47.8679%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::Value::equals (63 samples, 0.03%)</title><rect x="47.6141%" y="757" width="0.0261%" height="15" fill="rgb(253,137,8)" fg:x="115141" fg:w="63"/><text x="47.8641%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::equals (54 samples, 0.02%)</title><rect x="47.6179%" y="741" width="0.0223%" height="15" fill="rgb(217,137,51)" fg:x="115150" fg:w="54"/><text x="47.8679%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (30 samples, 0.01%)</title><rect x="47.6402%" y="757" width="0.0124%" height="15" fill="rgb(218,209,53)" fg:x="115204" fg:w="30"/><text x="47.8902%" y="767.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (30 samples, 0.01%)</title><rect x="47.6402%" y="741" width="0.0124%" height="15" fill="rgb(249,137,25)" fg:x="115204" fg:w="30"/><text x="47.8902%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (30 samples, 0.01%)</title><rect x="47.6402%" y="725" width="0.0124%" height="15" fill="rgb(239,155,26)" fg:x="115204" fg:w="30"/><text x="47.8902%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::Vector::unpack (28 samples, 0.01%)</title><rect x="47.6534%" y="757" width="0.0116%" height="15" fill="rgb(227,85,46)" fg:x="115236" fg:w="28"/><text x="47.9034%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (201 samples, 0.08%)</title><rect x="47.8292%" y="741" width="0.0831%" height="15" fill="rgb(251,107,43)" fg:x="115661" fg:w="201"/><text x="48.0792%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::copy_value (36 samples, 0.01%)</title><rect x="47.8974%" y="725" width="0.0149%" height="15" fill="rgb(234,170,33)" fg:x="115826" fg:w="36"/><text x="48.1474%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::VectorRef::borrow_elem (637 samples, 0.26%)</title><rect x="47.6650%" y="757" width="0.2634%" height="15" fill="rgb(206,29,35)" fg:x="115264" fg:w="637"/><text x="47.9150%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::check_elem_layout (39 samples, 0.02%)</title><rect x="47.9123%" y="741" width="0.0161%" height="15" fill="rgb(227,138,25)" fg:x="115862" fg:w="39"/><text x="48.1623%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::VectorRef::len (63 samples, 0.03%)</title><rect x="47.9284%" y="757" width="0.0261%" height="15" fill="rgb(249,131,35)" fg:x="115901" fg:w="63"/><text x="48.1784%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::check_elem_layout (38 samples, 0.02%)</title><rect x="47.9388%" y="741" width="0.0157%" height="15" fill="rgb(239,6,40)" fg:x="115926" fg:w="38"/><text x="48.1888%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::VectorRef::pop (208 samples, 0.09%)</title><rect x="47.9545%" y="757" width="0.0860%" height="15" fill="rgb(246,136,47)" fg:x="115964" fg:w="208"/><text x="48.2045%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::check_elem_layout (41 samples, 0.02%)</title><rect x="48.0235%" y="741" width="0.0170%" height="15" fill="rgb(253,58,26)" fg:x="116131" fg:w="41"/><text x="48.2735%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (44 samples, 0.02%)</title><rect x="48.0645%" y="693" width="0.0182%" height="15" fill="rgb(237,141,10)" fg:x="116230" fg:w="44"/><text x="48.3145%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (42 samples, 0.02%)</title><rect x="48.0653%" y="677" width="0.0174%" height="15" fill="rgb(234,156,12)" fg:x="116232" fg:w="42"/><text x="48.3153%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (42 samples, 0.02%)</title><rect x="48.0653%" y="661" width="0.0174%" height="15" fill="rgb(243,224,36)" fg:x="116232" fg:w="42"/><text x="48.3153%" y="671.50"></text></g><g><title>alloc::alloc::realloc (42 samples, 0.02%)</title><rect x="48.0653%" y="645" width="0.0174%" height="15" fill="rgb(205,229,51)" fg:x="116232" fg:w="42"/><text x="48.3153%" y="655.50"></text></g><g><title>rallocx (41 samples, 0.02%)</title><rect x="48.0657%" y="629" width="0.0170%" height="15" fill="rgb(223,189,4)" fg:x="116233" fg:w="41"/><text x="48.3157%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (51 samples, 0.02%)</title><rect x="48.0645%" y="741" width="0.0211%" height="15" fill="rgb(249,167,54)" fg:x="116230" fg:w="51"/><text x="48.3145%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (51 samples, 0.02%)</title><rect x="48.0645%" y="725" width="0.0211%" height="15" fill="rgb(218,34,28)" fg:x="116230" fg:w="51"/><text x="48.3145%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (51 samples, 0.02%)</title><rect x="48.0645%" y="709" width="0.0211%" height="15" fill="rgb(232,109,42)" fg:x="116230" fg:w="51"/><text x="48.3145%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (37 samples, 0.02%)</title><rect x="48.0856%" y="741" width="0.0153%" height="15" fill="rgb(248,214,46)" fg:x="116281" fg:w="37"/><text x="48.3356%" y="751.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;u8&gt;&gt;::cast (28 samples, 0.01%)</title><rect x="48.0893%" y="725" width="0.0116%" height="15" fill="rgb(244,216,40)" fg:x="116290" fg:w="28"/><text x="48.3393%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::VectorRef::push_back (162 samples, 0.07%)</title><rect x="48.0405%" y="757" width="0.0670%" height="15" fill="rgb(231,226,31)" fg:x="116172" fg:w="162"/><text x="48.2905%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::VectorRef::swap (36 samples, 0.01%)</title><rect x="48.1075%" y="757" width="0.0149%" height="15" fill="rgb(238,38,43)" fg:x="116334" fg:w="36"/><text x="48.3575%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (76,173 samples, 31.50%)</title><rect x="16.6297%" y="789" width="31.4997%" height="15" fill="rgb(208,88,43)" fg:x="40214" fg:w="76173"/><text x="16.8797%" y="799.50">move_vm_runtime::interpreter::Frame::execute_code</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (76,173 samples, 31.50%)</title><rect x="16.6297%" y="773" width="31.4997%" height="15" fill="rgb(205,136,37)" fg:x="40214" fg:w="76173"/><text x="16.8797%" y="783.50">move_vm_runtime::interpreter::Frame::execute_code_i..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (785 samples, 0.32%)</title><rect x="48.1534%" y="645" width="0.3246%" height="15" fill="rgb(237,34,14)" fg:x="116445" fg:w="785"/><text x="48.4034%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (785 samples, 0.32%)</title><rect x="48.1534%" y="629" width="0.3246%" height="15" fill="rgb(236,193,44)" fg:x="116445" fg:w="785"/><text x="48.4034%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (785 samples, 0.32%)</title><rect x="48.1534%" y="613" width="0.3246%" height="15" fill="rgb(231,48,10)" fg:x="116445" fg:w="785"/><text x="48.4034%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (785 samples, 0.32%)</title><rect x="48.1534%" y="597" width="0.3246%" height="15" fill="rgb(213,141,34)" fg:x="116445" fg:w="785"/><text x="48.4034%" y="607.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (931 samples, 0.38%)</title><rect x="48.4780%" y="613" width="0.3850%" height="15" fill="rgb(249,130,34)" fg:x="117230" fg:w="931"/><text x="48.7280%" y="623.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (931 samples, 0.38%)</title><rect x="48.4780%" y="597" width="0.3850%" height="15" fill="rgb(219,42,41)" fg:x="117230" fg:w="931"/><text x="48.7280%" y="607.50"></text></g><g><title> N]&gt;::hash (931 samples, 0.38%)</title><rect x="48.4780%" y="581" width="0.3850%" height="15" fill="rgb(224,100,54)" fg:x="117230" fg:w="931"/><text x="48.7280%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (931 samples, 0.38%)</title><rect x="48.4780%" y="565" width="0.3850%" height="15" fill="rgb(229,200,27)" fg:x="117230" fg:w="931"/><text x="48.7280%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (931 samples, 0.38%)</title><rect x="48.4780%" y="549" width="0.3850%" height="15" fill="rgb(217,118,10)" fg:x="117230" fg:w="931"/><text x="48.7280%" y="559.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (931 samples, 0.38%)</title><rect x="48.4780%" y="533" width="0.3850%" height="15" fill="rgb(206,22,3)" fg:x="117230" fg:w="931"/><text x="48.7280%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (931 samples, 0.38%)</title><rect x="48.4780%" y="517" width="0.3850%" height="15" fill="rgb(232,163,46)" fg:x="117230" fg:w="931"/><text x="48.7280%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (931 samples, 0.38%)</title><rect x="48.4780%" y="501" width="0.3850%" height="15" fill="rgb(206,95,13)" fg:x="117230" fg:w="931"/><text x="48.7280%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (1,731 samples, 0.72%)</title><rect x="48.1509%" y="677" width="0.7158%" height="15" fill="rgb(253,154,18)" fg:x="116439" fg:w="1731"/><text x="48.4009%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,725 samples, 0.71%)</title><rect x="48.1534%" y="661" width="0.7133%" height="15" fill="rgb(219,32,23)" fg:x="116445" fg:w="1725"/><text x="48.4034%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (940 samples, 0.39%)</title><rect x="48.4780%" y="645" width="0.3887%" height="15" fill="rgb(230,191,45)" fg:x="117230" fg:w="940"/><text x="48.7280%" y="655.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (940 samples, 0.39%)</title><rect x="48.4780%" y="629" width="0.3887%" height="15" fill="rgb(229,64,36)" fg:x="117230" fg:w="940"/><text x="48.7280%" y="639.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (3,038 samples, 1.26%)</title><rect x="48.1294%" y="789" width="1.2563%" height="15" fill="rgb(205,129,25)" fg:x="116387" fg:w="3038"/><text x="48.3794%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (2,986 samples, 1.23%)</title><rect x="48.1509%" y="773" width="1.2348%" height="15" fill="rgb(254,112,7)" fg:x="116439" fg:w="2986"/><text x="48.4009%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (2,986 samples, 1.23%)</title><rect x="48.1509%" y="757" width="1.2348%" height="15" fill="rgb(226,53,48)" fg:x="116439" fg:w="2986"/><text x="48.4009%" y="767.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (2,986 samples, 1.23%)</title><rect x="48.1509%" y="741" width="1.2348%" height="15" fill="rgb(214,153,38)" fg:x="116439" fg:w="2986"/><text x="48.4009%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,986 samples, 1.23%)</title><rect x="48.1509%" y="725" width="1.2348%" height="15" fill="rgb(243,101,7)" fg:x="116439" fg:w="2986"/><text x="48.4009%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,986 samples, 1.23%)</title><rect x="48.1509%" y="709" width="1.2348%" height="15" fill="rgb(240,140,22)" fg:x="116439" fg:w="2986"/><text x="48.4009%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,986 samples, 1.23%)</title><rect x="48.1509%" y="693" width="1.2348%" height="15" fill="rgb(235,114,2)" fg:x="116439" fg:w="2986"/><text x="48.4009%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,255 samples, 0.52%)</title><rect x="48.8667%" y="677" width="0.5190%" height="15" fill="rgb(242,59,12)" fg:x="118170" fg:w="1255"/><text x="49.1167%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,255 samples, 0.52%)</title><rect x="48.8667%" y="661" width="0.5190%" height="15" fill="rgb(252,134,9)" fg:x="118170" fg:w="1255"/><text x="49.1167%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,255 samples, 0.52%)</title><rect x="48.8667%" y="645" width="0.5190%" height="15" fill="rgb(236,4,44)" fg:x="118170" fg:w="1255"/><text x="49.1167%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1,255 samples, 0.52%)</title><rect x="48.8667%" y="629" width="0.5190%" height="15" fill="rgb(254,172,41)" fg:x="118170" fg:w="1255"/><text x="49.1167%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1,255 samples, 0.52%)</title><rect x="48.8667%" y="613" width="0.5190%" height="15" fill="rgb(244,63,20)" fg:x="118170" fg:w="1255"/><text x="49.1167%" y="623.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1,255 samples, 0.52%)</title><rect x="48.8667%" y="597" width="0.5190%" height="15" fill="rgb(250,73,31)" fg:x="118170" fg:w="1255"/><text x="49.1167%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,255 samples, 0.52%)</title><rect x="48.8667%" y="581" width="0.5190%" height="15" fill="rgb(241,38,36)" fg:x="118170" fg:w="1255"/><text x="49.1167%" y="591.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (1,255 samples, 0.52%)</title><rect x="48.8667%" y="565" width="0.5190%" height="15" fill="rgb(245,211,2)" fg:x="118170" fg:w="1255"/><text x="49.1167%" y="575.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (1,255 samples, 0.52%)</title><rect x="48.8667%" y="549" width="0.5190%" height="15" fill="rgb(206,120,28)" fg:x="118170" fg:w="1255"/><text x="49.1167%" y="559.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[U (1,255 samples, 0.52%)</title><rect x="48.8667%" y="533" width="0.5190%" height="15" fill="rgb(211,59,34)" fg:x="118170" fg:w="1255"/><text x="49.1167%" y="543.50"></text></g><g><title> N]&gt; for [T (1,255 samples, 0.52%)</title><rect x="48.8667%" y="517" width="0.5190%" height="15" fill="rgb(233,168,5)" fg:x="118170" fg:w="1255"/><text x="49.1167%" y="527.50"></text></g><g><title> N]&gt;::eq (1,255 samples, 0.52%)</title><rect x="48.8667%" y="501" width="0.5190%" height="15" fill="rgb(234,33,13)" fg:x="118170" fg:w="1255"/><text x="49.1167%" y="511.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1,255 samples, 0.52%)</title><rect x="48.8667%" y="485" width="0.5190%" height="15" fill="rgb(231,150,26)" fg:x="118170" fg:w="1255"/><text x="49.1167%" y="495.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (43 samples, 0.02%)</title><rect x="49.3956%" y="693" width="0.0178%" height="15" fill="rgb(217,191,4)" fg:x="119449" fg:w="43"/><text x="49.6456%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.01%)</title><rect x="49.4134%" y="693" width="0.0116%" height="15" fill="rgb(246,198,38)" fg:x="119492" fg:w="28"/><text x="49.6634%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.01%)</title><rect x="49.4134%" y="677" width="0.0116%" height="15" fill="rgb(245,64,37)" fg:x="119492" fg:w="28"/><text x="49.6634%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (28 samples, 0.01%)</title><rect x="49.4134%" y="661" width="0.0116%" height="15" fill="rgb(250,30,36)" fg:x="119492" fg:w="28"/><text x="49.6634%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.01%)</title><rect x="49.4134%" y="645" width="0.0116%" height="15" fill="rgb(217,86,53)" fg:x="119492" fg:w="28"/><text x="49.6634%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.01%)</title><rect x="49.4134%" y="629" width="0.0116%" height="15" fill="rgb(228,157,16)" fg:x="119492" fg:w="28"/><text x="49.6634%" y="639.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.01%)</title><rect x="49.4134%" y="613" width="0.0116%" height="15" fill="rgb(217,59,31)" fg:x="119492" fg:w="28"/><text x="49.6634%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (102 samples, 0.04%)</title><rect x="49.3956%" y="757" width="0.0422%" height="15" fill="rgb(237,138,41)" fg:x="119449" fg:w="102"/><text x="49.6456%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (102 samples, 0.04%)</title><rect x="49.3956%" y="741" width="0.0422%" height="15" fill="rgb(227,91,49)" fg:x="119449" fg:w="102"/><text x="49.6456%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (102 samples, 0.04%)</title><rect x="49.3956%" y="725" width="0.0422%" height="15" fill="rgb(247,21,44)" fg:x="119449" fg:w="102"/><text x="49.6456%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (102 samples, 0.04%)</title><rect x="49.3956%" y="709" width="0.0422%" height="15" fill="rgb(219,210,51)" fg:x="119449" fg:w="102"/><text x="49.6456%" y="719.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (31 samples, 0.01%)</title><rect x="49.4250%" y="693" width="0.0128%" height="15" fill="rgb(209,140,6)" fg:x="119520" fg:w="31"/><text x="49.6750%" y="703.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function (62 samples, 0.03%)</title><rect x="49.4378%" y="757" width="0.0256%" height="15" fill="rgb(221,188,24)" fg:x="119551" fg:w="62"/><text x="49.6878%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (62 samples, 0.03%)</title><rect x="49.4378%" y="741" width="0.0256%" height="15" fill="rgb(232,154,20)" fg:x="119551" fg:w="62"/><text x="49.6878%" y="751.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function::{{closure}} (62 samples, 0.03%)</title><rect x="49.4378%" y="725" width="0.0256%" height="15" fill="rgb(244,137,50)" fg:x="119551" fg:w="62"/><text x="49.6878%" y="735.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (62 samples, 0.03%)</title><rect x="49.4378%" y="709" width="0.0256%" height="15" fill="rgb(225,185,43)" fg:x="119551" fg:w="62"/><text x="49.6878%" y="719.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (38 samples, 0.02%)</title><rect x="49.4477%" y="693" width="0.0157%" height="15" fill="rgb(213,205,38)" fg:x="119575" fg:w="38"/><text x="49.6977%" y="703.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (38 samples, 0.02%)</title><rect x="49.4477%" y="677" width="0.0157%" height="15" fill="rgb(236,73,12)" fg:x="119575" fg:w="38"/><text x="49.6977%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (38 samples, 0.02%)</title><rect x="49.4477%" y="661" width="0.0157%" height="15" fill="rgb(235,219,13)" fg:x="119575" fg:w="38"/><text x="49.6977%" y="671.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (38 samples, 0.02%)</title><rect x="49.4477%" y="645" width="0.0157%" height="15" fill="rgb(218,59,36)" fg:x="119575" fg:w="38"/><text x="49.6977%" y="655.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function_before_execution (54 samples, 0.02%)</title><rect x="49.4634%" y="757" width="0.0223%" height="15" fill="rgb(205,110,39)" fg:x="119613" fg:w="54"/><text x="49.7134%" y="767.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (54 samples, 0.02%)</title><rect x="49.4634%" y="741" width="0.0223%" height="15" fill="rgb(218,206,42)" fg:x="119613" fg:w="54"/><text x="49.7134%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 0.01%)</title><rect x="49.4734%" y="725" width="0.0124%" height="15" fill="rgb(248,125,24)" fg:x="119637" fg:w="30"/><text x="49.7234%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.01%)</title><rect x="49.4734%" y="709" width="0.0124%" height="15" fill="rgb(242,28,27)" fg:x="119637" fg:w="30"/><text x="49.7234%" y="719.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function_before_execution::{{closure}} (30 samples, 0.01%)</title><rect x="49.4734%" y="693" width="0.0124%" height="15" fill="rgb(216,228,15)" fg:x="119637" fg:w="30"/><text x="49.7234%" y="703.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (30 samples, 0.01%)</title><rect x="49.4734%" y="677" width="0.0124%" height="15" fill="rgb(235,116,46)" fg:x="119637" fg:w="30"/><text x="49.7234%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (416 samples, 0.17%)</title><rect x="49.4858%" y="757" width="0.1720%" height="15" fill="rgb(224,18,32)" fg:x="119667" fg:w="416"/><text x="49.7358%" y="767.50"></text></g><g><title>__rust_dealloc (30 samples, 0.01%)</title><rect x="49.6611%" y="757" width="0.0124%" height="15" fill="rgb(252,5,12)" fg:x="120091" fg:w="30"/><text x="49.9111%" y="767.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_front (61 samples, 0.03%)</title><rect x="49.6760%" y="757" width="0.0252%" height="15" fill="rgb(251,36,5)" fg:x="120127" fg:w="61"/><text x="49.9260%" y="767.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (61 samples, 0.03%)</title><rect x="49.6760%" y="741" width="0.0252%" height="15" fill="rgb(217,53,14)" fg:x="120127" fg:w="61"/><text x="49.9260%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (57 samples, 0.02%)</title><rect x="49.6777%" y="725" width="0.0236%" height="15" fill="rgb(215,86,45)" fg:x="120131" fg:w="57"/><text x="49.9277%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (57 samples, 0.02%)</title><rect x="49.6777%" y="709" width="0.0236%" height="15" fill="rgb(242,169,11)" fg:x="120131" fg:w="57"/><text x="49.9277%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (50 samples, 0.02%)</title><rect x="49.6805%" y="693" width="0.0207%" height="15" fill="rgb(211,213,45)" fg:x="120138" fg:w="50"/><text x="49.9305%" y="703.50"></text></g><g><title>mallocx (31 samples, 0.01%)</title><rect x="49.6884%" y="677" width="0.0128%" height="15" fill="rgb(205,88,11)" fg:x="120157" fg:w="31"/><text x="49.9384%" y="687.50"></text></g><g><title>imalloc (31 samples, 0.01%)</title><rect x="49.6884%" y="661" width="0.0128%" height="15" fill="rgb(252,69,26)" fg:x="120157" fg:w="31"/><text x="49.9384%" y="671.50"></text></g><g><title>imalloc_body (31 samples, 0.01%)</title><rect x="49.6884%" y="645" width="0.0128%" height="15" fill="rgb(246,123,37)" fg:x="120157" fg:w="31"/><text x="49.9384%" y="655.50"></text></g><g><title>imalloc_no_sample (31 samples, 0.01%)</title><rect x="49.6884%" y="629" width="0.0128%" height="15" fill="rgb(212,205,5)" fg:x="120157" fg:w="31"/><text x="49.9384%" y="639.50"></text></g><g><title>iallocztm (31 samples, 0.01%)</title><rect x="49.6884%" y="613" width="0.0128%" height="15" fill="rgb(253,148,0)" fg:x="120157" fg:w="31"/><text x="49.9384%" y="623.50"></text></g><g><title>arena_malloc (31 samples, 0.01%)</title><rect x="49.6884%" y="597" width="0.0128%" height="15" fill="rgb(239,22,4)" fg:x="120157" fg:w="31"/><text x="49.9384%" y="607.50"></text></g><g><title>tcache_alloc_small (29 samples, 0.01%)</title><rect x="49.6892%" y="581" width="0.0120%" height="15" fill="rgb(226,26,53)" fg:x="120159" fg:w="29"/><text x="49.9392%" y="591.50"></text></g><g><title>aptos_framework::natives::account::make_native_create_signer::{{closure}} (30 samples, 0.01%)</title><rect x="49.7012%" y="757" width="0.0124%" height="15" fill="rgb(225,229,45)" fg:x="120188" fg:w="30"/><text x="49.9512%" y="767.50"></text></g><g><title>aptos_framework::natives::account::native_create_signer (30 samples, 0.01%)</title><rect x="49.7012%" y="741" width="0.0124%" height="15" fill="rgb(220,60,37)" fg:x="120188" fg:w="30"/><text x="49.9512%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (28 samples, 0.01%)</title><rect x="49.7360%" y="725" width="0.0116%" height="15" fill="rgb(217,180,35)" fg:x="120272" fg:w="28"/><text x="49.9860%" y="735.50"></text></g><g><title>aptos_framework::natives::event::native_write_to_event_store::{{closure}} (28 samples, 0.01%)</title><rect x="49.7360%" y="709" width="0.0116%" height="15" fill="rgb(229,7,53)" fg:x="120272" fg:w="28"/><text x="49.9860%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (28 samples, 0.01%)</title><rect x="49.7360%" y="693" width="0.0116%" height="15" fill="rgb(254,137,3)" fg:x="120272" fg:w="28"/><text x="49.9860%" y="703.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::save_event (137 samples, 0.06%)</title><rect x="49.7525%" y="725" width="0.0567%" height="15" fill="rgb(215,140,41)" fg:x="120312" fg:w="137"/><text x="50.0025%" y="735.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::emit_event (131 samples, 0.05%)</title><rect x="49.7550%" y="709" width="0.0542%" height="15" fill="rgb(250,80,15)" fg:x="120318" fg:w="131"/><text x="50.0050%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (112 samples, 0.05%)</title><rect x="49.7628%" y="693" width="0.0463%" height="15" fill="rgb(252,191,6)" fg:x="120337" fg:w="112"/><text x="50.0128%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (109 samples, 0.05%)</title><rect x="49.7641%" y="677" width="0.0451%" height="15" fill="rgb(246,217,18)" fg:x="120340" fg:w="109"/><text x="50.0141%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (101 samples, 0.04%)</title><rect x="49.7674%" y="661" width="0.0418%" height="15" fill="rgb(223,93,7)" fg:x="120348" fg:w="101"/><text x="50.0174%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (77 samples, 0.03%)</title><rect x="49.7773%" y="645" width="0.0318%" height="15" fill="rgb(225,55,52)" fg:x="120372" fg:w="77"/><text x="50.0273%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (77 samples, 0.03%)</title><rect x="49.7773%" y="629" width="0.0318%" height="15" fill="rgb(240,31,24)" fg:x="120372" fg:w="77"/><text x="50.0273%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (77 samples, 0.03%)</title><rect x="49.7773%" y="613" width="0.0318%" height="15" fill="rgb(205,56,52)" fg:x="120372" fg:w="77"/><text x="50.0273%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (54 samples, 0.02%)</title><rect x="49.7868%" y="597" width="0.0223%" height="15" fill="rgb(246,146,12)" fg:x="120395" fg:w="54"/><text x="50.0368%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (54 samples, 0.02%)</title><rect x="49.7868%" y="581" width="0.0223%" height="15" fill="rgb(239,84,36)" fg:x="120395" fg:w="54"/><text x="50.0368%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (54 samples, 0.02%)</title><rect x="49.7868%" y="565" width="0.0223%" height="15" fill="rgb(207,41,40)" fg:x="120395" fg:w="54"/><text x="50.0368%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (53 samples, 0.02%)</title><rect x="49.7872%" y="549" width="0.0219%" height="15" fill="rgb(241,179,25)" fg:x="120396" fg:w="53"/><text x="50.0372%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (53 samples, 0.02%)</title><rect x="49.7872%" y="533" width="0.0219%" height="15" fill="rgb(210,0,34)" fg:x="120396" fg:w="53"/><text x="50.0372%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (53 samples, 0.02%)</title><rect x="49.7872%" y="517" width="0.0219%" height="15" fill="rgb(225,217,29)" fg:x="120396" fg:w="53"/><text x="50.0372%" y="527.50"></text></g><g><title>aptos_framework::natives::event::make_native_write_to_event_store::{{closure}} (240 samples, 0.10%)</title><rect x="49.7136%" y="757" width="0.0992%" height="15" fill="rgb(216,191,38)" fg:x="120218" fg:w="240"/><text x="49.9636%" y="767.50"></text></g><g><title>aptos_framework::natives::event::native_write_to_event_store (213 samples, 0.09%)</title><rect x="49.7248%" y="741" width="0.0881%" height="15" fill="rgb(232,140,52)" fg:x="120245" fg:w="213"/><text x="49.9748%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (27 samples, 0.01%)</title><rect x="49.8257%" y="597" width="0.0112%" height="15" fill="rgb(223,158,51)" fg:x="120489" fg:w="27"/><text x="50.0757%" y="607.50"></text></g><g><title>alloc::string::String::push_str (27 samples, 0.01%)</title><rect x="49.8257%" y="581" width="0.0112%" height="15" fill="rgb(235,29,51)" fg:x="120489" fg:w="27"/><text x="50.0757%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.01%)</title><rect x="49.8257%" y="565" width="0.0112%" height="15" fill="rgb(215,181,18)" fg:x="120489" fg:w="27"/><text x="50.0757%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.01%)</title><rect x="49.8257%" y="549" width="0.0112%" height="15" fill="rgb(227,125,34)" fg:x="120489" fg:w="27"/><text x="50.0757%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.01%)</title><rect x="49.8257%" y="533" width="0.0112%" height="15" fill="rgb(230,197,49)" fg:x="120489" fg:w="27"/><text x="50.0757%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (39 samples, 0.02%)</title><rect x="49.8369%" y="597" width="0.0161%" height="15" fill="rgb(239,141,16)" fg:x="120516" fg:w="39"/><text x="50.0869%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (70 samples, 0.03%)</title><rect x="49.8257%" y="629" width="0.0289%" height="15" fill="rgb(225,105,43)" fg:x="120489" fg:w="70"/><text x="50.0757%" y="639.50"></text></g><g><title>core::fmt::write (70 samples, 0.03%)</title><rect x="49.8257%" y="613" width="0.0289%" height="15" fill="rgb(214,131,14)" fg:x="120489" fg:w="70"/><text x="50.0757%" y="623.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.02%)</title><rect x="49.8604%" y="485" width="0.0153%" height="15" fill="rgb(229,177,11)" fg:x="120573" fg:w="37"/><text x="50.1104%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (37 samples, 0.02%)</title><rect x="49.8604%" y="469" width="0.0153%" height="15" fill="rgb(231,180,14)" fg:x="120573" fg:w="37"/><text x="50.1104%" y="479.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (37 samples, 0.02%)</title><rect x="49.8604%" y="453" width="0.0153%" height="15" fill="rgb(232,88,2)" fg:x="120573" fg:w="37"/><text x="50.1104%" y="463.50"></text></g><g><title>move_core_types::account_address::AccountAddress::short_str_lossless (76 samples, 0.03%)</title><rect x="49.8563%" y="629" width="0.0314%" height="15" fill="rgb(205,220,8)" fg:x="120563" fg:w="76"/><text x="50.1063%" y="639.50"></text></g><g><title>hex::encode (69 samples, 0.03%)</title><rect x="49.8592%" y="613" width="0.0285%" height="15" fill="rgb(225,23,53)" fg:x="120570" fg:w="69"/><text x="50.1092%" y="623.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (69 samples, 0.03%)</title><rect x="49.8592%" y="597" width="0.0285%" height="15" fill="rgb(213,62,29)" fg:x="120570" fg:w="69"/><text x="50.1092%" y="607.50"></text></g><g><title>hex::encode_to_iter (69 samples, 0.03%)</title><rect x="49.8592%" y="581" width="0.0285%" height="15" fill="rgb(227,75,7)" fg:x="120570" fg:w="69"/><text x="50.1092%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (69 samples, 0.03%)</title><rect x="49.8592%" y="565" width="0.0285%" height="15" fill="rgb(207,105,14)" fg:x="120570" fg:w="69"/><text x="50.1092%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (69 samples, 0.03%)</title><rect x="49.8592%" y="549" width="0.0285%" height="15" fill="rgb(245,62,29)" fg:x="120570" fg:w="69"/><text x="50.1092%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (69 samples, 0.03%)</title><rect x="49.8592%" y="533" width="0.0285%" height="15" fill="rgb(236,202,4)" fg:x="120570" fg:w="69"/><text x="50.1092%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (67 samples, 0.03%)</title><rect x="49.8600%" y="517" width="0.0277%" height="15" fill="rgb(250,67,1)" fg:x="120572" fg:w="67"/><text x="50.1100%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (67 samples, 0.03%)</title><rect x="49.8600%" y="501" width="0.0277%" height="15" fill="rgb(253,115,44)" fg:x="120572" fg:w="67"/><text x="50.1100%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (29 samples, 0.01%)</title><rect x="49.8757%" y="485" width="0.0120%" height="15" fill="rgb(251,139,18)" fg:x="120610" fg:w="29"/><text x="50.1257%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (29 samples, 0.01%)</title><rect x="49.8757%" y="469" width="0.0120%" height="15" fill="rgb(218,22,32)" fg:x="120610" fg:w="29"/><text x="50.1257%" y="479.50"></text></g><g><title>alloc::string::String::push (29 samples, 0.01%)</title><rect x="49.8757%" y="453" width="0.0120%" height="15" fill="rgb(243,53,5)" fg:x="120610" fg:w="29"/><text x="50.1257%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (29 samples, 0.01%)</title><rect x="49.8757%" y="437" width="0.0120%" height="15" fill="rgb(227,56,16)" fg:x="120610" fg:w="29"/><text x="50.1257%" y="447.50"></text></g><g><title>core::ptr::write (29 samples, 0.01%)</title><rect x="49.8757%" y="421" width="0.0120%" height="15" fill="rgb(245,53,0)" fg:x="120610" fg:w="29"/><text x="50.1257%" y="431.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (176 samples, 0.07%)</title><rect x="49.8154%" y="725" width="0.0728%" height="15" fill="rgb(216,170,35)" fg:x="120464" fg:w="176"/><text x="50.0654%" y="735.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::fmt::Display&gt;::fmt (176 samples, 0.07%)</title><rect x="49.8154%" y="709" width="0.0728%" height="15" fill="rgb(211,200,8)" fg:x="120464" fg:w="176"/><text x="50.0654%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (169 samples, 0.07%)</title><rect x="49.8183%" y="693" width="0.0699%" height="15" fill="rgb(228,204,44)" fg:x="120471" fg:w="169"/><text x="50.0683%" y="703.50"></text></g><g><title>core::fmt::write (169 samples, 0.07%)</title><rect x="49.8183%" y="677" width="0.0699%" height="15" fill="rgb(214,121,17)" fg:x="120471" fg:w="169"/><text x="50.0683%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (165 samples, 0.07%)</title><rect x="49.8199%" y="661" width="0.0682%" height="15" fill="rgb(233,64,38)" fg:x="120475" fg:w="165"/><text x="50.0699%" y="671.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::fmt::Display&gt;::fmt (157 samples, 0.06%)</title><rect x="49.8232%" y="645" width="0.0649%" height="15" fill="rgb(253,54,19)" fg:x="120483" fg:w="157"/><text x="50.0732%" y="655.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::type_to_type_tag (44 samples, 0.02%)</title><rect x="49.8939%" y="725" width="0.0182%" height="15" fill="rgb(253,94,18)" fg:x="120654" fg:w="44"/><text x="50.1439%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (43 samples, 0.02%)</title><rect x="49.8943%" y="709" width="0.0178%" height="15" fill="rgb(227,57,52)" fg:x="120655" fg:w="43"/><text x="50.1443%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (43 samples, 0.02%)</title><rect x="49.8943%" y="693" width="0.0178%" height="15" fill="rgb(230,228,50)" fg:x="120655" fg:w="43"/><text x="50.1443%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (36 samples, 0.01%)</title><rect x="49.8972%" y="677" width="0.0149%" height="15" fill="rgb(217,205,27)" fg:x="120662" fg:w="36"/><text x="50.1472%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (34 samples, 0.01%)</title><rect x="49.8981%" y="661" width="0.0141%" height="15" fill="rgb(252,71,50)" fg:x="120664" fg:w="34"/><text x="50.1481%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (34 samples, 0.01%)</title><rect x="49.8981%" y="645" width="0.0141%" height="15" fill="rgb(209,86,4)" fg:x="120664" fg:w="34"/><text x="50.1481%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (34 samples, 0.01%)</title><rect x="49.8981%" y="629" width="0.0141%" height="15" fill="rgb(229,94,0)" fg:x="120664" fg:w="34"/><text x="50.1481%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (27 samples, 0.01%)</title><rect x="49.9010%" y="613" width="0.0112%" height="15" fill="rgb(252,223,21)" fg:x="120671" fg:w="27"/><text x="50.1510%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (27 samples, 0.01%)</title><rect x="49.9010%" y="597" width="0.0112%" height="15" fill="rgb(230,210,4)" fg:x="120671" fg:w="27"/><text x="50.1510%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (27 samples, 0.01%)</title><rect x="49.9010%" y="581" width="0.0112%" height="15" fill="rgb(240,149,38)" fg:x="120671" fg:w="27"/><text x="50.1510%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (27 samples, 0.01%)</title><rect x="49.9010%" y="565" width="0.0112%" height="15" fill="rgb(254,105,20)" fg:x="120671" fg:w="27"/><text x="50.1510%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (27 samples, 0.01%)</title><rect x="49.9010%" y="549" width="0.0112%" height="15" fill="rgb(253,87,46)" fg:x="120671" fg:w="27"/><text x="50.1510%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.01%)</title><rect x="49.9010%" y="533" width="0.0112%" height="15" fill="rgb(253,116,33)" fg:x="120671" fg:w="27"/><text x="50.1510%" y="543.50"></text></g><g><title>aptos_framework::natives::type_info::make_native_type_name::{{closure}} (293 samples, 0.12%)</title><rect x="49.8133%" y="757" width="0.1212%" height="15" fill="rgb(229,198,5)" fg:x="120459" fg:w="293"/><text x="50.0633%" y="767.50"></text></g><g><title>aptos_framework::natives::type_info::native_type_name (293 samples, 0.12%)</title><rect x="49.8133%" y="741" width="0.1212%" height="15" fill="rgb(242,38,37)" fg:x="120459" fg:w="293"/><text x="50.0633%" y="751.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (25 samples, 0.01%)</title><rect x="49.9241%" y="725" width="0.0103%" height="15" fill="rgb(242,69,53)" fg:x="120727" fg:w="25"/><text x="50.1741%" y="735.50"></text></g><g><title>core::ptr::write (25 samples, 0.01%)</title><rect x="49.9241%" y="709" width="0.0103%" height="15" fill="rgb(249,80,16)" fg:x="120727" fg:w="25"/><text x="50.1741%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (32 samples, 0.01%)</title><rect x="49.9423%" y="629" width="0.0132%" height="15" fill="rgb(206,128,11)" fg:x="120771" fg:w="32"/><text x="50.1923%" y="639.50"></text></g><g><title>core::fmt::write (32 samples, 0.01%)</title><rect x="49.9423%" y="613" width="0.0132%" height="15" fill="rgb(212,35,20)" fg:x="120771" fg:w="32"/><text x="50.1923%" y="623.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (84 samples, 0.03%)</title><rect x="49.9345%" y="725" width="0.0347%" height="15" fill="rgb(236,79,13)" fg:x="120752" fg:w="84"/><text x="50.1845%" y="735.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::fmt::Display&gt;::fmt (82 samples, 0.03%)</title><rect x="49.9353%" y="709" width="0.0339%" height="15" fill="rgb(233,123,3)" fg:x="120754" fg:w="82"/><text x="50.1853%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (73 samples, 0.03%)</title><rect x="49.9390%" y="693" width="0.0302%" height="15" fill="rgb(214,93,52)" fg:x="120763" fg:w="73"/><text x="50.1890%" y="703.50"></text></g><g><title>core::fmt::write (73 samples, 0.03%)</title><rect x="49.9390%" y="677" width="0.0302%" height="15" fill="rgb(251,37,40)" fg:x="120763" fg:w="73"/><text x="50.1890%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (69 samples, 0.03%)</title><rect x="49.9407%" y="661" width="0.0285%" height="15" fill="rgb(227,80,54)" fg:x="120767" fg:w="69"/><text x="50.1907%" y="671.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::fmt::Display&gt;::fmt (68 samples, 0.03%)</title><rect x="49.9411%" y="645" width="0.0281%" height="15" fill="rgb(254,48,11)" fg:x="120768" fg:w="68"/><text x="50.1911%" y="655.50"></text></g><g><title>move_core_types::account_address::AccountAddress::short_str_lossless (32 samples, 0.01%)</title><rect x="49.9560%" y="629" width="0.0132%" height="15" fill="rgb(235,193,26)" fg:x="120804" fg:w="32"/><text x="50.2060%" y="639.50"></text></g><g><title>hex::encode (30 samples, 0.01%)</title><rect x="49.9568%" y="613" width="0.0124%" height="15" fill="rgb(229,99,21)" fg:x="120806" fg:w="30"/><text x="50.2068%" y="623.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (30 samples, 0.01%)</title><rect x="49.9568%" y="597" width="0.0124%" height="15" fill="rgb(211,140,41)" fg:x="120806" fg:w="30"/><text x="50.2068%" y="607.50"></text></g><g><title>hex::encode_to_iter (30 samples, 0.01%)</title><rect x="49.9568%" y="581" width="0.0124%" height="15" fill="rgb(240,227,30)" fg:x="120806" fg:w="30"/><text x="50.2068%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (30 samples, 0.01%)</title><rect x="49.9568%" y="565" width="0.0124%" height="15" fill="rgb(215,224,45)" fg:x="120806" fg:w="30"/><text x="50.2068%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (30 samples, 0.01%)</title><rect x="49.9568%" y="549" width="0.0124%" height="15" fill="rgb(206,123,31)" fg:x="120806" fg:w="30"/><text x="50.2068%" y="559.50"></text></g><g><title>aptos_framework::natives::type_info::type_of_internal (29 samples, 0.01%)</title><rect x="49.9692%" y="725" width="0.0120%" height="15" fill="rgb(210,138,16)" fg:x="120836" fg:w="29"/><text x="50.2192%" y="735.50"></text></g><g><title>aptos_framework::natives::type_info::make_native_type_of::{{closure}} (130 samples, 0.05%)</title><rect x="49.9345%" y="757" width="0.0538%" height="15" fill="rgb(228,57,28)" fg:x="120752" fg:w="130"/><text x="50.1845%" y="767.50"></text></g><g><title>aptos_framework::natives::type_info::native_type_of (130 samples, 0.05%)</title><rect x="49.9345%" y="741" width="0.0538%" height="15" fill="rgb(242,170,10)" fg:x="120752" fg:w="130"/><text x="50.1845%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (33 samples, 0.01%)</title><rect x="50.0263%" y="693" width="0.0136%" height="15" fill="rgb(228,214,39)" fg:x="120974" fg:w="33"/><text x="50.2763%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (38 samples, 0.02%)</title><rect x="50.0573%" y="453" width="0.0157%" height="15" fill="rgb(218,179,33)" fg:x="121049" fg:w="38"/><text x="50.3073%" y="463.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (88 samples, 0.04%)</title><rect x="50.0465%" y="629" width="0.0364%" height="15" fill="rgb(235,193,39)" fg:x="121023" fg:w="88"/><text x="50.2965%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (88 samples, 0.04%)</title><rect x="50.0465%" y="613" width="0.0364%" height="15" fill="rgb(219,221,36)" fg:x="121023" fg:w="88"/><text x="50.2965%" y="623.50"></text></g><g><title> 32]&gt;::deserialize (88 samples, 0.04%)</title><rect x="50.0465%" y="597" width="0.0364%" height="15" fill="rgb(248,218,19)" fg:x="121023" fg:w="88"/><text x="50.2965%" y="607.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (88 samples, 0.04%)</title><rect x="50.0465%" y="581" width="0.0364%" height="15" fill="rgb(205,50,9)" fg:x="121023" fg:w="88"/><text x="50.2965%" y="591.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (88 samples, 0.04%)</title><rect x="50.0465%" y="565" width="0.0364%" height="15" fill="rgb(238,81,28)" fg:x="121023" fg:w="88"/><text x="50.2965%" y="575.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (88 samples, 0.04%)</title><rect x="50.0465%" y="549" width="0.0364%" height="15" fill="rgb(235,110,19)" fg:x="121023" fg:w="88"/><text x="50.2965%" y="559.50"></text></g><g><title>serde::de::SeqAccess::next_element (62 samples, 0.03%)</title><rect x="50.0573%" y="533" width="0.0256%" height="15" fill="rgb(214,7,14)" fg:x="121049" fg:w="62"/><text x="50.3073%" y="543.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (62 samples, 0.03%)</title><rect x="50.0573%" y="517" width="0.0256%" height="15" fill="rgb(211,77,3)" fg:x="121049" fg:w="62"/><text x="50.3073%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (62 samples, 0.03%)</title><rect x="50.0573%" y="501" width="0.0256%" height="15" fill="rgb(229,5,9)" fg:x="121049" fg:w="62"/><text x="50.3073%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (62 samples, 0.03%)</title><rect x="50.0573%" y="485" width="0.0256%" height="15" fill="rgb(225,90,11)" fg:x="121049" fg:w="62"/><text x="50.3073%" y="495.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (62 samples, 0.03%)</title><rect x="50.0573%" y="469" width="0.0256%" height="15" fill="rgb(242,56,8)" fg:x="121049" fg:w="62"/><text x="50.3073%" y="479.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (96 samples, 0.04%)</title><rect x="50.0436%" y="677" width="0.0397%" height="15" fill="rgb(249,212,39)" fg:x="121016" fg:w="96"/><text x="50.2936%" y="687.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (89 samples, 0.04%)</title><rect x="50.0465%" y="661" width="0.0368%" height="15" fill="rgb(236,90,9)" fg:x="121023" fg:w="89"/><text x="50.2965%" y="671.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (89 samples, 0.04%)</title><rect x="50.0465%" y="645" width="0.0368%" height="15" fill="rgb(206,88,35)" fg:x="121023" fg:w="89"/><text x="50.2965%" y="655.50"></text></g><g><title>bcs::de::from_bytes_seed (139 samples, 0.06%)</title><rect x="50.0263%" y="709" width="0.0575%" height="15" fill="rgb(205,126,30)" fg:x="120974" fg:w="139"/><text x="50.2763%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (106 samples, 0.04%)</title><rect x="50.0399%" y="693" width="0.0438%" height="15" fill="rgb(230,176,12)" fg:x="121007" fg:w="106"/><text x="50.2899%" y="703.50"></text></g><g><title>aptos_framework::natives::util::make_native_from_bytes::{{closure}} (240 samples, 0.10%)</title><rect x="49.9882%" y="757" width="0.0992%" height="15" fill="rgb(243,19,9)" fg:x="120882" fg:w="240"/><text x="50.2382%" y="767.50"></text></g><g><title>aptos_framework::natives::util::native_from_bytes (240 samples, 0.10%)</title><rect x="49.9882%" y="741" width="0.0992%" height="15" fill="rgb(245,171,17)" fg:x="120882" fg:w="240"/><text x="50.2382%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (148 samples, 0.06%)</title><rect x="50.0263%" y="725" width="0.0612%" height="15" fill="rgb(227,52,21)" fg:x="120974" fg:w="148"/><text x="50.2763%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (56 samples, 0.02%)</title><rect x="50.0920%" y="757" width="0.0232%" height="15" fill="rgb(238,69,14)" fg:x="121133" fg:w="56"/><text x="50.3420%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.01%)</title><rect x="50.1702%" y="677" width="0.0128%" height="15" fill="rgb(241,156,39)" fg:x="121322" fg:w="31"/><text x="50.4202%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (31 samples, 0.01%)</title><rect x="50.1702%" y="661" width="0.0128%" height="15" fill="rgb(212,227,28)" fg:x="121322" fg:w="31"/><text x="50.4202%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (35 samples, 0.01%)</title><rect x="50.1702%" y="725" width="0.0145%" height="15" fill="rgb(209,118,27)" fg:x="121322" fg:w="35"/><text x="50.4202%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (35 samples, 0.01%)</title><rect x="50.1702%" y="709" width="0.0145%" height="15" fill="rgb(226,102,5)" fg:x="121322" fg:w="35"/><text x="50.4202%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (35 samples, 0.01%)</title><rect x="50.1702%" y="693" width="0.0145%" height="15" fill="rgb(223,34,3)" fg:x="121322" fg:w="35"/><text x="50.4202%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (40 samples, 0.02%)</title><rect x="50.1908%" y="597" width="0.0165%" height="15" fill="rgb(221,81,38)" fg:x="121372" fg:w="40"/><text x="50.4408%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (48 samples, 0.02%)</title><rect x="50.1904%" y="709" width="0.0198%" height="15" fill="rgb(236,219,28)" fg:x="121371" fg:w="48"/><text x="50.4404%" y="719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.02%)</title><rect x="50.1904%" y="693" width="0.0198%" height="15" fill="rgb(213,200,14)" fg:x="121371" fg:w="48"/><text x="50.4404%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (48 samples, 0.02%)</title><rect x="50.1904%" y="677" width="0.0198%" height="15" fill="rgb(240,33,19)" fg:x="121371" fg:w="48"/><text x="50.4404%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (48 samples, 0.02%)</title><rect x="50.1904%" y="661" width="0.0198%" height="15" fill="rgb(233,113,27)" fg:x="121371" fg:w="48"/><text x="50.4404%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (48 samples, 0.02%)</title><rect x="50.1904%" y="645" width="0.0198%" height="15" fill="rgb(220,221,18)" fg:x="121371" fg:w="48"/><text x="50.4404%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.02%)</title><rect x="50.1904%" y="629" width="0.0198%" height="15" fill="rgb(238,92,8)" fg:x="121371" fg:w="48"/><text x="50.4404%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (48 samples, 0.02%)</title><rect x="50.1904%" y="613" width="0.0198%" height="15" fill="rgb(222,164,16)" fg:x="121371" fg:w="48"/><text x="50.4404%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (70 samples, 0.03%)</title><rect x="50.1875%" y="725" width="0.0289%" height="15" fill="rgb(241,119,3)" fg:x="121364" fg:w="70"/><text x="50.4375%" y="735.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (63 samples, 0.03%)</title><rect x="50.2260%" y="565" width="0.0261%" height="15" fill="rgb(241,44,8)" fg:x="121457" fg:w="63"/><text x="50.4760%" y="575.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (63 samples, 0.03%)</title><rect x="50.2260%" y="549" width="0.0261%" height="15" fill="rgb(230,36,40)" fg:x="121457" fg:w="63"/><text x="50.4760%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (46 samples, 0.02%)</title><rect x="50.2330%" y="533" width="0.0190%" height="15" fill="rgb(243,16,36)" fg:x="121474" fg:w="46"/><text x="50.4830%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (46 samples, 0.02%)</title><rect x="50.2330%" y="517" width="0.0190%" height="15" fill="rgb(231,4,26)" fg:x="121474" fg:w="46"/><text x="50.4830%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (46 samples, 0.02%)</title><rect x="50.2330%" y="501" width="0.0190%" height="15" fill="rgb(240,9,31)" fg:x="121474" fg:w="46"/><text x="50.4830%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (46 samples, 0.02%)</title><rect x="50.2330%" y="485" width="0.0190%" height="15" fill="rgb(207,173,15)" fg:x="121474" fg:w="46"/><text x="50.4830%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.01%)</title><rect x="50.2409%" y="469" width="0.0112%" height="15" fill="rgb(224,192,53)" fg:x="121493" fg:w="27"/><text x="50.4909%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.01%)</title><rect x="50.2409%" y="453" width="0.0112%" height="15" fill="rgb(223,67,28)" fg:x="121493" fg:w="27"/><text x="50.4909%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (27 samples, 0.01%)</title><rect x="50.2409%" y="437" width="0.0112%" height="15" fill="rgb(211,20,47)" fg:x="121493" fg:w="27"/><text x="50.4909%" y="447.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (84 samples, 0.03%)</title><rect x="50.2260%" y="645" width="0.0347%" height="15" fill="rgb(240,228,2)" fg:x="121457" fg:w="84"/><text x="50.4760%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (84 samples, 0.03%)</title><rect x="50.2260%" y="629" width="0.0347%" height="15" fill="rgb(248,151,12)" fg:x="121457" fg:w="84"/><text x="50.4760%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84 samples, 0.03%)</title><rect x="50.2260%" y="613" width="0.0347%" height="15" fill="rgb(244,8,39)" fg:x="121457" fg:w="84"/><text x="50.4760%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (84 samples, 0.03%)</title><rect x="50.2260%" y="597" width="0.0347%" height="15" fill="rgb(222,26,8)" fg:x="121457" fg:w="84"/><text x="50.4760%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84 samples, 0.03%)</title><rect x="50.2260%" y="581" width="0.0347%" height="15" fill="rgb(213,106,44)" fg:x="121457" fg:w="84"/><text x="50.4760%" y="591.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::type_to_type_layout (156 samples, 0.06%)</title><rect x="50.2190%" y="725" width="0.0645%" height="15" fill="rgb(214,129,20)" fg:x="121440" fg:w="156"/><text x="50.4690%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Resolver::type_to_type_layout (146 samples, 0.06%)</title><rect x="50.2231%" y="709" width="0.0604%" height="15" fill="rgb(212,32,13)" fg:x="121450" fg:w="146"/><text x="50.4731%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (146 samples, 0.06%)</title><rect x="50.2231%" y="693" width="0.0604%" height="15" fill="rgb(208,168,33)" fg:x="121450" fg:w="146"/><text x="50.4731%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (146 samples, 0.06%)</title><rect x="50.2231%" y="677" width="0.0604%" height="15" fill="rgb(231,207,8)" fg:x="121450" fg:w="146"/><text x="50.4731%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (139 samples, 0.06%)</title><rect x="50.2260%" y="661" width="0.0575%" height="15" fill="rgb(235,219,23)" fg:x="121457" fg:w="139"/><text x="50.4760%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (55 samples, 0.02%)</title><rect x="50.2607%" y="645" width="0.0227%" height="15" fill="rgb(226,216,26)" fg:x="121541" fg:w="55"/><text x="50.5107%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (55 samples, 0.02%)</title><rect x="50.2607%" y="629" width="0.0227%" height="15" fill="rgb(239,137,16)" fg:x="121541" fg:w="55"/><text x="50.5107%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (55 samples, 0.02%)</title><rect x="50.2607%" y="613" width="0.0227%" height="15" fill="rgb(207,12,36)" fg:x="121541" fg:w="55"/><text x="50.5107%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (40 samples, 0.02%)</title><rect x="50.2669%" y="597" width="0.0165%" height="15" fill="rgb(210,214,24)" fg:x="121556" fg:w="40"/><text x="50.5169%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.02%)</title><rect x="50.2669%" y="581" width="0.0165%" height="15" fill="rgb(206,56,30)" fg:x="121556" fg:w="40"/><text x="50.5169%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (40 samples, 0.02%)</title><rect x="50.2669%" y="565" width="0.0165%" height="15" fill="rgb(228,143,26)" fg:x="121556" fg:w="40"/><text x="50.5169%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (40 samples, 0.02%)</title><rect x="50.2669%" y="549" width="0.0165%" height="15" fill="rgb(216,218,46)" fg:x="121556" fg:w="40"/><text x="50.5169%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (40 samples, 0.02%)</title><rect x="50.2669%" y="533" width="0.0165%" height="15" fill="rgb(206,6,19)" fg:x="121556" fg:w="40"/><text x="50.5169%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (40 samples, 0.02%)</title><rect x="50.2669%" y="517" width="0.0165%" height="15" fill="rgb(239,177,51)" fg:x="121556" fg:w="40"/><text x="50.5169%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.01%)</title><rect x="50.3257%" y="229" width="0.0120%" height="15" fill="rgb(216,55,25)" fg:x="121698" fg:w="29"/><text x="50.5757%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (29 samples, 0.01%)</title><rect x="50.3257%" y="213" width="0.0120%" height="15" fill="rgb(231,163,29)" fg:x="121698" fg:w="29"/><text x="50.5757%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (29 samples, 0.01%)</title><rect x="50.3257%" y="197" width="0.0120%" height="15" fill="rgb(232,149,50)" fg:x="121698" fg:w="29"/><text x="50.5757%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (29 samples, 0.01%)</title><rect x="50.3257%" y="181" width="0.0120%" height="15" fill="rgb(223,142,48)" fg:x="121698" fg:w="29"/><text x="50.5757%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (29 samples, 0.01%)</title><rect x="50.3257%" y="165" width="0.0120%" height="15" fill="rgb(245,83,23)" fg:x="121698" fg:w="29"/><text x="50.5757%" y="175.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (29 samples, 0.01%)</title><rect x="50.3257%" y="149" width="0.0120%" height="15" fill="rgb(224,63,2)" fg:x="121698" fg:w="29"/><text x="50.5757%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (126 samples, 0.05%)</title><rect x="50.3013%" y="517" width="0.0521%" height="15" fill="rgb(218,65,53)" fg:x="121639" fg:w="126"/><text x="50.5513%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (126 samples, 0.05%)</title><rect x="50.3013%" y="501" width="0.0521%" height="15" fill="rgb(221,84,29)" fg:x="121639" fg:w="126"/><text x="50.5513%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (126 samples, 0.05%)</title><rect x="50.3013%" y="485" width="0.0521%" height="15" fill="rgb(234,0,32)" fg:x="121639" fg:w="126"/><text x="50.5513%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (126 samples, 0.05%)</title><rect x="50.3013%" y="469" width="0.0521%" height="15" fill="rgb(206,20,16)" fg:x="121639" fg:w="126"/><text x="50.5513%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (126 samples, 0.05%)</title><rect x="50.3013%" y="453" width="0.0521%" height="15" fill="rgb(244,172,18)" fg:x="121639" fg:w="126"/><text x="50.5513%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (112 samples, 0.05%)</title><rect x="50.3070%" y="437" width="0.0463%" height="15" fill="rgb(254,133,1)" fg:x="121653" fg:w="112"/><text x="50.5570%" y="447.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value::{{closure}}::{{closure}} (112 samples, 0.05%)</title><rect x="50.3070%" y="421" width="0.0463%" height="15" fill="rgb(222,206,41)" fg:x="121653" fg:w="112"/><text x="50.5570%" y="431.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (112 samples, 0.05%)</title><rect x="50.3070%" y="405" width="0.0463%" height="15" fill="rgb(212,3,42)" fg:x="121653" fg:w="112"/><text x="50.5570%" y="415.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value (99 samples, 0.04%)</title><rect x="50.3124%" y="389" width="0.0409%" height="15" fill="rgb(241,11,4)" fg:x="121666" fg:w="99"/><text x="50.5624%" y="399.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value::{{closure}} (81 samples, 0.03%)</title><rect x="50.3199%" y="373" width="0.0335%" height="15" fill="rgb(205,19,26)" fg:x="121684" fg:w="81"/><text x="50.5699%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (70 samples, 0.03%)</title><rect x="50.3244%" y="357" width="0.0289%" height="15" fill="rgb(210,179,32)" fg:x="121695" fg:w="70"/><text x="50.5744%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (70 samples, 0.03%)</title><rect x="50.3244%" y="341" width="0.0289%" height="15" fill="rgb(227,116,49)" fg:x="121695" fg:w="70"/><text x="50.5744%" y="351.50"></text></g><g><title>core::iter::adapters::try_process (70 samples, 0.03%)</title><rect x="50.3244%" y="325" width="0.0289%" height="15" fill="rgb(211,146,6)" fg:x="121695" fg:w="70"/><text x="50.5744%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (69 samples, 0.03%)</title><rect x="50.3248%" y="309" width="0.0285%" height="15" fill="rgb(219,44,39)" fg:x="121696" fg:w="69"/><text x="50.5748%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (69 samples, 0.03%)</title><rect x="50.3248%" y="293" width="0.0285%" height="15" fill="rgb(234,128,11)" fg:x="121696" fg:w="69"/><text x="50.5748%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (69 samples, 0.03%)</title><rect x="50.3248%" y="277" width="0.0285%" height="15" fill="rgb(220,183,53)" fg:x="121696" fg:w="69"/><text x="50.5748%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (69 samples, 0.03%)</title><rect x="50.3248%" y="261" width="0.0285%" height="15" fill="rgb(213,219,32)" fg:x="121696" fg:w="69"/><text x="50.5748%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (69 samples, 0.03%)</title><rect x="50.3248%" y="245" width="0.0285%" height="15" fill="rgb(232,156,16)" fg:x="121696" fg:w="69"/><text x="50.5748%" y="255.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::read_ref (179 samples, 0.07%)</title><rect x="50.2855%" y="693" width="0.0740%" height="15" fill="rgb(246,135,34)" fg:x="121601" fg:w="179"/><text x="50.5355%" y="703.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value (179 samples, 0.07%)</title><rect x="50.2855%" y="677" width="0.0740%" height="15" fill="rgb(241,99,0)" fg:x="121601" fg:w="179"/><text x="50.5355%" y="687.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value::{{closure}} (179 samples, 0.07%)</title><rect x="50.2855%" y="661" width="0.0740%" height="15" fill="rgb(222,103,45)" fg:x="121601" fg:w="179"/><text x="50.5355%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (169 samples, 0.07%)</title><rect x="50.2897%" y="645" width="0.0699%" height="15" fill="rgb(212,57,4)" fg:x="121611" fg:w="169"/><text x="50.5397%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (169 samples, 0.07%)</title><rect x="50.2897%" y="629" width="0.0699%" height="15" fill="rgb(215,68,47)" fg:x="121611" fg:w="169"/><text x="50.5397%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (169 samples, 0.07%)</title><rect x="50.2897%" y="613" width="0.0699%" height="15" fill="rgb(230,84,2)" fg:x="121611" fg:w="169"/><text x="50.5397%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (163 samples, 0.07%)</title><rect x="50.2922%" y="597" width="0.0674%" height="15" fill="rgb(220,102,14)" fg:x="121617" fg:w="163"/><text x="50.5422%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (163 samples, 0.07%)</title><rect x="50.2922%" y="581" width="0.0674%" height="15" fill="rgb(240,10,32)" fg:x="121617" fg:w="163"/><text x="50.5422%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (163 samples, 0.07%)</title><rect x="50.2922%" y="565" width="0.0674%" height="15" fill="rgb(215,47,27)" fg:x="121617" fg:w="163"/><text x="50.5422%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (163 samples, 0.07%)</title><rect x="50.2922%" y="549" width="0.0674%" height="15" fill="rgb(233,188,43)" fg:x="121617" fg:w="163"/><text x="50.5422%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (163 samples, 0.07%)</title><rect x="50.2922%" y="533" width="0.0674%" height="15" fill="rgb(253,190,1)" fg:x="121617" fg:w="163"/><text x="50.5422%" y="543.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (209 samples, 0.09%)</title><rect x="50.2835%" y="725" width="0.0864%" height="15" fill="rgb(206,114,52)" fg:x="121596" fg:w="209"/><text x="50.5335%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (209 samples, 0.09%)</title><rect x="50.2835%" y="709" width="0.0864%" height="15" fill="rgb(233,120,37)" fg:x="121596" fg:w="209"/><text x="50.5335%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (25 samples, 0.01%)</title><rect x="50.3596%" y="693" width="0.0103%" height="15" fill="rgb(214,52,39)" fg:x="121780" fg:w="25"/><text x="50.6096%" y="703.50"></text></g><g><title>iralloct (25 samples, 0.01%)</title><rect x="50.3988%" y="341" width="0.0103%" height="15" fill="rgb(223,80,29)" fg:x="121875" fg:w="25"/><text x="50.6488%" y="351.50"></text></g><g><title>_rjem_je_arena_ralloc (25 samples, 0.01%)</title><rect x="50.3988%" y="325" width="0.0103%" height="15" fill="rgb(230,101,40)" fg:x="121875" fg:w="25"/><text x="50.6488%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (63 samples, 0.03%)</title><rect x="50.3976%" y="405" width="0.0261%" height="15" fill="rgb(219,211,8)" fg:x="121872" fg:w="63"/><text x="50.6476%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (63 samples, 0.03%)</title><rect x="50.3976%" y="389" width="0.0261%" height="15" fill="rgb(252,126,28)" fg:x="121872" fg:w="63"/><text x="50.6476%" y="399.50"></text></g><g><title>alloc::alloc::realloc (63 samples, 0.03%)</title><rect x="50.3976%" y="373" width="0.0261%" height="15" fill="rgb(215,56,38)" fg:x="121872" fg:w="63"/><text x="50.6476%" y="383.50"></text></g><g><title>rallocx (60 samples, 0.02%)</title><rect x="50.3988%" y="357" width="0.0248%" height="15" fill="rgb(249,55,44)" fg:x="121875" fg:w="60"/><text x="50.6488%" y="367.50"></text></g><g><title>rtree_szind_slab_read (35 samples, 0.01%)</title><rect x="50.4092%" y="341" width="0.0145%" height="15" fill="rgb(220,221,32)" fg:x="121900" fg:w="35"/><text x="50.6592%" y="351.50"></text></g><g><title>rtree_read (35 samples, 0.01%)</title><rect x="50.4092%" y="325" width="0.0145%" height="15" fill="rgb(212,216,41)" fg:x="121900" fg:w="35"/><text x="50.6592%" y="335.50"></text></g><g><title>rtree_leaf_elm_lookup (35 samples, 0.01%)</title><rect x="50.4092%" y="309" width="0.0145%" height="15" fill="rgb(228,213,43)" fg:x="121900" fg:w="35"/><text x="50.6592%" y="319.50"></text></g><g><title>rtree_leafkey (35 samples, 0.01%)</title><rect x="50.4092%" y="293" width="0.0145%" height="15" fill="rgb(211,31,26)" fg:x="121900" fg:w="35"/><text x="50.6592%" y="303.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (97 samples, 0.04%)</title><rect x="50.3848%" y="661" width="0.0401%" height="15" fill="rgb(229,202,19)" fg:x="121841" fg:w="97"/><text x="50.6348%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (97 samples, 0.04%)</title><rect x="50.3848%" y="645" width="0.0401%" height="15" fill="rgb(229,105,46)" fg:x="121841" fg:w="97"/><text x="50.6348%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (97 samples, 0.04%)</title><rect x="50.3848%" y="629" width="0.0401%" height="15" fill="rgb(235,108,1)" fg:x="121841" fg:w="97"/><text x="50.6348%" y="639.50"></text></g><g><title> 32]&gt;::serialize (97 samples, 0.04%)</title><rect x="50.3848%" y="613" width="0.0401%" height="15" fill="rgb(245,111,35)" fg:x="121841" fg:w="97"/><text x="50.6348%" y="623.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (97 samples, 0.04%)</title><rect x="50.3848%" y="597" width="0.0401%" height="15" fill="rgb(219,185,31)" fg:x="121841" fg:w="97"/><text x="50.6348%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (97 samples, 0.04%)</title><rect x="50.3848%" y="581" width="0.0401%" height="15" fill="rgb(214,4,43)" fg:x="121841" fg:w="97"/><text x="50.6348%" y="591.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (97 samples, 0.04%)</title><rect x="50.3848%" y="565" width="0.0401%" height="15" fill="rgb(235,227,40)" fg:x="121841" fg:w="97"/><text x="50.6348%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (97 samples, 0.04%)</title><rect x="50.3848%" y="549" width="0.0401%" height="15" fill="rgb(230,88,30)" fg:x="121841" fg:w="97"/><text x="50.6348%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (97 samples, 0.04%)</title><rect x="50.3848%" y="533" width="0.0401%" height="15" fill="rgb(216,217,1)" fg:x="121841" fg:w="97"/><text x="50.6348%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (97 samples, 0.04%)</title><rect x="50.3848%" y="517" width="0.0401%" height="15" fill="rgb(248,139,50)" fg:x="121841" fg:w="97"/><text x="50.6348%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (97 samples, 0.04%)</title><rect x="50.3848%" y="501" width="0.0401%" height="15" fill="rgb(233,1,21)" fg:x="121841" fg:w="97"/><text x="50.6348%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (84 samples, 0.03%)</title><rect x="50.3902%" y="485" width="0.0347%" height="15" fill="rgb(215,183,12)" fg:x="121854" fg:w="84"/><text x="50.6402%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (84 samples, 0.03%)</title><rect x="50.3902%" y="469" width="0.0347%" height="15" fill="rgb(229,104,42)" fg:x="121854" fg:w="84"/><text x="50.6402%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (83 samples, 0.03%)</title><rect x="50.3906%" y="453" width="0.0343%" height="15" fill="rgb(243,34,48)" fg:x="121855" fg:w="83"/><text x="50.6406%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (68 samples, 0.03%)</title><rect x="50.3968%" y="437" width="0.0281%" height="15" fill="rgb(239,11,44)" fg:x="121870" fg:w="68"/><text x="50.6468%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (67 samples, 0.03%)</title><rect x="50.3972%" y="421" width="0.0277%" height="15" fill="rgb(231,98,35)" fg:x="121871" fg:w="67"/><text x="50.6472%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (25 samples, 0.01%)</title><rect x="50.4352%" y="485" width="0.0103%" height="15" fill="rgb(233,28,25)" fg:x="121963" fg:w="25"/><text x="50.6852%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (25 samples, 0.01%)</title><rect x="50.4352%" y="469" width="0.0103%" height="15" fill="rgb(234,123,11)" fg:x="121963" fg:w="25"/><text x="50.6852%" y="479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (46 samples, 0.02%)</title><rect x="50.4352%" y="565" width="0.0190%" height="15" fill="rgb(220,69,3)" fg:x="121963" fg:w="46"/><text x="50.6852%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (46 samples, 0.02%)</title><rect x="50.4352%" y="549" width="0.0190%" height="15" fill="rgb(214,64,36)" fg:x="121963" fg:w="46"/><text x="50.6852%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (46 samples, 0.02%)</title><rect x="50.4352%" y="533" width="0.0190%" height="15" fill="rgb(211,138,32)" fg:x="121963" fg:w="46"/><text x="50.6852%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (46 samples, 0.02%)</title><rect x="50.4352%" y="517" width="0.0190%" height="15" fill="rgb(213,118,47)" fg:x="121963" fg:w="46"/><text x="50.6852%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (46 samples, 0.02%)</title><rect x="50.4352%" y="501" width="0.0190%" height="15" fill="rgb(243,124,49)" fg:x="121963" fg:w="46"/><text x="50.6852%" y="511.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (152 samples, 0.06%)</title><rect x="50.4352%" y="597" width="0.0629%" height="15" fill="rgb(221,30,28)" fg:x="121963" fg:w="152"/><text x="50.6852%" y="607.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (152 samples, 0.06%)</title><rect x="50.4352%" y="581" width="0.0629%" height="15" fill="rgb(246,37,13)" fg:x="121963" fg:w="152"/><text x="50.6852%" y="591.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (106 samples, 0.04%)</title><rect x="50.4543%" y="565" width="0.0438%" height="15" fill="rgb(249,66,14)" fg:x="122009" fg:w="106"/><text x="50.7043%" y="575.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (106 samples, 0.04%)</title><rect x="50.4543%" y="549" width="0.0438%" height="15" fill="rgb(213,166,5)" fg:x="122009" fg:w="106"/><text x="50.7043%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (106 samples, 0.04%)</title><rect x="50.4543%" y="533" width="0.0438%" height="15" fill="rgb(221,66,24)" fg:x="122009" fg:w="106"/><text x="50.7043%" y="543.50"></text></g><g><title> 32]&gt;::serialize (106 samples, 0.04%)</title><rect x="50.4543%" y="517" width="0.0438%" height="15" fill="rgb(210,132,17)" fg:x="122009" fg:w="106"/><text x="50.7043%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (106 samples, 0.04%)</title><rect x="50.4543%" y="501" width="0.0438%" height="15" fill="rgb(243,202,5)" fg:x="122009" fg:w="106"/><text x="50.7043%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (106 samples, 0.04%)</title><rect x="50.4543%" y="485" width="0.0438%" height="15" fill="rgb(233,70,48)" fg:x="122009" fg:w="106"/><text x="50.7043%" y="495.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (106 samples, 0.04%)</title><rect x="50.4543%" y="469" width="0.0438%" height="15" fill="rgb(238,41,26)" fg:x="122009" fg:w="106"/><text x="50.7043%" y="479.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (106 samples, 0.04%)</title><rect x="50.4543%" y="453" width="0.0438%" height="15" fill="rgb(241,19,31)" fg:x="122009" fg:w="106"/><text x="50.7043%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (106 samples, 0.04%)</title><rect x="50.4543%" y="437" width="0.0438%" height="15" fill="rgb(214,76,10)" fg:x="122009" fg:w="106"/><text x="50.7043%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (106 samples, 0.04%)</title><rect x="50.4543%" y="421" width="0.0438%" height="15" fill="rgb(254,202,22)" fg:x="122009" fg:w="106"/><text x="50.7043%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (106 samples, 0.04%)</title><rect x="50.4543%" y="405" width="0.0438%" height="15" fill="rgb(214,72,24)" fg:x="122009" fg:w="106"/><text x="50.7043%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (106 samples, 0.04%)</title><rect x="50.4543%" y="389" width="0.0438%" height="15" fill="rgb(221,92,46)" fg:x="122009" fg:w="106"/><text x="50.7043%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (106 samples, 0.04%)</title><rect x="50.4543%" y="373" width="0.0438%" height="15" fill="rgb(246,13,50)" fg:x="122009" fg:w="106"/><text x="50.7043%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (92 samples, 0.04%)</title><rect x="50.4601%" y="357" width="0.0380%" height="15" fill="rgb(240,165,38)" fg:x="122023" fg:w="92"/><text x="50.7101%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (92 samples, 0.04%)</title><rect x="50.4601%" y="341" width="0.0380%" height="15" fill="rgb(241,24,51)" fg:x="122023" fg:w="92"/><text x="50.7101%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (80 samples, 0.03%)</title><rect x="50.4650%" y="325" width="0.0331%" height="15" fill="rgb(227,51,44)" fg:x="122035" fg:w="80"/><text x="50.7150%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (76 samples, 0.03%)</title><rect x="50.4667%" y="309" width="0.0314%" height="15" fill="rgb(231,121,3)" fg:x="122039" fg:w="76"/><text x="50.7167%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (76 samples, 0.03%)</title><rect x="50.4667%" y="293" width="0.0314%" height="15" fill="rgb(245,3,41)" fg:x="122039" fg:w="76"/><text x="50.7167%" y="303.50"></text></g><g><title>alloc::alloc::realloc (76 samples, 0.03%)</title><rect x="50.4667%" y="277" width="0.0314%" height="15" fill="rgb(214,13,26)" fg:x="122039" fg:w="76"/><text x="50.7167%" y="287.50"></text></g><g><title>rallocx (74 samples, 0.03%)</title><rect x="50.4675%" y="261" width="0.0306%" height="15" fill="rgb(252,75,11)" fg:x="122041" fg:w="74"/><text x="50.7175%" y="271.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (167 samples, 0.07%)</title><rect x="50.4294%" y="645" width="0.0691%" height="15" fill="rgb(218,226,17)" fg:x="121949" fg:w="167"/><text x="50.6794%" y="655.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (167 samples, 0.07%)</title><rect x="50.4294%" y="629" width="0.0691%" height="15" fill="rgb(248,89,38)" fg:x="121949" fg:w="167"/><text x="50.6794%" y="639.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (156 samples, 0.06%)</title><rect x="50.4340%" y="613" width="0.0645%" height="15" fill="rgb(237,73,46)" fg:x="121960" fg:w="156"/><text x="50.6840%" y="623.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (302 samples, 0.12%)</title><rect x="50.3757%" y="725" width="0.1249%" height="15" fill="rgb(242,78,33)" fg:x="121819" fg:w="302"/><text x="50.6257%" y="735.50"></text></g><g><title>bcs::ser::to_bytes (302 samples, 0.12%)</title><rect x="50.3757%" y="709" width="0.1249%" height="15" fill="rgb(235,60,3)" fg:x="121819" fg:w="302"/><text x="50.6257%" y="719.50"></text></g><g><title>bcs::ser::serialize_into (297 samples, 0.12%)</title><rect x="50.3778%" y="693" width="0.1228%" height="15" fill="rgb(216,172,19)" fg:x="121824" fg:w="297"/><text x="50.6278%" y="703.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (297 samples, 0.12%)</title><rect x="50.3778%" y="677" width="0.1228%" height="15" fill="rgb(227,6,42)" fg:x="121824" fg:w="297"/><text x="50.6278%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (183 samples, 0.08%)</title><rect x="50.4249%" y="661" width="0.0757%" height="15" fill="rgb(223,207,42)" fg:x="121938" fg:w="183"/><text x="50.6749%" y="671.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (29 samples, 0.01%)</title><rect x="50.5006%" y="709" width="0.0120%" height="15" fill="rgb(246,138,30)" fg:x="122121" fg:w="29"/><text x="50.7506%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (29 samples, 0.01%)</title><rect x="50.5006%" y="693" width="0.0120%" height="15" fill="rgb(251,199,47)" fg:x="122121" fg:w="29"/><text x="50.7506%" y="703.50"></text></g><g><title>move_vm_types::values::values_impl::Value::vector_u8 (34 samples, 0.01%)</title><rect x="50.5006%" y="725" width="0.0141%" height="15" fill="rgb(228,218,44)" fg:x="122121" fg:w="34"/><text x="50.7506%" y="735.50"></text></g><g><title>sdallocx (32 samples, 0.01%)</title><rect x="50.5146%" y="725" width="0.0132%" height="15" fill="rgb(220,68,6)" fg:x="122155" fg:w="32"/><text x="50.7646%" y="735.50"></text></g><g><title>move_stdlib::natives::bcs::make_native_to_bytes::{{closure}} (1,004 samples, 0.42%)</title><rect x="50.1197%" y="757" width="0.4152%" height="15" fill="rgb(240,60,26)" fg:x="121200" fg:w="1004"/><text x="50.3697%" y="767.50"></text></g><g><title>move_stdlib::natives::bcs::native_to_bytes (1,004 samples, 0.42%)</title><rect x="50.1197%" y="741" width="0.4152%" height="15" fill="rgb(211,200,19)" fg:x="121200" fg:w="1004"/><text x="50.3697%" y="751.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (219 samples, 0.09%)</title><rect x="50.5349%" y="725" width="0.0906%" height="15" fill="rgb(242,145,30)" fg:x="122204" fg:w="219"/><text x="50.7849%" y="735.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (212 samples, 0.09%)</title><rect x="50.5378%" y="709" width="0.0877%" height="15" fill="rgb(225,64,13)" fg:x="122211" fg:w="212"/><text x="50.7878%" y="719.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (212 samples, 0.09%)</title><rect x="50.5378%" y="693" width="0.0877%" height="15" fill="rgb(218,103,35)" fg:x="122211" fg:w="212"/><text x="50.7878%" y="703.50"></text></g><g><title>&lt;sha3::Sha3_256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (212 samples, 0.09%)</title><rect x="50.5378%" y="677" width="0.0877%" height="15" fill="rgb(216,93,46)" fg:x="122211" fg:w="212"/><text x="50.7878%" y="687.50"></text></g><g><title>sha3::Sha3_256::apply_padding (202 samples, 0.08%)</title><rect x="50.5419%" y="661" width="0.0835%" height="15" fill="rgb(225,159,27)" fg:x="122221" fg:w="202"/><text x="50.7919%" y="671.50"></text></g><g><title>sha3::state::Sha3State::absorb_block (202 samples, 0.08%)</title><rect x="50.5419%" y="645" width="0.0835%" height="15" fill="rgb(225,204,11)" fg:x="122221" fg:w="202"/><text x="50.7919%" y="655.50"></text></g><g><title>keccak::f1600 (202 samples, 0.08%)</title><rect x="50.5419%" y="629" width="0.0835%" height="15" fill="rgb(205,56,4)" fg:x="122221" fg:w="202"/><text x="50.7919%" y="639.50"></text></g><g><title>keccak::keccak_p (202 samples, 0.08%)</title><rect x="50.5419%" y="613" width="0.0835%" height="15" fill="rgb(206,6,35)" fg:x="122221" fg:w="202"/><text x="50.7919%" y="623.50"></text></g><g><title>&lt;u64 as core::ops::bit::BitAnd&gt;::bitand (202 samples, 0.08%)</title><rect x="50.5419%" y="597" width="0.0835%" height="15" fill="rgb(247,73,52)" fg:x="122221" fg:w="202"/><text x="50.7919%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (30 samples, 0.01%)</title><rect x="50.6362%" y="725" width="0.0124%" height="15" fill="rgb(246,97,4)" fg:x="122449" fg:w="30"/><text x="50.8862%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (30 samples, 0.01%)</title><rect x="50.6362%" y="709" width="0.0124%" height="15" fill="rgb(212,37,15)" fg:x="122449" fg:w="30"/><text x="50.8862%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="50.6362%" y="693" width="0.0124%" height="15" fill="rgb(208,130,40)" fg:x="122449" fg:w="30"/><text x="50.8862%" y="703.50"></text></g><g><title>move_stdlib::natives::hash::make_native_sha3_256::{{closure}} (283 samples, 0.12%)</title><rect x="50.5349%" y="757" width="0.1170%" height="15" fill="rgb(236,55,29)" fg:x="122204" fg:w="283"/><text x="50.7849%" y="767.50"></text></g><g><title>move_stdlib::natives::hash::native_sha3_256 (283 samples, 0.12%)</title><rect x="50.5349%" y="741" width="0.1170%" height="15" fill="rgb(209,156,45)" fg:x="122204" fg:w="283"/><text x="50.7849%" y="751.50"></text></g><g><title>move_stdlib::natives::signer::make_native_borrow_address::{{closure}} (52 samples, 0.02%)</title><rect x="50.6519%" y="757" width="0.0215%" height="15" fill="rgb(249,107,4)" fg:x="122487" fg:w="52"/><text x="50.9019%" y="767.50"></text></g><g><title>move_stdlib::natives::signer::native_borrow_address (52 samples, 0.02%)</title><rect x="50.6519%" y="741" width="0.0215%" height="15" fill="rgb(227,7,13)" fg:x="122487" fg:w="52"/><text x="50.9019%" y="751.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (36 samples, 0.01%)</title><rect x="50.6759%" y="757" width="0.0149%" height="15" fill="rgb(250,129,14)" fg:x="122545" fg:w="36"/><text x="50.9259%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (36 samples, 0.01%)</title><rect x="50.6759%" y="741" width="0.0149%" height="15" fill="rgb(229,92,13)" fg:x="122545" fg:w="36"/><text x="50.9259%" y="751.50"></text></g><g><title>core::ptr::write (36 samples, 0.01%)</title><rect x="50.6759%" y="725" width="0.0149%" height="15" fill="rgb(245,98,39)" fg:x="122545" fg:w="36"/><text x="50.9259%" y="735.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (26 samples, 0.01%)</title><rect x="50.6908%" y="757" width="0.0108%" height="15" fill="rgb(234,135,48)" fg:x="122581" fg:w="26"/><text x="50.9408%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (26 samples, 0.01%)</title><rect x="50.6908%" y="741" width="0.0108%" height="15" fill="rgb(230,98,28)" fg:x="122581" fg:w="26"/><text x="50.9408%" y="751.50"></text></g><g><title>core::ptr::write (26 samples, 0.01%)</title><rect x="50.6908%" y="725" width="0.0108%" height="15" fill="rgb(223,121,0)" fg:x="122581" fg:w="26"/><text x="50.9408%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Function::get_native (46 samples, 0.02%)</title><rect x="50.7016%" y="757" width="0.0190%" height="15" fill="rgb(234,173,33)" fg:x="122607" fg:w="46"/><text x="50.9516%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (46 samples, 0.02%)</title><rect x="50.7016%" y="741" width="0.0190%" height="15" fill="rgb(245,47,8)" fg:x="122607" fg:w="46"/><text x="50.9516%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (46 samples, 0.02%)</title><rect x="50.7016%" y="725" width="0.0190%" height="15" fill="rgb(205,17,20)" fg:x="122607" fg:w="46"/><text x="50.9516%" y="735.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (27 samples, 0.01%)</title><rect x="50.7206%" y="757" width="0.0112%" height="15" fill="rgb(232,151,16)" fg:x="122653" fg:w="27"/><text x="50.9706%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (51 samples, 0.02%)</title><rect x="50.8033%" y="725" width="0.0211%" height="15" fill="rgb(208,30,32)" fg:x="122853" fg:w="51"/><text x="51.0533%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (51 samples, 0.02%)</title><rect x="50.8033%" y="709" width="0.0211%" height="15" fill="rgb(254,26,3)" fg:x="122853" fg:w="51"/><text x="51.0533%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (51 samples, 0.02%)</title><rect x="50.8033%" y="693" width="0.0211%" height="15" fill="rgb(240,177,30)" fg:x="122853" fg:w="51"/><text x="51.0533%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (51 samples, 0.02%)</title><rect x="50.8033%" y="677" width="0.0211%" height="15" fill="rgb(248,76,44)" fg:x="122853" fg:w="51"/><text x="51.0533%" y="687.50"></text></g><g><title>alloc::alloc::alloc (51 samples, 0.02%)</title><rect x="50.8033%" y="661" width="0.0211%" height="15" fill="rgb(241,186,54)" fg:x="122853" fg:w="51"/><text x="51.0533%" y="671.50"></text></g><g><title>mallocx (30 samples, 0.01%)</title><rect x="50.8120%" y="645" width="0.0124%" height="15" fill="rgb(249,171,29)" fg:x="122874" fg:w="30"/><text x="51.0620%" y="655.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (134 samples, 0.06%)</title><rect x="50.8244%" y="725" width="0.0554%" height="15" fill="rgb(237,151,44)" fg:x="122904" fg:w="134"/><text x="51.0744%" y="735.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (368 samples, 0.15%)</title><rect x="50.7317%" y="757" width="0.1522%" height="15" fill="rgb(228,174,30)" fg:x="122680" fg:w="368"/><text x="50.9817%" y="767.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (365 samples, 0.15%)</title><rect x="50.7330%" y="741" width="0.1509%" height="15" fill="rgb(252,14,37)" fg:x="122683" fg:w="365"/><text x="50.9830%" y="751.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (3,694 samples, 1.53%)</title><rect x="49.3857%" y="789" width="1.5276%" height="15" fill="rgb(207,111,40)" fg:x="119425" fg:w="3694"/><text x="49.6357%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (3,694 samples, 1.53%)</title><rect x="49.3857%" y="773" width="1.5276%" height="15" fill="rgb(248,171,54)" fg:x="119425" fg:w="3694"/><text x="49.6357%" y="783.50"></text></g><g><title>sdallocx (71 samples, 0.03%)</title><rect x="50.8839%" y="757" width="0.0294%" height="15" fill="rgb(211,127,2)" fg:x="123048" fg:w="71"/><text x="51.1339%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::check_friend_or_private_call (58 samples, 0.02%)</title><rect x="50.9133%" y="789" width="0.0240%" height="15" fill="rgb(236,87,47)" fg:x="123119" fg:w="58"/><text x="51.1633%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Function::is_friend_or_private (58 samples, 0.02%)</title><rect x="50.9133%" y="773" width="0.0240%" height="15" fill="rgb(223,190,45)" fg:x="123119" fg:w="58"/><text x="51.1633%" y="783.50"></text></g><g><title>__rust_dealloc (76 samples, 0.03%)</title><rect x="50.9985%" y="773" width="0.0314%" height="15" fill="rgb(215,5,16)" fg:x="123325" fg:w="76"/><text x="51.2485%" y="783.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (76 samples, 0.03%)</title><rect x="50.9985%" y="757" width="0.0314%" height="15" fill="rgb(252,82,33)" fg:x="123325" fg:w="76"/><text x="51.2485%" y="767.50"></text></g><g><title>jemallocator::layout_to_flags (29 samples, 0.01%)</title><rect x="51.0179%" y="741" width="0.0120%" height="15" fill="rgb(247,213,44)" fg:x="123372" fg:w="29"/><text x="51.2679%" y="751.50"></text></g><g><title>__rust_dealloc (168 samples, 0.07%)</title><rect x="51.0936%" y="741" width="0.0695%" height="15" fill="rgb(205,196,44)" fg:x="123555" fg:w="168"/><text x="51.3436%" y="751.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (168 samples, 0.07%)</title><rect x="51.0936%" y="725" width="0.0695%" height="15" fill="rgb(237,96,54)" fg:x="123555" fg:w="168"/><text x="51.3436%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (38 samples, 0.02%)</title><rect x="51.2259%" y="709" width="0.0157%" height="15" fill="rgb(230,113,34)" fg:x="123875" fg:w="38"/><text x="51.4759%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (44 samples, 0.02%)</title><rect x="51.2247%" y="725" width="0.0182%" height="15" fill="rgb(221,224,12)" fg:x="123872" fg:w="44"/><text x="51.4747%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (203 samples, 0.08%)</title><rect x="51.1717%" y="741" width="0.0839%" height="15" fill="rgb(219,112,44)" fg:x="123744" fg:w="203"/><text x="51.4217%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (31 samples, 0.01%)</title><rect x="51.2429%" y="725" width="0.0128%" height="15" fill="rgb(210,31,13)" fg:x="123916" fg:w="31"/><text x="51.4929%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.01%)</title><rect x="51.2429%" y="709" width="0.0128%" height="15" fill="rgb(230,25,16)" fg:x="123916" fg:w="31"/><text x="51.4929%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (31 samples, 0.01%)</title><rect x="51.2429%" y="693" width="0.0128%" height="15" fill="rgb(246,108,53)" fg:x="123916" fg:w="31"/><text x="51.4929%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (31 samples, 0.01%)</title><rect x="51.2429%" y="677" width="0.0128%" height="15" fill="rgb(241,172,50)" fg:x="123916" fg:w="31"/><text x="51.4929%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (713 samples, 0.29%)</title><rect x="51.0874%" y="757" width="0.2948%" height="15" fill="rgb(235,141,10)" fg:x="123540" fg:w="713"/><text x="51.3374%" y="767.50"></text></g><g><title>sdallocx (306 samples, 0.13%)</title><rect x="51.2557%" y="741" width="0.1265%" height="15" fill="rgb(220,174,43)" fg:x="123947" fg:w="306"/><text x="51.5057%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (836 samples, 0.35%)</title><rect x="51.0390%" y="773" width="0.3457%" height="15" fill="rgb(215,181,40)" fg:x="123423" fg:w="836"/><text x="51.2890%" y="783.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (29 samples, 0.01%)</title><rect x="51.4496%" y="645" width="0.0120%" height="15" fill="rgb(230,97,2)" fg:x="124416" fg:w="29"/><text x="51.6996%" y="655.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (96 samples, 0.04%)</title><rect x="51.4496%" y="661" width="0.0397%" height="15" fill="rgb(211,25,27)" fg:x="124416" fg:w="96"/><text x="51.6996%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (67 samples, 0.03%)</title><rect x="51.4616%" y="645" width="0.0277%" height="15" fill="rgb(230,87,26)" fg:x="124445" fg:w="67"/><text x="51.7116%" y="655.50"></text></g><g><title>core::ptr::write (67 samples, 0.03%)</title><rect x="51.4616%" y="629" width="0.0277%" height="15" fill="rgb(227,160,17)" fg:x="124445" fg:w="67"/><text x="51.7116%" y="639.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (134 samples, 0.06%)</title><rect x="51.4496%" y="693" width="0.0554%" height="15" fill="rgb(244,85,34)" fg:x="124416" fg:w="134"/><text x="51.6996%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (134 samples, 0.06%)</title><rect x="51.4496%" y="677" width="0.0554%" height="15" fill="rgb(207,70,0)" fg:x="124416" fg:w="134"/><text x="51.6996%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (38 samples, 0.02%)</title><rect x="51.4893%" y="661" width="0.0157%" height="15" fill="rgb(223,129,7)" fg:x="124512" fg:w="38"/><text x="51.7393%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (38 samples, 0.02%)</title><rect x="51.4893%" y="645" width="0.0157%" height="15" fill="rgb(246,105,7)" fg:x="124512" fg:w="38"/><text x="51.7393%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.02%)</title><rect x="51.4893%" y="629" width="0.0157%" height="15" fill="rgb(215,154,42)" fg:x="124512" fg:w="38"/><text x="51.7393%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.02%)</title><rect x="51.4893%" y="613" width="0.0157%" height="15" fill="rgb(220,215,30)" fg:x="124512" fg:w="38"/><text x="51.7393%" y="623.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.02%)</title><rect x="51.4893%" y="597" width="0.0157%" height="15" fill="rgb(228,81,51)" fg:x="124512" fg:w="38"/><text x="51.7393%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (159 samples, 0.07%)</title><rect x="51.4496%" y="757" width="0.0658%" height="15" fill="rgb(247,71,54)" fg:x="124416" fg:w="159"/><text x="51.6996%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (159 samples, 0.07%)</title><rect x="51.4496%" y="741" width="0.0658%" height="15" fill="rgb(234,176,34)" fg:x="124416" fg:w="159"/><text x="51.6996%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (159 samples, 0.07%)</title><rect x="51.4496%" y="725" width="0.0658%" height="15" fill="rgb(241,103,54)" fg:x="124416" fg:w="159"/><text x="51.6996%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (159 samples, 0.07%)</title><rect x="51.4496%" y="709" width="0.0658%" height="15" fill="rgb(228,22,34)" fg:x="124416" fg:w="159"/><text x="51.6996%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.01%)</title><rect x="51.5050%" y="693" width="0.0103%" height="15" fill="rgb(241,179,48)" fg:x="124550" fg:w="25"/><text x="51.7550%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.01%)</title><rect x="51.5050%" y="677" width="0.0103%" height="15" fill="rgb(235,167,37)" fg:x="124550" fg:w="25"/><text x="51.7550%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (25 samples, 0.01%)</title><rect x="51.5050%" y="661" width="0.0103%" height="15" fill="rgb(213,109,30)" fg:x="124550" fg:w="25"/><text x="51.7550%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.01%)</title><rect x="51.5050%" y="645" width="0.0103%" height="15" fill="rgb(222,172,16)" fg:x="124550" fg:w="25"/><text x="51.7550%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.01%)</title><rect x="51.5050%" y="629" width="0.0103%" height="15" fill="rgb(233,192,5)" fg:x="124550" fg:w="25"/><text x="51.7550%" y="639.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.01%)</title><rect x="51.5050%" y="613" width="0.0103%" height="15" fill="rgb(247,189,41)" fg:x="124550" fg:w="25"/><text x="51.7550%" y="623.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (208 samples, 0.09%)</title><rect x="51.5154%" y="661" width="0.0860%" height="15" fill="rgb(218,134,47)" fg:x="124575" fg:w="208"/><text x="51.7654%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (28 samples, 0.01%)</title><rect x="51.6957%" y="453" width="0.0116%" height="15" fill="rgb(216,29,3)" fg:x="125011" fg:w="28"/><text x="51.9457%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (28 samples, 0.01%)</title><rect x="51.6957%" y="437" width="0.0116%" height="15" fill="rgb(246,140,12)" fg:x="125011" fg:w="28"/><text x="51.9457%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.01%)</title><rect x="51.6957%" y="421" width="0.0116%" height="15" fill="rgb(230,136,11)" fg:x="125011" fg:w="28"/><text x="51.9457%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.03%)</title><rect x="51.6886%" y="597" width="0.0306%" height="15" fill="rgb(247,22,47)" fg:x="124994" fg:w="74"/><text x="51.9386%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (74 samples, 0.03%)</title><rect x="51.6886%" y="581" width="0.0306%" height="15" fill="rgb(218,84,22)" fg:x="124994" fg:w="74"/><text x="51.9386%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (74 samples, 0.03%)</title><rect x="51.6886%" y="565" width="0.0306%" height="15" fill="rgb(216,87,39)" fg:x="124994" fg:w="74"/><text x="51.9386%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (74 samples, 0.03%)</title><rect x="51.6886%" y="549" width="0.0306%" height="15" fill="rgb(221,178,8)" fg:x="124994" fg:w="74"/><text x="51.9386%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (74 samples, 0.03%)</title><rect x="51.6886%" y="533" width="0.0306%" height="15" fill="rgb(230,42,11)" fg:x="124994" fg:w="74"/><text x="51.9386%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (74 samples, 0.03%)</title><rect x="51.6886%" y="517" width="0.0306%" height="15" fill="rgb(237,229,4)" fg:x="124994" fg:w="74"/><text x="51.9386%" y="527.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (74 samples, 0.03%)</title><rect x="51.6886%" y="501" width="0.0306%" height="15" fill="rgb(222,31,33)" fg:x="124994" fg:w="74"/><text x="51.9386%" y="511.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (74 samples, 0.03%)</title><rect x="51.6886%" y="485" width="0.0306%" height="15" fill="rgb(210,17,39)" fg:x="124994" fg:w="74"/><text x="51.9386%" y="495.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (74 samples, 0.03%)</title><rect x="51.6886%" y="469" width="0.0306%" height="15" fill="rgb(244,93,20)" fg:x="124994" fg:w="74"/><text x="51.9386%" y="479.50"></text></g><g><title>arena_ralloc_move_helper (31 samples, 0.01%)</title><rect x="51.7238%" y="421" width="0.0128%" height="15" fill="rgb(210,40,47)" fg:x="125079" fg:w="31"/><text x="51.9738%" y="431.50"></text></g><g><title>ipalloct (31 samples, 0.01%)</title><rect x="51.7238%" y="405" width="0.0128%" height="15" fill="rgb(239,211,47)" fg:x="125079" fg:w="31"/><text x="51.9738%" y="415.50"></text></g><g><title>ipallocztm (31 samples, 0.01%)</title><rect x="51.7238%" y="389" width="0.0128%" height="15" fill="rgb(251,223,49)" fg:x="125079" fg:w="31"/><text x="51.9738%" y="399.50"></text></g><g><title>_rjem_je_arena_palloc (31 samples, 0.01%)</title><rect x="51.7238%" y="373" width="0.0128%" height="15" fill="rgb(221,149,5)" fg:x="125079" fg:w="31"/><text x="51.9738%" y="383.50"></text></g><g><title>_rjem_je_arena_palloc (31 samples, 0.01%)</title><rect x="51.7238%" y="357" width="0.0128%" height="15" fill="rgb(219,224,51)" fg:x="125079" fg:w="31"/><text x="51.9738%" y="367.50"></text></g><g><title>arena_malloc (31 samples, 0.01%)</title><rect x="51.7238%" y="341" width="0.0128%" height="15" fill="rgb(223,7,8)" fg:x="125079" fg:w="31"/><text x="51.9738%" y="351.50"></text></g><g><title>tcache_alloc_small (31 samples, 0.01%)</title><rect x="51.7238%" y="325" width="0.0128%" height="15" fill="rgb(241,217,22)" fg:x="125079" fg:w="31"/><text x="51.9738%" y="335.50"></text></g><g><title>iralloct (35 samples, 0.01%)</title><rect x="51.7230%" y="453" width="0.0145%" height="15" fill="rgb(248,209,0)" fg:x="125077" fg:w="35"/><text x="51.9730%" y="463.50"></text></g><g><title>_rjem_je_arena_ralloc (35 samples, 0.01%)</title><rect x="51.7230%" y="437" width="0.0145%" height="15" fill="rgb(217,205,4)" fg:x="125077" fg:w="35"/><text x="51.9730%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (60 samples, 0.02%)</title><rect x="51.7209%" y="517" width="0.0248%" height="15" fill="rgb(228,124,39)" fg:x="125072" fg:w="60"/><text x="51.9709%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (60 samples, 0.02%)</title><rect x="51.7209%" y="501" width="0.0248%" height="15" fill="rgb(250,116,42)" fg:x="125072" fg:w="60"/><text x="51.9709%" y="511.50"></text></g><g><title>alloc::alloc::realloc (60 samples, 0.02%)</title><rect x="51.7209%" y="485" width="0.0248%" height="15" fill="rgb(223,202,9)" fg:x="125072" fg:w="60"/><text x="51.9709%" y="495.50"></text></g><g><title>rallocx (55 samples, 0.02%)</title><rect x="51.7230%" y="469" width="0.0227%" height="15" fill="rgb(242,222,40)" fg:x="125077" fg:w="55"/><text x="51.9730%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (350 samples, 0.14%)</title><rect x="51.6014%" y="629" width="0.1447%" height="15" fill="rgb(229,99,46)" fg:x="124783" fg:w="350"/><text x="51.8514%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (350 samples, 0.14%)</title><rect x="51.6014%" y="613" width="0.1447%" height="15" fill="rgb(225,56,46)" fg:x="124783" fg:w="350"/><text x="51.8514%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (65 samples, 0.03%)</title><rect x="51.7192%" y="597" width="0.0269%" height="15" fill="rgb(227,94,5)" fg:x="125068" fg:w="65"/><text x="51.9692%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (65 samples, 0.03%)</title><rect x="51.7192%" y="581" width="0.0269%" height="15" fill="rgb(205,112,38)" fg:x="125068" fg:w="65"/><text x="51.9692%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (65 samples, 0.03%)</title><rect x="51.7192%" y="565" width="0.0269%" height="15" fill="rgb(231,133,46)" fg:x="125068" fg:w="65"/><text x="51.9692%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (65 samples, 0.03%)</title><rect x="51.7192%" y="549" width="0.0269%" height="15" fill="rgb(217,16,9)" fg:x="125068" fg:w="65"/><text x="51.9692%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (62 samples, 0.03%)</title><rect x="51.7205%" y="533" width="0.0256%" height="15" fill="rgb(249,173,9)" fg:x="125071" fg:w="62"/><text x="51.9705%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (352 samples, 0.15%)</title><rect x="51.7561%" y="485" width="0.1456%" height="15" fill="rgb(205,163,53)" fg:x="125157" fg:w="352"/><text x="52.0061%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (120 samples, 0.05%)</title><rect x="51.9016%" y="485" width="0.0496%" height="15" fill="rgb(217,54,41)" fg:x="125509" fg:w="120"/><text x="52.1516%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (120 samples, 0.05%)</title><rect x="51.9016%" y="469" width="0.0496%" height="15" fill="rgb(228,216,12)" fg:x="125509" fg:w="120"/><text x="52.1516%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (108 samples, 0.04%)</title><rect x="51.9066%" y="453" width="0.0447%" height="15" fill="rgb(244,228,15)" fg:x="125521" fg:w="108"/><text x="52.1566%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (108 samples, 0.04%)</title><rect x="51.9066%" y="437" width="0.0447%" height="15" fill="rgb(221,176,53)" fg:x="125521" fg:w="108"/><text x="52.1566%" y="447.50"></text></g><g><title>alloc::alloc::alloc (108 samples, 0.04%)</title><rect x="51.9066%" y="421" width="0.0447%" height="15" fill="rgb(205,94,34)" fg:x="125521" fg:w="108"/><text x="52.1566%" y="431.50"></text></g><g><title>mallocx (75 samples, 0.03%)</title><rect x="51.9202%" y="405" width="0.0310%" height="15" fill="rgb(213,110,48)" fg:x="125554" fg:w="75"/><text x="52.1702%" y="415.50"></text></g><g><title>imalloc (75 samples, 0.03%)</title><rect x="51.9202%" y="389" width="0.0310%" height="15" fill="rgb(236,142,28)" fg:x="125554" fg:w="75"/><text x="52.1702%" y="399.50"></text></g><g><title>imalloc_body (75 samples, 0.03%)</title><rect x="51.9202%" y="373" width="0.0310%" height="15" fill="rgb(225,135,29)" fg:x="125554" fg:w="75"/><text x="52.1702%" y="383.50"></text></g><g><title>imalloc_no_sample (75 samples, 0.03%)</title><rect x="51.9202%" y="357" width="0.0310%" height="15" fill="rgb(252,45,31)" fg:x="125554" fg:w="75"/><text x="52.1702%" y="367.50"></text></g><g><title>iallocztm (75 samples, 0.03%)</title><rect x="51.9202%" y="341" width="0.0310%" height="15" fill="rgb(211,187,50)" fg:x="125554" fg:w="75"/><text x="52.1702%" y="351.50"></text></g><g><title>arena_malloc (75 samples, 0.03%)</title><rect x="51.9202%" y="325" width="0.0310%" height="15" fill="rgb(229,109,7)" fg:x="125554" fg:w="75"/><text x="52.1702%" y="335.50"></text></g><g><title>tcache_alloc_small (68 samples, 0.03%)</title><rect x="51.9231%" y="309" width="0.0281%" height="15" fill="rgb(251,131,51)" fg:x="125561" fg:w="68"/><text x="52.1731%" y="319.50"></text></g><g><title>cache_bin_alloc_easy (68 samples, 0.03%)</title><rect x="51.9231%" y="293" width="0.0281%" height="15" fill="rgb(251,180,35)" fg:x="125561" fg:w="68"/><text x="52.1731%" y="303.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (285 samples, 0.12%)</title><rect x="51.9512%" y="469" width="0.1179%" height="15" fill="rgb(211,46,32)" fg:x="125629" fg:w="285"/><text x="52.2012%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (95 samples, 0.04%)</title><rect x="52.0691%" y="469" width="0.0393%" height="15" fill="rgb(248,123,17)" fg:x="125914" fg:w="95"/><text x="52.3191%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (95 samples, 0.04%)</title><rect x="52.0691%" y="453" width="0.0393%" height="15" fill="rgb(227,141,18)" fg:x="125914" fg:w="95"/><text x="52.3191%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87 samples, 0.04%)</title><rect x="52.0724%" y="437" width="0.0360%" height="15" fill="rgb(216,102,9)" fg:x="125922" fg:w="87"/><text x="52.3224%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.04%)</title><rect x="52.0724%" y="421" width="0.0360%" height="15" fill="rgb(253,47,13)" fg:x="125922" fg:w="87"/><text x="52.3224%" y="431.50"></text></g><g><title>alloc::alloc::alloc (87 samples, 0.04%)</title><rect x="52.0724%" y="405" width="0.0360%" height="15" fill="rgb(226,93,23)" fg:x="125922" fg:w="87"/><text x="52.3224%" y="415.50"></text></g><g><title>mallocx (56 samples, 0.02%)</title><rect x="52.0852%" y="389" width="0.0232%" height="15" fill="rgb(247,104,17)" fg:x="125953" fg:w="56"/><text x="52.3352%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (45 samples, 0.02%)</title><rect x="52.1084%" y="469" width="0.0186%" height="15" fill="rgb(233,203,26)" fg:x="126009" fg:w="45"/><text x="52.3584%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (45 samples, 0.02%)</title><rect x="52.1084%" y="453" width="0.0186%" height="15" fill="rgb(244,98,49)" fg:x="126009" fg:w="45"/><text x="52.3584%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (45 samples, 0.02%)</title><rect x="52.1084%" y="437" width="0.0186%" height="15" fill="rgb(235,134,22)" fg:x="126009" fg:w="45"/><text x="52.3584%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1,249 samples, 0.52%)</title><rect x="51.7461%" y="613" width="0.5165%" height="15" fill="rgb(221,70,32)" fg:x="125133" fg:w="1249"/><text x="51.9961%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,249 samples, 0.52%)</title><rect x="51.7461%" y="597" width="0.5165%" height="15" fill="rgb(238,15,50)" fg:x="125133" fg:w="1249"/><text x="51.9961%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,249 samples, 0.52%)</title><rect x="51.7461%" y="581" width="0.5165%" height="15" fill="rgb(215,221,48)" fg:x="125133" fg:w="1249"/><text x="51.9961%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,249 samples, 0.52%)</title><rect x="51.7461%" y="565" width="0.5165%" height="15" fill="rgb(236,73,3)" fg:x="125133" fg:w="1249"/><text x="51.9961%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1,249 samples, 0.52%)</title><rect x="51.7461%" y="549" width="0.5165%" height="15" fill="rgb(250,107,11)" fg:x="125133" fg:w="1249"/><text x="51.9961%" y="559.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (1,249 samples, 0.52%)</title><rect x="51.7461%" y="533" width="0.5165%" height="15" fill="rgb(242,39,14)" fg:x="125133" fg:w="1249"/><text x="51.9961%" y="543.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (1,244 samples, 0.51%)</title><rect x="51.7482%" y="517" width="0.5144%" height="15" fill="rgb(248,164,37)" fg:x="125138" fg:w="1244"/><text x="51.9982%" y="527.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (1,225 samples, 0.51%)</title><rect x="51.7561%" y="501" width="0.5066%" height="15" fill="rgb(217,60,12)" fg:x="125157" fg:w="1225"/><text x="52.0061%" y="511.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (753 samples, 0.31%)</title><rect x="51.9512%" y="485" width="0.3114%" height="15" fill="rgb(240,125,29)" fg:x="125629" fg:w="753"/><text x="52.2012%" y="495.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (328 samples, 0.14%)</title><rect x="52.1270%" y="469" width="0.1356%" height="15" fill="rgb(208,207,28)" fg:x="126054" fg:w="328"/><text x="52.3770%" y="479.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (65 samples, 0.03%)</title><rect x="52.2357%" y="453" width="0.0269%" height="15" fill="rgb(209,159,27)" fg:x="126317" fg:w="65"/><text x="52.4857%" y="463.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (65 samples, 0.03%)</title><rect x="52.2357%" y="437" width="0.0269%" height="15" fill="rgb(251,176,53)" fg:x="126317" fg:w="65"/><text x="52.4857%" y="447.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (65 samples, 0.03%)</title><rect x="52.2357%" y="421" width="0.0269%" height="15" fill="rgb(211,85,7)" fg:x="126317" fg:w="65"/><text x="52.4857%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,769 samples, 0.73%)</title><rect x="51.7461%" y="629" width="0.7315%" height="15" fill="rgb(216,64,54)" fg:x="125133" fg:w="1769"/><text x="51.9961%" y="639.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (520 samples, 0.22%)</title><rect x="52.2626%" y="613" width="0.2150%" height="15" fill="rgb(217,54,24)" fg:x="126382" fg:w="520"/><text x="52.5126%" y="623.50"></text></g><g><title>__rust_alloc (46 samples, 0.02%)</title><rect x="52.4843%" y="517" width="0.0190%" height="15" fill="rgb(208,206,53)" fg:x="126918" fg:w="46"/><text x="52.7343%" y="527.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (46 samples, 0.02%)</title><rect x="52.4843%" y="501" width="0.0190%" height="15" fill="rgb(251,74,39)" fg:x="126918" fg:w="46"/><text x="52.7343%" y="511.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (2,774 samples, 1.15%)</title><rect x="51.3847%" y="773" width="1.1471%" height="15" fill="rgb(226,47,5)" fg:x="124259" fg:w="2774"/><text x="51.6347%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,458 samples, 1.02%)</title><rect x="51.5154%" y="757" width="1.0165%" height="15" fill="rgb(234,111,33)" fg:x="124575" fg:w="2458"/><text x="51.7654%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2,458 samples, 1.02%)</title><rect x="51.5154%" y="741" width="1.0165%" height="15" fill="rgb(251,14,10)" fg:x="124575" fg:w="2458"/><text x="51.7654%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (2,458 samples, 1.02%)</title><rect x="51.5154%" y="725" width="1.0165%" height="15" fill="rgb(232,43,0)" fg:x="124575" fg:w="2458"/><text x="51.7654%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (2,458 samples, 1.02%)</title><rect x="51.5154%" y="709" width="1.0165%" height="15" fill="rgb(222,68,43)" fg:x="124575" fg:w="2458"/><text x="51.7654%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,458 samples, 1.02%)</title><rect x="51.5154%" y="693" width="1.0165%" height="15" fill="rgb(217,24,23)" fg:x="124575" fg:w="2458"/><text x="51.7654%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,458 samples, 1.02%)</title><rect x="51.5154%" y="677" width="1.0165%" height="15" fill="rgb(229,209,14)" fg:x="124575" fg:w="2458"/><text x="51.7654%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,250 samples, 0.93%)</title><rect x="51.6014%" y="661" width="0.9304%" height="15" fill="rgb(250,149,48)" fg:x="124783" fg:w="2250"/><text x="51.8514%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,250 samples, 0.93%)</title><rect x="51.6014%" y="645" width="0.9304%" height="15" fill="rgb(210,120,37)" fg:x="124783" fg:w="2250"/><text x="51.8514%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (131 samples, 0.05%)</title><rect x="52.4777%" y="629" width="0.0542%" height="15" fill="rgb(210,21,8)" fg:x="126902" fg:w="131"/><text x="52.7277%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (131 samples, 0.05%)</title><rect x="52.4777%" y="613" width="0.0542%" height="15" fill="rgb(243,145,7)" fg:x="126902" fg:w="131"/><text x="52.7277%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (131 samples, 0.05%)</title><rect x="52.4777%" y="597" width="0.0542%" height="15" fill="rgb(238,178,32)" fg:x="126902" fg:w="131"/><text x="52.7277%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (131 samples, 0.05%)</title><rect x="52.4777%" y="581" width="0.0542%" height="15" fill="rgb(222,4,10)" fg:x="126902" fg:w="131"/><text x="52.7277%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (131 samples, 0.05%)</title><rect x="52.4777%" y="565" width="0.0542%" height="15" fill="rgb(239,7,37)" fg:x="126902" fg:w="131"/><text x="52.7277%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (131 samples, 0.05%)</title><rect x="52.4777%" y="549" width="0.0542%" height="15" fill="rgb(215,31,37)" fg:x="126902" fg:w="131"/><text x="52.7277%" y="559.50"></text></g><g><title>alloc::alloc::alloc (131 samples, 0.05%)</title><rect x="52.4777%" y="533" width="0.0542%" height="15" fill="rgb(224,83,33)" fg:x="126902" fg:w="131"/><text x="52.7277%" y="543.50"></text></g><g><title>mallocx (69 samples, 0.03%)</title><rect x="52.5033%" y="517" width="0.0285%" height="15" fill="rgb(239,55,3)" fg:x="126964" fg:w="69"/><text x="52.7533%" y="527.50"></text></g><g><title>imalloc (69 samples, 0.03%)</title><rect x="52.5033%" y="501" width="0.0285%" height="15" fill="rgb(247,92,11)" fg:x="126964" fg:w="69"/><text x="52.7533%" y="511.50"></text></g><g><title>imalloc_body (69 samples, 0.03%)</title><rect x="52.5033%" y="485" width="0.0285%" height="15" fill="rgb(239,200,7)" fg:x="126964" fg:w="69"/><text x="52.7533%" y="495.50"></text></g><g><title>imalloc_no_sample (69 samples, 0.03%)</title><rect x="52.5033%" y="469" width="0.0285%" height="15" fill="rgb(227,115,8)" fg:x="126964" fg:w="69"/><text x="52.7533%" y="479.50"></text></g><g><title>iallocztm (69 samples, 0.03%)</title><rect x="52.5033%" y="453" width="0.0285%" height="15" fill="rgb(215,189,27)" fg:x="126964" fg:w="69"/><text x="52.7533%" y="463.50"></text></g><g><title>arena_malloc (69 samples, 0.03%)</title><rect x="52.5033%" y="437" width="0.0285%" height="15" fill="rgb(251,216,39)" fg:x="126964" fg:w="69"/><text x="52.7533%" y="447.50"></text></g><g><title>tcache_alloc_small (61 samples, 0.03%)</title><rect x="52.5066%" y="421" width="0.0252%" height="15" fill="rgb(207,29,47)" fg:x="126972" fg:w="61"/><text x="52.7566%" y="431.50"></text></g><g><title>cache_bin_alloc_easy (61 samples, 0.03%)</title><rect x="52.5066%" y="405" width="0.0252%" height="15" fill="rgb(210,71,34)" fg:x="126972" fg:w="61"/><text x="52.7566%" y="415.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (362 samples, 0.15%)</title><rect x="52.5318%" y="773" width="0.1497%" height="15" fill="rgb(253,217,51)" fg:x="127033" fg:w="362"/><text x="52.7818%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (362 samples, 0.15%)</title><rect x="52.5318%" y="757" width="0.1497%" height="15" fill="rgb(222,117,46)" fg:x="127033" fg:w="362"/><text x="52.7818%" y="767.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (187 samples, 0.08%)</title><rect x="52.6815%" y="773" width="0.0773%" height="15" fill="rgb(226,132,6)" fg:x="127395" fg:w="187"/><text x="52.9315%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (159 samples, 0.07%)</title><rect x="52.6931%" y="757" width="0.0658%" height="15" fill="rgb(254,145,51)" fg:x="127423" fg:w="159"/><text x="52.9431%" y="767.50"></text></g><g><title>core::cmp::PartialEq::ne (159 samples, 0.07%)</title><rect x="52.6931%" y="741" width="0.0658%" height="15" fill="rgb(231,199,27)" fg:x="127423" fg:w="159"/><text x="52.9431%" y="751.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (148 samples, 0.06%)</title><rect x="52.6977%" y="725" width="0.0612%" height="15" fill="rgb(245,158,14)" fg:x="127434" fg:w="148"/><text x="52.9477%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (361 samples, 0.15%)</title><rect x="52.7634%" y="741" width="0.1493%" height="15" fill="rgb(240,113,14)" fg:x="127593" fg:w="361"/><text x="53.0134%" y="751.50"></text></g><g><title>__rust_alloc (33 samples, 0.01%)</title><rect x="52.9168%" y="661" width="0.0136%" height="15" fill="rgb(210,20,13)" fg:x="127964" fg:w="33"/><text x="53.1668%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (129 samples, 0.05%)</title><rect x="52.9127%" y="741" width="0.0533%" height="15" fill="rgb(241,144,13)" fg:x="127954" fg:w="129"/><text x="53.1627%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (129 samples, 0.05%)</title><rect x="52.9127%" y="725" width="0.0533%" height="15" fill="rgb(235,43,34)" fg:x="127954" fg:w="129"/><text x="53.1627%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (129 samples, 0.05%)</title><rect x="52.9127%" y="709" width="0.0533%" height="15" fill="rgb(208,36,20)" fg:x="127954" fg:w="129"/><text x="53.1627%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (129 samples, 0.05%)</title><rect x="52.9127%" y="693" width="0.0533%" height="15" fill="rgb(239,204,10)" fg:x="127954" fg:w="129"/><text x="53.1627%" y="703.50"></text></g><g><title>alloc::alloc::alloc (129 samples, 0.05%)</title><rect x="52.9127%" y="677" width="0.0533%" height="15" fill="rgb(217,84,43)" fg:x="127954" fg:w="129"/><text x="53.1627%" y="687.50"></text></g><g><title>mallocx (75 samples, 0.03%)</title><rect x="52.9350%" y="661" width="0.0310%" height="15" fill="rgb(241,170,50)" fg:x="128008" fg:w="75"/><text x="53.1850%" y="671.50"></text></g><g><title>imalloc (75 samples, 0.03%)</title><rect x="52.9350%" y="645" width="0.0310%" height="15" fill="rgb(226,205,29)" fg:x="128008" fg:w="75"/><text x="53.1850%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (119 samples, 0.05%)</title><rect x="53.1017%" y="725" width="0.0492%" height="15" fill="rgb(233,113,1)" fg:x="128411" fg:w="119"/><text x="53.3517%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (119 samples, 0.05%)</title><rect x="53.1017%" y="709" width="0.0492%" height="15" fill="rgb(253,98,13)" fg:x="128411" fg:w="119"/><text x="53.3517%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (119 samples, 0.05%)</title><rect x="53.1017%" y="693" width="0.0492%" height="15" fill="rgb(211,115,12)" fg:x="128411" fg:w="119"/><text x="53.3517%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (119 samples, 0.05%)</title><rect x="53.1017%" y="677" width="0.0492%" height="15" fill="rgb(208,12,16)" fg:x="128411" fg:w="119"/><text x="53.3517%" y="687.50"></text></g><g><title>alloc::alloc::alloc (119 samples, 0.05%)</title><rect x="53.1017%" y="661" width="0.0492%" height="15" fill="rgb(237,193,54)" fg:x="128411" fg:w="119"/><text x="53.3517%" y="671.50"></text></g><g><title>mallocx (83 samples, 0.03%)</title><rect x="53.1166%" y="645" width="0.0343%" height="15" fill="rgb(243,22,42)" fg:x="128447" fg:w="83"/><text x="53.3666%" y="655.50"></text></g><g><title>imalloc (83 samples, 0.03%)</title><rect x="53.1166%" y="629" width="0.0343%" height="15" fill="rgb(233,151,36)" fg:x="128447" fg:w="83"/><text x="53.3666%" y="639.50"></text></g><g><title>tsd_fetch (65 samples, 0.03%)</title><rect x="53.1240%" y="613" width="0.0269%" height="15" fill="rgb(237,57,45)" fg:x="128465" fg:w="65"/><text x="53.3740%" y="623.50"></text></g><g><title>tsd_fetch_impl (65 samples, 0.03%)</title><rect x="53.1240%" y="597" width="0.0269%" height="15" fill="rgb(221,88,17)" fg:x="128465" fg:w="65"/><text x="53.3740%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (44 samples, 0.02%)</title><rect x="53.1509%" y="725" width="0.0182%" height="15" fill="rgb(230,79,15)" fg:x="128530" fg:w="44"/><text x="53.4009%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (44 samples, 0.02%)</title><rect x="53.1509%" y="709" width="0.0182%" height="15" fill="rgb(213,57,13)" fg:x="128530" fg:w="44"/><text x="53.4009%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (44 samples, 0.02%)</title><rect x="53.1509%" y="693" width="0.0182%" height="15" fill="rgb(222,116,39)" fg:x="128530" fg:w="44"/><text x="53.4009%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 0.01%)</title><rect x="53.1571%" y="677" width="0.0120%" height="15" fill="rgb(245,107,2)" fg:x="128545" fg:w="29"/><text x="53.4071%" y="687.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (300 samples, 0.12%)</title><rect x="53.1691%" y="725" width="0.1241%" height="15" fill="rgb(238,1,10)" fg:x="128574" fg:w="300"/><text x="53.4191%" y="735.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (76 samples, 0.03%)</title><rect x="53.2617%" y="709" width="0.0314%" height="15" fill="rgb(249,4,48)" fg:x="128798" fg:w="76"/><text x="53.5117%" y="719.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (76 samples, 0.03%)</title><rect x="53.2617%" y="693" width="0.0314%" height="15" fill="rgb(223,151,18)" fg:x="128798" fg:w="76"/><text x="53.5117%" y="703.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (76 samples, 0.03%)</title><rect x="53.2617%" y="677" width="0.0314%" height="15" fill="rgb(227,65,43)" fg:x="128798" fg:w="76"/><text x="53.5117%" y="687.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (791 samples, 0.33%)</title><rect x="52.9706%" y="741" width="0.3271%" height="15" fill="rgb(218,40,45)" fg:x="128094" fg:w="791"/><text x="53.2206%" y="751.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (1,319 samples, 0.55%)</title><rect x="52.7589%" y="773" width="0.5454%" height="15" fill="rgb(252,121,31)" fg:x="127582" fg:w="1319"/><text x="53.0089%" y="783.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (1,308 samples, 0.54%)</title><rect x="52.7634%" y="757" width="0.5409%" height="15" fill="rgb(219,158,43)" fg:x="127593" fg:w="1308"/><text x="53.0134%" y="767.50"></text></g><g><title>__rust_alloc (89 samples, 0.04%)</title><rect x="53.3237%" y="661" width="0.0368%" height="15" fill="rgb(231,162,42)" fg:x="128948" fg:w="89"/><text x="53.5737%" y="671.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (89 samples, 0.04%)</title><rect x="53.3237%" y="645" width="0.0368%" height="15" fill="rgb(217,179,25)" fg:x="128948" fg:w="89"/><text x="53.5737%" y="655.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (477 samples, 0.20%)</title><rect x="53.3043%" y="757" width="0.1973%" height="15" fill="rgb(206,212,31)" fg:x="128901" fg:w="477"/><text x="53.5543%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (477 samples, 0.20%)</title><rect x="53.3043%" y="741" width="0.1973%" height="15" fill="rgb(235,144,12)" fg:x="128901" fg:w="477"/><text x="53.5543%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (477 samples, 0.20%)</title><rect x="53.3043%" y="725" width="0.1973%" height="15" fill="rgb(213,51,10)" fg:x="128901" fg:w="477"/><text x="53.5543%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (477 samples, 0.20%)</title><rect x="53.3043%" y="709" width="0.1973%" height="15" fill="rgb(231,145,14)" fg:x="128901" fg:w="477"/><text x="53.5543%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (477 samples, 0.20%)</title><rect x="53.3043%" y="693" width="0.1973%" height="15" fill="rgb(235,15,28)" fg:x="128901" fg:w="477"/><text x="53.5543%" y="703.50"></text></g><g><title>alloc::alloc::alloc (477 samples, 0.20%)</title><rect x="53.3043%" y="677" width="0.1973%" height="15" fill="rgb(237,206,10)" fg:x="128901" fg:w="477"/><text x="53.5543%" y="687.50"></text></g><g><title>mallocx (341 samples, 0.14%)</title><rect x="53.3605%" y="661" width="0.1410%" height="15" fill="rgb(236,227,27)" fg:x="129037" fg:w="341"/><text x="53.6105%" y="671.50"></text></g><g><title>imalloc (34 samples, 0.01%)</title><rect x="53.4875%" y="645" width="0.0141%" height="15" fill="rgb(246,83,35)" fg:x="129344" fg:w="34"/><text x="53.7375%" y="655.50"></text></g><g><title>imalloc_body (34 samples, 0.01%)</title><rect x="53.4875%" y="629" width="0.0141%" height="15" fill="rgb(220,136,24)" fg:x="129344" fg:w="34"/><text x="53.7375%" y="639.50"></text></g><g><title>imalloc_no_sample (34 samples, 0.01%)</title><rect x="53.4875%" y="613" width="0.0141%" height="15" fill="rgb(217,3,25)" fg:x="129344" fg:w="34"/><text x="53.7375%" y="623.50"></text></g><g><title>iallocztm (34 samples, 0.01%)</title><rect x="53.4875%" y="597" width="0.0141%" height="15" fill="rgb(239,24,14)" fg:x="129344" fg:w="34"/><text x="53.7375%" y="607.50"></text></g><g><title>arena_malloc (34 samples, 0.01%)</title><rect x="53.4875%" y="581" width="0.0141%" height="15" fill="rgb(244,16,53)" fg:x="129344" fg:w="34"/><text x="53.7375%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (147 samples, 0.06%)</title><rect x="53.5016%" y="693" width="0.0608%" height="15" fill="rgb(208,175,44)" fg:x="129378" fg:w="147"/><text x="53.7516%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (147 samples, 0.06%)</title><rect x="53.5016%" y="677" width="0.0608%" height="15" fill="rgb(252,18,48)" fg:x="129378" fg:w="147"/><text x="53.7516%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (147 samples, 0.06%)</title><rect x="53.5016%" y="661" width="0.0608%" height="15" fill="rgb(234,199,32)" fg:x="129378" fg:w="147"/><text x="53.7516%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (147 samples, 0.06%)</title><rect x="53.5016%" y="645" width="0.0608%" height="15" fill="rgb(225,77,54)" fg:x="129378" fg:w="147"/><text x="53.7516%" y="655.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (147 samples, 0.06%)</title><rect x="53.5016%" y="629" width="0.0608%" height="15" fill="rgb(225,42,25)" fg:x="129378" fg:w="147"/><text x="53.7516%" y="639.50"></text></g><g><title>__rust_alloc (41 samples, 0.02%)</title><rect x="53.5623%" y="581" width="0.0170%" height="15" fill="rgb(242,227,46)" fg:x="129525" fg:w="41"/><text x="53.8123%" y="591.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (41 samples, 0.02%)</title><rect x="53.5623%" y="565" width="0.0170%" height="15" fill="rgb(246,197,35)" fg:x="129525" fg:w="41"/><text x="53.8123%" y="575.50"></text></g><g><title>jemallocator::layout_to_flags (41 samples, 0.02%)</title><rect x="53.5623%" y="549" width="0.0170%" height="15" fill="rgb(215,159,26)" fg:x="129525" fg:w="41"/><text x="53.8123%" y="559.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (671 samples, 0.28%)</title><rect x="53.3043%" y="773" width="0.2775%" height="15" fill="rgb(212,194,50)" fg:x="128901" fg:w="671"/><text x="53.5543%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (194 samples, 0.08%)</title><rect x="53.5016%" y="757" width="0.0802%" height="15" fill="rgb(246,132,1)" fg:x="129378" fg:w="194"/><text x="53.7516%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (194 samples, 0.08%)</title><rect x="53.5016%" y="741" width="0.0802%" height="15" fill="rgb(217,71,7)" fg:x="129378" fg:w="194"/><text x="53.7516%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (194 samples, 0.08%)</title><rect x="53.5016%" y="725" width="0.0802%" height="15" fill="rgb(252,59,32)" fg:x="129378" fg:w="194"/><text x="53.7516%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (194 samples, 0.08%)</title><rect x="53.5016%" y="709" width="0.0802%" height="15" fill="rgb(253,204,25)" fg:x="129378" fg:w="194"/><text x="53.7516%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (47 samples, 0.02%)</title><rect x="53.5623%" y="693" width="0.0194%" height="15" fill="rgb(232,21,16)" fg:x="129525" fg:w="47"/><text x="53.8123%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (47 samples, 0.02%)</title><rect x="53.5623%" y="677" width="0.0194%" height="15" fill="rgb(248,90,29)" fg:x="129525" fg:w="47"/><text x="53.8123%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (47 samples, 0.02%)</title><rect x="53.5623%" y="661" width="0.0194%" height="15" fill="rgb(249,223,7)" fg:x="129525" fg:w="47"/><text x="53.8123%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (47 samples, 0.02%)</title><rect x="53.5623%" y="645" width="0.0194%" height="15" fill="rgb(231,119,42)" fg:x="129525" fg:w="47"/><text x="53.8123%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47 samples, 0.02%)</title><rect x="53.5623%" y="629" width="0.0194%" height="15" fill="rgb(215,41,35)" fg:x="129525" fg:w="47"/><text x="53.8123%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (47 samples, 0.02%)</title><rect x="53.5623%" y="613" width="0.0194%" height="15" fill="rgb(220,44,45)" fg:x="129525" fg:w="47"/><text x="53.8123%" y="623.50"></text></g><g><title>alloc::alloc::alloc (47 samples, 0.02%)</title><rect x="53.5623%" y="597" width="0.0194%" height="15" fill="rgb(253,197,36)" fg:x="129525" fg:w="47"/><text x="53.8123%" y="607.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (270 samples, 0.11%)</title><rect x="53.5818%" y="773" width="0.1117%" height="15" fill="rgb(245,225,54)" fg:x="129572" fg:w="270"/><text x="53.8318%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (222 samples, 0.09%)</title><rect x="53.6016%" y="757" width="0.0918%" height="15" fill="rgb(239,94,37)" fg:x="129620" fg:w="222"/><text x="53.8516%" y="767.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (222 samples, 0.09%)</title><rect x="53.6016%" y="741" width="0.0918%" height="15" fill="rgb(242,217,10)" fg:x="129620" fg:w="222"/><text x="53.8516%" y="751.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (222 samples, 0.09%)</title><rect x="53.6016%" y="725" width="0.0918%" height="15" fill="rgb(250,193,7)" fg:x="129620" fg:w="222"/><text x="53.8516%" y="735.50"></text></g><g><title>core::cell::BorrowRefMut::new (222 samples, 0.09%)</title><rect x="53.6016%" y="709" width="0.0918%" height="15" fill="rgb(230,104,19)" fg:x="129620" fg:w="222"/><text x="53.8516%" y="719.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (6,931 samples, 2.87%)</title><rect x="50.9373%" y="789" width="2.8662%" height="15" fill="rgb(230,181,4)" fg:x="123177" fg:w="6931"/><text x="51.1873%" y="799.50">mo..</text></g><g><title>sdallocx (266 samples, 0.11%)</title><rect x="53.6934%" y="773" width="0.1100%" height="15" fill="rgb(216,219,49)" fg:x="129842" fg:w="266"/><text x="53.9434%" y="783.50"></text></g><g><title>isfree (266 samples, 0.11%)</title><rect x="53.6934%" y="757" width="0.1100%" height="15" fill="rgb(254,144,0)" fg:x="129842" fg:w="266"/><text x="53.9434%" y="767.50"></text></g><g><title>isdalloct (266 samples, 0.11%)</title><rect x="53.6934%" y="741" width="0.1100%" height="15" fill="rgb(205,209,38)" fg:x="129842" fg:w="266"/><text x="53.9434%" y="751.50"></text></g><g><title>arena_sdalloc (266 samples, 0.11%)</title><rect x="53.6934%" y="725" width="0.1100%" height="15" fill="rgb(240,21,42)" fg:x="129842" fg:w="266"/><text x="53.9434%" y="735.50"></text></g><g><title>tcache_dalloc_small (266 samples, 0.11%)</title><rect x="53.6934%" y="709" width="0.1100%" height="15" fill="rgb(241,132,3)" fg:x="129842" fg:w="266"/><text x="53.9434%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.02%)</title><rect x="53.8100%" y="613" width="0.0198%" height="15" fill="rgb(225,14,2)" fg:x="130124" fg:w="48"/><text x="54.0600%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (48 samples, 0.02%)</title><rect x="53.8100%" y="597" width="0.0198%" height="15" fill="rgb(210,141,35)" fg:x="130124" fg:w="48"/><text x="54.0600%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.02%)</title><rect x="53.8100%" y="581" width="0.0198%" height="15" fill="rgb(251,14,44)" fg:x="130124" fg:w="48"/><text x="54.0600%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.02%)</title><rect x="53.8100%" y="565" width="0.0198%" height="15" fill="rgb(247,48,18)" fg:x="130124" fg:w="48"/><text x="54.0600%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (48 samples, 0.02%)</title><rect x="53.8100%" y="549" width="0.0198%" height="15" fill="rgb(225,0,40)" fg:x="130124" fg:w="48"/><text x="54.0600%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (48 samples, 0.02%)</title><rect x="53.8100%" y="533" width="0.0198%" height="15" fill="rgb(221,31,33)" fg:x="130124" fg:w="48"/><text x="54.0600%" y="543.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (48 samples, 0.02%)</title><rect x="53.8100%" y="517" width="0.0198%" height="15" fill="rgb(237,42,40)" fg:x="130124" fg:w="48"/><text x="54.0600%" y="527.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (48 samples, 0.02%)</title><rect x="53.8100%" y="501" width="0.0198%" height="15" fill="rgb(233,51,29)" fg:x="130124" fg:w="48"/><text x="54.0600%" y="511.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (47 samples, 0.02%)</title><rect x="53.8105%" y="485" width="0.0194%" height="15" fill="rgb(226,58,20)" fg:x="130125" fg:w="47"/><text x="54.0605%" y="495.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (25 samples, 0.01%)</title><rect x="53.8196%" y="469" width="0.0103%" height="15" fill="rgb(208,98,7)" fg:x="130147" fg:w="25"/><text x="54.0696%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (73 samples, 0.03%)</title><rect x="53.8055%" y="645" width="0.0302%" height="15" fill="rgb(228,143,44)" fg:x="130113" fg:w="73"/><text x="54.0555%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (73 samples, 0.03%)</title><rect x="53.8055%" y="629" width="0.0302%" height="15" fill="rgb(246,55,38)" fg:x="130113" fg:w="73"/><text x="54.0555%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.01%)</title><rect x="53.8357%" y="645" width="0.0103%" height="15" fill="rgb(247,87,16)" fg:x="130186" fg:w="25"/><text x="54.0857%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (104 samples, 0.04%)</title><rect x="53.8034%" y="773" width="0.0430%" height="15" fill="rgb(234,129,42)" fg:x="130108" fg:w="104"/><text x="54.0534%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (104 samples, 0.04%)</title><rect x="53.8034%" y="757" width="0.0430%" height="15" fill="rgb(220,82,16)" fg:x="130108" fg:w="104"/><text x="54.0534%" y="767.50"></text></g><g><title>core::iter::adapters::try_process (104 samples, 0.04%)</title><rect x="53.8034%" y="741" width="0.0430%" height="15" fill="rgb(211,88,4)" fg:x="130108" fg:w="104"/><text x="54.0534%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (104 samples, 0.04%)</title><rect x="53.8034%" y="725" width="0.0430%" height="15" fill="rgb(248,151,21)" fg:x="130108" fg:w="104"/><text x="54.0534%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (104 samples, 0.04%)</title><rect x="53.8034%" y="709" width="0.0430%" height="15" fill="rgb(238,163,6)" fg:x="130108" fg:w="104"/><text x="54.0534%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (104 samples, 0.04%)</title><rect x="53.8034%" y="693" width="0.0430%" height="15" fill="rgb(209,183,11)" fg:x="130108" fg:w="104"/><text x="54.0534%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (99 samples, 0.04%)</title><rect x="53.8055%" y="677" width="0.0409%" height="15" fill="rgb(219,37,20)" fg:x="130113" fg:w="99"/><text x="54.0555%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (99 samples, 0.04%)</title><rect x="53.8055%" y="661" width="0.0409%" height="15" fill="rgb(210,158,4)" fg:x="130113" fg:w="99"/><text x="54.0555%" y="671.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (111 samples, 0.05%)</title><rect x="53.8034%" y="789" width="0.0459%" height="15" fill="rgb(221,167,53)" fg:x="130108" fg:w="111"/><text x="54.0534%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::last_n (48 samples, 0.02%)</title><rect x="53.8493%" y="789" width="0.0198%" height="15" fill="rgb(237,151,45)" fg:x="130219" fg:w="48"/><text x="54.0993%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::function_at (524 samples, 0.22%)</title><rect x="53.8700%" y="789" width="0.2167%" height="15" fill="rgb(231,39,3)" fg:x="130269" fg:w="524"/><text x="54.1200%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (524 samples, 0.22%)</title><rect x="53.8700%" y="773" width="0.2167%" height="15" fill="rgb(212,167,28)" fg:x="130269" fg:w="524"/><text x="54.1200%" y="783.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (524 samples, 0.22%)</title><rect x="53.8700%" y="757" width="0.2167%" height="15" fill="rgb(232,178,8)" fg:x="130269" fg:w="524"/><text x="54.1200%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (524 samples, 0.22%)</title><rect x="53.8700%" y="741" width="0.2167%" height="15" fill="rgb(225,151,20)" fg:x="130269" fg:w="524"/><text x="54.1200%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (524 samples, 0.22%)</title><rect x="53.8700%" y="725" width="0.2167%" height="15" fill="rgb(238,3,37)" fg:x="130269" fg:w="524"/><text x="54.1200%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (524 samples, 0.22%)</title><rect x="53.8700%" y="709" width="0.2167%" height="15" fill="rgb(251,147,42)" fg:x="130269" fg:w="524"/><text x="54.1200%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Resolver::function_from_handle (68 samples, 0.03%)</title><rect x="54.0867%" y="789" width="0.0281%" height="15" fill="rgb(208,173,10)" fg:x="130793" fg:w="68"/><text x="54.3367%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Resolver::function_from_instantiation (42 samples, 0.02%)</title><rect x="54.1148%" y="789" width="0.0174%" height="15" fill="rgb(246,225,4)" fg:x="130861" fg:w="42"/><text x="54.3648%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (453 samples, 0.19%)</title><rect x="54.1347%" y="773" width="0.1873%" height="15" fill="rgb(248,102,6)" fg:x="130909" fg:w="453"/><text x="54.3847%" y="783.50"></text></g><g><title>__rust_alloc (37 samples, 0.02%)</title><rect x="54.3398%" y="709" width="0.0153%" height="15" fill="rgb(232,6,21)" fg:x="131405" fg:w="37"/><text x="54.5898%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (193 samples, 0.08%)</title><rect x="54.3220%" y="725" width="0.0798%" height="15" fill="rgb(221,179,22)" fg:x="131362" fg:w="193"/><text x="54.5720%" y="735.50"></text></g><g><title>mallocx (113 samples, 0.05%)</title><rect x="54.3551%" y="709" width="0.0467%" height="15" fill="rgb(252,50,20)" fg:x="131442" fg:w="113"/><text x="54.6051%" y="719.50"></text></g><g><title>imalloc (113 samples, 0.05%)</title><rect x="54.3551%" y="693" width="0.0467%" height="15" fill="rgb(222,56,38)" fg:x="131442" fg:w="113"/><text x="54.6051%" y="703.50"></text></g><g><title>imalloc_body (113 samples, 0.05%)</title><rect x="54.3551%" y="677" width="0.0467%" height="15" fill="rgb(206,193,29)" fg:x="131442" fg:w="113"/><text x="54.6051%" y="687.50"></text></g><g><title>imalloc_no_sample (113 samples, 0.05%)</title><rect x="54.3551%" y="661" width="0.0467%" height="15" fill="rgb(239,192,45)" fg:x="131442" fg:w="113"/><text x="54.6051%" y="671.50"></text></g><g><title>iallocztm (113 samples, 0.05%)</title><rect x="54.3551%" y="645" width="0.0467%" height="15" fill="rgb(254,18,36)" fg:x="131442" fg:w="113"/><text x="54.6051%" y="655.50"></text></g><g><title>arena_malloc (113 samples, 0.05%)</title><rect x="54.3551%" y="629" width="0.0467%" height="15" fill="rgb(221,127,11)" fg:x="131442" fg:w="113"/><text x="54.6051%" y="639.50"></text></g><g><title>tcache_alloc_small (105 samples, 0.04%)</title><rect x="54.3584%" y="613" width="0.0434%" height="15" fill="rgb(234,146,35)" fg:x="131450" fg:w="105"/><text x="54.6084%" y="623.50"></text></g><g><title>cache_bin_alloc_easy (105 samples, 0.04%)</title><rect x="54.3584%" y="597" width="0.0434%" height="15" fill="rgb(254,201,37)" fg:x="131450" fg:w="105"/><text x="54.6084%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (248 samples, 0.10%)</title><rect x="54.3220%" y="773" width="0.1026%" height="15" fill="rgb(211,202,23)" fg:x="131362" fg:w="248"/><text x="54.5720%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (248 samples, 0.10%)</title><rect x="54.3220%" y="757" width="0.1026%" height="15" fill="rgb(237,91,2)" fg:x="131362" fg:w="248"/><text x="54.5720%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (248 samples, 0.10%)</title><rect x="54.3220%" y="741" width="0.1026%" height="15" fill="rgb(226,228,36)" fg:x="131362" fg:w="248"/><text x="54.5720%" y="751.50"></text></g><g><title>core::cmp::max (55 samples, 0.02%)</title><rect x="54.4018%" y="725" width="0.0227%" height="15" fill="rgb(213,63,50)" fg:x="131555" fg:w="55"/><text x="54.6518%" y="735.50"></text></g><g><title>core::cmp::Ord::max (55 samples, 0.02%)</title><rect x="54.4018%" y="709" width="0.0227%" height="15" fill="rgb(235,194,19)" fg:x="131555" fg:w="55"/><text x="54.6518%" y="719.50"></text></g><g><title>core::cmp::max_by (55 samples, 0.02%)</title><rect x="54.4018%" y="693" width="0.0227%" height="15" fill="rgb(207,204,18)" fg:x="131555" fg:w="55"/><text x="54.6518%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_function (1,219 samples, 0.50%)</title><rect x="54.1322%" y="789" width="0.5041%" height="15" fill="rgb(248,8,7)" fg:x="130903" fg:w="1219"/><text x="54.3822%" y="799.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (512 samples, 0.21%)</title><rect x="54.4246%" y="773" width="0.2117%" height="15" fill="rgb(223,145,47)" fg:x="131610" fg:w="512"/><text x="54.6746%" y="783.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (502 samples, 0.21%)</title><rect x="54.4287%" y="757" width="0.2076%" height="15" fill="rgb(228,84,11)" fg:x="131620" fg:w="502"/><text x="54.6787%" y="767.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (90 samples, 0.04%)</title><rect x="54.5991%" y="741" width="0.0372%" height="15" fill="rgb(218,76,45)" fg:x="132032" fg:w="90"/><text x="54.8491%" y="751.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (90 samples, 0.04%)</title><rect x="54.5991%" y="725" width="0.0372%" height="15" fill="rgb(223,80,15)" fg:x="132032" fg:w="90"/><text x="54.8491%" y="735.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (90 samples, 0.04%)</title><rect x="54.5991%" y="709" width="0.0372%" height="15" fill="rgb(219,218,33)" fg:x="132032" fg:w="90"/><text x="54.8491%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (66 samples, 0.03%)</title><rect x="54.6367%" y="757" width="0.0273%" height="15" fill="rgb(208,51,11)" fg:x="132123" fg:w="66"/><text x="54.8867%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (55 samples, 0.02%)</title><rect x="54.6412%" y="741" width="0.0227%" height="15" fill="rgb(229,165,39)" fg:x="132134" fg:w="55"/><text x="54.8912%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (54 samples, 0.02%)</title><rect x="54.6417%" y="725" width="0.0223%" height="15" fill="rgb(241,100,24)" fg:x="132135" fg:w="54"/><text x="54.8917%" y="735.50"></text></g><g><title>mallocx (25 samples, 0.01%)</title><rect x="54.6536%" y="709" width="0.0103%" height="15" fill="rgb(228,14,23)" fg:x="132164" fg:w="25"/><text x="54.9036%" y="719.50"></text></g><g><title>imalloc (25 samples, 0.01%)</title><rect x="54.6536%" y="693" width="0.0103%" height="15" fill="rgb(247,116,52)" fg:x="132164" fg:w="25"/><text x="54.9036%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (238 samples, 0.10%)</title><rect x="54.6363%" y="773" width="0.0984%" height="15" fill="rgb(216,149,33)" fg:x="132122" fg:w="238"/><text x="54.8863%" y="783.50"></text></g><g><title>core::ptr::write (171 samples, 0.07%)</title><rect x="54.6640%" y="757" width="0.0707%" height="15" fill="rgb(238,142,29)" fg:x="132189" fg:w="171"/><text x="54.9140%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (240 samples, 0.10%)</title><rect x="54.6363%" y="789" width="0.0992%" height="15" fill="rgb(224,83,40)" fg:x="132122" fg:w="240"/><text x="54.8863%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (96,088 samples, 39.74%)</title><rect x="15.1352%" y="821" width="39.7352%" height="15" fill="rgb(234,165,11)" fg:x="36600" fg:w="96088"/><text x="15.3852%" y="831.50">move_vm_runtime::interpreter::Interpreter::entrypoint</text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (96,088 samples, 39.74%)</title><rect x="15.1352%" y="805" width="39.7352%" height="15" fill="rgb(215,96,23)" fg:x="36600" fg:w="96088"/><text x="15.3852%" y="815.50">move_vm_runtime::interpreter::Interpreter::execute_main</text></g><g><title>sdallocx (304 samples, 0.13%)</title><rect x="54.7446%" y="789" width="0.1257%" height="15" fill="rgb(233,179,26)" fg:x="132384" fg:w="304"/><text x="54.9946%" y="799.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (47 samples, 0.02%)</title><rect x="54.8976%" y="405" width="0.0194%" height="15" fill="rgb(225,129,33)" fg:x="132754" fg:w="47"/><text x="55.1476%" y="415.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (32 samples, 0.01%)</title><rect x="54.9038%" y="389" width="0.0132%" height="15" fill="rgb(237,49,13)" fg:x="132769" fg:w="32"/><text x="55.1538%" y="399.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (50 samples, 0.02%)</title><rect x="54.8972%" y="437" width="0.0207%" height="15" fill="rgb(211,3,31)" fg:x="132753" fg:w="50"/><text x="55.1472%" y="447.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::VectorElementVisitor as serde::de::Visitor&gt;::visit_seq (49 samples, 0.02%)</title><rect x="54.8976%" y="421" width="0.0203%" height="15" fill="rgb(216,152,19)" fg:x="132754" fg:w="49"/><text x="55.1476%" y="431.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (105 samples, 0.04%)</title><rect x="54.8770%" y="501" width="0.0434%" height="15" fill="rgb(251,121,35)" fg:x="132704" fg:w="105"/><text x="55.1270%" y="511.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (78 samples, 0.03%)</title><rect x="54.8881%" y="485" width="0.0323%" height="15" fill="rgb(210,217,47)" fg:x="132731" fg:w="78"/><text x="55.1381%" y="495.50"></text></g><g><title>bcs::de::from_bytes_seed (78 samples, 0.03%)</title><rect x="54.8881%" y="469" width="0.0323%" height="15" fill="rgb(244,116,22)" fg:x="132731" fg:w="78"/><text x="55.1381%" y="479.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (56 samples, 0.02%)</title><rect x="54.8972%" y="453" width="0.0232%" height="15" fill="rgb(228,17,21)" fg:x="132753" fg:w="56"/><text x="55.1472%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (112 samples, 0.05%)</title><rect x="54.8761%" y="645" width="0.0463%" height="15" fill="rgb(240,149,34)" fg:x="132702" fg:w="112"/><text x="55.1261%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (112 samples, 0.05%)</title><rect x="54.8761%" y="629" width="0.0463%" height="15" fill="rgb(208,125,47)" fg:x="132702" fg:w="112"/><text x="55.1261%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (112 samples, 0.05%)</title><rect x="54.8761%" y="613" width="0.0463%" height="15" fill="rgb(249,186,39)" fg:x="132702" fg:w="112"/><text x="55.1261%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (112 samples, 0.05%)</title><rect x="54.8761%" y="597" width="0.0463%" height="15" fill="rgb(240,220,33)" fg:x="132702" fg:w="112"/><text x="55.1261%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (112 samples, 0.05%)</title><rect x="54.8761%" y="581" width="0.0463%" height="15" fill="rgb(243,110,23)" fg:x="132702" fg:w="112"/><text x="55.1261%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (112 samples, 0.05%)</title><rect x="54.8761%" y="565" width="0.0463%" height="15" fill="rgb(219,163,46)" fg:x="132702" fg:w="112"/><text x="55.1261%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (112 samples, 0.05%)</title><rect x="54.8761%" y="549" width="0.0463%" height="15" fill="rgb(216,126,30)" fg:x="132702" fg:w="112"/><text x="55.1261%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (112 samples, 0.05%)</title><rect x="54.8761%" y="533" width="0.0463%" height="15" fill="rgb(208,139,11)" fg:x="132702" fg:w="112"/><text x="55.1261%" y="543.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (112 samples, 0.05%)</title><rect x="54.8761%" y="517" width="0.0463%" height="15" fill="rgb(213,118,36)" fg:x="132702" fg:w="112"/><text x="55.1261%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (131 samples, 0.05%)</title><rect x="54.8724%" y="677" width="0.0542%" height="15" fill="rgb(226,43,17)" fg:x="132693" fg:w="131"/><text x="55.1224%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (131 samples, 0.05%)</title><rect x="54.8724%" y="661" width="0.0542%" height="15" fill="rgb(254,217,4)" fg:x="132693" fg:w="131"/><text x="55.1224%" y="671.50"></text></g><g><title>bcs::de::from_bytes_seed (59 samples, 0.02%)</title><rect x="54.9460%" y="501" width="0.0244%" height="15" fill="rgb(210,134,47)" fg:x="132871" fg:w="59"/><text x="55.1960%" y="511.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (59 samples, 0.02%)</title><rect x="54.9460%" y="485" width="0.0244%" height="15" fill="rgb(237,24,49)" fg:x="132871" fg:w="59"/><text x="55.1960%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (30 samples, 0.01%)</title><rect x="54.9580%" y="469" width="0.0124%" height="15" fill="rgb(251,39,46)" fg:x="132900" fg:w="30"/><text x="55.2080%" y="479.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (29 samples, 0.01%)</title><rect x="54.9584%" y="453" width="0.0120%" height="15" fill="rgb(251,220,3)" fg:x="132901" fg:w="29"/><text x="55.2084%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (29 samples, 0.01%)</title><rect x="54.9584%" y="437" width="0.0120%" height="15" fill="rgb(228,105,12)" fg:x="132901" fg:w="29"/><text x="55.2084%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (111 samples, 0.05%)</title><rect x="54.9266%" y="581" width="0.0459%" height="15" fill="rgb(215,196,1)" fg:x="132824" fg:w="111"/><text x="55.1766%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (111 samples, 0.05%)</title><rect x="54.9266%" y="565" width="0.0459%" height="15" fill="rgb(214,33,39)" fg:x="132824" fg:w="111"/><text x="55.1766%" y="575.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (111 samples, 0.05%)</title><rect x="54.9266%" y="549" width="0.0459%" height="15" fill="rgb(220,19,52)" fg:x="132824" fg:w="111"/><text x="55.1766%" y="559.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (109 samples, 0.05%)</title><rect x="54.9274%" y="533" width="0.0451%" height="15" fill="rgb(221,78,38)" fg:x="132826" fg:w="109"/><text x="55.1774%" y="543.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (64 samples, 0.03%)</title><rect x="54.9460%" y="517" width="0.0265%" height="15" fill="rgb(253,30,16)" fg:x="132871" fg:w="64"/><text x="55.1960%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (128 samples, 0.05%)</title><rect x="54.9266%" y="677" width="0.0529%" height="15" fill="rgb(242,65,0)" fg:x="132824" fg:w="128"/><text x="55.1766%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (128 samples, 0.05%)</title><rect x="54.9266%" y="661" width="0.0529%" height="15" fill="rgb(235,201,12)" fg:x="132824" fg:w="128"/><text x="55.1766%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (128 samples, 0.05%)</title><rect x="54.9266%" y="645" width="0.0529%" height="15" fill="rgb(233,161,9)" fg:x="132824" fg:w="128"/><text x="55.1766%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (128 samples, 0.05%)</title><rect x="54.9266%" y="629" width="0.0529%" height="15" fill="rgb(241,207,41)" fg:x="132824" fg:w="128"/><text x="55.1766%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (128 samples, 0.05%)</title><rect x="54.9266%" y="613" width="0.0529%" height="15" fill="rgb(212,69,46)" fg:x="132824" fg:w="128"/><text x="55.1766%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (128 samples, 0.05%)</title><rect x="54.9266%" y="597" width="0.0529%" height="15" fill="rgb(239,69,45)" fg:x="132824" fg:w="128"/><text x="55.1766%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (267 samples, 0.11%)</title><rect x="54.8703%" y="805" width="0.1104%" height="15" fill="rgb(242,117,48)" fg:x="132688" fg:w="267"/><text x="55.1203%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (267 samples, 0.11%)</title><rect x="54.8703%" y="789" width="0.1104%" height="15" fill="rgb(228,41,36)" fg:x="132688" fg:w="267"/><text x="55.1203%" y="799.50"></text></g><g><title>core::iter::adapters::try_process (267 samples, 0.11%)</title><rect x="54.8703%" y="773" width="0.1104%" height="15" fill="rgb(212,3,32)" fg:x="132688" fg:w="267"/><text x="55.1203%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (263 samples, 0.11%)</title><rect x="54.8720%" y="757" width="0.1088%" height="15" fill="rgb(233,41,49)" fg:x="132692" fg:w="263"/><text x="55.1220%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (263 samples, 0.11%)</title><rect x="54.8720%" y="741" width="0.1088%" height="15" fill="rgb(252,170,49)" fg:x="132692" fg:w="263"/><text x="55.1220%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (263 samples, 0.11%)</title><rect x="54.8720%" y="725" width="0.1088%" height="15" fill="rgb(229,53,26)" fg:x="132692" fg:w="263"/><text x="55.1220%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (263 samples, 0.11%)</title><rect x="54.8720%" y="709" width="0.1088%" height="15" fill="rgb(217,157,12)" fg:x="132692" fg:w="263"/><text x="55.1220%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (263 samples, 0.11%)</title><rect x="54.8720%" y="693" width="0.1088%" height="15" fill="rgb(227,17,9)" fg:x="132692" fg:w="263"/><text x="55.1220%" y="703.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args (286 samples, 0.12%)</title><rect x="54.8703%" y="821" width="0.1183%" height="15" fill="rgb(218,84,12)" fg:x="132688" fg:w="286"/><text x="55.1203%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (40 samples, 0.02%)</title><rect x="55.0159%" y="549" width="0.0165%" height="15" fill="rgb(212,79,24)" fg:x="133040" fg:w="40"/><text x="55.2659%" y="559.50"></text></g><g><title>bcs::ser::to_bytes (39 samples, 0.02%)</title><rect x="55.0163%" y="533" width="0.0161%" height="15" fill="rgb(217,222,37)" fg:x="133041" fg:w="39"/><text x="55.2663%" y="543.50"></text></g><g><title>bcs::ser::serialize_into (39 samples, 0.02%)</title><rect x="55.0163%" y="517" width="0.0161%" height="15" fill="rgb(246,208,8)" fg:x="133041" fg:w="39"/><text x="55.2663%" y="527.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (39 samples, 0.02%)</title><rect x="55.0163%" y="501" width="0.0161%" height="15" fill="rgb(244,133,10)" fg:x="133041" fg:w="39"/><text x="55.2663%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (28 samples, 0.01%)</title><rect x="55.0209%" y="485" width="0.0116%" height="15" fill="rgb(209,219,41)" fg:x="133052" fg:w="28"/><text x="55.2709%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (28 samples, 0.01%)</title><rect x="55.0209%" y="469" width="0.0116%" height="15" fill="rgb(253,175,45)" fg:x="133052" fg:w="28"/><text x="55.2709%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.03%)</title><rect x="55.0006%" y="677" width="0.0327%" height="15" fill="rgb(235,100,37)" fg:x="133003" fg:w="79"/><text x="55.2506%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (79 samples, 0.03%)</title><rect x="55.0006%" y="661" width="0.0327%" height="15" fill="rgb(225,87,19)" fg:x="133003" fg:w="79"/><text x="55.2506%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (79 samples, 0.03%)</title><rect x="55.0006%" y="645" width="0.0327%" height="15" fill="rgb(217,152,17)" fg:x="133003" fg:w="79"/><text x="55.2506%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (79 samples, 0.03%)</title><rect x="55.0006%" y="629" width="0.0327%" height="15" fill="rgb(235,72,13)" fg:x="133003" fg:w="79"/><text x="55.2506%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (79 samples, 0.03%)</title><rect x="55.0006%" y="613" width="0.0327%" height="15" fill="rgb(233,140,18)" fg:x="133003" fg:w="79"/><text x="55.2506%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (79 samples, 0.03%)</title><rect x="55.0006%" y="597" width="0.0327%" height="15" fill="rgb(207,212,28)" fg:x="133003" fg:w="79"/><text x="55.2506%" y="607.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values::{{closure}} (79 samples, 0.03%)</title><rect x="55.0006%" y="581" width="0.0327%" height="15" fill="rgb(220,130,25)" fg:x="133003" fg:w="79"/><text x="55.2506%" y="591.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_value (75 samples, 0.03%)</title><rect x="55.0023%" y="565" width="0.0310%" height="15" fill="rgb(205,55,34)" fg:x="133007" fg:w="75"/><text x="55.2523%" y="575.50"></text></g><g><title>aptos_block_executor::aptos_vm::CrossSpaceHandler&lt;S&gt;::cross_space_call (97,612 samples, 40.37%)</title><rect x="14.6699%" y="885" width="40.3654%" height="15" fill="rgb(237,54,35)" fg:x="35475" fg:w="97612"/><text x="14.9199%" y="895.50">aptos_block_executor::aptos_vm::CrossSpaceHandler&lt;S&gt;::cross_space_..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (97,268 samples, 40.22%)</title><rect x="14.8122%" y="869" width="40.2231%" height="15" fill="rgb(208,67,23)" fg:x="35819" fg:w="97268"/><text x="15.0622%" y="879.50">move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visi..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (97,268 samples, 40.22%)</title><rect x="14.8122%" y="853" width="40.2231%" height="15" fill="rgb(206,207,50)" fg:x="35819" fg:w="97268"/><text x="15.0622%" y="863.50">move_vm_runtime::runtime::VMRuntime::execute_function</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (96,644 samples, 39.97%)</title><rect x="15.0702%" y="837" width="39.9651%" height="15" fill="rgb(213,211,42)" fg:x="36443" fg:w="96644"/><text x="15.3202%" y="847.50">move_vm_runtime::runtime::VMRuntime::execute_function_impl</text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (113 samples, 0.05%)</title><rect x="54.9886%" y="821" width="0.0467%" height="15" fill="rgb(252,197,50)" fg:x="132974" fg:w="113"/><text x="55.2386%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (110 samples, 0.05%)</title><rect x="54.9898%" y="805" width="0.0455%" height="15" fill="rgb(251,211,41)" fg:x="132977" fg:w="110"/><text x="55.2398%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (110 samples, 0.05%)</title><rect x="54.9898%" y="789" width="0.0455%" height="15" fill="rgb(229,211,5)" fg:x="132977" fg:w="110"/><text x="55.2398%" y="799.50"></text></g><g><title>core::iter::adapters::try_process (110 samples, 0.05%)</title><rect x="54.9898%" y="773" width="0.0455%" height="15" fill="rgb(239,36,31)" fg:x="132977" fg:w="110"/><text x="55.2398%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (110 samples, 0.05%)</title><rect x="54.9898%" y="757" width="0.0455%" height="15" fill="rgb(248,67,31)" fg:x="132977" fg:w="110"/><text x="55.2398%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (110 samples, 0.05%)</title><rect x="54.9898%" y="741" width="0.0455%" height="15" fill="rgb(249,55,44)" fg:x="132977" fg:w="110"/><text x="55.2398%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (110 samples, 0.05%)</title><rect x="54.9898%" y="725" width="0.0455%" height="15" fill="rgb(216,82,12)" fg:x="132977" fg:w="110"/><text x="55.2398%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (110 samples, 0.05%)</title><rect x="54.9898%" y="709" width="0.0455%" height="15" fill="rgb(242,174,1)" fg:x="132977" fg:w="110"/><text x="55.2398%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (105 samples, 0.04%)</title><rect x="54.9919%" y="693" width="0.0434%" height="15" fill="rgb(208,120,29)" fg:x="132982" fg:w="105"/><text x="55.2419%" y="703.50"></text></g><g><title>&lt;&amp;mut dyn cfx_state::state_trait::CallMoveVMTrait as cfx_state::state_trait::CallMoveVMTrait&gt;::call_move_vm (97,643 samples, 40.38%)</title><rect x="14.6596%" y="917" width="40.3782%" height="15" fill="rgb(221,105,43)" fg:x="35450" fg:w="97643"/><text x="14.9096%" y="927.50">&lt;&amp;mut dyn cfx_state::state_trait::CallMoveVMTrait as cfx_state::st..</text></g><g><title>&lt;aptos_block_executor::aptos_vm::CrossSpaceHandler&lt;S&gt; as cfx_state::state_trait::CallMoveVMTrait&gt;::call_move_vm (97,634 samples, 40.37%)</title><rect x="14.6633%" y="901" width="40.3745%" height="15" fill="rgb(234,124,22)" fg:x="35459" fg:w="97634"/><text x="14.9133%" y="911.50">&lt;aptos_block_executor::aptos_vm::CrossSpaceHandler&lt;S&gt; as cfx_state..</text></g><g><title>alloc::fmt::format (62 samples, 0.03%)</title><rect x="55.0482%" y="917" width="0.0256%" height="15" fill="rgb(212,23,30)" fg:x="133118" fg:w="62"/><text x="55.2982%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (62 samples, 0.03%)</title><rect x="55.0482%" y="901" width="0.0256%" height="15" fill="rgb(219,122,53)" fg:x="133118" fg:w="62"/><text x="55.2982%" y="911.50"></text></g><g><title>alloc::fmt::format::{{closure}} (62 samples, 0.03%)</title><rect x="55.0482%" y="885" width="0.0256%" height="15" fill="rgb(248,84,24)" fg:x="133118" fg:w="62"/><text x="55.2982%" y="895.50"></text></g><g><title>alloc::fmt::format::format_inner (62 samples, 0.03%)</title><rect x="55.0482%" y="869" width="0.0256%" height="15" fill="rgb(245,115,18)" fg:x="133118" fg:w="62"/><text x="55.2982%" y="879.50"></text></g><g><title>core::fmt::Write::write_fmt (54 samples, 0.02%)</title><rect x="55.0515%" y="853" width="0.0223%" height="15" fill="rgb(227,176,51)" fg:x="133126" fg:w="54"/><text x="55.3015%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (54 samples, 0.02%)</title><rect x="55.0515%" y="837" width="0.0223%" height="15" fill="rgb(229,63,42)" fg:x="133126" fg:w="54"/><text x="55.3015%" y="847.50"></text></g><g><title>core::fmt::write (54 samples, 0.02%)</title><rect x="55.0515%" y="821" width="0.0223%" height="15" fill="rgb(247,202,24)" fg:x="133126" fg:w="54"/><text x="55.3015%" y="831.50"></text></g><g><title>core::fmt::rt::Argument::fmt (25 samples, 0.01%)</title><rect x="55.0635%" y="805" width="0.0103%" height="15" fill="rgb(244,173,20)" fg:x="133155" fg:w="25"/><text x="55.3135%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (25 samples, 0.01%)</title><rect x="55.0825%" y="597" width="0.0103%" height="15" fill="rgb(242,81,47)" fg:x="133201" fg:w="25"/><text x="55.3325%" y="607.50"></text></g><g><title>serde::de::EnumAccess::variant (33 samples, 0.01%)</title><rect x="55.0825%" y="629" width="0.0136%" height="15" fill="rgb(231,185,54)" fg:x="133201" fg:w="33"/><text x="55.3325%" y="639.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::EnumAccess&gt;::variant_seed (33 samples, 0.01%)</title><rect x="55.0825%" y="613" width="0.0136%" height="15" fill="rgb(243,55,32)" fg:x="133201" fg:w="33"/><text x="55.3325%" y="623.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (107 samples, 0.04%)</title><rect x="55.0982%" y="421" width="0.0442%" height="15" fill="rgb(208,167,19)" fg:x="133239" fg:w="107"/><text x="55.3482%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (97 samples, 0.04%)</title><rect x="55.1023%" y="405" width="0.0401%" height="15" fill="rgb(231,72,35)" fg:x="133249" fg:w="97"/><text x="55.3523%" y="415.50"></text></g><g><title> 32]&gt;::deserialize (97 samples, 0.04%)</title><rect x="55.1023%" y="389" width="0.0401%" height="15" fill="rgb(250,173,51)" fg:x="133249" fg:w="97"/><text x="55.3523%" y="399.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (97 samples, 0.04%)</title><rect x="55.1023%" y="373" width="0.0401%" height="15" fill="rgb(209,5,22)" fg:x="133249" fg:w="97"/><text x="55.3523%" y="383.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (97 samples, 0.04%)</title><rect x="55.1023%" y="357" width="0.0401%" height="15" fill="rgb(250,174,19)" fg:x="133249" fg:w="97"/><text x="55.3523%" y="367.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (97 samples, 0.04%)</title><rect x="55.1023%" y="341" width="0.0401%" height="15" fill="rgb(217,3,49)" fg:x="133249" fg:w="97"/><text x="55.3523%" y="351.50"></text></g><g><title>serde::de::SeqAccess::next_element (68 samples, 0.03%)</title><rect x="55.1143%" y="325" width="0.0281%" height="15" fill="rgb(218,225,5)" fg:x="133278" fg:w="68"/><text x="55.3643%" y="335.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (46 samples, 0.02%)</title><rect x="55.1234%" y="309" width="0.0190%" height="15" fill="rgb(236,89,11)" fg:x="133300" fg:w="46"/><text x="55.3734%" y="319.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (46 samples, 0.02%)</title><rect x="55.1234%" y="293" width="0.0190%" height="15" fill="rgb(206,33,28)" fg:x="133300" fg:w="46"/><text x="55.3734%" y="303.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (46 samples, 0.02%)</title><rect x="55.1234%" y="277" width="0.0190%" height="15" fill="rgb(241,56,42)" fg:x="133300" fg:w="46"/><text x="55.3734%" y="287.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (46 samples, 0.02%)</title><rect x="55.1234%" y="261" width="0.0190%" height="15" fill="rgb(222,44,11)" fg:x="133300" fg:w="46"/><text x="55.3734%" y="271.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (36 samples, 0.01%)</title><rect x="55.1276%" y="245" width="0.0149%" height="15" fill="rgb(234,111,20)" fg:x="133310" fg:w="36"/><text x="55.3776%" y="255.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (110 samples, 0.05%)</title><rect x="55.0982%" y="469" width="0.0455%" height="15" fill="rgb(237,77,6)" fg:x="133239" fg:w="110"/><text x="55.3482%" y="479.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (110 samples, 0.05%)</title><rect x="55.0982%" y="453" width="0.0455%" height="15" fill="rgb(235,111,23)" fg:x="133239" fg:w="110"/><text x="55.3482%" y="463.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (110 samples, 0.05%)</title><rect x="55.0982%" y="437" width="0.0455%" height="15" fill="rgb(251,135,29)" fg:x="133239" fg:w="110"/><text x="55.3482%" y="447.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::de::Deserialize for move_core_types::identifier::Identifier&gt;::deserialize (33 samples, 0.01%)</title><rect x="55.1437%" y="469" width="0.0136%" height="15" fill="rgb(217,57,1)" fg:x="133349" fg:w="33"/><text x="55.3937%" y="479.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (33 samples, 0.01%)</title><rect x="55.1437%" y="453" width="0.0136%" height="15" fill="rgb(249,119,31)" fg:x="133349" fg:w="33"/><text x="55.3937%" y="463.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (186 samples, 0.08%)</title><rect x="55.0825%" y="645" width="0.0769%" height="15" fill="rgb(233,164,33)" fg:x="133201" fg:w="186"/><text x="55.3325%" y="655.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (153 samples, 0.06%)</title><rect x="55.0961%" y="629" width="0.0633%" height="15" fill="rgb(250,217,43)" fg:x="133234" fg:w="153"/><text x="55.3461%" y="639.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::VariantAccess&gt;::newtype_variant_seed (153 samples, 0.06%)</title><rect x="55.0961%" y="613" width="0.0633%" height="15" fill="rgb(232,154,50)" fg:x="133234" fg:w="153"/><text x="55.3461%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (153 samples, 0.06%)</title><rect x="55.0961%" y="597" width="0.0633%" height="15" fill="rgb(227,190,8)" fg:x="133234" fg:w="153"/><text x="55.3461%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;T&gt;&gt;::deserialize (153 samples, 0.06%)</title><rect x="55.0961%" y="581" width="0.0633%" height="15" fill="rgb(209,217,32)" fg:x="133234" fg:w="153"/><text x="55.3461%" y="591.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize (148 samples, 0.06%)</title><rect x="55.0982%" y="565" width="0.0612%" height="15" fill="rgb(243,203,50)" fg:x="133239" fg:w="148"/><text x="55.3482%" y="575.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (148 samples, 0.06%)</title><rect x="55.0982%" y="549" width="0.0612%" height="15" fill="rgb(232,152,27)" fg:x="133239" fg:w="148"/><text x="55.3482%" y="559.50"></text></g><g><title>&lt;move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::StructTag&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (148 samples, 0.06%)</title><rect x="55.0982%" y="533" width="0.0612%" height="15" fill="rgb(240,34,29)" fg:x="133239" fg:w="148"/><text x="55.3482%" y="543.50"></text></g><g><title>serde::de::SeqAccess::next_element (148 samples, 0.06%)</title><rect x="55.0982%" y="517" width="0.0612%" height="15" fill="rgb(215,185,52)" fg:x="133239" fg:w="148"/><text x="55.3482%" y="527.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (148 samples, 0.06%)</title><rect x="55.0982%" y="501" width="0.0612%" height="15" fill="rgb(240,89,49)" fg:x="133239" fg:w="148"/><text x="55.3482%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (148 samples, 0.06%)</title><rect x="55.0982%" y="485" width="0.0612%" height="15" fill="rgb(225,12,52)" fg:x="133239" fg:w="148"/><text x="55.3482%" y="495.50"></text></g><g><title>bcs::de::from_bytes (198 samples, 0.08%)</title><rect x="55.0792%" y="693" width="0.0819%" height="15" fill="rgb(239,128,45)" fg:x="133193" fg:w="198"/><text x="55.3292%" y="703.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::de::Deserialize for move_core_types::language_storage::TypeTag&gt;::deserialize (198 samples, 0.08%)</title><rect x="55.0792%" y="677" width="0.0819%" height="15" fill="rgb(211,78,47)" fg:x="133193" fg:w="198"/><text x="55.3292%" y="687.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_enum (198 samples, 0.08%)</title><rect x="55.0792%" y="661" width="0.0819%" height="15" fill="rgb(232,31,21)" fg:x="133193" fg:w="198"/><text x="55.3292%" y="671.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (209 samples, 0.09%)</title><rect x="55.0771%" y="789" width="0.0864%" height="15" fill="rgb(222,168,14)" fg:x="133188" fg:w="209"/><text x="55.3271%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (209 samples, 0.09%)</title><rect x="55.0771%" y="773" width="0.0864%" height="15" fill="rgb(209,128,24)" fg:x="133188" fg:w="209"/><text x="55.3271%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (209 samples, 0.09%)</title><rect x="55.0771%" y="757" width="0.0864%" height="15" fill="rgb(249,35,13)" fg:x="133188" fg:w="209"/><text x="55.3271%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (209 samples, 0.09%)</title><rect x="55.0771%" y="741" width="0.0864%" height="15" fill="rgb(218,7,2)" fg:x="133188" fg:w="209"/><text x="55.3271%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (204 samples, 0.08%)</title><rect x="55.0792%" y="725" width="0.0844%" height="15" fill="rgb(238,107,27)" fg:x="133193" fg:w="204"/><text x="55.3292%" y="735.50"></text></g><g><title>&lt;cfx_evm::internal_contract::contracts::cross_space::CallToMove as cfx_evm::internal_contract::components::function::SimpleExecutionTrait&gt;::execute_inner::{{closure}}::{{closure}} (204 samples, 0.08%)</title><rect x="55.0792%" y="709" width="0.0844%" height="15" fill="rgb(217,88,38)" fg:x="133193" fg:w="204"/><text x="55.3292%" y="719.50"></text></g><g><title>&lt;cfx_evm::internal_contract::contracts::cross_space::CallToMove as cfx_evm::internal_contract::components::function::SimpleExecutionTrait&gt;::execute_inner::{{closure}} (97,956 samples, 40.51%)</title><rect x="14.6596%" y="933" width="40.5076%" height="15" fill="rgb(230,207,0)" fg:x="35450" fg:w="97956"/><text x="14.9096%" y="943.50">&lt;cfx_evm::internal_contract::contracts::cross_space::CallToMove as..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (218 samples, 0.09%)</title><rect x="55.0771%" y="917" width="0.0901%" height="15" fill="rgb(249,64,54)" fg:x="133188" fg:w="218"/><text x="55.3271%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (218 samples, 0.09%)</title><rect x="55.0771%" y="901" width="0.0901%" height="15" fill="rgb(231,7,11)" fg:x="133188" fg:w="218"/><text x="55.3271%" y="911.50"></text></g><g><title>core::iter::adapters::try_process (218 samples, 0.09%)</title><rect x="55.0771%" y="885" width="0.0901%" height="15" fill="rgb(205,149,21)" fg:x="133188" fg:w="218"/><text x="55.3271%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (218 samples, 0.09%)</title><rect x="55.0771%" y="869" width="0.0901%" height="15" fill="rgb(215,126,34)" fg:x="133188" fg:w="218"/><text x="55.3271%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (218 samples, 0.09%)</title><rect x="55.0771%" y="853" width="0.0901%" height="15" fill="rgb(241,132,45)" fg:x="133188" fg:w="218"/><text x="55.3271%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (218 samples, 0.09%)</title><rect x="55.0771%" y="837" width="0.0901%" height="15" fill="rgb(252,69,32)" fg:x="133188" fg:w="218"/><text x="55.3271%" y="847.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (218 samples, 0.09%)</title><rect x="55.0771%" y="821" width="0.0901%" height="15" fill="rgb(232,204,19)" fg:x="133188" fg:w="218"/><text x="55.3271%" y="831.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (218 samples, 0.09%)</title><rect x="55.0771%" y="805" width="0.0901%" height="15" fill="rgb(249,15,47)" fg:x="133188" fg:w="218"/><text x="55.3271%" y="815.50"></text></g><g><title>&lt;cfx_evm::internal_contract::contracts::cross_space::CallToMove as cfx_evm::internal_contract::components::function::SimpleExecutionTrait&gt;::execute_inner (97,993 samples, 40.52%)</title><rect x="14.6489%" y="949" width="40.5229%" height="15" fill="rgb(209,227,23)" fg:x="35424" fg:w="97993"/><text x="14.8989%" y="959.50">&lt;cfx_evm::internal_contract::contracts::cross_space::CallToMove as..</text></g><g><title>&lt;cfx_evm::internal_contract::contracts::cross_space::EncodeBytes32 as cfx_evm::internal_contract::components::function::SimpleExecutionTrait&gt;::execute_inner (25 samples, 0.01%)</title><rect x="55.1743%" y="949" width="0.0103%" height="15" fill="rgb(248,92,24)" fg:x="133423" fg:w="25"/><text x="55.4243%" y="959.50"></text></g><g><title>bcs::ser::to_bytes (25 samples, 0.01%)</title><rect x="55.1743%" y="933" width="0.0103%" height="15" fill="rgb(247,59,2)" fg:x="133423" fg:w="25"/><text x="55.4243%" y="943.50"></text></g><g><title>&lt;T as cfx_evm::internal_contract::components::function::ExecutionTrait&gt;::execute_inner (98,025 samples, 40.54%)</title><rect x="14.6489%" y="965" width="40.5362%" height="15" fill="rgb(221,30,5)" fg:x="35424" fg:w="98025"/><text x="14.8989%" y="975.50">&lt;T as cfx_evm::internal_contract::components::function::ExecutionT..</text></g><g><title>solidity_abi::array::&lt;impl solidity_abi::ABIVariable for alloc::vec::Vec&lt;T&gt;&gt;::from_abi (59 samples, 0.02%)</title><rect x="55.2111%" y="917" width="0.0244%" height="15" fill="rgb(208,108,53)" fg:x="133512" fg:w="59"/><text x="55.4611%" y="927.50"></text></g><g><title>solidity_abi::utils::read_abi_list (30 samples, 0.01%)</title><rect x="55.2231%" y="901" width="0.0124%" height="15" fill="rgb(211,183,26)" fg:x="133541" fg:w="30"/><text x="55.4731%" y="911.50"></text></g><g><title>core::str::converts::from_utf8 (26 samples, 0.01%)</title><rect x="55.2529%" y="901" width="0.0108%" height="15" fill="rgb(232,132,4)" fg:x="133613" fg:w="26"/><text x="55.5029%" y="911.50"></text></g><g><title>core::str::validations::run_utf8_validation (26 samples, 0.01%)</title><rect x="55.2529%" y="885" width="0.0108%" height="15" fill="rgb(253,128,37)" fg:x="133613" fg:w="26"/><text x="55.5029%" y="895.50"></text></g><g><title>&lt;(A,B,C,D,E) as solidity_abi::ABIDecodable&gt;::abi_decode (182 samples, 0.08%)</title><rect x="55.1954%" y="949" width="0.0753%" height="15" fill="rgb(221,58,24)" fg:x="133474" fg:w="182"/><text x="55.4454%" y="959.50"></text></g><g><title>solidity_abi::utils::read_abi_list (178 samples, 0.07%)</title><rect x="55.1970%" y="933" width="0.0736%" height="15" fill="rgb(230,54,45)" fg:x="133478" fg:w="178"/><text x="55.4470%" y="943.50"></text></g><g><title>solidity_abi::string::&lt;impl solidity_abi::ABIVariable for alloc::string::String&gt;::from_abi (85 samples, 0.04%)</title><rect x="55.2355%" y="917" width="0.0351%" height="15" fill="rgb(254,21,18)" fg:x="133571" fg:w="85"/><text x="55.4855%" y="927.50"></text></g><g><title>cfx_evm::internal_contract::components::function::preprocessing (218 samples, 0.09%)</title><rect x="55.1904%" y="965" width="0.0901%" height="15" fill="rgb(221,108,0)" fg:x="133462" fg:w="218"/><text x="55.4404%" y="975.50"></text></g><g><title>solidity_abi::bytes::&lt;impl solidity_abi::ABIVariable for alloc::vec::Vec&lt;u8&gt;&gt;::to_abi (57 samples, 0.02%)</title><rect x="55.3112%" y="901" width="0.0236%" height="15" fill="rgb(206,95,1)" fg:x="133754" fg:w="57"/><text x="55.5612%" y="911.50"></text></g><g><title>solidity_abi::utils::ABIListWriter::write_down (113 samples, 0.05%)</title><rect x="55.3008%" y="917" width="0.0467%" height="15" fill="rgb(237,52,5)" fg:x="133729" fg:w="113"/><text x="55.5508%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (34 samples, 0.01%)</title><rect x="55.3533%" y="773" width="0.0141%" height="15" fill="rgb(218,150,34)" fg:x="133856" fg:w="34"/><text x="55.6033%" y="783.50"></text></g><g><title>alloc::alloc::Global::grow_impl (34 samples, 0.01%)</title><rect x="55.3533%" y="757" width="0.0141%" height="15" fill="rgb(235,194,28)" fg:x="133856" fg:w="34"/><text x="55.6033%" y="767.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.01%)</title><rect x="55.3533%" y="741" width="0.0141%" height="15" fill="rgb(245,92,18)" fg:x="133856" fg:w="34"/><text x="55.6033%" y="751.50"></text></g><g><title>rallocx (32 samples, 0.01%)</title><rect x="55.3542%" y="725" width="0.0132%" height="15" fill="rgb(253,203,53)" fg:x="133858" fg:w="32"/><text x="55.6042%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (44 samples, 0.02%)</title><rect x="55.3525%" y="789" width="0.0182%" height="15" fill="rgb(249,185,47)" fg:x="133854" fg:w="44"/><text x="55.6025%" y="799.50"></text></g><g><title>&lt;T as solidity_abi::ABIEncodable&gt;::abi_encode (208 samples, 0.09%)</title><rect x="55.2851%" y="933" width="0.0860%" height="15" fill="rgb(252,194,52)" fg:x="133691" fg:w="208"/><text x="55.5351%" y="943.50"></text></g><g><title>solidity_abi::utils::LinkedBytes::to_vec (57 samples, 0.02%)</title><rect x="55.3476%" y="917" width="0.0236%" height="15" fill="rgb(210,53,36)" fg:x="133842" fg:w="57"/><text x="55.5976%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (55 samples, 0.02%)</title><rect x="55.3484%" y="901" width="0.0227%" height="15" fill="rgb(237,37,25)" fg:x="133844" fg:w="55"/><text x="55.5984%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (55 samples, 0.02%)</title><rect x="55.3484%" y="885" width="0.0227%" height="15" fill="rgb(242,116,27)" fg:x="133844" fg:w="55"/><text x="55.5984%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (55 samples, 0.02%)</title><rect x="55.3484%" y="869" width="0.0227%" height="15" fill="rgb(213,185,26)" fg:x="133844" fg:w="55"/><text x="55.5984%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (52 samples, 0.02%)</title><rect x="55.3496%" y="853" width="0.0215%" height="15" fill="rgb(225,204,8)" fg:x="133847" fg:w="52"/><text x="55.5996%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (52 samples, 0.02%)</title><rect x="55.3496%" y="837" width="0.0215%" height="15" fill="rgb(254,111,37)" fg:x="133847" fg:w="52"/><text x="55.5996%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (51 samples, 0.02%)</title><rect x="55.3500%" y="821" width="0.0211%" height="15" fill="rgb(242,35,9)" fg:x="133848" fg:w="51"/><text x="55.6000%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (51 samples, 0.02%)</title><rect x="55.3500%" y="805" width="0.0211%" height="15" fill="rgb(232,138,49)" fg:x="133848" fg:w="51"/><text x="55.6000%" y="815.50"></text></g><g><title>&lt;T as cfx_evm::internal_contract::components::function::SolidityFunctionTrait&gt;::execute (98,535 samples, 40.75%)</title><rect x="14.6348%" y="981" width="40.7471%" height="15" fill="rgb(247,56,4)" fg:x="35390" fg:w="98535"/><text x="14.8848%" y="991.50">&lt;T as cfx_evm::internal_contract::components::function::SolidityFun..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (245 samples, 0.10%)</title><rect x="55.2806%" y="965" width="0.1013%" height="15" fill="rgb(226,179,17)" fg:x="133680" fg:w="245"/><text x="55.5306%" y="975.50"></text></g><g><title>&lt;T as cfx_evm::internal_contract::components::function::SolidityFunctionTrait&gt;::execute::{{closure}} (245 samples, 0.10%)</title><rect x="55.2806%" y="949" width="0.1013%" height="15" fill="rgb(216,163,45)" fg:x="133680" fg:w="245"/><text x="55.5306%" y="959.50"></text></g><g><title>cfx_evm::internal_contract::components::contract::InternalContractTrait::execute (98,611 samples, 40.78%)</title><rect x="14.6319%" y="997" width="40.7785%" height="15" fill="rgb(211,157,3)" fg:x="35383" fg:w="98611"/><text x="14.8819%" y="1007.50">cfx_evm::internal_contract::components::contract::InternalContractT..</text></g><g><title>cfx_evm::internal_contract::components::contract::load_solidity_fn (69 samples, 0.03%)</title><rect x="55.3819%" y="981" width="0.0285%" height="15" fill="rgb(234,44,20)" fg:x="133925" fg:w="69"/><text x="55.6319%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (42 samples, 0.02%)</title><rect x="55.3930%" y="965" width="0.0174%" height="15" fill="rgb(254,138,23)" fg:x="133952" fg:w="42"/><text x="55.6430%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (42 samples, 0.02%)</title><rect x="55.3930%" y="949" width="0.0174%" height="15" fill="rgb(206,119,39)" fg:x="133952" fg:w="42"/><text x="55.6430%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (42 samples, 0.02%)</title><rect x="55.3930%" y="933" width="0.0174%" height="15" fill="rgb(231,105,52)" fg:x="133952" fg:w="42"/><text x="55.6430%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (29 samples, 0.01%)</title><rect x="55.3984%" y="917" width="0.0120%" height="15" fill="rgb(250,20,5)" fg:x="133965" fg:w="29"/><text x="55.6484%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (29 samples, 0.01%)</title><rect x="55.3984%" y="901" width="0.0120%" height="15" fill="rgb(215,198,30)" fg:x="133965" fg:w="29"/><text x="55.6484%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (29 samples, 0.01%)</title><rect x="55.3984%" y="885" width="0.0120%" height="15" fill="rgb(246,142,8)" fg:x="133965" fg:w="29"/><text x="55.6484%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (29 samples, 0.01%)</title><rect x="55.3984%" y="869" width="0.0120%" height="15" fill="rgb(243,26,38)" fg:x="133965" fg:w="29"/><text x="55.6484%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (29 samples, 0.01%)</title><rect x="55.3984%" y="853" width="0.0120%" height="15" fill="rgb(205,133,28)" fg:x="133965" fg:w="29"/><text x="55.6484%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.01%)</title><rect x="55.3984%" y="837" width="0.0120%" height="15" fill="rgb(212,34,0)" fg:x="133965" fg:w="29"/><text x="55.6484%" y="847.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::executive::InternalContractExec as cfx_evm::vm::Exec&gt;::exec (98,658 samples, 40.80%)</title><rect x="14.6282%" y="1013" width="40.7979%" height="15" fill="rgb(251,226,22)" fg:x="35374" fg:w="98658"/><text x="14.8782%" y="1023.50">&lt;cfx_evm::call_create_frame::executive::InternalContractExec as cfx..</text></g><g><title>log::max_level (25 samples, 0.01%)</title><rect x="55.4158%" y="997" width="0.0103%" height="15" fill="rgb(252,119,9)" fg:x="134007" fg:w="25"/><text x="55.6658%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (25 samples, 0.01%)</title><rect x="55.4158%" y="981" width="0.0103%" height="15" fill="rgb(213,150,50)" fg:x="134007" fg:w="25"/><text x="55.6658%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (25 samples, 0.01%)</title><rect x="55.4158%" y="965" width="0.0103%" height="15" fill="rgb(212,24,39)" fg:x="134007" fg:w="25"/><text x="55.6658%" y="975.50"></text></g><g><title>arena_ralloc_move_helper (39 samples, 0.02%)</title><rect x="55.6027%" y="725" width="0.0161%" height="15" fill="rgb(213,46,39)" fg:x="134459" fg:w="39"/><text x="55.8527%" y="735.50"></text></g><g><title>ipalloct (39 samples, 0.02%)</title><rect x="55.6027%" y="709" width="0.0161%" height="15" fill="rgb(239,106,12)" fg:x="134459" fg:w="39"/><text x="55.8527%" y="719.50"></text></g><g><title>ipallocztm (39 samples, 0.02%)</title><rect x="55.6027%" y="693" width="0.0161%" height="15" fill="rgb(249,229,21)" fg:x="134459" fg:w="39"/><text x="55.8527%" y="703.50"></text></g><g><title>_rjem_je_arena_palloc (39 samples, 0.02%)</title><rect x="55.6027%" y="677" width="0.0161%" height="15" fill="rgb(212,158,3)" fg:x="134459" fg:w="39"/><text x="55.8527%" y="687.50"></text></g><g><title>_rjem_je_arena_palloc (39 samples, 0.02%)</title><rect x="55.6027%" y="661" width="0.0161%" height="15" fill="rgb(253,26,48)" fg:x="134459" fg:w="39"/><text x="55.8527%" y="671.50"></text></g><g><title>arena_malloc (39 samples, 0.02%)</title><rect x="55.6027%" y="645" width="0.0161%" height="15" fill="rgb(238,178,20)" fg:x="134459" fg:w="39"/><text x="55.8527%" y="655.50"></text></g><g><title>tcache_alloc_small (39 samples, 0.02%)</title><rect x="55.6027%" y="629" width="0.0161%" height="15" fill="rgb(208,86,15)" fg:x="134459" fg:w="39"/><text x="55.8527%" y="639.50"></text></g><g><title>cache_bin_alloc_easy (36 samples, 0.01%)</title><rect x="55.6039%" y="613" width="0.0149%" height="15" fill="rgb(239,42,53)" fg:x="134462" fg:w="36"/><text x="55.8539%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (106 samples, 0.04%)</title><rect x="55.5758%" y="821" width="0.0438%" height="15" fill="rgb(245,226,8)" fg:x="134394" fg:w="106"/><text x="55.8258%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (106 samples, 0.04%)</title><rect x="55.5758%" y="805" width="0.0438%" height="15" fill="rgb(216,176,32)" fg:x="134394" fg:w="106"/><text x="55.8258%" y="815.50"></text></g><g><title>alloc::alloc::realloc (106 samples, 0.04%)</title><rect x="55.5758%" y="789" width="0.0438%" height="15" fill="rgb(231,186,21)" fg:x="134394" fg:w="106"/><text x="55.8258%" y="799.50"></text></g><g><title>rallocx (102 samples, 0.04%)</title><rect x="55.5775%" y="773" width="0.0422%" height="15" fill="rgb(205,95,49)" fg:x="134398" fg:w="102"/><text x="55.8275%" y="783.50"></text></g><g><title>iralloct (54 samples, 0.02%)</title><rect x="55.5973%" y="757" width="0.0223%" height="15" fill="rgb(217,145,8)" fg:x="134446" fg:w="54"/><text x="55.8473%" y="767.50"></text></g><g><title>_rjem_je_arena_ralloc (54 samples, 0.02%)</title><rect x="55.5973%" y="741" width="0.0223%" height="15" fill="rgb(239,144,48)" fg:x="134446" fg:w="54"/><text x="55.8473%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (127 samples, 0.05%)</title><rect x="55.5700%" y="837" width="0.0525%" height="15" fill="rgb(214,189,23)" fg:x="134380" fg:w="127"/><text x="55.8200%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as cfx_evm::evm::interpreter::memory::Memory&gt;::expand (143 samples, 0.06%)</title><rect x="55.5700%" y="965" width="0.0591%" height="15" fill="rgb(229,157,17)" fg:x="134380" fg:w="143"/><text x="55.8200%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as cfx_evm::evm::interpreter::memory::Memory&gt;::resize (143 samples, 0.06%)</title><rect x="55.5700%" y="949" width="0.0591%" height="15" fill="rgb(230,5,48)" fg:x="134380" fg:w="143"/><text x="55.8200%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (143 samples, 0.06%)</title><rect x="55.5700%" y="933" width="0.0591%" height="15" fill="rgb(224,156,48)" fg:x="134380" fg:w="143"/><text x="55.8200%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (143 samples, 0.06%)</title><rect x="55.5700%" y="917" width="0.0591%" height="15" fill="rgb(223,14,29)" fg:x="134380" fg:w="143"/><text x="55.8200%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (143 samples, 0.06%)</title><rect x="55.5700%" y="901" width="0.0591%" height="15" fill="rgb(229,96,36)" fg:x="134380" fg:w="143"/><text x="55.8200%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (143 samples, 0.06%)</title><rect x="55.5700%" y="885" width="0.0591%" height="15" fill="rgb(231,102,53)" fg:x="134380" fg:w="143"/><text x="55.8200%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (143 samples, 0.06%)</title><rect x="55.5700%" y="869" width="0.0591%" height="15" fill="rgb(210,77,38)" fg:x="134380" fg:w="143"/><text x="55.8200%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (143 samples, 0.06%)</title><rect x="55.5700%" y="853" width="0.0591%" height="15" fill="rgb(235,131,6)" fg:x="134380" fg:w="143"/><text x="55.8200%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (138 samples, 0.06%)</title><rect x="55.6296%" y="965" width="0.0571%" height="15" fill="rgb(252,55,38)" fg:x="134524" fg:w="138"/><text x="55.8796%" y="975.50"></text></g><g><title>cfx_evm::evm::instructions::Instruction::from_u8 (321 samples, 0.13%)</title><rect x="55.6866%" y="965" width="0.1327%" height="15" fill="rgb(246,38,14)" fg:x="134662" fg:w="321"/><text x="55.9366%" y="975.50"></text></g><g><title>cfx_evm::evm::instructions::Instruction::info (616 samples, 0.25%)</title><rect x="55.8194%" y="965" width="0.2547%" height="15" fill="rgb(242,27,5)" fg:x="134983" fg:w="616"/><text x="56.0694%" y="975.50"></text></g><g><title>&lt;cfx_evm::evm::instructions::INSTRUCTIONS as core::ops::deref::Deref&gt;::deref (616 samples, 0.25%)</title><rect x="55.8194%" y="949" width="0.2547%" height="15" fill="rgb(228,65,35)" fg:x="134983" fg:w="616"/><text x="56.0694%" y="959.50"></text></g><g><title>&lt;cfx_evm::evm::instructions::INSTRUCTIONS as core::ops::deref::Deref&gt;::deref::__stability (616 samples, 0.25%)</title><rect x="55.8194%" y="933" width="0.2547%" height="15" fill="rgb(245,93,11)" fg:x="134983" fg:w="616"/><text x="56.0694%" y="943.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (616 samples, 0.25%)</title><rect x="55.8194%" y="917" width="0.2547%" height="15" fill="rgb(213,1,31)" fg:x="134983" fg:w="616"/><text x="56.0694%" y="927.50"></text></g><g><title>spin::once::Once&lt;T&gt;::call_once (616 samples, 0.25%)</title><rect x="55.8194%" y="901" width="0.2547%" height="15" fill="rgb(237,205,14)" fg:x="134983" fg:w="616"/><text x="56.0694%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (616 samples, 0.25%)</title><rect x="55.8194%" y="885" width="0.2547%" height="15" fill="rgb(232,118,45)" fg:x="134983" fg:w="616"/><text x="56.0694%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (616 samples, 0.25%)</title><rect x="55.8194%" y="869" width="0.2547%" height="15" fill="rgb(218,5,6)" fg:x="134983" fg:w="616"/><text x="56.0694%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as cfx_evm::evm::interpreter::memory::Memory&gt;::read (71 samples, 0.03%)</title><rect x="56.0741%" y="949" width="0.0294%" height="15" fill="rgb(251,87,51)" fg:x="135599" fg:w="71"/><text x="56.3241%" y="959.50"></text></g><g><title>&lt;primitive_types::U256 as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (51 samples, 0.02%)</title><rect x="56.0824%" y="933" width="0.0211%" height="15" fill="rgb(207,225,20)" fg:x="135619" fg:w="51"/><text x="56.3324%" y="943.50"></text></g><g><title>primitive_types::U256::from_big_endian (51 samples, 0.02%)</title><rect x="56.0824%" y="917" width="0.0211%" height="15" fill="rgb(222,78,54)" fg:x="135619" fg:w="51"/><text x="56.3324%" y="927.50"></text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::read_u64 (51 samples, 0.02%)</title><rect x="56.0824%" y="901" width="0.0211%" height="15" fill="rgb(232,85,16)" fg:x="135619" fg:w="51"/><text x="56.3324%" y="911.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (51 samples, 0.02%)</title><rect x="56.0824%" y="885" width="0.0211%" height="15" fill="rgb(244,25,33)" fg:x="135619" fg:w="51"/><text x="56.3324%" y="895.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (51 samples, 0.02%)</title><rect x="56.0824%" y="869" width="0.0211%" height="15" fill="rgb(233,24,36)" fg:x="135619" fg:w="51"/><text x="56.3324%" y="879.50"></text></g><g><title> N]&gt;::try_from (51 samples, 0.02%)</title><rect x="56.0824%" y="853" width="0.0211%" height="15" fill="rgb(253,49,54)" fg:x="135619" fg:w="51"/><text x="56.3324%" y="863.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (51 samples, 0.02%)</title><rect x="56.0824%" y="837" width="0.0211%" height="15" fill="rgb(245,12,22)" fg:x="135619" fg:w="51"/><text x="56.3324%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (51 samples, 0.02%)</title><rect x="56.0824%" y="821" width="0.0211%" height="15" fill="rgb(253,141,28)" fg:x="135619" fg:w="51"/><text x="56.3324%" y="831.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied::{{closure}} (51 samples, 0.02%)</title><rect x="56.0824%" y="805" width="0.0211%" height="15" fill="rgb(225,207,27)" fg:x="135619" fg:w="51"/><text x="56.3324%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as cfx_evm::evm::interpreter::memory::Memory&gt;::write (52 samples, 0.02%)</title><rect x="56.1060%" y="949" width="0.0215%" height="15" fill="rgb(220,84,2)" fg:x="135676" fg:w="52"/><text x="56.3560%" y="959.50"></text></g><g><title>primitive_types::U256::to_big_endian (52 samples, 0.02%)</title><rect x="56.1060%" y="933" width="0.0215%" height="15" fill="rgb(224,37,37)" fg:x="135676" fg:w="52"/><text x="56.3560%" y="943.50"></text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::write_u64 (52 samples, 0.02%)</title><rect x="56.1060%" y="917" width="0.0215%" height="15" fill="rgb(220,143,18)" fg:x="135676" fg:w="52"/><text x="56.3560%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_be (52 samples, 0.02%)</title><rect x="56.1060%" y="901" width="0.0215%" height="15" fill="rgb(210,88,33)" fg:x="135676" fg:w="52"/><text x="56.3560%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::swap_bytes (52 samples, 0.02%)</title><rect x="56.1060%" y="885" width="0.0215%" height="15" fill="rgb(219,87,51)" fg:x="135676" fg:w="52"/><text x="56.3560%" y="895.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::call (47 samples, 0.02%)</title><rect x="56.1328%" y="949" width="0.0194%" height="15" fill="rgb(211,7,35)" fg:x="135741" fg:w="47"/><text x="56.3828%" y="959.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::storage_at::{{closure}} (27 samples, 0.01%)</title><rect x="56.1577%" y="885" width="0.0112%" height="15" fill="rgb(232,77,2)" fg:x="135801" fg:w="27"/><text x="56.4077%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (27 samples, 0.01%)</title><rect x="56.1577%" y="869" width="0.0112%" height="15" fill="rgb(249,94,25)" fg:x="135801" fg:w="27"/><text x="56.4077%" y="879.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::storage_at::{{closure}}::{{closure}} (27 samples, 0.01%)</title><rect x="56.1577%" y="853" width="0.0112%" height="15" fill="rgb(215,112,2)" fg:x="135801" fg:w="27"/><text x="56.4077%" y="863.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::storage_at (27 samples, 0.01%)</title><rect x="56.1577%" y="837" width="0.0112%" height="15" fill="rgb(226,115,48)" fg:x="135801" fg:w="27"/><text x="56.4077%" y="847.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::cached_storage_at (26 samples, 0.01%)</title><rect x="56.1581%" y="821" width="0.0108%" height="15" fill="rgb(249,196,10)" fg:x="135802" fg:w="26"/><text x="56.4081%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (26 samples, 0.01%)</title><rect x="56.1581%" y="805" width="0.0108%" height="15" fill="rgb(237,109,14)" fg:x="135802" fg:w="26"/><text x="56.4081%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (26 samples, 0.01%)</title><rect x="56.1581%" y="789" width="0.0108%" height="15" fill="rgb(217,103,53)" fg:x="135802" fg:w="26"/><text x="56.4081%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.01%)</title><rect x="56.1581%" y="773" width="0.0108%" height="15" fill="rgb(244,137,9)" fg:x="135802" fg:w="26"/><text x="56.4081%" y="783.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::storage_at (37 samples, 0.02%)</title><rect x="56.1577%" y="917" width="0.0153%" height="15" fill="rgb(227,201,3)" fg:x="135801" fg:w="37"/><text x="56.4077%" y="927.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (37 samples, 0.02%)</title><rect x="56.1577%" y="901" width="0.0153%" height="15" fill="rgb(243,94,6)" fg:x="135801" fg:w="37"/><text x="56.4077%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (29 samples, 0.01%)</title><rect x="56.1862%" y="885" width="0.0120%" height="15" fill="rgb(235,118,5)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (29 samples, 0.01%)</title><rect x="56.1862%" y="869" width="0.0120%" height="15" fill="rgb(247,10,30)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (29 samples, 0.01%)</title><rect x="56.1862%" y="853" width="0.0120%" height="15" fill="rgb(205,26,28)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (29 samples, 0.01%)</title><rect x="56.1862%" y="837" width="0.0120%" height="15" fill="rgb(206,99,35)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (29 samples, 0.01%)</title><rect x="56.1862%" y="821" width="0.0120%" height="15" fill="rgb(238,130,40)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (29 samples, 0.01%)</title><rect x="56.1862%" y="805" width="0.0120%" height="15" fill="rgb(224,126,31)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (29 samples, 0.01%)</title><rect x="56.1862%" y="789" width="0.0120%" height="15" fill="rgb(254,105,17)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="799.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (29 samples, 0.01%)</title><rect x="56.1862%" y="773" width="0.0120%" height="15" fill="rgb(216,87,36)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="783.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (29 samples, 0.01%)</title><rect x="56.1862%" y="757" width="0.0120%" height="15" fill="rgb(240,21,12)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (29 samples, 0.01%)</title><rect x="56.1862%" y="741" width="0.0120%" height="15" fill="rgb(245,192,34)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="751.50"></text></g><g><title>&lt;cfx_types::AddressWithSpace as core::cmp::PartialEq&gt;::eq (29 samples, 0.01%)</title><rect x="56.1862%" y="725" width="0.0120%" height="15" fill="rgb(226,100,49)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="735.50"></text></g><g><title>&lt;primitive_types::H160 as core::cmp::PartialEq&gt;::eq (29 samples, 0.01%)</title><rect x="56.1862%" y="709" width="0.0120%" height="15" fill="rgb(245,188,27)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (29 samples, 0.01%)</title><rect x="56.1862%" y="693" width="0.0120%" height="15" fill="rgb(212,170,8)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (29 samples, 0.01%)</title><rect x="56.1862%" y="677" width="0.0120%" height="15" fill="rgb(217,113,29)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (29 samples, 0.01%)</title><rect x="56.1862%" y="661" width="0.0120%" height="15" fill="rgb(237,30,3)" fg:x="135870" fg:w="29"/><text x="56.4362%" y="671.50"></text></g><g><title>cfx_evm::state::State::require_exists (70 samples, 0.03%)</title><rect x="56.1730%" y="917" width="0.0289%" height="15" fill="rgb(227,19,28)" fg:x="135838" fg:w="70"/><text x="56.4230%" y="927.50"></text></g><g><title>cfx_evm::state::State::require_or_set (70 samples, 0.03%)</title><rect x="56.1730%" y="901" width="0.0289%" height="15" fill="rgb(239,172,45)" fg:x="135838" fg:w="70"/><text x="56.4230%" y="911.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::set_storage (46 samples, 0.02%)</title><rect x="56.2019%" y="917" width="0.0190%" height="15" fill="rgb(254,55,39)" fg:x="135908" fg:w="46"/><text x="56.4519%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (27 samples, 0.01%)</title><rect x="56.2098%" y="901" width="0.0112%" height="15" fill="rgb(249,208,12)" fg:x="135927" fg:w="27"/><text x="56.4598%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (27 samples, 0.01%)</title><rect x="56.2098%" y="885" width="0.0112%" height="15" fill="rgb(240,52,13)" fg:x="135927" fg:w="27"/><text x="56.4598%" y="895.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::set_storage (159 samples, 0.07%)</title><rect x="56.1560%" y="949" width="0.0658%" height="15" fill="rgb(252,149,13)" fg:x="135797" fg:w="159"/><text x="56.4060%" y="959.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::set_storage (159 samples, 0.07%)</title><rect x="56.1560%" y="933" width="0.0658%" height="15" fill="rgb(232,81,48)" fg:x="135797" fg:w="159"/><text x="56.4060%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,primitive_types::U256&gt;&gt;&gt; (98 samples, 0.04%)</title><rect x="56.2308%" y="821" width="0.0405%" height="15" fill="rgb(222,144,2)" fg:x="135978" fg:w="98"/><text x="56.4808%" y="831.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 0.04%)</title><rect x="56.2308%" y="805" width="0.0405%" height="15" fill="rgb(216,81,32)" fg:x="135978" fg:w="98"/><text x="56.4808%" y="815.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (98 samples, 0.04%)</title><rect x="56.2308%" y="789" width="0.0405%" height="15" fill="rgb(244,78,51)" fg:x="135978" fg:w="98"/><text x="56.4808%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (98 samples, 0.04%)</title><rect x="56.2308%" y="773" width="0.0405%" height="15" fill="rgb(217,66,21)" fg:x="135978" fg:w="98"/><text x="56.4808%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_sub (98 samples, 0.04%)</title><rect x="56.2308%" y="757" width="0.0405%" height="15" fill="rgb(247,101,42)" fg:x="135978" fg:w="98"/><text x="56.4808%" y="767.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (71 samples, 0.03%)</title><rect x="56.2714%" y="741" width="0.0294%" height="15" fill="rgb(227,81,39)" fg:x="136076" fg:w="71"/><text x="56.5214%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (71 samples, 0.03%)</title><rect x="56.2714%" y="725" width="0.0294%" height="15" fill="rgb(220,223,44)" fg:x="136076" fg:w="71"/><text x="56.5214%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (71 samples, 0.03%)</title><rect x="56.2714%" y="709" width="0.0294%" height="15" fill="rgb(205,218,2)" fg:x="136076" fg:w="71"/><text x="56.5214%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (71 samples, 0.03%)</title><rect x="56.2714%" y="693" width="0.0294%" height="15" fill="rgb(212,207,28)" fg:x="136076" fg:w="71"/><text x="56.5214%" y="703.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::cached_storage_at (211 samples, 0.09%)</title><rect x="56.2308%" y="837" width="0.0873%" height="15" fill="rgb(224,12,41)" fg:x="135978" fg:w="211"/><text x="56.4808%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (113 samples, 0.05%)</title><rect x="56.2714%" y="821" width="0.0467%" height="15" fill="rgb(216,118,12)" fg:x="136076" fg:w="113"/><text x="56.5214%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (113 samples, 0.05%)</title><rect x="56.2714%" y="805" width="0.0467%" height="15" fill="rgb(252,97,46)" fg:x="136076" fg:w="113"/><text x="56.5214%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (113 samples, 0.05%)</title><rect x="56.2714%" y="789" width="0.0467%" height="15" fill="rgb(244,206,19)" fg:x="136076" fg:w="113"/><text x="56.5214%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (113 samples, 0.05%)</title><rect x="56.2714%" y="773" width="0.0467%" height="15" fill="rgb(231,84,31)" fg:x="136076" fg:w="113"/><text x="56.5214%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (113 samples, 0.05%)</title><rect x="56.2714%" y="757" width="0.0467%" height="15" fill="rgb(244,133,0)" fg:x="136076" fg:w="113"/><text x="56.5214%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (42 samples, 0.02%)</title><rect x="56.3007%" y="741" width="0.0174%" height="15" fill="rgb(223,15,50)" fg:x="136147" fg:w="42"/><text x="56.5507%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (42 samples, 0.02%)</title><rect x="56.3007%" y="725" width="0.0174%" height="15" fill="rgb(250,118,49)" fg:x="136147" fg:w="42"/><text x="56.5507%" y="735.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (42 samples, 0.02%)</title><rect x="56.3007%" y="709" width="0.0174%" height="15" fill="rgb(248,25,38)" fg:x="136147" fg:w="42"/><text x="56.5507%" y="719.50"></text></g><g><title>core::hash::Hasher::write_usize (42 samples, 0.02%)</title><rect x="56.3007%" y="693" width="0.0174%" height="15" fill="rgb(215,70,14)" fg:x="136147" fg:w="42"/><text x="56.5507%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (40 samples, 0.02%)</title><rect x="56.3016%" y="677" width="0.0165%" height="15" fill="rgb(215,28,15)" fg:x="136149" fg:w="40"/><text x="56.5516%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (40 samples, 0.02%)</title><rect x="56.3016%" y="661" width="0.0165%" height="15" fill="rgb(243,6,28)" fg:x="136149" fg:w="40"/><text x="56.5516%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (40 samples, 0.02%)</title><rect x="56.3016%" y="645" width="0.0165%" height="15" fill="rgb(222,130,1)" fg:x="136149" fg:w="40"/><text x="56.5516%" y="655.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::fresh_storage (40 samples, 0.02%)</title><rect x="56.3181%" y="837" width="0.0165%" height="15" fill="rgb(236,166,44)" fg:x="136189" fg:w="40"/><text x="56.5681%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (51 samples, 0.02%)</title><rect x="56.3619%" y="725" width="0.0211%" height="15" fill="rgb(221,108,14)" fg:x="136295" fg:w="51"/><text x="56.6119%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (51 samples, 0.02%)</title><rect x="56.3619%" y="709" width="0.0211%" height="15" fill="rgb(252,3,45)" fg:x="136295" fg:w="51"/><text x="56.6119%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (51 samples, 0.02%)</title><rect x="56.3619%" y="693" width="0.0211%" height="15" fill="rgb(237,68,30)" fg:x="136295" fg:w="51"/><text x="56.6119%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (51 samples, 0.02%)</title><rect x="56.3619%" y="677" width="0.0211%" height="15" fill="rgb(211,79,22)" fg:x="136295" fg:w="51"/><text x="56.6119%" y="687.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::Ord&gt;::cmp (51 samples, 0.02%)</title><rect x="56.3619%" y="661" width="0.0211%" height="15" fill="rgb(252,185,21)" fg:x="136295" fg:w="51"/><text x="56.6119%" y="671.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::cmp::Ord&gt;::cmp (51 samples, 0.02%)</title><rect x="56.3619%" y="645" width="0.0211%" height="15" fill="rgb(225,189,26)" fg:x="136295" fg:w="51"/><text x="56.6119%" y="655.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (51 samples, 0.02%)</title><rect x="56.3619%" y="629" width="0.0211%" height="15" fill="rgb(241,30,40)" fg:x="136295" fg:w="51"/><text x="56.6119%" y="639.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T (51 samples, 0.02%)</title><rect x="56.3619%" y="613" width="0.0211%" height="15" fill="rgb(235,215,44)" fg:x="136295" fg:w="51"/><text x="56.6119%" y="623.50"></text></g><g><title> N]&gt;::cmp (51 samples, 0.02%)</title><rect x="56.3619%" y="597" width="0.0211%" height="15" fill="rgb(205,8,29)" fg:x="136295" fg:w="51"/><text x="56.6119%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (51 samples, 0.02%)</title><rect x="56.3619%" y="581" width="0.0211%" height="15" fill="rgb(241,137,42)" fg:x="136295" fg:w="51"/><text x="56.6119%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (51 samples, 0.02%)</title><rect x="56.3619%" y="565" width="0.0211%" height="15" fill="rgb(237,155,2)" fg:x="136295" fg:w="51"/><text x="56.6119%" y="575.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (51 samples, 0.02%)</title><rect x="56.3619%" y="549" width="0.0211%" height="15" fill="rgb(245,29,42)" fg:x="136295" fg:w="51"/><text x="56.6119%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (51 samples, 0.02%)</title><rect x="56.3619%" y="533" width="0.0211%" height="15" fill="rgb(234,101,35)" fg:x="136295" fg:w="51"/><text x="56.6119%" y="543.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (26 samples, 0.01%)</title><rect x="56.4008%" y="549" width="0.0108%" height="15" fill="rgb(228,64,37)" fg:x="136389" fg:w="26"/><text x="56.6508%" y="559.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (26 samples, 0.01%)</title><rect x="56.4008%" y="533" width="0.0108%" height="15" fill="rgb(217,214,36)" fg:x="136389" fg:w="26"/><text x="56.6508%" y="543.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (26 samples, 0.01%)</title><rect x="56.4008%" y="517" width="0.0108%" height="15" fill="rgb(243,70,3)" fg:x="136389" fg:w="26"/><text x="56.6508%" y="527.50"></text></g><g><title> N]&gt;::hash (26 samples, 0.01%)</title><rect x="56.4008%" y="501" width="0.0108%" height="15" fill="rgb(253,158,52)" fg:x="136389" fg:w="26"/><text x="56.6508%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (26 samples, 0.01%)</title><rect x="56.4008%" y="485" width="0.0108%" height="15" fill="rgb(234,111,54)" fg:x="136389" fg:w="26"/><text x="56.6508%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (26 samples, 0.01%)</title><rect x="56.4008%" y="469" width="0.0108%" height="15" fill="rgb(217,70,32)" fg:x="136389" fg:w="26"/><text x="56.6508%" y="479.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (26 samples, 0.01%)</title><rect x="56.4008%" y="453" width="0.0108%" height="15" fill="rgb(234,18,33)" fg:x="136389" fg:w="26"/><text x="56.6508%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (80 samples, 0.03%)</title><rect x="56.3909%" y="613" width="0.0331%" height="15" fill="rgb(234,12,49)" fg:x="136365" fg:w="80"/><text x="56.6409%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (80 samples, 0.03%)</title><rect x="56.3909%" y="597" width="0.0331%" height="15" fill="rgb(236,10,21)" fg:x="136365" fg:w="80"/><text x="56.6409%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (56 samples, 0.02%)</title><rect x="56.4008%" y="581" width="0.0232%" height="15" fill="rgb(248,182,45)" fg:x="136389" fg:w="56"/><text x="56.6508%" y="591.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (56 samples, 0.02%)</title><rect x="56.4008%" y="565" width="0.0232%" height="15" fill="rgb(217,95,36)" fg:x="136389" fg:w="56"/><text x="56.6508%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (30 samples, 0.01%)</title><rect x="56.4116%" y="549" width="0.0124%" height="15" fill="rgb(212,110,31)" fg:x="136415" fg:w="30"/><text x="56.6616%" y="559.50"></text></g><g><title>core::hash::Hasher::write_isize (30 samples, 0.01%)</title><rect x="56.4116%" y="533" width="0.0124%" height="15" fill="rgb(206,32,53)" fg:x="136415" fg:w="30"/><text x="56.6616%" y="543.50"></text></g><g><title>core::hash::Hasher::write_usize (30 samples, 0.01%)</title><rect x="56.4116%" y="517" width="0.0124%" height="15" fill="rgb(246,141,37)" fg:x="136415" fg:w="30"/><text x="56.6616%" y="527.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.01%)</title><rect x="56.4116%" y="501" width="0.0124%" height="15" fill="rgb(219,16,7)" fg:x="136415" fg:w="30"/><text x="56.6616%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 0.01%)</title><rect x="56.4116%" y="485" width="0.0124%" height="15" fill="rgb(230,205,45)" fg:x="136415" fg:w="30"/><text x="56.6616%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.01%)</title><rect x="56.4116%" y="469" width="0.0124%" height="15" fill="rgb(231,43,49)" fg:x="136415" fg:w="30"/><text x="56.6616%" y="479.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (177 samples, 0.07%)</title><rect x="56.3830%" y="693" width="0.0732%" height="15" fill="rgb(212,106,34)" fg:x="136346" fg:w="177"/><text x="56.6330%" y="703.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (172 samples, 0.07%)</title><rect x="56.3851%" y="677" width="0.0711%" height="15" fill="rgb(206,83,17)" fg:x="136351" fg:w="172"/><text x="56.6351%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (158 samples, 0.07%)</title><rect x="56.3909%" y="661" width="0.0653%" height="15" fill="rgb(244,154,49)" fg:x="136365" fg:w="158"/><text x="56.6409%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (158 samples, 0.07%)</title><rect x="56.3909%" y="645" width="0.0653%" height="15" fill="rgb(244,149,49)" fg:x="136365" fg:w="158"/><text x="56.6409%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (158 samples, 0.07%)</title><rect x="56.3909%" y="629" width="0.0653%" height="15" fill="rgb(227,134,18)" fg:x="136365" fg:w="158"/><text x="56.6409%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (78 samples, 0.03%)</title><rect x="56.4240%" y="613" width="0.0323%" height="15" fill="rgb(237,116,36)" fg:x="136445" fg:w="78"/><text x="56.6740%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (78 samples, 0.03%)</title><rect x="56.4240%" y="597" width="0.0323%" height="15" fill="rgb(205,129,40)" fg:x="136445" fg:w="78"/><text x="56.6740%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (78 samples, 0.03%)</title><rect x="56.4240%" y="581" width="0.0323%" height="15" fill="rgb(236,178,4)" fg:x="136445" fg:w="78"/><text x="56.6740%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (78 samples, 0.03%)</title><rect x="56.4240%" y="565" width="0.0323%" height="15" fill="rgb(251,76,53)" fg:x="136445" fg:w="78"/><text x="56.6740%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (78 samples, 0.03%)</title><rect x="56.4240%" y="549" width="0.0323%" height="15" fill="rgb(242,92,40)" fg:x="136445" fg:w="78"/><text x="56.6740%" y="559.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (78 samples, 0.03%)</title><rect x="56.4240%" y="533" width="0.0323%" height="15" fill="rgb(209,45,30)" fg:x="136445" fg:w="78"/><text x="56.6740%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (78 samples, 0.03%)</title><rect x="56.4240%" y="517" width="0.0323%" height="15" fill="rgb(218,157,36)" fg:x="136445" fg:w="78"/><text x="56.6740%" y="527.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (78 samples, 0.03%)</title><rect x="56.4240%" y="501" width="0.0323%" height="15" fill="rgb(222,186,16)" fg:x="136445" fg:w="78"/><text x="56.6740%" y="511.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (261 samples, 0.11%)</title><rect x="56.3487%" y="757" width="0.1079%" height="15" fill="rgb(254,72,35)" fg:x="136263" fg:w="261"/><text x="56.5987%" y="767.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (241 samples, 0.10%)</title><rect x="56.3570%" y="741" width="0.0997%" height="15" fill="rgb(224,25,35)" fg:x="136283" fg:w="241"/><text x="56.6070%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (178 samples, 0.07%)</title><rect x="56.3830%" y="725" width="0.0736%" height="15" fill="rgb(206,135,52)" fg:x="136346" fg:w="178"/><text x="56.6330%" y="735.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (178 samples, 0.07%)</title><rect x="56.3830%" y="709" width="0.0736%" height="15" fill="rgb(229,174,47)" fg:x="136346" fg:w="178"/><text x="56.6330%" y="719.50"></text></g><g><title>__rust_realloc (31 samples, 0.01%)</title><rect x="56.5042%" y="245" width="0.0128%" height="15" fill="rgb(242,184,21)" fg:x="136639" fg:w="31"/><text x="56.7542%" y="255.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (31 samples, 0.01%)</title><rect x="56.5042%" y="229" width="0.0128%" height="15" fill="rgb(213,22,45)" fg:x="136639" fg:w="31"/><text x="56.7542%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (236 samples, 0.10%)</title><rect x="56.5005%" y="293" width="0.0976%" height="15" fill="rgb(237,81,54)" fg:x="136630" fg:w="236"/><text x="56.7505%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (236 samples, 0.10%)</title><rect x="56.5005%" y="277" width="0.0976%" height="15" fill="rgb(248,177,18)" fg:x="136630" fg:w="236"/><text x="56.7505%" y="287.50"></text></g><g><title>alloc::alloc::realloc (236 samples, 0.10%)</title><rect x="56.5005%" y="261" width="0.0976%" height="15" fill="rgb(254,31,16)" fg:x="136630" fg:w="236"/><text x="56.7505%" y="271.50"></text></g><g><title>rallocx (196 samples, 0.08%)</title><rect x="56.5170%" y="245" width="0.0811%" height="15" fill="rgb(235,20,31)" fg:x="136670" fg:w="196"/><text x="56.7670%" y="255.50"></text></g><g><title>iralloct (94 samples, 0.04%)</title><rect x="56.5592%" y="229" width="0.0389%" height="15" fill="rgb(240,56,43)" fg:x="136772" fg:w="94"/><text x="56.8092%" y="239.50"></text></g><g><title>_rjem_je_arena_ralloc (92 samples, 0.04%)</title><rect x="56.5600%" y="213" width="0.0380%" height="15" fill="rgb(237,197,51)" fg:x="136774" fg:w="92"/><text x="56.8100%" y="223.50"></text></g><g><title>isdalloct (67 samples, 0.03%)</title><rect x="56.5704%" y="197" width="0.0277%" height="15" fill="rgb(241,162,44)" fg:x="136799" fg:w="67"/><text x="56.8204%" y="207.50"></text></g><g><title>arena_sdalloc (67 samples, 0.03%)</title><rect x="56.5704%" y="181" width="0.0277%" height="15" fill="rgb(224,23,20)" fg:x="136799" fg:w="67"/><text x="56.8204%" y="191.50"></text></g><g><title>tcache_dalloc_small (66 samples, 0.03%)</title><rect x="56.5708%" y="165" width="0.0273%" height="15" fill="rgb(250,109,34)" fg:x="136800" fg:w="66"/><text x="56.8208%" y="175.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::EvmPath&gt;::serialize (308 samples, 0.13%)</title><rect x="56.4748%" y="629" width="0.1274%" height="15" fill="rgb(214,175,50)" fg:x="136568" fg:w="308"/><text x="56.7248%" y="639.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (301 samples, 0.12%)</title><rect x="56.4777%" y="613" width="0.1245%" height="15" fill="rgb(213,182,5)" fg:x="136575" fg:w="301"/><text x="56.7277%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (301 samples, 0.12%)</title><rect x="56.4777%" y="597" width="0.1245%" height="15" fill="rgb(209,199,19)" fg:x="136575" fg:w="301"/><text x="56.7277%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (301 samples, 0.12%)</title><rect x="56.4777%" y="581" width="0.1245%" height="15" fill="rgb(236,224,42)" fg:x="136575" fg:w="301"/><text x="56.7277%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (301 samples, 0.12%)</title><rect x="56.4777%" y="565" width="0.1245%" height="15" fill="rgb(246,226,29)" fg:x="136575" fg:w="301"/><text x="56.7277%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (301 samples, 0.12%)</title><rect x="56.4777%" y="549" width="0.1245%" height="15" fill="rgb(227,223,11)" fg:x="136575" fg:w="301"/><text x="56.7277%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (266 samples, 0.11%)</title><rect x="56.4922%" y="533" width="0.1100%" height="15" fill="rgb(219,7,51)" fg:x="136610" fg:w="266"/><text x="56.7422%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (266 samples, 0.11%)</title><rect x="56.4922%" y="517" width="0.1100%" height="15" fill="rgb(245,167,10)" fg:x="136610" fg:w="266"/><text x="56.7422%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (266 samples, 0.11%)</title><rect x="56.4922%" y="501" width="0.1100%" height="15" fill="rgb(237,224,16)" fg:x="136610" fg:w="266"/><text x="56.7422%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (266 samples, 0.11%)</title><rect x="56.4922%" y="485" width="0.1100%" height="15" fill="rgb(226,132,13)" fg:x="136610" fg:w="266"/><text x="56.7422%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (266 samples, 0.11%)</title><rect x="56.4922%" y="469" width="0.1100%" height="15" fill="rgb(214,140,3)" fg:x="136610" fg:w="266"/><text x="56.7422%" y="479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (266 samples, 0.11%)</title><rect x="56.4922%" y="453" width="0.1100%" height="15" fill="rgb(221,177,4)" fg:x="136610" fg:w="266"/><text x="56.7422%" y="463.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (266 samples, 0.11%)</title><rect x="56.4922%" y="437" width="0.1100%" height="15" fill="rgb(238,139,3)" fg:x="136610" fg:w="266"/><text x="56.7422%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (266 samples, 0.11%)</title><rect x="56.4922%" y="421" width="0.1100%" height="15" fill="rgb(216,17,39)" fg:x="136610" fg:w="266"/><text x="56.7422%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (266 samples, 0.11%)</title><rect x="56.4922%" y="405" width="0.1100%" height="15" fill="rgb(238,120,9)" fg:x="136610" fg:w="266"/><text x="56.7422%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (266 samples, 0.11%)</title><rect x="56.4922%" y="389" width="0.1100%" height="15" fill="rgb(244,92,53)" fg:x="136610" fg:w="266"/><text x="56.7422%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (266 samples, 0.11%)</title><rect x="56.4922%" y="373" width="0.1100%" height="15" fill="rgb(224,148,33)" fg:x="136610" fg:w="266"/><text x="56.7422%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (266 samples, 0.11%)</title><rect x="56.4922%" y="357" width="0.1100%" height="15" fill="rgb(243,6,36)" fg:x="136610" fg:w="266"/><text x="56.7422%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (261 samples, 0.11%)</title><rect x="56.4943%" y="341" width="0.1079%" height="15" fill="rgb(230,102,11)" fg:x="136615" fg:w="261"/><text x="56.7443%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (247 samples, 0.10%)</title><rect x="56.5001%" y="325" width="0.1021%" height="15" fill="rgb(234,148,36)" fg:x="136629" fg:w="247"/><text x="56.7501%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (246 samples, 0.10%)</title><rect x="56.5005%" y="309" width="0.1017%" height="15" fill="rgb(251,153,25)" fg:x="136630" fg:w="246"/><text x="56.7505%" y="319.50"></text></g><g><title>bcs::ser::to_bytes (327 samples, 0.14%)</title><rect x="56.4715%" y="693" width="0.1352%" height="15" fill="rgb(215,129,8)" fg:x="136560" fg:w="327"/><text x="56.7215%" y="703.50"></text></g><g><title>bcs::ser::serialize_into (327 samples, 0.14%)</title><rect x="56.4715%" y="677" width="0.1352%" height="15" fill="rgb(224,128,35)" fg:x="136560" fg:w="327"/><text x="56.7215%" y="687.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (326 samples, 0.13%)</title><rect x="56.4719%" y="661" width="0.1348%" height="15" fill="rgb(237,56,52)" fg:x="136561" fg:w="326"/><text x="56.7219%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (319 samples, 0.13%)</title><rect x="56.4748%" y="645" width="0.1319%" height="15" fill="rgb(234,213,19)" fg:x="136568" fg:w="319"/><text x="56.7248%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (379 samples, 0.16%)</title><rect x="56.4566%" y="757" width="0.1567%" height="15" fill="rgb(252,82,23)" fg:x="136524" fg:w="379"/><text x="56.7066%" y="767.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::state_store::state_key::StateKey&gt;::from (377 samples, 0.16%)</title><rect x="56.4575%" y="741" width="0.1559%" height="15" fill="rgb(254,201,21)" fg:x="136526" fg:w="377"/><text x="56.7075%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (371 samples, 0.15%)</title><rect x="56.4599%" y="725" width="0.1534%" height="15" fill="rgb(250,186,11)" fg:x="136532" fg:w="371"/><text x="56.7099%" y="735.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::access_path::AccessPath&gt;::from (370 samples, 0.15%)</title><rect x="56.4604%" y="709" width="0.1530%" height="15" fill="rgb(211,174,5)" fg:x="136533" fg:w="370"/><text x="56.7104%" y="719.50"></text></g><g><title>&lt;&amp;mut aptos_evm::state::ViewWrapper&lt;S&gt; as cfx_storage::StorageTrait&gt;::get (655 samples, 0.27%)</title><rect x="56.3487%" y="773" width="0.2709%" height="15" fill="rgb(214,121,10)" fg:x="136263" fg:w="655"/><text x="56.5987%" y="783.50"></text></g><g><title>&lt;cfx_storage::StorageKeyWrapper&lt;T,Key&gt; as cfx_storage::StorageTrait&gt;::get (681 samples, 0.28%)</title><rect x="56.3487%" y="789" width="0.2816%" height="15" fill="rgb(241,66,2)" fg:x="136263" fg:w="681"/><text x="56.5987%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (26 samples, 0.01%)</title><rect x="56.6196%" y="773" width="0.0108%" height="15" fill="rgb(220,167,19)" fg:x="136918" fg:w="26"/><text x="56.8696%" y="783.50"></text></g><g><title>&lt;aptos_evm::storage_key::StorageKey as core::convert::From&lt;primitives::storage_key::OwnedStateKey&gt;&gt;::from (26 samples, 0.01%)</title><rect x="56.6196%" y="757" width="0.0108%" height="15" fill="rgb(231,54,50)" fg:x="136918" fg:w="26"/><text x="56.8696%" y="767.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::get_raw (723 samples, 0.30%)</title><rect x="56.3400%" y="805" width="0.2990%" height="15" fill="rgb(239,217,53)" fg:x="136242" fg:w="723"/><text x="56.5900%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (30 samples, 0.01%)</title><rect x="56.6444%" y="757" width="0.0124%" height="15" fill="rgb(248,8,0)" fg:x="136978" fg:w="30"/><text x="56.8944%" y="767.50"></text></g><g><title>rlp::rlpin::Rlp::as_val (27 samples, 0.01%)</title><rect x="56.6572%" y="741" width="0.0112%" height="15" fill="rgb(229,118,37)" fg:x="137009" fg:w="27"/><text x="56.9072%" y="751.50"></text></g><g><title>primitive_types::rlp::&lt;impl rlp::traits::Decodable for primitive_types::U256&gt;::decode (27 samples, 0.01%)</title><rect x="56.6572%" y="725" width="0.0112%" height="15" fill="rgb(253,223,43)" fg:x="137009" fg:w="27"/><text x="56.9072%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (25 samples, 0.01%)</title><rect x="56.6692%" y="725" width="0.0103%" height="15" fill="rgb(211,77,36)" fg:x="137038" fg:w="25"/><text x="56.9192%" y="735.50"></text></g><g><title>rlp::rlpin::Rlp::as_val (109 samples, 0.05%)</title><rect x="56.6431%" y="789" width="0.0451%" height="15" fill="rgb(219,3,53)" fg:x="136975" fg:w="109"/><text x="56.8931%" y="799.50"></text></g><g><title>primitives::storage::_IMPL_RLP_DECODABLE_FOR_StorageValue::&lt;impl rlp::traits::Decodable for primitives::storage::StorageValue&gt;::decode (106 samples, 0.04%)</title><rect x="56.6444%" y="773" width="0.0438%" height="15" fill="rgb(244,45,42)" fg:x="136978" fg:w="106"/><text x="56.8944%" y="783.50"></text></g><g><title>rlp::rlpin::Rlp::val_at (76 samples, 0.03%)</title><rect x="56.6568%" y="757" width="0.0314%" height="15" fill="rgb(225,95,27)" fg:x="137008" fg:w="76"/><text x="56.9068%" y="767.50"></text></g><g><title>rlp::rlpin::Rlp::at (48 samples, 0.02%)</title><rect x="56.6684%" y="741" width="0.0198%" height="15" fill="rgb(207,74,8)" fg:x="137036" fg:w="48"/><text x="56.9184%" y="751.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get (853 samples, 0.35%)</title><rect x="56.3400%" y="821" width="0.3527%" height="15" fill="rgb(243,63,36)" fg:x="136242" fg:w="853"/><text x="56.5900%" y="831.50"></text></g><g><title>rlp::decode (120 samples, 0.05%)</title><rect x="56.6431%" y="805" width="0.0496%" height="15" fill="rgb(211,180,12)" fg:x="136975" fg:w="120"/><text x="56.8931%" y="815.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.01%)</title><rect x="56.6928%" y="757" width="0.0103%" height="15" fill="rgb(254,166,49)" fg:x="137095" fg:w="25"/><text x="56.9428%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (25 samples, 0.01%)</title><rect x="56.6928%" y="741" width="0.0103%" height="15" fill="rgb(205,19,0)" fg:x="137095" fg:w="25"/><text x="56.9428%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (25 samples, 0.01%)</title><rect x="56.6928%" y="725" width="0.0103%" height="15" fill="rgb(224,172,32)" fg:x="137095" fg:w="25"/><text x="56.9428%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (54 samples, 0.02%)</title><rect x="56.6928%" y="789" width="0.0223%" height="15" fill="rgb(254,136,30)" fg:x="137095" fg:w="54"/><text x="56.9428%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (54 samples, 0.02%)</title><rect x="56.6928%" y="773" width="0.0223%" height="15" fill="rgb(246,19,35)" fg:x="137095" fg:w="54"/><text x="56.9428%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.01%)</title><rect x="56.7031%" y="757" width="0.0120%" height="15" fill="rgb(219,24,36)" fg:x="137120" fg:w="29"/><text x="56.9531%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (29 samples, 0.01%)</title><rect x="56.7031%" y="741" width="0.0120%" height="15" fill="rgb(251,55,1)" fg:x="137120" fg:w="29"/><text x="56.9531%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (29 samples, 0.01%)</title><rect x="56.7031%" y="725" width="0.0120%" height="15" fill="rgb(218,117,39)" fg:x="137120" fg:w="29"/><text x="56.9531%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (29 samples, 0.01%)</title><rect x="56.7031%" y="709" width="0.0120%" height="15" fill="rgb(248,169,11)" fg:x="137120" fg:w="29"/><text x="56.9531%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (29 samples, 0.01%)</title><rect x="56.7031%" y="693" width="0.0120%" height="15" fill="rgb(244,40,44)" fg:x="137120" fg:w="29"/><text x="56.9531%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (29 samples, 0.01%)</title><rect x="56.7031%" y="677" width="0.0120%" height="15" fill="rgb(234,62,37)" fg:x="137120" fg:w="29"/><text x="56.9531%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (29 samples, 0.01%)</title><rect x="56.7031%" y="661" width="0.0120%" height="15" fill="rgb(207,117,42)" fg:x="137120" fg:w="29"/><text x="56.9531%" y="671.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (31 samples, 0.01%)</title><rect x="56.7184%" y="645" width="0.0128%" height="15" fill="rgb(213,43,2)" fg:x="137157" fg:w="31"/><text x="56.9684%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (31 samples, 0.01%)</title><rect x="56.7184%" y="629" width="0.0128%" height="15" fill="rgb(244,202,51)" fg:x="137157" fg:w="31"/><text x="56.9684%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (31 samples, 0.01%)</title><rect x="56.7184%" y="613" width="0.0128%" height="15" fill="rgb(253,174,46)" fg:x="137157" fg:w="31"/><text x="56.9684%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (31 samples, 0.01%)</title><rect x="56.7184%" y="597" width="0.0128%" height="15" fill="rgb(251,23,1)" fg:x="137157" fg:w="31"/><text x="56.9684%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (46 samples, 0.02%)</title><rect x="56.7184%" y="709" width="0.0190%" height="15" fill="rgb(253,26,1)" fg:x="137157" fg:w="46"/><text x="56.9684%" y="719.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (46 samples, 0.02%)</title><rect x="56.7184%" y="693" width="0.0190%" height="15" fill="rgb(216,89,31)" fg:x="137157" fg:w="46"/><text x="56.9684%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (46 samples, 0.02%)</title><rect x="56.7184%" y="677" width="0.0190%" height="15" fill="rgb(209,109,5)" fg:x="137157" fg:w="46"/><text x="56.9684%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (46 samples, 0.02%)</title><rect x="56.7184%" y="661" width="0.0190%" height="15" fill="rgb(229,63,13)" fg:x="137157" fg:w="46"/><text x="56.9684%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (39 samples, 0.02%)</title><rect x="56.7374%" y="709" width="0.0161%" height="15" fill="rgb(238,137,54)" fg:x="137203" fg:w="39"/><text x="56.9874%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (39 samples, 0.02%)</title><rect x="56.7374%" y="693" width="0.0161%" height="15" fill="rgb(228,1,9)" fg:x="137203" fg:w="39"/><text x="56.9874%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (39 samples, 0.02%)</title><rect x="56.7374%" y="677" width="0.0161%" height="15" fill="rgb(249,120,48)" fg:x="137203" fg:w="39"/><text x="56.9874%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (39 samples, 0.02%)</title><rect x="56.7374%" y="661" width="0.0161%" height="15" fill="rgb(209,72,36)" fg:x="137203" fg:w="39"/><text x="56.9874%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.02%)</title><rect x="56.7374%" y="645" width="0.0161%" height="15" fill="rgb(247,98,49)" fg:x="137203" fg:w="39"/><text x="56.9874%" y="655.50"></text></g><g><title>arena_bin_malloc_hard (35 samples, 0.01%)</title><rect x="56.7544%" y="453" width="0.0145%" height="15" fill="rgb(233,75,36)" fg:x="137244" fg:w="35"/><text x="57.0044%" y="463.50"></text></g><g><title>arena_bin_nonfull_slab_get (35 samples, 0.01%)</title><rect x="56.7544%" y="437" width="0.0145%" height="15" fill="rgb(225,14,24)" fg:x="137244" fg:w="35"/><text x="57.0044%" y="447.50"></text></g><g><title>arena_slab_alloc (33 samples, 0.01%)</title><rect x="56.7552%" y="421" width="0.0136%" height="15" fill="rgb(237,193,20)" fg:x="137246" fg:w="33"/><text x="57.0052%" y="431.50"></text></g><g><title>extent_recycle (25 samples, 0.01%)</title><rect x="56.7585%" y="405" width="0.0103%" height="15" fill="rgb(239,122,19)" fg:x="137254" fg:w="25"/><text x="57.0085%" y="415.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (48 samples, 0.02%)</title><rect x="56.7544%" y="485" width="0.0198%" height="15" fill="rgb(231,220,10)" fg:x="137244" fg:w="48"/><text x="57.0044%" y="495.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (48 samples, 0.02%)</title><rect x="56.7544%" y="469" width="0.0198%" height="15" fill="rgb(220,66,15)" fg:x="137244" fg:w="48"/><text x="57.0044%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (156 samples, 0.06%)</title><rect x="56.7151%" y="773" width="0.0645%" height="15" fill="rgb(215,171,52)" fg:x="137149" fg:w="156"/><text x="56.9651%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (154 samples, 0.06%)</title><rect x="56.7159%" y="757" width="0.0637%" height="15" fill="rgb(241,169,50)" fg:x="137151" fg:w="154"/><text x="56.9659%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (154 samples, 0.06%)</title><rect x="56.7159%" y="741" width="0.0637%" height="15" fill="rgb(236,189,0)" fg:x="137151" fg:w="154"/><text x="56.9659%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (154 samples, 0.06%)</title><rect x="56.7159%" y="725" width="0.0637%" height="15" fill="rgb(217,147,20)" fg:x="137151" fg:w="154"/><text x="56.9659%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (63 samples, 0.03%)</title><rect x="56.7535%" y="709" width="0.0261%" height="15" fill="rgb(206,188,39)" fg:x="137242" fg:w="63"/><text x="57.0035%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (63 samples, 0.03%)</title><rect x="56.7535%" y="693" width="0.0261%" height="15" fill="rgb(227,118,25)" fg:x="137242" fg:w="63"/><text x="57.0035%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (63 samples, 0.03%)</title><rect x="56.7535%" y="677" width="0.0261%" height="15" fill="rgb(248,171,40)" fg:x="137242" fg:w="63"/><text x="57.0035%" y="687.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (63 samples, 0.03%)</title><rect x="56.7535%" y="661" width="0.0261%" height="15" fill="rgb(251,90,54)" fg:x="137242" fg:w="63"/><text x="57.0035%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (63 samples, 0.03%)</title><rect x="56.7535%" y="645" width="0.0261%" height="15" fill="rgb(234,11,46)" fg:x="137242" fg:w="63"/><text x="57.0035%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (63 samples, 0.03%)</title><rect x="56.7535%" y="629" width="0.0261%" height="15" fill="rgb(229,134,13)" fg:x="137242" fg:w="63"/><text x="57.0035%" y="639.50"></text></g><g><title>alloc::alloc::alloc (63 samples, 0.03%)</title><rect x="56.7535%" y="613" width="0.0261%" height="15" fill="rgb(223,129,3)" fg:x="137242" fg:w="63"/><text x="57.0035%" y="623.50"></text></g><g><title>mallocx (61 samples, 0.03%)</title><rect x="56.7544%" y="597" width="0.0252%" height="15" fill="rgb(221,124,13)" fg:x="137244" fg:w="61"/><text x="57.0044%" y="607.50"></text></g><g><title>imalloc (61 samples, 0.03%)</title><rect x="56.7544%" y="581" width="0.0252%" height="15" fill="rgb(234,3,18)" fg:x="137244" fg:w="61"/><text x="57.0044%" y="591.50"></text></g><g><title>imalloc_body (61 samples, 0.03%)</title><rect x="56.7544%" y="565" width="0.0252%" height="15" fill="rgb(249,199,20)" fg:x="137244" fg:w="61"/><text x="57.0044%" y="575.50"></text></g><g><title>imalloc_no_sample (61 samples, 0.03%)</title><rect x="56.7544%" y="549" width="0.0252%" height="15" fill="rgb(224,134,6)" fg:x="137244" fg:w="61"/><text x="57.0044%" y="559.50"></text></g><g><title>iallocztm (61 samples, 0.03%)</title><rect x="56.7544%" y="533" width="0.0252%" height="15" fill="rgb(254,83,26)" fg:x="137244" fg:w="61"/><text x="57.0044%" y="543.50"></text></g><g><title>arena_malloc (61 samples, 0.03%)</title><rect x="56.7544%" y="517" width="0.0252%" height="15" fill="rgb(217,88,9)" fg:x="137244" fg:w="61"/><text x="57.0044%" y="527.50"></text></g><g><title>tcache_alloc_small (61 samples, 0.03%)</title><rect x="56.7544%" y="501" width="0.0252%" height="15" fill="rgb(225,73,2)" fg:x="137244" fg:w="61"/><text x="57.0044%" y="511.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::storage_at::{{closure}}::{{closure}} (1,369 samples, 0.57%)</title><rect x="56.2288%" y="869" width="0.5661%" height="15" fill="rgb(226,44,39)" fg:x="135973" fg:w="1369"/><text x="56.4788%" y="879.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::storage_at (1,365 samples, 0.56%)</title><rect x="56.2304%" y="853" width="0.5645%" height="15" fill="rgb(228,53,17)" fg:x="135977" fg:w="1365"/><text x="56.4804%" y="863.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::get_and_cache_storage (1,113 samples, 0.46%)</title><rect x="56.3346%" y="837" width="0.4603%" height="15" fill="rgb(212,27,27)" fg:x="136229" fg:w="1113"/><text x="56.5846%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (247 samples, 0.10%)</title><rect x="56.6928%" y="821" width="0.1021%" height="15" fill="rgb(241,50,6)" fg:x="137095" fg:w="247"/><text x="56.9428%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (247 samples, 0.10%)</title><rect x="56.6928%" y="805" width="0.1021%" height="15" fill="rgb(225,28,51)" fg:x="137095" fg:w="247"/><text x="56.9428%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (193 samples, 0.08%)</title><rect x="56.7151%" y="789" width="0.0798%" height="15" fill="rgb(215,33,16)" fg:x="137149" fg:w="193"/><text x="56.9651%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (37 samples, 0.02%)</title><rect x="56.7796%" y="773" width="0.0153%" height="15" fill="rgb(243,40,39)" fg:x="137305" fg:w="37"/><text x="57.0296%" y="783.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::storage_at::{{closure}} (1,371 samples, 0.57%)</title><rect x="56.2288%" y="901" width="0.5669%" height="15" fill="rgb(225,11,42)" fg:x="135973" fg:w="1371"/><text x="56.4788%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1,371 samples, 0.57%)</title><rect x="56.2288%" y="885" width="0.5669%" height="15" fill="rgb(241,220,38)" fg:x="135973" fg:w="1371"/><text x="56.4788%" y="895.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (42 samples, 0.02%)</title><rect x="56.7957%" y="821" width="0.0174%" height="15" fill="rgb(244,52,35)" fg:x="137344" fg:w="42"/><text x="57.0457%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (42 samples, 0.02%)</title><rect x="56.7957%" y="805" width="0.0174%" height="15" fill="rgb(246,42,46)" fg:x="137344" fg:w="42"/><text x="57.0457%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (42 samples, 0.02%)</title><rect x="56.7957%" y="789" width="0.0174%" height="15" fill="rgb(205,184,13)" fg:x="137344" fg:w="42"/><text x="57.0457%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (42 samples, 0.02%)</title><rect x="56.7957%" y="773" width="0.0174%" height="15" fill="rgb(209,48,36)" fg:x="137344" fg:w="42"/><text x="57.0457%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (42 samples, 0.02%)</title><rect x="56.7957%" y="757" width="0.0174%" height="15" fill="rgb(244,34,51)" fg:x="137344" fg:w="42"/><text x="57.0457%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (51 samples, 0.02%)</title><rect x="56.7957%" y="853" width="0.0211%" height="15" fill="rgb(221,107,33)" fg:x="137344" fg:w="51"/><text x="57.0457%" y="863.50"></text></g><g><title>core::hash::BuildHasher::hash_one (51 samples, 0.02%)</title><rect x="56.7957%" y="837" width="0.0211%" height="15" fill="rgb(224,203,12)" fg:x="137344" fg:w="51"/><text x="57.0457%" y="847.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::storage_at (1,524 samples, 0.63%)</title><rect x="56.2222%" y="949" width="0.6302%" height="15" fill="rgb(230,215,18)" fg:x="135957" fg:w="1524"/><text x="56.4722%" y="959.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::storage_at (1,508 samples, 0.62%)</title><rect x="56.2288%" y="933" width="0.6236%" height="15" fill="rgb(206,185,35)" fg:x="135973" fg:w="1508"/><text x="56.4788%" y="943.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (1,508 samples, 0.62%)</title><rect x="56.2288%" y="917" width="0.6236%" height="15" fill="rgb(228,140,34)" fg:x="135973" fg:w="1508"/><text x="56.4788%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (137 samples, 0.06%)</title><rect x="56.7957%" y="901" width="0.0567%" height="15" fill="rgb(208,93,13)" fg:x="137344" fg:w="137"/><text x="57.0457%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (137 samples, 0.06%)</title><rect x="56.7957%" y="885" width="0.0567%" height="15" fill="rgb(221,193,39)" fg:x="137344" fg:w="137"/><text x="57.0457%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (137 samples, 0.06%)</title><rect x="56.7957%" y="869" width="0.0567%" height="15" fill="rgb(241,132,34)" fg:x="137344" fg:w="137"/><text x="57.0457%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (86 samples, 0.04%)</title><rect x="56.8168%" y="853" width="0.0356%" height="15" fill="rgb(221,141,10)" fg:x="137395" fg:w="86"/><text x="57.0668%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (86 samples, 0.04%)</title><rect x="56.8168%" y="837" width="0.0356%" height="15" fill="rgb(226,90,31)" fg:x="137395" fg:w="86"/><text x="57.0668%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (86 samples, 0.04%)</title><rect x="56.8168%" y="821" width="0.0356%" height="15" fill="rgb(243,75,5)" fg:x="137395" fg:w="86"/><text x="57.0668%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (86 samples, 0.04%)</title><rect x="56.8168%" y="805" width="0.0356%" height="15" fill="rgb(227,156,21)" fg:x="137395" fg:w="86"/><text x="57.0668%" y="815.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (86 samples, 0.04%)</title><rect x="56.8168%" y="789" width="0.0356%" height="15" fill="rgb(250,195,8)" fg:x="137395" fg:w="86"/><text x="57.0668%" y="799.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (86 samples, 0.04%)</title><rect x="56.8168%" y="773" width="0.0356%" height="15" fill="rgb(220,134,5)" fg:x="137395" fg:w="86"/><text x="57.0668%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (86 samples, 0.04%)</title><rect x="56.8168%" y="757" width="0.0356%" height="15" fill="rgb(246,106,34)" fg:x="137395" fg:w="86"/><text x="57.0668%" y="767.50"></text></g><g><title>&lt;cfx_types::AddressWithSpace as core::cmp::PartialEq&gt;::eq (86 samples, 0.04%)</title><rect x="56.8168%" y="741" width="0.0356%" height="15" fill="rgb(205,1,4)" fg:x="137395" fg:w="86"/><text x="57.0668%" y="751.50"></text></g><g><title>&lt;primitive_types::H160 as core::cmp::PartialEq&gt;::eq (86 samples, 0.04%)</title><rect x="56.8168%" y="725" width="0.0356%" height="15" fill="rgb(224,151,29)" fg:x="137395" fg:w="86"/><text x="57.0668%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (86 samples, 0.04%)</title><rect x="56.8168%" y="709" width="0.0356%" height="15" fill="rgb(251,196,0)" fg:x="137395" fg:w="86"/><text x="57.0668%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (86 samples, 0.04%)</title><rect x="56.8168%" y="693" width="0.0356%" height="15" fill="rgb(212,127,0)" fg:x="137395" fg:w="86"/><text x="57.0668%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (86 samples, 0.04%)</title><rect x="56.8168%" y="677" width="0.0356%" height="15" fill="rgb(236,71,53)" fg:x="137395" fg:w="86"/><text x="57.0668%" y="687.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::stack::VecStack&lt;S&gt; as cfx_evm::evm::interpreter::stack::Stack&lt;S&gt;&gt;::pop_back (967 samples, 0.40%)</title><rect x="56.8524%" y="949" width="0.3999%" height="15" fill="rgb(227,99,0)" fg:x="137481" fg:w="967"/><text x="57.1024%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (967 samples, 0.40%)</title><rect x="56.8524%" y="933" width="0.3999%" height="15" fill="rgb(239,89,21)" fg:x="137481" fg:w="967"/><text x="57.1024%" y="943.50"></text></g><g><title>core::ptr::read (967 samples, 0.40%)</title><rect x="56.8524%" y="917" width="0.3999%" height="15" fill="rgb(243,122,19)" fg:x="137481" fg:w="967"/><text x="57.1024%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.01%)</title><rect x="57.2581%" y="901" width="0.0108%" height="15" fill="rgb(229,192,45)" fg:x="138462" fg:w="26"/><text x="57.5081%" y="911.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next_back (26 samples, 0.01%)</title><rect x="57.2581%" y="885" width="0.0108%" height="15" fill="rgb(235,165,35)" fg:x="138462" fg:w="26"/><text x="57.5081%" y="895.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next_back (26 samples, 0.01%)</title><rect x="57.2581%" y="869" width="0.0108%" height="15" fill="rgb(253,202,0)" fg:x="138462" fg:w="26"/><text x="57.5081%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (26 samples, 0.01%)</title><rect x="57.2581%" y="853" width="0.0108%" height="15" fill="rgb(235,51,20)" fg:x="138462" fg:w="26"/><text x="57.5081%" y="863.50"></text></g><g><title>primitive_types::U256::div_mod_knuth (30 samples, 0.01%)</title><rect x="57.2581%" y="917" width="0.0124%" height="15" fill="rgb(218,95,46)" fg:x="138462" fg:w="30"/><text x="57.5081%" y="927.50"></text></g><g><title>&lt;primitive_types::U256 as core::ops::arith::Div&lt;T&gt;&gt;::div (41 samples, 0.02%)</title><rect x="57.2581%" y="949" width="0.0170%" height="15" fill="rgb(212,81,10)" fg:x="138462" fg:w="41"/><text x="57.5081%" y="959.50"></text></g><g><title>primitive_types::U256::div_mod (41 samples, 0.02%)</title><rect x="57.2581%" y="933" width="0.0170%" height="15" fill="rgb(240,59,0)" fg:x="138462" fg:w="41"/><text x="57.5081%" y="943.50"></text></g><g><title>&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (89 samples, 0.04%)</title><rect x="57.2750%" y="949" width="0.0368%" height="15" fill="rgb(212,191,42)" fg:x="138503" fg:w="89"/><text x="57.5250%" y="959.50"></text></g><g><title>&lt;primitive_types::U256 as core::ops::bit::Shr&lt;T&gt;&gt;::shr (38 samples, 0.02%)</title><rect x="57.3118%" y="949" width="0.0157%" height="15" fill="rgb(233,140,3)" fg:x="138592" fg:w="38"/><text x="57.5618%" y="959.50"></text></g><g><title>alloc::vec::from_elem (57 samples, 0.02%)</title><rect x="57.3275%" y="949" width="0.0236%" height="15" fill="rgb(215,69,23)" fg:x="138630" fg:w="57"/><text x="57.5775%" y="959.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (57 samples, 0.02%)</title><rect x="57.3275%" y="933" width="0.0236%" height="15" fill="rgb(240,202,20)" fg:x="138630" fg:w="57"/><text x="57.5775%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (51 samples, 0.02%)</title><rect x="57.3300%" y="917" width="0.0211%" height="15" fill="rgb(209,146,50)" fg:x="138636" fg:w="51"/><text x="57.5800%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (51 samples, 0.02%)</title><rect x="57.3300%" y="901" width="0.0211%" height="15" fill="rgb(253,102,54)" fg:x="138636" fg:w="51"/><text x="57.5800%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (51 samples, 0.02%)</title><rect x="57.3300%" y="885" width="0.0211%" height="15" fill="rgb(250,173,47)" fg:x="138636" fg:w="51"/><text x="57.5800%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (51 samples, 0.02%)</title><rect x="57.3300%" y="869" width="0.0211%" height="15" fill="rgb(232,142,7)" fg:x="138636" fg:w="51"/><text x="57.5800%" y="879.50"></text></g><g><title>alloc::alloc::alloc_zeroed (51 samples, 0.02%)</title><rect x="57.3300%" y="853" width="0.0211%" height="15" fill="rgb(230,157,47)" fg:x="138636" fg:w="51"/><text x="57.5800%" y="863.50"></text></g><g><title>calloc (45 samples, 0.02%)</title><rect x="57.3325%" y="837" width="0.0186%" height="15" fill="rgb(214,177,35)" fg:x="138642" fg:w="45"/><text x="57.5825%" y="847.50"></text></g><g><title>imalloc (45 samples, 0.02%)</title><rect x="57.3325%" y="821" width="0.0186%" height="15" fill="rgb(234,119,46)" fg:x="138642" fg:w="45"/><text x="57.5825%" y="831.50"></text></g><g><title>tsd_fetch (45 samples, 0.02%)</title><rect x="57.3325%" y="805" width="0.0186%" height="15" fill="rgb(241,180,50)" fg:x="138642" fg:w="45"/><text x="57.5825%" y="815.50"></text></g><g><title>tsd_fetch_impl (45 samples, 0.02%)</title><rect x="57.3325%" y="789" width="0.0186%" height="15" fill="rgb(221,54,25)" fg:x="138642" fg:w="45"/><text x="57.5825%" y="799.50"></text></g><g><title>cfx_evm::evm::interpreter::CodeReader::read (1,140 samples, 0.47%)</title><rect x="57.3511%" y="949" width="0.4714%" height="15" fill="rgb(209,157,44)" fg:x="138687" fg:w="1140"/><text x="57.6011%" y="959.50"></text></g><g><title>&lt;primitive_types::U256 as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (993 samples, 0.41%)</title><rect x="57.4119%" y="933" width="0.4106%" height="15" fill="rgb(246,115,41)" fg:x="138834" fg:w="993"/><text x="57.6619%" y="943.50"></text></g><g><title>primitive_types::U256::from_big_endian (993 samples, 0.41%)</title><rect x="57.4119%" y="917" width="0.4106%" height="15" fill="rgb(229,86,1)" fg:x="138834" fg:w="993"/><text x="57.6619%" y="927.50"></text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::read_u64 (993 samples, 0.41%)</title><rect x="57.4119%" y="901" width="0.4106%" height="15" fill="rgb(240,108,53)" fg:x="138834" fg:w="993"/><text x="57.6619%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be_bytes (993 samples, 0.41%)</title><rect x="57.4119%" y="885" width="0.4106%" height="15" fill="rgb(227,134,2)" fg:x="138834" fg:w="993"/><text x="57.6619%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be (993 samples, 0.41%)</title><rect x="57.4119%" y="869" width="0.4106%" height="15" fill="rgb(213,129,25)" fg:x="138834" fg:w="993"/><text x="57.6619%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::swap_bytes (993 samples, 0.41%)</title><rect x="57.4119%" y="853" width="0.4106%" height="15" fill="rgb(226,35,21)" fg:x="138834" fg:w="993"/><text x="57.6619%" y="863.50"></text></g><g><title>core::cmp::PartialOrd::lt (92 samples, 0.04%)</title><rect x="57.8287%" y="949" width="0.0380%" height="15" fill="rgb(208,129,26)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="959.50"></text></g><g><title>&lt;primitive_types::U256 as core::cmp::PartialOrd&gt;::partial_cmp (92 samples, 0.04%)</title><rect x="57.8287%" y="933" width="0.0380%" height="15" fill="rgb(224,83,6)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="943.50"></text></g><g><title>&lt;primitive_types::U256 as core::cmp::Ord&gt;::cmp (92 samples, 0.04%)</title><rect x="57.8287%" y="917" width="0.0380%" height="15" fill="rgb(227,52,39)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (92 samples, 0.04%)</title><rect x="57.8287%" y="901" width="0.0380%" height="15" fill="rgb(241,30,17)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (92 samples, 0.04%)</title><rect x="57.8287%" y="885" width="0.0380%" height="15" fill="rgb(246,186,42)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="895.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (92 samples, 0.04%)</title><rect x="57.8287%" y="869" width="0.0380%" height="15" fill="rgb(221,169,15)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (92 samples, 0.04%)</title><rect x="57.8287%" y="853" width="0.0380%" height="15" fill="rgb(235,108,21)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (92 samples, 0.04%)</title><rect x="57.8287%" y="837" width="0.0380%" height="15" fill="rgb(219,148,30)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="847.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (92 samples, 0.04%)</title><rect x="57.8287%" y="821" width="0.0380%" height="15" fill="rgb(220,109,5)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (92 samples, 0.04%)</title><rect x="57.8287%" y="805" width="0.0380%" height="15" fill="rgb(213,203,48)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="815.50"></text></g><g><title>core::iter::traits::iterator::iter_compare::compare::{{closure}} (92 samples, 0.04%)</title><rect x="57.8287%" y="789" width="0.0380%" height="15" fill="rgb(244,71,33)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by::compare::{{closure}} (92 samples, 0.04%)</title><rect x="57.8287%" y="773" width="0.0380%" height="15" fill="rgb(209,23,2)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp::{{closure}} (92 samples, 0.04%)</title><rect x="57.8287%" y="757" width="0.0380%" height="15" fill="rgb(219,97,7)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (92 samples, 0.04%)</title><rect x="57.8287%" y="741" width="0.0380%" height="15" fill="rgb(216,161,23)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (92 samples, 0.04%)</title><rect x="57.8287%" y="725" width="0.0380%" height="15" fill="rgb(207,45,42)" fg:x="139842" fg:w="92"/><text x="58.0787%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (35 samples, 0.01%)</title><rect x="57.8688%" y="949" width="0.0145%" height="15" fill="rgb(241,61,4)" fg:x="139939" fg:w="35"/><text x="58.1188%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (35 samples, 0.01%)</title><rect x="57.8688%" y="933" width="0.0145%" height="15" fill="rgb(236,170,1)" fg:x="139939" fg:w="35"/><text x="58.1188%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.01%)</title><rect x="57.8688%" y="917" width="0.0145%" height="15" fill="rgb(239,72,5)" fg:x="139939" fg:w="35"/><text x="58.1188%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (35 samples, 0.01%)</title><rect x="57.8688%" y="901" width="0.0145%" height="15" fill="rgb(214,13,50)" fg:x="139939" fg:w="35"/><text x="58.1188%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (35 samples, 0.01%)</title><rect x="57.8688%" y="885" width="0.0145%" height="15" fill="rgb(224,88,9)" fg:x="139939" fg:w="35"/><text x="58.1188%" y="895.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (835 samples, 0.35%)</title><rect x="57.8895%" y="917" width="0.3453%" height="15" fill="rgb(238,192,34)" fg:x="139989" fg:w="835"/><text x="58.1395%" y="927.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (835 samples, 0.35%)</title><rect x="57.8895%" y="901" width="0.3453%" height="15" fill="rgb(217,203,50)" fg:x="139989" fg:w="835"/><text x="58.1395%" y="911.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (831 samples, 0.34%)</title><rect x="57.8912%" y="885" width="0.3436%" height="15" fill="rgb(241,123,32)" fg:x="139993" fg:w="831"/><text x="58.1412%" y="895.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (792 samples, 0.33%)</title><rect x="57.9073%" y="869" width="0.3275%" height="15" fill="rgb(248,151,39)" fg:x="140032" fg:w="792"/><text x="58.1573%" y="879.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (792 samples, 0.33%)</title><rect x="57.9073%" y="853" width="0.3275%" height="15" fill="rgb(208,89,6)" fg:x="140032" fg:w="792"/><text x="58.1573%" y="863.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (792 samples, 0.33%)</title><rect x="57.9073%" y="837" width="0.3275%" height="15" fill="rgb(254,43,26)" fg:x="140032" fg:w="792"/><text x="58.1573%" y="847.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (787 samples, 0.33%)</title><rect x="57.9094%" y="821" width="0.3254%" height="15" fill="rgb(216,158,13)" fg:x="140037" fg:w="787"/><text x="58.1594%" y="831.50"></text></g><g><title>keccak_hash::keccak (876 samples, 0.36%)</title><rect x="57.8833%" y="949" width="0.3623%" height="15" fill="rgb(212,47,37)" fg:x="139974" fg:w="876"/><text x="58.1333%" y="959.50"></text></g><g><title>keccak_hash::write_keccak (876 samples, 0.36%)</title><rect x="57.8833%" y="933" width="0.3623%" height="15" fill="rgb(254,16,10)" fg:x="139974" fg:w="876"/><text x="58.1333%" y="943.50"></text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::exec_instruction (5,277 samples, 2.18%)</title><rect x="56.0741%" y="965" width="2.1822%" height="15" fill="rgb(223,228,16)" fg:x="135599" fg:w="5277"/><text x="56.3241%" y="975.50">c..</text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::verify_instruction (201 samples, 0.08%)</title><rect x="58.2563%" y="965" width="0.0831%" height="15" fill="rgb(249,108,50)" fg:x="140876" fg:w="201"/><text x="58.5063%" y="975.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::spec (201 samples, 0.08%)</title><rect x="58.2563%" y="949" width="0.0831%" height="15" fill="rgb(208,220,5)" fg:x="140876" fg:w="201"/><text x="58.5063%" y="959.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::spec (167 samples, 0.07%)</title><rect x="60.2020%" y="949" width="0.0691%" height="15" fill="rgb(217,89,48)" fg:x="145581" fg:w="167"/><text x="60.4520%" y="959.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::storage_at (41 samples, 0.02%)</title><rect x="60.2710%" y="949" width="0.0170%" height="15" fill="rgb(212,113,41)" fg:x="145748" fg:w="41"/><text x="60.5210%" y="959.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::storage_at (41 samples, 0.02%)</title><rect x="60.2710%" y="933" width="0.0170%" height="15" fill="rgb(231,127,5)" fg:x="145748" fg:w="41"/><text x="60.5210%" y="943.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (41 samples, 0.02%)</title><rect x="60.2710%" y="917" width="0.0170%" height="15" fill="rgb(217,141,17)" fg:x="145748" fg:w="41"/><text x="60.5210%" y="927.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::stack::VecStack&lt;S&gt; as cfx_evm::evm::interpreter::stack::Stack&lt;S&gt;&gt;::peek (36 samples, 0.01%)</title><rect x="60.2880%" y="949" width="0.0149%" height="15" fill="rgb(245,125,54)" fg:x="145789" fg:w="36"/><text x="60.5380%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (36 samples, 0.01%)</title><rect x="60.2880%" y="933" width="0.0149%" height="15" fill="rgb(248,125,3)" fg:x="145789" fg:w="36"/><text x="60.5380%" y="943.50"></text></g><g><title>cfx_evm::evm::interpreter::gasometer::mem_needed (34 samples, 0.01%)</title><rect x="60.3157%" y="949" width="0.0141%" height="15" fill="rgb(236,119,51)" fg:x="145856" fg:w="34"/><text x="60.5657%" y="959.50"></text></g><g><title>&lt;usize as cfx_evm::evm::evm::CostType&gt;::from_u256 (34 samples, 0.01%)</title><rect x="60.3157%" y="933" width="0.0141%" height="15" fill="rgb(239,99,8)" fg:x="145856" fg:w="34"/><text x="60.5657%" y="943.50"></text></g><g><title>core::cmp::PartialEq::ne (34 samples, 0.01%)</title><rect x="60.3157%" y="917" width="0.0141%" height="15" fill="rgb(224,228,4)" fg:x="145856" fg:w="34"/><text x="60.5657%" y="927.50"></text></g><g><title>&lt;primitive_types::U256 as core::cmp::PartialEq&gt;::eq (34 samples, 0.01%)</title><rect x="60.3157%" y="901" width="0.0141%" height="15" fill="rgb(220,131,45)" fg:x="145856" fg:w="34"/><text x="60.5657%" y="911.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[U (34 samples, 0.01%)</title><rect x="60.3157%" y="885" width="0.0141%" height="15" fill="rgb(215,62,5)" fg:x="145856" fg:w="34"/><text x="60.5657%" y="895.50"></text></g><g><title> N]&gt; for [T (34 samples, 0.01%)</title><rect x="60.3157%" y="869" width="0.0141%" height="15" fill="rgb(253,12,24)" fg:x="145856" fg:w="34"/><text x="60.5657%" y="879.50"></text></g><g><title> N]&gt;::eq (34 samples, 0.01%)</title><rect x="60.3157%" y="853" width="0.0141%" height="15" fill="rgb(248,120,50)" fg:x="145856" fg:w="34"/><text x="60.5657%" y="863.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (34 samples, 0.01%)</title><rect x="60.3157%" y="837" width="0.0141%" height="15" fill="rgb(245,194,10)" fg:x="145856" fg:w="34"/><text x="60.5657%" y="847.50"></text></g><g><title>cfx_evm::evm::interpreter::gasometer::Gasometer&lt;Gas&gt;::requirements (4,819 samples, 1.99%)</title><rect x="58.3394%" y="965" width="1.9928%" height="15" fill="rgb(241,149,38)" fg:x="141077" fg:w="4819"/><text x="58.5894%" y="975.50">c..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::fmt::Debug&gt;::fmt (282 samples, 0.12%)</title><rect x="60.3463%" y="933" width="0.1166%" height="15" fill="rgb(219,215,7)" fg:x="145930" fg:w="282"/><text x="60.5963%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (99 samples, 0.04%)</title><rect x="60.4629%" y="933" width="0.0409%" height="15" fill="rgb(208,120,31)" fg:x="146212" fg:w="99"/><text x="60.7129%" y="943.50"></text></g><g><title>bit_set::BitSet::with_capacity (46 samples, 0.02%)</title><rect x="60.5109%" y="933" width="0.0190%" height="15" fill="rgb(244,30,8)" fg:x="146328" fg:w="46"/><text x="60.7609%" y="943.50"></text></g><g><title>bit_vec::BitVec::from_elem (46 samples, 0.02%)</title><rect x="60.5109%" y="917" width="0.0190%" height="15" fill="rgb(238,35,44)" fg:x="146328" fg:w="46"/><text x="60.7609%" y="927.50"></text></g><g><title>alloc::vec::from_elem (46 samples, 0.02%)</title><rect x="60.5109%" y="901" width="0.0190%" height="15" fill="rgb(243,218,37)" fg:x="146328" fg:w="46"/><text x="60.7609%" y="911.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (46 samples, 0.02%)</title><rect x="60.5109%" y="885" width="0.0190%" height="15" fill="rgb(218,169,10)" fg:x="146328" fg:w="46"/><text x="60.7609%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (46 samples, 0.02%)</title><rect x="60.5109%" y="869" width="0.0190%" height="15" fill="rgb(221,144,10)" fg:x="146328" fg:w="46"/><text x="60.7609%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (46 samples, 0.02%)</title><rect x="60.5109%" y="853" width="0.0190%" height="15" fill="rgb(226,41,38)" fg:x="146328" fg:w="46"/><text x="60.7609%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (46 samples, 0.02%)</title><rect x="60.5109%" y="837" width="0.0190%" height="15" fill="rgb(228,3,1)" fg:x="146328" fg:w="46"/><text x="60.7609%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (46 samples, 0.02%)</title><rect x="60.5109%" y="821" width="0.0190%" height="15" fill="rgb(209,129,12)" fg:x="146328" fg:w="46"/><text x="60.7609%" y="831.50"></text></g><g><title>alloc::alloc::alloc_zeroed (46 samples, 0.02%)</title><rect x="60.5109%" y="805" width="0.0190%" height="15" fill="rgb(213,136,33)" fg:x="146328" fg:w="46"/><text x="60.7609%" y="815.50"></text></g><g><title>calloc (45 samples, 0.02%)</title><rect x="60.5113%" y="789" width="0.0186%" height="15" fill="rgb(209,181,29)" fg:x="146329" fg:w="45"/><text x="60.7613%" y="799.50"></text></g><g><title>imalloc (45 samples, 0.02%)</title><rect x="60.5113%" y="773" width="0.0186%" height="15" fill="rgb(234,173,18)" fg:x="146329" fg:w="45"/><text x="60.7613%" y="783.50"></text></g><g><title>imalloc_body (45 samples, 0.02%)</title><rect x="60.5113%" y="757" width="0.0186%" height="15" fill="rgb(227,73,47)" fg:x="146329" fg:w="45"/><text x="60.7613%" y="767.50"></text></g><g><title>imalloc_no_sample (45 samples, 0.02%)</title><rect x="60.5113%" y="741" width="0.0186%" height="15" fill="rgb(234,9,34)" fg:x="146329" fg:w="45"/><text x="60.7613%" y="751.50"></text></g><g><title>iallocztm (45 samples, 0.02%)</title><rect x="60.5113%" y="725" width="0.0186%" height="15" fill="rgb(235,172,15)" fg:x="146329" fg:w="45"/><text x="60.7613%" y="735.50"></text></g><g><title>arena_malloc (45 samples, 0.02%)</title><rect x="60.5113%" y="709" width="0.0186%" height="15" fill="rgb(245,61,2)" fg:x="146329" fg:w="45"/><text x="60.7613%" y="719.50"></text></g><g><title>tcache_alloc_small (44 samples, 0.02%)</title><rect x="60.5117%" y="693" width="0.0182%" height="15" fill="rgb(238,39,47)" fg:x="146330" fg:w="44"/><text x="60.7617%" y="703.50"></text></g><g><title>cache_bin_alloc_easy (32 samples, 0.01%)</title><rect x="60.5167%" y="677" width="0.0132%" height="15" fill="rgb(234,37,24)" fg:x="146342" fg:w="32"/><text x="60.7667%" y="687.50"></text></g><g><title>bit_set::BitSet&lt;B&gt;::insert (2,140 samples, 0.88%)</title><rect x="60.5299%" y="933" width="0.8850%" height="15" fill="rgb(248,223,24)" fg:x="146374" fg:w="2140"/><text x="60.7799%" y="943.50"></text></g><g><title>cfx_evm::evm::instructions::Instruction::from_u8 (18,841 samples, 7.79%)</title><rect x="61.4148%" y="933" width="7.7913%" height="15" fill="rgb(223,12,15)" fg:x="148514" fg:w="18841"/><text x="61.6648%" y="943.50">cfx_evm::ev..</text></g><g><title>cfx_evm::evm::interpreter::shared_cache::SharedCache::find_jump_and_sub_destinations (36,099 samples, 14.93%)</title><rect x="60.3463%" y="949" width="14.9280%" height="15" fill="rgb(249,6,3)" fg:x="145930" fg:w="36099"/><text x="60.5963%" y="959.50">cfx_evm::evm::interpret..</text></g><g><title>cfx_evm::evm::instructions::Instruction::push_bytes (14,674 samples, 6.07%)</title><rect x="69.2061%" y="933" width="6.0681%" height="15" fill="rgb(237,105,33)" fg:x="167355" fg:w="14674"/><text x="69.4561%" y="943.50">cfx_evm:..</text></g><g><title>lru_cache::LruCache&lt;K,V,S&gt;::insert (40 samples, 0.02%)</title><rect x="75.2743%" y="933" width="0.0165%" height="15" fill="rgb(252,208,35)" fg:x="182029" fg:w="40"/><text x="75.5243%" y="943.50"></text></g><g><title>linked_hash_map::LinkedHashMap&lt;K,V,S&gt;::insert (40 samples, 0.02%)</title><rect x="75.2743%" y="917" width="0.0165%" height="15" fill="rgb(215,181,35)" fg:x="182029" fg:w="40"/><text x="75.5243%" y="927.50"></text></g><g><title>cfx_evm::evm::interpreter::shared_cache::SharedCache::jump_and_sub_destinations (36,206 samples, 14.97%)</title><rect x="60.3322%" y="965" width="14.9722%" height="15" fill="rgb(246,212,3)" fg:x="145896" fg:w="36206"/><text x="60.5822%" y="975.50">cfx_evm::evm::interpret..</text></g><g><title>memory_cache::MemoryLruCache&lt;K,V&gt;::insert (73 samples, 0.03%)</title><rect x="75.2743%" y="949" width="0.0302%" height="15" fill="rgb(247,156,24)" fg:x="182029" fg:w="73"/><text x="75.5243%" y="959.50"></text></g><g><title>lru_cache::LruCache&lt;K,V,S&gt;::remove_lru (33 samples, 0.01%)</title><rect x="75.2908%" y="933" width="0.0136%" height="15" fill="rgb(248,9,31)" fg:x="182069" fg:w="33"/><text x="75.5408%" y="943.50"></text></g><g><title>linked_hash_map::LinkedHashMap&lt;K,V,S&gt;::pop_front (33 samples, 0.01%)</title><rect x="75.2908%" y="917" width="0.0136%" height="15" fill="rgb(234,26,45)" fg:x="182069" fg:w="33"/><text x="75.5408%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (31 samples, 0.01%)</title><rect x="75.2916%" y="901" width="0.0128%" height="15" fill="rgb(249,11,32)" fg:x="182071" fg:w="31"/><text x="75.5416%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (31 samples, 0.01%)</title><rect x="75.2916%" y="885" width="0.0128%" height="15" fill="rgb(249,162,33)" fg:x="182071" fg:w="31"/><text x="75.5416%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (31 samples, 0.01%)</title><rect x="75.2916%" y="869" width="0.0128%" height="15" fill="rgb(232,4,32)" fg:x="182071" fg:w="31"/><text x="75.5416%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (6,838 samples, 2.83%)</title><rect x="75.3045%" y="965" width="2.8277%" height="15" fill="rgb(212,5,45)" fg:x="182102" fg:w="6838"/><text x="75.5545%" y="975.50">co..</text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::step (54,921 samples, 22.71%)</title><rect x="55.4261%" y="997" width="22.7114%" height="15" fill="rgb(227,95,13)" fg:x="134032" fg:w="54921"/><text x="55.6761%" y="1007.50">cfx_evm::evm::interpreter::Interpret..</text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::step_inner (54,921 samples, 22.71%)</title><rect x="55.4261%" y="981" width="22.7114%" height="15" fill="rgb(223,205,10)" fg:x="134032" fg:w="54921"/><text x="55.6761%" y="991.50">cfx_evm::evm::interpreter::Interpret..</text></g><g><title>&lt;cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt; as cfx_evm::vm::Exec&gt;::exec (54,987 samples, 22.74%)</title><rect x="55.4261%" y="1013" width="22.7387%" height="15" fill="rgb(222,178,8)" fg:x="134032" fg:w="54987"/><text x="55.6761%" y="1023.50">&lt;cfx_evm::evm::interpreter::Interpre..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;cfx_evm::evm::interpreter::Interpreter&lt;usize&gt;&gt;&gt; (66 samples, 0.03%)</title><rect x="78.1375%" y="997" width="0.0273%" height="15" fill="rgb(216,13,22)" fg:x="188953" fg:w="66"/><text x="78.3875%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;cfx_evm::evm::interpreter::Interpreter&lt;usize&gt;&gt; (49 samples, 0.02%)</title><rect x="78.1446%" y="981" width="0.0203%" height="15" fill="rgb(240,167,12)" fg:x="188970" fg:w="49"/><text x="78.3946%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;bit_set::BitSet&gt;&gt;&gt; (26 samples, 0.01%)</title><rect x="78.1541%" y="965" width="0.0108%" height="15" fill="rgb(235,68,35)" fg:x="188993" fg:w="26"/><text x="78.4041%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;bit_set::BitSet&gt;&gt; (26 samples, 0.01%)</title><rect x="78.1541%" y="949" width="0.0108%" height="15" fill="rgb(253,40,27)" fg:x="188993" fg:w="26"/><text x="78.4041%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.01%)</title><rect x="78.1541%" y="933" width="0.0108%" height="15" fill="rgb(214,19,28)" fg:x="188993" fg:w="26"/><text x="78.4041%" y="943.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::CheckpointTrait&gt;::checkpoint (32 samples, 0.01%)</title><rect x="78.1653%" y="1013" width="0.0132%" height="15" fill="rgb(210,167,45)" fg:x="189020" fg:w="32"/><text x="78.4153%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (32 samples, 0.01%)</title><rect x="78.1653%" y="997" width="0.0132%" height="15" fill="rgb(232,97,40)" fg:x="189020" fg:w="32"/><text x="78.4153%" y="1007.50"></text></g><g><title>core::ptr::write (32 samples, 0.01%)</title><rect x="78.1653%" y="981" width="0.0132%" height="15" fill="rgb(250,35,23)" fg:x="189020" fg:w="32"/><text x="78.4153%" y="991.50"></text></g><g><title>&lt;core::result::Result&lt;cfx_evm::vm::return_data::GasLeft,cfx_evm::vm::error::Error&gt; as cfx_evm::evm::evm::Finalize&gt;::finalize (25 samples, 0.01%)</title><rect x="78.2186%" y="981" width="0.0103%" height="15" fill="rgb(248,47,53)" fg:x="189149" fg:w="25"/><text x="78.4686%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (58 samples, 0.02%)</title><rect x="78.2289%" y="965" width="0.0240%" height="15" fill="rgb(226,58,50)" fg:x="189174" fg:w="58"/><text x="78.4789%" y="975.50"></text></g><g><title>core::ptr::read (58 samples, 0.02%)</title><rect x="78.2289%" y="949" width="0.0240%" height="15" fill="rgb(217,105,26)" fg:x="189174" fg:w="58"/><text x="78.4789%" y="959.50"></text></g><g><title>cfx_evm::state::substate::FrameStackInfo::pop (86 samples, 0.04%)</title><rect x="78.2289%" y="981" width="0.0356%" height="15" fill="rgb(208,64,1)" fg:x="189174" fg:w="86"/><text x="78.4789%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (28 samples, 0.01%)</title><rect x="78.2529%" y="965" width="0.0116%" height="15" fill="rgb(214,80,1)" fg:x="189232" fg:w="28"/><text x="78.5029%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (28 samples, 0.01%)</title><rect x="78.2529%" y="949" width="0.0116%" height="15" fill="rgb(206,175,26)" fg:x="189232" fg:w="28"/><text x="78.5029%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (28 samples, 0.01%)</title><rect x="78.2529%" y="933" width="0.0116%" height="15" fill="rgb(235,156,37)" fg:x="189232" fg:w="28"/><text x="78.5029%" y="943.50"></text></g><g><title>hashbrown::map::make_hash (28 samples, 0.01%)</title><rect x="78.2529%" y="917" width="0.0116%" height="15" fill="rgb(213,100,9)" fg:x="189232" fg:w="28"/><text x="78.5029%" y="927.50"></text></g><g><title>core::hash::BuildHasher::hash_one (28 samples, 0.01%)</title><rect x="78.2529%" y="901" width="0.0116%" height="15" fill="rgb(241,15,13)" fg:x="189232" fg:w="28"/><text x="78.5029%" y="911.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::process_output (201 samples, 0.08%)</title><rect x="78.1834%" y="1013" width="0.0831%" height="15" fill="rgb(205,97,43)" fg:x="189064" fg:w="201"/><text x="78.4334%" y="1023.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::process_return (201 samples, 0.08%)</title><rect x="78.1834%" y="997" width="0.0831%" height="15" fill="rgb(216,106,32)" fg:x="189064" fg:w="201"/><text x="78.4334%" y="1007.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::exists (68 samples, 0.03%)</title><rect x="78.2703%" y="965" width="0.0281%" height="15" fill="rgb(226,200,8)" fg:x="189274" fg:w="68"/><text x="78.5203%" y="975.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (42 samples, 0.02%)</title><rect x="78.2810%" y="949" width="0.0174%" height="15" fill="rgb(244,54,29)" fg:x="189300" fg:w="42"/><text x="78.5310%" y="959.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::add_balance (96 samples, 0.04%)</title><rect x="78.2674%" y="981" width="0.0397%" height="15" fill="rgb(252,169,12)" fg:x="189267" fg:w="96"/><text x="78.5174%" y="991.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::exists (55 samples, 0.02%)</title><rect x="78.3178%" y="965" width="0.0227%" height="15" fill="rgb(231,199,11)" fg:x="189389" fg:w="55"/><text x="78.5678%" y="975.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (55 samples, 0.02%)</title><rect x="78.3178%" y="949" width="0.0227%" height="15" fill="rgb(233,191,18)" fg:x="189389" fg:w="55"/><text x="78.5678%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (55 samples, 0.02%)</title><rect x="78.3178%" y="933" width="0.0227%" height="15" fill="rgb(215,83,47)" fg:x="189389" fg:w="55"/><text x="78.5678%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (55 samples, 0.02%)</title><rect x="78.3178%" y="917" width="0.0227%" height="15" fill="rgb(251,67,19)" fg:x="189389" fg:w="55"/><text x="78.5678%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (55 samples, 0.02%)</title><rect x="78.3178%" y="901" width="0.0227%" height="15" fill="rgb(240,7,20)" fg:x="189389" fg:w="55"/><text x="78.5678%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (34 samples, 0.01%)</title><rect x="78.3265%" y="885" width="0.0141%" height="15" fill="rgb(210,150,26)" fg:x="189410" fg:w="34"/><text x="78.5765%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (34 samples, 0.01%)</title><rect x="78.3265%" y="869" width="0.0141%" height="15" fill="rgb(228,75,42)" fg:x="189410" fg:w="34"/><text x="78.5765%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (34 samples, 0.01%)</title><rect x="78.3265%" y="853" width="0.0141%" height="15" fill="rgb(237,134,48)" fg:x="189410" fg:w="34"/><text x="78.5765%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (34 samples, 0.01%)</title><rect x="78.3265%" y="837" width="0.0141%" height="15" fill="rgb(205,80,50)" fg:x="189410" fg:w="34"/><text x="78.5765%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (34 samples, 0.01%)</title><rect x="78.3265%" y="821" width="0.0141%" height="15" fill="rgb(217,74,48)" fg:x="189410" fg:w="34"/><text x="78.5765%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.01%)</title><rect x="78.3265%" y="805" width="0.0141%" height="15" fill="rgb(205,82,50)" fg:x="189410" fg:w="34"/><text x="78.5765%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (26 samples, 0.01%)</title><rect x="78.3464%" y="853" width="0.0108%" height="15" fill="rgb(228,1,33)" fg:x="189458" fg:w="26"/><text x="78.5964%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (26 samples, 0.01%)</title><rect x="78.3464%" y="837" width="0.0108%" height="15" fill="rgb(214,50,23)" fg:x="189458" fg:w="26"/><text x="78.5964%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (26 samples, 0.01%)</title><rect x="78.3464%" y="821" width="0.0108%" height="15" fill="rgb(210,62,9)" fg:x="189458" fg:w="26"/><text x="78.5964%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (26 samples, 0.01%)</title><rect x="78.3464%" y="805" width="0.0108%" height="15" fill="rgb(210,104,37)" fg:x="189458" fg:w="26"/><text x="78.5964%" y="815.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (26 samples, 0.01%)</title><rect x="78.3464%" y="789" width="0.0108%" height="15" fill="rgb(232,104,43)" fg:x="189458" fg:w="26"/><text x="78.5964%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.01%)</title><rect x="78.3464%" y="773" width="0.0108%" height="15" fill="rgb(244,52,6)" fg:x="189458" fg:w="26"/><text x="78.5964%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.01%)</title><rect x="78.3464%" y="757" width="0.0108%" height="15" fill="rgb(211,174,52)" fg:x="189458" fg:w="26"/><text x="78.5964%" y="767.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.01%)</title><rect x="78.3464%" y="741" width="0.0108%" height="15" fill="rgb(229,48,4)" fg:x="189458" fg:w="26"/><text x="78.5964%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (35 samples, 0.01%)</title><rect x="78.3464%" y="917" width="0.0145%" height="15" fill="rgb(205,155,16)" fg:x="189458" fg:w="35"/><text x="78.5964%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (35 samples, 0.01%)</title><rect x="78.3464%" y="901" width="0.0145%" height="15" fill="rgb(211,141,53)" fg:x="189458" fg:w="35"/><text x="78.5964%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (35 samples, 0.01%)</title><rect x="78.3464%" y="885" width="0.0145%" height="15" fill="rgb(240,148,11)" fg:x="189458" fg:w="35"/><text x="78.5964%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (35 samples, 0.01%)</title><rect x="78.3464%" y="869" width="0.0145%" height="15" fill="rgb(214,45,23)" fg:x="189458" fg:w="35"/><text x="78.5964%" y="879.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::transfer_exec_balance (249 samples, 0.10%)</title><rect x="78.2666%" y="1013" width="0.1030%" height="15" fill="rgb(248,74,26)" fg:x="189265" fg:w="249"/><text x="78.5166%" y="1023.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::transfer_balance (249 samples, 0.10%)</title><rect x="78.2666%" y="997" width="0.1030%" height="15" fill="rgb(218,121,16)" fg:x="189265" fg:w="249"/><text x="78.5166%" y="1007.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::sub_balance (143 samples, 0.06%)</title><rect x="78.3104%" y="981" width="0.0591%" height="15" fill="rgb(218,10,47)" fg:x="189371" fg:w="143"/><text x="78.5604%" y="991.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (70 samples, 0.03%)</title><rect x="78.3406%" y="965" width="0.0289%" height="15" fill="rgb(227,99,14)" fg:x="189444" fg:w="70"/><text x="78.5906%" y="975.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (70 samples, 0.03%)</title><rect x="78.3406%" y="949" width="0.0289%" height="15" fill="rgb(229,83,46)" fg:x="189444" fg:w="70"/><text x="78.5906%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (70 samples, 0.03%)</title><rect x="78.3406%" y="933" width="0.0289%" height="15" fill="rgb(228,25,1)" fg:x="189444" fg:w="70"/><text x="78.5906%" y="943.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (61 samples, 0.03%)</title><rect x="78.3695%" y="997" width="0.0252%" height="15" fill="rgb(252,190,15)" fg:x="189514" fg:w="61"/><text x="78.6195%" y="1007.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (61 samples, 0.03%)</title><rect x="78.3695%" y="981" width="0.0252%" height="15" fill="rgb(213,103,51)" fg:x="189514" fg:w="61"/><text x="78.6195%" y="991.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (61 samples, 0.03%)</title><rect x="78.3695%" y="965" width="0.0252%" height="15" fill="rgb(220,38,44)" fg:x="189514" fg:w="61"/><text x="78.6195%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (61 samples, 0.03%)</title><rect x="78.3695%" y="949" width="0.0252%" height="15" fill="rgb(210,45,26)" fg:x="189514" fg:w="61"/><text x="78.6195%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (61 samples, 0.03%)</title><rect x="78.3695%" y="933" width="0.0252%" height="15" fill="rgb(205,95,48)" fg:x="189514" fg:w="61"/><text x="78.6195%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (61 samples, 0.03%)</title><rect x="78.3695%" y="917" width="0.0252%" height="15" fill="rgb(225,179,37)" fg:x="189514" fg:w="61"/><text x="78.6195%" y="927.50"></text></g><g><title>core::ptr::write (61 samples, 0.03%)</title><rect x="78.3695%" y="901" width="0.0252%" height="15" fill="rgb(230,209,3)" fg:x="189514" fg:w="61"/><text x="78.6195%" y="911.50"></text></g><g><title>cfx_evm::state::substate::FrameStackInfo::push (82 samples, 0.03%)</title><rect x="78.3695%" y="1013" width="0.0339%" height="15" fill="rgb(248,12,46)" fg:x="189514" fg:w="82"/><text x="78.6195%" y="1023.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::InterpreterParams as core::convert::From&lt;cfx_evm::vm::action_params::ActionParams&gt;&gt;::from (29 samples, 0.01%)</title><rect x="78.4175%" y="965" width="0.0120%" height="15" fill="rgb(234,18,0)" fg:x="189630" fg:w="29"/><text x="78.6675%" y="975.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::exec (154,391 samples, 63.85%)</title><rect x="14.5972%" y="1029" width="63.8452%" height="15" fill="rgb(238,197,14)" fg:x="35299" fg:w="154391"/><text x="14.8472%" y="1039.50">cfx_evm::call_create_frame::frame::CallCreateFrame::exec</text></g><g><title>cfx_evm::vm_factory::VmFactory::create (94 samples, 0.04%)</title><rect x="78.4034%" y="1013" width="0.0389%" height="15" fill="rgb(251,162,48)" fg:x="189596" fg:w="94"/><text x="78.6534%" y="1023.50"></text></g><g><title>cfx_evm::evm::factory::Factory::create (94 samples, 0.04%)</title><rect x="78.4034%" y="997" width="0.0389%" height="15" fill="rgb(237,73,42)" fg:x="189596" fg:w="94"/><text x="78.6534%" y="1007.50"></text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::new (60 samples, 0.02%)</title><rect x="78.4175%" y="981" width="0.0248%" height="15" fill="rgb(211,108,8)" fg:x="189630" fg:w="60"/><text x="78.6675%" y="991.50"></text></g><g><title>cfx_evm::evm::interpreter::stack::VecStack&lt;S&gt;::with_capacity (26 samples, 0.01%)</title><rect x="78.4316%" y="965" width="0.0108%" height="15" fill="rgb(213,45,22)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (26 samples, 0.01%)</title><rect x="78.4316%" y="949" width="0.0108%" height="15" fill="rgb(252,154,5)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.01%)</title><rect x="78.4316%" y="933" width="0.0108%" height="15" fill="rgb(221,79,52)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.01%)</title><rect x="78.4316%" y="917" width="0.0108%" height="15" fill="rgb(229,220,36)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (26 samples, 0.01%)</title><rect x="78.4316%" y="901" width="0.0108%" height="15" fill="rgb(211,17,16)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.01%)</title><rect x="78.4316%" y="885" width="0.0108%" height="15" fill="rgb(222,55,31)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.01%)</title><rect x="78.4316%" y="869" width="0.0108%" height="15" fill="rgb(221,221,31)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="879.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.01%)</title><rect x="78.4316%" y="853" width="0.0108%" height="15" fill="rgb(227,168,26)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="863.50"></text></g><g><title>mallocx (26 samples, 0.01%)</title><rect x="78.4316%" y="837" width="0.0108%" height="15" fill="rgb(224,139,9)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="847.50"></text></g><g><title>imalloc (26 samples, 0.01%)</title><rect x="78.4316%" y="821" width="0.0108%" height="15" fill="rgb(254,172,0)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="831.50"></text></g><g><title>imalloc_body (26 samples, 0.01%)</title><rect x="78.4316%" y="805" width="0.0108%" height="15" fill="rgb(235,203,1)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="815.50"></text></g><g><title>imalloc_no_sample (26 samples, 0.01%)</title><rect x="78.4316%" y="789" width="0.0108%" height="15" fill="rgb(216,205,24)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="799.50"></text></g><g><title>iallocztm (26 samples, 0.01%)</title><rect x="78.4316%" y="773" width="0.0108%" height="15" fill="rgb(233,24,6)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="783.50"></text></g><g><title>arena_malloc (26 samples, 0.01%)</title><rect x="78.4316%" y="757" width="0.0108%" height="15" fill="rgb(244,110,9)" fg:x="189664" fg:w="26"/><text x="78.6816%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (77 samples, 0.03%)</title><rect x="78.4493%" y="981" width="0.0318%" height="15" fill="rgb(239,222,42)" fg:x="189707" fg:w="77"/><text x="78.6993%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (77 samples, 0.03%)</title><rect x="78.4493%" y="965" width="0.0318%" height="15" fill="rgb(218,145,13)" fg:x="189707" fg:w="77"/><text x="78.6993%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (77 samples, 0.03%)</title><rect x="78.4493%" y="949" width="0.0318%" height="15" fill="rgb(207,69,11)" fg:x="189707" fg:w="77"/><text x="78.6993%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (77 samples, 0.03%)</title><rect x="78.4493%" y="933" width="0.0318%" height="15" fill="rgb(220,223,22)" fg:x="189707" fg:w="77"/><text x="78.6993%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.03%)</title><rect x="78.4493%" y="917" width="0.0318%" height="15" fill="rgb(245,102,5)" fg:x="189707" fg:w="77"/><text x="78.6993%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.03%)</title><rect x="78.4493%" y="901" width="0.0318%" height="15" fill="rgb(211,148,2)" fg:x="189707" fg:w="77"/><text x="78.6993%" y="911.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (77 samples, 0.03%)</title><rect x="78.4493%" y="885" width="0.0318%" height="15" fill="rgb(241,13,44)" fg:x="189707" fg:w="77"/><text x="78.6993%" y="895.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::from_trap_error (101 samples, 0.04%)</title><rect x="78.4423%" y="1029" width="0.0418%" height="15" fill="rgb(219,137,21)" fg:x="189690" fg:w="101"/><text x="78.6923%" y="1039.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::new_call_raw (84 samples, 0.03%)</title><rect x="78.4493%" y="1013" width="0.0347%" height="15" fill="rgb(242,206,5)" fg:x="189707" fg:w="84"/><text x="78.6993%" y="1023.50"></text></g><g><title>cfx_evm::internal_contract::components::contract_map::InternalContractMap::contract (84 samples, 0.03%)</title><rect x="78.4493%" y="997" width="0.0347%" height="15" fill="rgb(217,114,22)" fg:x="189707" fg:w="84"/><text x="78.6993%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (38 samples, 0.02%)</title><rect x="81.7249%" y="837" width="0.0157%" height="15" fill="rgb(253,206,42)" fg:x="197628" fg:w="38"/><text x="81.9749%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (36 samples, 0.01%)</title><rect x="81.7257%" y="821" width="0.0149%" height="15" fill="rgb(236,102,18)" fg:x="197630" fg:w="36"/><text x="81.9757%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (36 samples, 0.01%)</title><rect x="81.7257%" y="805" width="0.0149%" height="15" fill="rgb(208,59,49)" fg:x="197630" fg:w="36"/><text x="81.9757%" y="815.50"></text></g><g><title>alloc::alloc::realloc (36 samples, 0.01%)</title><rect x="81.7257%" y="789" width="0.0149%" height="15" fill="rgb(215,194,28)" fg:x="197630" fg:w="36"/><text x="81.9757%" y="799.50"></text></g><g><title>rallocx (33 samples, 0.01%)</title><rect x="81.7270%" y="773" width="0.0136%" height="15" fill="rgb(243,207,11)" fg:x="197633" fg:w="33"/><text x="81.9770%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as cfx_evm::evm::interpreter::memory::Memory&gt;::expand (40 samples, 0.02%)</title><rect x="81.7249%" y="965" width="0.0165%" height="15" fill="rgb(254,179,35)" fg:x="197628" fg:w="40"/><text x="81.9749%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as cfx_evm::evm::interpreter::memory::Memory&gt;::resize (40 samples, 0.02%)</title><rect x="81.7249%" y="949" width="0.0165%" height="15" fill="rgb(235,97,3)" fg:x="197628" fg:w="40"/><text x="81.9749%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (40 samples, 0.02%)</title><rect x="81.7249%" y="933" width="0.0165%" height="15" fill="rgb(215,155,33)" fg:x="197628" fg:w="40"/><text x="81.9749%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (40 samples, 0.02%)</title><rect x="81.7249%" y="917" width="0.0165%" height="15" fill="rgb(223,128,12)" fg:x="197628" fg:w="40"/><text x="81.9749%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (40 samples, 0.02%)</title><rect x="81.7249%" y="901" width="0.0165%" height="15" fill="rgb(208,157,18)" fg:x="197628" fg:w="40"/><text x="81.9749%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (40 samples, 0.02%)</title><rect x="81.7249%" y="885" width="0.0165%" height="15" fill="rgb(249,70,54)" fg:x="197628" fg:w="40"/><text x="81.9749%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (40 samples, 0.02%)</title><rect x="81.7249%" y="869" width="0.0165%" height="15" fill="rgb(244,118,24)" fg:x="197628" fg:w="40"/><text x="81.9749%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (40 samples, 0.02%)</title><rect x="81.7249%" y="853" width="0.0165%" height="15" fill="rgb(211,54,0)" fg:x="197628" fg:w="40"/><text x="81.9749%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (161 samples, 0.07%)</title><rect x="81.7419%" y="965" width="0.0666%" height="15" fill="rgb(245,137,45)" fg:x="197669" fg:w="161"/><text x="81.9919%" y="975.50"></text></g><g><title>cfx_evm::evm::instructions::Instruction::from_u8 (413 samples, 0.17%)</title><rect x="81.8084%" y="965" width="0.1708%" height="15" fill="rgb(232,154,31)" fg:x="197830" fg:w="413"/><text x="82.0584%" y="975.50"></text></g><g><title>cfx_evm::evm::instructions::Instruction::info (650 samples, 0.27%)</title><rect x="81.9792%" y="965" width="0.2688%" height="15" fill="rgb(253,6,39)" fg:x="198243" fg:w="650"/><text x="82.2292%" y="975.50"></text></g><g><title>&lt;cfx_evm::evm::instructions::INSTRUCTIONS as core::ops::deref::Deref&gt;::deref (650 samples, 0.27%)</title><rect x="81.9792%" y="949" width="0.2688%" height="15" fill="rgb(234,183,24)" fg:x="198243" fg:w="650"/><text x="82.2292%" y="959.50"></text></g><g><title>&lt;cfx_evm::evm::instructions::INSTRUCTIONS as core::ops::deref::Deref&gt;::deref::__stability (650 samples, 0.27%)</title><rect x="81.9792%" y="933" width="0.2688%" height="15" fill="rgb(252,84,40)" fg:x="198243" fg:w="650"/><text x="82.2292%" y="943.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (650 samples, 0.27%)</title><rect x="81.9792%" y="917" width="0.2688%" height="15" fill="rgb(224,65,2)" fg:x="198243" fg:w="650"/><text x="82.2292%" y="927.50"></text></g><g><title>spin::once::Once&lt;T&gt;::call_once (650 samples, 0.27%)</title><rect x="81.9792%" y="901" width="0.2688%" height="15" fill="rgb(229,38,24)" fg:x="198243" fg:w="650"/><text x="82.2292%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as cfx_evm::evm::interpreter::memory::Memory&gt;::read (111 samples, 0.05%)</title><rect x="84.1093%" y="949" width="0.0459%" height="15" fill="rgb(218,131,50)" fg:x="203394" fg:w="111"/><text x="84.3593%" y="959.50"></text></g><g><title>&lt;primitive_types::U256 as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (81 samples, 0.03%)</title><rect x="84.1217%" y="933" width="0.0335%" height="15" fill="rgb(233,106,18)" fg:x="203424" fg:w="81"/><text x="84.3717%" y="943.50"></text></g><g><title>primitive_types::U256::from_big_endian (81 samples, 0.03%)</title><rect x="84.1217%" y="917" width="0.0335%" height="15" fill="rgb(220,216,11)" fg:x="203424" fg:w="81"/><text x="84.3717%" y="927.50"></text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::read_u64 (81 samples, 0.03%)</title><rect x="84.1217%" y="901" width="0.0335%" height="15" fill="rgb(251,100,45)" fg:x="203424" fg:w="81"/><text x="84.3717%" y="911.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (81 samples, 0.03%)</title><rect x="84.1217%" y="885" width="0.0335%" height="15" fill="rgb(235,143,32)" fg:x="203424" fg:w="81"/><text x="84.3717%" y="895.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (81 samples, 0.03%)</title><rect x="84.1217%" y="869" width="0.0335%" height="15" fill="rgb(248,124,34)" fg:x="203424" fg:w="81"/><text x="84.3717%" y="879.50"></text></g><g><title> N]&gt;::try_from (81 samples, 0.03%)</title><rect x="84.1217%" y="853" width="0.0335%" height="15" fill="rgb(225,221,4)" fg:x="203424" fg:w="81"/><text x="84.3717%" y="863.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (81 samples, 0.03%)</title><rect x="84.1217%" y="837" width="0.0335%" height="15" fill="rgb(242,27,43)" fg:x="203424" fg:w="81"/><text x="84.3717%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (81 samples, 0.03%)</title><rect x="84.1217%" y="821" width="0.0335%" height="15" fill="rgb(227,54,8)" fg:x="203424" fg:w="81"/><text x="84.3717%" y="831.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied::{{closure}} (81 samples, 0.03%)</title><rect x="84.1217%" y="805" width="0.0335%" height="15" fill="rgb(253,139,49)" fg:x="203424" fg:w="81"/><text x="84.3717%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as cfx_evm::evm::interpreter::memory::Memory&gt;::write (58 samples, 0.02%)</title><rect x="84.1581%" y="949" width="0.0240%" height="15" fill="rgb(231,26,43)" fg:x="203512" fg:w="58"/><text x="84.4081%" y="959.50"></text></g><g><title>primitive_types::U256::to_big_endian (58 samples, 0.02%)</title><rect x="84.1581%" y="933" width="0.0240%" height="15" fill="rgb(207,121,39)" fg:x="203512" fg:w="58"/><text x="84.4081%" y="943.50"></text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::write_u64 (58 samples, 0.02%)</title><rect x="84.1581%" y="917" width="0.0240%" height="15" fill="rgb(223,101,35)" fg:x="203512" fg:w="58"/><text x="84.4081%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (58 samples, 0.02%)</title><rect x="84.1581%" y="901" width="0.0240%" height="15" fill="rgb(232,87,23)" fg:x="203512" fg:w="58"/><text x="84.4081%" y="911.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::balance (47 samples, 0.02%)</title><rect x="84.1821%" y="949" width="0.0194%" height="15" fill="rgb(225,180,29)" fg:x="203570" fg:w="47"/><text x="84.4321%" y="959.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::balance (31 samples, 0.01%)</title><rect x="84.1887%" y="933" width="0.0128%" height="15" fill="rgb(225,25,17)" fg:x="203586" fg:w="31"/><text x="84.4387%" y="943.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (31 samples, 0.01%)</title><rect x="84.1887%" y="917" width="0.0128%" height="15" fill="rgb(223,8,52)" fg:x="203586" fg:w="31"/><text x="84.4387%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (31 samples, 0.01%)</title><rect x="84.1887%" y="901" width="0.0128%" height="15" fill="rgb(246,42,21)" fg:x="203586" fg:w="31"/><text x="84.4387%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (31 samples, 0.01%)</title><rect x="84.1887%" y="885" width="0.0128%" height="15" fill="rgb(205,64,43)" fg:x="203586" fg:w="31"/><text x="84.4387%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (31 samples, 0.01%)</title><rect x="84.1887%" y="869" width="0.0128%" height="15" fill="rgb(221,160,13)" fg:x="203586" fg:w="31"/><text x="84.4387%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (26 samples, 0.01%)</title><rect x="84.1908%" y="853" width="0.0108%" height="15" fill="rgb(239,58,35)" fg:x="203591" fg:w="26"/><text x="84.4408%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 0.01%)</title><rect x="84.1908%" y="837" width="0.0108%" height="15" fill="rgb(251,26,40)" fg:x="203591" fg:w="26"/><text x="84.4408%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (26 samples, 0.01%)</title><rect x="84.1908%" y="821" width="0.0108%" height="15" fill="rgb(247,0,4)" fg:x="203591" fg:w="26"/><text x="84.4408%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (26 samples, 0.01%)</title><rect x="84.1908%" y="805" width="0.0108%" height="15" fill="rgb(218,130,10)" fg:x="203591" fg:w="26"/><text x="84.4408%" y="815.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (26 samples, 0.01%)</title><rect x="84.1908%" y="789" width="0.0108%" height="15" fill="rgb(239,32,7)" fg:x="203591" fg:w="26"/><text x="84.4408%" y="799.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (26 samples, 0.01%)</title><rect x="84.1908%" y="773" width="0.0108%" height="15" fill="rgb(210,192,24)" fg:x="203591" fg:w="26"/><text x="84.4408%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (26 samples, 0.01%)</title><rect x="84.1908%" y="757" width="0.0108%" height="15" fill="rgb(226,212,17)" fg:x="203591" fg:w="26"/><text x="84.4408%" y="767.50"></text></g><g><title>&lt;cfx_types::AddressWithSpace as core::cmp::PartialEq&gt;::eq (26 samples, 0.01%)</title><rect x="84.1908%" y="741" width="0.0108%" height="15" fill="rgb(219,201,28)" fg:x="203591" fg:w="26"/><text x="84.4408%" y="751.50"></text></g><g><title>&lt;primitive_types::H160 as core::cmp::PartialEq&gt;::eq (26 samples, 0.01%)</title><rect x="84.1908%" y="725" width="0.0108%" height="15" fill="rgb(235,207,41)" fg:x="203591" fg:w="26"/><text x="84.4408%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (26 samples, 0.01%)</title><rect x="84.1908%" y="709" width="0.0108%" height="15" fill="rgb(241,95,54)" fg:x="203591" fg:w="26"/><text x="84.4408%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (26 samples, 0.01%)</title><rect x="84.1908%" y="693" width="0.0108%" height="15" fill="rgb(248,12,23)" fg:x="203591" fg:w="26"/><text x="84.4408%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (26 samples, 0.01%)</title><rect x="84.1908%" y="677" width="0.0108%" height="15" fill="rgb(228,173,4)" fg:x="203591" fg:w="26"/><text x="84.4408%" y="687.50"></text></g><g><title>cfx_evm::state::State::update_account_cache (44 samples, 0.02%)</title><rect x="84.2106%" y="901" width="0.0182%" height="15" fill="rgb(254,99,5)" fg:x="203639" fg:w="44"/><text x="84.4606%" y="911.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::cache_code (44 samples, 0.02%)</title><rect x="84.2106%" y="885" width="0.0182%" height="15" fill="rgb(212,184,17)" fg:x="203639" fg:w="44"/><text x="84.4606%" y="895.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_code (42 samples, 0.02%)</title><rect x="84.2115%" y="869" width="0.0174%" height="15" fill="rgb(252,174,1)" fg:x="203641" fg:w="42"/><text x="84.4615%" y="879.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get (42 samples, 0.02%)</title><rect x="84.2115%" y="853" width="0.0174%" height="15" fill="rgb(241,118,51)" fg:x="203641" fg:w="42"/><text x="84.4615%" y="863.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_account (32 samples, 0.01%)</title><rect x="84.2288%" y="901" width="0.0132%" height="15" fill="rgb(227,94,47)" fg:x="203683" fg:w="32"/><text x="84.4788%" y="911.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::code (133 samples, 0.05%)</title><rect x="84.2028%" y="933" width="0.0550%" height="15" fill="rgb(229,104,2)" fg:x="203620" fg:w="133"/><text x="84.4528%" y="943.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (133 samples, 0.05%)</title><rect x="84.2028%" y="917" width="0.0550%" height="15" fill="rgb(219,28,31)" fg:x="203620" fg:w="133"/><text x="84.4528%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (34 samples, 0.01%)</title><rect x="84.2437%" y="901" width="0.0141%" height="15" fill="rgb(233,109,36)" fg:x="203719" fg:w="34"/><text x="84.4937%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (34 samples, 0.01%)</title><rect x="84.2437%" y="885" width="0.0141%" height="15" fill="rgb(246,88,11)" fg:x="203719" fg:w="34"/><text x="84.4937%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (34 samples, 0.01%)</title><rect x="84.2437%" y="869" width="0.0141%" height="15" fill="rgb(209,212,17)" fg:x="203719" fg:w="34"/><text x="84.4937%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (25 samples, 0.01%)</title><rect x="84.2474%" y="853" width="0.0103%" height="15" fill="rgb(243,59,29)" fg:x="203728" fg:w="25"/><text x="84.4974%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 0.01%)</title><rect x="84.2474%" y="837" width="0.0103%" height="15" fill="rgb(244,205,48)" fg:x="203728" fg:w="25"/><text x="84.4974%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (25 samples, 0.01%)</title><rect x="84.2474%" y="821" width="0.0103%" height="15" fill="rgb(227,30,6)" fg:x="203728" fg:w="25"/><text x="84.4974%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (25 samples, 0.01%)</title><rect x="84.2474%" y="805" width="0.0103%" height="15" fill="rgb(220,205,48)" fg:x="203728" fg:w="25"/><text x="84.4974%" y="815.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (25 samples, 0.01%)</title><rect x="84.2474%" y="789" width="0.0103%" height="15" fill="rgb(250,94,14)" fg:x="203728" fg:w="25"/><text x="84.4974%" y="799.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (25 samples, 0.01%)</title><rect x="84.2474%" y="773" width="0.0103%" height="15" fill="rgb(216,119,42)" fg:x="203728" fg:w="25"/><text x="84.4974%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (25 samples, 0.01%)</title><rect x="84.2474%" y="757" width="0.0103%" height="15" fill="rgb(232,155,0)" fg:x="203728" fg:w="25"/><text x="84.4974%" y="767.50"></text></g><g><title>&lt;cfx_types::AddressWithSpace as core::cmp::PartialEq&gt;::eq (25 samples, 0.01%)</title><rect x="84.2474%" y="741" width="0.0103%" height="15" fill="rgb(212,24,32)" fg:x="203728" fg:w="25"/><text x="84.4974%" y="751.50"></text></g><g><title>&lt;primitive_types::H160 as core::cmp::PartialEq&gt;::eq (25 samples, 0.01%)</title><rect x="84.2474%" y="725" width="0.0103%" height="15" fill="rgb(216,69,20)" fg:x="203728" fg:w="25"/><text x="84.4974%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (25 samples, 0.01%)</title><rect x="84.2474%" y="709" width="0.0103%" height="15" fill="rgb(229,73,31)" fg:x="203728" fg:w="25"/><text x="84.4974%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (25 samples, 0.01%)</title><rect x="84.2474%" y="693" width="0.0103%" height="15" fill="rgb(224,219,20)" fg:x="203728" fg:w="25"/><text x="84.4974%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (25 samples, 0.01%)</title><rect x="84.2474%" y="677" width="0.0103%" height="15" fill="rgb(215,146,41)" fg:x="203728" fg:w="25"/><text x="84.4974%" y="687.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::code_hash (34 samples, 0.01%)</title><rect x="84.2578%" y="933" width="0.0141%" height="15" fill="rgb(244,71,31)" fg:x="203753" fg:w="34"/><text x="84.5078%" y="943.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (34 samples, 0.01%)</title><rect x="84.2578%" y="917" width="0.0141%" height="15" fill="rgb(224,24,11)" fg:x="203753" fg:w="34"/><text x="84.5078%" y="927.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::call (246 samples, 0.10%)</title><rect x="84.2015%" y="949" width="0.1017%" height="15" fill="rgb(229,76,15)" fg:x="203617" fg:w="246"/><text x="84.4515%" y="959.50"></text></g><g><title>cfx_evm::machine::Machine::internal_contracts (49 samples, 0.02%)</title><rect x="84.2830%" y="933" width="0.0203%" height="15" fill="rgb(209,93,2)" fg:x="203814" fg:w="49"/><text x="84.5330%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (49 samples, 0.02%)</title><rect x="84.2830%" y="917" width="0.0203%" height="15" fill="rgb(216,200,50)" fg:x="203814" fg:w="49"/><text x="84.5330%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (49 samples, 0.02%)</title><rect x="84.2830%" y="901" width="0.0203%" height="15" fill="rgb(211,67,34)" fg:x="203814" fg:w="49"/><text x="84.5330%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (49 samples, 0.02%)</title><rect x="84.2830%" y="885" width="0.0203%" height="15" fill="rgb(225,87,47)" fg:x="203814" fg:w="49"/><text x="84.5330%" y="895.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::get_raw (30 samples, 0.01%)</title><rect x="84.3111%" y="837" width="0.0124%" height="15" fill="rgb(217,185,16)" fg:x="203882" fg:w="30"/><text x="84.5611%" y="847.50"></text></g><g><title>rlp::rlpin::Rlp::as_val (27 samples, 0.01%)</title><rect x="84.3260%" y="773" width="0.0112%" height="15" fill="rgb(205,0,0)" fg:x="203918" fg:w="27"/><text x="84.5760%" y="783.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Decodable for alloc::vec::Vec&lt;u8&gt;&gt;::decode (27 samples, 0.01%)</title><rect x="84.3260%" y="757" width="0.0112%" height="15" fill="rgb(207,116,45)" fg:x="203918" fg:w="27"/><text x="84.5760%" y="767.50"></text></g><g><title>cfx_evm::state::State::update_account_cache (84 samples, 0.03%)</title><rect x="84.3082%" y="901" width="0.0347%" height="15" fill="rgb(221,156,26)" fg:x="203875" fg:w="84"/><text x="84.5582%" y="911.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::cache_code (80 samples, 0.03%)</title><rect x="84.3099%" y="885" width="0.0331%" height="15" fill="rgb(213,140,4)" fg:x="203879" fg:w="80"/><text x="84.5599%" y="895.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_code (79 samples, 0.03%)</title><rect x="84.3103%" y="869" width="0.0327%" height="15" fill="rgb(231,224,15)" fg:x="203880" fg:w="79"/><text x="84.5603%" y="879.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get (79 samples, 0.03%)</title><rect x="84.3103%" y="853" width="0.0327%" height="15" fill="rgb(244,76,20)" fg:x="203880" fg:w="79"/><text x="84.5603%" y="863.50"></text></g><g><title>rlp::decode (44 samples, 0.02%)</title><rect x="84.3248%" y="837" width="0.0182%" height="15" fill="rgb(238,117,7)" fg:x="203915" fg:w="44"/><text x="84.5748%" y="847.50"></text></g><g><title>rlp::rlpin::Rlp::as_val (44 samples, 0.02%)</title><rect x="84.3248%" y="821" width="0.0182%" height="15" fill="rgb(235,1,10)" fg:x="203915" fg:w="44"/><text x="84.5748%" y="831.50"></text></g><g><title>&lt;primitives::account::CodeInfo as rlp::traits::Decodable&gt;::decode (44 samples, 0.02%)</title><rect x="84.3248%" y="805" width="0.0182%" height="15" fill="rgb(216,165,6)" fg:x="203915" fg:w="44"/><text x="84.5748%" y="815.50"></text></g><g><title>rlp::rlpin::Rlp::val_at (41 samples, 0.02%)</title><rect x="84.3260%" y="789" width="0.0170%" height="15" fill="rgb(246,91,35)" fg:x="203918" fg:w="41"/><text x="84.5760%" y="799.50"></text></g><g><title>&lt;&amp;mut aptos_evm::state::ViewWrapper&lt;S&gt; as cfx_storage::StorageTrait&gt;::get (33 samples, 0.01%)</title><rect x="84.3463%" y="853" width="0.0136%" height="15" fill="rgb(228,96,24)" fg:x="203967" fg:w="33"/><text x="84.5963%" y="863.50"></text></g><g><title>&lt;cfx_storage::StorageKeyWrapper&lt;T,Key&gt; as cfx_storage::StorageTrait&gt;::get (34 samples, 0.01%)</title><rect x="84.3463%" y="869" width="0.0141%" height="15" fill="rgb(254,217,53)" fg:x="203967" fg:w="34"/><text x="84.5963%" y="879.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::get_raw (46 samples, 0.02%)</title><rect x="84.3438%" y="885" width="0.0190%" height="15" fill="rgb(209,60,0)" fg:x="203961" fg:w="46"/><text x="84.5938%" y="895.50"></text></g><g><title>primitives::account::_IMPL_RLP_DECODABLE_FOR_EthereumAccount::&lt;impl rlp::traits::Decodable for primitives::account::EthereumAccount&gt;::decode (30 samples, 0.01%)</title><rect x="84.3645%" y="869" width="0.0124%" height="15" fill="rgb(250,93,26)" fg:x="204011" fg:w="30"/><text x="84.6145%" y="879.50"></text></g><g><title>rlp::rlpin::Rlp::val_at (30 samples, 0.01%)</title><rect x="84.3645%" y="853" width="0.0124%" height="15" fill="rgb(211,9,40)" fg:x="204011" fg:w="30"/><text x="84.6145%" y="863.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_account (109 samples, 0.05%)</title><rect x="84.3430%" y="901" width="0.0451%" height="15" fill="rgb(242,57,20)" fg:x="203959" fg:w="109"/><text x="84.5930%" y="911.50"></text></g><g><title>primitives::account::Account::new_from_rlp (57 samples, 0.02%)</title><rect x="84.3645%" y="885" width="0.0236%" height="15" fill="rgb(248,85,48)" fg:x="204011" fg:w="57"/><text x="84.6145%" y="895.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (27 samples, 0.01%)</title><rect x="84.3769%" y="869" width="0.0112%" height="15" fill="rgb(212,117,2)" fg:x="204041" fg:w="27"/><text x="84.6269%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (26 samples, 0.01%)</title><rect x="84.3773%" y="853" width="0.0108%" height="15" fill="rgb(243,19,3)" fg:x="204042" fg:w="26"/><text x="84.6273%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 0.01%)</title><rect x="84.3773%" y="837" width="0.0108%" height="15" fill="rgb(232,217,24)" fg:x="204042" fg:w="26"/><text x="84.6273%" y="847.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.01%)</title><rect x="84.3773%" y="821" width="0.0108%" height="15" fill="rgb(224,175,40)" fg:x="204042" fg:w="26"/><text x="84.6273%" y="831.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::code_size (251 samples, 0.10%)</title><rect x="84.3041%" y="933" width="0.1038%" height="15" fill="rgb(212,162,32)" fg:x="203865" fg:w="251"/><text x="84.5541%" y="943.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (251 samples, 0.10%)</title><rect x="84.3041%" y="917" width="0.1038%" height="15" fill="rgb(215,9,4)" fg:x="203865" fg:w="251"/><text x="84.5541%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (25 samples, 0.01%)</title><rect x="84.3976%" y="901" width="0.0103%" height="15" fill="rgb(242,42,7)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (25 samples, 0.01%)</title><rect x="84.3976%" y="885" width="0.0103%" height="15" fill="rgb(242,184,45)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (25 samples, 0.01%)</title><rect x="84.3976%" y="869" width="0.0103%" height="15" fill="rgb(228,111,51)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (25 samples, 0.01%)</title><rect x="84.3976%" y="853" width="0.0103%" height="15" fill="rgb(236,147,17)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 0.01%)</title><rect x="84.3976%" y="837" width="0.0103%" height="15" fill="rgb(210,75,22)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (25 samples, 0.01%)</title><rect x="84.3976%" y="821" width="0.0103%" height="15" fill="rgb(217,159,45)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (25 samples, 0.01%)</title><rect x="84.3976%" y="805" width="0.0103%" height="15" fill="rgb(245,165,53)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="815.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (25 samples, 0.01%)</title><rect x="84.3976%" y="789" width="0.0103%" height="15" fill="rgb(251,190,50)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="799.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (25 samples, 0.01%)</title><rect x="84.3976%" y="773" width="0.0103%" height="15" fill="rgb(208,203,29)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (25 samples, 0.01%)</title><rect x="84.3976%" y="757" width="0.0103%" height="15" fill="rgb(207,209,35)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="767.50"></text></g><g><title>&lt;cfx_types::AddressWithSpace as core::cmp::PartialEq&gt;::eq (25 samples, 0.01%)</title><rect x="84.3976%" y="741" width="0.0103%" height="15" fill="rgb(230,144,49)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="751.50"></text></g><g><title>&lt;primitive_types::H160 as core::cmp::PartialEq&gt;::eq (25 samples, 0.01%)</title><rect x="84.3976%" y="725" width="0.0103%" height="15" fill="rgb(229,31,6)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (25 samples, 0.01%)</title><rect x="84.3976%" y="709" width="0.0103%" height="15" fill="rgb(251,129,24)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (25 samples, 0.01%)</title><rect x="84.3976%" y="693" width="0.0103%" height="15" fill="rgb(235,105,15)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (25 samples, 0.01%)</title><rect x="84.3976%" y="677" width="0.0103%" height="15" fill="rgb(216,52,43)" fg:x="204091" fg:w="25"/><text x="84.6476%" y="687.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::extcodesize (270 samples, 0.11%)</title><rect x="84.3041%" y="949" width="0.1117%" height="15" fill="rgb(238,144,41)" fg:x="203865" fg:w="270"/><text x="84.5541%" y="959.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (39 samples, 0.02%)</title><rect x="84.4290%" y="885" width="0.0161%" height="15" fill="rgb(243,63,9)" fg:x="204167" fg:w="39"/><text x="84.6790%" y="895.50"></text></g><g><title>cfx_evm::state::State::require_exists (58 samples, 0.02%)</title><rect x="84.4273%" y="917" width="0.0240%" height="15" fill="rgb(246,208,1)" fg:x="204163" fg:w="58"/><text x="84.6773%" y="927.50"></text></g><g><title>cfx_evm::state::State::require_or_set (58 samples, 0.02%)</title><rect x="84.4273%" y="901" width="0.0240%" height="15" fill="rgb(233,182,18)" fg:x="204163" fg:w="58"/><text x="84.6773%" y="911.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::set_storage (95 samples, 0.04%)</title><rect x="84.4203%" y="949" width="0.0393%" height="15" fill="rgb(242,224,8)" fg:x="204146" fg:w="95"/><text x="84.6703%" y="959.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::set_storage (95 samples, 0.04%)</title><rect x="84.4203%" y="933" width="0.0393%" height="15" fill="rgb(243,54,37)" fg:x="204146" fg:w="95"/><text x="84.6703%" y="943.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::EvmPath&gt;::serialize (37 samples, 0.02%)</title><rect x="84.4852%" y="629" width="0.0153%" height="15" fill="rgb(233,192,12)" fg:x="204303" fg:w="37"/><text x="84.7352%" y="639.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (36 samples, 0.01%)</title><rect x="84.4856%" y="613" width="0.0149%" height="15" fill="rgb(251,192,53)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (36 samples, 0.01%)</title><rect x="84.4856%" y="597" width="0.0149%" height="15" fill="rgb(246,141,26)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (36 samples, 0.01%)</title><rect x="84.4856%" y="581" width="0.0149%" height="15" fill="rgb(239,195,19)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (36 samples, 0.01%)</title><rect x="84.4856%" y="565" width="0.0149%" height="15" fill="rgb(241,16,39)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (36 samples, 0.01%)</title><rect x="84.4856%" y="549" width="0.0149%" height="15" fill="rgb(223,13,53)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (36 samples, 0.01%)</title><rect x="84.4856%" y="533" width="0.0149%" height="15" fill="rgb(214,227,0)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (36 samples, 0.01%)</title><rect x="84.4856%" y="517" width="0.0149%" height="15" fill="rgb(228,103,26)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (36 samples, 0.01%)</title><rect x="84.4856%" y="501" width="0.0149%" height="15" fill="rgb(254,177,53)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (36 samples, 0.01%)</title><rect x="84.4856%" y="485" width="0.0149%" height="15" fill="rgb(208,201,34)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (36 samples, 0.01%)</title><rect x="84.4856%" y="469" width="0.0149%" height="15" fill="rgb(212,39,5)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (36 samples, 0.01%)</title><rect x="84.4856%" y="453" width="0.0149%" height="15" fill="rgb(246,117,3)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="463.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (36 samples, 0.01%)</title><rect x="84.4856%" y="437" width="0.0149%" height="15" fill="rgb(244,118,39)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (36 samples, 0.01%)</title><rect x="84.4856%" y="421" width="0.0149%" height="15" fill="rgb(241,64,10)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (36 samples, 0.01%)</title><rect x="84.4856%" y="405" width="0.0149%" height="15" fill="rgb(229,39,44)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (36 samples, 0.01%)</title><rect x="84.4856%" y="389" width="0.0149%" height="15" fill="rgb(230,226,3)" fg:x="204304" fg:w="36"/><text x="84.7356%" y="399.50"></text></g><g><title>bcs::ser::to_bytes (48 samples, 0.02%)</title><rect x="84.4852%" y="693" width="0.0198%" height="15" fill="rgb(222,13,42)" fg:x="204303" fg:w="48"/><text x="84.7352%" y="703.50"></text></g><g><title>bcs::ser::serialize_into (48 samples, 0.02%)</title><rect x="84.4852%" y="677" width="0.0198%" height="15" fill="rgb(247,180,54)" fg:x="204303" fg:w="48"/><text x="84.7352%" y="687.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (48 samples, 0.02%)</title><rect x="84.4852%" y="661" width="0.0198%" height="15" fill="rgb(205,96,16)" fg:x="204303" fg:w="48"/><text x="84.7352%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (48 samples, 0.02%)</title><rect x="84.4852%" y="645" width="0.0198%" height="15" fill="rgb(205,100,21)" fg:x="204303" fg:w="48"/><text x="84.7352%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (57 samples, 0.02%)</title><rect x="84.4836%" y="757" width="0.0236%" height="15" fill="rgb(248,51,4)" fg:x="204299" fg:w="57"/><text x="84.7336%" y="767.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::state_store::state_key::StateKey&gt;::from (56 samples, 0.02%)</title><rect x="84.4840%" y="741" width="0.0232%" height="15" fill="rgb(217,197,30)" fg:x="204300" fg:w="56"/><text x="84.7340%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (56 samples, 0.02%)</title><rect x="84.4840%" y="725" width="0.0232%" height="15" fill="rgb(240,179,40)" fg:x="204300" fg:w="56"/><text x="84.7340%" y="735.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::access_path::AccessPath&gt;::from (55 samples, 0.02%)</title><rect x="84.4844%" y="709" width="0.0227%" height="15" fill="rgb(212,185,35)" fg:x="204301" fg:w="55"/><text x="84.7344%" y="719.50"></text></g><g><title>&lt;cfx_storage::StorageKeyWrapper&lt;T,Key&gt; as cfx_storage::StorageTrait&gt;::get (78 samples, 0.03%)</title><rect x="84.4753%" y="789" width="0.0323%" height="15" fill="rgb(251,222,31)" fg:x="204279" fg:w="78"/><text x="84.7253%" y="799.50"></text></g><g><title>&lt;&amp;mut aptos_evm::state::ViewWrapper&lt;S&gt; as cfx_storage::StorageTrait&gt;::get (76 samples, 0.03%)</title><rect x="84.4761%" y="773" width="0.0314%" height="15" fill="rgb(208,140,36)" fg:x="204281" fg:w="76"/><text x="84.7261%" y="783.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::get_raw (87 samples, 0.04%)</title><rect x="84.4736%" y="805" width="0.0360%" height="15" fill="rgb(220,148,1)" fg:x="204275" fg:w="87"/><text x="84.7236%" y="815.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get (106 samples, 0.04%)</title><rect x="84.4732%" y="821" width="0.0438%" height="15" fill="rgb(254,4,28)" fg:x="204274" fg:w="106"/><text x="84.7232%" y="831.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::storage_at::{{closure}} (149 samples, 0.06%)</title><rect x="84.4625%" y="901" width="0.0616%" height="15" fill="rgb(222,185,44)" fg:x="204248" fg:w="149"/><text x="84.7125%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (149 samples, 0.06%)</title><rect x="84.4625%" y="885" width="0.0616%" height="15" fill="rgb(215,74,39)" fg:x="204248" fg:w="149"/><text x="84.7125%" y="895.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::storage_at::{{closure}}::{{closure}} (149 samples, 0.06%)</title><rect x="84.4625%" y="869" width="0.0616%" height="15" fill="rgb(247,86,4)" fg:x="204248" fg:w="149"/><text x="84.7125%" y="879.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::storage_at (146 samples, 0.06%)</title><rect x="84.4637%" y="853" width="0.0604%" height="15" fill="rgb(231,105,32)" fg:x="204251" fg:w="146"/><text x="84.7137%" y="863.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::get_and_cache_storage (124 samples, 0.05%)</title><rect x="84.4728%" y="837" width="0.0513%" height="15" fill="rgb(222,65,35)" fg:x="204273" fg:w="124"/><text x="84.7228%" y="847.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::storage_at (157 samples, 0.06%)</title><rect x="84.4608%" y="949" width="0.0649%" height="15" fill="rgb(218,145,35)" fg:x="204244" fg:w="157"/><text x="84.7108%" y="959.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::storage_at (157 samples, 0.06%)</title><rect x="84.4608%" y="933" width="0.0649%" height="15" fill="rgb(208,7,15)" fg:x="204244" fg:w="157"/><text x="84.7108%" y="943.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (153 samples, 0.06%)</title><rect x="84.4625%" y="917" width="0.0633%" height="15" fill="rgb(209,83,13)" fg:x="204248" fg:w="153"/><text x="84.7125%" y="927.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::stack::VecStack&lt;S&gt; as cfx_evm::evm::interpreter::stack::Stack&lt;S&gt;&gt;::pop_back (1,222 samples, 0.51%)</title><rect x="84.5282%" y="949" width="0.5053%" height="15" fill="rgb(218,3,10)" fg:x="204407" fg:w="1222"/><text x="84.7782%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1,222 samples, 0.51%)</title><rect x="84.5282%" y="933" width="0.5053%" height="15" fill="rgb(211,219,4)" fg:x="204407" fg:w="1222"/><text x="84.7782%" y="943.50"></text></g><g><title>core::ptr::read (1,222 samples, 0.51%)</title><rect x="84.5282%" y="917" width="0.5053%" height="15" fill="rgb(228,194,12)" fg:x="204407" fg:w="1222"/><text x="84.7782%" y="927.50"></text></g><g><title>&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (89 samples, 0.04%)</title><rect x="85.0431%" y="949" width="0.0368%" height="15" fill="rgb(210,175,7)" fg:x="205652" fg:w="89"/><text x="85.2931%" y="959.50"></text></g><g><title>cfx_evm::evm::interpreter::CodeReader::read (1,002 samples, 0.41%)</title><rect x="85.0807%" y="949" width="0.4144%" height="15" fill="rgb(243,132,6)" fg:x="205743" fg:w="1002"/><text x="85.3307%" y="959.50"></text></g><g><title>&lt;primitive_types::U256 as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (1,002 samples, 0.41%)</title><rect x="85.0807%" y="933" width="0.4144%" height="15" fill="rgb(207,72,18)" fg:x="205743" fg:w="1002"/><text x="85.3307%" y="943.50"></text></g><g><title>primitive_types::U256::from_big_endian (1,002 samples, 0.41%)</title><rect x="85.0807%" y="917" width="0.4144%" height="15" fill="rgb(236,1,18)" fg:x="205743" fg:w="1002"/><text x="85.3307%" y="927.50"></text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::read_u64 (1,002 samples, 0.41%)</title><rect x="85.0807%" y="901" width="0.4144%" height="15" fill="rgb(227,0,18)" fg:x="205743" fg:w="1002"/><text x="85.3307%" y="911.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1,002 samples, 0.41%)</title><rect x="85.0807%" y="885" width="0.4144%" height="15" fill="rgb(247,37,5)" fg:x="205743" fg:w="1002"/><text x="85.3307%" y="895.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (1,002 samples, 0.41%)</title><rect x="85.0807%" y="869" width="0.4144%" height="15" fill="rgb(237,179,24)" fg:x="205743" fg:w="1002"/><text x="85.3307%" y="879.50"></text></g><g><title> N]&gt;::try_from (1,002 samples, 0.41%)</title><rect x="85.0807%" y="853" width="0.4144%" height="15" fill="rgb(226,53,20)" fg:x="205743" fg:w="1002"/><text x="85.3307%" y="863.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (1,002 samples, 0.41%)</title><rect x="85.0807%" y="837" width="0.4144%" height="15" fill="rgb(247,75,7)" fg:x="205743" fg:w="1002"/><text x="85.3307%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1,002 samples, 0.41%)</title><rect x="85.0807%" y="821" width="0.4144%" height="15" fill="rgb(233,96,12)" fg:x="205743" fg:w="1002"/><text x="85.3307%" y="831.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied::{{closure}} (1,002 samples, 0.41%)</title><rect x="85.0807%" y="805" width="0.4144%" height="15" fill="rgb(224,125,0)" fg:x="205743" fg:w="1002"/><text x="85.3307%" y="815.50"></text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::copy_data_to_memory (27 samples, 0.01%)</title><rect x="85.4951%" y="949" width="0.0112%" height="15" fill="rgb(224,92,25)" fg:x="206745" fg:w="27"/><text x="85.7451%" y="959.50"></text></g><g><title>core::cmp::PartialOrd::ge (84 samples, 0.03%)</title><rect x="85.5161%" y="949" width="0.0347%" height="15" fill="rgb(224,42,24)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="959.50"></text></g><g><title>&lt;primitive_types::U256 as core::cmp::PartialOrd&gt;::partial_cmp (84 samples, 0.03%)</title><rect x="85.5161%" y="933" width="0.0347%" height="15" fill="rgb(234,132,49)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="943.50"></text></g><g><title>&lt;primitive_types::U256 as core::cmp::Ord&gt;::cmp (84 samples, 0.03%)</title><rect x="85.5161%" y="917" width="0.0347%" height="15" fill="rgb(248,100,35)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (84 samples, 0.03%)</title><rect x="85.5161%" y="901" width="0.0347%" height="15" fill="rgb(239,94,40)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (84 samples, 0.03%)</title><rect x="85.5161%" y="885" width="0.0347%" height="15" fill="rgb(235,139,28)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="895.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (84 samples, 0.03%)</title><rect x="85.5161%" y="869" width="0.0347%" height="15" fill="rgb(217,144,7)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (84 samples, 0.03%)</title><rect x="85.5161%" y="853" width="0.0347%" height="15" fill="rgb(227,55,4)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (84 samples, 0.03%)</title><rect x="85.5161%" y="837" width="0.0347%" height="15" fill="rgb(252,82,54)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="847.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (84 samples, 0.03%)</title><rect x="85.5161%" y="821" width="0.0347%" height="15" fill="rgb(245,172,4)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (84 samples, 0.03%)</title><rect x="85.5161%" y="805" width="0.0347%" height="15" fill="rgb(207,26,27)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="815.50"></text></g><g><title>core::iter::traits::iterator::iter_compare::compare::{{closure}} (84 samples, 0.03%)</title><rect x="85.5161%" y="789" width="0.0347%" height="15" fill="rgb(252,98,18)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by::compare::{{closure}} (84 samples, 0.03%)</title><rect x="85.5161%" y="773" width="0.0347%" height="15" fill="rgb(244,8,26)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp::{{closure}} (84 samples, 0.03%)</title><rect x="85.5161%" y="757" width="0.0347%" height="15" fill="rgb(237,173,45)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (84 samples, 0.03%)</title><rect x="85.5161%" y="741" width="0.0347%" height="15" fill="rgb(208,213,49)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (84 samples, 0.03%)</title><rect x="85.5161%" y="725" width="0.0347%" height="15" fill="rgb(212,122,37)" fg:x="206796" fg:w="84"/><text x="85.7661%" y="735.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (39 samples, 0.02%)</title><rect x="85.5612%" y="917" width="0.0161%" height="15" fill="rgb(213,80,17)" fg:x="206905" fg:w="39"/><text x="85.8112%" y="927.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (38 samples, 0.02%)</title><rect x="85.5616%" y="901" width="0.0157%" height="15" fill="rgb(206,210,43)" fg:x="206906" fg:w="38"/><text x="85.8116%" y="911.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (38 samples, 0.02%)</title><rect x="85.5616%" y="885" width="0.0157%" height="15" fill="rgb(229,214,3)" fg:x="206906" fg:w="38"/><text x="85.8116%" y="895.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (37 samples, 0.02%)</title><rect x="85.5620%" y="869" width="0.0153%" height="15" fill="rgb(235,213,29)" fg:x="206907" fg:w="37"/><text x="85.8120%" y="879.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (37 samples, 0.02%)</title><rect x="85.5620%" y="853" width="0.0153%" height="15" fill="rgb(248,135,26)" fg:x="206907" fg:w="37"/><text x="85.8120%" y="863.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (37 samples, 0.02%)</title><rect x="85.5620%" y="837" width="0.0153%" height="15" fill="rgb(242,188,12)" fg:x="206907" fg:w="37"/><text x="85.8120%" y="847.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (36 samples, 0.01%)</title><rect x="85.5625%" y="821" width="0.0149%" height="15" fill="rgb(245,38,12)" fg:x="206908" fg:w="36"/><text x="85.8125%" y="831.50"></text></g><g><title>keccak_hash::keccak (42 samples, 0.02%)</title><rect x="85.5604%" y="949" width="0.0174%" height="15" fill="rgb(218,42,13)" fg:x="206903" fg:w="42"/><text x="85.8104%" y="959.50"></text></g><g><title>keccak_hash::write_keccak (42 samples, 0.02%)</title><rect x="85.5604%" y="933" width="0.0174%" height="15" fill="rgb(238,132,49)" fg:x="206903" fg:w="42"/><text x="85.8104%" y="943.50"></text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::exec_instruction (8,084 samples, 3.34%)</title><rect x="82.2480%" y="965" width="3.3430%" height="15" fill="rgb(209,196,19)" fg:x="198893" fg:w="8084"/><text x="82.4980%" y="975.50">cfx..</text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::verify_instruction (636 samples, 0.26%)</title><rect x="85.5910%" y="965" width="0.2630%" height="15" fill="rgb(244,131,22)" fg:x="206977" fg:w="636"/><text x="85.8410%" y="975.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::spec (234 samples, 0.10%)</title><rect x="85.7572%" y="949" width="0.0968%" height="15" fill="rgb(223,18,34)" fg:x="207379" fg:w="234"/><text x="86.0072%" y="959.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::spec (187 samples, 0.08%)</title><rect x="87.8902%" y="949" width="0.0773%" height="15" fill="rgb(252,124,54)" fg:x="212537" fg:w="187"/><text x="88.1402%" y="959.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::stack::VecStack&lt;S&gt; as cfx_evm::evm::interpreter::stack::Stack&lt;S&gt;&gt;::peek (43 samples, 0.02%)</title><rect x="87.9725%" y="949" width="0.0178%" height="15" fill="rgb(229,106,42)" fg:x="212736" fg:w="43"/><text x="88.2225%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (43 samples, 0.02%)</title><rect x="87.9725%" y="933" width="0.0178%" height="15" fill="rgb(221,129,1)" fg:x="212736" fg:w="43"/><text x="88.2225%" y="943.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (43 samples, 0.02%)</title><rect x="87.9725%" y="917" width="0.0178%" height="15" fill="rgb(229,74,15)" fg:x="212736" fg:w="43"/><text x="88.2225%" y="927.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (43 samples, 0.02%)</title><rect x="87.9725%" y="901" width="0.0178%" height="15" fill="rgb(210,206,50)" fg:x="212736" fg:w="43"/><text x="88.2225%" y="911.50"></text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::step (23,020 samples, 9.52%)</title><rect x="78.4890%" y="997" width="9.5194%" height="15" fill="rgb(251,114,31)" fg:x="189803" fg:w="23020"/><text x="78.7390%" y="1007.50">cfx_evm::evm::..</text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::step_inner (23,020 samples, 9.52%)</title><rect x="78.4890%" y="981" width="9.5194%" height="15" fill="rgb(215,225,28)" fg:x="189803" fg:w="23020"/><text x="78.7390%" y="991.50">cfx_evm::evm::..</text></g><g><title>cfx_evm::evm::interpreter::gasometer::Gasometer&lt;Gas&gt;::requirements (5,210 samples, 2.15%)</title><rect x="85.8540%" y="965" width="2.1545%" height="15" fill="rgb(237,109,14)" fg:x="207613" fg:w="5210"/><text x="86.1040%" y="975.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (42 samples, 0.02%)</title><rect x="88.0130%" y="965" width="0.0174%" height="15" fill="rgb(230,13,37)" fg:x="212834" fg:w="42"/><text x="88.2630%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (42 samples, 0.02%)</title><rect x="88.0130%" y="949" width="0.0174%" height="15" fill="rgb(231,40,28)" fg:x="212834" fg:w="42"/><text x="88.2630%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.02%)</title><rect x="88.0130%" y="933" width="0.0174%" height="15" fill="rgb(231,202,18)" fg:x="212834" fg:w="42"/><text x="88.2630%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (42 samples, 0.02%)</title><rect x="88.0130%" y="917" width="0.0174%" height="15" fill="rgb(225,33,18)" fg:x="212834" fg:w="42"/><text x="88.2630%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (42 samples, 0.02%)</title><rect x="88.0130%" y="901" width="0.0174%" height="15" fill="rgb(223,64,47)" fg:x="212834" fg:w="42"/><text x="88.2630%" y="911.50"></text></g><g><title>sdallocx (42 samples, 0.02%)</title><rect x="88.0130%" y="885" width="0.0174%" height="15" fill="rgb(234,114,13)" fg:x="212834" fg:w="42"/><text x="88.2630%" y="895.50"></text></g><g><title>isfree (42 samples, 0.02%)</title><rect x="88.0130%" y="869" width="0.0174%" height="15" fill="rgb(248,56,40)" fg:x="212834" fg:w="42"/><text x="88.2630%" y="879.50"></text></g><g><title>isdalloct (42 samples, 0.02%)</title><rect x="88.0130%" y="853" width="0.0174%" height="15" fill="rgb(221,194,21)" fg:x="212834" fg:w="42"/><text x="88.2630%" y="863.50"></text></g><g><title>arena_sdalloc (42 samples, 0.02%)</title><rect x="88.0130%" y="837" width="0.0174%" height="15" fill="rgb(242,108,46)" fg:x="212834" fg:w="42"/><text x="88.2630%" y="847.50"></text></g><g><title>sz_size2index (42 samples, 0.02%)</title><rect x="88.0130%" y="821" width="0.0174%" height="15" fill="rgb(220,106,10)" fg:x="212834" fg:w="42"/><text x="88.2630%" y="831.50"></text></g><g><title>sz_size2index_compute (42 samples, 0.02%)</title><rect x="88.0130%" y="805" width="0.0174%" height="15" fill="rgb(211,88,4)" fg:x="212834" fg:w="42"/><text x="88.2630%" y="815.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt; as cfx_evm::vm::Exec&gt;::exec (23,111 samples, 9.56%)</title><rect x="78.4890%" y="1013" width="9.5571%" height="15" fill="rgb(214,95,34)" fg:x="189803" fg:w="23111"/><text x="78.7390%" y="1023.50">&lt;cfx_evm::evm:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;cfx_evm::evm::interpreter::Interpreter&lt;usize&gt;&gt;&gt; (91 samples, 0.04%)</title><rect x="88.0085%" y="997" width="0.0376%" height="15" fill="rgb(250,160,33)" fg:x="212823" fg:w="91"/><text x="88.2585%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;cfx_evm::evm::interpreter::Interpreter&lt;usize&gt;&gt; (80 samples, 0.03%)</title><rect x="88.0130%" y="981" width="0.0331%" height="15" fill="rgb(225,29,10)" fg:x="212834" fg:w="80"/><text x="88.2630%" y="991.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt; as cfx_evm::vm::ResumeCall&gt;::resume_call (44 samples, 0.02%)</title><rect x="88.0461%" y="1013" width="0.0182%" height="15" fill="rgb(224,28,30)" fg:x="212914" fg:w="44"/><text x="88.2961%" y="1023.50"></text></g><g><title>&lt;usize as cfx_evm::evm::evm::CostType&gt;::from_u256 (44 samples, 0.02%)</title><rect x="88.0461%" y="997" width="0.0182%" height="15" fill="rgb(231,77,4)" fg:x="212914" fg:w="44"/><text x="88.2961%" y="1007.50"></text></g><g><title>core::cmp::PartialEq::ne (44 samples, 0.02%)</title><rect x="88.0461%" y="981" width="0.0182%" height="15" fill="rgb(209,63,21)" fg:x="212914" fg:w="44"/><text x="88.2961%" y="991.50"></text></g><g><title>&lt;primitive_types::U256 as core::cmp::PartialEq&gt;::eq (44 samples, 0.02%)</title><rect x="88.0461%" y="965" width="0.0182%" height="15" fill="rgb(226,22,11)" fg:x="212914" fg:w="44"/><text x="88.2961%" y="975.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[U (44 samples, 0.02%)</title><rect x="88.0461%" y="949" width="0.0182%" height="15" fill="rgb(216,82,30)" fg:x="212914" fg:w="44"/><text x="88.2961%" y="959.50"></text></g><g><title> N]&gt; for [T (44 samples, 0.02%)</title><rect x="88.0461%" y="933" width="0.0182%" height="15" fill="rgb(246,227,38)" fg:x="212914" fg:w="44"/><text x="88.2961%" y="943.50"></text></g><g><title> N]&gt;::eq (44 samples, 0.02%)</title><rect x="88.0461%" y="917" width="0.0182%" height="15" fill="rgb(251,203,53)" fg:x="212914" fg:w="44"/><text x="88.2961%" y="927.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (44 samples, 0.02%)</title><rect x="88.0461%" y="901" width="0.0182%" height="15" fill="rgb(254,101,1)" fg:x="212914" fg:w="44"/><text x="88.2961%" y="911.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::CheckpointTrait&gt;::discard_checkpoint (39 samples, 0.02%)</title><rect x="88.0730%" y="981" width="0.0161%" height="15" fill="rgb(241,180,5)" fg:x="212979" fg:w="39"/><text x="88.3230%" y="991.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::process_return (66 samples, 0.03%)</title><rect x="88.0730%" y="997" width="0.0273%" height="15" fill="rgb(218,168,4)" fg:x="212979" fg:w="66"/><text x="88.3230%" y="1007.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::process_output (91 samples, 0.04%)</title><rect x="88.0643%" y="1013" width="0.0376%" height="15" fill="rgb(224,223,32)" fg:x="212958" fg:w="91"/><text x="88.3143%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (32 samples, 0.01%)</title><rect x="88.1334%" y="757" width="0.0132%" height="15" fill="rgb(236,106,22)" fg:x="213125" fg:w="32"/><text x="88.3834%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (32 samples, 0.01%)</title><rect x="88.1334%" y="741" width="0.0132%" height="15" fill="rgb(206,121,5)" fg:x="213125" fg:w="32"/><text x="88.3834%" y="751.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.05%)</title><rect x="88.1193%" y="885" width="0.0529%" height="15" fill="rgb(233,87,28)" fg:x="213091" fg:w="128"/><text x="88.3693%" y="895.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (94 samples, 0.04%)</title><rect x="88.1334%" y="869" width="0.0389%" height="15" fill="rgb(236,137,17)" fg:x="213125" fg:w="94"/><text x="88.3834%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (94 samples, 0.04%)</title><rect x="88.1334%" y="853" width="0.0389%" height="15" fill="rgb(209,183,38)" fg:x="213125" fg:w="94"/><text x="88.3834%" y="863.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (94 samples, 0.04%)</title><rect x="88.1334%" y="837" width="0.0389%" height="15" fill="rgb(206,162,44)" fg:x="213125" fg:w="94"/><text x="88.3834%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (94 samples, 0.04%)</title><rect x="88.1334%" y="821" width="0.0389%" height="15" fill="rgb(237,70,39)" fg:x="213125" fg:w="94"/><text x="88.3834%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (94 samples, 0.04%)</title><rect x="88.1334%" y="805" width="0.0389%" height="15" fill="rgb(212,176,5)" fg:x="213125" fg:w="94"/><text x="88.3834%" y="815.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (94 samples, 0.04%)</title><rect x="88.1334%" y="789" width="0.0389%" height="15" fill="rgb(232,95,16)" fg:x="213125" fg:w="94"/><text x="88.3834%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (94 samples, 0.04%)</title><rect x="88.1334%" y="773" width="0.0389%" height="15" fill="rgb(219,115,35)" fg:x="213125" fg:w="94"/><text x="88.3834%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (62 samples, 0.03%)</title><rect x="88.1466%" y="757" width="0.0256%" height="15" fill="rgb(251,67,27)" fg:x="213157" fg:w="62"/><text x="88.3966%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (51 samples, 0.02%)</title><rect x="88.1512%" y="741" width="0.0211%" height="15" fill="rgb(222,95,40)" fg:x="213168" fg:w="51"/><text x="88.4012%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (51 samples, 0.02%)</title><rect x="88.1512%" y="725" width="0.0211%" height="15" fill="rgb(250,35,16)" fg:x="213168" fg:w="51"/><text x="88.4012%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (51 samples, 0.02%)</title><rect x="88.1512%" y="709" width="0.0211%" height="15" fill="rgb(224,86,44)" fg:x="213168" fg:w="51"/><text x="88.4012%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (145 samples, 0.06%)</title><rect x="88.1193%" y="933" width="0.0600%" height="15" fill="rgb(237,53,53)" fg:x="213091" fg:w="145"/><text x="88.3693%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (145 samples, 0.06%)</title><rect x="88.1193%" y="917" width="0.0600%" height="15" fill="rgb(208,171,33)" fg:x="213091" fg:w="145"/><text x="88.3693%" y="927.50"></text></g><g><title>&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (145 samples, 0.06%)</title><rect x="88.1193%" y="901" width="0.0600%" height="15" fill="rgb(222,64,27)" fg:x="213091" fg:w="145"/><text x="88.3693%" y="911.50"></text></g><g><title>cfx_evm::call_create_frame::result::accrue_substate (192 samples, 0.08%)</title><rect x="88.1019%" y="1013" width="0.0794%" height="15" fill="rgb(221,121,35)" fg:x="213049" fg:w="192"/><text x="88.3519%" y="1023.50"></text></g><g><title>cfx_evm::state::substate::Substate::accrue (192 samples, 0.08%)</title><rect x="88.1019%" y="997" width="0.0794%" height="15" fill="rgb(228,137,42)" fg:x="213049" fg:w="192"/><text x="88.3519%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (180 samples, 0.07%)</title><rect x="88.1069%" y="981" width="0.0744%" height="15" fill="rgb(227,54,21)" fg:x="213061" fg:w="180"/><text x="88.3569%" y="991.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (150 samples, 0.06%)</title><rect x="88.1193%" y="965" width="0.0620%" height="15" fill="rgb(240,168,33)" fg:x="213091" fg:w="150"/><text x="88.3693%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (150 samples, 0.06%)</title><rect x="88.1193%" y="949" width="0.0620%" height="15" fill="rgb(243,159,6)" fg:x="213091" fg:w="150"/><text x="88.3693%" y="959.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::resume (23,502 samples, 9.72%)</title><rect x="78.4841%" y="1029" width="9.7188%" height="15" fill="rgb(205,211,41)" fg:x="189791" fg:w="23502"/><text x="78.7341%" y="1039.50">cfx_evm::call_..</text></g><g><title>cfx_evm::call_create_frame::result::into_message_call_result (52 samples, 0.02%)</title><rect x="88.1813%" y="1013" width="0.0215%" height="15" fill="rgb(253,30,1)" fg:x="213241" fg:w="52"/><text x="88.4313%" y="1023.50"></text></g><g><title>cfx_evm::call_create_frame::stack::FrameStack::process_return (32 samples, 0.01%)</title><rect x="88.2028%" y="1029" width="0.0132%" height="15" fill="rgb(226,80,18)" fg:x="213293" fg:w="32"/><text x="88.4528%" y="1039.50"></text></g><g><title>cfx_evm::call_create_frame::result::accrue_substate (32 samples, 0.01%)</title><rect x="88.2028%" y="1013" width="0.0132%" height="15" fill="rgb(253,156,46)" fg:x="213293" fg:w="32"/><text x="88.4528%" y="1023.50"></text></g><g><title>cfx_evm::state::substate::Substate::accrue (32 samples, 0.01%)</title><rect x="88.2028%" y="997" width="0.0132%" height="15" fill="rgb(248,87,27)" fg:x="213293" fg:w="32"/><text x="88.4528%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (29 samples, 0.01%)</title><rect x="88.2041%" y="981" width="0.0120%" height="15" fill="rgb(227,122,2)" fg:x="213296" fg:w="29"/><text x="88.4541%" y="991.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (29 samples, 0.01%)</title><rect x="88.2041%" y="965" width="0.0120%" height="15" fill="rgb(229,94,39)" fg:x="213296" fg:w="29"/><text x="88.4541%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (29 samples, 0.01%)</title><rect x="88.2041%" y="949" width="0.0120%" height="15" fill="rgb(225,173,31)" fg:x="213296" fg:w="29"/><text x="88.4541%" y="959.50"></text></g><g><title>cfx_evm::observer::multi_observers::MultiObservers::as_vm_observe (50 samples, 0.02%)</title><rect x="88.2161%" y="1029" width="0.0207%" height="15" fill="rgb(239,176,30)" fg:x="213325" fg:w="50"/><text x="88.4661%" y="1039.50"></text></g><g><title>cfx_evm::call_create_frame::stack::FrameStack::exec (182,590 samples, 75.51%)</title><rect x="12.7706%" y="1061" width="75.5063%" height="15" fill="rgb(212,104,21)" fg:x="30882" fg:w="182590"/><text x="13.0206%" y="1071.50">cfx_evm::call_create_frame::stack::FrameStack::exec</text></g><g><title>cfx_evm::call_create_frame::stack::FrameStack::exec_stack (178,188 samples, 73.69%)</title><rect x="14.5910%" y="1045" width="73.6859%" height="15" fill="rgb(240,209,40)" fg:x="35284" fg:w="178188"/><text x="14.8410%" y="1055.50">cfx_evm::call_create_frame::stack::FrameStack::exec_stack</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn cfx_evm::observer::VmObserve&gt;&gt; (97 samples, 0.04%)</title><rect x="88.2368%" y="1029" width="0.0401%" height="15" fill="rgb(234,195,5)" fg:x="213375" fg:w="97"/><text x="88.4868%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.02%)</title><rect x="88.2533%" y="1013" width="0.0236%" height="15" fill="rgb(238,213,1)" fg:x="213415" fg:w="57"/><text x="88.5033%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57 samples, 0.02%)</title><rect x="88.2533%" y="997" width="0.0236%" height="15" fill="rgb(235,182,54)" fg:x="213415" fg:w="57"/><text x="88.5033%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (57 samples, 0.02%)</title><rect x="88.2533%" y="981" width="0.0236%" height="15" fill="rgb(229,50,46)" fg:x="213415" fg:w="57"/><text x="88.5033%" y="991.50"></text></g><g><title>sdallocx (40 samples, 0.02%)</title><rect x="88.2603%" y="965" width="0.0165%" height="15" fill="rgb(219,145,13)" fg:x="213432" fg:w="40"/><text x="88.5103%" y="975.50"></text></g><g><title>isfree (40 samples, 0.02%)</title><rect x="88.2603%" y="949" width="0.0165%" height="15" fill="rgb(220,226,10)" fg:x="213432" fg:w="40"/><text x="88.5103%" y="959.50"></text></g><g><title>isdalloct (40 samples, 0.02%)</title><rect x="88.2603%" y="933" width="0.0165%" height="15" fill="rgb(248,47,30)" fg:x="213432" fg:w="40"/><text x="88.5103%" y="943.50"></text></g><g><title>arena_sdalloc (40 samples, 0.02%)</title><rect x="88.2603%" y="917" width="0.0165%" height="15" fill="rgb(231,209,44)" fg:x="213432" fg:w="40"/><text x="88.5103%" y="927.50"></text></g><g><title>tcache_dalloc_small (39 samples, 0.02%)</title><rect x="88.2607%" y="901" width="0.0161%" height="15" fill="rgb(209,80,30)" fg:x="213433" fg:w="39"/><text x="88.5107%" y="911.50"></text></g><g><title>cfx_evm::execution::executor::TXExecutor::transact_postprocessing (61 samples, 0.03%)</title><rect x="88.2769%" y="1061" width="0.0252%" height="15" fill="rgb(232,9,14)" fg:x="213472" fg:w="61"/><text x="88.5269%" y="1071.50"></text></g><g><title>extent_recycle (51 samples, 0.02%)</title><rect x="88.3327%" y="469" width="0.0211%" height="15" fill="rgb(243,91,43)" fg:x="213607" fg:w="51"/><text x="88.5827%" y="479.50"></text></g><g><title>extent_recycle_split (25 samples, 0.01%)</title><rect x="88.3434%" y="453" width="0.0103%" height="15" fill="rgb(231,90,52)" fg:x="213633" fg:w="25"/><text x="88.5934%" y="463.50"></text></g><g><title>rlp::rlpin::Rlp::as_val (74 samples, 0.03%)</title><rect x="88.3265%" y="885" width="0.0306%" height="15" fill="rgb(253,192,44)" fg:x="213592" fg:w="74"/><text x="88.5765%" y="895.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Decodable for alloc::vec::Vec&lt;u8&gt;&gt;::decode (74 samples, 0.03%)</title><rect x="88.3265%" y="869" width="0.0306%" height="15" fill="rgb(241,66,31)" fg:x="213592" fg:w="74"/><text x="88.5765%" y="879.50"></text></g><g><title>rlp::rlpin::BasicDecoder::decode_value (73 samples, 0.03%)</title><rect x="88.3269%" y="853" width="0.0302%" height="15" fill="rgb(235,81,37)" fg:x="213593" fg:w="73"/><text x="88.5769%" y="863.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Decodable for alloc::vec::Vec&lt;u8&gt;&gt;::decode::{{closure}} (69 samples, 0.03%)</title><rect x="88.3286%" y="837" width="0.0285%" height="15" fill="rgb(223,221,9)" fg:x="213597" fg:w="69"/><text x="88.5786%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (67 samples, 0.03%)</title><rect x="88.3294%" y="821" width="0.0277%" height="15" fill="rgb(242,180,7)" fg:x="213599" fg:w="67"/><text x="88.5794%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (67 samples, 0.03%)</title><rect x="88.3294%" y="805" width="0.0277%" height="15" fill="rgb(243,78,19)" fg:x="213599" fg:w="67"/><text x="88.5794%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (67 samples, 0.03%)</title><rect x="88.3294%" y="789" width="0.0277%" height="15" fill="rgb(233,23,17)" fg:x="213599" fg:w="67"/><text x="88.5794%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (67 samples, 0.03%)</title><rect x="88.3294%" y="773" width="0.0277%" height="15" fill="rgb(252,122,45)" fg:x="213599" fg:w="67"/><text x="88.5794%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (67 samples, 0.03%)</title><rect x="88.3294%" y="757" width="0.0277%" height="15" fill="rgb(247,108,20)" fg:x="213599" fg:w="67"/><text x="88.5794%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (67 samples, 0.03%)</title><rect x="88.3294%" y="741" width="0.0277%" height="15" fill="rgb(235,84,21)" fg:x="213599" fg:w="67"/><text x="88.5794%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (67 samples, 0.03%)</title><rect x="88.3294%" y="725" width="0.0277%" height="15" fill="rgb(247,129,10)" fg:x="213599" fg:w="67"/><text x="88.5794%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 0.03%)</title><rect x="88.3294%" y="709" width="0.0277%" height="15" fill="rgb(208,173,14)" fg:x="213599" fg:w="67"/><text x="88.5794%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.03%)</title><rect x="88.3294%" y="693" width="0.0277%" height="15" fill="rgb(236,31,38)" fg:x="213599" fg:w="67"/><text x="88.5794%" y="703.50"></text></g><g><title>alloc::alloc::alloc (67 samples, 0.03%)</title><rect x="88.3294%" y="677" width="0.0277%" height="15" fill="rgb(232,65,17)" fg:x="213599" fg:w="67"/><text x="88.5794%" y="687.50"></text></g><g><title>mallocx (66 samples, 0.03%)</title><rect x="88.3298%" y="661" width="0.0273%" height="15" fill="rgb(224,45,49)" fg:x="213600" fg:w="66"/><text x="88.5798%" y="671.50"></text></g><g><title>imalloc (62 samples, 0.03%)</title><rect x="88.3315%" y="645" width="0.0256%" height="15" fill="rgb(225,2,53)" fg:x="213604" fg:w="62"/><text x="88.5815%" y="655.50"></text></g><g><title>imalloc_body (62 samples, 0.03%)</title><rect x="88.3315%" y="629" width="0.0256%" height="15" fill="rgb(248,210,53)" fg:x="213604" fg:w="62"/><text x="88.5815%" y="639.50"></text></g><g><title>imalloc_no_sample (62 samples, 0.03%)</title><rect x="88.3315%" y="613" width="0.0256%" height="15" fill="rgb(211,1,30)" fg:x="213604" fg:w="62"/><text x="88.5815%" y="623.50"></text></g><g><title>iallocztm (62 samples, 0.03%)</title><rect x="88.3315%" y="597" width="0.0256%" height="15" fill="rgb(224,96,15)" fg:x="213604" fg:w="62"/><text x="88.5815%" y="607.50"></text></g><g><title>arena_malloc (62 samples, 0.03%)</title><rect x="88.3315%" y="581" width="0.0256%" height="15" fill="rgb(252,45,11)" fg:x="213604" fg:w="62"/><text x="88.5815%" y="591.50"></text></g><g><title>tcache_alloc_small (62 samples, 0.03%)</title><rect x="88.3315%" y="565" width="0.0256%" height="15" fill="rgb(220,125,38)" fg:x="213604" fg:w="62"/><text x="88.5815%" y="575.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (62 samples, 0.03%)</title><rect x="88.3315%" y="549" width="0.0256%" height="15" fill="rgb(243,161,33)" fg:x="213604" fg:w="62"/><text x="88.5815%" y="559.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (61 samples, 0.03%)</title><rect x="88.3319%" y="533" width="0.0252%" height="15" fill="rgb(248,197,34)" fg:x="213605" fg:w="61"/><text x="88.5819%" y="543.50"></text></g><g><title>arena_bin_malloc_hard (61 samples, 0.03%)</title><rect x="88.3319%" y="517" width="0.0252%" height="15" fill="rgb(228,165,23)" fg:x="213605" fg:w="61"/><text x="88.5819%" y="527.50"></text></g><g><title>arena_bin_nonfull_slab_get (61 samples, 0.03%)</title><rect x="88.3319%" y="501" width="0.0252%" height="15" fill="rgb(236,94,38)" fg:x="213605" fg:w="61"/><text x="88.5819%" y="511.50"></text></g><g><title>arena_slab_alloc (61 samples, 0.03%)</title><rect x="88.3319%" y="485" width="0.0252%" height="15" fill="rgb(220,13,23)" fg:x="213605" fg:w="61"/><text x="88.5819%" y="495.50"></text></g><g><title>&lt;primitives::account::CodeInfo as rlp::traits::Decodable&gt;::decode (86 samples, 0.04%)</title><rect x="88.3244%" y="917" width="0.0356%" height="15" fill="rgb(234,26,39)" fg:x="213587" fg:w="86"/><text x="88.5744%" y="927.50"></text></g><g><title>rlp::rlpin::Rlp::val_at (81 samples, 0.03%)</title><rect x="88.3265%" y="901" width="0.0335%" height="15" fill="rgb(205,117,44)" fg:x="213592" fg:w="81"/><text x="88.5765%" y="911.50"></text></g><g><title>cfx_evm::state::State::update_account_cache (111 samples, 0.05%)</title><rect x="88.3145%" y="1013" width="0.0459%" height="15" fill="rgb(250,42,2)" fg:x="213563" fg:w="111"/><text x="88.5645%" y="1023.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::cache_code (109 samples, 0.05%)</title><rect x="88.3153%" y="997" width="0.0451%" height="15" fill="rgb(223,83,14)" fg:x="213565" fg:w="109"/><text x="88.5653%" y="1007.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_code (102 samples, 0.04%)</title><rect x="88.3182%" y="981" width="0.0422%" height="15" fill="rgb(241,147,50)" fg:x="213572" fg:w="102"/><text x="88.5682%" y="991.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get (102 samples, 0.04%)</title><rect x="88.3182%" y="965" width="0.0422%" height="15" fill="rgb(218,90,6)" fg:x="213572" fg:w="102"/><text x="88.5682%" y="975.50"></text></g><g><title>rlp::decode (87 samples, 0.04%)</title><rect x="88.3244%" y="949" width="0.0360%" height="15" fill="rgb(210,191,5)" fg:x="213587" fg:w="87"/><text x="88.5744%" y="959.50"></text></g><g><title>rlp::rlpin::Rlp::as_val (87 samples, 0.04%)</title><rect x="88.3244%" y="933" width="0.0360%" height="15" fill="rgb(225,139,19)" fg:x="213587" fg:w="87"/><text x="88.5744%" y="943.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_account (38 samples, 0.02%)</title><rect x="88.3604%" y="1013" width="0.0157%" height="15" fill="rgb(210,1,33)" fg:x="213674" fg:w="38"/><text x="88.6104%" y="1023.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::code (178 samples, 0.07%)</title><rect x="88.3075%" y="1045" width="0.0736%" height="15" fill="rgb(213,50,3)" fg:x="213546" fg:w="178"/><text x="88.5575%" y="1055.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (169 samples, 0.07%)</title><rect x="88.3112%" y="1029" width="0.0699%" height="15" fill="rgb(234,227,4)" fg:x="213555" fg:w="169"/><text x="88.5612%" y="1039.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_account (50 samples, 0.02%)</title><rect x="88.3993%" y="1013" width="0.0207%" height="15" fill="rgb(246,63,5)" fg:x="213768" fg:w="50"/><text x="88.6493%" y="1023.50"></text></g><g><title>primitives::account::Account::new_from_rlp (33 samples, 0.01%)</title><rect x="88.4063%" y="997" width="0.0136%" height="15" fill="rgb(245,136,27)" fg:x="213785" fg:w="33"/><text x="88.6563%" y="1007.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::nonce (74 samples, 0.03%)</title><rect x="88.3902%" y="1045" width="0.0306%" height="15" fill="rgb(247,199,27)" fg:x="213746" fg:w="74"/><text x="88.6402%" y="1055.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (74 samples, 0.03%)</title><rect x="88.3902%" y="1029" width="0.0306%" height="15" fill="rgb(252,158,49)" fg:x="213746" fg:w="74"/><text x="88.6402%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (38 samples, 0.02%)</title><rect x="88.4307%" y="1045" width="0.0157%" height="15" fill="rgb(254,73,1)" fg:x="213844" fg:w="38"/><text x="88.6807%" y="1055.50"></text></g><g><title>cfx_evm::execution::executor::TXExecutor::transact (183,032 samples, 75.69%)</title><rect x="12.7706%" y="1077" width="75.6890%" height="15" fill="rgb(248,93,19)" fg:x="30882" fg:w="183032"/><text x="13.0206%" y="1087.50">cfx_evm::execution::executor::TXExecutor::transact</text></g><g><title>cfx_evm::execution::executor::TXExecutor::transact_preprocessing (381 samples, 0.16%)</title><rect x="88.3021%" y="1061" width="0.1576%" height="15" fill="rgb(206,67,5)" fg:x="213533" fg:w="381"/><text x="88.5521%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (79 samples, 0.03%)</title><rect x="88.4613%" y="1045" width="0.0327%" height="15" fill="rgb(209,210,4)" fg:x="213918" fg:w="79"/><text x="88.7113%" y="1055.50"></text></g><g><title>aptos_block_executor::aptos_vm::AptosEVM::execute_eth_transaction::{{closure}} (79 samples, 0.03%)</title><rect x="88.4613%" y="1029" width="0.0327%" height="15" fill="rgb(214,185,36)" fg:x="213918" fg:w="79"/><text x="88.7113%" y="1039.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::insert (79 samples, 0.03%)</title><rect x="88.4613%" y="1013" width="0.0327%" height="15" fill="rgb(233,191,26)" fg:x="213918" fg:w="79"/><text x="88.7113%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (78 samples, 0.03%)</title><rect x="88.4617%" y="997" width="0.0323%" height="15" fill="rgb(248,94,17)" fg:x="213919" fg:w="78"/><text x="88.7117%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (47 samples, 0.02%)</title><rect x="88.4745%" y="981" width="0.0194%" height="15" fill="rgb(250,64,4)" fg:x="213950" fg:w="47"/><text x="88.7245%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (43 samples, 0.02%)</title><rect x="88.4762%" y="965" width="0.0178%" height="15" fill="rgb(218,41,53)" fg:x="213954" fg:w="43"/><text x="88.7262%" y="975.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (43 samples, 0.02%)</title><rect x="88.4762%" y="949" width="0.0178%" height="15" fill="rgb(251,176,28)" fg:x="213954" fg:w="43"/><text x="88.7262%" y="959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (28 samples, 0.01%)</title><rect x="88.4824%" y="933" width="0.0116%" height="15" fill="rgb(247,22,9)" fg:x="213969" fg:w="28"/><text x="88.7324%" y="943.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (28 samples, 0.01%)</title><rect x="88.4824%" y="917" width="0.0116%" height="15" fill="rgb(218,201,14)" fg:x="213969" fg:w="28"/><text x="88.7324%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (28 samples, 0.01%)</title><rect x="88.4824%" y="901" width="0.0116%" height="15" fill="rgb(218,94,10)" fg:x="213969" fg:w="28"/><text x="88.7324%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (94 samples, 0.04%)</title><rect x="88.4596%" y="1077" width="0.0389%" height="15" fill="rgb(222,183,52)" fg:x="213914" fg:w="94"/><text x="88.7096%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (94 samples, 0.04%)</title><rect x="88.4596%" y="1061" width="0.0389%" height="15" fill="rgb(242,140,25)" fg:x="213914" fg:w="94"/><text x="88.7096%" y="1071.50"></text></g><g><title>aptos_block_executor::aptos_vm::AptosEVM::execute_eth_transaction (201,191 samples, 83.20%)</title><rect x="5.3060%" y="1093" width="83.1983%" height="15" fill="rgb(235,197,38)" fg:x="12831" fg:w="201191"/><text x="5.5560%" y="1103.50">aptos_block_executor::aptos_vm::AptosEVM::execute_eth_transaction</text></g><g><title>&lt;aptos_block_executor::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (26 samples, 0.01%)</title><rect x="88.5097%" y="997" width="0.0108%" height="15" fill="rgb(237,136,15)" fg:x="214035" fg:w="26"/><text x="88.7597%" y="1007.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (26 samples, 0.01%)</title><rect x="88.5097%" y="981" width="0.0108%" height="15" fill="rgb(223,44,49)" fg:x="214035" fg:w="26"/><text x="88.7597%" y="991.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (25 samples, 0.01%)</title><rect x="88.5101%" y="965" width="0.0103%" height="15" fill="rgb(227,71,15)" fg:x="214036" fg:w="25"/><text x="88.7601%" y="975.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionId::as_uuid (37 samples, 0.02%)</title><rect x="88.5089%" y="1029" width="0.0153%" height="15" fill="rgb(225,153,20)" fg:x="214033" fg:w="37"/><text x="88.7589%" y="1039.50"></text></g><g><title>&lt;aptos_block_executor::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (35 samples, 0.01%)</title><rect x="88.5097%" y="1013" width="0.0145%" height="15" fill="rgb(210,190,26)" fg:x="214035" fg:w="35"/><text x="88.7597%" y="1023.50"></text></g><g><title>aptos_block_executor::aptos_vm::AptosVM::make_cross_space_handler (78 samples, 0.03%)</title><rect x="88.5043%" y="1093" width="0.0323%" height="15" fill="rgb(223,147,5)" fg:x="214022" fg:w="78"/><text x="88.7543%" y="1103.50"></text></g><g><title>aptos_block_executor::aptos_vm_impl::AptosVMImpl::new_session (70 samples, 0.03%)</title><rect x="88.5076%" y="1077" width="0.0289%" height="15" fill="rgb(207,14,23)" fg:x="214030" fg:w="70"/><text x="88.7576%" y="1087.50"></text></g><g><title>aptos_block_executor::move_vm_ext::vm::MoveVmExt::new_session (70 samples, 0.03%)</title><rect x="88.5076%" y="1061" width="0.0289%" height="15" fill="rgb(211,195,53)" fg:x="214030" fg:w="70"/><text x="88.7576%" y="1071.50"></text></g><g><title>aptos_block_executor::move_vm_ext::vm::MoveVmExt::new_session_inner (70 samples, 0.03%)</title><rect x="88.5076%" y="1045" width="0.0289%" height="15" fill="rgb(237,75,46)" fg:x="214030" fg:w="70"/><text x="88.7576%" y="1055.50"></text></g><g><title>aptos_logger::aptos_logger::AptosData::send_entry (39 samples, 0.02%)</title><rect x="88.5374%" y="1045" width="0.0161%" height="15" fill="rgb(254,55,14)" fg:x="214102" fg:w="39"/><text x="88.7874%" y="1055.50"></text></g><g><title>std::sync::mpsc::SyncSender&lt;T&gt;::try_send (39 samples, 0.02%)</title><rect x="88.5374%" y="1029" width="0.0161%" height="15" fill="rgb(230,185,30)" fg:x="214102" fg:w="39"/><text x="88.7874%" y="1039.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::try_send (39 samples, 0.02%)</title><rect x="88.5374%" y="1013" width="0.0161%" height="15" fill="rgb(220,14,11)" fg:x="214102" fg:w="39"/><text x="88.7874%" y="1023.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::try_send (39 samples, 0.02%)</title><rect x="88.5374%" y="997" width="0.0161%" height="15" fill="rgb(215,169,44)" fg:x="214102" fg:w="39"/><text x="88.7874%" y="1007.50"></text></g><g><title>core::fmt::Write::write_fmt (32 samples, 0.01%)</title><rect x="88.5647%" y="949" width="0.0132%" height="15" fill="rgb(253,203,20)" fg:x="214168" fg:w="32"/><text x="88.8147%" y="959.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (32 samples, 0.01%)</title><rect x="88.5647%" y="933" width="0.0132%" height="15" fill="rgb(229,225,17)" fg:x="214168" fg:w="32"/><text x="88.8147%" y="943.50"></text></g><g><title>core::fmt::write (32 samples, 0.01%)</title><rect x="88.5647%" y="917" width="0.0132%" height="15" fill="rgb(236,76,26)" fg:x="214168" fg:w="32"/><text x="88.8147%" y="927.50"></text></g><g><title>core::fmt::run (32 samples, 0.01%)</title><rect x="88.5647%" y="901" width="0.0132%" height="15" fill="rgb(234,15,30)" fg:x="214168" fg:w="32"/><text x="88.8147%" y="911.50"></text></g><g><title>core::fmt::rt::Argument::fmt (26 samples, 0.01%)</title><rect x="88.5672%" y="885" width="0.0108%" height="15" fill="rgb(211,113,48)" fg:x="214174" fg:w="26"/><text x="88.8172%" y="895.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (26 samples, 0.01%)</title><rect x="88.5672%" y="869" width="0.0108%" height="15" fill="rgb(221,31,36)" fg:x="214174" fg:w="26"/><text x="88.8172%" y="879.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (60 samples, 0.02%)</title><rect x="88.5564%" y="1013" width="0.0248%" height="15" fill="rgb(215,118,52)" fg:x="214148" fg:w="60"/><text x="88.8064%" y="1023.50"></text></g><g><title>&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (60 samples, 0.02%)</title><rect x="88.5564%" y="997" width="0.0248%" height="15" fill="rgb(241,151,27)" fg:x="214148" fg:w="60"/><text x="88.8064%" y="1007.50"></text></g><g><title>chrono::format::format (60 samples, 0.02%)</title><rect x="88.5564%" y="981" width="0.0248%" height="15" fill="rgb(253,51,3)" fg:x="214148" fg:w="60"/><text x="88.8064%" y="991.50"></text></g><g><title>chrono::format::format_inner (54 samples, 0.02%)</title><rect x="88.5589%" y="965" width="0.0223%" height="15" fill="rgb(216,201,24)" fg:x="214154" fg:w="54"/><text x="88.8089%" y="975.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::format_with_items (30 samples, 0.01%)</title><rect x="88.5812%" y="1013" width="0.0124%" height="15" fill="rgb(231,107,4)" fg:x="214208" fg:w="30"/><text x="88.8312%" y="1023.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::to_rfc3339_opts (95 samples, 0.04%)</title><rect x="88.5560%" y="1029" width="0.0393%" height="15" fill="rgb(243,97,54)" fg:x="214147" fg:w="95"/><text x="88.8060%" y="1039.50"></text></g><g><title>alloc::fmt::format (30 samples, 0.01%)</title><rect x="88.6052%" y="853" width="0.0124%" height="15" fill="rgb(221,32,51)" fg:x="214266" fg:w="30"/><text x="88.8552%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (30 samples, 0.01%)</title><rect x="88.6052%" y="837" width="0.0124%" height="15" fill="rgb(218,171,35)" fg:x="214266" fg:w="30"/><text x="88.8552%" y="847.50"></text></g><g><title>alloc::fmt::format::{{closure}} (30 samples, 0.01%)</title><rect x="88.6052%" y="821" width="0.0124%" height="15" fill="rgb(214,20,53)" fg:x="214266" fg:w="30"/><text x="88.8552%" y="831.50"></text></g><g><title>alloc::fmt::format::format_inner (30 samples, 0.01%)</title><rect x="88.6052%" y="805" width="0.0124%" height="15" fill="rgb(239,9,52)" fg:x="214266" fg:w="30"/><text x="88.8552%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (25 samples, 0.01%)</title><rect x="88.6073%" y="789" width="0.0103%" height="15" fill="rgb(215,114,45)" fg:x="214271" fg:w="25"/><text x="88.8573%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (25 samples, 0.01%)</title><rect x="88.6073%" y="773" width="0.0103%" height="15" fill="rgb(208,118,9)" fg:x="214271" fg:w="25"/><text x="88.8573%" y="783.50"></text></g><g><title>&lt;move_core_types::vm_status::VMStatus as core::fmt::Display&gt;::fmt (47 samples, 0.02%)</title><rect x="88.6052%" y="869" width="0.0194%" height="15" fill="rgb(235,7,39)" fg:x="214266" fg:w="47"/><text x="88.8552%" y="879.50"></text></g><g><title>alloc::fmt::format (69 samples, 0.03%)</title><rect x="88.5998%" y="997" width="0.0285%" height="15" fill="rgb(243,225,15)" fg:x="214253" fg:w="69"/><text x="88.8498%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (69 samples, 0.03%)</title><rect x="88.5998%" y="981" width="0.0285%" height="15" fill="rgb(225,216,18)" fg:x="214253" fg:w="69"/><text x="88.8498%" y="991.50"></text></g><g><title>alloc::fmt::format::{{closure}} (69 samples, 0.03%)</title><rect x="88.5998%" y="965" width="0.0285%" height="15" fill="rgb(233,36,38)" fg:x="214253" fg:w="69"/><text x="88.8498%" y="975.50"></text></g><g><title>alloc::fmt::format::format_inner (69 samples, 0.03%)</title><rect x="88.5998%" y="949" width="0.0285%" height="15" fill="rgb(239,88,23)" fg:x="214253" fg:w="69"/><text x="88.8498%" y="959.50"></text></g><g><title>core::fmt::Write::write_fmt (66 samples, 0.03%)</title><rect x="88.6011%" y="933" width="0.0273%" height="15" fill="rgb(219,181,35)" fg:x="214256" fg:w="66"/><text x="88.8511%" y="943.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (66 samples, 0.03%)</title><rect x="88.6011%" y="917" width="0.0273%" height="15" fill="rgb(215,18,46)" fg:x="214256" fg:w="66"/><text x="88.8511%" y="927.50"></text></g><g><title>core::fmt::write (66 samples, 0.03%)</title><rect x="88.6011%" y="901" width="0.0273%" height="15" fill="rgb(241,38,11)" fg:x="214256" fg:w="66"/><text x="88.8511%" y="911.50"></text></g><g><title>core::fmt::rt::Argument::fmt (58 samples, 0.02%)</title><rect x="88.6044%" y="885" width="0.0240%" height="15" fill="rgb(248,169,45)" fg:x="214264" fg:w="58"/><text x="88.8544%" y="895.50"></text></g><g><title>aptos_logger::aptos_logger::LogEntry::new (185 samples, 0.08%)</title><rect x="88.5535%" y="1045" width="0.0765%" height="15" fill="rgb(239,50,49)" fg:x="214141" fg:w="185"/><text x="88.8035%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (73 samples, 0.03%)</title><rect x="88.5998%" y="1029" width="0.0302%" height="15" fill="rgb(231,96,31)" fg:x="214253" fg:w="73"/><text x="88.8498%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (73 samples, 0.03%)</title><rect x="88.5998%" y="1013" width="0.0302%" height="15" fill="rgb(224,193,37)" fg:x="214253" fg:w="73"/><text x="88.8498%" y="1023.50"></text></g><g><title>aptos_logger::event::Event::dispatch (229 samples, 0.09%)</title><rect x="88.5366%" y="1093" width="0.0947%" height="15" fill="rgb(227,153,50)" fg:x="214100" fg:w="229"/><text x="88.7866%" y="1103.50"></text></g><g><title>aptos_logger::logger::dispatch (227 samples, 0.09%)</title><rect x="88.5374%" y="1077" width="0.0939%" height="15" fill="rgb(249,228,3)" fg:x="214102" fg:w="227"/><text x="88.7874%" y="1087.50"></text></g><g><title>&lt;aptos_logger::aptos_logger::AptosData as aptos_logger::logger::Logger&gt;::record (227 samples, 0.09%)</title><rect x="88.5374%" y="1061" width="0.0939%" height="15" fill="rgb(219,164,43)" fg:x="214102" fg:w="227"/><text x="88.7874%" y="1071.50"></text></g><g><title>aptos_block_executor::aptos_vm::execute_single_transaction (201,700 samples, 83.41%)</title><rect x="5.2415%" y="1109" width="83.4088%" height="15" fill="rgb(216,45,41)" fg:x="12675" fg:w="201700"/><text x="5.4915%" y="1119.50">aptos_block_executor::aptos_vm::execute_single_transaction</text></g><g><title>&lt;aptos_block_executor::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (201,718 samples, 83.42%)</title><rect x="5.2378%" y="1125" width="83.4162%" height="15" fill="rgb(210,226,51)" fg:x="12666" fg:w="201718"/><text x="5.4878%" y="1135.50">&lt;aptos_block_executor::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction</text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (39 samples, 0.02%)</title><rect x="88.6627%" y="869" width="0.0161%" height="15" fill="rgb(209,117,49)" fg:x="214405" fg:w="39"/><text x="88.9127%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (38 samples, 0.02%)</title><rect x="88.6631%" y="853" width="0.0157%" height="15" fill="rgb(206,196,24)" fg:x="214406" fg:w="38"/><text x="88.9131%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (31 samples, 0.01%)</title><rect x="88.6660%" y="837" width="0.0128%" height="15" fill="rgb(253,218,3)" fg:x="214413" fg:w="31"/><text x="88.9160%" y="847.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (28 samples, 0.01%)</title><rect x="88.6672%" y="821" width="0.0116%" height="15" fill="rgb(252,166,2)" fg:x="214416" fg:w="28"/><text x="88.9172%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (63 samples, 0.03%)</title><rect x="88.6590%" y="901" width="0.0261%" height="15" fill="rgb(236,218,26)" fg:x="214396" fg:w="63"/><text x="88.9090%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (54 samples, 0.02%)</title><rect x="88.6627%" y="885" width="0.0223%" height="15" fill="rgb(254,84,19)" fg:x="214405" fg:w="54"/><text x="88.9127%" y="895.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (25 samples, 0.01%)</title><rect x="88.6908%" y="821" width="0.0103%" height="15" fill="rgb(219,137,29)" fg:x="214473" fg:w="25"/><text x="88.9408%" y="831.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (28 samples, 0.01%)</title><rect x="88.6904%" y="869" width="0.0116%" height="15" fill="rgb(227,47,52)" fg:x="214472" fg:w="28"/><text x="88.9404%" y="879.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (28 samples, 0.01%)</title><rect x="88.6904%" y="853" width="0.0116%" height="15" fill="rgb(229,167,24)" fg:x="214472" fg:w="28"/><text x="88.9404%" y="863.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (28 samples, 0.01%)</title><rect x="88.6904%" y="837" width="0.0116%" height="15" fill="rgb(233,164,1)" fg:x="214472" fg:w="28"/><text x="88.9404%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (42 samples, 0.02%)</title><rect x="88.6850%" y="901" width="0.0174%" height="15" fill="rgb(218,88,48)" fg:x="214459" fg:w="42"/><text x="88.9350%" y="911.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (32 samples, 0.01%)</title><rect x="88.6892%" y="885" width="0.0132%" height="15" fill="rgb(226,214,24)" fg:x="214469" fg:w="32"/><text x="88.9392%" y="895.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (115 samples, 0.05%)</title><rect x="88.6573%" y="933" width="0.0476%" height="15" fill="rgb(233,29,12)" fg:x="214392" fg:w="115"/><text x="88.9073%" y="943.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (111 samples, 0.05%)</title><rect x="88.6590%" y="917" width="0.0459%" height="15" fill="rgb(219,120,34)" fg:x="214396" fg:w="111"/><text x="88.9090%" y="927.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (136 samples, 0.06%)</title><rect x="88.6540%" y="981" width="0.0562%" height="15" fill="rgb(226,78,44)" fg:x="214384" fg:w="136"/><text x="88.9040%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (136 samples, 0.06%)</title><rect x="88.6540%" y="965" width="0.0562%" height="15" fill="rgb(240,15,48)" fg:x="214384" fg:w="136"/><text x="88.9040%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (128 samples, 0.05%)</title><rect x="88.6573%" y="949" width="0.0529%" height="15" fill="rgb(253,176,7)" fg:x="214392" fg:w="128"/><text x="88.9073%" y="959.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (29 samples, 0.01%)</title><rect x="88.7173%" y="965" width="0.0120%" height="15" fill="rgb(206,166,28)" fg:x="214537" fg:w="29"/><text x="88.9673%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (186 samples, 0.08%)</title><rect x="88.6540%" y="1013" width="0.0769%" height="15" fill="rgb(241,53,51)" fg:x="214384" fg:w="186"/><text x="88.9040%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (186 samples, 0.08%)</title><rect x="88.6540%" y="997" width="0.0769%" height="15" fill="rgb(249,112,30)" fg:x="214384" fg:w="186"/><text x="88.9040%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (50 samples, 0.02%)</title><rect x="88.7102%" y="981" width="0.0207%" height="15" fill="rgb(217,85,30)" fg:x="214520" fg:w="50"/><text x="88.9602%" y="991.50"></text></g><g><title>aptos_block_executor::aptos_vm::AptosVM::load_module (213 samples, 0.09%)</title><rect x="88.6540%" y="1109" width="0.0881%" height="15" fill="rgb(233,49,7)" fg:x="214384" fg:w="213"/><text x="88.9040%" y="1119.50"></text></g><g><title>aptos_block_executor::aptos_vm_impl::AptosVMImpl::load_module (213 samples, 0.09%)</title><rect x="88.6540%" y="1093" width="0.0881%" height="15" fill="rgb(234,109,9)" fg:x="214384" fg:w="213"/><text x="88.9040%" y="1103.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (213 samples, 0.09%)</title><rect x="88.6540%" y="1077" width="0.0881%" height="15" fill="rgb(253,95,22)" fg:x="214384" fg:w="213"/><text x="88.9040%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (213 samples, 0.09%)</title><rect x="88.6540%" y="1061" width="0.0881%" height="15" fill="rgb(233,176,25)" fg:x="214384" fg:w="213"/><text x="88.9040%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (213 samples, 0.09%)</title><rect x="88.6540%" y="1045" width="0.0881%" height="15" fill="rgb(236,33,39)" fg:x="214384" fg:w="213"/><text x="88.9040%" y="1055.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (213 samples, 0.09%)</title><rect x="88.6540%" y="1029" width="0.0881%" height="15" fill="rgb(223,226,42)" fg:x="214384" fg:w="213"/><text x="88.9040%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (27 samples, 0.01%)</title><rect x="88.7309%" y="1013" width="0.0112%" height="15" fill="rgb(216,99,33)" fg:x="214570" fg:w="27"/><text x="88.9809%" y="1023.50"></text></g><g><title>&lt;aptos_block_executor::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (227 samples, 0.09%)</title><rect x="88.6540%" y="1125" width="0.0939%" height="15" fill="rgb(235,84,23)" fg:x="214384" fg:w="227"/><text x="88.9040%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (58 samples, 0.02%)</title><rect x="88.7533%" y="1093" width="0.0240%" height="15" fill="rgb(232,2,27)" fg:x="214624" fg:w="58"/><text x="89.0033%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (58 samples, 0.02%)</title><rect x="88.7533%" y="1077" width="0.0240%" height="15" fill="rgb(241,23,22)" fg:x="214624" fg:w="58"/><text x="89.0033%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (58 samples, 0.02%)</title><rect x="88.7533%" y="1061" width="0.0240%" height="15" fill="rgb(211,73,27)" fg:x="214624" fg:w="58"/><text x="89.0033%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (86 samples, 0.04%)</title><rect x="88.7479%" y="1125" width="0.0356%" height="15" fill="rgb(235,109,49)" fg:x="214611" fg:w="86"/><text x="88.9979%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (86 samples, 0.04%)</title><rect x="88.7479%" y="1109" width="0.0356%" height="15" fill="rgb(230,99,29)" fg:x="214611" fg:w="86"/><text x="88.9979%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::block_executor::vm_wrapper::AptosExecutorTask&lt;&amp;aptos_block_executor::cached_state_view::CachedStateView&gt;&gt; (37 samples, 0.02%)</title><rect x="88.7843%" y="1125" width="0.0153%" height="15" fill="rgb(245,199,7)" fg:x="214699" fg:w="37"/><text x="89.0343%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::aptos_vm::AptosVM&gt; (37 samples, 0.02%)</title><rect x="88.7843%" y="1109" width="0.0153%" height="15" fill="rgb(217,179,10)" fg:x="214699" fg:w="37"/><text x="89.0343%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::aptos_vm_impl::AptosVMImpl&gt; (37 samples, 0.02%)</title><rect x="88.7843%" y="1093" width="0.0153%" height="15" fill="rgb(254,99,47)" fg:x="214699" fg:w="37"/><text x="89.0343%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_block_executor::move_vm_ext::vm::MoveVmExt&gt;&gt; (37 samples, 0.02%)</title><rect x="88.7843%" y="1077" width="0.0153%" height="15" fill="rgb(251,121,7)" fg:x="214699" fg:w="37"/><text x="89.0343%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.02%)</title><rect x="88.7843%" y="1061" width="0.0153%" height="15" fill="rgb(250,177,26)" fg:x="214699" fg:w="37"/><text x="89.0343%" y="1071.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (37 samples, 0.02%)</title><rect x="88.7843%" y="1045" width="0.0153%" height="15" fill="rgb(232,88,15)" fg:x="214699" fg:w="37"/><text x="89.0343%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::move_vm_ext::vm::MoveVmExt&gt; (37 samples, 0.02%)</title><rect x="88.7843%" y="1029" width="0.0153%" height="15" fill="rgb(251,54,54)" fg:x="214699" fg:w="37"/><text x="89.0343%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::move_vm::MoveVM&gt; (37 samples, 0.02%)</title><rect x="88.7843%" y="1013" width="0.0153%" height="15" fill="rgb(208,177,15)" fg:x="214699" fg:w="37"/><text x="89.0343%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::runtime::VMRuntime&gt; (37 samples, 0.02%)</title><rect x="88.7843%" y="997" width="0.0153%" height="15" fill="rgb(205,97,32)" fg:x="214699" fg:w="37"/><text x="89.0343%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Loader&gt; (37 samples, 0.02%)</title><rect x="88.7843%" y="981" width="0.0153%" height="15" fill="rgb(217,192,13)" fg:x="214699" fg:w="37"/><text x="89.0343%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (37 samples, 0.02%)</title><rect x="88.7843%" y="965" width="0.0153%" height="15" fill="rgb(215,163,41)" fg:x="214699" fg:w="37"/><text x="89.0343%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;move_vm_runtime::loader::ModuleCache&gt;&gt; (37 samples, 0.02%)</title><rect x="88.7843%" y="949" width="0.0153%" height="15" fill="rgb(246,83,29)" fg:x="214699" fg:w="37"/><text x="89.0343%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::ModuleCache&gt; (37 samples, 0.02%)</title><rect x="88.7843%" y="933" width="0.0153%" height="15" fill="rgb(219,2,45)" fg:x="214699" fg:w="37"/><text x="89.0343%" y="943.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_sequential (202,208 samples, 83.62%)</title><rect x="5.1931%" y="1141" width="83.6189%" height="15" fill="rgb(242,215,33)" fg:x="12558" fg:w="202208"/><text x="5.4431%" y="1151.50">aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_sequential</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;aptos_types::write_set::WriteOp&gt;&gt; (30 samples, 0.01%)</title><rect x="88.7996%" y="1125" width="0.0124%" height="15" fill="rgb(217,1,6)" fg:x="214736" fg:w="30"/><text x="89.0496%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (30 samples, 0.01%)</title><rect x="88.7996%" y="1109" width="0.0124%" height="15" fill="rgb(207,85,52)" fg:x="214736" fg:w="30"/><text x="89.0496%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (30 samples, 0.01%)</title><rect x="88.7996%" y="1093" width="0.0124%" height="15" fill="rgb(231,171,19)" fg:x="214736" fg:w="30"/><text x="89.0496%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (30 samples, 0.01%)</title><rect x="88.7996%" y="1077" width="0.0124%" height="15" fill="rgb(207,128,4)" fg:x="214736" fg:w="30"/><text x="89.0496%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="88.7996%" y="1061" width="0.0124%" height="15" fill="rgb(219,208,4)" fg:x="214736" fg:w="30"/><text x="89.0496%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.01%)</title><rect x="88.7996%" y="1045" width="0.0124%" height="15" fill="rgb(235,161,42)" fg:x="214736" fg:w="30"/><text x="89.0496%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.01%)</title><rect x="88.7996%" y="1029" width="0.0124%" height="15" fill="rgb(247,218,18)" fg:x="214736" fg:w="30"/><text x="89.0496%" y="1039.50"></text></g><g><title>sdallocx (27 samples, 0.01%)</title><rect x="88.8008%" y="1013" width="0.0112%" height="15" fill="rgb(232,114,51)" fg:x="214739" fg:w="27"/><text x="89.0508%" y="1023.50"></text></g><g><title>isfree (27 samples, 0.01%)</title><rect x="88.8008%" y="997" width="0.0112%" height="15" fill="rgb(222,95,3)" fg:x="214739" fg:w="27"/><text x="89.0508%" y="1007.50"></text></g><g><title>isdalloct (27 samples, 0.01%)</title><rect x="88.8008%" y="981" width="0.0112%" height="15" fill="rgb(240,65,29)" fg:x="214739" fg:w="27"/><text x="89.0508%" y="991.50"></text></g><g><title>arena_sdalloc (27 samples, 0.01%)</title><rect x="88.8008%" y="965" width="0.0112%" height="15" fill="rgb(249,209,20)" fg:x="214739" fg:w="27"/><text x="89.0508%" y="975.50"></text></g><g><title>sz_size2index (27 samples, 0.01%)</title><rect x="88.8008%" y="949" width="0.0112%" height="15" fill="rgb(241,48,37)" fg:x="214739" fg:w="27"/><text x="89.0508%" y="959.50"></text></g><g><title>sz_size2index_lookup (27 samples, 0.01%)</title><rect x="88.8008%" y="933" width="0.0112%" height="15" fill="rgb(230,140,42)" fg:x="214739" fg:w="27"/><text x="89.0508%" y="943.50"></text></g><g><title>aptos_executor::components::chunk_output::ChunkOutput::execute_block (202,209 samples, 83.62%)</title><rect x="5.1931%" y="1189" width="83.6193%" height="15" fill="rgb(230,176,45)" fg:x="12558" fg:w="202209"/><text x="5.4431%" y="1199.50">aptos_executor::components::chunk_output::ChunkOutput::execute_block</text></g><g><title>&lt;aptos_block_executor::aptos_vm::AptosVM as aptos_block_executor::VMExecutor&gt;::execute_block (202,209 samples, 83.62%)</title><rect x="5.1931%" y="1173" width="83.6193%" height="15" fill="rgb(245,112,21)" fg:x="12558" fg:w="202209"/><text x="5.4431%" y="1183.50">&lt;aptos_block_executor::aptos_vm::AptosVM as aptos_block_executor::VMExecutor&gt;::execute_block</text></g><g><title>aptos_block_executor::block_executor::BlockAptosVM::execute_block (202,209 samples, 83.62%)</title><rect x="5.1931%" y="1157" width="83.6193%" height="15" fill="rgb(207,183,35)" fg:x="12558" fg:w="202209"/><text x="5.4431%" y="1167.50">aptos_block_executor::block_executor::BlockAptosVM::execute_block</text></g><g><title>aptos_executor::components::chunk_output::ChunkOutput::by_transaction_execution (202,245 samples, 83.63%)</title><rect x="5.1923%" y="1205" width="83.6342%" height="15" fill="rgb(227,44,33)" fg:x="12556" fg:w="202245"/><text x="5.4423%" y="1215.50">aptos_executor::components::chunk_output::ChunkOutput::by_transaction_execution</text></g><g><title>aptos_executor::components::chunk_output::update_counters_for_processed_chunk (34 samples, 0.01%)</title><rect x="88.8124%" y="1189" width="0.0141%" height="15" fill="rgb(246,120,21)" fg:x="214767" fg:w="34"/><text x="89.0624%" y="1199.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (26 samples, 0.01%)</title><rect x="88.8157%" y="1173" width="0.0108%" height="15" fill="rgb(235,57,52)" fg:x="214775" fg:w="26"/><text x="89.0657%" y="1183.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (26 samples, 0.01%)</title><rect x="88.8157%" y="1157" width="0.0108%" height="15" fill="rgb(238,84,10)" fg:x="214775" fg:w="26"/><text x="89.0657%" y="1167.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (26 samples, 0.01%)</title><rect x="88.8157%" y="1141" width="0.0108%" height="15" fill="rgb(251,200,32)" fg:x="214775" fg:w="26"/><text x="89.0657%" y="1151.50"></text></g><g><title>&lt;aptos_executor::block_executor::BlockExecutor&lt;V&gt; as aptos_executor_types::BlockExecutorTrait&gt;::execute_block (212,229 samples, 87.76%)</title><rect x="1.0648%" y="1237" width="87.7628%" height="15" fill="rgb(247,159,13)" fg:x="2575" fg:w="212229"/><text x="1.3148%" y="1247.50">&lt;aptos_executor::block_executor::BlockExecutor&lt;V&gt; as aptos_executor_types::BlockExecutorTrait&gt;::execute_block</text></g><g><title>aptos_executor::block_executor::BlockExecutorInner&lt;V&gt;::execute_block (212,229 samples, 87.76%)</title><rect x="1.0648%" y="1221" width="87.7628%" height="15" fill="rgb(238,64,4)" fg:x="2575" fg:w="212229"/><text x="1.3148%" y="1231.50">aptos_executor::block_executor::BlockExecutorInner&lt;V&gt;::execute_block</text></g><g><title>core::ptr::drop_in_place&lt;aptos_schemadb::SchemaBatch&gt; (90 samples, 0.04%)</title><rect x="88.8380%" y="1109" width="0.0372%" height="15" fill="rgb(221,131,51)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_infallible::mutex::Mutex&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt;&gt;&gt; (90 samples, 0.04%)</title><rect x="88.8380%" y="1093" width="0.0372%" height="15" fill="rgb(242,5,29)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt;&gt;&gt; (90 samples, 0.04%)</title><rect x="88.8380%" y="1077" width="0.0372%" height="15" fill="rgb(214,130,32)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt;&gt;&gt; (90 samples, 0.04%)</title><rect x="88.8380%" y="1061" width="0.0372%" height="15" fill="rgb(244,210,16)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt;&gt; (90 samples, 0.04%)</title><rect x="88.8380%" y="1045" width="0.0372%" height="15" fill="rgb(234,48,26)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;,std::hash::random::RandomState&gt;&gt; (90 samples, 0.04%)</title><rect x="88.8380%" y="1029" width="0.0372%" height="15" fill="rgb(231,82,38)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;)&gt;&gt; (90 samples, 0.04%)</title><rect x="88.8380%" y="1013" width="0.0372%" height="15" fill="rgb(254,128,41)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (90 samples, 0.04%)</title><rect x="88.8380%" y="997" width="0.0372%" height="15" fill="rgb(212,73,49)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (90 samples, 0.04%)</title><rect x="88.8380%" y="981" width="0.0372%" height="15" fill="rgb(205,62,54)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (90 samples, 0.04%)</title><rect x="88.8380%" y="965" width="0.0372%" height="15" fill="rgb(228,0,8)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (90 samples, 0.04%)</title><rect x="88.8380%" y="949" width="0.0372%" height="15" fill="rgb(251,28,17)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (90 samples, 0.04%)</title><rect x="88.8380%" y="933" width="0.0372%" height="15" fill="rgb(238,105,27)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;)&gt; (90 samples, 0.04%)</title><rect x="88.8380%" y="917" width="0.0372%" height="15" fill="rgb(237,216,33)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt; (90 samples, 0.04%)</title><rect x="88.8380%" y="901" width="0.0372%" height="15" fill="rgb(229,228,25)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (90 samples, 0.04%)</title><rect x="88.8380%" y="885" width="0.0372%" height="15" fill="rgb(233,75,23)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_schemadb::WriteOp]&gt; (90 samples, 0.04%)</title><rect x="88.8380%" y="869" width="0.0372%" height="15" fill="rgb(231,207,16)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_schemadb::WriteOp&gt; (90 samples, 0.04%)</title><rect x="88.8380%" y="853" width="0.0372%" height="15" fill="rgb(231,191,45)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (90 samples, 0.04%)</title><rect x="88.8380%" y="837" width="0.0372%" height="15" fill="rgb(224,133,17)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (90 samples, 0.04%)</title><rect x="88.8380%" y="821" width="0.0372%" height="15" fill="rgb(209,178,27)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (90 samples, 0.04%)</title><rect x="88.8380%" y="805" width="0.0372%" height="15" fill="rgb(218,37,11)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (90 samples, 0.04%)</title><rect x="88.8380%" y="789" width="0.0372%" height="15" fill="rgb(251,226,25)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (90 samples, 0.04%)</title><rect x="88.8380%" y="773" width="0.0372%" height="15" fill="rgb(209,222,27)" fg:x="214829" fg:w="90"/><text x="89.0880%" y="783.50"></text></g><g><title>sdallocx (73 samples, 0.03%)</title><rect x="88.8451%" y="757" width="0.0302%" height="15" fill="rgb(238,22,21)" fg:x="214846" fg:w="73"/><text x="89.0951%" y="767.50"></text></g><g><title>isfree (73 samples, 0.03%)</title><rect x="88.8451%" y="741" width="0.0302%" height="15" fill="rgb(233,161,25)" fg:x="214846" fg:w="73"/><text x="89.0951%" y="751.50"></text></g><g><title>isdalloct (73 samples, 0.03%)</title><rect x="88.8451%" y="725" width="0.0302%" height="15" fill="rgb(226,122,53)" fg:x="214846" fg:w="73"/><text x="89.0951%" y="735.50"></text></g><g><title>arena_sdalloc (73 samples, 0.03%)</title><rect x="88.8451%" y="709" width="0.0302%" height="15" fill="rgb(220,123,17)" fg:x="214846" fg:w="73"/><text x="89.0951%" y="719.50"></text></g><g><title>tcache_dalloc_small (66 samples, 0.03%)</title><rect x="88.8479%" y="693" width="0.0273%" height="15" fill="rgb(230,224,35)" fg:x="214853" fg:w="66"/><text x="89.0979%" y="703.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (44 samples, 0.02%)</title><rect x="88.8570%" y="677" width="0.0182%" height="15" fill="rgb(246,83,8)" fg:x="214875" fg:w="44"/><text x="89.1070%" y="687.50"></text></g><g><title>extent_arena_get (28 samples, 0.01%)</title><rect x="88.8637%" y="661" width="0.0116%" height="15" fill="rgb(230,214,17)" fg:x="214891" fg:w="28"/><text x="89.1137%" y="671.50"></text></g><g><title>atomic_load_p (28 samples, 0.01%)</title><rect x="88.8637%" y="645" width="0.0116%" height="15" fill="rgb(222,97,18)" fg:x="214891" fg:w="28"/><text x="89.1137%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::Histogram&gt; (28 samples, 0.01%)</title><rect x="88.8752%" y="1109" width="0.0116%" height="15" fill="rgb(206,79,1)" fg:x="214919" fg:w="28"/><text x="89.1252%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;prometheus::histogram::HistogramCore&gt;&gt; (28 samples, 0.01%)</title><rect x="88.8752%" y="1093" width="0.0116%" height="15" fill="rgb(214,121,34)" fg:x="214919" fg:w="28"/><text x="89.1252%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="88.8752%" y="1077" width="0.0116%" height="15" fill="rgb(249,199,46)" fg:x="214919" fg:w="28"/><text x="89.1252%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (28 samples, 0.01%)</title><rect x="88.8752%" y="1061" width="0.0116%" height="15" fill="rgb(214,222,46)" fg:x="214919" fg:w="28"/><text x="89.1252%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_sub (28 samples, 0.01%)</title><rect x="88.8752%" y="1045" width="0.0116%" height="15" fill="rgb(248,168,30)" fg:x="214919" fg:w="28"/><text x="89.1252%" y="1055.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (91 samples, 0.04%)</title><rect x="88.8959%" y="1109" width="0.0376%" height="15" fill="rgb(226,14,28)" fg:x="214969" fg:w="91"/><text x="89.1459%" y="1119.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (91 samples, 0.04%)</title><rect x="88.8959%" y="1093" width="0.0376%" height="15" fill="rgb(253,123,1)" fg:x="214969" fg:w="91"/><text x="89.1459%" y="1103.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (91 samples, 0.04%)</title><rect x="88.8959%" y="1077" width="0.0376%" height="15" fill="rgb(225,24,42)" fg:x="214969" fg:w="91"/><text x="89.1459%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (91 samples, 0.04%)</title><rect x="88.8959%" y="1061" width="0.0376%" height="15" fill="rgb(216,161,37)" fg:x="214969" fg:w="91"/><text x="89.1459%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (91 samples, 0.04%)</title><rect x="88.8959%" y="1045" width="0.0376%" height="15" fill="rgb(251,164,26)" fg:x="214969" fg:w="91"/><text x="89.1459%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (91 samples, 0.04%)</title><rect x="88.8959%" y="1029" width="0.0376%" height="15" fill="rgb(219,177,3)" fg:x="214969" fg:w="91"/><text x="89.1459%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (91 samples, 0.04%)</title><rect x="88.8959%" y="1013" width="0.0376%" height="15" fill="rgb(222,65,0)" fg:x="214969" fg:w="91"/><text x="89.1459%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (91 samples, 0.04%)</title><rect x="88.8959%" y="997" width="0.0376%" height="15" fill="rgb(223,69,54)" fg:x="214969" fg:w="91"/><text x="89.1459%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (91 samples, 0.04%)</title><rect x="88.8959%" y="981" width="0.0376%" height="15" fill="rgb(235,30,27)" fg:x="214969" fg:w="91"/><text x="89.1459%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.04%)</title><rect x="88.8959%" y="965" width="0.0376%" height="15" fill="rgb(220,183,50)" fg:x="214969" fg:w="91"/><text x="89.1459%" y="975.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (91 samples, 0.04%)</title><rect x="88.8959%" y="949" width="0.0376%" height="15" fill="rgb(248,198,15)" fg:x="214969" fg:w="91"/><text x="89.1459%" y="959.50"></text></g><g><title>Crc32AppendZeroes (76 samples, 0.03%)</title><rect x="88.9422%" y="965" width="0.0314%" height="15" fill="rgb(222,211,4)" fg:x="215081" fg:w="76"/><text x="89.1922%" y="975.50"></text></g><g><title>gf_multiply_sw (76 samples, 0.03%)</title><rect x="88.9422%" y="949" width="0.0314%" height="15" fill="rgb(214,102,34)" fg:x="215081" fg:w="76"/><text x="89.1922%" y="959.50"></text></g><g><title>gf_multiply_sw_1 (76 samples, 0.03%)</title><rect x="88.9422%" y="933" width="0.0314%" height="15" fill="rgb(245,92,5)" fg:x="215081" fg:w="76"/><text x="89.1922%" y="943.50"></text></g><g><title>rocksdb::crc32c::Crc32cCombine(unsigned int, unsigned int, unsigned long) (78 samples, 0.03%)</title><rect x="88.9422%" y="981" width="0.0323%" height="15" fill="rgb(252,72,51)" fg:x="215081" fg:w="78"/><text x="89.1922%" y="991.50"></text></g><g><title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long, rocksdb::DBImpl::LogFileNumberSize&amp;) (4,524 samples, 1.87%)</title><rect x="88.9336%" y="1045" width="1.8708%" height="15" fill="rgb(252,208,19)" fg:x="215060" fg:w="4524"/><text x="89.1836%" y="1055.50">r..</text></g><g><title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*, rocksdb::Env::IOPriority, rocksdb::DBImpl::LogFileNumberSize&amp;) (4,524 samples, 1.87%)</title><rect x="88.9336%" y="1029" width="1.8708%" height="15" fill="rgb(211,69,7)" fg:x="215060" fg:w="4524"/><text x="89.1836%" y="1039.50">r..</text></g><g><title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;, rocksdb::Env::IOPriority) (4,524 samples, 1.87%)</title><rect x="88.9336%" y="1013" width="1.8708%" height="15" fill="rgb(211,27,16)" fg:x="215060" fg:w="4524"/><text x="89.1836%" y="1023.50">r..</text></g><g><title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long, rocksdb::Env::IOPriority) (4,522 samples, 1.87%)</title><rect x="88.9344%" y="997" width="1.8700%" height="15" fill="rgb(219,216,14)" fg:x="215062" fg:w="4522"/><text x="89.1844%" y="1007.50">r..</text></g><g><title>rocksdb::crc32c::Value(char const*, unsigned long) (4,425 samples, 1.83%)</title><rect x="88.9745%" y="981" width="1.8299%" height="15" fill="rgb(219,71,8)" fg:x="215159" fg:w="4425"/><text x="89.2245%" y="991.50">r..</text></g><g><title>ExtendImpl&lt;rocksdb::crc32c::Slow_CRC32&gt; (4,425 samples, 1.83%)</title><rect x="88.9745%" y="965" width="1.8299%" height="15" fill="rgb(223,170,53)" fg:x="215159" fg:w="4425"/><text x="89.2245%" y="975.50">E..</text></g><g><title>Slow_CRC32 (4,425 samples, 1.83%)</title><rect x="88.9745%" y="949" width="1.8299%" height="15" fill="rgb(246,21,26)" fg:x="215159" fg:w="4425"/><text x="89.2245%" y="959.50">S..</text></g><g><title>CheckMemtableFull (47 samples, 0.02%)</title><rect x="90.8685%" y="965" width="0.0194%" height="15" fill="rgb(248,20,46)" fg:x="219739" fg:w="47"/><text x="91.1185%" y="975.50"></text></g><g><title>rocksdb::MemTable::ShouldScheduleFlush() const (27 samples, 0.01%)</title><rect x="90.8767%" y="949" width="0.0112%" height="15" fill="rgb(252,94,11)" fg:x="219759" fg:w="27"/><text x="91.1267%" y="959.50"></text></g><g><title>std::atomic&lt;rocksdb::MemTable::FlushStateEnum&gt;::load(std::memory_order) const (27 samples, 0.01%)</title><rect x="90.8767%" y="933" width="0.0112%" height="15" fill="rgb(236,163,8)" fg:x="219759" fg:w="27"/><text x="91.1267%" y="943.50"></text></g><g><title>SeekToColumnFamily (67 samples, 0.03%)</title><rect x="90.8879%" y="965" width="0.0277%" height="15" fill="rgb(217,221,45)" fg:x="219786" fg:w="67"/><text x="91.1379%" y="975.50"></text></g><g><title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (44 samples, 0.02%)</title><rect x="90.8974%" y="949" width="0.0182%" height="15" fill="rgb(238,38,17)" fg:x="219809" fg:w="44"/><text x="91.1474%" y="959.50"></text></g><g><title>rocksdb::ColumnFamilySet::GetColumnFamily(unsigned int) const (36 samples, 0.01%)</title><rect x="90.9007%" y="933" width="0.0149%" height="15" fill="rgb(242,210,23)" fg:x="219817" fg:w="36"/><text x="91.1507%" y="943.50"></text></g><g><title>std::unordered_map&lt;unsigned int, rocksdb::ColumnFamilyData*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt; &gt; &gt;::find(unsigned int const&amp;) const (36 samples, 0.01%)</title><rect x="90.9007%" y="917" width="0.0149%" height="15" fill="rgb(250,86,53)" fg:x="219817" fg:w="36"/><text x="91.1507%" y="927.50"></text></g><g><title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find(unsigned int const&amp;) const (36 samples, 0.01%)</title><rect x="90.9007%" y="901" width="0.0149%" height="15" fill="rgb(223,168,25)" fg:x="219817" fg:w="36"/><text x="91.1507%" y="911.50"></text></g><g><title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index(unsigned long) const (36 samples, 0.01%)</title><rect x="90.9007%" y="885" width="0.0149%" height="15" fill="rgb(251,189,4)" fg:x="219817" fg:w="36"/><text x="91.1507%" y="895.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;unsigned int, std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index(unsigned long, unsigned long) const (36 samples, 0.01%)</title><rect x="90.9007%" y="869" width="0.0149%" height="15" fill="rgb(245,19,28)" fg:x="219817" fg:w="36"/><text x="91.1507%" y="879.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const (36 samples, 0.01%)</title><rect x="90.9007%" y="853" width="0.0149%" height="15" fill="rgb(207,10,34)" fg:x="219817" fg:w="36"/><text x="91.1507%" y="863.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::AllocateNode(unsigned long, int) (134 samples, 0.06%)</title><rect x="90.9197%" y="917" width="0.0554%" height="15" fill="rgb(235,153,31)" fg:x="219863" fg:w="134"/><text x="91.1697%" y="927.50"></text></g><g><title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (61 samples, 0.03%)</title><rect x="90.9499%" y="901" width="0.0252%" height="15" fill="rgb(228,72,37)" fg:x="219936" fg:w="61"/><text x="91.1999%" y="911.50"></text></g><g><title>char* rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1}&gt;(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1} const&amp;) (61 samples, 0.03%)</title><rect x="90.9499%" y="885" width="0.0252%" height="15" fill="rgb(215,15,16)" fg:x="219936" fg:w="61"/><text x="91.1999%" y="895.50"></text></g><g><title>std::unique_lock&lt;rocksdb::SpinMutex&gt;::try_lock() (38 samples, 0.02%)</title><rect x="90.9594%" y="869" width="0.0157%" height="15" fill="rgb(250,119,29)" fg:x="219959" fg:w="38"/><text x="91.2094%" y="879.50"></text></g><g><title>rocksdb::SpinMutex::try_lock() (38 samples, 0.02%)</title><rect x="90.9594%" y="853" width="0.0157%" height="15" fill="rgb(214,59,1)" fg:x="219959" fg:w="38"/><text x="91.2094%" y="863.50"></text></g><g><title>std::atomic&lt;bool&gt;::compare_exchange_weak(bool&amp;, bool, std::memory_order, std::memory_order) (38 samples, 0.02%)</title><rect x="90.9594%" y="837" width="0.0157%" height="15" fill="rgb(223,109,25)" fg:x="219959" fg:w="38"/><text x="91.2094%" y="847.50"></text></g><g><title>std::__atomic_base&lt;bool&gt;::compare_exchange_weak(bool&amp;, bool, std::memory_order, std::memory_order) (38 samples, 0.02%)</title><rect x="90.9594%" y="821" width="0.0157%" height="15" fill="rgb(230,198,22)" fg:x="219959" fg:w="38"/><text x="91.2094%" y="831.50"></text></g><g><title>Allocate (140 samples, 0.06%)</title><rect x="90.9197%" y="949" width="0.0579%" height="15" fill="rgb(245,184,46)" fg:x="219863" fg:w="140"/><text x="91.1697%" y="959.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::AllocateKey(unsigned long) (140 samples, 0.06%)</title><rect x="90.9197%" y="933" width="0.0579%" height="15" fill="rgb(253,73,16)" fg:x="219863" fg:w="140"/><text x="91.1697%" y="943.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::KeyIsAfterNode(rocksdb::Slice const&amp;, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*) const (76 samples, 0.03%)</title><rect x="91.0318%" y="933" width="0.0314%" height="15" fill="rgb(206,94,45)" fg:x="220134" fg:w="76"/><text x="91.2818%" y="943.50"></text></g><g><title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (76 samples, 0.03%)</title><rect x="91.0318%" y="917" width="0.0314%" height="15" fill="rgb(236,83,27)" fg:x="220134" fg:w="76"/><text x="91.2818%" y="927.50"></text></g><g><title>rocksdb::InternalKeyComparator::CompareKeySeq(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (32 samples, 0.01%)</title><rect x="91.0500%" y="901" width="0.0132%" height="15" fill="rgb(220,196,8)" fg:x="220178" fg:w="32"/><text x="91.3000%" y="911.50"></text></g><g><title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (32 samples, 0.01%)</title><rect x="91.0500%" y="885" width="0.0132%" height="15" fill="rgb(254,185,14)" fg:x="220178" fg:w="32"/><text x="91.3000%" y="895.50"></text></g><g><title>Compare (81 samples, 0.03%)</title><rect x="91.5313%" y="837" width="0.0335%" height="15" fill="rgb(226,50,22)" fg:x="221342" fg:w="81"/><text x="91.7813%" y="847.50"></text></g><g><title>rocksdb::Slice::compare(rocksdb::Slice const&amp;) const (81 samples, 0.03%)</title><rect x="91.5313%" y="821" width="0.0335%" height="15" fill="rgb(253,147,0)" fg:x="221342" fg:w="81"/><text x="91.7813%" y="831.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::RecomputeSpliceLevels(rocksdb::Slice const&amp;, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, int) (1,256 samples, 0.52%)</title><rect x="91.0632%" y="933" width="0.5194%" height="15" fill="rgb(252,46,33)" fg:x="220210" fg:w="1256"/><text x="91.3132%" y="943.50"></text></g><g><title>void rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindSpliceForLevel&lt;true&gt;(rocksdb::Slice const&amp;, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*, int, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node**, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node**) (528 samples, 0.22%)</title><rect x="91.3643%" y="917" width="0.2183%" height="15" fill="rgb(242,22,54)" fg:x="220938" fg:w="528"/><text x="91.6143%" y="927.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::KeyIsAfterNode(rocksdb::Slice const&amp;, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*) const (528 samples, 0.22%)</title><rect x="91.3643%" y="901" width="0.2183%" height="15" fill="rgb(223,178,32)" fg:x="220938" fg:w="528"/><text x="91.6143%" y="911.50"></text></g><g><title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (492 samples, 0.20%)</title><rect x="91.3792%" y="885" width="0.2035%" height="15" fill="rgb(214,106,53)" fg:x="220974" fg:w="492"/><text x="91.6292%" y="895.50"></text></g><g><title>rocksdb::InternalKeyComparator::CompareKeySeq(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (186 samples, 0.08%)</title><rect x="91.5057%" y="869" width="0.0769%" height="15" fill="rgb(232,65,50)" fg:x="221280" fg:w="186"/><text x="91.7557%" y="879.50"></text></g><g><title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (186 samples, 0.08%)</title><rect x="91.5057%" y="853" width="0.0769%" height="15" fill="rgb(231,110,28)" fg:x="221280" fg:w="186"/><text x="91.7557%" y="863.50"></text></g><g><title>__tls_init (43 samples, 0.02%)</title><rect x="91.5648%" y="837" width="0.0178%" height="15" fill="rgb(216,71,40)" fg:x="221423" fg:w="43"/><text x="91.8148%" y="847.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice(char const*) (38 samples, 0.02%)</title><rect x="91.5826%" y="917" width="0.0157%" height="15" fill="rgb(229,89,53)" fg:x="221466" fg:w="38"/><text x="91.8326%" y="927.50"></text></g><g><title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1,538 samples, 0.64%)</title><rect x="90.9785%" y="949" width="0.6360%" height="15" fill="rgb(210,124,14)" fg:x="220005" fg:w="1538"/><text x="91.2285%" y="959.50"></text></g><g><title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (77 samples, 0.03%)</title><rect x="91.5826%" y="933" width="0.0318%" height="15" fill="rgb(236,213,6)" fg:x="221466" fg:w="77"/><text x="91.8326%" y="943.50"></text></g><g><title>rocksdb::InternalKeyComparator::CompareKeySeq(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (39 samples, 0.02%)</title><rect x="91.5983%" y="917" width="0.0161%" height="15" fill="rgb(228,41,5)" fg:x="221504" fg:w="39"/><text x="91.8483%" y="927.50"></text></g><g><title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (39 samples, 0.02%)</title><rect x="91.5983%" y="901" width="0.0161%" height="15" fill="rgb(221,167,25)" fg:x="221504" fg:w="39"/><text x="91.8483%" y="911.50"></text></g><g><title>rocksdb::MemTable::UpdateFlushState() (33 samples, 0.01%)</title><rect x="91.6198%" y="949" width="0.0136%" height="15" fill="rgb(228,144,37)" fg:x="221556" fg:w="33"/><text x="91.8698%" y="959.50"></text></g><g><title>rocksdb::MemTable::ShouldFlushNow() (28 samples, 0.01%)</title><rect x="91.6219%" y="933" width="0.0116%" height="15" fill="rgb(227,189,38)" fg:x="221561" fg:w="28"/><text x="91.8719%" y="943.50"></text></g><g><title>PutCFImpl (2,007 samples, 0.83%)</title><rect x="90.8445%" y="981" width="0.8300%" height="15" fill="rgb(218,8,2)" fg:x="219681" fg:w="2007"/><text x="91.0945%" y="991.50"></text></g><g><title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS&lt;unsigned long&gt; const*, bool, rocksdb::MemTablePostProcessInfo*, void**) (1,827 samples, 0.76%)</title><rect x="90.9189%" y="965" width="0.7555%" height="15" fill="rgb(209,61,28)" fg:x="219861" fg:w="1827"/><text x="91.1689%" y="975.50"></text></g><g><title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (87 samples, 0.04%)</title><rect x="91.6384%" y="949" width="0.0360%" height="15" fill="rgb(233,140,39)" fg:x="221601" fg:w="87"/><text x="91.8884%" y="959.50"></text></g><g><title>PutCF (2,059 samples, 0.85%)</title><rect x="90.8445%" y="997" width="0.8515%" height="15" fill="rgb(251,66,48)" fg:x="219681" fg:w="2059"/><text x="91.0945%" y="1007.50"></text></g><g><title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (52 samples, 0.02%)</title><rect x="91.6744%" y="981" width="0.0215%" height="15" fill="rgb(210,44,45)" fg:x="221688" fg:w="52"/><text x="91.9244%" y="991.50"></text></g><g><title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator=(std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;&amp;&amp;) (52 samples, 0.02%)</title><rect x="91.6744%" y="965" width="0.0215%" height="15" fill="rgb(214,136,46)" fg:x="221688" fg:w="52"/><text x="91.9244%" y="975.50"></text></g><g><title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator=(std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;&amp;&amp;) (52 samples, 0.02%)</title><rect x="91.6744%" y="949" width="0.0215%" height="15" fill="rgb(207,130,50)" fg:x="221688" fg:w="52"/><text x="91.9244%" y="959.50"></text></g><g><title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator=(std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;&amp;&amp;) (52 samples, 0.02%)</title><rect x="91.6744%" y="933" width="0.0215%" height="15" fill="rgb(228,102,49)" fg:x="221688" fg:w="52"/><text x="91.9244%" y="943.50"></text></g><g><title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release() (52 samples, 0.02%)</title><rect x="91.6744%" y="917" width="0.0215%" height="15" fill="rgb(253,55,1)" fg:x="221688" fg:w="52"/><text x="91.9244%" y="927.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice(rocksdb::Slice*, rocksdb::Slice*) (88 samples, 0.04%)</title><rect x="91.6963%" y="981" width="0.0364%" height="15" fill="rgb(238,222,9)" fg:x="221741" fg:w="88"/><text x="91.9463%" y="991.50"></text></g><g><title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (136 samples, 0.06%)</title><rect x="91.6959%" y="997" width="0.0562%" height="15" fill="rgb(246,99,6)" fg:x="221740" fg:w="136"/><text x="91.9459%" y="1007.50"></text></g><g><title>rocksdb::Slice::remove_prefix(unsigned long) (47 samples, 0.02%)</title><rect x="91.7327%" y="981" width="0.0194%" height="15" fill="rgb(219,110,26)" fg:x="221829" fg:w="47"/><text x="91.9827%" y="991.50"></text></g><g><title>rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write_opt (6,853 samples, 2.83%)</title><rect x="88.9336%" y="1109" width="2.8339%" height="15" fill="rgb(239,160,33)" fg:x="215060" fg:w="6853"/><text x="89.1836%" y="1119.50">ro..</text></g><g><title>rocksdb_write (6,853 samples, 2.83%)</title><rect x="88.9336%" y="1093" width="2.8339%" height="15" fill="rgb(220,202,23)" fg:x="215060" fg:w="6853"/><text x="89.1836%" y="1103.50">ro..</text></g><g><title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (6,853 samples, 2.83%)</title><rect x="88.9336%" y="1077" width="2.8339%" height="15" fill="rgb(208,80,26)" fg:x="215060" fg:w="6853"/><text x="89.1836%" y="1087.50">ro..</text></g><g><title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*) (6,853 samples, 2.83%)</title><rect x="88.9336%" y="1061" width="2.8339%" height="15" fill="rgb(243,85,7)" fg:x="215060" fg:w="6853"/><text x="89.1836%" y="1071.50">ro..</text></g><g><title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2,329 samples, 0.96%)</title><rect x="90.8044%" y="1045" width="0.9631%" height="15" fill="rgb(228,77,47)" fg:x="219584" fg:w="2329"/><text x="91.0544%" y="1055.50"></text></g><g><title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2,329 samples, 0.96%)</title><rect x="90.8044%" y="1029" width="0.9631%" height="15" fill="rgb(212,226,8)" fg:x="219584" fg:w="2329"/><text x="91.0544%" y="1039.50"></text></g><g><title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch*::Handler, unsigned long, unsigned long) (2,329 samples, 0.96%)</title><rect x="90.8044%" y="1013" width="0.9631%" height="15" fill="rgb(241,120,54)" fg:x="219584" fg:w="2329"/><text x="91.0544%" y="1023.50"></text></g><g><title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (37 samples, 0.02%)</title><rect x="91.7522%" y="997" width="0.0153%" height="15" fill="rgb(226,80,16)" fg:x="221876" fg:w="37"/><text x="92.0022%" y="1007.50"></text></g><g><title>rocksdb::WriteBatchInternal::GetColumnFamilyIdAndTimestampSize(rocksdb::WriteBatch*, rocksdb::ColumnFamilyHandle*) (71 samples, 0.03%)</title><rect x="91.7753%" y="1061" width="0.0294%" height="15" fill="rgb(240,76,13)" fg:x="221932" fg:w="71"/><text x="92.0253%" y="1071.50"></text></g><g><title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (30 samples, 0.01%)</title><rect x="91.7923%" y="1045" width="0.0124%" height="15" fill="rgb(252,74,8)" fg:x="221973" fg:w="30"/><text x="92.0423%" y="1055.50"></text></g><g><title>rocksdb::PutVarint32(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, unsigned int) (147 samples, 0.06%)</title><rect x="91.8080%" y="1029" width="0.0608%" height="15" fill="rgb(244,155,2)" fg:x="222011" fg:w="147"/><text x="92.0580%" y="1039.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append(char const*, unsigned long) (76 samples, 0.03%)</title><rect x="91.8374%" y="1013" width="0.0314%" height="15" fill="rgb(215,81,35)" fg:x="222082" fg:w="76"/><text x="92.0874%" y="1023.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) (65 samples, 0.03%)</title><rect x="91.8419%" y="997" width="0.0269%" height="15" fill="rgb(206,55,2)" fg:x="222093" fg:w="65"/><text x="92.0919%" y="1007.50"></text></g><g><title>rocksdb::PutLengthPrefixedSlice(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice const&amp;) (153 samples, 0.06%)</title><rect x="91.8080%" y="1045" width="0.0633%" height="15" fill="rgb(231,2,34)" fg:x="222011" fg:w="153"/><text x="92.0580%" y="1055.50"></text></g><g><title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (174 samples, 0.07%)</title><rect x="91.8047%" y="1061" width="0.0720%" height="15" fill="rgb(242,176,48)" fg:x="222003" fg:w="174"/><text x="92.0547%" y="1071.50"></text></g><g><title>aptos_db::AptosDB::commit (7,400 samples, 3.06%)</title><rect x="88.8380%" y="1141" width="3.0601%" height="15" fill="rgb(249,31,36)" fg:x="214829" fg:w="7400"/><text x="89.0880%" y="1151.50">apt..</text></g><g><title>aptos_schemadb::DB::write_schemas (7,400 samples, 3.06%)</title><rect x="88.8380%" y="1125" width="3.0601%" height="15" fill="rgb(205,18,17)" fg:x="214829" fg:w="7400"/><text x="89.0880%" y="1135.50">apt..</text></g><g><title>rocksdb::write_batch::WriteBatchWithTransaction&lt;_&gt;::put_cf (316 samples, 0.13%)</title><rect x="91.7675%" y="1109" width="0.1307%" height="15" fill="rgb(254,130,5)" fg:x="221913" fg:w="316"/><text x="92.0175%" y="1119.50"></text></g><g><title>rocksdb_writebatch_put_cf (315 samples, 0.13%)</title><rect x="91.7679%" y="1093" width="0.1303%" height="15" fill="rgb(229,42,45)" fg:x="221914" fg:w="315"/><text x="92.0179%" y="1103.50"></text></g><g><title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (297 samples, 0.12%)</title><rect x="91.7753%" y="1077" width="0.1228%" height="15" fill="rgb(245,95,25)" fg:x="221932" fg:w="297"/><text x="92.0253%" y="1087.50"></text></g><g><title>std::enable_if&lt;(__assignable&lt;rocksdb::Status, unsigned int, unsigned long&gt;)(), std::tuple&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;&amp;&gt;::type std::tuple&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::operator=&lt;rocksdb::Status, unsigned int, unsigned long&gt;(std::tuple&lt;rocksdb::Status, unsigned int, unsigned long&gt;&amp;&amp;) (52 samples, 0.02%)</title><rect x="91.8766%" y="1061" width="0.0215%" height="15" fill="rgb(249,193,38)" fg:x="222177" fg:w="52"/><text x="92.1266%" y="1071.50"></text></g><g><title>void std::_Tuple_impl&lt;(unsigned long)0, rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::_M_assign&lt;rocksdb::Status, unsigned int, unsigned long&gt;(std::_Tuple_impl&lt;(unsigned long)0, rocksdb::Status, unsigned int, unsigned long&gt;&amp;&amp;) (52 samples, 0.02%)</title><rect x="91.8766%" y="1045" width="0.0215%" height="15" fill="rgb(241,140,43)" fg:x="222177" fg:w="52"/><text x="92.1266%" y="1055.50"></text></g><g><title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (52 samples, 0.02%)</title><rect x="91.8766%" y="1029" width="0.0215%" height="15" fill="rgb(245,78,48)" fg:x="222177" fg:w="52"/><text x="92.1266%" y="1039.50"></text></g><g><title>hashbrown::map::make_hash (26 samples, 0.01%)</title><rect x="91.9134%" y="805" width="0.0108%" height="15" fill="rgb(214,92,39)" fg:x="222266" fg:w="26"/><text x="92.1634%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 0.01%)</title><rect x="91.9134%" y="789" width="0.0108%" height="15" fill="rgb(211,189,14)" fg:x="222266" fg:w="26"/><text x="92.1634%" y="799.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbWriter&gt;::save_transactions (7,471 samples, 3.09%)</title><rect x="88.8372%" y="1189" width="3.0895%" height="15" fill="rgb(218,7,24)" fg:x="214827" fg:w="7471"/><text x="89.0872%" y="1199.50">&lt;ap..</text></g><g><title>aptos_db::gauged_api (7,471 samples, 3.09%)</title><rect x="88.8372%" y="1173" width="3.0895%" height="15" fill="rgb(224,200,49)" fg:x="214827" fg:w="7471"/><text x="89.0872%" y="1183.50">apt..</text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbWriter&gt;::save_transactions::{{closure}} (7,471 samples, 3.09%)</title><rect x="88.8372%" y="1157" width="3.0895%" height="15" fill="rgb(218,210,14)" fg:x="214827" fg:w="7471"/><text x="89.0872%" y="1167.50">&lt;ap..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (69 samples, 0.03%)</title><rect x="91.8981%" y="1141" width="0.0285%" height="15" fill="rgb(234,142,31)" fg:x="222229" fg:w="69"/><text x="92.1481%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (69 samples, 0.03%)</title><rect x="91.8981%" y="1125" width="0.0285%" height="15" fill="rgb(227,165,2)" fg:x="222229" fg:w="69"/><text x="92.1481%" y="1135.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (69 samples, 0.03%)</title><rect x="91.8981%" y="1109" width="0.0285%" height="15" fill="rgb(232,44,46)" fg:x="222229" fg:w="69"/><text x="92.1481%" y="1119.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (69 samples, 0.03%)</title><rect x="91.8981%" y="1093" width="0.0285%" height="15" fill="rgb(236,149,47)" fg:x="222229" fg:w="69"/><text x="92.1481%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (69 samples, 0.03%)</title><rect x="91.8981%" y="1077" width="0.0285%" height="15" fill="rgb(227,45,31)" fg:x="222229" fg:w="69"/><text x="92.1481%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (69 samples, 0.03%)</title><rect x="91.8981%" y="1061" width="0.0285%" height="15" fill="rgb(240,176,51)" fg:x="222229" fg:w="69"/><text x="92.1481%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (69 samples, 0.03%)</title><rect x="91.8981%" y="1045" width="0.0285%" height="15" fill="rgb(249,146,41)" fg:x="222229" fg:w="69"/><text x="92.1481%" y="1055.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (69 samples, 0.03%)</title><rect x="91.8981%" y="1029" width="0.0285%" height="15" fill="rgb(213,208,4)" fg:x="222229" fg:w="69"/><text x="92.1481%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (69 samples, 0.03%)</title><rect x="91.8981%" y="1013" width="0.0285%" height="15" fill="rgb(245,84,36)" fg:x="222229" fg:w="69"/><text x="92.1481%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (69 samples, 0.03%)</title><rect x="91.8981%" y="997" width="0.0285%" height="15" fill="rgb(254,84,18)" fg:x="222229" fg:w="69"/><text x="92.1481%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (69 samples, 0.03%)</title><rect x="91.8981%" y="981" width="0.0285%" height="15" fill="rgb(225,38,54)" fg:x="222229" fg:w="69"/><text x="92.1481%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (69 samples, 0.03%)</title><rect x="91.8981%" y="965" width="0.0285%" height="15" fill="rgb(246,50,30)" fg:x="222229" fg:w="69"/><text x="92.1481%" y="975.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (46 samples, 0.02%)</title><rect x="91.9077%" y="949" width="0.0190%" height="15" fill="rgb(246,148,9)" fg:x="222252" fg:w="46"/><text x="92.1577%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (46 samples, 0.02%)</title><rect x="91.9077%" y="933" width="0.0190%" height="15" fill="rgb(223,75,4)" fg:x="222252" fg:w="46"/><text x="92.1577%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (46 samples, 0.02%)</title><rect x="91.9077%" y="917" width="0.0190%" height="15" fill="rgb(239,148,41)" fg:x="222252" fg:w="46"/><text x="92.1577%" y="927.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (46 samples, 0.02%)</title><rect x="91.9077%" y="901" width="0.0190%" height="15" fill="rgb(205,195,3)" fg:x="222252" fg:w="46"/><text x="92.1577%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (46 samples, 0.02%)</title><rect x="91.9077%" y="885" width="0.0190%" height="15" fill="rgb(254,161,1)" fg:x="222252" fg:w="46"/><text x="92.1577%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (44 samples, 0.02%)</title><rect x="91.9085%" y="869" width="0.0182%" height="15" fill="rgb(211,229,8)" fg:x="222254" fg:w="44"/><text x="92.1585%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (44 samples, 0.02%)</title><rect x="91.9085%" y="853" width="0.0182%" height="15" fill="rgb(220,97,9)" fg:x="222254" fg:w="44"/><text x="92.1585%" y="863.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (44 samples, 0.02%)</title><rect x="91.9085%" y="837" width="0.0182%" height="15" fill="rgb(240,218,8)" fg:x="222254" fg:w="44"/><text x="92.1585%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (36 samples, 0.01%)</title><rect x="91.9118%" y="821" width="0.0149%" height="15" fill="rgb(250,44,0)" fg:x="222262" fg:w="36"/><text x="92.1618%" y="831.50"></text></g><g><title>tcache_alloc_large (89 samples, 0.04%)</title><rect x="91.9428%" y="293" width="0.0368%" height="15" fill="rgb(236,41,53)" fg:x="222337" fg:w="89"/><text x="92.1928%" y="303.50"></text></g><g><title>_rjem_je_large_palloc (49 samples, 0.02%)</title><rect x="91.9593%" y="277" width="0.0203%" height="15" fill="rgb(218,227,13)" fg:x="222377" fg:w="49"/><text x="92.2093%" y="287.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (49 samples, 0.02%)</title><rect x="91.9593%" y="261" width="0.0203%" height="15" fill="rgb(217,94,32)" fg:x="222377" fg:w="49"/><text x="92.2093%" y="271.50"></text></g><g><title>extent_recycle (38 samples, 0.02%)</title><rect x="91.9639%" y="245" width="0.0157%" height="15" fill="rgb(213,217,12)" fg:x="222388" fg:w="38"/><text x="92.2139%" y="255.50"></text></g><g><title>extent_recycle_split (25 samples, 0.01%)</title><rect x="91.9693%" y="229" width="0.0103%" height="15" fill="rgb(229,13,46)" fg:x="222401" fg:w="25"/><text x="92.2193%" y="239.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as core::clone::Clone&gt;::clone (136 samples, 0.06%)</title><rect x="91.9374%" y="565" width="0.0562%" height="15" fill="rgb(243,139,5)" fg:x="222324" fg:w="136"/><text x="92.1874%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (136 samples, 0.06%)</title><rect x="91.9374%" y="549" width="0.0562%" height="15" fill="rgb(249,38,45)" fg:x="222324" fg:w="136"/><text x="92.1874%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (136 samples, 0.06%)</title><rect x="91.9374%" y="533" width="0.0562%" height="15" fill="rgb(216,70,11)" fg:x="222324" fg:w="136"/><text x="92.1874%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (136 samples, 0.06%)</title><rect x="91.9374%" y="517" width="0.0562%" height="15" fill="rgb(253,101,25)" fg:x="222324" fg:w="136"/><text x="92.1874%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (136 samples, 0.06%)</title><rect x="91.9374%" y="501" width="0.0562%" height="15" fill="rgb(207,197,30)" fg:x="222324" fg:w="136"/><text x="92.1874%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (136 samples, 0.06%)</title><rect x="91.9374%" y="485" width="0.0562%" height="15" fill="rgb(238,87,13)" fg:x="222324" fg:w="136"/><text x="92.1874%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (136 samples, 0.06%)</title><rect x="91.9374%" y="469" width="0.0562%" height="15" fill="rgb(215,155,8)" fg:x="222324" fg:w="136"/><text x="92.1874%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (136 samples, 0.06%)</title><rect x="91.9374%" y="453" width="0.0562%" height="15" fill="rgb(239,166,38)" fg:x="222324" fg:w="136"/><text x="92.1874%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (136 samples, 0.06%)</title><rect x="91.9374%" y="437" width="0.0562%" height="15" fill="rgb(240,194,35)" fg:x="222324" fg:w="136"/><text x="92.1874%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (136 samples, 0.06%)</title><rect x="91.9374%" y="421" width="0.0562%" height="15" fill="rgb(219,10,44)" fg:x="222324" fg:w="136"/><text x="92.1874%" y="431.50"></text></g><g><title>alloc::alloc::alloc (136 samples, 0.06%)</title><rect x="91.9374%" y="405" width="0.0562%" height="15" fill="rgb(251,220,35)" fg:x="222324" fg:w="136"/><text x="92.1874%" y="415.50"></text></g><g><title>mallocx (123 samples, 0.05%)</title><rect x="91.9428%" y="389" width="0.0509%" height="15" fill="rgb(218,117,13)" fg:x="222337" fg:w="123"/><text x="92.1928%" y="399.50"></text></g><g><title>imalloc (123 samples, 0.05%)</title><rect x="91.9428%" y="373" width="0.0509%" height="15" fill="rgb(221,213,40)" fg:x="222337" fg:w="123"/><text x="92.1928%" y="383.50"></text></g><g><title>imalloc_body (123 samples, 0.05%)</title><rect x="91.9428%" y="357" width="0.0509%" height="15" fill="rgb(251,224,35)" fg:x="222337" fg:w="123"/><text x="92.1928%" y="367.50"></text></g><g><title>imalloc_no_sample (123 samples, 0.05%)</title><rect x="91.9428%" y="341" width="0.0509%" height="15" fill="rgb(241,33,39)" fg:x="222337" fg:w="123"/><text x="92.1928%" y="351.50"></text></g><g><title>iallocztm (123 samples, 0.05%)</title><rect x="91.9428%" y="325" width="0.0509%" height="15" fill="rgb(222,74,17)" fg:x="222337" fg:w="123"/><text x="92.1928%" y="335.50"></text></g><g><title>arena_malloc (123 samples, 0.05%)</title><rect x="91.9428%" y="309" width="0.0509%" height="15" fill="rgb(225,103,0)" fg:x="222337" fg:w="123"/><text x="92.1928%" y="319.50"></text></g><g><title>tcache_alloc_small (34 samples, 0.01%)</title><rect x="91.9796%" y="293" width="0.0141%" height="15" fill="rgb(240,0,12)" fg:x="222426" fg:w="34"/><text x="92.2296%" y="303.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (34 samples, 0.01%)</title><rect x="91.9796%" y="277" width="0.0141%" height="15" fill="rgb(233,213,37)" fg:x="222426" fg:w="34"/><text x="92.2296%" y="287.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (34 samples, 0.01%)</title><rect x="91.9796%" y="261" width="0.0141%" height="15" fill="rgb(225,84,52)" fg:x="222426" fg:w="34"/><text x="92.2296%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (252 samples, 0.10%)</title><rect x="91.9341%" y="581" width="0.1042%" height="15" fill="rgb(247,160,51)" fg:x="222316" fg:w="252"/><text x="92.1841%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (108 samples, 0.04%)</title><rect x="91.9937%" y="565" width="0.0447%" height="15" fill="rgb(244,60,51)" fg:x="222460" fg:w="108"/><text x="92.2437%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (108 samples, 0.04%)</title><rect x="91.9937%" y="549" width="0.0447%" height="15" fill="rgb(233,114,7)" fg:x="222460" fg:w="108"/><text x="92.2437%" y="559.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (108 samples, 0.04%)</title><rect x="91.9937%" y="533" width="0.0447%" height="15" fill="rgb(246,136,16)" fg:x="222460" fg:w="108"/><text x="92.2437%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (108 samples, 0.04%)</title><rect x="91.9937%" y="517" width="0.0447%" height="15" fill="rgb(243,114,45)" fg:x="222460" fg:w="108"/><text x="92.2437%" y="527.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as core::clone::Clone&gt;::clone (53 samples, 0.02%)</title><rect x="92.0408%" y="581" width="0.0219%" height="15" fill="rgb(247,183,43)" fg:x="222574" fg:w="53"/><text x="92.2908%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (53 samples, 0.02%)</title><rect x="92.0408%" y="565" width="0.0219%" height="15" fill="rgb(251,210,42)" fg:x="222574" fg:w="53"/><text x="92.2908%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (53 samples, 0.02%)</title><rect x="92.0408%" y="549" width="0.0219%" height="15" fill="rgb(221,88,35)" fg:x="222574" fg:w="53"/><text x="92.2908%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (53 samples, 0.02%)</title><rect x="92.0408%" y="533" width="0.0219%" height="15" fill="rgb(242,21,20)" fg:x="222574" fg:w="53"/><text x="92.2908%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (53 samples, 0.02%)</title><rect x="92.0408%" y="517" width="0.0219%" height="15" fill="rgb(233,226,36)" fg:x="222574" fg:w="53"/><text x="92.2908%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (53 samples, 0.02%)</title><rect x="92.0408%" y="501" width="0.0219%" height="15" fill="rgb(243,189,34)" fg:x="222574" fg:w="53"/><text x="92.2908%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (53 samples, 0.02%)</title><rect x="92.0408%" y="485" width="0.0219%" height="15" fill="rgb(207,145,50)" fg:x="222574" fg:w="53"/><text x="92.2908%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (53 samples, 0.02%)</title><rect x="92.0408%" y="469" width="0.0219%" height="15" fill="rgb(242,1,50)" fg:x="222574" fg:w="53"/><text x="92.2908%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53 samples, 0.02%)</title><rect x="92.0408%" y="453" width="0.0219%" height="15" fill="rgb(231,65,32)" fg:x="222574" fg:w="53"/><text x="92.2908%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.02%)</title><rect x="92.0408%" y="437" width="0.0219%" height="15" fill="rgb(208,68,49)" fg:x="222574" fg:w="53"/><text x="92.2908%" y="447.50"></text></g><g><title>alloc::alloc::alloc (53 samples, 0.02%)</title><rect x="92.0408%" y="421" width="0.0219%" height="15" fill="rgb(253,54,49)" fg:x="222574" fg:w="53"/><text x="92.2908%" y="431.50"></text></g><g><title>mallocx (52 samples, 0.02%)</title><rect x="92.0412%" y="405" width="0.0215%" height="15" fill="rgb(245,186,24)" fg:x="222575" fg:w="52"/><text x="92.2912%" y="415.50"></text></g><g><title>imalloc (48 samples, 0.02%)</title><rect x="92.0429%" y="389" width="0.0198%" height="15" fill="rgb(209,2,41)" fg:x="222579" fg:w="48"/><text x="92.2929%" y="399.50"></text></g><g><title>imalloc_body (48 samples, 0.02%)</title><rect x="92.0429%" y="373" width="0.0198%" height="15" fill="rgb(242,208,54)" fg:x="222579" fg:w="48"/><text x="92.2929%" y="383.50"></text></g><g><title>imalloc_no_sample (48 samples, 0.02%)</title><rect x="92.0429%" y="357" width="0.0198%" height="15" fill="rgb(225,9,51)" fg:x="222579" fg:w="48"/><text x="92.2929%" y="367.50"></text></g><g><title>iallocztm (48 samples, 0.02%)</title><rect x="92.0429%" y="341" width="0.0198%" height="15" fill="rgb(207,207,25)" fg:x="222579" fg:w="48"/><text x="92.2929%" y="351.50"></text></g><g><title>arena_malloc (48 samples, 0.02%)</title><rect x="92.0429%" y="325" width="0.0198%" height="15" fill="rgb(253,96,18)" fg:x="222579" fg:w="48"/><text x="92.2929%" y="335.50"></text></g><g><title>tcache_alloc_small (48 samples, 0.02%)</title><rect x="92.0429%" y="309" width="0.0198%" height="15" fill="rgb(252,215,20)" fg:x="222579" fg:w="48"/><text x="92.2929%" y="319.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (48 samples, 0.02%)</title><rect x="92.0429%" y="293" width="0.0198%" height="15" fill="rgb(245,227,26)" fg:x="222579" fg:w="48"/><text x="92.2929%" y="303.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (48 samples, 0.02%)</title><rect x="92.0429%" y="277" width="0.0198%" height="15" fill="rgb(241,208,0)" fg:x="222579" fg:w="48"/><text x="92.2929%" y="287.50"></text></g><g><title>arena_bin_malloc_hard (48 samples, 0.02%)</title><rect x="92.0429%" y="261" width="0.0198%" height="15" fill="rgb(224,130,10)" fg:x="222579" fg:w="48"/><text x="92.2929%" y="271.50"></text></g><g><title>arena_bin_nonfull_slab_get (48 samples, 0.02%)</title><rect x="92.0429%" y="245" width="0.0198%" height="15" fill="rgb(237,29,0)" fg:x="222579" fg:w="48"/><text x="92.2929%" y="255.50"></text></g><g><title>arena_slab_alloc (48 samples, 0.02%)</title><rect x="92.0429%" y="229" width="0.0198%" height="15" fill="rgb(219,27,41)" fg:x="222579" fg:w="48"/><text x="92.2929%" y="239.50"></text></g><g><title>extent_recycle (36 samples, 0.01%)</title><rect x="92.0478%" y="213" width="0.0149%" height="15" fill="rgb(245,101,19)" fg:x="222591" fg:w="36"/><text x="92.2978%" y="223.50"></text></g><g><title>extent_recycle_split (28 samples, 0.01%)</title><rect x="92.0511%" y="197" width="0.0116%" height="15" fill="rgb(243,44,37)" fg:x="222599" fg:w="28"/><text x="92.3011%" y="207.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as core::clone::Clone&gt;::clone (358 samples, 0.15%)</title><rect x="91.9341%" y="661" width="0.1480%" height="15" fill="rgb(228,213,43)" fg:x="222316" fg:w="358"/><text x="92.1841%" y="671.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetV0 as core::clone::Clone&gt;::clone (358 samples, 0.15%)</title><rect x="91.9341%" y="645" width="0.1480%" height="15" fill="rgb(219,163,21)" fg:x="222316" fg:w="358"/><text x="92.1841%" y="655.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetMut as core::clone::Clone&gt;::clone (358 samples, 0.15%)</title><rect x="91.9341%" y="629" width="0.1480%" height="15" fill="rgb(234,86,24)" fg:x="222316" fg:w="358"/><text x="92.1841%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (358 samples, 0.15%)</title><rect x="91.9341%" y="613" width="0.1480%" height="15" fill="rgb(225,10,24)" fg:x="222316" fg:w="358"/><text x="92.1841%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (358 samples, 0.15%)</title><rect x="91.9341%" y="597" width="0.1480%" height="15" fill="rgb(218,109,7)" fg:x="222316" fg:w="358"/><text x="92.1841%" y="607.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (47 samples, 0.02%)</title><rect x="92.0627%" y="581" width="0.0194%" height="15" fill="rgb(210,20,26)" fg:x="222627" fg:w="47"/><text x="92.3127%" y="591.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (26 samples, 0.01%)</title><rect x="92.0875%" y="565" width="0.0108%" height="15" fill="rgb(216,18,1)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="575.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (26 samples, 0.01%)</title><rect x="92.0875%" y="549" width="0.0108%" height="15" fill="rgb(206,163,23)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26 samples, 0.01%)</title><rect x="92.0875%" y="533" width="0.0108%" height="15" fill="rgb(229,150,31)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 0.01%)</title><rect x="92.0875%" y="517" width="0.0108%" height="15" fill="rgb(231,10,5)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.01%)</title><rect x="92.0875%" y="501" width="0.0108%" height="15" fill="rgb(250,40,50)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 0.01%)</title><rect x="92.0875%" y="485" width="0.0108%" height="15" fill="rgb(217,119,7)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.01%)</title><rect x="92.0875%" y="469" width="0.0108%" height="15" fill="rgb(245,214,40)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.01%)</title><rect x="92.0875%" y="453" width="0.0108%" height="15" fill="rgb(216,187,1)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (26 samples, 0.01%)</title><rect x="92.0875%" y="437" width="0.0108%" height="15" fill="rgb(237,146,21)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.01%)</title><rect x="92.0875%" y="421" width="0.0108%" height="15" fill="rgb(210,174,47)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.01%)</title><rect x="92.0875%" y="405" width="0.0108%" height="15" fill="rgb(218,111,39)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="415.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.01%)</title><rect x="92.0875%" y="389" width="0.0108%" height="15" fill="rgb(224,95,19)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="399.50"></text></g><g><title>mallocx (26 samples, 0.01%)</title><rect x="92.0875%" y="373" width="0.0108%" height="15" fill="rgb(234,15,38)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="383.50"></text></g><g><title>imalloc (26 samples, 0.01%)</title><rect x="92.0875%" y="357" width="0.0108%" height="15" fill="rgb(246,56,12)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="367.50"></text></g><g><title>imalloc_body (26 samples, 0.01%)</title><rect x="92.0875%" y="341" width="0.0108%" height="15" fill="rgb(247,16,17)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="351.50"></text></g><g><title>imalloc_no_sample (26 samples, 0.01%)</title><rect x="92.0875%" y="325" width="0.0108%" height="15" fill="rgb(215,151,11)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="335.50"></text></g><g><title>iallocztm (26 samples, 0.01%)</title><rect x="92.0875%" y="309" width="0.0108%" height="15" fill="rgb(225,16,24)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="319.50"></text></g><g><title>arena_malloc (26 samples, 0.01%)</title><rect x="92.0875%" y="293" width="0.0108%" height="15" fill="rgb(217,117,5)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="303.50"></text></g><g><title>tcache_alloc_small (26 samples, 0.01%)</title><rect x="92.0875%" y="277" width="0.0108%" height="15" fill="rgb(246,187,53)" fg:x="222687" fg:w="26"/><text x="92.3375%" y="287.50"></text></g><g><title>tcache_alloc_large (41 samples, 0.02%)</title><rect x="92.1057%" y="261" width="0.0170%" height="15" fill="rgb(241,71,40)" fg:x="222731" fg:w="41"/><text x="92.3557%" y="271.50"></text></g><g><title>_rjem_je_large_palloc (41 samples, 0.02%)</title><rect x="92.1057%" y="245" width="0.0170%" height="15" fill="rgb(231,67,39)" fg:x="222731" fg:w="41"/><text x="92.3557%" y="255.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (40 samples, 0.02%)</title><rect x="92.1061%" y="229" width="0.0165%" height="15" fill="rgb(222,120,24)" fg:x="222732" fg:w="40"/><text x="92.3561%" y="239.50"></text></g><g><title>extent_recycle (36 samples, 0.01%)</title><rect x="92.1078%" y="213" width="0.0149%" height="15" fill="rgb(248,3,3)" fg:x="222736" fg:w="36"/><text x="92.3578%" y="223.50"></text></g><g><title>_rjem_je_extent_alloc (31 samples, 0.01%)</title><rect x="92.1343%" y="101" width="0.0128%" height="15" fill="rgb(228,218,5)" fg:x="222800" fg:w="31"/><text x="92.3843%" y="111.50"></text></g><g><title>_rjem_je_extent_avail_remove (30 samples, 0.01%)</title><rect x="92.1347%" y="85" width="0.0124%" height="15" fill="rgb(212,202,43)" fg:x="222801" fg:w="30"/><text x="92.3847%" y="95.50"></text></g><g><title>arena_bin_malloc_hard (60 samples, 0.02%)</title><rect x="92.1227%" y="213" width="0.0248%" height="15" fill="rgb(235,183,2)" fg:x="222772" fg:w="60"/><text x="92.3727%" y="223.50"></text></g><g><title>arena_bin_nonfull_slab_get (60 samples, 0.02%)</title><rect x="92.1227%" y="197" width="0.0248%" height="15" fill="rgb(230,165,10)" fg:x="222772" fg:w="60"/><text x="92.3727%" y="207.50"></text></g><g><title>arena_slab_alloc (59 samples, 0.02%)</title><rect x="92.1231%" y="181" width="0.0244%" height="15" fill="rgb(219,54,40)" fg:x="222773" fg:w="59"/><text x="92.3731%" y="191.50"></text></g><g><title>extent_recycle (51 samples, 0.02%)</title><rect x="92.1264%" y="165" width="0.0211%" height="15" fill="rgb(244,73,9)" fg:x="222781" fg:w="51"/><text x="92.3764%" y="175.50"></text></g><g><title>extent_recycle_split (41 samples, 0.02%)</title><rect x="92.1305%" y="149" width="0.0170%" height="15" fill="rgb(212,32,45)" fg:x="222791" fg:w="41"/><text x="92.3805%" y="159.50"></text></g><g><title>extent_split_interior (36 samples, 0.01%)</title><rect x="92.1326%" y="133" width="0.0149%" height="15" fill="rgb(205,58,31)" fg:x="222796" fg:w="36"/><text x="92.3826%" y="143.50"></text></g><g><title>extent_split_impl (36 samples, 0.01%)</title><rect x="92.1326%" y="117" width="0.0149%" height="15" fill="rgb(250,120,43)" fg:x="222796" fg:w="36"/><text x="92.3826%" y="127.50"></text></g><g><title>core::clone::Clone::clone (172 samples, 0.07%)</title><rect x="92.0875%" y="581" width="0.0711%" height="15" fill="rgb(235,13,10)" fg:x="222687" fg:w="172"/><text x="92.3375%" y="591.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (146 samples, 0.06%)</title><rect x="92.0983%" y="565" width="0.0604%" height="15" fill="rgb(232,219,31)" fg:x="222713" fg:w="146"/><text x="92.3483%" y="575.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValue as core::clone::Clone&gt;::clone (146 samples, 0.06%)</title><rect x="92.0983%" y="549" width="0.0604%" height="15" fill="rgb(218,157,51)" fg:x="222713" fg:w="146"/><text x="92.3483%" y="559.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as core::clone::Clone&gt;::clone (146 samples, 0.06%)</title><rect x="92.0983%" y="533" width="0.0604%" height="15" fill="rgb(211,91,52)" fg:x="222713" fg:w="146"/><text x="92.3483%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (146 samples, 0.06%)</title><rect x="92.0983%" y="517" width="0.0604%" height="15" fill="rgb(240,173,1)" fg:x="222713" fg:w="146"/><text x="92.3483%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (146 samples, 0.06%)</title><rect x="92.0983%" y="501" width="0.0604%" height="15" fill="rgb(248,20,47)" fg:x="222713" fg:w="146"/><text x="92.3483%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (146 samples, 0.06%)</title><rect x="92.0983%" y="485" width="0.0604%" height="15" fill="rgb(217,221,40)" fg:x="222713" fg:w="146"/><text x="92.3483%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (146 samples, 0.06%)</title><rect x="92.0983%" y="469" width="0.0604%" height="15" fill="rgb(226,149,51)" fg:x="222713" fg:w="146"/><text x="92.3483%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (146 samples, 0.06%)</title><rect x="92.0983%" y="453" width="0.0604%" height="15" fill="rgb(252,193,7)" fg:x="222713" fg:w="146"/><text x="92.3483%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (146 samples, 0.06%)</title><rect x="92.0983%" y="437" width="0.0604%" height="15" fill="rgb(205,123,0)" fg:x="222713" fg:w="146"/><text x="92.3483%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (146 samples, 0.06%)</title><rect x="92.0983%" y="421" width="0.0604%" height="15" fill="rgb(233,173,25)" fg:x="222713" fg:w="146"/><text x="92.3483%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (146 samples, 0.06%)</title><rect x="92.0983%" y="405" width="0.0604%" height="15" fill="rgb(216,63,32)" fg:x="222713" fg:w="146"/><text x="92.3483%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (146 samples, 0.06%)</title><rect x="92.0983%" y="389" width="0.0604%" height="15" fill="rgb(209,56,45)" fg:x="222713" fg:w="146"/><text x="92.3483%" y="399.50"></text></g><g><title>alloc::alloc::alloc (146 samples, 0.06%)</title><rect x="92.0983%" y="373" width="0.0604%" height="15" fill="rgb(226,111,49)" fg:x="222713" fg:w="146"/><text x="92.3483%" y="383.50"></text></g><g><title>mallocx (128 samples, 0.05%)</title><rect x="92.1057%" y="357" width="0.0529%" height="15" fill="rgb(244,181,21)" fg:x="222731" fg:w="128"/><text x="92.3557%" y="367.50"></text></g><g><title>imalloc (128 samples, 0.05%)</title><rect x="92.1057%" y="341" width="0.0529%" height="15" fill="rgb(222,126,15)" fg:x="222731" fg:w="128"/><text x="92.3557%" y="351.50"></text></g><g><title>imalloc_body (128 samples, 0.05%)</title><rect x="92.1057%" y="325" width="0.0529%" height="15" fill="rgb(222,95,17)" fg:x="222731" fg:w="128"/><text x="92.3557%" y="335.50"></text></g><g><title>imalloc_no_sample (128 samples, 0.05%)</title><rect x="92.1057%" y="309" width="0.0529%" height="15" fill="rgb(254,46,5)" fg:x="222731" fg:w="128"/><text x="92.3557%" y="319.50"></text></g><g><title>iallocztm (128 samples, 0.05%)</title><rect x="92.1057%" y="293" width="0.0529%" height="15" fill="rgb(236,216,35)" fg:x="222731" fg:w="128"/><text x="92.3557%" y="303.50"></text></g><g><title>arena_malloc (128 samples, 0.05%)</title><rect x="92.1057%" y="277" width="0.0529%" height="15" fill="rgb(217,187,26)" fg:x="222731" fg:w="128"/><text x="92.3557%" y="287.50"></text></g><g><title>tcache_alloc_small (87 samples, 0.04%)</title><rect x="92.1227%" y="261" width="0.0360%" height="15" fill="rgb(207,192,25)" fg:x="222772" fg:w="87"/><text x="92.3727%" y="271.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (87 samples, 0.04%)</title><rect x="92.1227%" y="245" width="0.0360%" height="15" fill="rgb(253,135,27)" fg:x="222772" fg:w="87"/><text x="92.3727%" y="255.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (87 samples, 0.04%)</title><rect x="92.1227%" y="229" width="0.0360%" height="15" fill="rgb(211,122,29)" fg:x="222772" fg:w="87"/><text x="92.3727%" y="239.50"></text></g><g><title>arena_slab_reg_alloc (27 samples, 0.01%)</title><rect x="92.1475%" y="213" width="0.0112%" height="15" fill="rgb(233,162,40)" fg:x="222832" fg:w="27"/><text x="92.3975%" y="223.50"></text></g><g><title>bitmap_sfu (27 samples, 0.01%)</title><rect x="92.1475%" y="197" width="0.0112%" height="15" fill="rgb(222,184,47)" fg:x="222832" fg:w="27"/><text x="92.3975%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (279 samples, 0.12%)</title><rect x="92.0875%" y="613" width="0.1154%" height="15" fill="rgb(249,99,23)" fg:x="222687" fg:w="279"/><text x="92.3375%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (279 samples, 0.12%)</title><rect x="92.0875%" y="597" width="0.1154%" height="15" fill="rgb(214,60,12)" fg:x="222687" fg:w="279"/><text x="92.3375%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (107 samples, 0.04%)</title><rect x="92.1587%" y="581" width="0.0442%" height="15" fill="rgb(250,229,36)" fg:x="222859" fg:w="107"/><text x="92.4087%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (107 samples, 0.04%)</title><rect x="92.1587%" y="565" width="0.0442%" height="15" fill="rgb(232,195,10)" fg:x="222859" fg:w="107"/><text x="92.4087%" y="575.50"></text></g><g><title>core::ptr::write (107 samples, 0.04%)</title><rect x="92.1587%" y="549" width="0.0442%" height="15" fill="rgb(205,213,31)" fg:x="222859" fg:w="107"/><text x="92.4087%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (308 samples, 0.13%)</title><rect x="92.0822%" y="661" width="0.1274%" height="15" fill="rgb(237,43,8)" fg:x="222674" fg:w="308"/><text x="92.3322%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (308 samples, 0.13%)</title><rect x="92.0822%" y="645" width="0.1274%" height="15" fill="rgb(216,208,3)" fg:x="222674" fg:w="308"/><text x="92.3322%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (295 samples, 0.12%)</title><rect x="92.0875%" y="629" width="0.1220%" height="15" fill="rgb(228,179,44)" fg:x="222687" fg:w="295"/><text x="92.3375%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (702 samples, 0.29%)</title><rect x="91.9267%" y="725" width="0.2903%" height="15" fill="rgb(230,192,27)" fg:x="222298" fg:w="702"/><text x="92.1767%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (702 samples, 0.29%)</title><rect x="91.9267%" y="709" width="0.2903%" height="15" fill="rgb(251,30,38)" fg:x="222298" fg:w="702"/><text x="92.1767%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (702 samples, 0.29%)</title><rect x="91.9267%" y="693" width="0.2903%" height="15" fill="rgb(246,55,52)" fg:x="222298" fg:w="702"/><text x="92.1767%" y="703.50"></text></g><g><title>aptos_executor_types::executed_chunk::ExecutedChunk::transactions_to_commit::{{closure}} (702 samples, 0.29%)</title><rect x="91.9267%" y="677" width="0.2903%" height="15" fill="rgb(249,79,26)" fg:x="222298" fg:w="702"/><text x="92.1767%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (703 samples, 0.29%)</title><rect x="91.9267%" y="1189" width="0.2907%" height="15" fill="rgb(220,202,16)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="1199.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (703 samples, 0.29%)</title><rect x="91.9267%" y="1173" width="0.2907%" height="15" fill="rgb(250,170,23)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="1183.50"></text></g><g><title>core::iter::adapters::try_process (703 samples, 0.29%)</title><rect x="91.9267%" y="1157" width="0.2907%" height="15" fill="rgb(230,7,37)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (703 samples, 0.29%)</title><rect x="91.9267%" y="1141" width="0.2907%" height="15" fill="rgb(213,71,1)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (703 samples, 0.29%)</title><rect x="91.9267%" y="1125" width="0.2907%" height="15" fill="rgb(227,87,39)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (703 samples, 0.29%)</title><rect x="91.9267%" y="1109" width="0.2907%" height="15" fill="rgb(210,41,29)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="1119.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (703 samples, 0.29%)</title><rect x="91.9267%" y="1093" width="0.2907%" height="15" fill="rgb(206,191,31)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (703 samples, 0.29%)</title><rect x="91.9267%" y="1077" width="0.2907%" height="15" fill="rgb(247,75,54)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (703 samples, 0.29%)</title><rect x="91.9267%" y="1061" width="0.2907%" height="15" fill="rgb(208,54,50)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (703 samples, 0.29%)</title><rect x="91.9267%" y="1045" width="0.2907%" height="15" fill="rgb(214,90,37)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (703 samples, 0.29%)</title><rect x="91.9267%" y="1029" width="0.2907%" height="15" fill="rgb(220,132,6)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (703 samples, 0.29%)</title><rect x="91.9267%" y="1013" width="0.2907%" height="15" fill="rgb(213,167,7)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="1023.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (703 samples, 0.29%)</title><rect x="91.9267%" y="997" width="0.2907%" height="15" fill="rgb(243,36,27)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (703 samples, 0.29%)</title><rect x="91.9267%" y="981" width="0.2907%" height="15" fill="rgb(235,147,12)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="991.50"></text></g><g><title>aptos_executor::block_executor::BlockExecutorInner&lt;V&gt;::commit_blocks_ext::{{closure}} (703 samples, 0.29%)</title><rect x="91.9267%" y="965" width="0.2907%" height="15" fill="rgb(212,198,44)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="975.50"></text></g><g><title>aptos_executor_types::executed_chunk::ExecutedChunk::transactions_to_commit (703 samples, 0.29%)</title><rect x="91.9267%" y="949" width="0.2907%" height="15" fill="rgb(218,68,50)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (703 samples, 0.29%)</title><rect x="91.9267%" y="933" width="0.2907%" height="15" fill="rgb(224,79,48)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (703 samples, 0.29%)</title><rect x="91.9267%" y="917" width="0.2907%" height="15" fill="rgb(213,191,50)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="927.50"></text></g><g><title>core::iter::adapters::try_process (703 samples, 0.29%)</title><rect x="91.9267%" y="901" width="0.2907%" height="15" fill="rgb(254,146,10)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (703 samples, 0.29%)</title><rect x="91.9267%" y="885" width="0.2907%" height="15" fill="rgb(215,175,11)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (703 samples, 0.29%)</title><rect x="91.9267%" y="869" width="0.2907%" height="15" fill="rgb(207,49,7)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (703 samples, 0.29%)</title><rect x="91.9267%" y="853" width="0.2907%" height="15" fill="rgb(234,144,29)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (703 samples, 0.29%)</title><rect x="91.9267%" y="837" width="0.2907%" height="15" fill="rgb(213,222,48)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (703 samples, 0.29%)</title><rect x="91.9267%" y="821" width="0.2907%" height="15" fill="rgb(222,8,6)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (703 samples, 0.29%)</title><rect x="91.9267%" y="805" width="0.2907%" height="15" fill="rgb(221,114,49)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (703 samples, 0.29%)</title><rect x="91.9267%" y="789" width="0.2907%" height="15" fill="rgb(250,140,42)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (703 samples, 0.29%)</title><rect x="91.9267%" y="773" width="0.2907%" height="15" fill="rgb(250,150,27)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (703 samples, 0.29%)</title><rect x="91.9267%" y="757" width="0.2907%" height="15" fill="rgb(252,159,3)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (703 samples, 0.29%)</title><rect x="91.9267%" y="741" width="0.2907%" height="15" fill="rgb(241,182,3)" fg:x="222298" fg:w="703"/><text x="92.1767%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (40 samples, 0.02%)</title><rect x="92.2356%" y="901" width="0.0165%" height="15" fill="rgb(236,3,9)" fg:x="223045" fg:w="40"/><text x="92.4856%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (31 samples, 0.01%)</title><rect x="92.2393%" y="885" width="0.0128%" height="15" fill="rgb(223,227,51)" fg:x="223054" fg:w="31"/><text x="92.4893%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (31 samples, 0.01%)</title><rect x="92.2393%" y="869" width="0.0128%" height="15" fill="rgb(232,133,30)" fg:x="223054" fg:w="31"/><text x="92.4893%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (31 samples, 0.01%)</title><rect x="92.2393%" y="853" width="0.0128%" height="15" fill="rgb(209,93,27)" fg:x="223054" fg:w="31"/><text x="92.4893%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (31 samples, 0.01%)</title><rect x="92.2393%" y="837" width="0.0128%" height="15" fill="rgb(208,108,34)" fg:x="223054" fg:w="31"/><text x="92.4893%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (31 samples, 0.01%)</title><rect x="92.2393%" y="821" width="0.0128%" height="15" fill="rgb(215,189,13)" fg:x="223054" fg:w="31"/><text x="92.4893%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (40 samples, 0.02%)</title><rect x="92.2521%" y="869" width="0.0165%" height="15" fill="rgb(206,88,23)" fg:x="223085" fg:w="40"/><text x="92.5021%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.02%)</title><rect x="92.2521%" y="853" width="0.0165%" height="15" fill="rgb(240,173,0)" fg:x="223085" fg:w="40"/><text x="92.5021%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (40 samples, 0.02%)</title><rect x="92.2521%" y="837" width="0.0165%" height="15" fill="rgb(223,106,52)" fg:x="223085" fg:w="40"/><text x="92.5021%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (40 samples, 0.02%)</title><rect x="92.2521%" y="821" width="0.0165%" height="15" fill="rgb(206,130,16)" fg:x="223085" fg:w="40"/><text x="92.5021%" y="831.50"></text></g><g><title>sdallocx (35 samples, 0.01%)</title><rect x="92.2542%" y="805" width="0.0145%" height="15" fill="rgb(220,54,25)" fg:x="223090" fg:w="35"/><text x="92.5042%" y="815.50"></text></g><g><title>isfree (35 samples, 0.01%)</title><rect x="92.2542%" y="789" width="0.0145%" height="15" fill="rgb(210,4,38)" fg:x="223090" fg:w="35"/><text x="92.5042%" y="799.50"></text></g><g><title>isdalloct (35 samples, 0.01%)</title><rect x="92.2542%" y="773" width="0.0145%" height="15" fill="rgb(238,94,39)" fg:x="223090" fg:w="35"/><text x="92.5042%" y="783.50"></text></g><g><title>arena_sdalloc (35 samples, 0.01%)</title><rect x="92.2542%" y="757" width="0.0145%" height="15" fill="rgb(234,124,34)" fg:x="223090" fg:w="35"/><text x="92.5042%" y="767.50"></text></g><g><title>tcache_dalloc_small (35 samples, 0.01%)</title><rect x="92.2542%" y="741" width="0.0145%" height="15" fill="rgb(221,91,40)" fg:x="223090" fg:w="35"/><text x="92.5042%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (146 samples, 0.06%)</title><rect x="92.2261%" y="1029" width="0.0604%" height="15" fill="rgb(246,53,28)" fg:x="223022" fg:w="146"/><text x="92.4761%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (146 samples, 0.06%)</title><rect x="92.2261%" y="1013" width="0.0604%" height="15" fill="rgb(229,109,7)" fg:x="223022" fg:w="146"/><text x="92.4761%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (146 samples, 0.06%)</title><rect x="92.2261%" y="997" width="0.0604%" height="15" fill="rgb(249,117,8)" fg:x="223022" fg:w="146"/><text x="92.4761%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (146 samples, 0.06%)</title><rect x="92.2261%" y="981" width="0.0604%" height="15" fill="rgb(210,181,1)" fg:x="223022" fg:w="146"/><text x="92.4761%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 0.06%)</title><rect x="92.2261%" y="965" width="0.0604%" height="15" fill="rgb(211,66,1)" fg:x="223022" fg:w="146"/><text x="92.4761%" y="975.50"></text></g><g><title>core::mem::drop (146 samples, 0.06%)</title><rect x="92.2261%" y="949" width="0.0604%" height="15" fill="rgb(221,90,14)" fg:x="223022" fg:w="146"/><text x="92.4761%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (146 samples, 0.06%)</title><rect x="92.2261%" y="933" width="0.0604%" height="15" fill="rgb(219,222,44)" fg:x="223022" fg:w="146"/><text x="92.4761%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 0.06%)</title><rect x="92.2261%" y="917" width="0.0604%" height="15" fill="rgb(246,34,33)" fg:x="223022" fg:w="146"/><text x="92.4761%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (83 samples, 0.03%)</title><rect x="92.2521%" y="901" width="0.0343%" height="15" fill="rgb(227,135,41)" fg:x="223085" fg:w="83"/><text x="92.5021%" y="911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (83 samples, 0.03%)</title><rect x="92.2521%" y="885" width="0.0343%" height="15" fill="rgb(226,15,14)" fg:x="223085" fg:w="83"/><text x="92.5021%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (43 samples, 0.02%)</title><rect x="92.2687%" y="869" width="0.0178%" height="15" fill="rgb(236,148,47)" fg:x="223125" fg:w="43"/><text x="92.5187%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (43 samples, 0.02%)</title><rect x="92.2687%" y="853" width="0.0178%" height="15" fill="rgb(233,162,52)" fg:x="223125" fg:w="43"/><text x="92.5187%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (43 samples, 0.02%)</title><rect x="92.2687%" y="837" width="0.0178%" height="15" fill="rgb(244,35,28)" fg:x="223125" fg:w="43"/><text x="92.5187%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.02%)</title><rect x="92.2687%" y="821" width="0.0178%" height="15" fill="rgb(205,121,10)" fg:x="223125" fg:w="43"/><text x="92.5187%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (43 samples, 0.02%)</title><rect x="92.2687%" y="805" width="0.0178%" height="15" fill="rgb(250,58,18)" fg:x="223125" fg:w="43"/><text x="92.5187%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (43 samples, 0.02%)</title><rect x="92.2687%" y="789" width="0.0178%" height="15" fill="rgb(216,37,13)" fg:x="223125" fg:w="43"/><text x="92.5187%" y="799.50"></text></g><g><title>sdallocx (42 samples, 0.02%)</title><rect x="92.2691%" y="773" width="0.0174%" height="15" fill="rgb(221,215,42)" fg:x="223126" fg:w="42"/><text x="92.5191%" y="783.50"></text></g><g><title>isfree (42 samples, 0.02%)</title><rect x="92.2691%" y="757" width="0.0174%" height="15" fill="rgb(217,214,19)" fg:x="223126" fg:w="42"/><text x="92.5191%" y="767.50"></text></g><g><title>isdalloct (42 samples, 0.02%)</title><rect x="92.2691%" y="741" width="0.0174%" height="15" fill="rgb(233,139,13)" fg:x="223126" fg:w="42"/><text x="92.5191%" y="751.50"></text></g><g><title>arena_sdalloc (42 samples, 0.02%)</title><rect x="92.2691%" y="725" width="0.0174%" height="15" fill="rgb(247,168,23)" fg:x="223126" fg:w="42"/><text x="92.5191%" y="735.50"></text></g><g><title>tcache_dalloc_small (26 samples, 0.01%)</title><rect x="92.2757%" y="709" width="0.0108%" height="15" fill="rgb(207,202,1)" fg:x="223142" fg:w="26"/><text x="92.5257%" y="719.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (26 samples, 0.01%)</title><rect x="92.2757%" y="693" width="0.0108%" height="15" fill="rgb(220,155,48)" fg:x="223142" fg:w="26"/><text x="92.5257%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (61 samples, 0.03%)</title><rect x="92.2864%" y="933" width="0.0252%" height="15" fill="rgb(250,43,26)" fg:x="223168" fg:w="61"/><text x="92.5364%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (61 samples, 0.03%)</title><rect x="92.2864%" y="917" width="0.0252%" height="15" fill="rgb(212,190,23)" fg:x="223168" fg:w="61"/><text x="92.5364%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;(aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;)&gt; (61 samples, 0.03%)</title><rect x="92.2864%" y="901" width="0.0252%" height="15" fill="rgb(216,39,24)" fg:x="223168" fg:w="61"/><text x="92.5364%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt; (48 samples, 0.02%)</title><rect x="92.2918%" y="885" width="0.0198%" height="15" fill="rgb(252,113,16)" fg:x="223181" fg:w="48"/><text x="92.5418%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValue&gt; (48 samples, 0.02%)</title><rect x="92.2918%" y="869" width="0.0198%" height="15" fill="rgb(208,113,19)" fg:x="223181" fg:w="48"/><text x="92.5418%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValueInner&gt; (48 samples, 0.02%)</title><rect x="92.2918%" y="853" width="0.0198%" height="15" fill="rgb(234,107,25)" fg:x="223181" fg:w="48"/><text x="92.5418%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (48 samples, 0.02%)</title><rect x="92.2918%" y="837" width="0.0198%" height="15" fill="rgb(234,217,51)" fg:x="223181" fg:w="48"/><text x="92.5418%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (48 samples, 0.02%)</title><rect x="92.2918%" y="821" width="0.0198%" height="15" fill="rgb(251,29,42)" fg:x="223181" fg:w="48"/><text x="92.5418%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.02%)</title><rect x="92.2918%" y="805" width="0.0198%" height="15" fill="rgb(221,62,51)" fg:x="223181" fg:w="48"/><text x="92.5418%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (48 samples, 0.02%)</title><rect x="92.2918%" y="789" width="0.0198%" height="15" fill="rgb(240,192,43)" fg:x="223181" fg:w="48"/><text x="92.5418%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (48 samples, 0.02%)</title><rect x="92.2918%" y="773" width="0.0198%" height="15" fill="rgb(224,157,47)" fg:x="223181" fg:w="48"/><text x="92.5418%" y="783.50"></text></g><g><title>sdallocx (47 samples, 0.02%)</title><rect x="92.2922%" y="757" width="0.0194%" height="15" fill="rgb(226,84,45)" fg:x="223182" fg:w="47"/><text x="92.5422%" y="767.50"></text></g><g><title>isfree (47 samples, 0.02%)</title><rect x="92.2922%" y="741" width="0.0194%" height="15" fill="rgb(208,207,23)" fg:x="223182" fg:w="47"/><text x="92.5422%" y="751.50"></text></g><g><title>isdalloct (47 samples, 0.02%)</title><rect x="92.2922%" y="725" width="0.0194%" height="15" fill="rgb(253,34,51)" fg:x="223182" fg:w="47"/><text x="92.5422%" y="735.50"></text></g><g><title>arena_sdalloc (47 samples, 0.02%)</title><rect x="92.2922%" y="709" width="0.0194%" height="15" fill="rgb(227,26,34)" fg:x="223182" fg:w="47"/><text x="92.5422%" y="719.50"></text></g><g><title>tcache_dalloc_small (26 samples, 0.01%)</title><rect x="92.3009%" y="693" width="0.0108%" height="15" fill="rgb(245,75,19)" fg:x="223203" fg:w="26"/><text x="92.5509%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.04%)</title><rect x="92.2864%" y="981" width="0.0356%" height="15" fill="rgb(250,191,31)" fg:x="223168" fg:w="86"/><text x="92.5364%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (86 samples, 0.04%)</title><rect x="92.2864%" y="965" width="0.0356%" height="15" fill="rgb(224,11,50)" fg:x="223168" fg:w="86"/><text x="92.5364%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (86 samples, 0.04%)</title><rect x="92.2864%" y="949" width="0.0356%" height="15" fill="rgb(231,171,7)" fg:x="223168" fg:w="86"/><text x="92.5364%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (25 samples, 0.01%)</title><rect x="92.3117%" y="933" width="0.0103%" height="15" fill="rgb(252,214,10)" fg:x="223229" fg:w="25"/><text x="92.5617%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (25 samples, 0.01%)</title><rect x="92.3117%" y="917" width="0.0103%" height="15" fill="rgb(249,45,46)" fg:x="223229" fg:w="25"/><text x="92.5617%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (25 samples, 0.01%)</title><rect x="92.3117%" y="901" width="0.0103%" height="15" fill="rgb(240,173,7)" fg:x="223229" fg:w="25"/><text x="92.5617%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (25 samples, 0.01%)</title><rect x="92.3117%" y="885" width="0.0103%" height="15" fill="rgb(235,214,13)" fg:x="223229" fg:w="25"/><text x="92.5617%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt;&gt; (90 samples, 0.04%)</title><rect x="92.2864%" y="1029" width="0.0372%" height="15" fill="rgb(245,156,8)" fg:x="223168" fg:w="90"/><text x="92.5364%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;,std::hash::random::RandomState&gt;&gt; (90 samples, 0.04%)</title><rect x="92.2864%" y="1013" width="0.0372%" height="15" fill="rgb(235,46,12)" fg:x="223168" fg:w="90"/><text x="92.5364%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;)&gt;&gt; (90 samples, 0.04%)</title><rect x="92.2864%" y="997" width="0.0372%" height="15" fill="rgb(221,81,14)" fg:x="223168" fg:w="90"/><text x="92.5364%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_executor_types::TransactionData&gt; (260 samples, 0.11%)</title><rect x="92.2174%" y="1045" width="0.1075%" height="15" fill="rgb(238,207,9)" fg:x="223001" fg:w="260"/><text x="92.4674%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_executor::components::block_tree::Block&gt;&gt; (264 samples, 0.11%)</title><rect x="92.2174%" y="1189" width="0.1092%" height="15" fill="rgb(224,129,35)" fg:x="223001" fg:w="264"/><text x="92.4674%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (264 samples, 0.11%)</title><rect x="92.2174%" y="1173" width="0.1092%" height="15" fill="rgb(243,218,34)" fg:x="223001" fg:w="264"/><text x="92.4674%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (264 samples, 0.11%)</title><rect x="92.2174%" y="1157" width="0.1092%" height="15" fill="rgb(220,166,13)" fg:x="223001" fg:w="264"/><text x="92.4674%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_executor::components::block_tree::Block&gt; (264 samples, 0.11%)</title><rect x="92.2174%" y="1141" width="0.1092%" height="15" fill="rgb(227,167,49)" fg:x="223001" fg:w="264"/><text x="92.4674%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_executor_types::executed_chunk::ExecutedChunk&gt; (264 samples, 0.11%)</title><rect x="92.2174%" y="1125" width="0.1092%" height="15" fill="rgb(234,142,12)" fg:x="223001" fg:w="264"/><text x="92.4674%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(aptos_types::transaction::Transaction,aptos_executor_types::TransactionData)&gt;&gt; (264 samples, 0.11%)</title><rect x="92.2174%" y="1109" width="0.1092%" height="15" fill="rgb(207,100,48)" fg:x="223001" fg:w="264"/><text x="92.4674%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (264 samples, 0.11%)</title><rect x="92.2174%" y="1093" width="0.1092%" height="15" fill="rgb(210,25,14)" fg:x="223001" fg:w="264"/><text x="92.4674%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(aptos_types::transaction::Transaction,aptos_executor_types::TransactionData)]&gt; (264 samples, 0.11%)</title><rect x="92.2174%" y="1077" width="0.1092%" height="15" fill="rgb(246,116,27)" fg:x="223001" fg:w="264"/><text x="92.4674%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;(aptos_types::transaction::Transaction,aptos_executor_types::TransactionData)&gt; (264 samples, 0.11%)</title><rect x="92.2174%" y="1061" width="0.1092%" height="15" fill="rgb(214,193,42)" fg:x="223001" fg:w="264"/><text x="92.4674%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (34 samples, 0.01%)</title><rect x="92.3336%" y="997" width="0.0141%" height="15" fill="rgb(214,122,8)" fg:x="223282" fg:w="34"/><text x="92.5836%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (25 samples, 0.01%)</title><rect x="92.3373%" y="981" width="0.0103%" height="15" fill="rgb(244,173,18)" fg:x="223291" fg:w="25"/><text x="92.5873%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (25 samples, 0.01%)</title><rect x="92.3373%" y="965" width="0.0103%" height="15" fill="rgb(232,68,19)" fg:x="223291" fg:w="25"/><text x="92.5873%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (25 samples, 0.01%)</title><rect x="92.3373%" y="949" width="0.0103%" height="15" fill="rgb(236,224,1)" fg:x="223291" fg:w="25"/><text x="92.5873%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (25 samples, 0.01%)</title><rect x="92.3373%" y="933" width="0.0103%" height="15" fill="rgb(240,11,8)" fg:x="223291" fg:w="25"/><text x="92.5873%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (25 samples, 0.01%)</title><rect x="92.3373%" y="917" width="0.0103%" height="15" fill="rgb(244,159,20)" fg:x="223291" fg:w="25"/><text x="92.5873%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (44 samples, 0.02%)</title><rect x="92.3476%" y="965" width="0.0182%" height="15" fill="rgb(240,223,54)" fg:x="223316" fg:w="44"/><text x="92.5976%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.02%)</title><rect x="92.3476%" y="949" width="0.0182%" height="15" fill="rgb(237,146,5)" fg:x="223316" fg:w="44"/><text x="92.5976%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (44 samples, 0.02%)</title><rect x="92.3476%" y="933" width="0.0182%" height="15" fill="rgb(218,221,32)" fg:x="223316" fg:w="44"/><text x="92.5976%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (44 samples, 0.02%)</title><rect x="92.3476%" y="917" width="0.0182%" height="15" fill="rgb(244,96,26)" fg:x="223316" fg:w="44"/><text x="92.5976%" y="927.50"></text></g><g><title>sdallocx (39 samples, 0.02%)</title><rect x="92.3497%" y="901" width="0.0161%" height="15" fill="rgb(245,184,37)" fg:x="223321" fg:w="39"/><text x="92.5997%" y="911.50"></text></g><g><title>isfree (39 samples, 0.02%)</title><rect x="92.3497%" y="885" width="0.0161%" height="15" fill="rgb(248,91,47)" fg:x="223321" fg:w="39"/><text x="92.5997%" y="895.50"></text></g><g><title>isdalloct (39 samples, 0.02%)</title><rect x="92.3497%" y="869" width="0.0161%" height="15" fill="rgb(243,199,8)" fg:x="223321" fg:w="39"/><text x="92.5997%" y="879.50"></text></g><g><title>arena_sdalloc (39 samples, 0.02%)</title><rect x="92.3497%" y="853" width="0.0161%" height="15" fill="rgb(249,12,15)" fg:x="223321" fg:w="39"/><text x="92.5997%" y="863.50"></text></g><g><title>tcache_dalloc_small (39 samples, 0.02%)</title><rect x="92.3497%" y="837" width="0.0161%" height="15" fill="rgb(245,97,12)" fg:x="223321" fg:w="39"/><text x="92.5997%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (129 samples, 0.05%)</title><rect x="92.3336%" y="1125" width="0.0533%" height="15" fill="rgb(244,61,1)" fg:x="223282" fg:w="129"/><text x="92.5836%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (129 samples, 0.05%)</title><rect x="92.3336%" y="1109" width="0.0533%" height="15" fill="rgb(222,194,10)" fg:x="223282" fg:w="129"/><text x="92.5836%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (129 samples, 0.05%)</title><rect x="92.3336%" y="1093" width="0.0533%" height="15" fill="rgb(226,178,8)" fg:x="223282" fg:w="129"/><text x="92.5836%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (129 samples, 0.05%)</title><rect x="92.3336%" y="1077" width="0.0533%" height="15" fill="rgb(241,32,34)" fg:x="223282" fg:w="129"/><text x="92.5836%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (129 samples, 0.05%)</title><rect x="92.3336%" y="1061" width="0.0533%" height="15" fill="rgb(254,26,6)" fg:x="223282" fg:w="129"/><text x="92.5836%" y="1071.50"></text></g><g><title>core::mem::drop (129 samples, 0.05%)</title><rect x="92.3336%" y="1045" width="0.0533%" height="15" fill="rgb(249,71,11)" fg:x="223282" fg:w="129"/><text x="92.5836%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (129 samples, 0.05%)</title><rect x="92.3336%" y="1029" width="0.0533%" height="15" fill="rgb(232,170,27)" fg:x="223282" fg:w="129"/><text x="92.5836%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (129 samples, 0.05%)</title><rect x="92.3336%" y="1013" width="0.0533%" height="15" fill="rgb(214,223,17)" fg:x="223282" fg:w="129"/><text x="92.5836%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (95 samples, 0.04%)</title><rect x="92.3476%" y="997" width="0.0393%" height="15" fill="rgb(250,18,15)" fg:x="223316" fg:w="95"/><text x="92.5976%" y="1007.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (95 samples, 0.04%)</title><rect x="92.3476%" y="981" width="0.0393%" height="15" fill="rgb(212,153,51)" fg:x="223316" fg:w="95"/><text x="92.5976%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (51 samples, 0.02%)</title><rect x="92.3658%" y="965" width="0.0211%" height="15" fill="rgb(219,194,12)" fg:x="223360" fg:w="51"/><text x="92.6158%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (49 samples, 0.02%)</title><rect x="92.3869%" y="1029" width="0.0203%" height="15" fill="rgb(212,58,17)" fg:x="223411" fg:w="49"/><text x="92.6369%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (49 samples, 0.02%)</title><rect x="92.3869%" y="1013" width="0.0203%" height="15" fill="rgb(254,5,10)" fg:x="223411" fg:w="49"/><text x="92.6369%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;(aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;)&gt; (49 samples, 0.02%)</title><rect x="92.3869%" y="997" width="0.0203%" height="15" fill="rgb(246,91,7)" fg:x="223411" fg:w="49"/><text x="92.6369%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt; (27 samples, 0.01%)</title><rect x="92.3960%" y="981" width="0.0112%" height="15" fill="rgb(218,108,49)" fg:x="223433" fg:w="27"/><text x="92.6460%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValue&gt; (27 samples, 0.01%)</title><rect x="92.3960%" y="965" width="0.0112%" height="15" fill="rgb(238,123,20)" fg:x="223433" fg:w="27"/><text x="92.6460%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValueInner&gt; (27 samples, 0.01%)</title><rect x="92.3960%" y="949" width="0.0112%" height="15" fill="rgb(231,69,23)" fg:x="223433" fg:w="27"/><text x="92.6460%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (27 samples, 0.01%)</title><rect x="92.3960%" y="933" width="0.0112%" height="15" fill="rgb(230,209,3)" fg:x="223433" fg:w="27"/><text x="92.6460%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (27 samples, 0.01%)</title><rect x="92.3960%" y="917" width="0.0112%" height="15" fill="rgb(231,19,0)" fg:x="223433" fg:w="27"/><text x="92.6460%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.01%)</title><rect x="92.3960%" y="901" width="0.0112%" height="15" fill="rgb(226,192,25)" fg:x="223433" fg:w="27"/><text x="92.6460%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.01%)</title><rect x="92.3960%" y="885" width="0.0112%" height="15" fill="rgb(223,175,53)" fg:x="223433" fg:w="27"/><text x="92.6460%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.01%)</title><rect x="92.3960%" y="869" width="0.0112%" height="15" fill="rgb(248,35,51)" fg:x="223433" fg:w="27"/><text x="92.6460%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.03%)</title><rect x="92.3869%" y="1077" width="0.0302%" height="15" fill="rgb(230,37,26)" fg:x="223411" fg:w="73"/><text x="92.6369%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (73 samples, 0.03%)</title><rect x="92.3869%" y="1061" width="0.0302%" height="15" fill="rgb(206,120,22)" fg:x="223411" fg:w="73"/><text x="92.6369%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (73 samples, 0.03%)</title><rect x="92.3869%" y="1045" width="0.0302%" height="15" fill="rgb(207,165,28)" fg:x="223411" fg:w="73"/><text x="92.6369%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionToCommit&gt; (215 samples, 0.09%)</title><rect x="92.3303%" y="1141" width="0.0889%" height="15" fill="rgb(226,23,46)" fg:x="223274" fg:w="215"/><text x="92.5803%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt;&gt; (78 samples, 0.03%)</title><rect x="92.3869%" y="1125" width="0.0323%" height="15" fill="rgb(208,130,44)" fg:x="223411" fg:w="78"/><text x="92.6369%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;,std::hash::random::RandomState&gt;&gt; (78 samples, 0.03%)</title><rect x="92.3869%" y="1109" width="0.0323%" height="15" fill="rgb(231,67,8)" fg:x="223411" fg:w="78"/><text x="92.6369%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;)&gt;&gt; (78 samples, 0.03%)</title><rect x="92.3869%" y="1093" width="0.0323%" height="15" fill="rgb(205,183,22)" fg:x="223411" fg:w="78"/><text x="92.6369%" y="1103.50"></text></g><g><title>aptos_executor_types::BlockExecutorTrait::commit_blocks (8,663 samples, 3.58%)</title><rect x="88.8372%" y="1237" width="3.5824%" height="15" fill="rgb(224,47,9)" fg:x="214827" fg:w="8663"/><text x="89.0872%" y="1247.50">apto..</text></g><g><title>&lt;aptos_executor::block_executor::BlockExecutor&lt;V&gt; as aptos_executor_types::BlockExecutorTrait&gt;::commit_blocks_ext (8,663 samples, 3.58%)</title><rect x="88.8372%" y="1221" width="3.5824%" height="15" fill="rgb(250,183,49)" fg:x="214827" fg:w="8663"/><text x="89.0872%" y="1231.50">&lt;apt..</text></g><g><title>aptos_executor::block_executor::BlockExecutorInner&lt;V&gt;::commit_blocks_ext (8,663 samples, 3.58%)</title><rect x="88.8372%" y="1205" width="3.5824%" height="15" fill="rgb(220,151,39)" fg:x="214827" fg:w="8663"/><text x="89.0872%" y="1215.50">apto..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::transaction::TransactionToCommit&gt;&gt; (225 samples, 0.09%)</title><rect x="92.3266%" y="1189" width="0.0930%" height="15" fill="rgb(220,118,20)" fg:x="223265" fg:w="225"/><text x="92.5766%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (225 samples, 0.09%)</title><rect x="92.3266%" y="1173" width="0.0930%" height="15" fill="rgb(231,65,51)" fg:x="223265" fg:w="225"/><text x="92.5766%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::transaction::TransactionToCommit]&gt; (225 samples, 0.09%)</title><rect x="92.3266%" y="1157" width="0.0930%" height="15" fill="rgb(253,125,37)" fg:x="223265" fg:w="225"/><text x="92.5766%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (223,476 samples, 92.41%)</title><rect x="0.0062%" y="2581" width="92.4138%" height="15" fill="rgb(232,102,6)" fg:x="15" fg:w="223476"/><text x="0.2562%" y="2591.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (223,476 samples, 92.41%)</title><rect x="0.0062%" y="2565" width="92.4138%" height="15" fill="rgb(251,105,13)" fg:x="15" fg:w="223476"/><text x="0.2562%" y="2575.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (223,476 samples, 92.41%)</title><rect x="0.0062%" y="2549" width="92.4138%" height="15" fill="rgb(222,179,29)" fg:x="15" fg:w="223476"/><text x="0.2562%" y="2559.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (223,476 samples, 92.41%)</title><rect x="0.0062%" y="2533" width="92.4138%" height="15" fill="rgb(229,180,53)" fg:x="15" fg:w="223476"/><text x="0.2562%" y="2543.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (223,476 samples, 92.41%)</title><rect x="0.0062%" y="2517" width="92.4138%" height="15" fill="rgb(238,104,13)" fg:x="15" fg:w="223476"/><text x="0.2562%" y="2527.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (223,476 samples, 92.41%)</title><rect x="0.0062%" y="2501" width="92.4138%" height="15" fill="rgb(210,130,5)" fg:x="15" fg:w="223476"/><text x="0.2562%" y="2511.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (223,476 samples, 92.41%)</title><rect x="0.0062%" y="2485" width="92.4138%" height="15" fill="rgb(233,87,49)" fg:x="15" fg:w="223476"/><text x="0.2562%" y="2495.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (223,476 samples, 92.41%)</title><rect x="0.0062%" y="2469" width="92.4138%" height="15" fill="rgb(243,34,9)" fg:x="15" fg:w="223476"/><text x="0.2562%" y="2479.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (223,476 samples, 92.41%)</title><rect x="0.0062%" y="2453" width="92.4138%" height="15" fill="rgb(235,225,10)" fg:x="15" fg:w="223476"/><text x="0.2562%" y="2463.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (223,476 samples, 92.41%)</title><rect x="0.0062%" y="2437" width="92.4138%" height="15" fill="rgb(212,0,30)" fg:x="15" fg:w="223476"/><text x="0.2562%" y="2447.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2421" width="91.3552%" height="15" fill="rgb(211,177,0)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2431.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2405" width="91.3552%" height="15" fill="rgb(225,220,11)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2415.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2389" width="91.3552%" height="15" fill="rgb(215,10,13)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2399.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2373" width="91.3552%" height="15" fill="rgb(240,177,14)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2383.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2357" width="91.3552%" height="15" fill="rgb(243,7,39)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2367.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2341" width="91.3552%" height="15" fill="rgb(212,99,0)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2351.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2325" width="91.3552%" height="15" fill="rgb(225,162,48)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2335.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2309" width="91.3552%" height="15" fill="rgb(246,16,25)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2319.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2293" width="91.3552%" height="15" fill="rgb(220,150,2)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2303.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2277" width="91.3552%" height="15" fill="rgb(237,113,11)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2287.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2261" width="91.3552%" height="15" fill="rgb(236,70,20)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2271.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2245" width="91.3552%" height="15" fill="rgb(234,94,7)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2255.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2229" width="91.3552%" height="15" fill="rgb(250,221,0)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2239.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2213" width="91.3552%" height="15" fill="rgb(245,149,46)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2223.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2197" width="91.3552%" height="15" fill="rgb(215,37,27)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2207.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2181" width="91.3552%" height="15" fill="rgb(232,65,3)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2191.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2165" width="91.3552%" height="15" fill="rgb(214,2,16)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2175.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2149" width="91.3552%" height="15" fill="rgb(227,131,50)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2159.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2133" width="91.3552%" height="15" fill="rgb(247,131,45)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2143.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2117" width="91.3552%" height="15" fill="rgb(215,97,47)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2127.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2101" width="91.3552%" height="15" fill="rgb(233,143,12)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2111.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2085" width="91.3552%" height="15" fill="rgb(222,57,17)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2095.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2069" width="91.3552%" height="15" fill="rgb(214,119,38)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2079.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::coop::budget (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2053" width="91.3552%" height="15" fill="rgb(217,28,47)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2063.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2037" width="91.3552%" height="15" fill="rgb(231,14,52)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2047.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2021" width="91.3552%" height="15" fill="rgb(220,158,18)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2031.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (220,916 samples, 91.36%)</title><rect x="1.0648%" y="2005" width="91.3552%" height="15" fill="rgb(222,143,46)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="2015.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1989" width="91.3552%" height="15" fill="rgb(227,165,5)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1999.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1973" width="91.3552%" height="15" fill="rgb(216,222,49)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1983.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1957" width="91.3552%" height="15" fill="rgb(238,73,39)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1967.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1941" width="91.3552%" height="15" fill="rgb(252,115,9)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1951.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1925" width="91.3552%" height="15" fill="rgb(238,202,4)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1935.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1909" width="91.3552%" height="15" fill="rgb(252,153,44)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1919.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1893" width="91.3552%" height="15" fill="rgb(235,128,27)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1903.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1877" width="91.3552%" height="15" fill="rgb(221,121,47)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1887.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1861" width="91.3552%" height="15" fill="rgb(247,211,47)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1871.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1845" width="91.3552%" height="15" fill="rgb(252,47,49)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1855.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1829" width="91.3552%" height="15" fill="rgb(219,119,53)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1839.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1813" width="91.3552%" height="15" fill="rgb(243,165,53)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1823.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>jsonrpsee_server::server::Server&lt;B,L&gt;::start_inner::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1797" width="91.3552%" height="15" fill="rgb(230,12,35)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1807.50">jsonrpsee_server::server::Server&lt;B,L&gt;::start_inner::{{closure}}</text></g><g><title>jsonrpsee_server::future::FutureDriver&lt;F&gt;::select_with::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1781" width="91.3552%" height="15" fill="rgb(239,57,49)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1791.50">jsonrpsee_server::future::FutureDriver&lt;F&gt;::select_with::{{closure}}</text></g><g><title>&lt;jsonrpsee_server::future::DriverSelect&lt;R,F&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1765" width="91.3552%" height="15" fill="rgb(231,154,7)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1775.50">&lt;jsonrpsee_server::future::DriverSelect&lt;R,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jsonrpsee_server::future::FutureDriver&lt;F&gt;::drive (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1749" width="91.3552%" height="15" fill="rgb(248,81,34)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1759.50">jsonrpsee_server::future::FutureDriver&lt;F&gt;::drive</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1733" width="91.3552%" height="15" fill="rgb(247,9,5)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1743.50">futures_util::future::future::FutureExt::poll_unpin</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1717" width="91.3552%" height="15" fill="rgb(228,172,27)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1727.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1701" width="91.3552%" height="15" fill="rgb(230,57,44)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1711.50">&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jsonrpsee_server::server::try_accept_connection::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1685" width="91.3552%" height="15" fill="rgb(249,35,22)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1695.50">jsonrpsee_server::server::try_accept_connection::{{closure}}</text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1669" width="91.3552%" height="15" fill="rgb(250,137,27)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1679.50">&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jsonrpsee_server::server::try_accept_connection::{{closure}}::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1653" width="91.3552%" height="15" fill="rgb(251,57,31)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1663.50">jsonrpsee_server::server::try_accept_connection::{{closure}}::{{closure}}</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1637" width="91.3552%" height="15" fill="rgb(238,60,0)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1647.50">&lt;&amp;mut F as core::future::future::Future&gt;::poll</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1621" width="91.3552%" height="15" fill="rgb(242,185,39)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1631.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1605" width="91.3552%" height="15" fill="rgb(240,63,43)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1615.50">&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;hyper::server::conn::ProtoServer&lt;T,B,S,E&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1589" width="91.3552%" height="15" fill="rgb(236,155,6)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1599.50">&lt;hyper::server::conn::ProtoServer&lt;T,B,S,E&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1573" width="91.3552%" height="15" fill="rgb(215,11,29)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1583.50">&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1557" width="91.3552%" height="15" fill="rgb(228,180,48)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1567.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1541" width="91.3552%" height="15" fill="rgb(241,102,12)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1551.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1525" width="91.3552%" height="15" fill="rgb(246,213,4)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1535.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1509" width="91.3552%" height="15" fill="rgb(218,134,35)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1519.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write</text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1493" width="91.3552%" height="15" fill="rgb(251,117,35)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1503.50">&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1477" width="91.3552%" height="15" fill="rgb(206,156,45)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1487.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1461" width="91.3552%" height="15" fill="rgb(218,52,27)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1471.50">&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1445" width="91.3552%" height="15" fill="rgb(238,83,36)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1455.50">&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jsonrpsee_server::transport::http::handle_request::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1429" width="91.3552%" height="15" fill="rgb(218,53,43)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1439.50">jsonrpsee_server::transport::http::handle_request::{{closure}}</text></g><g><title>jsonrpsee_server::transport::http::process_validated_request::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1413" width="91.3552%" height="15" fill="rgb(239,54,39)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1423.50">jsonrpsee_server::transport::http::process_validated_request::{{closure}}</text></g><g><title>jsonrpsee_server::transport::http::process_single_request::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1397" width="91.3552%" height="15" fill="rgb(212,198,13)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1407.50">jsonrpsee_server::transport::http::process_single_request::{{closure}}</text></g><g><title>jsonrpsee_server::transport::http::execute_call_with_tracing::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1381" width="91.3552%" height="15" fill="rgb(234,54,46)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1391.50">jsonrpsee_server::transport::http::execute_call_with_tracing::{{closure}}</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1365" width="91.3552%" height="15" fill="rgb(217,120,7)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1375.50">&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jsonrpsee_server::transport::http::execute_call_with_tracing::{{closure}}::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1349" width="91.3552%" height="15" fill="rgb(246,39,15)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1359.50">jsonrpsee_server::transport::http::execute_call_with_tracing::{{closure}}::{{closure}}</text></g><g><title>jsonrpsee_server::transport::http::execute_call::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1333" width="91.3552%" height="15" fill="rgb(242,143,31)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1343.50">jsonrpsee_server::transport::http::execute_call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1317" width="91.3552%" height="15" fill="rgb(252,60,24)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1327.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jsonrpsee_core::server::rpc_module::RpcModule&lt;Context&gt;::register_async_method::{{closure}}::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1301" width="91.3552%" height="15" fill="rgb(249,220,7)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1311.50">jsonrpsee_core::server::rpc_module::RpcModule&lt;Context&gt;::register_async_method::{{closure}}::{{closure}}</text></g><g><title>ethrpc::traits::eth::EthServer::into_rpc::{{closure}}::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1285" width="91.3552%" height="15" fill="rgb(236,67,13)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1295.50">ethrpc::traits::eth::EthServer::into_rpc::{{closure}}::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1269" width="91.3552%" height="15" fill="rgb(210,62,39)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1279.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;ethrpc::impls::eth::EthHandler as ethrpc::traits::eth::EthServer&gt;::stress_test_eth_txs_uniswap::{{closure}} (220,916 samples, 91.36%)</title><rect x="1.0648%" y="1253" width="91.3552%" height="15" fill="rgb(219,122,53)" fg:x="2575" fg:w="220916"/><text x="1.3148%" y="1263.50">&lt;ethrpc::impls::eth::EthHandler as ethrpc::traits::eth::EthServer&gt;::stress_test_eth_txs_uniswap::{{closure}}</text></g><g><title>api-20 (223,492 samples, 92.42%)</title><rect x="0.0000%" y="2645" width="92.4204%" height="15" fill="rgb(218,87,25)" fg:x="0" fg:w="223492"/><text x="0.2500%" y="2655.50">api-20</text></g><g><title>__GI___clone3 (223,477 samples, 92.41%)</title><rect x="0.0062%" y="2629" width="92.4142%" height="15" fill="rgb(234,179,48)" fg:x="15" fg:w="223477"/><text x="0.2562%" y="2639.50">__GI___clone3</text></g><g><title>start_thread (223,477 samples, 92.41%)</title><rect x="0.0062%" y="2613" width="92.4142%" height="15" fill="rgb(248,90,0)" fg:x="15" fg:w="223477"/><text x="0.2562%" y="2623.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (223,477 samples, 92.41%)</title><rect x="0.0062%" y="2597" width="92.4142%" height="15" fill="rgb(207,228,37)" fg:x="15" fg:w="223477"/><text x="0.2562%" y="2607.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (76 samples, 0.03%)</title><rect x="92.4295%" y="1813" width="0.0314%" height="15" fill="rgb(235,214,15)" fg:x="223514" fg:w="76"/><text x="92.6795%" y="1823.50"></text></g><g><title>std::io::Write::write_all (76 samples, 0.03%)</title><rect x="92.4295%" y="1797" width="0.0314%" height="15" fill="rgb(210,144,39)" fg:x="223514" fg:w="76"/><text x="92.6795%" y="1807.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (76 samples, 0.03%)</title><rect x="92.4295%" y="1781" width="0.0314%" height="15" fill="rgb(222,67,41)" fg:x="223514" fg:w="76"/><text x="92.6795%" y="1791.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (76 samples, 0.03%)</title><rect x="92.4295%" y="1765" width="0.0314%" height="15" fill="rgb(205,35,37)" fg:x="223514" fg:w="76"/><text x="92.6795%" y="1775.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (76 samples, 0.03%)</title><rect x="92.4295%" y="1749" width="0.0314%" height="15" fill="rgb(216,125,40)" fg:x="223514" fg:w="76"/><text x="92.6795%" y="1759.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (76 samples, 0.03%)</title><rect x="92.4295%" y="1733" width="0.0314%" height="15" fill="rgb(228,227,20)" fg:x="223514" fg:w="76"/><text x="92.6795%" y="1743.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (76 samples, 0.03%)</title><rect x="92.4295%" y="1717" width="0.0314%" height="15" fill="rgb(242,173,45)" fg:x="223514" fg:w="76"/><text x="92.6795%" y="1727.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (78 samples, 0.03%)</title><rect x="92.4295%" y="1989" width="0.0323%" height="15" fill="rgb(215,79,24)" fg:x="223514" fg:w="78"/><text x="92.6795%" y="1999.50"></text></g><g><title>bcs::ser::serialize_into (78 samples, 0.03%)</title><rect x="92.4295%" y="1973" width="0.0323%" height="15" fill="rgb(238,164,38)" fg:x="223514" fg:w="78"/><text x="92.6795%" y="1983.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (78 samples, 0.03%)</title><rect x="92.4295%" y="1957" width="0.0323%" height="15" fill="rgb(245,196,38)" fg:x="223514" fg:w="78"/><text x="92.6795%" y="1967.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (78 samples, 0.03%)</title><rect x="92.4295%" y="1941" width="0.0323%" height="15" fill="rgb(231,217,29)" fg:x="223514" fg:w="78"/><text x="92.6795%" y="1951.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (78 samples, 0.03%)</title><rect x="92.4295%" y="1925" width="0.0323%" height="15" fill="rgb(245,6,4)" fg:x="223514" fg:w="78"/><text x="92.6795%" y="1935.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (78 samples, 0.03%)</title><rect x="92.4295%" y="1909" width="0.0323%" height="15" fill="rgb(214,76,49)" fg:x="223514" fg:w="78"/><text x="92.6795%" y="1919.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (78 samples, 0.03%)</title><rect x="92.4295%" y="1893" width="0.0323%" height="15" fill="rgb(205,96,12)" fg:x="223514" fg:w="78"/><text x="92.6795%" y="1903.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (78 samples, 0.03%)</title><rect x="92.4295%" y="1877" width="0.0323%" height="15" fill="rgb(243,131,4)" fg:x="223514" fg:w="78"/><text x="92.6795%" y="1887.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (78 samples, 0.03%)</title><rect x="92.4295%" y="1861" width="0.0323%" height="15" fill="rgb(214,114,4)" fg:x="223514" fg:w="78"/><text x="92.6795%" y="1871.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (78 samples, 0.03%)</title><rect x="92.4295%" y="1845" width="0.0323%" height="15" fill="rgb(234,215,15)" fg:x="223514" fg:w="78"/><text x="92.6795%" y="1855.50"></text></g><g><title>serde::ser::Serializer::collect_map (78 samples, 0.03%)</title><rect x="92.4295%" y="1829" width="0.0323%" height="15" fill="rgb(250,216,45)" fg:x="223514" fg:w="78"/><text x="92.6795%" y="1839.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (84 samples, 0.03%)</title><rect x="92.4295%" y="2133" width="0.0347%" height="15" fill="rgb(236,128,4)" fg:x="223514" fg:w="84"/><text x="92.6795%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (84 samples, 0.03%)</title><rect x="92.4295%" y="2117" width="0.0347%" height="15" fill="rgb(234,50,33)" fg:x="223514" fg:w="84"/><text x="92.6795%" y="2127.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (84 samples, 0.03%)</title><rect x="92.4295%" y="2101" width="0.0347%" height="15" fill="rgb(253,131,37)" fg:x="223514" fg:w="84"/><text x="92.6795%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (84 samples, 0.03%)</title><rect x="92.4295%" y="2085" width="0.0347%" height="15" fill="rgb(218,55,27)" fg:x="223514" fg:w="84"/><text x="92.6795%" y="2095.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.03%)</title><rect x="92.4295%" y="2069" width="0.0347%" height="15" fill="rgb(241,220,28)" fg:x="223514" fg:w="84"/><text x="92.6795%" y="2079.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (84 samples, 0.03%)</title><rect x="92.4295%" y="2053" width="0.0347%" height="15" fill="rgb(241,90,48)" fg:x="223514" fg:w="84"/><text x="92.6795%" y="2063.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (84 samples, 0.03%)</title><rect x="92.4295%" y="2037" width="0.0347%" height="15" fill="rgb(216,43,37)" fg:x="223514" fg:w="84"/><text x="92.6795%" y="2047.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (84 samples, 0.03%)</title><rect x="92.4295%" y="2021" width="0.0347%" height="15" fill="rgb(207,173,9)" fg:x="223514" fg:w="84"/><text x="92.6795%" y="2031.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (84 samples, 0.03%)</title><rect x="92.4295%" y="2005" width="0.0347%" height="15" fill="rgb(240,126,30)" fg:x="223514" fg:w="84"/><text x="92.6795%" y="2015.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (42 samples, 0.02%)</title><rect x="92.4647%" y="1701" width="0.0174%" height="15" fill="rgb(228,178,53)" fg:x="223599" fg:w="42"/><text x="92.7147%" y="1711.50"></text></g><g><title>std::io::Write::write_all (41 samples, 0.02%)</title><rect x="92.4651%" y="1685" width="0.0170%" height="15" fill="rgb(217,33,4)" fg:x="223600" fg:w="41"/><text x="92.7151%" y="1695.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (41 samples, 0.02%)</title><rect x="92.4651%" y="1669" width="0.0170%" height="15" fill="rgb(206,124,34)" fg:x="223600" fg:w="41"/><text x="92.7151%" y="1679.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (41 samples, 0.02%)</title><rect x="92.4651%" y="1653" width="0.0170%" height="15" fill="rgb(208,122,53)" fg:x="223600" fg:w="41"/><text x="92.7151%" y="1663.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (41 samples, 0.02%)</title><rect x="92.4651%" y="1637" width="0.0170%" height="15" fill="rgb(215,202,26)" fg:x="223600" fg:w="41"/><text x="92.7151%" y="1647.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (41 samples, 0.02%)</title><rect x="92.4651%" y="1621" width="0.0170%" height="15" fill="rgb(232,198,31)" fg:x="223600" fg:w="41"/><text x="92.7151%" y="1631.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (41 samples, 0.02%)</title><rect x="92.4651%" y="1605" width="0.0170%" height="15" fill="rgb(222,23,35)" fg:x="223600" fg:w="41"/><text x="92.7151%" y="1615.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (44 samples, 0.02%)</title><rect x="92.4647%" y="2021" width="0.0182%" height="15" fill="rgb(242,27,53)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (44 samples, 0.02%)</title><rect x="92.4647%" y="2005" width="0.0182%" height="15" fill="rgb(210,216,42)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="2015.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (44 samples, 0.02%)</title><rect x="92.4647%" y="1989" width="0.0182%" height="15" fill="rgb(234,39,38)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1999.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (44 samples, 0.02%)</title><rect x="92.4647%" y="1973" width="0.0182%" height="15" fill="rgb(235,126,54)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.02%)</title><rect x="92.4647%" y="1957" width="0.0182%" height="15" fill="rgb(235,150,33)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1967.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (44 samples, 0.02%)</title><rect x="92.4647%" y="1941" width="0.0182%" height="15" fill="rgb(249,49,53)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1951.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (44 samples, 0.02%)</title><rect x="92.4647%" y="1925" width="0.0182%" height="15" fill="rgb(238,60,50)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1935.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (44 samples, 0.02%)</title><rect x="92.4647%" y="1909" width="0.0182%" height="15" fill="rgb(210,5,2)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1919.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (44 samples, 0.02%)</title><rect x="92.4647%" y="1893" width="0.0182%" height="15" fill="rgb(214,207,24)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1903.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (44 samples, 0.02%)</title><rect x="92.4647%" y="1877" width="0.0182%" height="15" fill="rgb(228,173,2)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1887.50"></text></g><g><title>bcs::ser::serialize_into (44 samples, 0.02%)</title><rect x="92.4647%" y="1861" width="0.0182%" height="15" fill="rgb(244,26,8)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1871.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (44 samples, 0.02%)</title><rect x="92.4647%" y="1845" width="0.0182%" height="15" fill="rgb(249,153,35)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1855.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (44 samples, 0.02%)</title><rect x="92.4647%" y="1829" width="0.0182%" height="15" fill="rgb(221,215,40)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1839.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (44 samples, 0.02%)</title><rect x="92.4647%" y="1813" width="0.0182%" height="15" fill="rgb(238,106,35)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1823.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (44 samples, 0.02%)</title><rect x="92.4647%" y="1797" width="0.0182%" height="15" fill="rgb(207,195,21)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1807.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (44 samples, 0.02%)</title><rect x="92.4647%" y="1781" width="0.0182%" height="15" fill="rgb(205,43,29)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1791.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (44 samples, 0.02%)</title><rect x="92.4647%" y="1765" width="0.0182%" height="15" fill="rgb(236,35,21)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1775.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (44 samples, 0.02%)</title><rect x="92.4647%" y="1749" width="0.0182%" height="15" fill="rgb(244,74,8)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1759.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (44 samples, 0.02%)</title><rect x="92.4647%" y="1733" width="0.0182%" height="15" fill="rgb(241,229,7)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1743.50"></text></g><g><title>serde::ser::Serializer::collect_map (44 samples, 0.02%)</title><rect x="92.4647%" y="1717" width="0.0182%" height="15" fill="rgb(212,223,25)" fg:x="223599" fg:w="44"/><text x="92.7147%" y="1727.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (27 samples, 0.01%)</title><rect x="92.4845%" y="1861" width="0.0112%" height="15" fill="rgb(234,58,53)" fg:x="223647" fg:w="27"/><text x="92.7345%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (27 samples, 0.01%)</title><rect x="92.4845%" y="1845" width="0.0112%" height="15" fill="rgb(244,36,1)" fg:x="223647" fg:w="27"/><text x="92.7345%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (27 samples, 0.01%)</title><rect x="92.4845%" y="1829" width="0.0112%" height="15" fill="rgb(222,40,54)" fg:x="223647" fg:w="27"/><text x="92.7345%" y="1839.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.01%)</title><rect x="92.4845%" y="1813" width="0.0112%" height="15" fill="rgb(210,207,39)" fg:x="223647" fg:w="27"/><text x="92.7345%" y="1823.50"></text></g><g><title>rayon_core::join::join_context (27 samples, 0.01%)</title><rect x="92.4845%" y="1797" width="0.0112%" height="15" fill="rgb(234,52,14)" fg:x="223647" fg:w="27"/><text x="92.7345%" y="1807.50"></text></g><g><title>rayon_core::registry::in_worker (27 samples, 0.01%)</title><rect x="92.4845%" y="1781" width="0.0112%" height="15" fill="rgb(239,108,46)" fg:x="223647" fg:w="27"/><text x="92.7345%" y="1791.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (27 samples, 0.01%)</title><rect x="92.4845%" y="1765" width="0.0112%" height="15" fill="rgb(252,223,5)" fg:x="223647" fg:w="27"/><text x="92.7345%" y="1775.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (64 samples, 0.03%)</title><rect x="92.4829%" y="1973" width="0.0265%" height="15" fill="rgb(227,181,11)" fg:x="223643" fg:w="64"/><text x="92.7329%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (64 samples, 0.03%)</title><rect x="92.4829%" y="1957" width="0.0265%" height="15" fill="rgb(248,126,40)" fg:x="223643" fg:w="64"/><text x="92.7329%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (64 samples, 0.03%)</title><rect x="92.4829%" y="1941" width="0.0265%" height="15" fill="rgb(243,1,18)" fg:x="223643" fg:w="64"/><text x="92.7329%" y="1951.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (64 samples, 0.03%)</title><rect x="92.4829%" y="1925" width="0.0265%" height="15" fill="rgb(214,145,23)" fg:x="223643" fg:w="64"/><text x="92.7329%" y="1935.50"></text></g><g><title>rayon_core::join::join_context (60 samples, 0.02%)</title><rect x="92.4845%" y="1909" width="0.0248%" height="15" fill="rgb(241,218,11)" fg:x="223647" fg:w="60"/><text x="92.7345%" y="1919.50"></text></g><g><title>rayon_core::registry::in_worker (60 samples, 0.02%)</title><rect x="92.4845%" y="1893" width="0.0248%" height="15" fill="rgb(214,219,24)" fg:x="223647" fg:w="60"/><text x="92.7345%" y="1903.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (60 samples, 0.02%)</title><rect x="92.4845%" y="1877" width="0.0248%" height="15" fill="rgb(235,32,7)" fg:x="223647" fg:w="60"/><text x="92.7345%" y="1887.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (45 samples, 0.02%)</title><rect x="92.5093%" y="1973" width="0.0186%" height="15" fill="rgb(227,121,28)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1983.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (45 samples, 0.02%)</title><rect x="92.5093%" y="1957" width="0.0186%" height="15" fill="rgb(216,129,49)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1967.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (45 samples, 0.02%)</title><rect x="92.5093%" y="1941" width="0.0186%" height="15" fill="rgb(207,194,50)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1951.50"></text></g><g><title>rayon_core::job::JobRef::execute (45 samples, 0.02%)</title><rect x="92.5093%" y="1925" width="0.0186%" height="15" fill="rgb(207,4,18)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1935.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (45 samples, 0.02%)</title><rect x="92.5093%" y="1909" width="0.0186%" height="15" fill="rgb(213,50,30)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1919.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (45 samples, 0.02%)</title><rect x="92.5093%" y="1893" width="0.0186%" height="15" fill="rgb(208,77,22)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (45 samples, 0.02%)</title><rect x="92.5093%" y="1877" width="0.0186%" height="15" fill="rgb(244,204,34)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (45 samples, 0.02%)</title><rect x="92.5093%" y="1861" width="0.0186%" height="15" fill="rgb(230,20,17)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1871.50"></text></g><g><title>std::panicking::try (45 samples, 0.02%)</title><rect x="92.5093%" y="1845" width="0.0186%" height="15" fill="rgb(237,83,15)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (45 samples, 0.02%)</title><rect x="92.5093%" y="1829" width="0.0186%" height="15" fill="rgb(221,109,25)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (45 samples, 0.02%)</title><rect x="92.5093%" y="1813" width="0.0186%" height="15" fill="rgb(205,194,52)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1823.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (45 samples, 0.02%)</title><rect x="92.5093%" y="1797" width="0.0186%" height="15" fill="rgb(244,173,54)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (45 samples, 0.02%)</title><rect x="92.5093%" y="1781" width="0.0186%" height="15" fill="rgb(227,181,18)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (45 samples, 0.02%)</title><rect x="92.5093%" y="1765" width="0.0186%" height="15" fill="rgb(238,36,30)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (45 samples, 0.02%)</title><rect x="92.5093%" y="1749" width="0.0186%" height="15" fill="rgb(254,85,0)" fg:x="223707" fg:w="45"/><text x="92.7593%" y="1759.50"></text></g><g><title>rayon_core::join::join_context (37 samples, 0.02%)</title><rect x="92.5126%" y="1733" width="0.0153%" height="15" fill="rgb(247,63,33)" fg:x="223715" fg:w="37"/><text x="92.7626%" y="1743.50"></text></g><g><title>rayon_core::registry::in_worker (37 samples, 0.02%)</title><rect x="92.5126%" y="1717" width="0.0153%" height="15" fill="rgb(220,7,54)" fg:x="223715" fg:w="37"/><text x="92.7626%" y="1727.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (37 samples, 0.02%)</title><rect x="92.5126%" y="1701" width="0.0153%" height="15" fill="rgb(238,227,21)" fg:x="223715" fg:w="37"/><text x="92.7626%" y="1711.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (216 samples, 0.09%)</title><rect x="92.4647%" y="2085" width="0.0893%" height="15" fill="rgb(237,29,31)" fg:x="223599" fg:w="216"/><text x="92.7147%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (216 samples, 0.09%)</title><rect x="92.4647%" y="2069" width="0.0893%" height="15" fill="rgb(211,21,50)" fg:x="223599" fg:w="216"/><text x="92.7147%" y="2079.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (216 samples, 0.09%)</title><rect x="92.4647%" y="2053" width="0.0893%" height="15" fill="rgb(239,119,2)" fg:x="223599" fg:w="216"/><text x="92.7147%" y="2063.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (216 samples, 0.09%)</title><rect x="92.4647%" y="2037" width="0.0893%" height="15" fill="rgb(250,2,39)" fg:x="223599" fg:w="216"/><text x="92.7147%" y="2047.50"></text></g><g><title>rayon_core::join::join_context (172 samples, 0.07%)</title><rect x="92.4829%" y="2021" width="0.0711%" height="15" fill="rgb(244,46,53)" fg:x="223643" fg:w="172"/><text x="92.7329%" y="2031.50"></text></g><g><title>rayon_core::registry::in_worker (172 samples, 0.07%)</title><rect x="92.4829%" y="2005" width="0.0711%" height="15" fill="rgb(209,21,19)" fg:x="223643" fg:w="172"/><text x="92.7329%" y="2015.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (172 samples, 0.07%)</title><rect x="92.4829%" y="1989" width="0.0711%" height="15" fill="rgb(236,145,4)" fg:x="223643" fg:w="172"/><text x="92.7329%" y="1999.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (63 samples, 0.03%)</title><rect x="92.5279%" y="1973" width="0.0261%" height="15" fill="rgb(220,133,36)" fg:x="223752" fg:w="63"/><text x="92.7779%" y="1983.50"></text></g><g><title>std::panic::catch_unwind (63 samples, 0.03%)</title><rect x="92.5279%" y="1957" width="0.0261%" height="15" fill="rgb(244,18,3)" fg:x="223752" fg:w="63"/><text x="92.7779%" y="1967.50"></text></g><g><title>std::panicking::try (63 samples, 0.03%)</title><rect x="92.5279%" y="1941" width="0.0261%" height="15" fill="rgb(232,171,48)" fg:x="223752" fg:w="63"/><text x="92.7779%" y="1951.50"></text></g><g><title>std::panicking::try::do_call (63 samples, 0.03%)</title><rect x="92.5279%" y="1925" width="0.0261%" height="15" fill="rgb(223,223,53)" fg:x="223752" fg:w="63"/><text x="92.7779%" y="1935.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (63 samples, 0.03%)</title><rect x="92.5279%" y="1909" width="0.0261%" height="15" fill="rgb(246,92,13)" fg:x="223752" fg:w="63"/><text x="92.7779%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (63 samples, 0.03%)</title><rect x="92.5279%" y="1893" width="0.0261%" height="15" fill="rgb(229,171,10)" fg:x="223752" fg:w="63"/><text x="92.7779%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (63 samples, 0.03%)</title><rect x="92.5279%" y="1877" width="0.0261%" height="15" fill="rgb(213,131,26)" fg:x="223752" fg:w="63"/><text x="92.7779%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (63 samples, 0.03%)</title><rect x="92.5279%" y="1861" width="0.0261%" height="15" fill="rgb(242,87,54)" fg:x="223752" fg:w="63"/><text x="92.7779%" y="1871.50"></text></g><g><title>rayon_core::join::join_context (44 samples, 0.02%)</title><rect x="92.5358%" y="1845" width="0.0182%" height="15" fill="rgb(237,21,35)" fg:x="223771" fg:w="44"/><text x="92.7858%" y="1855.50"></text></g><g><title>rayon_core::registry::in_worker (44 samples, 0.02%)</title><rect x="92.5358%" y="1829" width="0.0182%" height="15" fill="rgb(253,13,47)" fg:x="223771" fg:w="44"/><text x="92.7858%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (44 samples, 0.02%)</title><rect x="92.5358%" y="1813" width="0.0182%" height="15" fill="rgb(215,122,49)" fg:x="223771" fg:w="44"/><text x="92.7858%" y="1823.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (49 samples, 0.02%)</title><rect x="92.5561%" y="1525" width="0.0203%" height="15" fill="rgb(209,179,30)" fg:x="223820" fg:w="49"/><text x="92.8061%" y="1535.50"></text></g><g><title>std::io::Write::write_all (48 samples, 0.02%)</title><rect x="92.5565%" y="1509" width="0.0198%" height="15" fill="rgb(235,100,24)" fg:x="223821" fg:w="48"/><text x="92.8065%" y="1519.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (48 samples, 0.02%)</title><rect x="92.5565%" y="1493" width="0.0198%" height="15" fill="rgb(209,67,24)" fg:x="223821" fg:w="48"/><text x="92.8065%" y="1503.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (48 samples, 0.02%)</title><rect x="92.5565%" y="1477" width="0.0198%" height="15" fill="rgb(206,74,32)" fg:x="223821" fg:w="48"/><text x="92.8065%" y="1487.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (47 samples, 0.02%)</title><rect x="92.5569%" y="1461" width="0.0194%" height="15" fill="rgb(212,45,25)" fg:x="223822" fg:w="47"/><text x="92.8069%" y="1471.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (47 samples, 0.02%)</title><rect x="92.5569%" y="1445" width="0.0194%" height="15" fill="rgb(239,26,3)" fg:x="223822" fg:w="47"/><text x="92.8069%" y="1455.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (47 samples, 0.02%)</title><rect x="92.5569%" y="1429" width="0.0194%" height="15" fill="rgb(218,36,15)" fg:x="223822" fg:w="47"/><text x="92.8069%" y="1439.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (51 samples, 0.02%)</title><rect x="92.5561%" y="1701" width="0.0211%" height="15" fill="rgb(206,108,24)" fg:x="223820" fg:w="51"/><text x="92.8061%" y="1711.50"></text></g><g><title>bcs::ser::serialize_into (51 samples, 0.02%)</title><rect x="92.5561%" y="1685" width="0.0211%" height="15" fill="rgb(234,204,42)" fg:x="223820" fg:w="51"/><text x="92.8061%" y="1695.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (51 samples, 0.02%)</title><rect x="92.5561%" y="1669" width="0.0211%" height="15" fill="rgb(229,2,11)" fg:x="223820" fg:w="51"/><text x="92.8061%" y="1679.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (51 samples, 0.02%)</title><rect x="92.5561%" y="1653" width="0.0211%" height="15" fill="rgb(221,20,48)" fg:x="223820" fg:w="51"/><text x="92.8061%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (51 samples, 0.02%)</title><rect x="92.5561%" y="1637" width="0.0211%" height="15" fill="rgb(244,164,10)" fg:x="223820" fg:w="51"/><text x="92.8061%" y="1647.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (51 samples, 0.02%)</title><rect x="92.5561%" y="1621" width="0.0211%" height="15" fill="rgb(243,229,2)" fg:x="223820" fg:w="51"/><text x="92.8061%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (51 samples, 0.02%)</title><rect x="92.5561%" y="1605" width="0.0211%" height="15" fill="rgb(232,131,37)" fg:x="223820" fg:w="51"/><text x="92.8061%" y="1615.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (51 samples, 0.02%)</title><rect x="92.5561%" y="1589" width="0.0211%" height="15" fill="rgb(217,156,11)" fg:x="223820" fg:w="51"/><text x="92.8061%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (51 samples, 0.02%)</title><rect x="92.5561%" y="1573" width="0.0211%" height="15" fill="rgb(239,99,48)" fg:x="223820" fg:w="51"/><text x="92.8061%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (51 samples, 0.02%)</title><rect x="92.5561%" y="1557" width="0.0211%" height="15" fill="rgb(231,209,9)" fg:x="223820" fg:w="51"/><text x="92.8061%" y="1567.50"></text></g><g><title>serde::ser::Serializer::collect_map (51 samples, 0.02%)</title><rect x="92.5561%" y="1541" width="0.0211%" height="15" fill="rgb(254,97,27)" fg:x="223820" fg:w="51"/><text x="92.8061%" y="1551.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (56 samples, 0.02%)</title><rect x="92.5561%" y="1845" width="0.0232%" height="15" fill="rgb(223,151,38)" fg:x="223820" fg:w="56"/><text x="92.8061%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (56 samples, 0.02%)</title><rect x="92.5561%" y="1829" width="0.0232%" height="15" fill="rgb(219,206,35)" fg:x="223820" fg:w="56"/><text x="92.8061%" y="1839.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (56 samples, 0.02%)</title><rect x="92.5561%" y="1813" width="0.0232%" height="15" fill="rgb(216,130,31)" fg:x="223820" fg:w="56"/><text x="92.8061%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (56 samples, 0.02%)</title><rect x="92.5561%" y="1797" width="0.0232%" height="15" fill="rgb(251,97,34)" fg:x="223820" fg:w="56"/><text x="92.8061%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.02%)</title><rect x="92.5561%" y="1781" width="0.0232%" height="15" fill="rgb(246,159,47)" fg:x="223820" fg:w="56"/><text x="92.8061%" y="1791.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (56 samples, 0.02%)</title><rect x="92.5561%" y="1765" width="0.0232%" height="15" fill="rgb(232,87,10)" fg:x="223820" fg:w="56"/><text x="92.8061%" y="1775.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (56 samples, 0.02%)</title><rect x="92.5561%" y="1749" width="0.0232%" height="15" fill="rgb(249,1,37)" fg:x="223820" fg:w="56"/><text x="92.8061%" y="1759.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (56 samples, 0.02%)</title><rect x="92.5561%" y="1733" width="0.0232%" height="15" fill="rgb(239,135,14)" fg:x="223820" fg:w="56"/><text x="92.8061%" y="1743.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (56 samples, 0.02%)</title><rect x="92.5561%" y="1717" width="0.0232%" height="15" fill="rgb(253,116,46)" fg:x="223820" fg:w="56"/><text x="92.8061%" y="1727.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (37 samples, 0.02%)</title><rect x="92.5792%" y="1797" width="0.0153%" height="15" fill="rgb(222,217,37)" fg:x="223876" fg:w="37"/><text x="92.8292%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (37 samples, 0.02%)</title><rect x="92.5792%" y="1781" width="0.0153%" height="15" fill="rgb(252,96,8)" fg:x="223876" fg:w="37"/><text x="92.8292%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (37 samples, 0.02%)</title><rect x="92.5792%" y="1765" width="0.0153%" height="15" fill="rgb(254,103,41)" fg:x="223876" fg:w="37"/><text x="92.8292%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.02%)</title><rect x="92.5792%" y="1749" width="0.0153%" height="15" fill="rgb(218,213,19)" fg:x="223876" fg:w="37"/><text x="92.8292%" y="1759.50"></text></g><g><title>rayon_core::join::join_context (31 samples, 0.01%)</title><rect x="92.5817%" y="1733" width="0.0128%" height="15" fill="rgb(253,95,21)" fg:x="223882" fg:w="31"/><text x="92.8317%" y="1743.50"></text></g><g><title>rayon_core::registry::in_worker (31 samples, 0.01%)</title><rect x="92.5817%" y="1717" width="0.0128%" height="15" fill="rgb(229,26,28)" fg:x="223882" fg:w="31"/><text x="92.8317%" y="1727.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (31 samples, 0.01%)</title><rect x="92.5817%" y="1701" width="0.0128%" height="15" fill="rgb(230,129,16)" fg:x="223882" fg:w="31"/><text x="92.8317%" y="1711.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (56 samples, 0.02%)</title><rect x="92.5945%" y="1797" width="0.0232%" height="15" fill="rgb(236,126,17)" fg:x="223913" fg:w="56"/><text x="92.8445%" y="1807.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (56 samples, 0.02%)</title><rect x="92.5945%" y="1781" width="0.0232%" height="15" fill="rgb(209,33,33)" fg:x="223913" fg:w="56"/><text x="92.8445%" y="1791.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (55 samples, 0.02%)</title><rect x="92.5949%" y="1765" width="0.0227%" height="15" fill="rgb(227,85,29)" fg:x="223914" fg:w="55"/><text x="92.8449%" y="1775.50"></text></g><g><title>rayon_core::job::JobRef::execute (55 samples, 0.02%)</title><rect x="92.5949%" y="1749" width="0.0227%" height="15" fill="rgb(241,53,46)" fg:x="223914" fg:w="55"/><text x="92.8449%" y="1759.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (55 samples, 0.02%)</title><rect x="92.5949%" y="1733" width="0.0227%" height="15" fill="rgb(228,167,53)" fg:x="223914" fg:w="55"/><text x="92.8449%" y="1743.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (55 samples, 0.02%)</title><rect x="92.5949%" y="1717" width="0.0227%" height="15" fill="rgb(238,195,45)" fg:x="223914" fg:w="55"/><text x="92.8449%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (55 samples, 0.02%)</title><rect x="92.5949%" y="1701" width="0.0227%" height="15" fill="rgb(252,124,45)" fg:x="223914" fg:w="55"/><text x="92.8449%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (55 samples, 0.02%)</title><rect x="92.5949%" y="1685" width="0.0227%" height="15" fill="rgb(251,38,35)" fg:x="223914" fg:w="55"/><text x="92.8449%" y="1695.50"></text></g><g><title>std::panicking::try (55 samples, 0.02%)</title><rect x="92.5949%" y="1669" width="0.0227%" height="15" fill="rgb(227,33,2)" fg:x="223914" fg:w="55"/><text x="92.8449%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (55 samples, 0.02%)</title><rect x="92.5949%" y="1653" width="0.0227%" height="15" fill="rgb(223,157,46)" fg:x="223914" fg:w="55"/><text x="92.8449%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (55 samples, 0.02%)</title><rect x="92.5949%" y="1637" width="0.0227%" height="15" fill="rgb(222,78,41)" fg:x="223914" fg:w="55"/><text x="92.8449%" y="1647.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (55 samples, 0.02%)</title><rect x="92.5949%" y="1621" width="0.0227%" height="15" fill="rgb(248,176,11)" fg:x="223914" fg:w="55"/><text x="92.8449%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (55 samples, 0.02%)</title><rect x="92.5949%" y="1605" width="0.0227%" height="15" fill="rgb(241,221,18)" fg:x="223914" fg:w="55"/><text x="92.8449%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (55 samples, 0.02%)</title><rect x="92.5949%" y="1589" width="0.0227%" height="15" fill="rgb(218,85,22)" fg:x="223914" fg:w="55"/><text x="92.8449%" y="1599.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (55 samples, 0.02%)</title><rect x="92.5949%" y="1573" width="0.0227%" height="15" fill="rgb(222,223,7)" fg:x="223914" fg:w="55"/><text x="92.8449%" y="1583.50"></text></g><g><title>rayon_core::join::join_context (44 samples, 0.02%)</title><rect x="92.5995%" y="1557" width="0.0182%" height="15" fill="rgb(254,59,39)" fg:x="223925" fg:w="44"/><text x="92.8495%" y="1567.50"></text></g><g><title>rayon_core::registry::in_worker (44 samples, 0.02%)</title><rect x="92.5995%" y="1541" width="0.0182%" height="15" fill="rgb(247,100,27)" fg:x="223925" fg:w="44"/><text x="92.8495%" y="1551.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (44 samples, 0.02%)</title><rect x="92.5995%" y="1525" width="0.0182%" height="15" fill="rgb(237,207,10)" fg:x="223925" fg:w="44"/><text x="92.8495%" y="1535.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (31 samples, 0.01%)</title><rect x="92.6049%" y="1509" width="0.0128%" height="15" fill="rgb(220,121,28)" fg:x="223938" fg:w="31"/><text x="92.8549%" y="1519.50"></text></g><g><title>std::panic::catch_unwind (31 samples, 0.01%)</title><rect x="92.6049%" y="1493" width="0.0128%" height="15" fill="rgb(213,223,20)" fg:x="223938" fg:w="31"/><text x="92.8549%" y="1503.50"></text></g><g><title>std::panicking::try (31 samples, 0.01%)</title><rect x="92.6049%" y="1477" width="0.0128%" height="15" fill="rgb(205,121,27)" fg:x="223938" fg:w="31"/><text x="92.8549%" y="1487.50"></text></g><g><title>std::panicking::try::do_call (31 samples, 0.01%)</title><rect x="92.6049%" y="1461" width="0.0128%" height="15" fill="rgb(253,24,53)" fg:x="223938" fg:w="31"/><text x="92.8549%" y="1471.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (31 samples, 0.01%)</title><rect x="92.6049%" y="1445" width="0.0128%" height="15" fill="rgb(224,224,47)" fg:x="223938" fg:w="31"/><text x="92.8549%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (31 samples, 0.01%)</title><rect x="92.6049%" y="1429" width="0.0128%" height="15" fill="rgb(250,125,36)" fg:x="223938" fg:w="31"/><text x="92.8549%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (31 samples, 0.01%)</title><rect x="92.6049%" y="1413" width="0.0128%" height="15" fill="rgb(240,144,38)" fg:x="223938" fg:w="31"/><text x="92.8549%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (31 samples, 0.01%)</title><rect x="92.6049%" y="1397" width="0.0128%" height="15" fill="rgb(250,15,50)" fg:x="223938" fg:w="31"/><text x="92.8549%" y="1407.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (30 samples, 0.01%)</title><rect x="92.6177%" y="1525" width="0.0124%" height="15" fill="rgb(210,24,26)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1535.50"></text></g><g><title>bcs::ser::serialize_into (30 samples, 0.01%)</title><rect x="92.6177%" y="1509" width="0.0124%" height="15" fill="rgb(234,53,53)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (30 samples, 0.01%)</title><rect x="92.6177%" y="1493" width="0.0124%" height="15" fill="rgb(208,108,28)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1503.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (30 samples, 0.01%)</title><rect x="92.6177%" y="1477" width="0.0124%" height="15" fill="rgb(227,143,7)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (30 samples, 0.01%)</title><rect x="92.6177%" y="1461" width="0.0124%" height="15" fill="rgb(238,189,38)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1471.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (30 samples, 0.01%)</title><rect x="92.6177%" y="1445" width="0.0124%" height="15" fill="rgb(222,69,15)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 0.01%)</title><rect x="92.6177%" y="1429" width="0.0124%" height="15" fill="rgb(213,169,7)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1439.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (30 samples, 0.01%)</title><rect x="92.6177%" y="1413" width="0.0124%" height="15" fill="rgb(251,219,4)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (30 samples, 0.01%)</title><rect x="92.6177%" y="1397" width="0.0124%" height="15" fill="rgb(241,55,40)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1407.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (30 samples, 0.01%)</title><rect x="92.6177%" y="1381" width="0.0124%" height="15" fill="rgb(243,57,30)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1391.50"></text></g><g><title>serde::ser::Serializer::collect_map (30 samples, 0.01%)</title><rect x="92.6177%" y="1365" width="0.0124%" height="15" fill="rgb(234,50,30)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1375.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (30 samples, 0.01%)</title><rect x="92.6177%" y="1349" width="0.0124%" height="15" fill="rgb(239,23,42)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1359.50"></text></g><g><title>std::io::Write::write_all (30 samples, 0.01%)</title><rect x="92.6177%" y="1333" width="0.0124%" height="15" fill="rgb(217,38,19)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1343.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (30 samples, 0.01%)</title><rect x="92.6177%" y="1317" width="0.0124%" height="15" fill="rgb(215,179,16)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1327.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (30 samples, 0.01%)</title><rect x="92.6177%" y="1301" width="0.0124%" height="15" fill="rgb(254,21,37)" fg:x="223969" fg:w="30"/><text x="92.8677%" y="1311.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (27 samples, 0.01%)</title><rect x="92.6189%" y="1285" width="0.0112%" height="15" fill="rgb(219,207,48)" fg:x="223972" fg:w="27"/><text x="92.8689%" y="1295.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (27 samples, 0.01%)</title><rect x="92.6189%" y="1269" width="0.0112%" height="15" fill="rgb(227,225,41)" fg:x="223972" fg:w="27"/><text x="92.8689%" y="1279.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (27 samples, 0.01%)</title><rect x="92.6189%" y="1253" width="0.0112%" height="15" fill="rgb(223,130,1)" fg:x="223972" fg:w="27"/><text x="92.8689%" y="1263.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (36 samples, 0.01%)</title><rect x="92.6177%" y="1669" width="0.0149%" height="15" fill="rgb(249,54,42)" fg:x="223969" fg:w="36"/><text x="92.8677%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (36 samples, 0.01%)</title><rect x="92.6177%" y="1653" width="0.0149%" height="15" fill="rgb(248,69,25)" fg:x="223969" fg:w="36"/><text x="92.8677%" y="1663.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (36 samples, 0.01%)</title><rect x="92.6177%" y="1637" width="0.0149%" height="15" fill="rgb(234,21,32)" fg:x="223969" fg:w="36"/><text x="92.8677%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (36 samples, 0.01%)</title><rect x="92.6177%" y="1621" width="0.0149%" height="15" fill="rgb(252,136,6)" fg:x="223969" fg:w="36"/><text x="92.8677%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.01%)</title><rect x="92.6177%" y="1605" width="0.0149%" height="15" fill="rgb(245,87,12)" fg:x="223969" fg:w="36"/><text x="92.8677%" y="1615.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (36 samples, 0.01%)</title><rect x="92.6177%" y="1589" width="0.0149%" height="15" fill="rgb(208,12,15)" fg:x="223969" fg:w="36"/><text x="92.8677%" y="1599.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (36 samples, 0.01%)</title><rect x="92.6177%" y="1573" width="0.0149%" height="15" fill="rgb(250,98,2)" fg:x="223969" fg:w="36"/><text x="92.8677%" y="1583.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (36 samples, 0.01%)</title><rect x="92.6177%" y="1557" width="0.0149%" height="15" fill="rgb(205,213,15)" fg:x="223969" fg:w="36"/><text x="92.8677%" y="1567.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (36 samples, 0.01%)</title><rect x="92.6177%" y="1541" width="0.0149%" height="15" fill="rgb(248,192,44)" fg:x="223969" fg:w="36"/><text x="92.8677%" y="1551.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (38 samples, 0.02%)</title><rect x="92.6330%" y="1621" width="0.0157%" height="15" fill="rgb(221,89,17)" fg:x="224006" fg:w="38"/><text x="92.8830%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (38 samples, 0.02%)</title><rect x="92.6330%" y="1605" width="0.0157%" height="15" fill="rgb(209,55,3)" fg:x="224006" fg:w="38"/><text x="92.8830%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (38 samples, 0.02%)</title><rect x="92.6330%" y="1589" width="0.0157%" height="15" fill="rgb(247,23,45)" fg:x="224006" fg:w="38"/><text x="92.8830%" y="1599.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (38 samples, 0.02%)</title><rect x="92.6330%" y="1573" width="0.0157%" height="15" fill="rgb(235,152,23)" fg:x="224006" fg:w="38"/><text x="92.8830%" y="1583.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (35 samples, 0.01%)</title><rect x="92.6648%" y="1445" width="0.0145%" height="15" fill="rgb(244,63,13)" fg:x="224083" fg:w="35"/><text x="92.9148%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (35 samples, 0.01%)</title><rect x="92.6648%" y="1429" width="0.0145%" height="15" fill="rgb(227,30,37)" fg:x="224083" fg:w="35"/><text x="92.9148%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (35 samples, 0.01%)</title><rect x="92.6648%" y="1413" width="0.0145%" height="15" fill="rgb(224,49,42)" fg:x="224083" fg:w="35"/><text x="92.9148%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.01%)</title><rect x="92.6648%" y="1397" width="0.0145%" height="15" fill="rgb(218,129,5)" fg:x="224083" fg:w="35"/><text x="92.9148%" y="1407.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.01%)</title><rect x="92.6685%" y="1381" width="0.0108%" height="15" fill="rgb(240,199,54)" fg:x="224092" fg:w="26"/><text x="92.9185%" y="1391.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.01%)</title><rect x="92.6685%" y="1365" width="0.0108%" height="15" fill="rgb(234,31,13)" fg:x="224092" fg:w="26"/><text x="92.9185%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.01%)</title><rect x="92.6685%" y="1349" width="0.0108%" height="15" fill="rgb(219,73,54)" fg:x="224092" fg:w="26"/><text x="92.9185%" y="1359.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (339 samples, 0.14%)</title><rect x="92.5540%" y="2085" width="0.1402%" height="15" fill="rgb(251,162,10)" fg:x="223815" fg:w="339"/><text x="92.8040%" y="2095.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (339 samples, 0.14%)</title><rect x="92.5540%" y="2069" width="0.1402%" height="15" fill="rgb(240,138,47)" fg:x="223815" fg:w="339"/><text x="92.8040%" y="2079.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (335 samples, 0.14%)</title><rect x="92.5557%" y="2053" width="0.1385%" height="15" fill="rgb(216,138,26)" fg:x="223819" fg:w="335"/><text x="92.8057%" y="2063.50"></text></g><g><title>rayon_core::job::JobRef::execute (335 samples, 0.14%)</title><rect x="92.5557%" y="2037" width="0.1385%" height="15" fill="rgb(243,17,35)" fg:x="223819" fg:w="335"/><text x="92.8057%" y="2047.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (335 samples, 0.14%)</title><rect x="92.5557%" y="2021" width="0.1385%" height="15" fill="rgb(241,60,18)" fg:x="223819" fg:w="335"/><text x="92.8057%" y="2031.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (334 samples, 0.14%)</title><rect x="92.5561%" y="2005" width="0.1381%" height="15" fill="rgb(234,2,44)" fg:x="223820" fg:w="334"/><text x="92.8061%" y="2015.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (334 samples, 0.14%)</title><rect x="92.5561%" y="1989" width="0.1381%" height="15" fill="rgb(225,225,33)" fg:x="223820" fg:w="334"/><text x="92.8061%" y="1999.50"></text></g><g><title>std::panic::catch_unwind (334 samples, 0.14%)</title><rect x="92.5561%" y="1973" width="0.1381%" height="15" fill="rgb(234,50,31)" fg:x="223820" fg:w="334"/><text x="92.8061%" y="1983.50"></text></g><g><title>std::panicking::try (334 samples, 0.14%)</title><rect x="92.5561%" y="1957" width="0.1381%" height="15" fill="rgb(249,6,25)" fg:x="223820" fg:w="334"/><text x="92.8061%" y="1967.50"></text></g><g><title>std::panicking::try::do_call (334 samples, 0.14%)</title><rect x="92.5561%" y="1941" width="0.1381%" height="15" fill="rgb(241,5,17)" fg:x="223820" fg:w="334"/><text x="92.8061%" y="1951.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (334 samples, 0.14%)</title><rect x="92.5561%" y="1925" width="0.1381%" height="15" fill="rgb(207,116,10)" fg:x="223820" fg:w="334"/><text x="92.8061%" y="1935.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (334 samples, 0.14%)</title><rect x="92.5561%" y="1909" width="0.1381%" height="15" fill="rgb(222,128,18)" fg:x="223820" fg:w="334"/><text x="92.8061%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (334 samples, 0.14%)</title><rect x="92.5561%" y="1893" width="0.1381%" height="15" fill="rgb(229,109,25)" fg:x="223820" fg:w="334"/><text x="92.8061%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (334 samples, 0.14%)</title><rect x="92.5561%" y="1877" width="0.1381%" height="15" fill="rgb(222,102,25)" fg:x="223820" fg:w="334"/><text x="92.8061%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (334 samples, 0.14%)</title><rect x="92.5561%" y="1861" width="0.1381%" height="15" fill="rgb(239,211,5)" fg:x="223820" fg:w="334"/><text x="92.8061%" y="1871.50"></text></g><g><title>rayon_core::join::join_context (278 samples, 0.11%)</title><rect x="92.5792%" y="1845" width="0.1150%" height="15" fill="rgb(223,136,26)" fg:x="223876" fg:w="278"/><text x="92.8292%" y="1855.50"></text></g><g><title>rayon_core::registry::in_worker (278 samples, 0.11%)</title><rect x="92.5792%" y="1829" width="0.1150%" height="15" fill="rgb(227,30,15)" fg:x="223876" fg:w="278"/><text x="92.8292%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (278 samples, 0.11%)</title><rect x="92.5792%" y="1813" width="0.1150%" height="15" fill="rgb(247,76,4)" fg:x="223876" fg:w="278"/><text x="92.8292%" y="1823.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (185 samples, 0.08%)</title><rect x="92.6177%" y="1797" width="0.0765%" height="15" fill="rgb(245,38,48)" fg:x="223969" fg:w="185"/><text x="92.8677%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (185 samples, 0.08%)</title><rect x="92.6177%" y="1781" width="0.0765%" height="15" fill="rgb(210,220,14)" fg:x="223969" fg:w="185"/><text x="92.8677%" y="1791.50"></text></g><g><title>std::panicking::try (185 samples, 0.08%)</title><rect x="92.6177%" y="1765" width="0.0765%" height="15" fill="rgb(224,60,51)" fg:x="223969" fg:w="185"/><text x="92.8677%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (185 samples, 0.08%)</title><rect x="92.6177%" y="1749" width="0.0765%" height="15" fill="rgb(212,133,49)" fg:x="223969" fg:w="185"/><text x="92.8677%" y="1759.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (185 samples, 0.08%)</title><rect x="92.6177%" y="1733" width="0.0765%" height="15" fill="rgb(231,39,22)" fg:x="223969" fg:w="185"/><text x="92.8677%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (185 samples, 0.08%)</title><rect x="92.6177%" y="1717" width="0.0765%" height="15" fill="rgb(236,173,22)" fg:x="223969" fg:w="185"/><text x="92.8677%" y="1727.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (185 samples, 0.08%)</title><rect x="92.6177%" y="1701" width="0.0765%" height="15" fill="rgb(210,70,0)" fg:x="223969" fg:w="185"/><text x="92.8677%" y="1711.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (185 samples, 0.08%)</title><rect x="92.6177%" y="1685" width="0.0765%" height="15" fill="rgb(215,170,11)" fg:x="223969" fg:w="185"/><text x="92.8677%" y="1695.50"></text></g><g><title>rayon_core::join::join_context (148 samples, 0.06%)</title><rect x="92.6330%" y="1669" width="0.0612%" height="15" fill="rgb(220,154,28)" fg:x="224006" fg:w="148"/><text x="92.8830%" y="1679.50"></text></g><g><title>rayon_core::registry::in_worker (148 samples, 0.06%)</title><rect x="92.6330%" y="1653" width="0.0612%" height="15" fill="rgb(240,160,41)" fg:x="224006" fg:w="148"/><text x="92.8830%" y="1663.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (148 samples, 0.06%)</title><rect x="92.6330%" y="1637" width="0.0612%" height="15" fill="rgb(243,215,41)" fg:x="224006" fg:w="148"/><text x="92.8830%" y="1647.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (95 samples, 0.04%)</title><rect x="92.6549%" y="1621" width="0.0393%" height="15" fill="rgb(214,208,31)" fg:x="224059" fg:w="95"/><text x="92.9049%" y="1631.50"></text></g><g><title>std::panic::catch_unwind (95 samples, 0.04%)</title><rect x="92.6549%" y="1605" width="0.0393%" height="15" fill="rgb(247,57,22)" fg:x="224059" fg:w="95"/><text x="92.9049%" y="1615.50"></text></g><g><title>std::panicking::try (95 samples, 0.04%)</title><rect x="92.6549%" y="1589" width="0.0393%" height="15" fill="rgb(228,73,52)" fg:x="224059" fg:w="95"/><text x="92.9049%" y="1599.50"></text></g><g><title>std::panicking::try::do_call (95 samples, 0.04%)</title><rect x="92.6549%" y="1573" width="0.0393%" height="15" fill="rgb(252,60,9)" fg:x="224059" fg:w="95"/><text x="92.9049%" y="1583.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (95 samples, 0.04%)</title><rect x="92.6549%" y="1557" width="0.0393%" height="15" fill="rgb(233,9,51)" fg:x="224059" fg:w="95"/><text x="92.9049%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (95 samples, 0.04%)</title><rect x="92.6549%" y="1541" width="0.0393%" height="15" fill="rgb(223,67,14)" fg:x="224059" fg:w="95"/><text x="92.9049%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (95 samples, 0.04%)</title><rect x="92.6549%" y="1525" width="0.0393%" height="15" fill="rgb(222,86,2)" fg:x="224059" fg:w="95"/><text x="92.9049%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (95 samples, 0.04%)</title><rect x="92.6549%" y="1509" width="0.0393%" height="15" fill="rgb(243,58,54)" fg:x="224059" fg:w="95"/><text x="92.9049%" y="1519.50"></text></g><g><title>rayon_core::join::join_context (71 samples, 0.03%)</title><rect x="92.6648%" y="1493" width="0.0294%" height="15" fill="rgb(210,200,39)" fg:x="224083" fg:w="71"/><text x="92.9148%" y="1503.50"></text></g><g><title>rayon_core::registry::in_worker (71 samples, 0.03%)</title><rect x="92.6648%" y="1477" width="0.0294%" height="15" fill="rgb(238,135,9)" fg:x="224083" fg:w="71"/><text x="92.9148%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (71 samples, 0.03%)</title><rect x="92.6648%" y="1461" width="0.0294%" height="15" fill="rgb(232,179,7)" fg:x="224083" fg:w="71"/><text x="92.9148%" y="1471.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (31 samples, 0.01%)</title><rect x="92.6814%" y="1445" width="0.0128%" height="15" fill="rgb(245,65,41)" fg:x="224123" fg:w="31"/><text x="92.9314%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (31 samples, 0.01%)</title><rect x="92.6814%" y="1429" width="0.0128%" height="15" fill="rgb(227,43,8)" fg:x="224123" fg:w="31"/><text x="92.9314%" y="1439.50"></text></g><g><title>std::panicking::try (31 samples, 0.01%)</title><rect x="92.6814%" y="1413" width="0.0128%" height="15" fill="rgb(235,91,14)" fg:x="224123" fg:w="31"/><text x="92.9314%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (31 samples, 0.01%)</title><rect x="92.6814%" y="1397" width="0.0128%" height="15" fill="rgb(235,219,31)" fg:x="224123" fg:w="31"/><text x="92.9314%" y="1407.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (31 samples, 0.01%)</title><rect x="92.6814%" y="1381" width="0.0128%" height="15" fill="rgb(227,121,25)" fg:x="224123" fg:w="31"/><text x="92.9314%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (31 samples, 0.01%)</title><rect x="92.6814%" y="1365" width="0.0128%" height="15" fill="rgb(254,129,24)" fg:x="224123" fg:w="31"/><text x="92.9314%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (31 samples, 0.01%)</title><rect x="92.6814%" y="1349" width="0.0128%" height="15" fill="rgb(226,144,49)" fg:x="224123" fg:w="31"/><text x="92.9314%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (31 samples, 0.01%)</title><rect x="92.6814%" y="1333" width="0.0128%" height="15" fill="rgb(214,187,32)" fg:x="224123" fg:w="31"/><text x="92.9314%" y="1343.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.01%)</title><rect x="92.6838%" y="1317" width="0.0103%" height="15" fill="rgb(243,129,46)" fg:x="224129" fg:w="25"/><text x="92.9338%" y="1327.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.01%)</title><rect x="92.6838%" y="1301" width="0.0103%" height="15" fill="rgb(221,185,35)" fg:x="224129" fg:w="25"/><text x="92.9338%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.01%)</title><rect x="92.6838%" y="1285" width="0.0103%" height="15" fill="rgb(205,0,32)" fg:x="224129" fg:w="25"/><text x="92.9338%" y="1295.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (87 samples, 0.04%)</title><rect x="92.6946%" y="1637" width="0.0360%" height="15" fill="rgb(229,179,12)" fg:x="224155" fg:w="87"/><text x="92.9446%" y="1647.50"></text></g><g><title>std::io::Write::write_all (87 samples, 0.04%)</title><rect x="92.6946%" y="1621" width="0.0360%" height="15" fill="rgb(252,107,19)" fg:x="224155" fg:w="87"/><text x="92.9446%" y="1631.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (87 samples, 0.04%)</title><rect x="92.6946%" y="1605" width="0.0360%" height="15" fill="rgb(220,95,27)" fg:x="224155" fg:w="87"/><text x="92.9446%" y="1615.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (87 samples, 0.04%)</title><rect x="92.6946%" y="1589" width="0.0360%" height="15" fill="rgb(240,113,40)" fg:x="224155" fg:w="87"/><text x="92.9446%" y="1599.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (83 samples, 0.03%)</title><rect x="92.6963%" y="1573" width="0.0343%" height="15" fill="rgb(208,4,43)" fg:x="224159" fg:w="83"/><text x="92.9463%" y="1583.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (83 samples, 0.03%)</title><rect x="92.6963%" y="1557" width="0.0343%" height="15" fill="rgb(247,189,30)" fg:x="224159" fg:w="83"/><text x="92.9463%" y="1567.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (83 samples, 0.03%)</title><rect x="92.6963%" y="1541" width="0.0343%" height="15" fill="rgb(231,157,17)" fg:x="224159" fg:w="83"/><text x="92.9463%" y="1551.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (30 samples, 0.01%)</title><rect x="92.7182%" y="1525" width="0.0124%" height="15" fill="rgb(224,139,6)" fg:x="224212" fg:w="30"/><text x="92.9682%" y="1535.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (93 samples, 0.04%)</title><rect x="92.6942%" y="1813" width="0.0385%" height="15" fill="rgb(223,83,16)" fg:x="224154" fg:w="93"/><text x="92.9442%" y="1823.50"></text></g><g><title>bcs::ser::serialize_into (92 samples, 0.04%)</title><rect x="92.6946%" y="1797" width="0.0380%" height="15" fill="rgb(232,211,20)" fg:x="224155" fg:w="92"/><text x="92.9446%" y="1807.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (92 samples, 0.04%)</title><rect x="92.6946%" y="1781" width="0.0380%" height="15" fill="rgb(225,203,35)" fg:x="224155" fg:w="92"/><text x="92.9446%" y="1791.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (92 samples, 0.04%)</title><rect x="92.6946%" y="1765" width="0.0380%" height="15" fill="rgb(215,211,44)" fg:x="224155" fg:w="92"/><text x="92.9446%" y="1775.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (92 samples, 0.04%)</title><rect x="92.6946%" y="1749" width="0.0380%" height="15" fill="rgb(248,213,26)" fg:x="224155" fg:w="92"/><text x="92.9446%" y="1759.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (92 samples, 0.04%)</title><rect x="92.6946%" y="1733" width="0.0380%" height="15" fill="rgb(214,23,52)" fg:x="224155" fg:w="92"/><text x="92.9446%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (92 samples, 0.04%)</title><rect x="92.6946%" y="1717" width="0.0380%" height="15" fill="rgb(225,173,50)" fg:x="224155" fg:w="92"/><text x="92.9446%" y="1727.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (92 samples, 0.04%)</title><rect x="92.6946%" y="1701" width="0.0380%" height="15" fill="rgb(206,150,22)" fg:x="224155" fg:w="92"/><text x="92.9446%" y="1711.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (92 samples, 0.04%)</title><rect x="92.6946%" y="1685" width="0.0380%" height="15" fill="rgb(239,64,23)" fg:x="224155" fg:w="92"/><text x="92.9446%" y="1695.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (92 samples, 0.04%)</title><rect x="92.6946%" y="1669" width="0.0380%" height="15" fill="rgb(242,50,38)" fg:x="224155" fg:w="92"/><text x="92.9446%" y="1679.50"></text></g><g><title>serde::ser::Serializer::collect_map (92 samples, 0.04%)</title><rect x="92.6946%" y="1653" width="0.0380%" height="15" fill="rgb(217,91,15)" fg:x="224155" fg:w="92"/><text x="92.9446%" y="1663.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (97 samples, 0.04%)</title><rect x="92.6942%" y="1957" width="0.0401%" height="15" fill="rgb(230,172,6)" fg:x="224154" fg:w="97"/><text x="92.9442%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (97 samples, 0.04%)</title><rect x="92.6942%" y="1941" width="0.0401%" height="15" fill="rgb(221,98,26)" fg:x="224154" fg:w="97"/><text x="92.9442%" y="1951.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (97 samples, 0.04%)</title><rect x="92.6942%" y="1925" width="0.0401%" height="15" fill="rgb(227,210,45)" fg:x="224154" fg:w="97"/><text x="92.9442%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (97 samples, 0.04%)</title><rect x="92.6942%" y="1909" width="0.0401%" height="15" fill="rgb(206,8,30)" fg:x="224154" fg:w="97"/><text x="92.9442%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.04%)</title><rect x="92.6942%" y="1893" width="0.0401%" height="15" fill="rgb(241,219,17)" fg:x="224154" fg:w="97"/><text x="92.9442%" y="1903.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (97 samples, 0.04%)</title><rect x="92.6942%" y="1877" width="0.0401%" height="15" fill="rgb(247,121,29)" fg:x="224154" fg:w="97"/><text x="92.9442%" y="1887.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (97 samples, 0.04%)</title><rect x="92.6942%" y="1861" width="0.0401%" height="15" fill="rgb(219,169,49)" fg:x="224154" fg:w="97"/><text x="92.9442%" y="1871.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (97 samples, 0.04%)</title><rect x="92.6942%" y="1845" width="0.0401%" height="15" fill="rgb(253,49,49)" fg:x="224154" fg:w="97"/><text x="92.9442%" y="1855.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (97 samples, 0.04%)</title><rect x="92.6942%" y="1829" width="0.0401%" height="15" fill="rgb(217,178,3)" fg:x="224154" fg:w="97"/><text x="92.9442%" y="1839.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (36 samples, 0.01%)</title><rect x="92.7347%" y="1525" width="0.0149%" height="15" fill="rgb(234,73,37)" fg:x="224252" fg:w="36"/><text x="92.9847%" y="1535.50"></text></g><g><title>std::io::Write::write_all (36 samples, 0.01%)</title><rect x="92.7347%" y="1509" width="0.0149%" height="15" fill="rgb(250,98,22)" fg:x="224252" fg:w="36"/><text x="92.9847%" y="1519.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (36 samples, 0.01%)</title><rect x="92.7347%" y="1493" width="0.0149%" height="15" fill="rgb(220,108,37)" fg:x="224252" fg:w="36"/><text x="92.9847%" y="1503.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (36 samples, 0.01%)</title><rect x="92.7347%" y="1477" width="0.0149%" height="15" fill="rgb(225,168,10)" fg:x="224252" fg:w="36"/><text x="92.9847%" y="1487.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (36 samples, 0.01%)</title><rect x="92.7347%" y="1461" width="0.0149%" height="15" fill="rgb(247,215,21)" fg:x="224252" fg:w="36"/><text x="92.9847%" y="1471.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (36 samples, 0.01%)</title><rect x="92.7347%" y="1445" width="0.0149%" height="15" fill="rgb(253,189,31)" fg:x="224252" fg:w="36"/><text x="92.9847%" y="1455.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (36 samples, 0.01%)</title><rect x="92.7347%" y="1429" width="0.0149%" height="15" fill="rgb(241,54,22)" fg:x="224252" fg:w="36"/><text x="92.9847%" y="1439.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (38 samples, 0.02%)</title><rect x="92.7347%" y="1701" width="0.0157%" height="15" fill="rgb(211,87,4)" fg:x="224252" fg:w="38"/><text x="92.9847%" y="1711.50"></text></g><g><title>bcs::ser::serialize_into (38 samples, 0.02%)</title><rect x="92.7347%" y="1685" width="0.0157%" height="15" fill="rgb(245,112,24)" fg:x="224252" fg:w="38"/><text x="92.9847%" y="1695.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (38 samples, 0.02%)</title><rect x="92.7347%" y="1669" width="0.0157%" height="15" fill="rgb(235,190,41)" fg:x="224252" fg:w="38"/><text x="92.9847%" y="1679.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (38 samples, 0.02%)</title><rect x="92.7347%" y="1653" width="0.0157%" height="15" fill="rgb(214,89,8)" fg:x="224252" fg:w="38"/><text x="92.9847%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (38 samples, 0.02%)</title><rect x="92.7347%" y="1637" width="0.0157%" height="15" fill="rgb(249,155,35)" fg:x="224252" fg:w="38"/><text x="92.9847%" y="1647.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (38 samples, 0.02%)</title><rect x="92.7347%" y="1621" width="0.0157%" height="15" fill="rgb(249,88,26)" fg:x="224252" fg:w="38"/><text x="92.9847%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (38 samples, 0.02%)</title><rect x="92.7347%" y="1605" width="0.0157%" height="15" fill="rgb(232,56,8)" fg:x="224252" fg:w="38"/><text x="92.9847%" y="1615.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (38 samples, 0.02%)</title><rect x="92.7347%" y="1589" width="0.0157%" height="15" fill="rgb(240,95,3)" fg:x="224252" fg:w="38"/><text x="92.9847%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (38 samples, 0.02%)</title><rect x="92.7347%" y="1573" width="0.0157%" height="15" fill="rgb(222,44,28)" fg:x="224252" fg:w="38"/><text x="92.9847%" y="1583.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (38 samples, 0.02%)</title><rect x="92.7347%" y="1557" width="0.0157%" height="15" fill="rgb(234,16,30)" fg:x="224252" fg:w="38"/><text x="92.9847%" y="1567.50"></text></g><g><title>serde::ser::Serializer::collect_map (38 samples, 0.02%)</title><rect x="92.7347%" y="1541" width="0.0157%" height="15" fill="rgb(223,26,17)" fg:x="224252" fg:w="38"/><text x="92.9847%" y="1551.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (41 samples, 0.02%)</title><rect x="92.7343%" y="1845" width="0.0170%" height="15" fill="rgb(239,187,47)" fg:x="224251" fg:w="41"/><text x="92.9843%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (41 samples, 0.02%)</title><rect x="92.7343%" y="1829" width="0.0170%" height="15" fill="rgb(247,102,50)" fg:x="224251" fg:w="41"/><text x="92.9843%" y="1839.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (41 samples, 0.02%)</title><rect x="92.7343%" y="1813" width="0.0170%" height="15" fill="rgb(231,216,22)" fg:x="224251" fg:w="41"/><text x="92.9843%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (41 samples, 0.02%)</title><rect x="92.7343%" y="1797" width="0.0170%" height="15" fill="rgb(216,201,26)" fg:x="224251" fg:w="41"/><text x="92.9843%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.02%)</title><rect x="92.7343%" y="1781" width="0.0170%" height="15" fill="rgb(214,186,23)" fg:x="224251" fg:w="41"/><text x="92.9843%" y="1791.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (41 samples, 0.02%)</title><rect x="92.7343%" y="1765" width="0.0170%" height="15" fill="rgb(235,184,4)" fg:x="224251" fg:w="41"/><text x="92.9843%" y="1775.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (41 samples, 0.02%)</title><rect x="92.7343%" y="1749" width="0.0170%" height="15" fill="rgb(244,46,17)" fg:x="224251" fg:w="41"/><text x="92.9843%" y="1759.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (41 samples, 0.02%)</title><rect x="92.7343%" y="1733" width="0.0170%" height="15" fill="rgb(248,74,46)" fg:x="224251" fg:w="41"/><text x="92.9843%" y="1743.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (41 samples, 0.02%)</title><rect x="92.7343%" y="1717" width="0.0170%" height="15" fill="rgb(243,79,5)" fg:x="224251" fg:w="41"/><text x="92.9843%" y="1727.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (70 samples, 0.03%)</title><rect x="92.7517%" y="1797" width="0.0289%" height="15" fill="rgb(213,148,1)" fg:x="224293" fg:w="70"/><text x="93.0017%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (70 samples, 0.03%)</title><rect x="92.7517%" y="1781" width="0.0289%" height="15" fill="rgb(221,30,0)" fg:x="224293" fg:w="70"/><text x="93.0017%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (70 samples, 0.03%)</title><rect x="92.7517%" y="1765" width="0.0289%" height="15" fill="rgb(207,85,29)" fg:x="224293" fg:w="70"/><text x="93.0017%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (70 samples, 0.03%)</title><rect x="92.7517%" y="1749" width="0.0289%" height="15" fill="rgb(239,31,46)" fg:x="224293" fg:w="70"/><text x="93.0017%" y="1759.50"></text></g><g><title>rayon_core::join::join_context (54 samples, 0.02%)</title><rect x="92.7583%" y="1733" width="0.0223%" height="15" fill="rgb(219,6,1)" fg:x="224309" fg:w="54"/><text x="93.0083%" y="1743.50"></text></g><g><title>rayon_core::registry::in_worker (54 samples, 0.02%)</title><rect x="92.7583%" y="1717" width="0.0223%" height="15" fill="rgb(229,90,29)" fg:x="224309" fg:w="54"/><text x="93.0083%" y="1727.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (54 samples, 0.02%)</title><rect x="92.7583%" y="1701" width="0.0223%" height="15" fill="rgb(242,201,42)" fg:x="224309" fg:w="54"/><text x="93.0083%" y="1711.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (49 samples, 0.02%)</title><rect x="92.7806%" y="1797" width="0.0203%" height="15" fill="rgb(243,80,54)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1807.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (49 samples, 0.02%)</title><rect x="92.7806%" y="1781" width="0.0203%" height="15" fill="rgb(223,166,15)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1791.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (49 samples, 0.02%)</title><rect x="92.7806%" y="1765" width="0.0203%" height="15" fill="rgb(238,78,27)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1775.50"></text></g><g><title>rayon_core::job::JobRef::execute (49 samples, 0.02%)</title><rect x="92.7806%" y="1749" width="0.0203%" height="15" fill="rgb(235,28,43)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1759.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (49 samples, 0.02%)</title><rect x="92.7806%" y="1733" width="0.0203%" height="15" fill="rgb(240,210,28)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1743.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (49 samples, 0.02%)</title><rect x="92.7806%" y="1717" width="0.0203%" height="15" fill="rgb(253,6,46)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (49 samples, 0.02%)</title><rect x="92.7806%" y="1701" width="0.0203%" height="15" fill="rgb(250,159,47)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (49 samples, 0.02%)</title><rect x="92.7806%" y="1685" width="0.0203%" height="15" fill="rgb(216,139,2)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1695.50"></text></g><g><title>std::panicking::try (49 samples, 0.02%)</title><rect x="92.7806%" y="1669" width="0.0203%" height="15" fill="rgb(221,124,44)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (49 samples, 0.02%)</title><rect x="92.7806%" y="1653" width="0.0203%" height="15" fill="rgb(205,37,22)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (49 samples, 0.02%)</title><rect x="92.7806%" y="1637" width="0.0203%" height="15" fill="rgb(250,55,8)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1647.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (49 samples, 0.02%)</title><rect x="92.7806%" y="1621" width="0.0203%" height="15" fill="rgb(215,83,48)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (49 samples, 0.02%)</title><rect x="92.7806%" y="1605" width="0.0203%" height="15" fill="rgb(253,2,32)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (49 samples, 0.02%)</title><rect x="92.7806%" y="1589" width="0.0203%" height="15" fill="rgb(236,67,28)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1599.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.02%)</title><rect x="92.7806%" y="1573" width="0.0203%" height="15" fill="rgb(252,55,15)" fg:x="224363" fg:w="49"/><text x="93.0306%" y="1583.50"></text></g><g><title>rayon_core::join::join_context (42 samples, 0.02%)</title><rect x="92.7835%" y="1557" width="0.0174%" height="15" fill="rgb(243,173,17)" fg:x="224370" fg:w="42"/><text x="93.0335%" y="1567.50"></text></g><g><title>rayon_core::registry::in_worker (42 samples, 0.02%)</title><rect x="92.7835%" y="1541" width="0.0174%" height="15" fill="rgb(215,212,13)" fg:x="224370" fg:w="42"/><text x="93.0335%" y="1551.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (42 samples, 0.02%)</title><rect x="92.7835%" y="1525" width="0.0174%" height="15" fill="rgb(253,176,6)" fg:x="224370" fg:w="42"/><text x="93.0335%" y="1535.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (34 samples, 0.01%)</title><rect x="92.7868%" y="1509" width="0.0141%" height="15" fill="rgb(236,105,26)" fg:x="224378" fg:w="34"/><text x="93.0368%" y="1519.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.01%)</title><rect x="92.7868%" y="1493" width="0.0141%" height="15" fill="rgb(239,226,32)" fg:x="224378" fg:w="34"/><text x="93.0368%" y="1503.50"></text></g><g><title>std::panicking::try (34 samples, 0.01%)</title><rect x="92.7868%" y="1477" width="0.0141%" height="15" fill="rgb(236,104,51)" fg:x="224378" fg:w="34"/><text x="93.0368%" y="1487.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.01%)</title><rect x="92.7868%" y="1461" width="0.0141%" height="15" fill="rgb(220,172,33)" fg:x="224378" fg:w="34"/><text x="93.0368%" y="1471.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 0.01%)</title><rect x="92.7868%" y="1445" width="0.0141%" height="15" fill="rgb(224,182,25)" fg:x="224378" fg:w="34"/><text x="93.0368%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (34 samples, 0.01%)</title><rect x="92.7868%" y="1429" width="0.0141%" height="15" fill="rgb(236,184,24)" fg:x="224378" fg:w="34"/><text x="93.0368%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (34 samples, 0.01%)</title><rect x="92.7868%" y="1413" width="0.0141%" height="15" fill="rgb(241,221,14)" fg:x="224378" fg:w="34"/><text x="93.0368%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.01%)</title><rect x="92.7868%" y="1397" width="0.0141%" height="15" fill="rgb(227,146,5)" fg:x="224378" fg:w="34"/><text x="93.0368%" y="1407.50"></text></g><g><title>rayon_core::join::join_context (33 samples, 0.01%)</title><rect x="92.7872%" y="1381" width="0.0136%" height="15" fill="rgb(214,15,23)" fg:x="224379" fg:w="33"/><text x="93.0372%" y="1391.50"></text></g><g><title>rayon_core::registry::in_worker (33 samples, 0.01%)</title><rect x="92.7872%" y="1365" width="0.0136%" height="15" fill="rgb(233,157,31)" fg:x="224379" fg:w="33"/><text x="93.0372%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (33 samples, 0.01%)</title><rect x="92.7872%" y="1349" width="0.0136%" height="15" fill="rgb(211,27,52)" fg:x="224379" fg:w="33"/><text x="93.0372%" y="1359.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (26 samples, 0.01%)</title><rect x="92.8009%" y="1525" width="0.0108%" height="15" fill="rgb(212,223,15)" fg:x="224412" fg:w="26"/><text x="93.0509%" y="1535.50"></text></g><g><title>bcs::ser::serialize_into (26 samples, 0.01%)</title><rect x="92.8009%" y="1509" width="0.0108%" height="15" fill="rgb(254,211,0)" fg:x="224412" fg:w="26"/><text x="93.0509%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (26 samples, 0.01%)</title><rect x="92.8009%" y="1493" width="0.0108%" height="15" fill="rgb(205,43,38)" fg:x="224412" fg:w="26"/><text x="93.0509%" y="1503.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (26 samples, 0.01%)</title><rect x="92.8009%" y="1477" width="0.0108%" height="15" fill="rgb(242,206,46)" fg:x="224412" fg:w="26"/><text x="93.0509%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (26 samples, 0.01%)</title><rect x="92.8009%" y="1461" width="0.0108%" height="15" fill="rgb(220,221,12)" fg:x="224412" fg:w="26"/><text x="93.0509%" y="1471.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (26 samples, 0.01%)</title><rect x="92.8009%" y="1445" width="0.0108%" height="15" fill="rgb(217,156,35)" fg:x="224412" fg:w="26"/><text x="93.0509%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (26 samples, 0.01%)</title><rect x="92.8009%" y="1429" width="0.0108%" height="15" fill="rgb(207,181,49)" fg:x="224412" fg:w="26"/><text x="93.0509%" y="1439.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (26 samples, 0.01%)</title><rect x="92.8009%" y="1413" width="0.0108%" height="15" fill="rgb(235,103,47)" fg:x="224412" fg:w="26"/><text x="93.0509%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (26 samples, 0.01%)</title><rect x="92.8009%" y="1397" width="0.0108%" height="15" fill="rgb(222,63,28)" fg:x="224412" fg:w="26"/><text x="93.0509%" y="1407.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (26 samples, 0.01%)</title><rect x="92.8009%" y="1381" width="0.0108%" height="15" fill="rgb(244,137,21)" fg:x="224412" fg:w="26"/><text x="93.0509%" y="1391.50"></text></g><g><title>serde::ser::Serializer::collect_map (26 samples, 0.01%)</title><rect x="92.8009%" y="1365" width="0.0108%" height="15" fill="rgb(228,35,27)" fg:x="224412" fg:w="26"/><text x="93.0509%" y="1375.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (29 samples, 0.01%)</title><rect x="92.8009%" y="1669" width="0.0120%" height="15" fill="rgb(226,191,41)" fg:x="224412" fg:w="29"/><text x="93.0509%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (29 samples, 0.01%)</title><rect x="92.8009%" y="1653" width="0.0120%" height="15" fill="rgb(210,154,3)" fg:x="224412" fg:w="29"/><text x="93.0509%" y="1663.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (29 samples, 0.01%)</title><rect x="92.8009%" y="1637" width="0.0120%" height="15" fill="rgb(216,60,49)" fg:x="224412" fg:w="29"/><text x="93.0509%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (29 samples, 0.01%)</title><rect x="92.8009%" y="1621" width="0.0120%" height="15" fill="rgb(226,17,20)" fg:x="224412" fg:w="29"/><text x="93.0509%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.01%)</title><rect x="92.8009%" y="1605" width="0.0120%" height="15" fill="rgb(206,115,35)" fg:x="224412" fg:w="29"/><text x="93.0509%" y="1615.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29 samples, 0.01%)</title><rect x="92.8009%" y="1589" width="0.0120%" height="15" fill="rgb(227,88,1)" fg:x="224412" fg:w="29"/><text x="93.0509%" y="1599.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (29 samples, 0.01%)</title><rect x="92.8009%" y="1573" width="0.0120%" height="15" fill="rgb(230,222,24)" fg:x="224412" fg:w="29"/><text x="93.0509%" y="1583.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (29 samples, 0.01%)</title><rect x="92.8009%" y="1557" width="0.0120%" height="15" fill="rgb(214,124,32)" fg:x="224412" fg:w="29"/><text x="93.0509%" y="1567.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (29 samples, 0.01%)</title><rect x="92.8009%" y="1541" width="0.0120%" height="15" fill="rgb(240,41,36)" fg:x="224412" fg:w="29"/><text x="93.0509%" y="1551.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (30 samples, 0.01%)</title><rect x="92.8137%" y="1621" width="0.0124%" height="15" fill="rgb(221,17,52)" fg:x="224443" fg:w="30"/><text x="93.0637%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (30 samples, 0.01%)</title><rect x="92.8137%" y="1605" width="0.0124%" height="15" fill="rgb(252,70,16)" fg:x="224443" fg:w="30"/><text x="93.0637%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (30 samples, 0.01%)</title><rect x="92.8137%" y="1589" width="0.0124%" height="15" fill="rgb(250,177,4)" fg:x="224443" fg:w="30"/><text x="93.0637%" y="1599.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.01%)</title><rect x="92.8137%" y="1573" width="0.0124%" height="15" fill="rgb(240,188,47)" fg:x="224443" fg:w="30"/><text x="93.0637%" y="1583.50"></text></g><g><title>rayon_core::join::join_context (29 samples, 0.01%)</title><rect x="92.8141%" y="1557" width="0.0120%" height="15" fill="rgb(215,92,12)" fg:x="224444" fg:w="29"/><text x="93.0641%" y="1567.50"></text></g><g><title>rayon_core::registry::in_worker (29 samples, 0.01%)</title><rect x="92.8141%" y="1541" width="0.0120%" height="15" fill="rgb(242,110,29)" fg:x="224444" fg:w="29"/><text x="93.0641%" y="1551.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (29 samples, 0.01%)</title><rect x="92.8141%" y="1525" width="0.0120%" height="15" fill="rgb(208,211,26)" fg:x="224444" fg:w="29"/><text x="93.0641%" y="1535.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (254 samples, 0.11%)</title><rect x="92.7343%" y="1909" width="0.1050%" height="15" fill="rgb(244,147,6)" fg:x="224251" fg:w="254"/><text x="92.9843%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (254 samples, 0.11%)</title><rect x="92.7343%" y="1893" width="0.1050%" height="15" fill="rgb(211,130,42)" fg:x="224251" fg:w="254"/><text x="92.9843%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (254 samples, 0.11%)</title><rect x="92.7343%" y="1877" width="0.1050%" height="15" fill="rgb(220,63,1)" fg:x="224251" fg:w="254"/><text x="92.9843%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (254 samples, 0.11%)</title><rect x="92.7343%" y="1861" width="0.1050%" height="15" fill="rgb(241,212,30)" fg:x="224251" fg:w="254"/><text x="92.9843%" y="1871.50"></text></g><g><title>rayon_core::join::join_context (212 samples, 0.09%)</title><rect x="92.7517%" y="1845" width="0.0877%" height="15" fill="rgb(233,153,17)" fg:x="224293" fg:w="212"/><text x="93.0017%" y="1855.50"></text></g><g><title>rayon_core::registry::in_worker (212 samples, 0.09%)</title><rect x="92.7517%" y="1829" width="0.0877%" height="15" fill="rgb(236,3,10)" fg:x="224293" fg:w="212"/><text x="93.0017%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (212 samples, 0.09%)</title><rect x="92.7517%" y="1813" width="0.0877%" height="15" fill="rgb(232,41,21)" fg:x="224293" fg:w="212"/><text x="93.0017%" y="1823.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (93 samples, 0.04%)</title><rect x="92.8009%" y="1797" width="0.0385%" height="15" fill="rgb(206,63,51)" fg:x="224412" fg:w="93"/><text x="93.0509%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (93 samples, 0.04%)</title><rect x="92.8009%" y="1781" width="0.0385%" height="15" fill="rgb(250,214,3)" fg:x="224412" fg:w="93"/><text x="93.0509%" y="1791.50"></text></g><g><title>std::panicking::try (93 samples, 0.04%)</title><rect x="92.8009%" y="1765" width="0.0385%" height="15" fill="rgb(254,89,27)" fg:x="224412" fg:w="93"/><text x="93.0509%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (93 samples, 0.04%)</title><rect x="92.8009%" y="1749" width="0.0385%" height="15" fill="rgb(249,41,14)" fg:x="224412" fg:w="93"/><text x="93.0509%" y="1759.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (93 samples, 0.04%)</title><rect x="92.8009%" y="1733" width="0.0385%" height="15" fill="rgb(221,196,51)" fg:x="224412" fg:w="93"/><text x="93.0509%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (93 samples, 0.04%)</title><rect x="92.8009%" y="1717" width="0.0385%" height="15" fill="rgb(214,116,26)" fg:x="224412" fg:w="93"/><text x="93.0509%" y="1727.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (93 samples, 0.04%)</title><rect x="92.8009%" y="1701" width="0.0385%" height="15" fill="rgb(236,67,7)" fg:x="224412" fg:w="93"/><text x="93.0509%" y="1711.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (93 samples, 0.04%)</title><rect x="92.8009%" y="1685" width="0.0385%" height="15" fill="rgb(253,179,32)" fg:x="224412" fg:w="93"/><text x="93.0509%" y="1695.50"></text></g><g><title>rayon_core::join::join_context (62 samples, 0.03%)</title><rect x="92.8137%" y="1669" width="0.0256%" height="15" fill="rgb(218,33,15)" fg:x="224443" fg:w="62"/><text x="93.0637%" y="1679.50"></text></g><g><title>rayon_core::registry::in_worker (62 samples, 0.03%)</title><rect x="92.8137%" y="1653" width="0.0256%" height="15" fill="rgb(217,202,41)" fg:x="224443" fg:w="62"/><text x="93.0637%" y="1663.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (62 samples, 0.03%)</title><rect x="92.8137%" y="1637" width="0.0256%" height="15" fill="rgb(234,133,5)" fg:x="224443" fg:w="62"/><text x="93.0637%" y="1647.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (27 samples, 0.01%)</title><rect x="92.8402%" y="1669" width="0.0112%" height="15" fill="rgb(240,47,40)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (27 samples, 0.01%)</title><rect x="92.8402%" y="1653" width="0.0112%" height="15" fill="rgb(234,166,26)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1663.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (27 samples, 0.01%)</title><rect x="92.8402%" y="1637" width="0.0112%" height="15" fill="rgb(244,125,51)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (27 samples, 0.01%)</title><rect x="92.8402%" y="1621" width="0.0112%" height="15" fill="rgb(229,171,11)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.01%)</title><rect x="92.8402%" y="1605" width="0.0112%" height="15" fill="rgb(224,38,45)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1615.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (27 samples, 0.01%)</title><rect x="92.8402%" y="1589" width="0.0112%" height="15" fill="rgb(237,27,7)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1599.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (27 samples, 0.01%)</title><rect x="92.8402%" y="1573" width="0.0112%" height="15" fill="rgb(216,52,7)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1583.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (27 samples, 0.01%)</title><rect x="92.8402%" y="1557" width="0.0112%" height="15" fill="rgb(243,11,11)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1567.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (27 samples, 0.01%)</title><rect x="92.8402%" y="1541" width="0.0112%" height="15" fill="rgb(253,167,20)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1551.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (27 samples, 0.01%)</title><rect x="92.8402%" y="1525" width="0.0112%" height="15" fill="rgb(215,207,5)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1535.50"></text></g><g><title>bcs::ser::serialize_into (27 samples, 0.01%)</title><rect x="92.8402%" y="1509" width="0.0112%" height="15" fill="rgb(252,127,31)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (27 samples, 0.01%)</title><rect x="92.8402%" y="1493" width="0.0112%" height="15" fill="rgb(209,106,27)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1503.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (27 samples, 0.01%)</title><rect x="92.8402%" y="1477" width="0.0112%" height="15" fill="rgb(214,220,18)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (27 samples, 0.01%)</title><rect x="92.8402%" y="1461" width="0.0112%" height="15" fill="rgb(237,89,12)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1471.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (27 samples, 0.01%)</title><rect x="92.8402%" y="1445" width="0.0112%" height="15" fill="rgb(209,167,36)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (27 samples, 0.01%)</title><rect x="92.8402%" y="1429" width="0.0112%" height="15" fill="rgb(243,45,22)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1439.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (27 samples, 0.01%)</title><rect x="92.8402%" y="1413" width="0.0112%" height="15" fill="rgb(239,2,46)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 0.01%)</title><rect x="92.8402%" y="1397" width="0.0112%" height="15" fill="rgb(241,101,0)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1407.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (27 samples, 0.01%)</title><rect x="92.8402%" y="1381" width="0.0112%" height="15" fill="rgb(244,34,31)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1391.50"></text></g><g><title>serde::ser::Serializer::collect_map (27 samples, 0.01%)</title><rect x="92.8402%" y="1365" width="0.0112%" height="15" fill="rgb(248,23,22)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1375.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (27 samples, 0.01%)</title><rect x="92.8402%" y="1349" width="0.0112%" height="15" fill="rgb(218,27,48)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1359.50"></text></g><g><title>std::io::Write::write_all (27 samples, 0.01%)</title><rect x="92.8402%" y="1333" width="0.0112%" height="15" fill="rgb(232,78,1)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1343.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (27 samples, 0.01%)</title><rect x="92.8402%" y="1317" width="0.0112%" height="15" fill="rgb(233,169,12)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1327.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (27 samples, 0.01%)</title><rect x="92.8402%" y="1301" width="0.0112%" height="15" fill="rgb(225,222,54)" fg:x="224507" fg:w="27"/><text x="93.0902%" y="1311.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (26 samples, 0.01%)</title><rect x="92.8406%" y="1285" width="0.0108%" height="15" fill="rgb(245,126,29)" fg:x="224508" fg:w="26"/><text x="93.0906%" y="1295.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (26 samples, 0.01%)</title><rect x="92.8406%" y="1269" width="0.0108%" height="15" fill="rgb(241,63,48)" fg:x="224508" fg:w="26"/><text x="93.0906%" y="1279.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (26 samples, 0.01%)</title><rect x="92.8406%" y="1253" width="0.0108%" height="15" fill="rgb(235,126,38)" fg:x="224508" fg:w="26"/><text x="93.0906%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (44 samples, 0.02%)</title><rect x="92.8608%" y="1589" width="0.0182%" height="15" fill="rgb(232,96,49)" fg:x="224557" fg:w="44"/><text x="93.1108%" y="1599.50"></text></g><g><title>rayon_core::job::JobRef::execute (44 samples, 0.02%)</title><rect x="92.8608%" y="1573" width="0.0182%" height="15" fill="rgb(211,146,40)" fg:x="224557" fg:w="44"/><text x="93.1108%" y="1583.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (44 samples, 0.02%)</title><rect x="92.8608%" y="1557" width="0.0182%" height="15" fill="rgb(247,93,44)" fg:x="224557" fg:w="44"/><text x="93.1108%" y="1567.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (44 samples, 0.02%)</title><rect x="92.8608%" y="1541" width="0.0182%" height="15" fill="rgb(251,41,49)" fg:x="224557" fg:w="44"/><text x="93.1108%" y="1551.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (44 samples, 0.02%)</title><rect x="92.8608%" y="1525" width="0.0182%" height="15" fill="rgb(218,155,12)" fg:x="224557" fg:w="44"/><text x="93.1108%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (44 samples, 0.02%)</title><rect x="92.8608%" y="1509" width="0.0182%" height="15" fill="rgb(221,161,30)" fg:x="224557" fg:w="44"/><text x="93.1108%" y="1519.50"></text></g><g><title>std::panicking::try (44 samples, 0.02%)</title><rect x="92.8608%" y="1493" width="0.0182%" height="15" fill="rgb(221,179,11)" fg:x="224557" fg:w="44"/><text x="93.1108%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (44 samples, 0.02%)</title><rect x="92.8608%" y="1477" width="0.0182%" height="15" fill="rgb(224,170,48)" fg:x="224557" fg:w="44"/><text x="93.1108%" y="1487.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (44 samples, 0.02%)</title><rect x="92.8608%" y="1461" width="0.0182%" height="15" fill="rgb(223,117,5)" fg:x="224557" fg:w="44"/><text x="93.1108%" y="1471.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (44 samples, 0.02%)</title><rect x="92.8608%" y="1445" width="0.0182%" height="15" fill="rgb(209,52,20)" fg:x="224557" fg:w="44"/><text x="93.1108%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (44 samples, 0.02%)</title><rect x="92.8608%" y="1429" width="0.0182%" height="15" fill="rgb(209,19,41)" fg:x="224557" fg:w="44"/><text x="93.1108%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (44 samples, 0.02%)</title><rect x="92.8608%" y="1413" width="0.0182%" height="15" fill="rgb(210,177,12)" fg:x="224557" fg:w="44"/><text x="93.1108%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.02%)</title><rect x="92.8608%" y="1397" width="0.0182%" height="15" fill="rgb(211,159,37)" fg:x="224557" fg:w="44"/><text x="93.1108%" y="1407.50"></text></g><g><title>rayon_core::join::join_context (39 samples, 0.02%)</title><rect x="92.8629%" y="1381" width="0.0161%" height="15" fill="rgb(209,20,2)" fg:x="224562" fg:w="39"/><text x="93.1129%" y="1391.50"></text></g><g><title>rayon_core::registry::in_worker (39 samples, 0.02%)</title><rect x="92.8629%" y="1365" width="0.0161%" height="15" fill="rgb(244,3,46)" fg:x="224562" fg:w="39"/><text x="93.1129%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (39 samples, 0.02%)</title><rect x="92.8629%" y="1349" width="0.0161%" height="15" fill="rgb(220,94,38)" fg:x="224562" fg:w="39"/><text x="93.1129%" y="1359.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (45 samples, 0.02%)</title><rect x="92.8608%" y="1621" width="0.0186%" height="15" fill="rgb(253,14,31)" fg:x="224557" fg:w="45"/><text x="93.1108%" y="1631.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (45 samples, 0.02%)</title><rect x="92.8608%" y="1605" width="0.0186%" height="15" fill="rgb(234,176,13)" fg:x="224557" fg:w="45"/><text x="93.1108%" y="1615.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (166 samples, 0.07%)</title><rect x="92.8393%" y="1909" width="0.0686%" height="15" fill="rgb(218,62,25)" fg:x="224505" fg:w="166"/><text x="93.0893%" y="1919.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (166 samples, 0.07%)</title><rect x="92.8393%" y="1893" width="0.0686%" height="15" fill="rgb(216,124,40)" fg:x="224505" fg:w="166"/><text x="93.0893%" y="1903.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (164 samples, 0.07%)</title><rect x="92.8402%" y="1877" width="0.0678%" height="15" fill="rgb(228,170,12)" fg:x="224507" fg:w="164"/><text x="93.0902%" y="1887.50"></text></g><g><title>rayon_core::job::JobRef::execute (164 samples, 0.07%)</title><rect x="92.8402%" y="1861" width="0.0678%" height="15" fill="rgb(231,226,5)" fg:x="224507" fg:w="164"/><text x="93.0902%" y="1871.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (164 samples, 0.07%)</title><rect x="92.8402%" y="1845" width="0.0678%" height="15" fill="rgb(237,122,22)" fg:x="224507" fg:w="164"/><text x="93.0902%" y="1855.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (164 samples, 0.07%)</title><rect x="92.8402%" y="1829" width="0.0678%" height="15" fill="rgb(209,185,25)" fg:x="224507" fg:w="164"/><text x="93.0902%" y="1839.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (164 samples, 0.07%)</title><rect x="92.8402%" y="1813" width="0.0678%" height="15" fill="rgb(228,200,32)" fg:x="224507" fg:w="164"/><text x="93.0902%" y="1823.50"></text></g><g><title>std::panic::catch_unwind (164 samples, 0.07%)</title><rect x="92.8402%" y="1797" width="0.0678%" height="15" fill="rgb(217,140,10)" fg:x="224507" fg:w="164"/><text x="93.0902%" y="1807.50"></text></g><g><title>std::panicking::try (164 samples, 0.07%)</title><rect x="92.8402%" y="1781" width="0.0678%" height="15" fill="rgb(253,17,24)" fg:x="224507" fg:w="164"/><text x="93.0902%" y="1791.50"></text></g><g><title>std::panicking::try::do_call (164 samples, 0.07%)</title><rect x="92.8402%" y="1765" width="0.0678%" height="15" fill="rgb(212,61,6)" fg:x="224507" fg:w="164"/><text x="93.0902%" y="1775.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (164 samples, 0.07%)</title><rect x="92.8402%" y="1749" width="0.0678%" height="15" fill="rgb(205,14,25)" fg:x="224507" fg:w="164"/><text x="93.0902%" y="1759.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (164 samples, 0.07%)</title><rect x="92.8402%" y="1733" width="0.0678%" height="15" fill="rgb(232,69,41)" fg:x="224507" fg:w="164"/><text x="93.0902%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (164 samples, 0.07%)</title><rect x="92.8402%" y="1717" width="0.0678%" height="15" fill="rgb(241,106,47)" fg:x="224507" fg:w="164"/><text x="93.0902%" y="1727.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (164 samples, 0.07%)</title><rect x="92.8402%" y="1701" width="0.0678%" height="15" fill="rgb(210,213,53)" fg:x="224507" fg:w="164"/><text x="93.0902%" y="1711.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (164 samples, 0.07%)</title><rect x="92.8402%" y="1685" width="0.0678%" height="15" fill="rgb(253,175,27)" fg:x="224507" fg:w="164"/><text x="93.0902%" y="1695.50"></text></g><g><title>rayon_core::join::join_context (136 samples, 0.06%)</title><rect x="92.8517%" y="1669" width="0.0562%" height="15" fill="rgb(211,171,24)" fg:x="224535" fg:w="136"/><text x="93.1017%" y="1679.50"></text></g><g><title>rayon_core::registry::in_worker (136 samples, 0.06%)</title><rect x="92.8517%" y="1653" width="0.0562%" height="15" fill="rgb(229,80,7)" fg:x="224535" fg:w="136"/><text x="93.1017%" y="1663.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (136 samples, 0.06%)</title><rect x="92.8517%" y="1637" width="0.0562%" height="15" fill="rgb(212,46,39)" fg:x="224535" fg:w="136"/><text x="93.1017%" y="1647.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (69 samples, 0.03%)</title><rect x="92.8794%" y="1621" width="0.0285%" height="15" fill="rgb(240,80,45)" fg:x="224602" fg:w="69"/><text x="93.1294%" y="1631.50"></text></g><g><title>std::panic::catch_unwind (69 samples, 0.03%)</title><rect x="92.8794%" y="1605" width="0.0285%" height="15" fill="rgb(253,177,40)" fg:x="224602" fg:w="69"/><text x="93.1294%" y="1615.50"></text></g><g><title>std::panicking::try (69 samples, 0.03%)</title><rect x="92.8794%" y="1589" width="0.0285%" height="15" fill="rgb(249,200,15)" fg:x="224602" fg:w="69"/><text x="93.1294%" y="1599.50"></text></g><g><title>std::panicking::try::do_call (69 samples, 0.03%)</title><rect x="92.8794%" y="1573" width="0.0285%" height="15" fill="rgb(217,78,26)" fg:x="224602" fg:w="69"/><text x="93.1294%" y="1583.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (69 samples, 0.03%)</title><rect x="92.8794%" y="1557" width="0.0285%" height="15" fill="rgb(254,151,32)" fg:x="224602" fg:w="69"/><text x="93.1294%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (69 samples, 0.03%)</title><rect x="92.8794%" y="1541" width="0.0285%" height="15" fill="rgb(226,165,27)" fg:x="224602" fg:w="69"/><text x="93.1294%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (69 samples, 0.03%)</title><rect x="92.8794%" y="1525" width="0.0285%" height="15" fill="rgb(250,206,4)" fg:x="224602" fg:w="69"/><text x="93.1294%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (69 samples, 0.03%)</title><rect x="92.8794%" y="1509" width="0.0285%" height="15" fill="rgb(231,229,27)" fg:x="224602" fg:w="69"/><text x="93.1294%" y="1519.50"></text></g><g><title>rayon_core::join::join_context (57 samples, 0.02%)</title><rect x="92.8844%" y="1493" width="0.0236%" height="15" fill="rgb(239,217,8)" fg:x="224614" fg:w="57"/><text x="93.1344%" y="1503.50"></text></g><g><title>rayon_core::registry::in_worker (57 samples, 0.02%)</title><rect x="92.8844%" y="1477" width="0.0236%" height="15" fill="rgb(225,204,27)" fg:x="224614" fg:w="57"/><text x="93.1344%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (57 samples, 0.02%)</title><rect x="92.8844%" y="1461" width="0.0236%" height="15" fill="rgb(230,56,32)" fg:x="224614" fg:w="57"/><text x="93.1344%" y="1471.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (36 samples, 0.01%)</title><rect x="92.8931%" y="1445" width="0.0149%" height="15" fill="rgb(222,56,27)" fg:x="224635" fg:w="36"/><text x="93.1431%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.01%)</title><rect x="92.8931%" y="1429" width="0.0149%" height="15" fill="rgb(253,108,27)" fg:x="224635" fg:w="36"/><text x="93.1431%" y="1439.50"></text></g><g><title>std::panicking::try (36 samples, 0.01%)</title><rect x="92.8931%" y="1413" width="0.0149%" height="15" fill="rgb(212,87,36)" fg:x="224635" fg:w="36"/><text x="93.1431%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.01%)</title><rect x="92.8931%" y="1397" width="0.0149%" height="15" fill="rgb(247,82,36)" fg:x="224635" fg:w="36"/><text x="93.1431%" y="1407.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (36 samples, 0.01%)</title><rect x="92.8931%" y="1381" width="0.0149%" height="15" fill="rgb(222,143,9)" fg:x="224635" fg:w="36"/><text x="93.1431%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (36 samples, 0.01%)</title><rect x="92.8931%" y="1365" width="0.0149%" height="15" fill="rgb(238,162,48)" fg:x="224635" fg:w="36"/><text x="93.1431%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (36 samples, 0.01%)</title><rect x="92.8931%" y="1349" width="0.0149%" height="15" fill="rgb(221,59,43)" fg:x="224635" fg:w="36"/><text x="93.1431%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (36 samples, 0.01%)</title><rect x="92.8931%" y="1333" width="0.0149%" height="15" fill="rgb(205,166,41)" fg:x="224635" fg:w="36"/><text x="93.1431%" y="1343.50"></text></g><g><title>rayon_core::join::join_context (28 samples, 0.01%)</title><rect x="92.8964%" y="1317" width="0.0116%" height="15" fill="rgb(241,186,40)" fg:x="224643" fg:w="28"/><text x="93.1464%" y="1327.50"></text></g><g><title>rayon_core::registry::in_worker (28 samples, 0.01%)</title><rect x="92.8964%" y="1301" width="0.0116%" height="15" fill="rgb(216,119,35)" fg:x="224643" fg:w="28"/><text x="93.1464%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (28 samples, 0.01%)</title><rect x="92.8964%" y="1285" width="0.0116%" height="15" fill="rgb(208,68,38)" fg:x="224643" fg:w="28"/><text x="93.1464%" y="1295.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (55 samples, 0.02%)</title><rect x="92.9080%" y="1461" width="0.0227%" height="15" fill="rgb(217,113,1)" fg:x="224671" fg:w="55"/><text x="93.1580%" y="1471.50"></text></g><g><title>std::io::Write::write_all (55 samples, 0.02%)</title><rect x="92.9080%" y="1445" width="0.0227%" height="15" fill="rgb(242,153,3)" fg:x="224671" fg:w="55"/><text x="93.1580%" y="1455.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (55 samples, 0.02%)</title><rect x="92.9080%" y="1429" width="0.0227%" height="15" fill="rgb(229,76,35)" fg:x="224671" fg:w="55"/><text x="93.1580%" y="1439.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (55 samples, 0.02%)</title><rect x="92.9080%" y="1413" width="0.0227%" height="15" fill="rgb(229,125,34)" fg:x="224671" fg:w="55"/><text x="93.1580%" y="1423.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (53 samples, 0.02%)</title><rect x="92.9088%" y="1397" width="0.0219%" height="15" fill="rgb(238,179,36)" fg:x="224673" fg:w="53"/><text x="93.1588%" y="1407.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (53 samples, 0.02%)</title><rect x="92.9088%" y="1381" width="0.0219%" height="15" fill="rgb(244,183,19)" fg:x="224673" fg:w="53"/><text x="93.1588%" y="1391.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (51 samples, 0.02%)</title><rect x="92.9096%" y="1365" width="0.0211%" height="15" fill="rgb(216,85,49)" fg:x="224675" fg:w="51"/><text x="93.1596%" y="1375.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (30 samples, 0.01%)</title><rect x="92.9183%" y="1349" width="0.0124%" height="15" fill="rgb(208,161,47)" fg:x="224696" fg:w="30"/><text x="93.1683%" y="1359.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (59 samples, 0.02%)</title><rect x="92.9080%" y="1637" width="0.0244%" height="15" fill="rgb(233,210,18)" fg:x="224671" fg:w="59"/><text x="93.1580%" y="1647.50"></text></g><g><title>bcs::ser::serialize_into (59 samples, 0.02%)</title><rect x="92.9080%" y="1621" width="0.0244%" height="15" fill="rgb(205,104,42)" fg:x="224671" fg:w="59"/><text x="93.1580%" y="1631.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (59 samples, 0.02%)</title><rect x="92.9080%" y="1605" width="0.0244%" height="15" fill="rgb(248,90,43)" fg:x="224671" fg:w="59"/><text x="93.1580%" y="1615.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (59 samples, 0.02%)</title><rect x="92.9080%" y="1589" width="0.0244%" height="15" fill="rgb(206,198,11)" fg:x="224671" fg:w="59"/><text x="93.1580%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (59 samples, 0.02%)</title><rect x="92.9080%" y="1573" width="0.0244%" height="15" fill="rgb(239,165,27)" fg:x="224671" fg:w="59"/><text x="93.1580%" y="1583.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (59 samples, 0.02%)</title><rect x="92.9080%" y="1557" width="0.0244%" height="15" fill="rgb(246,44,32)" fg:x="224671" fg:w="59"/><text x="93.1580%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (59 samples, 0.02%)</title><rect x="92.9080%" y="1541" width="0.0244%" height="15" fill="rgb(252,65,42)" fg:x="224671" fg:w="59"/><text x="93.1580%" y="1551.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (59 samples, 0.02%)</title><rect x="92.9080%" y="1525" width="0.0244%" height="15" fill="rgb(246,197,18)" fg:x="224671" fg:w="59"/><text x="93.1580%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (59 samples, 0.02%)</title><rect x="92.9080%" y="1509" width="0.0244%" height="15" fill="rgb(216,192,4)" fg:x="224671" fg:w="59"/><text x="93.1580%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (59 samples, 0.02%)</title><rect x="92.9080%" y="1493" width="0.0244%" height="15" fill="rgb(208,117,10)" fg:x="224671" fg:w="59"/><text x="93.1580%" y="1503.50"></text></g><g><title>serde::ser::Serializer::collect_map (59 samples, 0.02%)</title><rect x="92.9080%" y="1477" width="0.0244%" height="15" fill="rgb(240,61,47)" fg:x="224671" fg:w="59"/><text x="93.1580%" y="1487.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (63 samples, 0.03%)</title><rect x="92.9080%" y="1781" width="0.0261%" height="15" fill="rgb(228,178,21)" fg:x="224671" fg:w="63"/><text x="93.1580%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (63 samples, 0.03%)</title><rect x="92.9080%" y="1765" width="0.0261%" height="15" fill="rgb(219,96,54)" fg:x="224671" fg:w="63"/><text x="93.1580%" y="1775.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (63 samples, 0.03%)</title><rect x="92.9080%" y="1749" width="0.0261%" height="15" fill="rgb(250,177,24)" fg:x="224671" fg:w="63"/><text x="93.1580%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (63 samples, 0.03%)</title><rect x="92.9080%" y="1733" width="0.0261%" height="15" fill="rgb(242,154,46)" fg:x="224671" fg:w="63"/><text x="93.1580%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.03%)</title><rect x="92.9080%" y="1717" width="0.0261%" height="15" fill="rgb(226,176,29)" fg:x="224671" fg:w="63"/><text x="93.1580%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (63 samples, 0.03%)</title><rect x="92.9080%" y="1701" width="0.0261%" height="15" fill="rgb(226,29,2)" fg:x="224671" fg:w="63"/><text x="93.1580%" y="1711.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (63 samples, 0.03%)</title><rect x="92.9080%" y="1685" width="0.0261%" height="15" fill="rgb(237,104,14)" fg:x="224671" fg:w="63"/><text x="93.1580%" y="1695.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (63 samples, 0.03%)</title><rect x="92.9080%" y="1669" width="0.0261%" height="15" fill="rgb(245,207,31)" fg:x="224671" fg:w="63"/><text x="93.1580%" y="1679.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (63 samples, 0.03%)</title><rect x="92.9080%" y="1653" width="0.0261%" height="15" fill="rgb(229,211,45)" fg:x="224671" fg:w="63"/><text x="93.1580%" y="1663.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (35 samples, 0.01%)</title><rect x="92.9349%" y="1349" width="0.0145%" height="15" fill="rgb(229,113,15)" fg:x="224736" fg:w="35"/><text x="93.1849%" y="1359.50"></text></g><g><title>std::io::Write::write_all (35 samples, 0.01%)</title><rect x="92.9349%" y="1333" width="0.0145%" height="15" fill="rgb(237,147,15)" fg:x="224736" fg:w="35"/><text x="93.1849%" y="1343.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (35 samples, 0.01%)</title><rect x="92.9349%" y="1317" width="0.0145%" height="15" fill="rgb(244,120,12)" fg:x="224736" fg:w="35"/><text x="93.1849%" y="1327.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (35 samples, 0.01%)</title><rect x="92.9349%" y="1301" width="0.0145%" height="15" fill="rgb(205,120,12)" fg:x="224736" fg:w="35"/><text x="93.1849%" y="1311.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (35 samples, 0.01%)</title><rect x="92.9349%" y="1285" width="0.0145%" height="15" fill="rgb(231,26,45)" fg:x="224736" fg:w="35"/><text x="93.1849%" y="1295.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (35 samples, 0.01%)</title><rect x="92.9349%" y="1269" width="0.0145%" height="15" fill="rgb(246,98,1)" fg:x="224736" fg:w="35"/><text x="93.1849%" y="1279.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (35 samples, 0.01%)</title><rect x="92.9349%" y="1253" width="0.0145%" height="15" fill="rgb(207,68,45)" fg:x="224736" fg:w="35"/><text x="93.1849%" y="1263.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (36 samples, 0.01%)</title><rect x="92.9349%" y="1525" width="0.0149%" height="15" fill="rgb(231,27,38)" fg:x="224736" fg:w="36"/><text x="93.1849%" y="1535.50"></text></g><g><title>bcs::ser::serialize_into (36 samples, 0.01%)</title><rect x="92.9349%" y="1509" width="0.0149%" height="15" fill="rgb(214,223,3)" fg:x="224736" fg:w="36"/><text x="93.1849%" y="1519.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (36 samples, 0.01%)</title><rect x="92.9349%" y="1493" width="0.0149%" height="15" fill="rgb(228,195,46)" fg:x="224736" fg:w="36"/><text x="93.1849%" y="1503.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (36 samples, 0.01%)</title><rect x="92.9349%" y="1477" width="0.0149%" height="15" fill="rgb(231,100,42)" fg:x="224736" fg:w="36"/><text x="93.1849%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (36 samples, 0.01%)</title><rect x="92.9349%" y="1461" width="0.0149%" height="15" fill="rgb(236,53,4)" fg:x="224736" fg:w="36"/><text x="93.1849%" y="1471.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (36 samples, 0.01%)</title><rect x="92.9349%" y="1445" width="0.0149%" height="15" fill="rgb(230,152,12)" fg:x="224736" fg:w="36"/><text x="93.1849%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (36 samples, 0.01%)</title><rect x="92.9349%" y="1429" width="0.0149%" height="15" fill="rgb(226,101,19)" fg:x="224736" fg:w="36"/><text x="93.1849%" y="1439.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (36 samples, 0.01%)</title><rect x="92.9349%" y="1413" width="0.0149%" height="15" fill="rgb(250,149,32)" fg:x="224736" fg:w="36"/><text x="93.1849%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (36 samples, 0.01%)</title><rect x="92.9349%" y="1397" width="0.0149%" height="15" fill="rgb(232,178,12)" fg:x="224736" fg:w="36"/><text x="93.1849%" y="1407.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (36 samples, 0.01%)</title><rect x="92.9349%" y="1381" width="0.0149%" height="15" fill="rgb(246,151,17)" fg:x="224736" fg:w="36"/><text x="93.1849%" y="1391.50"></text></g><g><title>serde::ser::Serializer::collect_map (36 samples, 0.01%)</title><rect x="92.9349%" y="1365" width="0.0149%" height="15" fill="rgb(252,17,51)" fg:x="224736" fg:w="36"/><text x="93.1849%" y="1375.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (39 samples, 0.02%)</title><rect x="92.9349%" y="1669" width="0.0161%" height="15" fill="rgb(250,207,23)" fg:x="224736" fg:w="39"/><text x="93.1849%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (39 samples, 0.02%)</title><rect x="92.9349%" y="1653" width="0.0161%" height="15" fill="rgb(205,27,5)" fg:x="224736" fg:w="39"/><text x="93.1849%" y="1663.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (39 samples, 0.02%)</title><rect x="92.9349%" y="1637" width="0.0161%" height="15" fill="rgb(224,32,19)" fg:x="224736" fg:w="39"/><text x="93.1849%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (39 samples, 0.02%)</title><rect x="92.9349%" y="1621" width="0.0161%" height="15" fill="rgb(247,214,40)" fg:x="224736" fg:w="39"/><text x="93.1849%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.02%)</title><rect x="92.9349%" y="1605" width="0.0161%" height="15" fill="rgb(239,199,17)" fg:x="224736" fg:w="39"/><text x="93.1849%" y="1615.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (39 samples, 0.02%)</title><rect x="92.9349%" y="1589" width="0.0161%" height="15" fill="rgb(251,159,9)" fg:x="224736" fg:w="39"/><text x="93.1849%" y="1599.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (39 samples, 0.02%)</title><rect x="92.9349%" y="1573" width="0.0161%" height="15" fill="rgb(225,78,32)" fg:x="224736" fg:w="39"/><text x="93.1849%" y="1583.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (39 samples, 0.02%)</title><rect x="92.9349%" y="1557" width="0.0161%" height="15" fill="rgb(206,97,47)" fg:x="224736" fg:w="39"/><text x="93.1849%" y="1567.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (39 samples, 0.02%)</title><rect x="92.9349%" y="1541" width="0.0161%" height="15" fill="rgb(227,107,4)" fg:x="224736" fg:w="39"/><text x="93.1849%" y="1551.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (60 samples, 0.02%)</title><rect x="92.9510%" y="1621" width="0.0248%" height="15" fill="rgb(241,146,50)" fg:x="224775" fg:w="60"/><text x="93.2010%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (60 samples, 0.02%)</title><rect x="92.9510%" y="1605" width="0.0248%" height="15" fill="rgb(232,92,30)" fg:x="224775" fg:w="60"/><text x="93.2010%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (60 samples, 0.02%)</title><rect x="92.9510%" y="1589" width="0.0248%" height="15" fill="rgb(222,0,40)" fg:x="224775" fg:w="60"/><text x="93.2010%" y="1599.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (60 samples, 0.02%)</title><rect x="92.9510%" y="1573" width="0.0248%" height="15" fill="rgb(219,54,33)" fg:x="224775" fg:w="60"/><text x="93.2010%" y="1583.50"></text></g><g><title>rayon_core::join::join_context (49 samples, 0.02%)</title><rect x="92.9555%" y="1557" width="0.0203%" height="15" fill="rgb(226,209,28)" fg:x="224786" fg:w="49"/><text x="93.2055%" y="1567.50"></text></g><g><title>rayon_core::registry::in_worker (49 samples, 0.02%)</title><rect x="92.9555%" y="1541" width="0.0203%" height="15" fill="rgb(254,205,35)" fg:x="224786" fg:w="49"/><text x="93.2055%" y="1551.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (49 samples, 0.02%)</title><rect x="92.9555%" y="1525" width="0.0203%" height="15" fill="rgb(230,159,3)" fg:x="224786" fg:w="49"/><text x="93.2055%" y="1535.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (27 samples, 0.01%)</title><rect x="92.9882%" y="1445" width="0.0112%" height="15" fill="rgb(232,190,24)" fg:x="224865" fg:w="27"/><text x="93.2382%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (27 samples, 0.01%)</title><rect x="92.9882%" y="1429" width="0.0112%" height="15" fill="rgb(217,227,44)" fg:x="224865" fg:w="27"/><text x="93.2382%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (27 samples, 0.01%)</title><rect x="92.9882%" y="1413" width="0.0112%" height="15" fill="rgb(236,211,1)" fg:x="224865" fg:w="27"/><text x="93.2382%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.01%)</title><rect x="92.9882%" y="1397" width="0.0112%" height="15" fill="rgb(250,127,46)" fg:x="224865" fg:w="27"/><text x="93.2382%" y="1407.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.01%)</title><rect x="92.9890%" y="1381" width="0.0103%" height="15" fill="rgb(229,213,6)" fg:x="224867" fg:w="25"/><text x="93.2390%" y="1391.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.01%)</title><rect x="92.9890%" y="1365" width="0.0103%" height="15" fill="rgb(237,15,36)" fg:x="224867" fg:w="25"/><text x="93.2390%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.01%)</title><rect x="92.9890%" y="1349" width="0.0103%" height="15" fill="rgb(213,131,41)" fg:x="224867" fg:w="25"/><text x="93.2390%" y="1359.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (182 samples, 0.08%)</title><rect x="92.9349%" y="1733" width="0.0753%" height="15" fill="rgb(225,82,44)" fg:x="224736" fg:w="182"/><text x="93.1849%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (182 samples, 0.08%)</title><rect x="92.9349%" y="1717" width="0.0753%" height="15" fill="rgb(249,42,11)" fg:x="224736" fg:w="182"/><text x="93.1849%" y="1727.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (182 samples, 0.08%)</title><rect x="92.9349%" y="1701" width="0.0753%" height="15" fill="rgb(253,11,29)" fg:x="224736" fg:w="182"/><text x="93.1849%" y="1711.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (182 samples, 0.08%)</title><rect x="92.9349%" y="1685" width="0.0753%" height="15" fill="rgb(206,8,54)" fg:x="224736" fg:w="182"/><text x="93.1849%" y="1695.50"></text></g><g><title>rayon_core::join::join_context (143 samples, 0.06%)</title><rect x="92.9510%" y="1669" width="0.0591%" height="15" fill="rgb(222,186,2)" fg:x="224775" fg:w="143"/><text x="93.2010%" y="1679.50"></text></g><g><title>rayon_core::registry::in_worker (143 samples, 0.06%)</title><rect x="92.9510%" y="1653" width="0.0591%" height="15" fill="rgb(221,206,53)" fg:x="224775" fg:w="143"/><text x="93.2010%" y="1663.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (143 samples, 0.06%)</title><rect x="92.9510%" y="1637" width="0.0591%" height="15" fill="rgb(230,150,21)" fg:x="224775" fg:w="143"/><text x="93.2010%" y="1647.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (69 samples, 0.03%)</title><rect x="92.9816%" y="1621" width="0.0285%" height="15" fill="rgb(253,202,10)" fg:x="224849" fg:w="69"/><text x="93.2316%" y="1631.50"></text></g><g><title>std::panic::catch_unwind (69 samples, 0.03%)</title><rect x="92.9816%" y="1605" width="0.0285%" height="15" fill="rgb(238,109,40)" fg:x="224849" fg:w="69"/><text x="93.2316%" y="1615.50"></text></g><g><title>std::panicking::try (69 samples, 0.03%)</title><rect x="92.9816%" y="1589" width="0.0285%" height="15" fill="rgb(247,120,22)" fg:x="224849" fg:w="69"/><text x="93.2316%" y="1599.50"></text></g><g><title>std::panicking::try::do_call (69 samples, 0.03%)</title><rect x="92.9816%" y="1573" width="0.0285%" height="15" fill="rgb(207,43,30)" fg:x="224849" fg:w="69"/><text x="93.2316%" y="1583.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (69 samples, 0.03%)</title><rect x="92.9816%" y="1557" width="0.0285%" height="15" fill="rgb(213,211,24)" fg:x="224849" fg:w="69"/><text x="93.2316%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (69 samples, 0.03%)</title><rect x="92.9816%" y="1541" width="0.0285%" height="15" fill="rgb(239,73,39)" fg:x="224849" fg:w="69"/><text x="93.2316%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (69 samples, 0.03%)</title><rect x="92.9816%" y="1525" width="0.0285%" height="15" fill="rgb(245,182,19)" fg:x="224849" fg:w="69"/><text x="93.2316%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (69 samples, 0.03%)</title><rect x="92.9816%" y="1509" width="0.0285%" height="15" fill="rgb(247,143,26)" fg:x="224849" fg:w="69"/><text x="93.2316%" y="1519.50"></text></g><g><title>rayon_core::join::join_context (53 samples, 0.02%)</title><rect x="92.9882%" y="1493" width="0.0219%" height="15" fill="rgb(228,191,23)" fg:x="224865" fg:w="53"/><text x="93.2382%" y="1503.50"></text></g><g><title>rayon_core::registry::in_worker (53 samples, 0.02%)</title><rect x="92.9882%" y="1477" width="0.0219%" height="15" fill="rgb(253,165,31)" fg:x="224865" fg:w="53"/><text x="93.2382%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (53 samples, 0.02%)</title><rect x="92.9882%" y="1461" width="0.0219%" height="15" fill="rgb(234,138,20)" fg:x="224865" fg:w="53"/><text x="93.2382%" y="1471.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.01%)</title><rect x="92.9994%" y="1445" width="0.0108%" height="15" fill="rgb(218,191,29)" fg:x="224892" fg:w="26"/><text x="93.2494%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.01%)</title><rect x="92.9994%" y="1429" width="0.0108%" height="15" fill="rgb(221,157,19)" fg:x="224892" fg:w="26"/><text x="93.2494%" y="1439.50"></text></g><g><title>std::panicking::try (26 samples, 0.01%)</title><rect x="92.9994%" y="1413" width="0.0108%" height="15" fill="rgb(237,26,42)" fg:x="224892" fg:w="26"/><text x="93.2494%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.01%)</title><rect x="92.9994%" y="1397" width="0.0108%" height="15" fill="rgb(220,163,24)" fg:x="224892" fg:w="26"/><text x="93.2494%" y="1407.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="92.9994%" y="1381" width="0.0108%" height="15" fill="rgb(242,115,20)" fg:x="224892" fg:w="26"/><text x="93.2494%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (26 samples, 0.01%)</title><rect x="92.9994%" y="1365" width="0.0108%" height="15" fill="rgb(210,206,9)" fg:x="224892" fg:w="26"/><text x="93.2494%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.01%)</title><rect x="92.9994%" y="1349" width="0.0108%" height="15" fill="rgb(208,71,17)" fg:x="224892" fg:w="26"/><text x="93.2494%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.01%)</title><rect x="92.9994%" y="1333" width="0.0108%" height="15" fill="rgb(233,7,5)" fg:x="224892" fg:w="26"/><text x="93.2494%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (34 samples, 0.01%)</title><rect x="93.0184%" y="1445" width="0.0141%" height="15" fill="rgb(207,92,33)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1455.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (34 samples, 0.01%)</title><rect x="93.0184%" y="1429" width="0.0141%" height="15" fill="rgb(218,87,9)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1439.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (34 samples, 0.01%)</title><rect x="93.0184%" y="1413" width="0.0141%" height="15" fill="rgb(219,47,37)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1423.50"></text></g><g><title>rayon_core::job::JobRef::execute (34 samples, 0.01%)</title><rect x="93.0184%" y="1397" width="0.0141%" height="15" fill="rgb(221,152,34)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1407.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (34 samples, 0.01%)</title><rect x="93.0184%" y="1381" width="0.0141%" height="15" fill="rgb(235,176,21)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1391.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (34 samples, 0.01%)</title><rect x="93.0184%" y="1365" width="0.0141%" height="15" fill="rgb(232,212,21)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1375.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (34 samples, 0.01%)</title><rect x="93.0184%" y="1349" width="0.0141%" height="15" fill="rgb(245,82,39)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.01%)</title><rect x="93.0184%" y="1333" width="0.0141%" height="15" fill="rgb(241,52,51)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1343.50"></text></g><g><title>std::panicking::try (34 samples, 0.01%)</title><rect x="93.0184%" y="1317" width="0.0141%" height="15" fill="rgb(219,91,24)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.01%)</title><rect x="93.0184%" y="1301" width="0.0141%" height="15" fill="rgb(241,142,12)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1311.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 0.01%)</title><rect x="93.0184%" y="1285" width="0.0141%" height="15" fill="rgb(230,27,9)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1295.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (34 samples, 0.01%)</title><rect x="93.0184%" y="1269" width="0.0141%" height="15" fill="rgb(249,181,32)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (34 samples, 0.01%)</title><rect x="93.0184%" y="1253" width="0.0141%" height="15" fill="rgb(230,107,3)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (34 samples, 0.01%)</title><rect x="93.0184%" y="1237" width="0.0141%" height="15" fill="rgb(246,204,14)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.01%)</title><rect x="93.0184%" y="1221" width="0.0141%" height="15" fill="rgb(213,192,47)" fg:x="224938" fg:w="34"/><text x="93.2684%" y="1231.50"></text></g><g><title>rayon_core::join::join_context (29 samples, 0.01%)</title><rect x="93.0205%" y="1205" width="0.0120%" height="15" fill="rgb(240,44,36)" fg:x="224943" fg:w="29"/><text x="93.2705%" y="1215.50"></text></g><g><title>rayon_core::registry::in_worker (29 samples, 0.01%)</title><rect x="93.0205%" y="1189" width="0.0120%" height="15" fill="rgb(244,209,38)" fg:x="224943" fg:w="29"/><text x="93.2705%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (29 samples, 0.01%)</title><rect x="93.0205%" y="1173" width="0.0120%" height="15" fill="rgb(219,34,37)" fg:x="224943" fg:w="29"/><text x="93.2705%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (81 samples, 0.03%)</title><rect x="93.0105%" y="1733" width="0.0335%" height="15" fill="rgb(210,28,6)" fg:x="224919" fg:w="81"/><text x="93.2605%" y="1743.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (81 samples, 0.03%)</title><rect x="93.0105%" y="1717" width="0.0335%" height="15" fill="rgb(244,110,52)" fg:x="224919" fg:w="81"/><text x="93.2605%" y="1727.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (78 samples, 0.03%)</title><rect x="93.0118%" y="1701" width="0.0323%" height="15" fill="rgb(254,124,47)" fg:x="224922" fg:w="78"/><text x="93.2618%" y="1711.50"></text></g><g><title>rayon_core::job::JobRef::execute (78 samples, 0.03%)</title><rect x="93.0118%" y="1685" width="0.0323%" height="15" fill="rgb(254,110,13)" fg:x="224922" fg:w="78"/><text x="93.2618%" y="1695.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (78 samples, 0.03%)</title><rect x="93.0118%" y="1669" width="0.0323%" height="15" fill="rgb(252,57,21)" fg:x="224922" fg:w="78"/><text x="93.2618%" y="1679.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (78 samples, 0.03%)</title><rect x="93.0118%" y="1653" width="0.0323%" height="15" fill="rgb(242,60,45)" fg:x="224922" fg:w="78"/><text x="93.2618%" y="1663.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (78 samples, 0.03%)</title><rect x="93.0118%" y="1637" width="0.0323%" height="15" fill="rgb(234,49,30)" fg:x="224922" fg:w="78"/><text x="93.2618%" y="1647.50"></text></g><g><title>std::panic::catch_unwind (78 samples, 0.03%)</title><rect x="93.0118%" y="1621" width="0.0323%" height="15" fill="rgb(218,98,6)" fg:x="224922" fg:w="78"/><text x="93.2618%" y="1631.50"></text></g><g><title>std::panicking::try (78 samples, 0.03%)</title><rect x="93.0118%" y="1605" width="0.0323%" height="15" fill="rgb(220,174,29)" fg:x="224922" fg:w="78"/><text x="93.2618%" y="1615.50"></text></g><g><title>std::panicking::try::do_call (78 samples, 0.03%)</title><rect x="93.0118%" y="1589" width="0.0323%" height="15" fill="rgb(236,163,23)" fg:x="224922" fg:w="78"/><text x="93.2618%" y="1599.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (78 samples, 0.03%)</title><rect x="93.0118%" y="1573" width="0.0323%" height="15" fill="rgb(242,114,45)" fg:x="224922" fg:w="78"/><text x="93.2618%" y="1583.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (78 samples, 0.03%)</title><rect x="93.0118%" y="1557" width="0.0323%" height="15" fill="rgb(232,10,53)" fg:x="224922" fg:w="78"/><text x="93.2618%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (78 samples, 0.03%)</title><rect x="93.0118%" y="1541" width="0.0323%" height="15" fill="rgb(245,108,29)" fg:x="224922" fg:w="78"/><text x="93.2618%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (78 samples, 0.03%)</title><rect x="93.0118%" y="1525" width="0.0323%" height="15" fill="rgb(240,89,53)" fg:x="224922" fg:w="78"/><text x="93.2618%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (78 samples, 0.03%)</title><rect x="93.0118%" y="1509" width="0.0323%" height="15" fill="rgb(226,60,45)" fg:x="224922" fg:w="78"/><text x="93.2618%" y="1519.50"></text></g><g><title>rayon_core::join::join_context (70 samples, 0.03%)</title><rect x="93.0151%" y="1493" width="0.0289%" height="15" fill="rgb(230,41,44)" fg:x="224930" fg:w="70"/><text x="93.2651%" y="1503.50"></text></g><g><title>rayon_core::registry::in_worker (70 samples, 0.03%)</title><rect x="93.0151%" y="1477" width="0.0289%" height="15" fill="rgb(230,26,20)" fg:x="224930" fg:w="70"/><text x="93.2651%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (70 samples, 0.03%)</title><rect x="93.0151%" y="1461" width="0.0289%" height="15" fill="rgb(237,170,32)" fg:x="224930" fg:w="70"/><text x="93.2651%" y="1471.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (28 samples, 0.01%)</title><rect x="93.0324%" y="1445" width="0.0116%" height="15" fill="rgb(212,35,42)" fg:x="224972" fg:w="28"/><text x="93.2824%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (28 samples, 0.01%)</title><rect x="93.0324%" y="1429" width="0.0116%" height="15" fill="rgb(227,31,34)" fg:x="224972" fg:w="28"/><text x="93.2824%" y="1439.50"></text></g><g><title>std::panicking::try (28 samples, 0.01%)</title><rect x="93.0324%" y="1413" width="0.0116%" height="15" fill="rgb(216,19,18)" fg:x="224972" fg:w="28"/><text x="93.2824%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (28 samples, 0.01%)</title><rect x="93.0324%" y="1397" width="0.0116%" height="15" fill="rgb(211,133,42)" fg:x="224972" fg:w="28"/><text x="93.2824%" y="1407.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (28 samples, 0.01%)</title><rect x="93.0324%" y="1381" width="0.0116%" height="15" fill="rgb(244,66,13)" fg:x="224972" fg:w="28"/><text x="93.2824%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (28 samples, 0.01%)</title><rect x="93.0324%" y="1365" width="0.0116%" height="15" fill="rgb(218,185,50)" fg:x="224972" fg:w="28"/><text x="93.2824%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (28 samples, 0.01%)</title><rect x="93.0324%" y="1349" width="0.0116%" height="15" fill="rgb(219,149,13)" fg:x="224972" fg:w="28"/><text x="93.2824%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (28 samples, 0.01%)</title><rect x="93.0324%" y="1333" width="0.0116%" height="15" fill="rgb(221,125,0)" fg:x="224972" fg:w="28"/><text x="93.2824%" y="1343.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (33 samples, 0.01%)</title><rect x="93.0440%" y="1285" width="0.0136%" height="15" fill="rgb(247,126,27)" fg:x="225000" fg:w="33"/><text x="93.2940%" y="1295.50"></text></g><g><title>std::io::Write::write_all (33 samples, 0.01%)</title><rect x="93.0440%" y="1269" width="0.0136%" height="15" fill="rgb(250,138,30)" fg:x="225000" fg:w="33"/><text x="93.2940%" y="1279.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (33 samples, 0.01%)</title><rect x="93.0440%" y="1253" width="0.0136%" height="15" fill="rgb(230,151,9)" fg:x="225000" fg:w="33"/><text x="93.2940%" y="1263.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (33 samples, 0.01%)</title><rect x="93.0440%" y="1237" width="0.0136%" height="15" fill="rgb(233,80,38)" fg:x="225000" fg:w="33"/><text x="93.2940%" y="1247.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (32 samples, 0.01%)</title><rect x="93.0444%" y="1221" width="0.0132%" height="15" fill="rgb(232,68,43)" fg:x="225001" fg:w="32"/><text x="93.2944%" y="1231.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (32 samples, 0.01%)</title><rect x="93.0444%" y="1205" width="0.0132%" height="15" fill="rgb(254,5,50)" fg:x="225001" fg:w="32"/><text x="93.2944%" y="1215.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (32 samples, 0.01%)</title><rect x="93.0444%" y="1189" width="0.0132%" height="15" fill="rgb(225,45,5)" fg:x="225001" fg:w="32"/><text x="93.2944%" y="1199.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (37 samples, 0.02%)</title><rect x="93.0440%" y="1461" width="0.0153%" height="15" fill="rgb(239,22,3)" fg:x="225000" fg:w="37"/><text x="93.2940%" y="1471.50"></text></g><g><title>bcs::ser::serialize_into (37 samples, 0.02%)</title><rect x="93.0440%" y="1445" width="0.0153%" height="15" fill="rgb(243,129,0)" fg:x="225000" fg:w="37"/><text x="93.2940%" y="1455.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (37 samples, 0.02%)</title><rect x="93.0440%" y="1429" width="0.0153%" height="15" fill="rgb(223,164,0)" fg:x="225000" fg:w="37"/><text x="93.2940%" y="1439.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (37 samples, 0.02%)</title><rect x="93.0440%" y="1413" width="0.0153%" height="15" fill="rgb(221,46,29)" fg:x="225000" fg:w="37"/><text x="93.2940%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (37 samples, 0.02%)</title><rect x="93.0440%" y="1397" width="0.0153%" height="15" fill="rgb(205,97,47)" fg:x="225000" fg:w="37"/><text x="93.2940%" y="1407.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (37 samples, 0.02%)</title><rect x="93.0440%" y="1381" width="0.0153%" height="15" fill="rgb(249,14,8)" fg:x="225000" fg:w="37"/><text x="93.2940%" y="1391.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (37 samples, 0.02%)</title><rect x="93.0440%" y="1365" width="0.0153%" height="15" fill="rgb(216,77,3)" fg:x="225000" fg:w="37"/><text x="93.2940%" y="1375.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (37 samples, 0.02%)</title><rect x="93.0440%" y="1349" width="0.0153%" height="15" fill="rgb(206,168,54)" fg:x="225000" fg:w="37"/><text x="93.2940%" y="1359.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (37 samples, 0.02%)</title><rect x="93.0440%" y="1333" width="0.0153%" height="15" fill="rgb(236,3,41)" fg:x="225000" fg:w="37"/><text x="93.2940%" y="1343.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (37 samples, 0.02%)</title><rect x="93.0440%" y="1317" width="0.0153%" height="15" fill="rgb(231,132,24)" fg:x="225000" fg:w="37"/><text x="93.2940%" y="1327.50"></text></g><g><title>serde::ser::Serializer::collect_map (37 samples, 0.02%)</title><rect x="93.0440%" y="1301" width="0.0153%" height="15" fill="rgb(227,221,40)" fg:x="225000" fg:w="37"/><text x="93.2940%" y="1311.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (40 samples, 0.02%)</title><rect x="93.0440%" y="1605" width="0.0165%" height="15" fill="rgb(233,151,11)" fg:x="225000" fg:w="40"/><text x="93.2940%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (40 samples, 0.02%)</title><rect x="93.0440%" y="1589" width="0.0165%" height="15" fill="rgb(247,81,35)" fg:x="225000" fg:w="40"/><text x="93.2940%" y="1599.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (40 samples, 0.02%)</title><rect x="93.0440%" y="1573" width="0.0165%" height="15" fill="rgb(243,128,48)" fg:x="225000" fg:w="40"/><text x="93.2940%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (40 samples, 0.02%)</title><rect x="93.0440%" y="1557" width="0.0165%" height="15" fill="rgb(253,16,10)" fg:x="225000" fg:w="40"/><text x="93.2940%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.02%)</title><rect x="93.0440%" y="1541" width="0.0165%" height="15" fill="rgb(228,67,27)" fg:x="225000" fg:w="40"/><text x="93.2940%" y="1551.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (40 samples, 0.02%)</title><rect x="93.0440%" y="1525" width="0.0165%" height="15" fill="rgb(231,105,25)" fg:x="225000" fg:w="40"/><text x="93.2940%" y="1535.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (40 samples, 0.02%)</title><rect x="93.0440%" y="1509" width="0.0165%" height="15" fill="rgb(213,166,47)" fg:x="225000" fg:w="40"/><text x="93.2940%" y="1519.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (40 samples, 0.02%)</title><rect x="93.0440%" y="1493" width="0.0165%" height="15" fill="rgb(209,27,10)" fg:x="225000" fg:w="40"/><text x="93.2940%" y="1503.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (40 samples, 0.02%)</title><rect x="93.0440%" y="1477" width="0.0165%" height="15" fill="rgb(241,44,30)" fg:x="225000" fg:w="40"/><text x="93.2940%" y="1487.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (48 samples, 0.02%)</title><rect x="93.0726%" y="1445" width="0.0198%" height="15" fill="rgb(223,216,15)" fg:x="225069" fg:w="48"/><text x="93.3226%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (48 samples, 0.02%)</title><rect x="93.0726%" y="1429" width="0.0198%" height="15" fill="rgb(227,14,7)" fg:x="225069" fg:w="48"/><text x="93.3226%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (48 samples, 0.02%)</title><rect x="93.0726%" y="1413" width="0.0198%" height="15" fill="rgb(237,14,5)" fg:x="225069" fg:w="48"/><text x="93.3226%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.02%)</title><rect x="93.0726%" y="1397" width="0.0198%" height="15" fill="rgb(232,14,36)" fg:x="225069" fg:w="48"/><text x="93.3226%" y="1407.50"></text></g><g><title>rayon_core::join::join_context (41 samples, 0.02%)</title><rect x="93.0755%" y="1381" width="0.0170%" height="15" fill="rgb(234,0,38)" fg:x="225076" fg:w="41"/><text x="93.3255%" y="1391.50"></text></g><g><title>rayon_core::registry::in_worker (41 samples, 0.02%)</title><rect x="93.0755%" y="1365" width="0.0170%" height="15" fill="rgb(207,170,14)" fg:x="225076" fg:w="41"/><text x="93.3255%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (41 samples, 0.02%)</title><rect x="93.0755%" y="1349" width="0.0170%" height="15" fill="rgb(252,45,13)" fg:x="225076" fg:w="41"/><text x="93.3255%" y="1359.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (132 samples, 0.05%)</title><rect x="93.0622%" y="1557" width="0.0546%" height="15" fill="rgb(213,142,7)" fg:x="225044" fg:w="132"/><text x="93.3122%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (132 samples, 0.05%)</title><rect x="93.0622%" y="1541" width="0.0546%" height="15" fill="rgb(216,157,23)" fg:x="225044" fg:w="132"/><text x="93.3122%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (132 samples, 0.05%)</title><rect x="93.0622%" y="1525" width="0.0546%" height="15" fill="rgb(212,145,33)" fg:x="225044" fg:w="132"/><text x="93.3122%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (132 samples, 0.05%)</title><rect x="93.0622%" y="1509" width="0.0546%" height="15" fill="rgb(233,26,13)" fg:x="225044" fg:w="132"/><text x="93.3122%" y="1519.50"></text></g><g><title>rayon_core::join::join_context (107 samples, 0.04%)</title><rect x="93.0726%" y="1493" width="0.0442%" height="15" fill="rgb(219,196,19)" fg:x="225069" fg:w="107"/><text x="93.3226%" y="1503.50"></text></g><g><title>rayon_core::registry::in_worker (107 samples, 0.04%)</title><rect x="93.0726%" y="1477" width="0.0442%" height="15" fill="rgb(246,56,21)" fg:x="225069" fg:w="107"/><text x="93.3226%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (107 samples, 0.04%)</title><rect x="93.0726%" y="1461" width="0.0442%" height="15" fill="rgb(222,28,53)" fg:x="225069" fg:w="107"/><text x="93.3226%" y="1471.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (51 samples, 0.02%)</title><rect x="93.0957%" y="1445" width="0.0211%" height="15" fill="rgb(224,5,27)" fg:x="225125" fg:w="51"/><text x="93.3457%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (51 samples, 0.02%)</title><rect x="93.0957%" y="1429" width="0.0211%" height="15" fill="rgb(220,153,33)" fg:x="225125" fg:w="51"/><text x="93.3457%" y="1439.50"></text></g><g><title>std::panicking::try (51 samples, 0.02%)</title><rect x="93.0957%" y="1413" width="0.0211%" height="15" fill="rgb(226,58,19)" fg:x="225125" fg:w="51"/><text x="93.3457%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (51 samples, 0.02%)</title><rect x="93.0957%" y="1397" width="0.0211%" height="15" fill="rgb(239,112,23)" fg:x="225125" fg:w="51"/><text x="93.3457%" y="1407.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (51 samples, 0.02%)</title><rect x="93.0957%" y="1381" width="0.0211%" height="15" fill="rgb(251,213,20)" fg:x="225125" fg:w="51"/><text x="93.3457%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (51 samples, 0.02%)</title><rect x="93.0957%" y="1365" width="0.0211%" height="15" fill="rgb(215,181,21)" fg:x="225125" fg:w="51"/><text x="93.3457%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (51 samples, 0.02%)</title><rect x="93.0957%" y="1349" width="0.0211%" height="15" fill="rgb(240,8,35)" fg:x="225125" fg:w="51"/><text x="93.3457%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (51 samples, 0.02%)</title><rect x="93.0957%" y="1333" width="0.0211%" height="15" fill="rgb(232,203,3)" fg:x="225125" fg:w="51"/><text x="93.3457%" y="1343.50"></text></g><g><title>rayon_core::join::join_context (42 samples, 0.02%)</title><rect x="93.0994%" y="1317" width="0.0174%" height="15" fill="rgb(214,202,43)" fg:x="225134" fg:w="42"/><text x="93.3494%" y="1327.50"></text></g><g><title>rayon_core::registry::in_worker (42 samples, 0.02%)</title><rect x="93.0994%" y="1301" width="0.0174%" height="15" fill="rgb(254,35,11)" fg:x="225134" fg:w="42"/><text x="93.3494%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (42 samples, 0.02%)</title><rect x="93.0994%" y="1285" width="0.0174%" height="15" fill="rgb(239,173,13)" fg:x="225134" fg:w="42"/><text x="93.3494%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (59 samples, 0.02%)</title><rect x="93.1168%" y="1557" width="0.0244%" height="15" fill="rgb(220,141,0)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1567.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (59 samples, 0.02%)</title><rect x="93.1168%" y="1541" width="0.0244%" height="15" fill="rgb(210,98,12)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1551.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (59 samples, 0.02%)</title><rect x="93.1168%" y="1525" width="0.0244%" height="15" fill="rgb(254,153,22)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1535.50"></text></g><g><title>rayon_core::job::JobRef::execute (59 samples, 0.02%)</title><rect x="93.1168%" y="1509" width="0.0244%" height="15" fill="rgb(247,223,17)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1519.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (59 samples, 0.02%)</title><rect x="93.1168%" y="1493" width="0.0244%" height="15" fill="rgb(246,56,7)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1503.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (59 samples, 0.02%)</title><rect x="93.1168%" y="1477" width="0.0244%" height="15" fill="rgb(240,226,12)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1487.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (59 samples, 0.02%)</title><rect x="93.1168%" y="1461" width="0.0244%" height="15" fill="rgb(205,87,46)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1471.50"></text></g><g><title>std::panic::catch_unwind (59 samples, 0.02%)</title><rect x="93.1168%" y="1445" width="0.0244%" height="15" fill="rgb(245,214,51)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1455.50"></text></g><g><title>std::panicking::try (59 samples, 0.02%)</title><rect x="93.1168%" y="1429" width="0.0244%" height="15" fill="rgb(223,172,33)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1439.50"></text></g><g><title>std::panicking::try::do_call (59 samples, 0.02%)</title><rect x="93.1168%" y="1413" width="0.0244%" height="15" fill="rgb(227,203,34)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1423.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (59 samples, 0.02%)</title><rect x="93.1168%" y="1397" width="0.0244%" height="15" fill="rgb(248,143,44)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1407.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (59 samples, 0.02%)</title><rect x="93.1168%" y="1381" width="0.0244%" height="15" fill="rgb(226,162,5)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (59 samples, 0.02%)</title><rect x="93.1168%" y="1365" width="0.0244%" height="15" fill="rgb(211,143,1)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (59 samples, 0.02%)</title><rect x="93.1168%" y="1349" width="0.0244%" height="15" fill="rgb(224,96,15)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (59 samples, 0.02%)</title><rect x="93.1168%" y="1333" width="0.0244%" height="15" fill="rgb(222,4,38)" fg:x="225176" fg:w="59"/><text x="93.3668%" y="1343.50"></text></g><g><title>rayon_core::join::join_context (49 samples, 0.02%)</title><rect x="93.1209%" y="1317" width="0.0203%" height="15" fill="rgb(253,228,15)" fg:x="225186" fg:w="49"/><text x="93.3709%" y="1327.50"></text></g><g><title>rayon_core::registry::in_worker (49 samples, 0.02%)</title><rect x="93.1209%" y="1301" width="0.0203%" height="15" fill="rgb(242,194,12)" fg:x="225186" fg:w="49"/><text x="93.3709%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (49 samples, 0.02%)</title><rect x="93.1209%" y="1285" width="0.0203%" height="15" fill="rgb(214,177,31)" fg:x="225186" fg:w="49"/><text x="93.3709%" y="1295.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (35 samples, 0.01%)</title><rect x="93.1267%" y="1269" width="0.0145%" height="15" fill="rgb(226,58,51)" fg:x="225200" fg:w="35"/><text x="93.3767%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (35 samples, 0.01%)</title><rect x="93.1267%" y="1253" width="0.0145%" height="15" fill="rgb(250,119,16)" fg:x="225200" fg:w="35"/><text x="93.3767%" y="1263.50"></text></g><g><title>std::panicking::try (35 samples, 0.01%)</title><rect x="93.1267%" y="1237" width="0.0145%" height="15" fill="rgb(223,128,53)" fg:x="225200" fg:w="35"/><text x="93.3767%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (35 samples, 0.01%)</title><rect x="93.1267%" y="1221" width="0.0145%" height="15" fill="rgb(251,199,15)" fg:x="225200" fg:w="35"/><text x="93.3767%" y="1231.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35 samples, 0.01%)</title><rect x="93.1267%" y="1205" width="0.0145%" height="15" fill="rgb(235,168,42)" fg:x="225200" fg:w="35"/><text x="93.3767%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (35 samples, 0.01%)</title><rect x="93.1267%" y="1189" width="0.0145%" height="15" fill="rgb(250,210,17)" fg:x="225200" fg:w="35"/><text x="93.3767%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (35 samples, 0.01%)</title><rect x="93.1267%" y="1173" width="0.0145%" height="15" fill="rgb(226,36,41)" fg:x="225200" fg:w="35"/><text x="93.3767%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.01%)</title><rect x="93.1267%" y="1157" width="0.0145%" height="15" fill="rgb(225,87,10)" fg:x="225200" fg:w="35"/><text x="93.3767%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (29 samples, 0.01%)</title><rect x="93.1292%" y="1141" width="0.0120%" height="15" fill="rgb(228,83,9)" fg:x="225206" fg:w="29"/><text x="93.3792%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (29 samples, 0.01%)</title><rect x="93.1292%" y="1125" width="0.0120%" height="15" fill="rgb(225,16,36)" fg:x="225206" fg:w="29"/><text x="93.3792%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (29 samples, 0.01%)</title><rect x="93.1292%" y="1109" width="0.0120%" height="15" fill="rgb(242,198,13)" fg:x="225206" fg:w="29"/><text x="93.3792%" y="1119.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (27 samples, 0.01%)</title><rect x="93.1412%" y="1109" width="0.0112%" height="15" fill="rgb(239,25,51)" fg:x="225235" fg:w="27"/><text x="93.3912%" y="1119.50"></text></g><g><title>std::io::Write::write_all (27 samples, 0.01%)</title><rect x="93.1412%" y="1093" width="0.0112%" height="15" fill="rgb(239,28,37)" fg:x="225235" fg:w="27"/><text x="93.3912%" y="1103.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (27 samples, 0.01%)</title><rect x="93.1412%" y="1077" width="0.0112%" height="15" fill="rgb(234,70,17)" fg:x="225235" fg:w="27"/><text x="93.3912%" y="1087.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (27 samples, 0.01%)</title><rect x="93.1412%" y="1061" width="0.0112%" height="15" fill="rgb(231,215,53)" fg:x="225235" fg:w="27"/><text x="93.3912%" y="1071.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (27 samples, 0.01%)</title><rect x="93.1412%" y="1045" width="0.0112%" height="15" fill="rgb(218,140,42)" fg:x="225235" fg:w="27"/><text x="93.3912%" y="1055.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (27 samples, 0.01%)</title><rect x="93.1412%" y="1029" width="0.0112%" height="15" fill="rgb(233,227,45)" fg:x="225235" fg:w="27"/><text x="93.3912%" y="1039.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (27 samples, 0.01%)</title><rect x="93.1412%" y="1013" width="0.0112%" height="15" fill="rgb(225,189,21)" fg:x="225235" fg:w="27"/><text x="93.3912%" y="1023.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (28 samples, 0.01%)</title><rect x="93.1412%" y="1285" width="0.0116%" height="15" fill="rgb(237,176,54)" fg:x="225235" fg:w="28"/><text x="93.3912%" y="1295.50"></text></g><g><title>bcs::ser::serialize_into (28 samples, 0.01%)</title><rect x="93.1412%" y="1269" width="0.0116%" height="15" fill="rgb(215,131,46)" fg:x="225235" fg:w="28"/><text x="93.3912%" y="1279.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (28 samples, 0.01%)</title><rect x="93.1412%" y="1253" width="0.0116%" height="15" fill="rgb(218,95,20)" fg:x="225235" fg:w="28"/><text x="93.3912%" y="1263.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (28 samples, 0.01%)</title><rect x="93.1412%" y="1237" width="0.0116%" height="15" fill="rgb(208,198,12)" fg:x="225235" fg:w="28"/><text x="93.3912%" y="1247.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (28 samples, 0.01%)</title><rect x="93.1412%" y="1221" width="0.0116%" height="15" fill="rgb(239,107,50)" fg:x="225235" fg:w="28"/><text x="93.3912%" y="1231.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (28 samples, 0.01%)</title><rect x="93.1412%" y="1205" width="0.0116%" height="15" fill="rgb(240,217,37)" fg:x="225235" fg:w="28"/><text x="93.3912%" y="1215.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (28 samples, 0.01%)</title><rect x="93.1412%" y="1189" width="0.0116%" height="15" fill="rgb(242,197,49)" fg:x="225235" fg:w="28"/><text x="93.3912%" y="1199.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (28 samples, 0.01%)</title><rect x="93.1412%" y="1173" width="0.0116%" height="15" fill="rgb(219,171,17)" fg:x="225235" fg:w="28"/><text x="93.3912%" y="1183.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 0.01%)</title><rect x="93.1412%" y="1157" width="0.0116%" height="15" fill="rgb(209,81,40)" fg:x="225235" fg:w="28"/><text x="93.3912%" y="1167.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (28 samples, 0.01%)</title><rect x="93.1412%" y="1141" width="0.0116%" height="15" fill="rgb(237,156,30)" fg:x="225235" fg:w="28"/><text x="93.3912%" y="1151.50"></text></g><g><title>serde::ser::Serializer::collect_map (28 samples, 0.01%)</title><rect x="93.1412%" y="1125" width="0.0116%" height="15" fill="rgb(212,127,16)" fg:x="225235" fg:w="28"/><text x="93.3912%" y="1135.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (29 samples, 0.01%)</title><rect x="93.1412%" y="1429" width="0.0120%" height="15" fill="rgb(226,66,32)" fg:x="225235" fg:w="29"/><text x="93.3912%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (29 samples, 0.01%)</title><rect x="93.1412%" y="1413" width="0.0120%" height="15" fill="rgb(245,22,46)" fg:x="225235" fg:w="29"/><text x="93.3912%" y="1423.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (29 samples, 0.01%)</title><rect x="93.1412%" y="1397" width="0.0120%" height="15" fill="rgb(210,112,21)" fg:x="225235" fg:w="29"/><text x="93.3912%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (29 samples, 0.01%)</title><rect x="93.1412%" y="1381" width="0.0120%" height="15" fill="rgb(207,118,39)" fg:x="225235" fg:w="29"/><text x="93.3912%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.01%)</title><rect x="93.1412%" y="1365" width="0.0120%" height="15" fill="rgb(205,206,35)" fg:x="225235" fg:w="29"/><text x="93.3912%" y="1375.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29 samples, 0.01%)</title><rect x="93.1412%" y="1349" width="0.0120%" height="15" fill="rgb(222,120,2)" fg:x="225235" fg:w="29"/><text x="93.3912%" y="1359.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (29 samples, 0.01%)</title><rect x="93.1412%" y="1333" width="0.0120%" height="15" fill="rgb(205,38,18)" fg:x="225235" fg:w="29"/><text x="93.3912%" y="1343.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (29 samples, 0.01%)</title><rect x="93.1412%" y="1317" width="0.0120%" height="15" fill="rgb(226,61,2)" fg:x="225235" fg:w="29"/><text x="93.3912%" y="1327.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (29 samples, 0.01%)</title><rect x="93.1412%" y="1301" width="0.0120%" height="15" fill="rgb(242,161,23)" fg:x="225235" fg:w="29"/><text x="93.3912%" y="1311.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (62 samples, 0.03%)</title><rect x="93.1544%" y="1381" width="0.0256%" height="15" fill="rgb(213,13,52)" fg:x="225267" fg:w="62"/><text x="93.4044%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (62 samples, 0.03%)</title><rect x="93.1544%" y="1365" width="0.0256%" height="15" fill="rgb(246,209,47)" fg:x="225267" fg:w="62"/><text x="93.4044%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (62 samples, 0.03%)</title><rect x="93.1544%" y="1349" width="0.0256%" height="15" fill="rgb(214,41,3)" fg:x="225267" fg:w="62"/><text x="93.4044%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (62 samples, 0.03%)</title><rect x="93.1544%" y="1333" width="0.0256%" height="15" fill="rgb(236,119,38)" fg:x="225267" fg:w="62"/><text x="93.4044%" y="1343.50"></text></g><g><title>rayon_core::join::join_context (48 samples, 0.02%)</title><rect x="93.1602%" y="1317" width="0.0198%" height="15" fill="rgb(218,50,11)" fg:x="225281" fg:w="48"/><text x="93.4102%" y="1327.50"></text></g><g><title>rayon_core::registry::in_worker (48 samples, 0.02%)</title><rect x="93.1602%" y="1301" width="0.0198%" height="15" fill="rgb(228,38,11)" fg:x="225281" fg:w="48"/><text x="93.4102%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (48 samples, 0.02%)</title><rect x="93.1602%" y="1285" width="0.0198%" height="15" fill="rgb(212,13,9)" fg:x="225281" fg:w="48"/><text x="93.4102%" y="1295.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.01%)</title><rect x="93.1693%" y="1269" width="0.0108%" height="15" fill="rgb(208,211,9)" fg:x="225303" fg:w="26"/><text x="93.4193%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.01%)</title><rect x="93.1693%" y="1253" width="0.0108%" height="15" fill="rgb(239,39,32)" fg:x="225303" fg:w="26"/><text x="93.4193%" y="1263.50"></text></g><g><title>std::panicking::try (26 samples, 0.01%)</title><rect x="93.1693%" y="1237" width="0.0108%" height="15" fill="rgb(254,179,26)" fg:x="225303" fg:w="26"/><text x="93.4193%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.01%)</title><rect x="93.1693%" y="1221" width="0.0108%" height="15" fill="rgb(249,165,28)" fg:x="225303" fg:w="26"/><text x="93.4193%" y="1231.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.1693%" y="1205" width="0.0108%" height="15" fill="rgb(225,59,50)" fg:x="225303" fg:w="26"/><text x="93.4193%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (26 samples, 0.01%)</title><rect x="93.1693%" y="1189" width="0.0108%" height="15" fill="rgb(209,122,5)" fg:x="225303" fg:w="26"/><text x="93.4193%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.01%)</title><rect x="93.1693%" y="1173" width="0.0108%" height="15" fill="rgb(214,65,34)" fg:x="225303" fg:w="26"/><text x="93.4193%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.01%)</title><rect x="93.1693%" y="1157" width="0.0108%" height="15" fill="rgb(249,183,32)" fg:x="225303" fg:w="26"/><text x="93.4193%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (47 samples, 0.02%)</title><rect x="93.1801%" y="1381" width="0.0194%" height="15" fill="rgb(218,122,24)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1391.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (47 samples, 0.02%)</title><rect x="93.1801%" y="1365" width="0.0194%" height="15" fill="rgb(224,109,18)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1375.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (47 samples, 0.02%)</title><rect x="93.1801%" y="1349" width="0.0194%" height="15" fill="rgb(210,68,50)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1359.50"></text></g><g><title>rayon_core::job::JobRef::execute (47 samples, 0.02%)</title><rect x="93.1801%" y="1333" width="0.0194%" height="15" fill="rgb(212,184,34)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1343.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (47 samples, 0.02%)</title><rect x="93.1801%" y="1317" width="0.0194%" height="15" fill="rgb(238,105,48)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1327.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (47 samples, 0.02%)</title><rect x="93.1801%" y="1301" width="0.0194%" height="15" fill="rgb(222,134,54)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1311.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (47 samples, 0.02%)</title><rect x="93.1801%" y="1285" width="0.0194%" height="15" fill="rgb(246,24,43)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (47 samples, 0.02%)</title><rect x="93.1801%" y="1269" width="0.0194%" height="15" fill="rgb(227,169,22)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1279.50"></text></g><g><title>std::panicking::try (47 samples, 0.02%)</title><rect x="93.1801%" y="1253" width="0.0194%" height="15" fill="rgb(253,152,4)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (47 samples, 0.02%)</title><rect x="93.1801%" y="1237" width="0.0194%" height="15" fill="rgb(219,158,36)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1247.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (47 samples, 0.02%)</title><rect x="93.1801%" y="1221" width="0.0194%" height="15" fill="rgb(251,128,40)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1231.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (47 samples, 0.02%)</title><rect x="93.1801%" y="1205" width="0.0194%" height="15" fill="rgb(254,101,39)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (47 samples, 0.02%)</title><rect x="93.1801%" y="1189" width="0.0194%" height="15" fill="rgb(221,168,40)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (47 samples, 0.02%)</title><rect x="93.1801%" y="1173" width="0.0194%" height="15" fill="rgb(221,14,27)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.02%)</title><rect x="93.1801%" y="1157" width="0.0194%" height="15" fill="rgb(207,36,43)" fg:x="225329" fg:w="47"/><text x="93.4301%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (45 samples, 0.02%)</title><rect x="93.1809%" y="1141" width="0.0186%" height="15" fill="rgb(240,172,53)" fg:x="225331" fg:w="45"/><text x="93.4309%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (45 samples, 0.02%)</title><rect x="93.1809%" y="1125" width="0.0186%" height="15" fill="rgb(241,138,43)" fg:x="225331" fg:w="45"/><text x="93.4309%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (45 samples, 0.02%)</title><rect x="93.1809%" y="1109" width="0.0186%" height="15" fill="rgb(227,78,19)" fg:x="225331" fg:w="45"/><text x="93.4309%" y="1119.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.01%)</title><rect x="93.1888%" y="1093" width="0.0108%" height="15" fill="rgb(215,127,44)" fg:x="225350" fg:w="26"/><text x="93.4388%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.01%)</title><rect x="93.1888%" y="1077" width="0.0108%" height="15" fill="rgb(227,13,10)" fg:x="225350" fg:w="26"/><text x="93.4388%" y="1087.50"></text></g><g><title>std::panicking::try (26 samples, 0.01%)</title><rect x="93.1888%" y="1061" width="0.0108%" height="15" fill="rgb(249,177,6)" fg:x="225350" fg:w="26"/><text x="93.4388%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.01%)</title><rect x="93.1888%" y="1045" width="0.0108%" height="15" fill="rgb(215,154,26)" fg:x="225350" fg:w="26"/><text x="93.4388%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.1888%" y="1029" width="0.0108%" height="15" fill="rgb(250,168,20)" fg:x="225350" fg:w="26"/><text x="93.4388%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (26 samples, 0.01%)</title><rect x="93.1888%" y="1013" width="0.0108%" height="15" fill="rgb(222,53,38)" fg:x="225350" fg:w="26"/><text x="93.4388%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.01%)</title><rect x="93.1888%" y="997" width="0.0108%" height="15" fill="rgb(245,154,5)" fg:x="225350" fg:w="26"/><text x="93.4388%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.01%)</title><rect x="93.1888%" y="981" width="0.0108%" height="15" fill="rgb(214,89,50)" fg:x="225350" fg:w="26"/><text x="93.4388%" y="991.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (35 samples, 0.01%)</title><rect x="93.2094%" y="1205" width="0.0145%" height="15" fill="rgb(232,73,14)" fg:x="225400" fg:w="35"/><text x="93.4594%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (35 samples, 0.01%)</title><rect x="93.2094%" y="1189" width="0.0145%" height="15" fill="rgb(230,101,20)" fg:x="225400" fg:w="35"/><text x="93.4594%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (35 samples, 0.01%)</title><rect x="93.2094%" y="1173" width="0.0145%" height="15" fill="rgb(208,56,28)" fg:x="225400" fg:w="35"/><text x="93.4594%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.01%)</title><rect x="93.2094%" y="1157" width="0.0145%" height="15" fill="rgb(247,205,22)" fg:x="225400" fg:w="35"/><text x="93.4594%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,955 samples, 0.81%)</title><rect x="92.4295%" y="2165" width="0.8084%" height="15" fill="rgb(252,109,51)" fg:x="223514" fg:w="1955"/><text x="92.6795%" y="2175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,955 samples, 0.81%)</title><rect x="92.4295%" y="2149" width="0.8084%" height="15" fill="rgb(220,40,24)" fg:x="223514" fg:w="1955"/><text x="92.6795%" y="2159.50"></text></g><g><title>rayon_core::join::join_context (1,870 samples, 0.77%)</title><rect x="92.4647%" y="2133" width="0.7733%" height="15" fill="rgb(251,108,7)" fg:x="223599" fg:w="1870"/><text x="92.7147%" y="2143.50"></text></g><g><title>rayon_core::registry::in_worker (1,870 samples, 0.77%)</title><rect x="92.4647%" y="2117" width="0.7733%" height="15" fill="rgb(238,102,51)" fg:x="223599" fg:w="1870"/><text x="92.7147%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,870 samples, 0.77%)</title><rect x="92.4647%" y="2101" width="0.7733%" height="15" fill="rgb(219,149,34)" fg:x="223599" fg:w="1870"/><text x="92.7147%" y="2111.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1,315 samples, 0.54%)</title><rect x="92.6942%" y="2085" width="0.5438%" height="15" fill="rgb(239,70,0)" fg:x="224154" fg:w="1315"/><text x="92.9442%" y="2095.50"></text></g><g><title>std::panic::catch_unwind (1,315 samples, 0.54%)</title><rect x="92.6942%" y="2069" width="0.5438%" height="15" fill="rgb(246,214,23)" fg:x="224154" fg:w="1315"/><text x="92.9442%" y="2079.50"></text></g><g><title>std::panicking::try (1,315 samples, 0.54%)</title><rect x="92.6942%" y="2053" width="0.5438%" height="15" fill="rgb(239,221,51)" fg:x="224154" fg:w="1315"/><text x="92.9442%" y="2063.50"></text></g><g><title>std::panicking::try::do_call (1,315 samples, 0.54%)</title><rect x="92.6942%" y="2037" width="0.5438%" height="15" fill="rgb(254,62,14)" fg:x="224154" fg:w="1315"/><text x="92.9442%" y="2047.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,315 samples, 0.54%)</title><rect x="92.6942%" y="2021" width="0.5438%" height="15" fill="rgb(253,57,33)" fg:x="224154" fg:w="1315"/><text x="92.9442%" y="2031.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1,315 samples, 0.54%)</title><rect x="92.6942%" y="2005" width="0.5438%" height="15" fill="rgb(229,34,6)" fg:x="224154" fg:w="1315"/><text x="92.9442%" y="2015.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,315 samples, 0.54%)</title><rect x="92.6942%" y="1989" width="0.5438%" height="15" fill="rgb(235,191,23)" fg:x="224154" fg:w="1315"/><text x="92.9442%" y="1999.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,315 samples, 0.54%)</title><rect x="92.6942%" y="1973" width="0.5438%" height="15" fill="rgb(217,207,27)" fg:x="224154" fg:w="1315"/><text x="92.9442%" y="1983.50"></text></g><g><title>rayon_core::join::join_context (1,218 samples, 0.50%)</title><rect x="92.7343%" y="1957" width="0.5037%" height="15" fill="rgb(232,41,44)" fg:x="224251" fg:w="1218"/><text x="92.9843%" y="1967.50"></text></g><g><title>rayon_core::registry::in_worker (1,218 samples, 0.50%)</title><rect x="92.7343%" y="1941" width="0.5037%" height="15" fill="rgb(221,188,19)" fg:x="224251" fg:w="1218"/><text x="92.9843%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,218 samples, 0.50%)</title><rect x="92.7343%" y="1925" width="0.5037%" height="15" fill="rgb(245,180,45)" fg:x="224251" fg:w="1218"/><text x="92.9843%" y="1935.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (798 samples, 0.33%)</title><rect x="92.9080%" y="1909" width="0.3300%" height="15" fill="rgb(250,220,42)" fg:x="224671" fg:w="798"/><text x="93.1580%" y="1919.50"></text></g><g><title>std::panic::catch_unwind (798 samples, 0.33%)</title><rect x="92.9080%" y="1893" width="0.3300%" height="15" fill="rgb(234,16,34)" fg:x="224671" fg:w="798"/><text x="93.1580%" y="1903.50"></text></g><g><title>std::panicking::try (798 samples, 0.33%)</title><rect x="92.9080%" y="1877" width="0.3300%" height="15" fill="rgb(233,217,23)" fg:x="224671" fg:w="798"/><text x="93.1580%" y="1887.50"></text></g><g><title>std::panicking::try::do_call (798 samples, 0.33%)</title><rect x="92.9080%" y="1861" width="0.3300%" height="15" fill="rgb(209,22,46)" fg:x="224671" fg:w="798"/><text x="93.1580%" y="1871.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (798 samples, 0.33%)</title><rect x="92.9080%" y="1845" width="0.3300%" height="15" fill="rgb(213,101,18)" fg:x="224671" fg:w="798"/><text x="93.1580%" y="1855.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (798 samples, 0.33%)</title><rect x="92.9080%" y="1829" width="0.3300%" height="15" fill="rgb(215,179,52)" fg:x="224671" fg:w="798"/><text x="93.1580%" y="1839.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (798 samples, 0.33%)</title><rect x="92.9080%" y="1813" width="0.3300%" height="15" fill="rgb(223,50,25)" fg:x="224671" fg:w="798"/><text x="93.1580%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (798 samples, 0.33%)</title><rect x="92.9080%" y="1797" width="0.3300%" height="15" fill="rgb(224,51,44)" fg:x="224671" fg:w="798"/><text x="93.1580%" y="1807.50"></text></g><g><title>rayon_core::join::join_context (733 samples, 0.30%)</title><rect x="92.9349%" y="1781" width="0.3031%" height="15" fill="rgb(224,13,54)" fg:x="224736" fg:w="733"/><text x="93.1849%" y="1791.50"></text></g><g><title>rayon_core::registry::in_worker (733 samples, 0.30%)</title><rect x="92.9349%" y="1765" width="0.3031%" height="15" fill="rgb(219,58,47)" fg:x="224736" fg:w="733"/><text x="93.1849%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (733 samples, 0.30%)</title><rect x="92.9349%" y="1749" width="0.3031%" height="15" fill="rgb(246,124,34)" fg:x="224736" fg:w="733"/><text x="93.1849%" y="1759.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (469 samples, 0.19%)</title><rect x="93.0440%" y="1733" width="0.1939%" height="15" fill="rgb(245,109,25)" fg:x="225000" fg:w="469"/><text x="93.2940%" y="1743.50"></text></g><g><title>std::panic::catch_unwind (469 samples, 0.19%)</title><rect x="93.0440%" y="1717" width="0.1939%" height="15" fill="rgb(235,48,23)" fg:x="225000" fg:w="469"/><text x="93.2940%" y="1727.50"></text></g><g><title>std::panicking::try (469 samples, 0.19%)</title><rect x="93.0440%" y="1701" width="0.1939%" height="15" fill="rgb(229,203,36)" fg:x="225000" fg:w="469"/><text x="93.2940%" y="1711.50"></text></g><g><title>std::panicking::try::do_call (469 samples, 0.19%)</title><rect x="93.0440%" y="1685" width="0.1939%" height="15" fill="rgb(234,180,9)" fg:x="225000" fg:w="469"/><text x="93.2940%" y="1695.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (469 samples, 0.19%)</title><rect x="93.0440%" y="1669" width="0.1939%" height="15" fill="rgb(228,98,45)" fg:x="225000" fg:w="469"/><text x="93.2940%" y="1679.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (469 samples, 0.19%)</title><rect x="93.0440%" y="1653" width="0.1939%" height="15" fill="rgb(240,24,36)" fg:x="225000" fg:w="469"/><text x="93.2940%" y="1663.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (469 samples, 0.19%)</title><rect x="93.0440%" y="1637" width="0.1939%" height="15" fill="rgb(227,154,19)" fg:x="225000" fg:w="469"/><text x="93.2940%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (469 samples, 0.19%)</title><rect x="93.0440%" y="1621" width="0.1939%" height="15" fill="rgb(231,2,48)" fg:x="225000" fg:w="469"/><text x="93.2940%" y="1631.50"></text></g><g><title>rayon_core::join::join_context (425 samples, 0.18%)</title><rect x="93.0622%" y="1605" width="0.1757%" height="15" fill="rgb(219,216,0)" fg:x="225044" fg:w="425"/><text x="93.3122%" y="1615.50"></text></g><g><title>rayon_core::registry::in_worker (425 samples, 0.18%)</title><rect x="93.0622%" y="1589" width="0.1757%" height="15" fill="rgb(251,88,0)" fg:x="225044" fg:w="425"/><text x="93.3122%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (425 samples, 0.18%)</title><rect x="93.0622%" y="1573" width="0.1757%" height="15" fill="rgb(242,45,45)" fg:x="225044" fg:w="425"/><text x="93.3122%" y="1583.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (234 samples, 0.10%)</title><rect x="93.1412%" y="1557" width="0.0968%" height="15" fill="rgb(218,149,45)" fg:x="225235" fg:w="234"/><text x="93.3912%" y="1567.50"></text></g><g><title>std::panic::catch_unwind (234 samples, 0.10%)</title><rect x="93.1412%" y="1541" width="0.0968%" height="15" fill="rgb(247,194,10)" fg:x="225235" fg:w="234"/><text x="93.3912%" y="1551.50"></text></g><g><title>std::panicking::try (234 samples, 0.10%)</title><rect x="93.1412%" y="1525" width="0.0968%" height="15" fill="rgb(234,33,37)" fg:x="225235" fg:w="234"/><text x="93.3912%" y="1535.50"></text></g><g><title>std::panicking::try::do_call (234 samples, 0.10%)</title><rect x="93.1412%" y="1509" width="0.0968%" height="15" fill="rgb(218,61,13)" fg:x="225235" fg:w="234"/><text x="93.3912%" y="1519.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (234 samples, 0.10%)</title><rect x="93.1412%" y="1493" width="0.0968%" height="15" fill="rgb(210,80,52)" fg:x="225235" fg:w="234"/><text x="93.3912%" y="1503.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (234 samples, 0.10%)</title><rect x="93.1412%" y="1477" width="0.0968%" height="15" fill="rgb(218,203,27)" fg:x="225235" fg:w="234"/><text x="93.3912%" y="1487.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (234 samples, 0.10%)</title><rect x="93.1412%" y="1461" width="0.0968%" height="15" fill="rgb(209,126,33)" fg:x="225235" fg:w="234"/><text x="93.3912%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (234 samples, 0.10%)</title><rect x="93.1412%" y="1445" width="0.0968%" height="15" fill="rgb(234,173,41)" fg:x="225235" fg:w="234"/><text x="93.3912%" y="1455.50"></text></g><g><title>rayon_core::join::join_context (202 samples, 0.08%)</title><rect x="93.1544%" y="1429" width="0.0835%" height="15" fill="rgb(228,166,9)" fg:x="225267" fg:w="202"/><text x="93.4044%" y="1439.50"></text></g><g><title>rayon_core::registry::in_worker (202 samples, 0.08%)</title><rect x="93.1544%" y="1413" width="0.0835%" height="15" fill="rgb(208,124,43)" fg:x="225267" fg:w="202"/><text x="93.4044%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (202 samples, 0.08%)</title><rect x="93.1544%" y="1397" width="0.0835%" height="15" fill="rgb(212,154,38)" fg:x="225267" fg:w="202"/><text x="93.4044%" y="1407.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (93 samples, 0.04%)</title><rect x="93.1995%" y="1381" width="0.0385%" height="15" fill="rgb(246,179,35)" fg:x="225376" fg:w="93"/><text x="93.4495%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (93 samples, 0.04%)</title><rect x="93.1995%" y="1365" width="0.0385%" height="15" fill="rgb(251,3,50)" fg:x="225376" fg:w="93"/><text x="93.4495%" y="1375.50"></text></g><g><title>std::panicking::try (93 samples, 0.04%)</title><rect x="93.1995%" y="1349" width="0.0385%" height="15" fill="rgb(219,96,8)" fg:x="225376" fg:w="93"/><text x="93.4495%" y="1359.50"></text></g><g><title>std::panicking::try::do_call (93 samples, 0.04%)</title><rect x="93.1995%" y="1333" width="0.0385%" height="15" fill="rgb(251,216,33)" fg:x="225376" fg:w="93"/><text x="93.4495%" y="1343.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (93 samples, 0.04%)</title><rect x="93.1995%" y="1317" width="0.0385%" height="15" fill="rgb(243,145,29)" fg:x="225376" fg:w="93"/><text x="93.4495%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (93 samples, 0.04%)</title><rect x="93.1995%" y="1301" width="0.0385%" height="15" fill="rgb(210,75,20)" fg:x="225376" fg:w="93"/><text x="93.4495%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (93 samples, 0.04%)</title><rect x="93.1995%" y="1285" width="0.0385%" height="15" fill="rgb(235,56,8)" fg:x="225376" fg:w="93"/><text x="93.4495%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (93 samples, 0.04%)</title><rect x="93.1995%" y="1269" width="0.0385%" height="15" fill="rgb(226,175,49)" fg:x="225376" fg:w="93"/><text x="93.4495%" y="1279.50"></text></g><g><title>rayon_core::join::join_context (69 samples, 0.03%)</title><rect x="93.2094%" y="1253" width="0.0285%" height="15" fill="rgb(242,204,23)" fg:x="225400" fg:w="69"/><text x="93.4594%" y="1263.50"></text></g><g><title>rayon_core::registry::in_worker (69 samples, 0.03%)</title><rect x="93.2094%" y="1237" width="0.0285%" height="15" fill="rgb(225,104,24)" fg:x="225400" fg:w="69"/><text x="93.4594%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (69 samples, 0.03%)</title><rect x="93.2094%" y="1221" width="0.0285%" height="15" fill="rgb(253,34,1)" fg:x="225400" fg:w="69"/><text x="93.4594%" y="1231.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (33 samples, 0.01%)</title><rect x="93.2243%" y="1205" width="0.0136%" height="15" fill="rgb(233,199,23)" fg:x="225436" fg:w="33"/><text x="93.4743%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (33 samples, 0.01%)</title><rect x="93.2243%" y="1189" width="0.0136%" height="15" fill="rgb(247,7,51)" fg:x="225436" fg:w="33"/><text x="93.4743%" y="1199.50"></text></g><g><title>std::panicking::try (33 samples, 0.01%)</title><rect x="93.2243%" y="1173" width="0.0136%" height="15" fill="rgb(214,146,12)" fg:x="225436" fg:w="33"/><text x="93.4743%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (33 samples, 0.01%)</title><rect x="93.2243%" y="1157" width="0.0136%" height="15" fill="rgb(234,181,43)" fg:x="225436" fg:w="33"/><text x="93.4743%" y="1167.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (33 samples, 0.01%)</title><rect x="93.2243%" y="1141" width="0.0136%" height="15" fill="rgb(239,148,6)" fg:x="225436" fg:w="33"/><text x="93.4743%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (33 samples, 0.01%)</title><rect x="93.2243%" y="1125" width="0.0136%" height="15" fill="rgb(206,151,17)" fg:x="225436" fg:w="33"/><text x="93.4743%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (33 samples, 0.01%)</title><rect x="93.2243%" y="1109" width="0.0136%" height="15" fill="rgb(213,215,10)" fg:x="225436" fg:w="33"/><text x="93.4743%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (33 samples, 0.01%)</title><rect x="93.2243%" y="1093" width="0.0136%" height="15" fill="rgb(215,220,44)" fg:x="225436" fg:w="33"/><text x="93.4743%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1,958 samples, 0.81%)</title><rect x="92.4295%" y="2181" width="0.8097%" height="15" fill="rgb(245,205,37)" fg:x="223514" fg:w="1958"/><text x="92.6795%" y="2191.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (25 samples, 0.01%)</title><rect x="93.2524%" y="1093" width="0.0103%" height="15" fill="rgb(245,130,43)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (25 samples, 0.01%)</title><rect x="93.2524%" y="1077" width="0.0103%" height="15" fill="rgb(231,227,38)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (25 samples, 0.01%)</title><rect x="93.2524%" y="1061" width="0.0103%" height="15" fill="rgb(233,185,4)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="1071.50"></text></g><g><title>rayon_core::job::JobRef::execute (25 samples, 0.01%)</title><rect x="93.2524%" y="1045" width="0.0103%" height="15" fill="rgb(224,154,43)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="1055.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (25 samples, 0.01%)</title><rect x="93.2524%" y="1029" width="0.0103%" height="15" fill="rgb(235,156,15)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="1039.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (25 samples, 0.01%)</title><rect x="93.2524%" y="1013" width="0.0103%" height="15" fill="rgb(211,55,43)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="1023.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.01%)</title><rect x="93.2524%" y="997" width="0.0103%" height="15" fill="rgb(247,149,40)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.01%)</title><rect x="93.2524%" y="981" width="0.0103%" height="15" fill="rgb(232,171,16)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="991.50"></text></g><g><title>std::panicking::try (25 samples, 0.01%)</title><rect x="93.2524%" y="965" width="0.0103%" height="15" fill="rgb(215,117,49)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="975.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.01%)</title><rect x="93.2524%" y="949" width="0.0103%" height="15" fill="rgb(246,194,11)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="959.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.01%)</title><rect x="93.2524%" y="933" width="0.0103%" height="15" fill="rgb(242,101,44)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="943.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (25 samples, 0.01%)</title><rect x="93.2524%" y="917" width="0.0103%" height="15" fill="rgb(226,174,6)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (25 samples, 0.01%)</title><rect x="93.2524%" y="901" width="0.0103%" height="15" fill="rgb(213,150,20)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.01%)</title><rect x="93.2524%" y="885" width="0.0103%" height="15" fill="rgb(222,124,42)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.01%)</title><rect x="93.2524%" y="869" width="0.0103%" height="15" fill="rgb(250,19,47)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="879.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.01%)</title><rect x="93.2524%" y="853" width="0.0103%" height="15" fill="rgb(241,217,19)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="863.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.01%)</title><rect x="93.2524%" y="837" width="0.0103%" height="15" fill="rgb(207,210,34)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="847.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.01%)</title><rect x="93.2524%" y="821" width="0.0103%" height="15" fill="rgb(244,45,4)" fg:x="225504" fg:w="25"/><text x="93.5024%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (66 samples, 0.03%)</title><rect x="93.2396%" y="2053" width="0.0273%" height="15" fill="rgb(252,134,50)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="2063.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (66 samples, 0.03%)</title><rect x="93.2396%" y="2037" width="0.0273%" height="15" fill="rgb(238,74,2)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="2047.50"></text></g><g><title>rayon_core::join::join_context (66 samples, 0.03%)</title><rect x="93.2396%" y="2021" width="0.0273%" height="15" fill="rgb(226,58,46)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="2031.50"></text></g><g><title>rayon_core::registry::in_worker (66 samples, 0.03%)</title><rect x="93.2396%" y="2005" width="0.0273%" height="15" fill="rgb(232,83,35)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="2015.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (66 samples, 0.03%)</title><rect x="93.2396%" y="1989" width="0.0273%" height="15" fill="rgb(212,148,47)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1999.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (66 samples, 0.03%)</title><rect x="93.2396%" y="1973" width="0.0273%" height="15" fill="rgb(235,29,1)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1983.50"></text></g><g><title>std::panic::catch_unwind (66 samples, 0.03%)</title><rect x="93.2396%" y="1957" width="0.0273%" height="15" fill="rgb(247,55,37)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1967.50"></text></g><g><title>std::panicking::try (66 samples, 0.03%)</title><rect x="93.2396%" y="1941" width="0.0273%" height="15" fill="rgb(222,48,3)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1951.50"></text></g><g><title>std::panicking::try::do_call (66 samples, 0.03%)</title><rect x="93.2396%" y="1925" width="0.0273%" height="15" fill="rgb(234,21,33)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1935.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (66 samples, 0.03%)</title><rect x="93.2396%" y="1909" width="0.0273%" height="15" fill="rgb(247,178,53)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (66 samples, 0.03%)</title><rect x="93.2396%" y="1893" width="0.0273%" height="15" fill="rgb(225,75,7)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (66 samples, 0.03%)</title><rect x="93.2396%" y="1877" width="0.0273%" height="15" fill="rgb(219,199,7)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (66 samples, 0.03%)</title><rect x="93.2396%" y="1861" width="0.0273%" height="15" fill="rgb(209,93,42)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1871.50"></text></g><g><title>rayon_core::join::join_context (66 samples, 0.03%)</title><rect x="93.2396%" y="1845" width="0.0273%" height="15" fill="rgb(240,175,17)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1855.50"></text></g><g><title>rayon_core::registry::in_worker (66 samples, 0.03%)</title><rect x="93.2396%" y="1829" width="0.0273%" height="15" fill="rgb(232,106,7)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (66 samples, 0.03%)</title><rect x="93.2396%" y="1813" width="0.0273%" height="15" fill="rgb(242,106,43)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1823.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (66 samples, 0.03%)</title><rect x="93.2396%" y="1797" width="0.0273%" height="15" fill="rgb(242,61,37)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (66 samples, 0.03%)</title><rect x="93.2396%" y="1781" width="0.0273%" height="15" fill="rgb(205,72,10)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1791.50"></text></g><g><title>std::panicking::try (66 samples, 0.03%)</title><rect x="93.2396%" y="1765" width="0.0273%" height="15" fill="rgb(214,184,36)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (66 samples, 0.03%)</title><rect x="93.2396%" y="1749" width="0.0273%" height="15" fill="rgb(206,107,18)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1759.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (66 samples, 0.03%)</title><rect x="93.2396%" y="1733" width="0.0273%" height="15" fill="rgb(210,75,5)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (66 samples, 0.03%)</title><rect x="93.2396%" y="1717" width="0.0273%" height="15" fill="rgb(205,3,19)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1727.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (66 samples, 0.03%)</title><rect x="93.2396%" y="1701" width="0.0273%" height="15" fill="rgb(207,181,42)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1711.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (66 samples, 0.03%)</title><rect x="93.2396%" y="1685" width="0.0273%" height="15" fill="rgb(229,179,43)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1695.50"></text></g><g><title>rayon_core::join::join_context (66 samples, 0.03%)</title><rect x="93.2396%" y="1669" width="0.0273%" height="15" fill="rgb(246,95,30)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1679.50"></text></g><g><title>rayon_core::registry::in_worker (66 samples, 0.03%)</title><rect x="93.2396%" y="1653" width="0.0273%" height="15" fill="rgb(234,144,45)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1663.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (66 samples, 0.03%)</title><rect x="93.2396%" y="1637" width="0.0273%" height="15" fill="rgb(250,54,25)" fg:x="225473" fg:w="66"/><text x="93.4896%" y="1647.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (62 samples, 0.03%)</title><rect x="93.2413%" y="1621" width="0.0256%" height="15" fill="rgb(215,195,40)" fg:x="225477" fg:w="62"/><text x="93.4913%" y="1631.50"></text></g><g><title>std::panic::catch_unwind (62 samples, 0.03%)</title><rect x="93.2413%" y="1605" width="0.0256%" height="15" fill="rgb(233,188,42)" fg:x="225477" fg:w="62"/><text x="93.4913%" y="1615.50"></text></g><g><title>std::panicking::try (62 samples, 0.03%)</title><rect x="93.2413%" y="1589" width="0.0256%" height="15" fill="rgb(247,227,35)" fg:x="225477" fg:w="62"/><text x="93.4913%" y="1599.50"></text></g><g><title>std::panicking::try::do_call (62 samples, 0.03%)</title><rect x="93.2413%" y="1573" width="0.0256%" height="15" fill="rgb(249,124,27)" fg:x="225477" fg:w="62"/><text x="93.4913%" y="1583.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (62 samples, 0.03%)</title><rect x="93.2413%" y="1557" width="0.0256%" height="15" fill="rgb(219,207,25)" fg:x="225477" fg:w="62"/><text x="93.4913%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (62 samples, 0.03%)</title><rect x="93.2413%" y="1541" width="0.0256%" height="15" fill="rgb(241,216,47)" fg:x="225477" fg:w="62"/><text x="93.4913%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (62 samples, 0.03%)</title><rect x="93.2413%" y="1525" width="0.0256%" height="15" fill="rgb(233,82,50)" fg:x="225477" fg:w="62"/><text x="93.4913%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (62 samples, 0.03%)</title><rect x="93.2413%" y="1509" width="0.0256%" height="15" fill="rgb(232,63,2)" fg:x="225477" fg:w="62"/><text x="93.4913%" y="1519.50"></text></g><g><title>rayon_core::join::join_context (62 samples, 0.03%)</title><rect x="93.2413%" y="1493" width="0.0256%" height="15" fill="rgb(236,184,28)" fg:x="225477" fg:w="62"/><text x="93.4913%" y="1503.50"></text></g><g><title>rayon_core::registry::in_worker (62 samples, 0.03%)</title><rect x="93.2413%" y="1477" width="0.0256%" height="15" fill="rgb(254,63,27)" fg:x="225477" fg:w="62"/><text x="93.4913%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (62 samples, 0.03%)</title><rect x="93.2413%" y="1461" width="0.0256%" height="15" fill="rgb(253,106,28)" fg:x="225477" fg:w="62"/><text x="93.4913%" y="1471.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (53 samples, 0.02%)</title><rect x="93.2450%" y="1445" width="0.0219%" height="15" fill="rgb(225,141,39)" fg:x="225486" fg:w="53"/><text x="93.4950%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (53 samples, 0.02%)</title><rect x="93.2450%" y="1429" width="0.0219%" height="15" fill="rgb(222,157,20)" fg:x="225486" fg:w="53"/><text x="93.4950%" y="1439.50"></text></g><g><title>std::panicking::try (53 samples, 0.02%)</title><rect x="93.2450%" y="1413" width="0.0219%" height="15" fill="rgb(210,190,9)" fg:x="225486" fg:w="53"/><text x="93.4950%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (53 samples, 0.02%)</title><rect x="93.2450%" y="1397" width="0.0219%" height="15" fill="rgb(242,167,7)" fg:x="225486" fg:w="53"/><text x="93.4950%" y="1407.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (53 samples, 0.02%)</title><rect x="93.2450%" y="1381" width="0.0219%" height="15" fill="rgb(227,82,41)" fg:x="225486" fg:w="53"/><text x="93.4950%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (53 samples, 0.02%)</title><rect x="93.2450%" y="1365" width="0.0219%" height="15" fill="rgb(222,131,13)" fg:x="225486" fg:w="53"/><text x="93.4950%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (53 samples, 0.02%)</title><rect x="93.2450%" y="1349" width="0.0219%" height="15" fill="rgb(221,98,26)" fg:x="225486" fg:w="53"/><text x="93.4950%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (53 samples, 0.02%)</title><rect x="93.2450%" y="1333" width="0.0219%" height="15" fill="rgb(251,63,52)" fg:x="225486" fg:w="53"/><text x="93.4950%" y="1343.50"></text></g><g><title>rayon_core::join::join_context (53 samples, 0.02%)</title><rect x="93.2450%" y="1317" width="0.0219%" height="15" fill="rgb(246,25,43)" fg:x="225486" fg:w="53"/><text x="93.4950%" y="1327.50"></text></g><g><title>rayon_core::registry::in_worker (53 samples, 0.02%)</title><rect x="93.2450%" y="1301" width="0.0219%" height="15" fill="rgb(247,167,15)" fg:x="225486" fg:w="53"/><text x="93.4950%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (53 samples, 0.02%)</title><rect x="93.2450%" y="1285" width="0.0219%" height="15" fill="rgb(240,104,42)" fg:x="225486" fg:w="53"/><text x="93.4950%" y="1295.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (39 samples, 0.02%)</title><rect x="93.2508%" y="1269" width="0.0161%" height="15" fill="rgb(224,54,6)" fg:x="225500" fg:w="39"/><text x="93.5008%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (39 samples, 0.02%)</title><rect x="93.2508%" y="1253" width="0.0161%" height="15" fill="rgb(244,108,35)" fg:x="225500" fg:w="39"/><text x="93.5008%" y="1263.50"></text></g><g><title>std::panicking::try (39 samples, 0.02%)</title><rect x="93.2508%" y="1237" width="0.0161%" height="15" fill="rgb(216,154,2)" fg:x="225500" fg:w="39"/><text x="93.5008%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (39 samples, 0.02%)</title><rect x="93.2508%" y="1221" width="0.0161%" height="15" fill="rgb(222,8,47)" fg:x="225500" fg:w="39"/><text x="93.5008%" y="1231.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (39 samples, 0.02%)</title><rect x="93.2508%" y="1205" width="0.0161%" height="15" fill="rgb(252,93,1)" fg:x="225500" fg:w="39"/><text x="93.5008%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (39 samples, 0.02%)</title><rect x="93.2508%" y="1189" width="0.0161%" height="15" fill="rgb(223,226,51)" fg:x="225500" fg:w="39"/><text x="93.5008%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (39 samples, 0.02%)</title><rect x="93.2508%" y="1173" width="0.0161%" height="15" fill="rgb(206,147,9)" fg:x="225500" fg:w="39"/><text x="93.5008%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.02%)</title><rect x="93.2508%" y="1157" width="0.0161%" height="15" fill="rgb(248,180,41)" fg:x="225500" fg:w="39"/><text x="93.5008%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (39 samples, 0.02%)</title><rect x="93.2508%" y="1141" width="0.0161%" height="15" fill="rgb(209,47,50)" fg:x="225500" fg:w="39"/><text x="93.5008%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (39 samples, 0.02%)</title><rect x="93.2508%" y="1125" width="0.0161%" height="15" fill="rgb(243,65,31)" fg:x="225500" fg:w="39"/><text x="93.5008%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (39 samples, 0.02%)</title><rect x="93.2508%" y="1109" width="0.0161%" height="15" fill="rgb(228,128,1)" fg:x="225500" fg:w="39"/><text x="93.5008%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (2,026 samples, 0.84%)</title><rect x="92.4295%" y="2341" width="0.8378%" height="15" fill="rgb(231,192,16)" fg:x="223514" fg:w="2026"/><text x="92.6795%" y="2351.50"></text></g><g><title>rayon_core::job::JobRef::execute (2,026 samples, 0.84%)</title><rect x="92.4295%" y="2325" width="0.8378%" height="15" fill="rgb(224,26,40)" fg:x="223514" fg:w="2026"/><text x="92.6795%" y="2335.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,026 samples, 0.84%)</title><rect x="92.4295%" y="2309" width="0.8378%" height="15" fill="rgb(214,192,17)" fg:x="223514" fg:w="2026"/><text x="92.6795%" y="2319.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (2,026 samples, 0.84%)</title><rect x="92.4295%" y="2293" width="0.8378%" height="15" fill="rgb(225,147,18)" fg:x="223514" fg:w="2026"/><text x="92.6795%" y="2303.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2,026 samples, 0.84%)</title><rect x="92.4295%" y="2277" width="0.8378%" height="15" fill="rgb(205,35,11)" fg:x="223514" fg:w="2026"/><text x="92.6795%" y="2287.50"></text></g><g><title>std::panic::catch_unwind (2,026 samples, 0.84%)</title><rect x="92.4295%" y="2261" width="0.8378%" height="15" fill="rgb(242,40,42)" fg:x="223514" fg:w="2026"/><text x="92.6795%" y="2271.50"></text></g><g><title>std::panicking::try (2,026 samples, 0.84%)</title><rect x="92.4295%" y="2245" width="0.8378%" height="15" fill="rgb(250,170,13)" fg:x="223514" fg:w="2026"/><text x="92.6795%" y="2255.50"></text></g><g><title>std::panicking::try::do_call (2,026 samples, 0.84%)</title><rect x="92.4295%" y="2229" width="0.8378%" height="15" fill="rgb(240,161,28)" fg:x="223514" fg:w="2026"/><text x="92.6795%" y="2239.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,026 samples, 0.84%)</title><rect x="92.4295%" y="2213" width="0.8378%" height="15" fill="rgb(245,179,12)" fg:x="223514" fg:w="2026"/><text x="92.6795%" y="2223.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (2,026 samples, 0.84%)</title><rect x="92.4295%" y="2197" width="0.8378%" height="15" fill="rgb(250,92,32)" fg:x="223514" fg:w="2026"/><text x="92.6795%" y="2207.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (68 samples, 0.03%)</title><rect x="93.2392%" y="2181" width="0.0281%" height="15" fill="rgb(233,10,40)" fg:x="225472" fg:w="68"/><text x="93.4892%" y="2191.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (68 samples, 0.03%)</title><rect x="93.2392%" y="2165" width="0.0281%" height="15" fill="rgb(217,98,1)" fg:x="225472" fg:w="68"/><text x="93.4892%" y="2175.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (67 samples, 0.03%)</title><rect x="93.2396%" y="2149" width="0.0277%" height="15" fill="rgb(238,202,7)" fg:x="225473" fg:w="67"/><text x="93.4896%" y="2159.50"></text></g><g><title>std::panic::catch_unwind (67 samples, 0.03%)</title><rect x="93.2396%" y="2133" width="0.0277%" height="15" fill="rgb(222,91,3)" fg:x="225473" fg:w="67"/><text x="93.4896%" y="2143.50"></text></g><g><title>std::panicking::try (67 samples, 0.03%)</title><rect x="93.2396%" y="2117" width="0.0277%" height="15" fill="rgb(211,170,49)" fg:x="225473" fg:w="67"/><text x="93.4896%" y="2127.50"></text></g><g><title>std::panicking::try::do_call (67 samples, 0.03%)</title><rect x="93.2396%" y="2101" width="0.0277%" height="15" fill="rgb(253,139,18)" fg:x="225473" fg:w="67"/><text x="93.4896%" y="2111.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (67 samples, 0.03%)</title><rect x="93.2396%" y="2085" width="0.0277%" height="15" fill="rgb(222,4,43)" fg:x="225473" fg:w="67"/><text x="93.4896%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (67 samples, 0.03%)</title><rect x="93.2396%" y="2069" width="0.0277%" height="15" fill="rgb(207,205,12)" fg:x="225473" fg:w="67"/><text x="93.4896%" y="2079.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (2,055 samples, 0.85%)</title><rect x="92.4208%" y="2421" width="0.8498%" height="15" fill="rgb(216,159,46)" fg:x="223493" fg:w="2055"/><text x="92.6708%" y="2431.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (2,055 samples, 0.85%)</title><rect x="92.4208%" y="2405" width="0.8498%" height="15" fill="rgb(236,115,1)" fg:x="223493" fg:w="2055"/><text x="92.6708%" y="2415.50"></text></g><g><title>rayon_core::registry::main_loop (2,055 samples, 0.85%)</title><rect x="92.4208%" y="2389" width="0.8498%" height="15" fill="rgb(251,35,33)" fg:x="223493" fg:w="2055"/><text x="92.6708%" y="2399.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2,055 samples, 0.85%)</title><rect x="92.4208%" y="2373" width="0.8498%" height="15" fill="rgb(248,62,51)" fg:x="223493" fg:w="2055"/><text x="92.6708%" y="2383.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2,055 samples, 0.85%)</title><rect x="92.4208%" y="2357" width="0.8498%" height="15" fill="rgb(254,180,19)" fg:x="223493" fg:w="2055"/><text x="92.6708%" y="2367.50"></text></g><g><title>__GI___clone3 (2,094 samples, 0.87%)</title><rect x="92.4204%" y="2629" width="0.8659%" height="15" fill="rgb(217,100,32)" fg:x="223492" fg:w="2094"/><text x="92.6704%" y="2639.50"></text></g><g><title>start_thread (2,094 samples, 0.87%)</title><rect x="92.4204%" y="2613" width="0.8659%" height="15" fill="rgb(224,71,22)" fg:x="223492" fg:w="2094"/><text x="92.6704%" y="2623.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (2,093 samples, 0.87%)</title><rect x="92.4208%" y="2597" width="0.8655%" height="15" fill="rgb(251,185,33)" fg:x="223493" fg:w="2093"/><text x="92.6708%" y="2607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,093 samples, 0.87%)</title><rect x="92.4208%" y="2581" width="0.8655%" height="15" fill="rgb(209,75,48)" fg:x="223493" fg:w="2093"/><text x="92.6708%" y="2591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,093 samples, 0.87%)</title><rect x="92.4208%" y="2565" width="0.8655%" height="15" fill="rgb(253,190,16)" fg:x="223493" fg:w="2093"/><text x="92.6708%" y="2575.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,093 samples, 0.87%)</title><rect x="92.4208%" y="2549" width="0.8655%" height="15" fill="rgb(226,140,1)" fg:x="223493" fg:w="2093"/><text x="92.6708%" y="2559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2,093 samples, 0.87%)</title><rect x="92.4208%" y="2533" width="0.8655%" height="15" fill="rgb(206,75,30)" fg:x="223493" fg:w="2093"/><text x="92.6708%" y="2543.50"></text></g><g><title>std::panic::catch_unwind (2,093 samples, 0.87%)</title><rect x="92.4208%" y="2517" width="0.8655%" height="15" fill="rgb(231,208,37)" fg:x="223493" fg:w="2093"/><text x="92.6708%" y="2527.50"></text></g><g><title>std::panicking::try (2,093 samples, 0.87%)</title><rect x="92.4208%" y="2501" width="0.8655%" height="15" fill="rgb(238,136,40)" fg:x="223493" fg:w="2093"/><text x="92.6708%" y="2511.50"></text></g><g><title>std::panicking::try::do_call (2,093 samples, 0.87%)</title><rect x="92.4208%" y="2485" width="0.8655%" height="15" fill="rgb(247,137,17)" fg:x="223493" fg:w="2093"/><text x="92.6708%" y="2495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,093 samples, 0.87%)</title><rect x="92.4208%" y="2469" width="0.8655%" height="15" fill="rgb(240,60,40)" fg:x="223493" fg:w="2093"/><text x="92.6708%" y="2479.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2,093 samples, 0.87%)</title><rect x="92.4208%" y="2453" width="0.8655%" height="15" fill="rgb(236,68,50)" fg:x="223493" fg:w="2093"/><text x="92.6708%" y="2463.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,093 samples, 0.87%)</title><rect x="92.4208%" y="2437" width="0.8655%" height="15" fill="rgb(230,42,12)" fg:x="223493" fg:w="2093"/><text x="92.6708%" y="2447.50"></text></g><g><title>aptos_logger::aptos_logger::AptosDataBuilder::build_logger::{{closure}} (37 samples, 0.02%)</title><rect x="93.2711%" y="2421" width="0.0153%" height="15" fill="rgb(219,16,16)" fg:x="225549" fg:w="37"/><text x="93.5211%" y="2431.50"></text></g><g><title>aptos_logger::aptos_logger::LoggerService::run (37 samples, 0.02%)</title><rect x="93.2711%" y="2405" width="0.0153%" height="15" fill="rgb(220,38,35)" fg:x="225549" fg:w="37"/><text x="93.5211%" y="2415.50"></text></g><g><title>aptos (2,097 samples, 0.87%)</title><rect x="92.4204%" y="2645" width="0.8672%" height="15" fill="rgb(228,33,1)" fg:x="223492" fg:w="2097"/><text x="92.6704%" y="2655.50"></text></g><g><title>par_exec_0 (25 samples, 0.01%)</title><rect x="93.3033%" y="2645" width="0.0103%" height="15" fill="rgb(241,46,31)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2655.50"></text></g><g><title>__GI___clone3 (25 samples, 0.01%)</title><rect x="93.3033%" y="2629" width="0.0103%" height="15" fill="rgb(232,58,20)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2639.50"></text></g><g><title>start_thread (25 samples, 0.01%)</title><rect x="93.3033%" y="2613" width="0.0103%" height="15" fill="rgb(206,228,53)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2623.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (25 samples, 0.01%)</title><rect x="93.3033%" y="2597" width="0.0103%" height="15" fill="rgb(206,88,33)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 0.01%)</title><rect x="93.3033%" y="2581" width="0.0103%" height="15" fill="rgb(238,69,7)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 0.01%)</title><rect x="93.3033%" y="2565" width="0.0103%" height="15" fill="rgb(250,21,46)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2575.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (25 samples, 0.01%)</title><rect x="93.3033%" y="2549" width="0.0103%" height="15" fill="rgb(215,212,21)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (25 samples, 0.01%)</title><rect x="93.3033%" y="2533" width="0.0103%" height="15" fill="rgb(211,35,12)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2543.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.01%)</title><rect x="93.3033%" y="2517" width="0.0103%" height="15" fill="rgb(231,184,16)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2527.50"></text></g><g><title>std::panicking::try (25 samples, 0.01%)</title><rect x="93.3033%" y="2501" width="0.0103%" height="15" fill="rgb(242,140,15)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2511.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.01%)</title><rect x="93.3033%" y="2485" width="0.0103%" height="15" fill="rgb(220,37,14)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.01%)</title><rect x="93.3033%" y="2469" width="0.0103%" height="15" fill="rgb(223,146,22)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2479.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (25 samples, 0.01%)</title><rect x="93.3033%" y="2453" width="0.0103%" height="15" fill="rgb(216,132,15)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2463.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (25 samples, 0.01%)</title><rect x="93.3033%" y="2437" width="0.0103%" height="15" fill="rgb(248,83,5)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2447.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (25 samples, 0.01%)</title><rect x="93.3033%" y="2421" width="0.0103%" height="15" fill="rgb(231,206,48)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2431.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (25 samples, 0.01%)</title><rect x="93.3033%" y="2405" width="0.0103%" height="15" fill="rgb(253,185,37)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2415.50"></text></g><g><title>rayon_core::registry::main_loop (25 samples, 0.01%)</title><rect x="93.3033%" y="2389" width="0.0103%" height="15" fill="rgb(208,21,44)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2399.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (25 samples, 0.01%)</title><rect x="93.3033%" y="2373" width="0.0103%" height="15" fill="rgb(236,125,4)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2383.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (25 samples, 0.01%)</title><rect x="93.3033%" y="2357" width="0.0103%" height="15" fill="rgb(226,134,25)" fg:x="225627" fg:w="25"/><text x="93.5533%" y="2367.50"></text></g><g><title>par_exec_10 (26 samples, 0.01%)</title><rect x="93.3136%" y="2645" width="0.0108%" height="15" fill="rgb(250,201,12)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2655.50"></text></g><g><title>__GI___clone3 (26 samples, 0.01%)</title><rect x="93.3136%" y="2629" width="0.0108%" height="15" fill="rgb(225,92,18)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2639.50"></text></g><g><title>start_thread (26 samples, 0.01%)</title><rect x="93.3136%" y="2613" width="0.0108%" height="15" fill="rgb(227,35,22)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2623.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (26 samples, 0.01%)</title><rect x="93.3136%" y="2597" width="0.0108%" height="15" fill="rgb(214,180,52)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.3136%" y="2581" width="0.0108%" height="15" fill="rgb(233,55,38)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.3136%" y="2565" width="0.0108%" height="15" fill="rgb(249,171,43)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2575.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (26 samples, 0.01%)</title><rect x="93.3136%" y="2549" width="0.0108%" height="15" fill="rgb(239,87,2)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (26 samples, 0.01%)</title><rect x="93.3136%" y="2533" width="0.0108%" height="15" fill="rgb(248,141,5)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2543.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.01%)</title><rect x="93.3136%" y="2517" width="0.0108%" height="15" fill="rgb(238,33,42)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2527.50"></text></g><g><title>std::panicking::try (26 samples, 0.01%)</title><rect x="93.3136%" y="2501" width="0.0108%" height="15" fill="rgb(231,57,19)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2511.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.01%)</title><rect x="93.3136%" y="2485" width="0.0108%" height="15" fill="rgb(214,78,53)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.3136%" y="2469" width="0.0108%" height="15" fill="rgb(206,132,29)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2479.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (26 samples, 0.01%)</title><rect x="93.3136%" y="2453" width="0.0108%" height="15" fill="rgb(248,174,31)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2463.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26 samples, 0.01%)</title><rect x="93.3136%" y="2437" width="0.0108%" height="15" fill="rgb(221,87,13)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2447.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (26 samples, 0.01%)</title><rect x="93.3136%" y="2421" width="0.0108%" height="15" fill="rgb(223,197,17)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2431.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (26 samples, 0.01%)</title><rect x="93.3136%" y="2405" width="0.0108%" height="15" fill="rgb(220,144,50)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2415.50"></text></g><g><title>rayon_core::registry::main_loop (26 samples, 0.01%)</title><rect x="93.3136%" y="2389" width="0.0108%" height="15" fill="rgb(244,201,11)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2399.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (26 samples, 0.01%)</title><rect x="93.3136%" y="2373" width="0.0108%" height="15" fill="rgb(249,81,34)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2383.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (26 samples, 0.01%)</title><rect x="93.3136%" y="2357" width="0.0108%" height="15" fill="rgb(205,161,12)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2367.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (26 samples, 0.01%)</title><rect x="93.3136%" y="2341" width="0.0108%" height="15" fill="rgb(252,139,50)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2351.50"></text></g><g><title>rayon_core::job::JobRef::execute (26 samples, 0.01%)</title><rect x="93.3136%" y="2325" width="0.0108%" height="15" fill="rgb(205,169,14)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2335.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (26 samples, 0.01%)</title><rect x="93.3136%" y="2309" width="0.0108%" height="15" fill="rgb(248,198,33)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2319.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (26 samples, 0.01%)</title><rect x="93.3136%" y="2293" width="0.0108%" height="15" fill="rgb(236,23,21)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2303.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.01%)</title><rect x="93.3136%" y="2277" width="0.0108%" height="15" fill="rgb(231,13,38)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2287.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.01%)</title><rect x="93.3136%" y="2261" width="0.0108%" height="15" fill="rgb(239,139,21)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2271.50"></text></g><g><title>std::panicking::try (26 samples, 0.01%)</title><rect x="93.3136%" y="2245" width="0.0108%" height="15" fill="rgb(222,164,45)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2255.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.01%)</title><rect x="93.3136%" y="2229" width="0.0108%" height="15" fill="rgb(230,52,27)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2239.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.3136%" y="2213" width="0.0108%" height="15" fill="rgb(227,143,42)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2223.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (26 samples, 0.01%)</title><rect x="93.3136%" y="2197" width="0.0108%" height="15" fill="rgb(249,127,1)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2207.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (26 samples, 0.01%)</title><rect x="93.3136%" y="2181" width="0.0108%" height="15" fill="rgb(243,107,26)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.01%)</title><rect x="93.3136%" y="2165" width="0.0108%" height="15" fill="rgb(225,7,45)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.01%)</title><rect x="93.3136%" y="2149" width="0.0108%" height="15" fill="rgb(241,88,38)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2159.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.01%)</title><rect x="93.3136%" y="2133" width="0.0108%" height="15" fill="rgb(226,121,9)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2143.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.01%)</title><rect x="93.3136%" y="2117" width="0.0108%" height="15" fill="rgb(253,60,29)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.01%)</title><rect x="93.3136%" y="2101" width="0.0108%" height="15" fill="rgb(244,181,39)" fg:x="225652" fg:w="26"/><text x="93.5636%" y="2111.50"></text></g><g><title>par_exec_14 (26 samples, 0.01%)</title><rect x="93.3476%" y="2645" width="0.0108%" height="15" fill="rgb(252,203,31)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2655.50"></text></g><g><title>__GI___clone3 (26 samples, 0.01%)</title><rect x="93.3476%" y="2629" width="0.0108%" height="15" fill="rgb(224,120,8)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2639.50"></text></g><g><title>start_thread (26 samples, 0.01%)</title><rect x="93.3476%" y="2613" width="0.0108%" height="15" fill="rgb(205,171,54)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2623.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (26 samples, 0.01%)</title><rect x="93.3476%" y="2597" width="0.0108%" height="15" fill="rgb(235,89,11)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.3476%" y="2581" width="0.0108%" height="15" fill="rgb(212,180,28)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.3476%" y="2565" width="0.0108%" height="15" fill="rgb(247,84,49)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2575.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (26 samples, 0.01%)</title><rect x="93.3476%" y="2549" width="0.0108%" height="15" fill="rgb(236,187,52)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (26 samples, 0.01%)</title><rect x="93.3476%" y="2533" width="0.0108%" height="15" fill="rgb(227,24,15)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2543.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.01%)</title><rect x="93.3476%" y="2517" width="0.0108%" height="15" fill="rgb(227,211,13)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2527.50"></text></g><g><title>std::panicking::try (26 samples, 0.01%)</title><rect x="93.3476%" y="2501" width="0.0108%" height="15" fill="rgb(245,52,14)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2511.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.01%)</title><rect x="93.3476%" y="2485" width="0.0108%" height="15" fill="rgb(225,185,13)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.3476%" y="2469" width="0.0108%" height="15" fill="rgb(217,160,29)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2479.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (26 samples, 0.01%)</title><rect x="93.3476%" y="2453" width="0.0108%" height="15" fill="rgb(216,115,53)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2463.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26 samples, 0.01%)</title><rect x="93.3476%" y="2437" width="0.0108%" height="15" fill="rgb(236,99,5)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2447.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (26 samples, 0.01%)</title><rect x="93.3476%" y="2421" width="0.0108%" height="15" fill="rgb(222,60,38)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2431.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (26 samples, 0.01%)</title><rect x="93.3476%" y="2405" width="0.0108%" height="15" fill="rgb(212,82,22)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2415.50"></text></g><g><title>rayon_core::registry::main_loop (26 samples, 0.01%)</title><rect x="93.3476%" y="2389" width="0.0108%" height="15" fill="rgb(214,48,28)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2399.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (26 samples, 0.01%)</title><rect x="93.3476%" y="2373" width="0.0108%" height="15" fill="rgb(245,196,50)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2383.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (26 samples, 0.01%)</title><rect x="93.3476%" y="2357" width="0.0108%" height="15" fill="rgb(225,159,46)" fg:x="225734" fg:w="26"/><text x="93.5976%" y="2367.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (25 samples, 0.01%)</title><rect x="93.3480%" y="2341" width="0.0103%" height="15" fill="rgb(207,195,48)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2351.50"></text></g><g><title>rayon_core::job::JobRef::execute (25 samples, 0.01%)</title><rect x="93.3480%" y="2325" width="0.0103%" height="15" fill="rgb(240,73,3)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2335.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (25 samples, 0.01%)</title><rect x="93.3480%" y="2309" width="0.0103%" height="15" fill="rgb(245,57,23)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2319.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (25 samples, 0.01%)</title><rect x="93.3480%" y="2293" width="0.0103%" height="15" fill="rgb(240,75,18)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2303.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.01%)</title><rect x="93.3480%" y="2277" width="0.0103%" height="15" fill="rgb(238,168,12)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2287.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.01%)</title><rect x="93.3480%" y="2261" width="0.0103%" height="15" fill="rgb(226,20,40)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2271.50"></text></g><g><title>std::panicking::try (25 samples, 0.01%)</title><rect x="93.3480%" y="2245" width="0.0103%" height="15" fill="rgb(224,130,35)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2255.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.01%)</title><rect x="93.3480%" y="2229" width="0.0103%" height="15" fill="rgb(225,63,41)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2239.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.01%)</title><rect x="93.3480%" y="2213" width="0.0103%" height="15" fill="rgb(219,3,3)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2223.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (25 samples, 0.01%)</title><rect x="93.3480%" y="2197" width="0.0103%" height="15" fill="rgb(218,157,4)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2207.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (25 samples, 0.01%)</title><rect x="93.3480%" y="2181" width="0.0103%" height="15" fill="rgb(232,76,36)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.01%)</title><rect x="93.3480%" y="2165" width="0.0103%" height="15" fill="rgb(247,36,0)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.01%)</title><rect x="93.3480%" y="2149" width="0.0103%" height="15" fill="rgb(205,2,34)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2159.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.01%)</title><rect x="93.3480%" y="2133" width="0.0103%" height="15" fill="rgb(239,136,13)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2143.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.01%)</title><rect x="93.3480%" y="2117" width="0.0103%" height="15" fill="rgb(253,122,12)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.01%)</title><rect x="93.3480%" y="2101" width="0.0103%" height="15" fill="rgb(222,174,7)" fg:x="225735" fg:w="25"/><text x="93.5980%" y="2111.50"></text></g><g><title>par_exec_20 (27 samples, 0.01%)</title><rect x="93.4055%" y="2645" width="0.0112%" height="15" fill="rgb(208,191,42)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2655.50"></text></g><g><title>__GI___clone3 (27 samples, 0.01%)</title><rect x="93.4055%" y="2629" width="0.0112%" height="15" fill="rgb(237,212,15)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2639.50"></text></g><g><title>start_thread (27 samples, 0.01%)</title><rect x="93.4055%" y="2613" width="0.0112%" height="15" fill="rgb(215,65,20)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2623.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (27 samples, 0.01%)</title><rect x="93.4055%" y="2597" width="0.0112%" height="15" fill="rgb(232,103,11)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.01%)</title><rect x="93.4055%" y="2581" width="0.0112%" height="15" fill="rgb(235,148,18)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.01%)</title><rect x="93.4055%" y="2565" width="0.0112%" height="15" fill="rgb(240,173,7)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2575.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (27 samples, 0.01%)</title><rect x="93.4055%" y="2549" width="0.0112%" height="15" fill="rgb(228,182,25)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (27 samples, 0.01%)</title><rect x="93.4055%" y="2533" width="0.0112%" height="15" fill="rgb(247,3,52)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2543.50"></text></g><g><title>std::panic::catch_unwind (27 samples, 0.01%)</title><rect x="93.4055%" y="2517" width="0.0112%" height="15" fill="rgb(226,155,8)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2527.50"></text></g><g><title>std::panicking::try (27 samples, 0.01%)</title><rect x="93.4055%" y="2501" width="0.0112%" height="15" fill="rgb(243,195,38)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2511.50"></text></g><g><title>std::panicking::try::do_call (27 samples, 0.01%)</title><rect x="93.4055%" y="2485" width="0.0112%" height="15" fill="rgb(254,181,33)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.01%)</title><rect x="93.4055%" y="2469" width="0.0112%" height="15" fill="rgb(232,98,23)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2479.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (27 samples, 0.01%)</title><rect x="93.4055%" y="2453" width="0.0112%" height="15" fill="rgb(205,23,10)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2463.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (27 samples, 0.01%)</title><rect x="93.4055%" y="2437" width="0.0112%" height="15" fill="rgb(212,124,38)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2447.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (27 samples, 0.01%)</title><rect x="93.4055%" y="2421" width="0.0112%" height="15" fill="rgb(228,207,2)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2431.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (27 samples, 0.01%)</title><rect x="93.4055%" y="2405" width="0.0112%" height="15" fill="rgb(215,120,22)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2415.50"></text></g><g><title>rayon_core::registry::main_loop (27 samples, 0.01%)</title><rect x="93.4055%" y="2389" width="0.0112%" height="15" fill="rgb(251,172,33)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2399.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (27 samples, 0.01%)</title><rect x="93.4055%" y="2373" width="0.0112%" height="15" fill="rgb(250,83,2)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2383.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (27 samples, 0.01%)</title><rect x="93.4055%" y="2357" width="0.0112%" height="15" fill="rgb(210,132,53)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2367.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (27 samples, 0.01%)</title><rect x="93.4055%" y="2341" width="0.0112%" height="15" fill="rgb(221,208,36)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2351.50"></text></g><g><title>rayon_core::job::JobRef::execute (27 samples, 0.01%)</title><rect x="93.4055%" y="2325" width="0.0112%" height="15" fill="rgb(205,192,46)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2335.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (27 samples, 0.01%)</title><rect x="93.4055%" y="2309" width="0.0112%" height="15" fill="rgb(223,163,14)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2319.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (27 samples, 0.01%)</title><rect x="93.4055%" y="2293" width="0.0112%" height="15" fill="rgb(218,41,28)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2303.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (27 samples, 0.01%)</title><rect x="93.4055%" y="2277" width="0.0112%" height="15" fill="rgb(235,104,10)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2287.50"></text></g><g><title>std::panic::catch_unwind (27 samples, 0.01%)</title><rect x="93.4055%" y="2261" width="0.0112%" height="15" fill="rgb(246,17,4)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2271.50"></text></g><g><title>std::panicking::try (27 samples, 0.01%)</title><rect x="93.4055%" y="2245" width="0.0112%" height="15" fill="rgb(240,7,16)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2255.50"></text></g><g><title>std::panicking::try::do_call (27 samples, 0.01%)</title><rect x="93.4055%" y="2229" width="0.0112%" height="15" fill="rgb(213,160,23)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2239.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.01%)</title><rect x="93.4055%" y="2213" width="0.0112%" height="15" fill="rgb(251,179,49)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2223.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (27 samples, 0.01%)</title><rect x="93.4055%" y="2197" width="0.0112%" height="15" fill="rgb(247,198,10)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2207.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (27 samples, 0.01%)</title><rect x="93.4055%" y="2181" width="0.0112%" height="15" fill="rgb(220,65,29)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (27 samples, 0.01%)</title><rect x="93.4055%" y="2165" width="0.0112%" height="15" fill="rgb(237,171,28)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.01%)</title><rect x="93.4055%" y="2149" width="0.0112%" height="15" fill="rgb(228,44,26)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2159.50"></text></g><g><title>rayon_core::join::join_context (27 samples, 0.01%)</title><rect x="93.4055%" y="2133" width="0.0112%" height="15" fill="rgb(216,210,27)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2143.50"></text></g><g><title>rayon_core::registry::in_worker (27 samples, 0.01%)</title><rect x="93.4055%" y="2117" width="0.0112%" height="15" fill="rgb(252,10,17)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (27 samples, 0.01%)</title><rect x="93.4055%" y="2101" width="0.0112%" height="15" fill="rgb(214,172,30)" fg:x="225874" fg:w="27"/><text x="93.6555%" y="2111.50"></text></g><g><title>par_exec_2 (26 samples, 0.01%)</title><rect x="93.4398%" y="2645" width="0.0108%" height="15" fill="rgb(253,130,48)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2655.50"></text></g><g><title>__GI___clone3 (26 samples, 0.01%)</title><rect x="93.4398%" y="2629" width="0.0108%" height="15" fill="rgb(226,99,43)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2639.50"></text></g><g><title>start_thread (26 samples, 0.01%)</title><rect x="93.4398%" y="2613" width="0.0108%" height="15" fill="rgb(239,111,26)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2623.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (26 samples, 0.01%)</title><rect x="93.4398%" y="2597" width="0.0108%" height="15" fill="rgb(240,27,53)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.4398%" y="2581" width="0.0108%" height="15" fill="rgb(254,163,12)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.4398%" y="2565" width="0.0108%" height="15" fill="rgb(225,51,48)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2575.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (26 samples, 0.01%)</title><rect x="93.4398%" y="2549" width="0.0108%" height="15" fill="rgb(205,19,32)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (26 samples, 0.01%)</title><rect x="93.4398%" y="2533" width="0.0108%" height="15" fill="rgb(218,119,26)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2543.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.01%)</title><rect x="93.4398%" y="2517" width="0.0108%" height="15" fill="rgb(231,173,33)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2527.50"></text></g><g><title>std::panicking::try (26 samples, 0.01%)</title><rect x="93.4398%" y="2501" width="0.0108%" height="15" fill="rgb(241,100,29)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2511.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.01%)</title><rect x="93.4398%" y="2485" width="0.0108%" height="15" fill="rgb(250,194,34)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.4398%" y="2469" width="0.0108%" height="15" fill="rgb(215,23,50)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2479.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (26 samples, 0.01%)</title><rect x="93.4398%" y="2453" width="0.0108%" height="15" fill="rgb(206,49,37)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2463.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26 samples, 0.01%)</title><rect x="93.4398%" y="2437" width="0.0108%" height="15" fill="rgb(247,39,21)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2447.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (26 samples, 0.01%)</title><rect x="93.4398%" y="2421" width="0.0108%" height="15" fill="rgb(209,220,15)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2431.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (26 samples, 0.01%)</title><rect x="93.4398%" y="2405" width="0.0108%" height="15" fill="rgb(206,41,33)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2415.50"></text></g><g><title>rayon_core::registry::main_loop (26 samples, 0.01%)</title><rect x="93.4398%" y="2389" width="0.0108%" height="15" fill="rgb(221,225,45)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2399.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (26 samples, 0.01%)</title><rect x="93.4398%" y="2373" width="0.0108%" height="15" fill="rgb(216,27,18)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2383.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (26 samples, 0.01%)</title><rect x="93.4398%" y="2357" width="0.0108%" height="15" fill="rgb(250,193,34)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2367.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (26 samples, 0.01%)</title><rect x="93.4398%" y="2341" width="0.0108%" height="15" fill="rgb(227,215,20)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2351.50"></text></g><g><title>rayon_core::job::JobRef::execute (26 samples, 0.01%)</title><rect x="93.4398%" y="2325" width="0.0108%" height="15" fill="rgb(242,211,27)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2335.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (26 samples, 0.01%)</title><rect x="93.4398%" y="2309" width="0.0108%" height="15" fill="rgb(229,190,30)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2319.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (26 samples, 0.01%)</title><rect x="93.4398%" y="2293" width="0.0108%" height="15" fill="rgb(253,31,29)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2303.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.01%)</title><rect x="93.4398%" y="2277" width="0.0108%" height="15" fill="rgb(229,177,52)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2287.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.01%)</title><rect x="93.4398%" y="2261" width="0.0108%" height="15" fill="rgb(226,88,8)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2271.50"></text></g><g><title>std::panicking::try (26 samples, 0.01%)</title><rect x="93.4398%" y="2245" width="0.0108%" height="15" fill="rgb(214,55,27)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2255.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.01%)</title><rect x="93.4398%" y="2229" width="0.0108%" height="15" fill="rgb(233,202,5)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2239.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.4398%" y="2213" width="0.0108%" height="15" fill="rgb(251,49,30)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2223.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (26 samples, 0.01%)</title><rect x="93.4398%" y="2197" width="0.0108%" height="15" fill="rgb(235,18,52)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2207.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (26 samples, 0.01%)</title><rect x="93.4398%" y="2181" width="0.0108%" height="15" fill="rgb(250,111,51)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.01%)</title><rect x="93.4398%" y="2165" width="0.0108%" height="15" fill="rgb(218,13,25)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.01%)</title><rect x="93.4398%" y="2149" width="0.0108%" height="15" fill="rgb(248,96,7)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2159.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.01%)</title><rect x="93.4398%" y="2133" width="0.0108%" height="15" fill="rgb(217,31,15)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2143.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.01%)</title><rect x="93.4398%" y="2117" width="0.0108%" height="15" fill="rgb(228,59,49)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.01%)</title><rect x="93.4398%" y="2101" width="0.0108%" height="15" fill="rgb(210,152,38)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2111.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.01%)</title><rect x="93.4398%" y="2085" width="0.0108%" height="15" fill="rgb(206,71,11)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2095.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.01%)</title><rect x="93.4398%" y="2069" width="0.0108%" height="15" fill="rgb(244,199,5)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2079.50"></text></g><g><title>std::panicking::try (26 samples, 0.01%)</title><rect x="93.4398%" y="2053" width="0.0108%" height="15" fill="rgb(253,49,1)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2063.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.01%)</title><rect x="93.4398%" y="2037" width="0.0108%" height="15" fill="rgb(225,206,40)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2047.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="93.4398%" y="2021" width="0.0108%" height="15" fill="rgb(243,116,47)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2031.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (26 samples, 0.01%)</title><rect x="93.4398%" y="2005" width="0.0108%" height="15" fill="rgb(219,225,16)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="2015.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.01%)</title><rect x="93.4398%" y="1989" width="0.0108%" height="15" fill="rgb(233,29,47)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="1999.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.01%)</title><rect x="93.4398%" y="1973" width="0.0108%" height="15" fill="rgb(250,179,18)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="1983.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.01%)</title><rect x="93.4398%" y="1957" width="0.0108%" height="15" fill="rgb(215,176,6)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="1967.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.01%)</title><rect x="93.4398%" y="1941" width="0.0108%" height="15" fill="rgb(214,117,39)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.01%)</title><rect x="93.4398%" y="1925" width="0.0108%" height="15" fill="rgb(247,183,36)" fg:x="225957" fg:w="26"/><text x="93.6898%" y="1935.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbReader&gt;::get_state_proof_by_version_ext (27 samples, 0.01%)</title><rect x="93.5014%" y="2165" width="0.0112%" height="15" fill="rgb(237,200,3)" fg:x="226106" fg:w="27"/><text x="93.7514%" y="2175.50"></text></g><g><title>aptos_db::gauged_api (27 samples, 0.01%)</title><rect x="93.5014%" y="2149" width="0.0112%" height="15" fill="rgb(212,220,24)" fg:x="226106" fg:w="27"/><text x="93.7514%" y="2159.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbReader&gt;::get_state_proof_by_version_ext::{{closure}} (27 samples, 0.01%)</title><rect x="93.5014%" y="2133" width="0.0112%" height="15" fill="rgb(245,216,20)" fg:x="226106" fg:w="27"/><text x="93.7514%" y="2143.50"></text></g><g><title>&lt;aptos_db::state_store::StateStore as aptos_block_executor::state_view::DbReader&gt;::get_state_proof_by_version_ext (27 samples, 0.01%)</title><rect x="93.5014%" y="2117" width="0.0112%" height="15" fill="rgb(219,124,7)" fg:x="226106" fg:w="27"/><text x="93.7514%" y="2127.50"></text></g><g><title>&lt;aptos_db::state_store::StateDb as aptos_block_executor::state_view::DbReader&gt;::get_state_proof_by_version_ext (27 samples, 0.01%)</title><rect x="93.5014%" y="2101" width="0.0112%" height="15" fill="rgb(227,167,8)" fg:x="226106" fg:w="27"/><text x="93.7514%" y="2111.50"></text></g><g><title>aptos_db::state_merkle_db::StateMerkleDb::get_with_proof_ext (27 samples, 0.01%)</title><rect x="93.5014%" y="2085" width="0.0112%" height="15" fill="rgb(241,37,2)" fg:x="226106" fg:w="27"/><text x="93.7514%" y="2095.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (44 samples, 0.02%)</title><rect x="93.5014%" y="2341" width="0.0182%" height="15" fill="rgb(238,134,33)" fg:x="226106" fg:w="44"/><text x="93.7514%" y="2351.50"></text></g><g><title>rayon_core::job::JobRef::execute (44 samples, 0.02%)</title><rect x="93.5014%" y="2325" width="0.0182%" height="15" fill="rgb(248,48,27)" fg:x="226106" fg:w="44"/><text x="93.7514%" y="2335.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (44 samples, 0.02%)</title><rect x="93.5014%" y="2309" width="0.0182%" height="15" fill="rgb(212,14,16)" fg:x="226106" fg:w="44"/><text x="93.7514%" y="2319.50"></text></g><g><title>rayon_core::spawn::spawn_job::{{closure}} (44 samples, 0.02%)</title><rect x="93.5014%" y="2293" width="0.0182%" height="15" fill="rgb(217,205,37)" fg:x="226106" fg:w="44"/><text x="93.7514%" y="2303.50"></text></g><g><title>rayon_core::registry::Registry::catch_unwind (44 samples, 0.02%)</title><rect x="93.5014%" y="2277" width="0.0182%" height="15" fill="rgb(233,185,47)" fg:x="226106" fg:w="44"/><text x="93.7514%" y="2287.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (44 samples, 0.02%)</title><rect x="93.5014%" y="2261" width="0.0182%" height="15" fill="rgb(244,88,8)" fg:x="226106" fg:w="44"/><text x="93.7514%" y="2271.50"></text></g><g><title>std::panic::catch_unwind (44 samples, 0.02%)</title><rect x="93.5014%" y="2245" width="0.0182%" height="15" fill="rgb(213,0,20)" fg:x="226106" fg:w="44"/><text x="93.7514%" y="2255.50"></text></g><g><title>std::panicking::try (44 samples, 0.02%)</title><rect x="93.5014%" y="2229" width="0.0182%" height="15" fill="rgb(238,159,36)" fg:x="226106" fg:w="44"/><text x="93.7514%" y="2239.50"></text></g><g><title>std::panicking::try::do_call (44 samples, 0.02%)</title><rect x="93.5014%" y="2213" width="0.0182%" height="15" fill="rgb(253,173,17)" fg:x="226106" fg:w="44"/><text x="93.7514%" y="2223.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (44 samples, 0.02%)</title><rect x="93.5014%" y="2197" width="0.0182%" height="15" fill="rgb(221,23,28)" fg:x="226106" fg:w="44"/><text x="93.7514%" y="2207.50"></text></g><g><title>aptos_storage_interface::async_proof_fetcher::AsyncProofFetcher::schedule_proof_read::{{closure}} (44 samples, 0.02%)</title><rect x="93.5014%" y="2181" width="0.0182%" height="15" fill="rgb(218,113,15)" fg:x="226106" fg:w="44"/><text x="93.7514%" y="2191.50"></text></g><g><title>proof_reader_0 (45 samples, 0.02%)</title><rect x="93.5014%" y="2645" width="0.0186%" height="15" fill="rgb(233,58,3)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2655.50"></text></g><g><title>__GI___clone3 (45 samples, 0.02%)</title><rect x="93.5014%" y="2629" width="0.0186%" height="15" fill="rgb(250,46,35)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2639.50"></text></g><g><title>start_thread (45 samples, 0.02%)</title><rect x="93.5014%" y="2613" width="0.0186%" height="15" fill="rgb(210,169,11)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2623.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (45 samples, 0.02%)</title><rect x="93.5014%" y="2597" width="0.0186%" height="15" fill="rgb(246,88,19)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (45 samples, 0.02%)</title><rect x="93.5014%" y="2581" width="0.0186%" height="15" fill="rgb(206,81,49)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (45 samples, 0.02%)</title><rect x="93.5014%" y="2565" width="0.0186%" height="15" fill="rgb(232,144,18)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2575.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (45 samples, 0.02%)</title><rect x="93.5014%" y="2549" width="0.0186%" height="15" fill="rgb(235,2,27)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (45 samples, 0.02%)</title><rect x="93.5014%" y="2533" width="0.0186%" height="15" fill="rgb(239,157,39)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2543.50"></text></g><g><title>std::panic::catch_unwind (45 samples, 0.02%)</title><rect x="93.5014%" y="2517" width="0.0186%" height="15" fill="rgb(220,11,17)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2527.50"></text></g><g><title>std::panicking::try (45 samples, 0.02%)</title><rect x="93.5014%" y="2501" width="0.0186%" height="15" fill="rgb(243,94,50)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2511.50"></text></g><g><title>std::panicking::try::do_call (45 samples, 0.02%)</title><rect x="93.5014%" y="2485" width="0.0186%" height="15" fill="rgb(218,22,0)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (45 samples, 0.02%)</title><rect x="93.5014%" y="2469" width="0.0186%" height="15" fill="rgb(249,70,21)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2479.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (45 samples, 0.02%)</title><rect x="93.5014%" y="2453" width="0.0186%" height="15" fill="rgb(245,111,46)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2463.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (45 samples, 0.02%)</title><rect x="93.5014%" y="2437" width="0.0186%" height="15" fill="rgb(244,183,12)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2447.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (45 samples, 0.02%)</title><rect x="93.5014%" y="2421" width="0.0186%" height="15" fill="rgb(207,117,0)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2431.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (45 samples, 0.02%)</title><rect x="93.5014%" y="2405" width="0.0186%" height="15" fill="rgb(206,20,43)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2415.50"></text></g><g><title>rayon_core::registry::main_loop (45 samples, 0.02%)</title><rect x="93.5014%" y="2389" width="0.0186%" height="15" fill="rgb(221,104,11)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2399.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (45 samples, 0.02%)</title><rect x="93.5014%" y="2373" width="0.0186%" height="15" fill="rgb(254,36,50)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2383.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (45 samples, 0.02%)</title><rect x="93.5014%" y="2357" width="0.0186%" height="15" fill="rgb(252,17,15)" fg:x="226106" fg:w="45"/><text x="93.7514%" y="2367.50"></text></g><g><title>LZ4_compress_fast_continue (2,409 samples, 1.00%)</title><rect x="93.5365%" y="2325" width="0.9962%" height="15" fill="rgb(219,129,43)" fg:x="226191" fg:w="2409"/><text x="93.7865%" y="2335.50"></text></g><g><title>LZ4_compress_generic (2,409 samples, 1.00%)</title><rect x="93.5365%" y="2309" width="0.9962%" height="15" fill="rgb(205,34,45)" fg:x="226191" fg:w="2409"/><text x="93.7865%" y="2319.50"></text></g><g><title>LZ4_compress_generic_validated (2,409 samples, 1.00%)</title><rect x="93.5365%" y="2293" width="0.9962%" height="15" fill="rgb(251,201,32)" fg:x="226191" fg:w="2409"/><text x="93.7865%" y="2303.50"></text></g><g><title>LZ4_getIndexOnHash (655 samples, 0.27%)</title><rect x="94.2619%" y="2277" width="0.2709%" height="15" fill="rgb(205,56,0)" fg:x="227945" fg:w="655"/><text x="94.5119%" y="2287.50"></text></g><g><title>rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (2,420 samples, 1.00%)</title><rect x="93.5357%" y="2373" width="1.0007%" height="15" fill="rgb(211,193,27)" fg:x="226189" fg:w="2420"/><text x="93.7857%" y="2383.50"></text></g><g><title>rocksdb::CompressData(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (2,420 samples, 1.00%)</title><rect x="93.5357%" y="2357" width="1.0007%" height="15" fill="rgb(231,100,42)" fg:x="226189" fg:w="2420"/><text x="93.7857%" y="2367.50"></text></g><g><title>rocksdb::LZ4_Compress(rocksdb::CompressionInfo const&amp;, unsigned int, char const*, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (2,419 samples, 1.00%)</title><rect x="93.5361%" y="2341" width="1.0003%" height="15" fill="rgb(245,85,27)" fg:x="226190" fg:w="2419"/><text x="93.7861%" y="2351.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext const&amp;, rocksdb::UncompressionContext*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice*, rocksdb::CompressionType*, rocksdb::Status*) (2,430 samples, 1.00%)</title><rect x="93.5332%" y="2389" width="1.0049%" height="15" fill="rgb(241,76,24)" fg:x="226183" fg:w="2430"/><text x="93.7832%" y="2399.50"></text></g><g><title>rocksdb::ComputeBuiltinChecksumWithLastByte(rocksdb::ChecksumType, char const*, unsigned long, char) (1,062 samples, 0.44%)</title><rect x="94.5406%" y="2373" width="0.4392%" height="15" fill="rgb(249,157,15)" fg:x="228619" fg:w="1062"/><text x="94.7906%" y="2383.50"></text></g><g><title>rocksdb::crc32c::Value(char const*, unsigned long) (1,062 samples, 0.44%)</title><rect x="94.5406%" y="2357" width="0.4392%" height="15" fill="rgb(222,218,25)" fg:x="228619" fg:w="1062"/><text x="94.7906%" y="2367.50"></text></g><g><title>ExtendImpl&lt;rocksdb::crc32c::Slow_CRC32&gt; (1,062 samples, 0.44%)</title><rect x="94.5406%" y="2341" width="0.4392%" height="15" fill="rgb(252,156,52)" fg:x="228619" fg:w="1062"/><text x="94.7906%" y="2351.50"></text></g><g><title>Slow_CRC32 (1,062 samples, 0.44%)</title><rect x="94.5406%" y="2325" width="0.4392%" height="15" fill="rgb(211,185,7)" fg:x="228619" fg:w="1062"/><text x="94.7906%" y="2335.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, rocksdb::BlockType) (3,513 samples, 1.45%)</title><rect x="93.5320%" y="2405" width="1.4527%" height="15" fill="rgb(234,108,24)" fg:x="226180" fg:w="3513"/><text x="93.7820%" y="2415.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteRawBlock(rocksdb::Slice const&amp;, rocksdb::CompressionType, rocksdb::BlockHandle*, rocksdb::BlockType, rocksdb::Slice const*) (1,080 samples, 0.45%)</title><rect x="94.5381%" y="2389" width="0.4466%" height="15" fill="rgb(227,218,2)" fg:x="228613" fg:w="1080"/><text x="94.7881%" y="2399.50"></text></g><g><title>rocksdb::BlockBuilder::Finish() (32 samples, 0.01%)</title><rect x="94.9847%" y="2405" width="0.0132%" height="15" fill="rgb(224,0,36)" fg:x="229693" fg:w="32"/><text x="95.2347%" y="2415.50"></text></g><g><title>rocksdb::PutFixed32(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, unsigned int) (29 samples, 0.01%)</title><rect x="94.9860%" y="2389" width="0.0120%" height="15" fill="rgb(233,201,10)" fg:x="229696" fg:w="29"/><text x="95.2360%" y="2399.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append(char const*, unsigned long) (29 samples, 0.01%)</title><rect x="94.9860%" y="2373" width="0.0120%" height="15" fill="rgb(252,209,14)" fg:x="229696" fg:w="29"/><text x="95.2360%" y="2383.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) (29 samples, 0.01%)</title><rect x="94.9860%" y="2357" width="0.0120%" height="15" fill="rgb(205,93,49)" fg:x="229696" fg:w="29"/><text x="95.2360%" y="2367.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (26 samples, 0.01%)</title><rect x="94.9872%" y="2341" width="0.0108%" height="15" fill="rgb(234,116,45)" fg:x="229699" fg:w="26"/><text x="95.2372%" y="2351.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::BlockBuilder*, rocksdb::BlockHandle*, rocksdb::BlockType) (3,572 samples, 1.48%)</title><rect x="93.5316%" y="2421" width="1.4771%" height="15" fill="rgb(248,89,35)" fg:x="226179" fg:w="3572"/><text x="93.7816%" y="2431.50"></text></g><g><title>rocksdb::Slice::difference_offset(rocksdb::Slice const&amp;) const (36 samples, 0.01%)</title><rect x="95.0203%" y="2389" width="0.0149%" height="15" fill="rgb(233,167,45)" fg:x="229779" fg:w="36"/><text x="95.2703%" y="2399.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKey(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (71 samples, 0.03%)</title><rect x="95.0104%" y="2421" width="0.0294%" height="15" fill="rgb(248,228,14)" fg:x="229755" fg:w="71"/><text x="95.2604%" y="2431.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKeyImpl(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*, unsigned long) (71 samples, 0.03%)</title><rect x="95.0104%" y="2405" width="0.0294%" height="15" fill="rgb(246,91,14)" fg:x="229755" fg:w="71"/><text x="95.2604%" y="2415.50"></text></g><g><title>rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice const*, rocksdb::BlockHandle const&amp;) (37 samples, 0.02%)</title><rect x="95.0484%" y="2421" width="0.0153%" height="15" fill="rgb(227,142,5)" fg:x="229847" fg:w="37"/><text x="95.2984%" y="2431.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3,741 samples, 1.55%)</title><rect x="93.5250%" y="2437" width="1.5470%" height="15" fill="rgb(221,63,33)" fg:x="226163" fg:w="3741"/><text x="93.7750%" y="2447.50"></text></g><g><title>rocksdb::SequenceIterWrapper::key() const (150 samples, 0.06%)</title><rect x="95.1245%" y="2405" width="0.0620%" height="15" fill="rgb(233,49,0)" fg:x="230031" fg:w="150"/><text x="95.3745%" y="2415.50"></text></g><g><title>rocksdb::MemTableIterator::key() const (148 samples, 0.06%)</title><rect x="95.1253%" y="2389" width="0.0612%" height="15" fill="rgb(251,115,38)" fg:x="230033" fg:w="148"/><text x="95.3753%" y="2399.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice(char const*) (147 samples, 0.06%)</title><rect x="95.1257%" y="2373" width="0.0608%" height="15" fill="rgb(231,214,32)" fg:x="230034" fg:w="147"/><text x="95.3757%" y="2383.50"></text></g><g><title>rocksdb::GetVarint32Ptr(char const*, char const*, unsigned int*) (147 samples, 0.06%)</title><rect x="95.1257%" y="2357" width="0.0608%" height="15" fill="rgb(248,73,46)" fg:x="230034" fg:w="147"/><text x="95.3757%" y="2367.50"></text></g><g><title>rocksdb::CompactionIterator::Next() (283 samples, 0.12%)</title><rect x="95.0786%" y="2437" width="0.1170%" height="15" fill="rgb(237,156,4)" fg:x="229920" fg:w="283"/><text x="95.3286%" y="2447.50"></text></g><g><title>rocksdb::CompactionIterator::NextFromInput() (260 samples, 0.11%)</title><rect x="95.0881%" y="2421" width="0.1075%" height="15" fill="rgb(227,132,2)" fg:x="229943" fg:w="260"/><text x="95.3381%" y="2431.50"></text></g><g><title>rocksdb::OutputValidator::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 0.01%)</title><rect x="95.2047%" y="2437" width="0.0108%" height="15" fill="rgb(248,161,9)" fg:x="230225" fg:w="26"/><text x="95.4547%" y="2447.50"></text></g><g><title>rocksdb::BuildTable(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&amp;, rocksdb::TableBuilderOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::vector&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt; &gt; &gt;, rocksdb::FileMetaData*, std::vector&lt;rocksdb::BlobFileAddition, std::allocator&lt;rocksdb::BlobFileAddition&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr&lt;rocksdb::IOTracer&gt; const&amp;, rocksdb::BlobFileCreationReason, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*) (4,130 samples, 1.71%)</title><rect x="93.5204%" y="2453" width="1.7079%" height="15" fill="rgb(238,77,38)" fg:x="226152" fg:w="4130"/><text x="93.7704%" y="2463.50"></text></g><g><title>rocksdb::FlushJob::WriteLevel0Table() (4,133 samples, 1.71%)</title><rect x="93.5204%" y="2469" width="1.7091%" height="15" fill="rgb(222,166,40)" fg:x="226152" fg:w="4133"/><text x="93.7704%" y="2479.50"></text></g><g><title>rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority) (4,139 samples, 1.71%)</title><rect x="93.5200%" y="2533" width="1.7116%" height="15" fill="rgb(214,168,45)" fg:x="226151" fg:w="4139"/><text x="93.7700%" y="2543.50"></text></g><g><title>rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector&lt;rocksdb::DBImpl::BGFlushArg, (unsigned long)8&gt; const&amp;, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (4,139 samples, 1.71%)</title><rect x="93.5200%" y="2517" width="1.7116%" height="15" fill="rgb(226,64,37)" fg:x="226151" fg:w="4139"/><text x="93.7700%" y="2527.50"></text></g><g><title>rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;&amp;, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (4,139 samples, 1.71%)</title><rect x="93.5200%" y="2501" width="1.7116%" height="15" fill="rgb(232,210,43)" fg:x="226151" fg:w="4139"/><text x="93.7700%" y="2511.50"></text></g><g><title>rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*) (4,138 samples, 1.71%)</title><rect x="93.5204%" y="2485" width="1.7112%" height="15" fill="rgb(214,76,33)" fg:x="226152" fg:w="4138"/><text x="93.7704%" y="2495.50"></text></g><g><title>rocksdb:high (4,142 samples, 1.71%)</title><rect x="93.5200%" y="2645" width="1.7128%" height="15" fill="rgb(210,78,5)" fg:x="226151" fg:w="4142"/><text x="93.7700%" y="2655.50"></text></g><g><title>__GI___clone3 (4,142 samples, 1.71%)</title><rect x="93.5200%" y="2629" width="1.7128%" height="15" fill="rgb(211,107,37)" fg:x="226151" fg:w="4142"/><text x="93.7700%" y="2639.50"></text></g><g><title>start_thread (4,142 samples, 1.71%)</title><rect x="93.5200%" y="2613" width="1.7128%" height="15" fill="rgb(249,67,16)" fg:x="226151" fg:w="4142"/><text x="93.7700%" y="2623.50"></text></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*) (4,142 samples, 1.71%)</title><rect x="93.5200%" y="2597" width="1.7128%" height="15" fill="rgb(222,114,31)" fg:x="226151" fg:w="4142"/><text x="93.7700%" y="2607.50"></text></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long) (4,142 samples, 1.71%)</title><rect x="93.5200%" y="2581" width="1.7128%" height="15" fill="rgb(242,118,19)" fg:x="226151" fg:w="4142"/><text x="93.7700%" y="2591.50"></text></g><g><title>std::function&lt;void ()&gt;::operator()() const (4,142 samples, 1.71%)</title><rect x="93.5200%" y="2565" width="1.7128%" height="15" fill="rgb(223,115,1)" fg:x="226151" fg:w="4142"/><text x="93.7700%" y="2575.50"></text></g><g><title>rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority) (4,142 samples, 1.71%)</title><rect x="93.5200%" y="2549" width="1.7128%" height="15" fill="rgb(241,182,54)" fg:x="226151" fg:w="4142"/><text x="93.7700%" y="2559.50"></text></g><g><title>rocksdb::MinIteratorComparator::operator()(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*, rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) const (27 samples, 0.01%)</title><rect x="95.2783%" y="2373" width="0.0112%" height="15" fill="rgb(244,166,36)" fg:x="230403" fg:w="27"/><text x="95.5283%" y="2383.50"></text></g><g><title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (27 samples, 0.01%)</title><rect x="95.2783%" y="2357" width="0.0112%" height="15" fill="rgb(241,52,43)" fg:x="230403" fg:w="27"/><text x="95.5283%" y="2367.50"></text></g><g><title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (27 samples, 0.01%)</title><rect x="95.2783%" y="2341" width="0.0112%" height="15" fill="rgb(236,82,9)" fg:x="230403" fg:w="27"/><text x="95.5283%" y="2351.50"></text></g><g><title>rocksdb::BinaryHeap&lt;rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*, rocksdb::MinIteratorComparator&gt;::replace_top(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;* const&amp;) (74 samples, 0.03%)</title><rect x="95.2701%" y="2405" width="0.0306%" height="15" fill="rgb(241,119,0)" fg:x="230383" fg:w="74"/><text x="95.5201%" y="2415.50"></text></g><g><title>rocksdb::BinaryHeap&lt;rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*, rocksdb::MinIteratorComparator&gt;::downheap(unsigned long) (74 samples, 0.03%)</title><rect x="95.2701%" y="2389" width="0.0306%" height="15" fill="rgb(221,19,22)" fg:x="230383" fg:w="74"/><text x="95.5201%" y="2399.50"></text></g><g><title>rocksdb::autovector&lt;rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*, (unsigned long)8&gt;::operator[](unsigned long) (27 samples, 0.01%)</title><rect x="95.2895%" y="2373" width="0.0112%" height="15" fill="rgb(254,144,35)" fg:x="230430" fg:w="27"/><text x="95.5395%" y="2383.50"></text></g><g><title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (26 samples, 0.01%)</title><rect x="95.3573%" y="2277" width="0.0108%" height="15" fill="rgb(246,132,30)" fg:x="230594" fg:w="26"/><text x="95.6073%" y="2287.50"></text></g><g><title>rocksdb::BlockFetcher::ProcessTrailerIfPresent() (1,076 samples, 0.44%)</title><rect x="95.3780%" y="2229" width="0.4450%" height="15" fill="rgb(234,69,28)" fg:x="230644" fg:w="1076"/><text x="95.6280%" y="2239.50"></text></g><g><title>rocksdb::VerifyBlockChecksum(rocksdb::ChecksumType, char const*, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long) (1,075 samples, 0.44%)</title><rect x="95.3784%" y="2213" width="0.4445%" height="15" fill="rgb(219,106,47)" fg:x="230645" fg:w="1075"/><text x="95.6284%" y="2223.50"></text></g><g><title>rocksdb::ComputeBuiltinChecksum(rocksdb::ChecksumType, char const*, unsigned long) (1,073 samples, 0.44%)</title><rect x="95.3792%" y="2197" width="0.4437%" height="15" fill="rgb(218,79,24)" fg:x="230647" fg:w="1073"/><text x="95.6292%" y="2207.50"></text></g><g><title>rocksdb::crc32c::Value(char const*, unsigned long) (1,073 samples, 0.44%)</title><rect x="95.3792%" y="2181" width="0.4437%" height="15" fill="rgb(225,26,21)" fg:x="230647" fg:w="1073"/><text x="95.6292%" y="2191.50"></text></g><g><title>ExtendImpl&lt;rocksdb::crc32c::Slow_CRC32&gt; (1,073 samples, 0.44%)</title><rect x="95.3792%" y="2165" width="0.4437%" height="15" fill="rgb(217,68,49)" fg:x="230647" fg:w="1073"/><text x="95.6292%" y="2175.50"></text></g><g><title>Slow_CRC32 (1,073 samples, 0.44%)</title><rect x="95.3792%" y="2149" width="0.4437%" height="15" fill="rgb(220,204,28)" fg:x="230647" fg:w="1073"/><text x="95.6292%" y="2159.50"></text></g><g><title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, rocksdb::Env::IOPriority) const (26 samples, 0.01%)</title><rect x="95.8283%" y="2229" width="0.0108%" height="15" fill="rgb(237,208,43)" fg:x="231733" fg:w="26"/><text x="96.0783%" y="2239.50"></text></g><g><title>LZ4_decompress_safe_continue (507 samples, 0.21%)</title><rect x="95.8457%" y="2165" width="0.2097%" height="15" fill="rgb(213,97,42)" fg:x="231775" fg:w="507"/><text x="96.0957%" y="2175.50"></text></g><g><title>LZ4_decompress_safe (505 samples, 0.21%)</title><rect x="95.8465%" y="2149" width="0.2088%" height="15" fill="rgb(238,96,52)" fg:x="231777" fg:w="505"/><text x="96.0965%" y="2159.50"></text></g><g><title>LZ4_decompress_generic (505 samples, 0.21%)</title><rect x="95.8465%" y="2133" width="0.2088%" height="15" fill="rgb(228,14,13)" fg:x="231777" fg:w="505"/><text x="96.0965%" y="2143.50"></text></g><g><title>read_variable_length (33 samples, 0.01%)</title><rect x="96.0417%" y="2117" width="0.0136%" height="15" fill="rgb(219,123,13)" fg:x="232249" fg:w="33"/><text x="96.2917%" y="2127.50"></text></g><g><title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) (539 samples, 0.22%)</title><rect x="95.8424%" y="2229" width="0.2229%" height="15" fill="rgb(216,144,17)" fg:x="231767" fg:w="539"/><text x="96.0924%" y="2239.50"></text></g><g><title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) (539 samples, 0.22%)</title><rect x="95.8424%" y="2213" width="0.2229%" height="15" fill="rgb(230,228,29)" fg:x="231767" fg:w="539"/><text x="96.0924%" y="2223.50"></text></g><g><title>rocksdb::UncompressData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, unsigned long*, unsigned int, rocksdb::MemoryAllocator*) (539 samples, 0.22%)</title><rect x="95.8424%" y="2197" width="0.2229%" height="15" fill="rgb(233,18,5)" fg:x="231767" fg:w="539"/><text x="96.0924%" y="2207.50"></text></g><g><title>rocksdb::LZ4_Uncompress(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, unsigned long*, unsigned int, rocksdb::MemoryAllocator*) (531 samples, 0.22%)</title><rect x="95.8457%" y="2181" width="0.2196%" height="15" fill="rgb(233,197,12)" fg:x="231775" fg:w="531"/><text x="96.0957%" y="2191.50"></text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents() (1,681 samples, 0.70%)</title><rect x="95.3722%" y="2245" width="0.6951%" height="15" fill="rgb(234,140,29)" fg:x="230630" fg:w="1681"/><text x="95.6222%" y="2255.50"></text></g><g><title>ReadBlockFromFile&lt;rocksdb::Block&gt; (1,712 samples, 0.71%)</title><rect x="95.3693%" y="2261" width="0.7080%" height="15" fill="rgb(233,113,19)" fg:x="230623" fg:w="1712"/><text x="95.6193%" y="2271.50"></text></g><g><title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, bool, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*, bool) const (37 samples, 0.02%)</title><rect x="96.0777%" y="2261" width="0.0153%" height="15" fill="rgb(246,209,13)" fg:x="232336" fg:w="37"/><text x="96.3277%" y="2271.50"></text></g><g><title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, bool, rocksdb::GetContext*) const (32 samples, 0.01%)</title><rect x="96.0797%" y="2245" width="0.0132%" height="15" fill="rgb(242,79,54)" fg:x="232341" fg:w="32"/><text x="96.3297%" y="2255.50"></text></g><g><title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool, bool) const (1,767 samples, 0.73%)</title><rect x="95.3681%" y="2277" width="0.7307%" height="15" fill="rgb(219,73,16)" fg:x="230620" fg:w="1767"/><text x="95.6181%" y="2287.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::InitDataBlock() (1,849 samples, 0.76%)</title><rect x="95.3362%" y="2309" width="0.7646%" height="15" fill="rgb(224,52,10)" fg:x="230543" fg:w="1849"/><text x="95.5862%" y="2319.50"></text></g><g><title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::FilePrefetchBuffer*, bool, bool, rocksdb::Status&amp;) const (1,840 samples, 0.76%)</title><rect x="95.3399%" y="2293" width="0.7609%" height="15" fill="rgb(237,179,5)" fg:x="230552" fg:w="1840"/><text x="95.5899%" y="2303.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::ResetDataIter() (40 samples, 0.02%)</title><rect x="96.1008%" y="2309" width="0.0165%" height="15" fill="rgb(231,20,6)" fg:x="232392" fg:w="40"/><text x="96.3508%" y="2319.50"></text></g><g><title>rocksdb::DataBlockIter::Invalidate(rocksdb::Status const&amp;) (40 samples, 0.02%)</title><rect x="96.1008%" y="2293" width="0.0165%" height="15" fill="rgb(253,171,45)" fg:x="232392" fg:w="40"/><text x="96.3508%" y="2303.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Invalidate(rocksdb::Status const&amp;) (40 samples, 0.02%)</title><rect x="96.1008%" y="2277" width="0.0165%" height="15" fill="rgb(230,75,49)" fg:x="232392" fg:w="40"/><text x="96.3508%" y="2287.50"></text></g><g><title>rocksdb::Cleanable::Reset() (40 samples, 0.02%)</title><rect x="96.1008%" y="2261" width="0.0165%" height="15" fill="rgb(216,83,46)" fg:x="232392" fg:w="40"/><text x="96.3508%" y="2271.50"></text></g><g><title>rocksdb::Cleanable::DoCleanup() (40 samples, 0.02%)</title><rect x="96.1008%" y="2245" width="0.0165%" height="15" fill="rgb(236,56,9)" fg:x="232392" fg:w="40"/><text x="96.3508%" y="2255.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::FindBlockForward() (1,924 samples, 0.80%)</title><rect x="95.3346%" y="2325" width="0.7956%" height="15" fill="rgb(215,28,34)" fg:x="230539" fg:w="1924"/><text x="95.5846%" y="2335.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::Next() (1,965 samples, 0.81%)</title><rect x="95.3284%" y="2341" width="0.8126%" height="15" fill="rgb(230,222,20)" fg:x="230524" fg:w="1965"/><text x="95.5784%" y="2351.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Next() (26 samples, 0.01%)</title><rect x="96.1302%" y="2325" width="0.0108%" height="15" fill="rgb(235,209,51)" fg:x="232463" fg:w="26"/><text x="96.3802%" y="2335.50"></text></g><g><title>rocksdb::DataBlockIter::NextImpl() (26 samples, 0.01%)</title><rect x="96.1302%" y="2309" width="0.0108%" height="15" fill="rgb(235,167,1)" fg:x="232463" fg:w="26"/><text x="96.3802%" y="2319.50"></text></g><g><title>rocksdb::DataBlockIter::ParseNextDataKey(bool*) (26 samples, 0.01%)</title><rect x="96.1302%" y="2293" width="0.0108%" height="15" fill="rgb(248,220,0)" fg:x="232463" fg:w="26"/><text x="96.3802%" y="2303.50"></text></g><g><title>bool rocksdb::BlockIter&lt;rocksdb::Slice&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt;(bool*) (26 samples, 0.01%)</title><rect x="96.1302%" y="2277" width="0.0108%" height="15" fill="rgb(239,0,18)" fg:x="232463" fg:w="26"/><text x="96.3802%" y="2287.50"></text></g><g><title>NextAndGetResult (2,027 samples, 0.84%)</title><rect x="95.3036%" y="2389" width="0.8382%" height="15" fill="rgb(229,179,11)" fg:x="230464" fg:w="2027"/><text x="95.5536%" y="2399.50"></text></g><g><title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::NextAndGetResult(rocksdb::IterateResult*) (2,027 samples, 0.84%)</title><rect x="95.3036%" y="2373" width="0.8382%" height="15" fill="rgb(226,116,53)" fg:x="230464" fg:w="2027"/><text x="95.5536%" y="2383.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (1,992 samples, 0.82%)</title><rect x="95.3180%" y="2357" width="0.8237%" height="15" fill="rgb(218,1,49)" fg:x="230499" fg:w="1992"/><text x="95.5680%" y="2367.50"></text></g><g><title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (27 samples, 0.01%)</title><rect x="96.1691%" y="2309" width="0.0112%" height="15" fill="rgb(208,184,47)" fg:x="232557" fg:w="27"/><text x="96.4191%" y="2319.50"></text></g><g><title>rocksdb::BlockFetcher::ProcessTrailerIfPresent() (911 samples, 0.38%)</title><rect x="96.1864%" y="2261" width="0.3767%" height="15" fill="rgb(238,174,3)" fg:x="232599" fg:w="911"/><text x="96.4364%" y="2271.50"></text></g><g><title>rocksdb::VerifyBlockChecksum(rocksdb::ChecksumType, char const*, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long) (903 samples, 0.37%)</title><rect x="96.1897%" y="2245" width="0.3734%" height="15" fill="rgb(247,188,6)" fg:x="232607" fg:w="903"/><text x="96.4397%" y="2255.50"></text></g><g><title>rocksdb::ComputeBuiltinChecksum(rocksdb::ChecksumType, char const*, unsigned long) (901 samples, 0.37%)</title><rect x="96.1906%" y="2229" width="0.3726%" height="15" fill="rgb(211,165,46)" fg:x="232609" fg:w="901"/><text x="96.4406%" y="2239.50"></text></g><g><title>rocksdb::crc32c::Value(char const*, unsigned long) (901 samples, 0.37%)</title><rect x="96.1906%" y="2213" width="0.3726%" height="15" fill="rgb(222,190,10)" fg:x="232609" fg:w="901"/><text x="96.4406%" y="2223.50"></text></g><g><title>ExtendImpl&lt;rocksdb::crc32c::Slow_CRC32&gt; (900 samples, 0.37%)</title><rect x="96.1910%" y="2197" width="0.3722%" height="15" fill="rgb(206,185,3)" fg:x="232610" fg:w="900"/><text x="96.4410%" y="2207.50"></text></g><g><title>Slow_CRC32 (900 samples, 0.37%)</title><rect x="96.1910%" y="2181" width="0.3722%" height="15" fill="rgb(244,125,37)" fg:x="232610" fg:w="900"/><text x="96.4410%" y="2191.50"></text></g><g><title>LZ4_wildCopy32 (225 samples, 0.09%)</title><rect x="96.6347%" y="2149" width="0.0930%" height="15" fill="rgb(211,43,7)" fg:x="233683" fg:w="225"/><text x="96.8847%" y="2159.50"></text></g><g><title>LZ4_decompress_safe_continue (395 samples, 0.16%)</title><rect x="96.5772%" y="2197" width="0.1633%" height="15" fill="rgb(250,41,42)" fg:x="233544" fg:w="395"/><text x="96.8272%" y="2207.50"></text></g><g><title>LZ4_decompress_safe (392 samples, 0.16%)</title><rect x="96.5785%" y="2181" width="0.1621%" height="15" fill="rgb(254,54,42)" fg:x="233547" fg:w="392"/><text x="96.8285%" y="2191.50"></text></g><g><title>LZ4_decompress_generic (392 samples, 0.16%)</title><rect x="96.5785%" y="2165" width="0.1621%" height="15" fill="rgb(213,71,43)" fg:x="233547" fg:w="392"/><text x="96.8285%" y="2175.50"></text></g><g><title>LZ4_wildCopy8 (31 samples, 0.01%)</title><rect x="96.7277%" y="2149" width="0.0128%" height="15" fill="rgb(249,3,44)" fg:x="233908" fg:w="31"/><text x="96.9777%" y="2159.50"></text></g><g><title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) (411 samples, 0.17%)</title><rect x="96.5760%" y="2261" width="0.1700%" height="15" fill="rgb(229,80,41)" fg:x="233541" fg:w="411"/><text x="96.8260%" y="2271.50"></text></g><g><title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) (411 samples, 0.17%)</title><rect x="96.5760%" y="2245" width="0.1700%" height="15" fill="rgb(231,25,28)" fg:x="233541" fg:w="411"/><text x="96.8260%" y="2255.50"></text></g><g><title>rocksdb::UncompressData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, unsigned long*, unsigned int, rocksdb::MemoryAllocator*) (410 samples, 0.17%)</title><rect x="96.5764%" y="2229" width="0.1695%" height="15" fill="rgb(208,79,48)" fg:x="233542" fg:w="410"/><text x="96.8264%" y="2239.50"></text></g><g><title>rocksdb::LZ4_Uncompress(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, unsigned long*, unsigned int, rocksdb::MemoryAllocator*) (409 samples, 0.17%)</title><rect x="96.5768%" y="2213" width="0.1691%" height="15" fill="rgb(207,196,38)" fg:x="233543" fg:w="409"/><text x="96.8268%" y="2223.50"></text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents() (1,358 samples, 0.56%)</title><rect x="96.1848%" y="2277" width="0.5616%" height="15" fill="rgb(228,105,49)" fg:x="232595" fg:w="1358"/><text x="96.4348%" y="2287.50"></text></g><g><title>ReadBlockFromFile&lt;rocksdb::Block&gt; (1,371 samples, 0.57%)</title><rect x="96.1823%" y="2293" width="0.5669%" height="15" fill="rgb(237,99,15)" fg:x="232589" fg:w="1371"/><text x="96.4323%" y="2303.50"></text></g><g><title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool, bool) const (1,402 samples, 0.58%)</title><rect x="96.1802%" y="2309" width="0.5798%" height="15" fill="rgb(224,207,46)" fg:x="232584" fg:w="1402"/><text x="96.4302%" y="2319.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::InitDataBlock() (1,458 samples, 0.60%)</title><rect x="96.1583%" y="2341" width="0.6029%" height="15" fill="rgb(249,117,50)" fg:x="232531" fg:w="1458"/><text x="96.4083%" y="2351.50"></text></g><g><title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::FilePrefetchBuffer*, bool, bool, rocksdb::Status&amp;) const (1,451 samples, 0.60%)</title><rect x="96.1612%" y="2325" width="0.6000%" height="15" fill="rgb(248,17,13)" fg:x="232538" fg:w="1451"/><text x="96.4112%" y="2335.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::ResetDataIter() (27 samples, 0.01%)</title><rect x="96.7612%" y="2341" width="0.0112%" height="15" fill="rgb(228,187,36)" fg:x="233989" fg:w="27"/><text x="97.0112%" y="2351.50"></text></g><g><title>rocksdb::DataBlockIter::Invalidate(rocksdb::Status const&amp;) (26 samples, 0.01%)</title><rect x="96.7617%" y="2325" width="0.0108%" height="15" fill="rgb(234,132,20)" fg:x="233990" fg:w="26"/><text x="97.0117%" y="2335.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Invalidate(rocksdb::Status const&amp;) (26 samples, 0.01%)</title><rect x="96.7617%" y="2309" width="0.0108%" height="15" fill="rgb(209,170,46)" fg:x="233990" fg:w="26"/><text x="97.0117%" y="2319.50"></text></g><g><title>rocksdb::Cleanable::Reset() (26 samples, 0.01%)</title><rect x="96.7617%" y="2293" width="0.0108%" height="15" fill="rgb(237,23,19)" fg:x="233990" fg:w="26"/><text x="97.0117%" y="2303.50"></text></g><g><title>rocksdb::Cleanable::DoCleanup() (26 samples, 0.01%)</title><rect x="96.7617%" y="2277" width="0.0108%" height="15" fill="rgb(227,21,26)" fg:x="233990" fg:w="26"/><text x="97.0117%" y="2287.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::FindBlockForward() (1,511 samples, 0.62%)</title><rect x="96.1550%" y="2357" width="0.6248%" height="15" fill="rgb(222,220,48)" fg:x="232523" fg:w="1511"/><text x="96.4050%" y="2367.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::Next() (1,535 samples, 0.63%)</title><rect x="96.1534%" y="2373" width="0.6348%" height="15" fill="rgb(214,9,16)" fg:x="232519" fg:w="1535"/><text x="96.4034%" y="2383.50"></text></g><g><title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Next() (3,601 samples, 1.49%)</title><rect x="95.3007%" y="2405" width="1.4891%" height="15" fill="rgb(209,73,30)" fg:x="230457" fg:w="3601"/><text x="95.5507%" y="2415.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (1,555 samples, 0.64%)</title><rect x="96.1467%" y="2389" width="0.6430%" height="15" fill="rgb(207,20,33)" fg:x="232503" fg:w="1555"/><text x="96.3967%" y="2399.50"></text></g><g><title>rocksdb::CompactionIterator::AdvanceInputIter() (3,713 samples, 1.54%)</title><rect x="95.2597%" y="2453" width="1.5354%" height="15" fill="rgb(219,153,12)" fg:x="230358" fg:w="3713"/><text x="95.5097%" y="2463.50"></text></g><g><title>rocksdb::SequenceIterWrapper::Next() (3,713 samples, 1.54%)</title><rect x="95.2597%" y="2437" width="1.5354%" height="15" fill="rgb(235,97,25)" fg:x="230358" fg:w="3713"/><text x="95.5097%" y="2447.50"></text></g><g><title>rocksdb::MergingIterator::Next() (3,692 samples, 1.53%)</title><rect x="95.2684%" y="2421" width="1.5267%" height="15" fill="rgb(244,30,34)" fg:x="230379" fg:w="3692"/><text x="95.5184%" y="2431.50"></text></g><g><title>rocksdb::CompactionIterator::NextFromInput() (196 samples, 0.08%)</title><rect x="96.7952%" y="2453" width="0.0811%" height="15" fill="rgb(214,106,45)" fg:x="234071" fg:w="196"/><text x="97.0452%" y="2463.50"></text></g><g><title>rocksdb::Slice::size() const (47 samples, 0.02%)</title><rect x="96.8568%" y="2437" width="0.0194%" height="15" fill="rgb(226,41,9)" fg:x="234220" fg:w="47"/><text x="97.1068%" y="2447.50"></text></g><g><title>rocksdb::CompactionIterator::Next() (3,927 samples, 1.62%)</title><rect x="95.2531%" y="2469" width="1.6239%" height="15" fill="rgb(253,139,29)" fg:x="230342" fg:w="3927"/><text x="95.5031%" y="2479.50"></text></g><g><title>rocksdb::CompactionIterator::PrepareOutput() (60 samples, 0.02%)</title><rect x="96.8770%" y="2469" width="0.0248%" height="15" fill="rgb(213,205,39)" fg:x="234269" fg:w="60"/><text x="97.1270%" y="2479.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::Finish() (28 samples, 0.01%)</title><rect x="96.9018%" y="2453" width="0.0116%" height="15" fill="rgb(209,27,10)" fg:x="234329" fg:w="28"/><text x="97.1518%" y="2463.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteIndexBlock(rocksdb::MetaIndexBuilder*, rocksdb::BlockHandle*) (27 samples, 0.01%)</title><rect x="96.9023%" y="2437" width="0.0112%" height="15" fill="rgb(249,142,16)" fg:x="234330" fg:w="27"/><text x="97.1523%" y="2447.50"></text></g><g><title>rocksdb::CompactionJob::FinishCompactionOutputFile(rocksdb::Status const&amp;, rocksdb::CompactionJob::SubcompactionState*, rocksdb::CompactionRangeDelAggregator*, rocksdb::CompactionIterationStats*, rocksdb::Slice const*) (29 samples, 0.01%)</title><rect x="96.9018%" y="2469" width="0.0120%" height="15" fill="rgb(242,65,12)" fg:x="234329" fg:w="29"/><text x="97.1518%" y="2479.50"></text></g><g><title>LZ4_count (243 samples, 0.10%)</title><rect x="98.2872%" y="2293" width="0.1005%" height="15" fill="rgb(232,48,10)" fg:x="237679" fg:w="243"/><text x="98.5372%" y="2303.50"></text></g><g><title>LZ4_compress_fast_continue (4,482 samples, 1.85%)</title><rect x="96.9614%" y="2341" width="1.8534%" height="15" fill="rgb(253,67,19)" fg:x="234473" fg:w="4482"/><text x="97.2114%" y="2351.50">L..</text></g><g><title>LZ4_compress_generic (4,482 samples, 1.85%)</title><rect x="96.9614%" y="2325" width="1.8534%" height="15" fill="rgb(227,93,29)" fg:x="234473" fg:w="4482"/><text x="97.2114%" y="2335.50">L..</text></g><g><title>LZ4_compress_generic_validated (4,482 samples, 1.85%)</title><rect x="96.9614%" y="2309" width="1.8534%" height="15" fill="rgb(226,189,53)" fg:x="234473" fg:w="4482"/><text x="97.2114%" y="2319.50">L..</text></g><g><title>LZ4_getIndexOnHash (1,033 samples, 0.43%)</title><rect x="98.3877%" y="2293" width="0.4272%" height="15" fill="rgb(223,224,1)" fg:x="237922" fg:w="1033"/><text x="98.6377%" y="2303.50"></text></g><g><title>rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (4,520 samples, 1.87%)</title><rect x="96.9568%" y="2389" width="1.8692%" height="15" fill="rgb(221,84,32)" fg:x="234462" fg:w="4520"/><text x="97.2068%" y="2399.50">r..</text></g><g><title>rocksdb::CompressData(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (4,519 samples, 1.87%)</title><rect x="96.9573%" y="2373" width="1.8687%" height="15" fill="rgb(214,189,28)" fg:x="234463" fg:w="4519"/><text x="97.2073%" y="2383.50">r..</text></g><g><title>rocksdb::LZ4_Compress(rocksdb::CompressionInfo const&amp;, unsigned int, char const*, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (4,517 samples, 1.87%)</title><rect x="96.9581%" y="2357" width="1.8679%" height="15" fill="rgb(234,7,52)" fg:x="234465" fg:w="4517"/><text x="97.2081%" y="2367.50">r..</text></g><g><title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext const&amp;, rocksdb::UncompressionContext*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice*, rocksdb::CompressionType*, rocksdb::Status*) (4,548 samples, 1.88%)</title><rect x="96.9502%" y="2405" width="1.8807%" height="15" fill="rgb(249,73,31)" fg:x="234446" fg:w="4548"/><text x="97.2002%" y="2415.50">r..</text></g><g><title>rocksdb::ComputeBuiltinChecksumWithLastByte(rocksdb::ChecksumType, char const*, unsigned long, char) (1,922 samples, 0.79%)</title><rect x="98.8347%" y="2389" width="0.7948%" height="15" fill="rgb(253,153,41)" fg:x="239003" fg:w="1922"/><text x="99.0847%" y="2399.50"></text></g><g><title>rocksdb::crc32c::Value(char const*, unsigned long) (1,919 samples, 0.79%)</title><rect x="98.8359%" y="2373" width="0.7936%" height="15" fill="rgb(249,52,34)" fg:x="239006" fg:w="1919"/><text x="99.0859%" y="2383.50"></text></g><g><title>ExtendImpl&lt;rocksdb::crc32c::Slow_CRC32&gt; (1,918 samples, 0.79%)</title><rect x="98.8363%" y="2357" width="0.7931%" height="15" fill="rgb(236,177,47)" fg:x="239007" fg:w="1918"/><text x="99.0863%" y="2367.50"></text></g><g><title>Slow_CRC32 (1,918 samples, 0.79%)</title><rect x="98.8363%" y="2341" width="0.7931%" height="15" fill="rgb(252,185,45)" fg:x="239007" fg:w="1918"/><text x="99.0863%" y="2351.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteRawBlock(rocksdb::Slice const&amp;, rocksdb::CompressionType, rocksdb::BlockHandle*, rocksdb::BlockType, rocksdb::Slice const*) (1,974 samples, 0.82%)</title><rect x="98.8310%" y="2405" width="0.8163%" height="15" fill="rgb(251,15,30)" fg:x="238994" fg:w="1974"/><text x="99.0810%" y="2415.50"></text></g><g><title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;, unsigned int, rocksdb::Env::IOPriority) (40 samples, 0.02%)</title><rect x="99.6307%" y="2389" width="0.0165%" height="15" fill="rgb(233,31,4)" fg:x="240928" fg:w="40"/><text x="99.8807%" y="2399.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, rocksdb::BlockType) (6,532 samples, 2.70%)</title><rect x="96.9473%" y="2421" width="2.7012%" height="15" fill="rgb(254,44,24)" fg:x="234439" fg:w="6532"/><text x="97.1973%" y="2431.50">ro..</text></g><g><title>rocksdb::BlockBuilder::Finish() (36 samples, 0.01%)</title><rect x="99.6485%" y="2421" width="0.0149%" height="15" fill="rgb(218,54,1)" fg:x="240971" fg:w="36"/><text x="99.8985%" y="2431.50"></text></g><g><title>rocksdb::PutFixed32(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, unsigned int) (30 samples, 0.01%)</title><rect x="99.6510%" y="2405" width="0.0124%" height="15" fill="rgb(243,209,39)" fg:x="240977" fg:w="30"/><text x="99.9010%" y="2415.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append(char const*, unsigned long) (30 samples, 0.01%)</title><rect x="99.6510%" y="2389" width="0.0124%" height="15" fill="rgb(206,75,33)" fg:x="240977" fg:w="30"/><text x="99.9010%" y="2399.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) (30 samples, 0.01%)</title><rect x="99.6510%" y="2373" width="0.0124%" height="15" fill="rgb(223,108,18)" fg:x="240977" fg:w="30"/><text x="99.9010%" y="2383.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (29 samples, 0.01%)</title><rect x="99.6514%" y="2357" width="0.0120%" height="15" fill="rgb(244,89,31)" fg:x="240978" fg:w="29"/><text x="99.9014%" y="2367.50"></text></g><g><title>operator new(unsigned long) (25 samples, 0.01%)</title><rect x="99.6530%" y="2341" width="0.0103%" height="15" fill="rgb(222,167,27)" fg:x="240982" fg:w="25"/><text x="99.9030%" y="2351.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::BlockBuilder*, rocksdb::BlockHandle*, rocksdb::BlockType) (6,631 samples, 2.74%)</title><rect x="96.9453%" y="2437" width="2.7421%" height="15" fill="rgb(247,41,16)" fg:x="234434" fg:w="6631"/><text x="97.1953%" y="2447.50">ro..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string() (33 samples, 0.01%)</title><rect x="99.6737%" y="2421" width="0.0136%" height="15" fill="rgb(233,168,40)" fg:x="241032" fg:w="33"/><text x="99.9237%" y="2431.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose() (33 samples, 0.01%)</title><rect x="99.6737%" y="2405" width="0.0136%" height="15" fill="rgb(205,211,8)" fg:x="241032" fg:w="33"/><text x="99.9237%" y="2415.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy(unsigned long) (33 samples, 0.01%)</title><rect x="99.6737%" y="2389" width="0.0136%" height="15" fill="rgb(238,105,11)" fg:x="241032" fg:w="33"/><text x="99.9237%" y="2399.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate(std::allocator&lt;char&gt;&amp;, char*, unsigned long) (33 samples, 0.01%)</title><rect x="99.6737%" y="2373" width="0.0136%" height="15" fill="rgb(223,142,52)" fg:x="241032" fg:w="33"/><text x="99.9237%" y="2383.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(char*, unsigned long) (33 samples, 0.01%)</title><rect x="99.6737%" y="2357" width="0.0136%" height="15" fill="rgb(238,51,33)" fg:x="241032" fg:w="33"/><text x="99.9237%" y="2367.50"></text></g><g><title>rocksdb::Slice::difference_offset(rocksdb::Slice const&amp;) const (148 samples, 0.06%)</title><rect x="99.7122%" y="2405" width="0.0612%" height="15" fill="rgb(231,188,43)" fg:x="241125" fg:w="148"/><text x="99.9622%" y="2415.50"></text></g><g><title>rocksdb::Slice::size() const (29 samples, 0.01%)</title><rect x="99.7734%" y="2405" width="0.0120%" height="15" fill="rgb(216,92,17)" fg:x="241273" fg:w="29"/><text x="100.0234%" y="2415.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKey(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (281 samples, 0.12%)</title><rect x="99.6919%" y="2437" width="0.1162%" height="15" fill="rgb(228,2,40)" fg:x="241076" fg:w="281"/><text x="99.9419%" y="2447.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKeyImpl(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*, unsigned long) (281 samples, 0.12%)</title><rect x="99.6919%" y="2421" width="0.1162%" height="15" fill="rgb(226,73,15)" fg:x="241076" fg:w="281"/><text x="99.9419%" y="2431.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append(char const*, unsigned long) (55 samples, 0.02%)</title><rect x="99.7854%" y="2405" width="0.0227%" height="15" fill="rgb(227,66,46)" fg:x="241302" fg:w="55"/><text x="100.0354%" y="2415.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) (52 samples, 0.02%)</title><rect x="99.7866%" y="2389" width="0.0215%" height="15" fill="rgb(209,71,6)" fg:x="241305" fg:w="52"/><text x="100.0366%" y="2399.50"></text></g><g><title>rocksdb::NotifyCollectTableCollectorsOnAdd(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; const&amp;, rocksdb::Logger*) (36 samples, 0.01%)</title><rect x="99.8201%" y="2437" width="0.0149%" height="15" fill="rgb(246,100,25)" fg:x="241386" fg:w="36"/><text x="100.0701%" y="2447.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKeyImpl(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*, unsigned long) (30 samples, 0.01%)</title><rect x="99.8379%" y="2405" width="0.0124%" height="15" fill="rgb(248,185,27)" fg:x="241429" fg:w="30"/><text x="100.0879%" y="2415.50"></text></g><g><title>rocksdb::BlockBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (31 samples, 0.01%)</title><rect x="99.8379%" y="2421" width="0.0128%" height="15" fill="rgb(225,118,47)" fg:x="241429" fg:w="31"/><text x="100.0879%" y="2431.50"></text></g><g><title>rocksdb::InternalKeyComparator::FindShortestSeparator(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice const&amp;) const (39 samples, 0.02%)</title><rect x="99.8557%" y="2421" width="0.0161%" height="15" fill="rgb(220,185,44)" fg:x="241472" fg:w="39"/><text x="100.1057%" y="2431.50"></text></g><g><title>rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice const*, rocksdb::BlockHandle const&amp;) (100 samples, 0.04%)</title><rect x="99.8350%" y="2437" width="0.0414%" height="15" fill="rgb(227,95,24)" fg:x="241422" fg:w="100"/><text x="100.0850%" y="2447.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7,178 samples, 2.97%)</title><rect x="96.9184%" y="2453" width="2.9683%" height="15" fill="rgb(252,84,24)" fg:x="234369" fg:w="7178"/><text x="97.1684%" y="2463.50">roc..</text></g><g><title>rocksdb::CompactionJob::SubcompactionState::AddToBuilder(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7,240 samples, 2.99%)</title><rect x="96.9138%" y="2469" width="2.9940%" height="15" fill="rgb(240,34,44)" fg:x="234358" fg:w="7240"/><text x="97.1638%" y="2479.50">roc..</text></g><g><title>rocksdb::OutputValidator::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (51 samples, 0.02%)</title><rect x="99.8867%" y="2453" width="0.0211%" height="15" fill="rgb(209,72,54)" fg:x="241547" fg:w="51"/><text x="100.1367%" y="2463.50"></text></g><g><title>rocksdb::CompactionJob::SubcompactionState::ShouldStopBefore(rocksdb::Slice const&amp;, unsigned long) (33 samples, 0.01%)</title><rect x="99.9078%" y="2469" width="0.0136%" height="15" fill="rgb(226,19,45)" fg:x="241598" fg:w="33"/><text x="100.1578%" y="2479.50"></text></g><g><title>rocksdb::FileMetaData::UpdateBoundaries(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, rocksdb::ValueType) (33 samples, 0.01%)</title><rect x="99.9235%" y="2469" width="0.0136%" height="15" fill="rgb(246,7,45)" fg:x="241636" fg:w="33"/><text x="100.1735%" y="2479.50"></text></g><g><title>rocksdb::CompactionJob::Run() (11,412 samples, 4.72%)</title><rect x="95.2357%" y="2501" width="4.7192%" height="15" fill="rgb(225,45,2)" fg:x="230300" fg:w="11412"/><text x="95.4857%" y="2511.50">rocks..</text></g><g><title>rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*) (11,404 samples, 4.72%)</title><rect x="95.2390%" y="2485" width="4.7159%" height="15" fill="rgb(221,80,29)" fg:x="230308" fg:w="11404"/><text x="95.4890%" y="2495.50">rocks..</text></g><g><title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (43 samples, 0.02%)</title><rect x="99.9371%" y="2469" width="0.0178%" height="15" fill="rgb(228,11,19)" fg:x="241669" fg:w="43"/><text x="100.1871%" y="2479.50"></text></g><g><title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator=(std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;&amp;&amp;) (33 samples, 0.01%)</title><rect x="99.9413%" y="2453" width="0.0136%" height="15" fill="rgb(243,17,21)" fg:x="241679" fg:w="33"/><text x="100.1913%" y="2463.50"></text></g><g><title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator=(std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;&amp;&amp;) (33 samples, 0.01%)</title><rect x="99.9413%" y="2437" width="0.0136%" height="15" fill="rgb(243,88,8)" fg:x="241679" fg:w="33"/><text x="100.1913%" y="2447.50"></text></g><g><title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator=(std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;&amp;&amp;) (33 samples, 0.01%)</title><rect x="99.9413%" y="2421" width="0.0136%" height="15" fill="rgb(214,17,9)" fg:x="241679" fg:w="33"/><text x="100.1913%" y="2431.50"></text></g><g><title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset(char const*) (33 samples, 0.01%)</title><rect x="99.9413%" y="2405" width="0.0136%" height="15" fill="rgb(232,169,15)" fg:x="241679" fg:w="33"/><text x="100.1913%" y="2415.50"></text></g><g><title>rocksdb:low (11,421 samples, 4.72%)</title><rect x="95.2328%" y="2645" width="4.7229%" height="15" fill="rgb(232,86,53)" fg:x="230293" fg:w="11421"/><text x="95.4828%" y="2655.50">rocksd..</text></g><g><title>__GI___clone3 (11,416 samples, 4.72%)</title><rect x="95.2349%" y="2629" width="4.7208%" height="15" fill="rgb(222,100,4)" fg:x="230298" fg:w="11416"/><text x="95.4849%" y="2639.50">__GI__..</text></g><g><title>start_thread (11,416 samples, 4.72%)</title><rect x="95.2349%" y="2613" width="4.7208%" height="15" fill="rgb(253,151,38)" fg:x="230298" fg:w="11416"/><text x="95.4849%" y="2623.50">start_..</text></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*) (11,416 samples, 4.72%)</title><rect x="95.2349%" y="2597" width="4.7208%" height="15" fill="rgb(238,215,29)" fg:x="230298" fg:w="11416"/><text x="95.4849%" y="2607.50">rocksd..</text></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long) (11,416 samples, 4.72%)</title><rect x="95.2349%" y="2581" width="4.7208%" height="15" fill="rgb(205,128,53)" fg:x="230298" fg:w="11416"/><text x="95.4849%" y="2591.50">rocksd..</text></g><g><title>std::function&lt;void ()&gt;::operator()() const (11,416 samples, 4.72%)</title><rect x="95.2349%" y="2565" width="4.7208%" height="15" fill="rgb(248,183,14)" fg:x="230298" fg:w="11416"/><text x="95.4849%" y="2575.50">std::f..</text></g><g><title>rocksdb::DBImpl::BGWorkCompaction(void*) (11,416 samples, 4.72%)</title><rect x="95.2349%" y="2549" width="4.7208%" height="15" fill="rgb(244,172,35)" fg:x="230298" fg:w="11416"/><text x="95.4849%" y="2559.50">rocksd..</text></g><g><title>rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority) (11,416 samples, 4.72%)</title><rect x="95.2349%" y="2533" width="4.7208%" height="15" fill="rgb(234,93,19)" fg:x="230298" fg:w="11416"/><text x="95.4849%" y="2543.50">rocksd..</text></g><g><title>rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority) (11,416 samples, 4.72%)</title><rect x="95.2349%" y="2517" width="4.7208%" height="15" fill="rgb(227,109,7)" fg:x="230298" fg:w="11416"/><text x="95.4849%" y="2527.50">rocksd..</text></g><g><title>all (241,821 samples, 100%)</title><rect x="0.0000%" y="2661" width="100.0000%" height="15" fill="rgb(233,136,54)" fg:x="0" fg:w="241821"/><text x="0.2500%" y="2671.50"></text></g></svg></svg>