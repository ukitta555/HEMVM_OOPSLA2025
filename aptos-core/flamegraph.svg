<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="3254" onload="init(evt)" viewBox="0 0 1200 3254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="3254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="3237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="3237.00"> </text><svg id="frames" x="10" width="1180" total_samples="78417"><g><title>&lt;aptos_crypto::hash::TransactionAccumulatorHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (21 samples, 0.03%)</title><rect x="0.0102%" y="2869" width="0.0268%" height="15" fill="rgb(227,0,7)" fg:x="8" fg:w="21"/><text x="0.2602%" y="2879.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (21 samples, 0.03%)</title><rect x="0.0102%" y="2853" width="0.0268%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="21"/><text x="0.2602%" y="2863.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (20 samples, 0.03%)</title><rect x="0.0115%" y="2837" width="0.0255%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="20"/><text x="0.2615%" y="2847.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (20 samples, 0.03%)</title><rect x="0.0115%" y="2821" width="0.0255%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="20"/><text x="0.2615%" y="2831.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (20 samples, 0.03%)</title><rect x="0.0115%" y="2805" width="0.0255%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="20"/><text x="0.2615%" y="2815.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (20 samples, 0.03%)</title><rect x="0.0115%" y="2789" width="0.0255%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="20"/><text x="0.2615%" y="2799.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (20 samples, 0.03%)</title><rect x="0.0115%" y="2773" width="0.0255%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="20"/><text x="0.2615%" y="2783.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (20 samples, 0.03%)</title><rect x="0.0115%" y="2757" width="0.0255%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="20"/><text x="0.2615%" y="2767.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (20 samples, 0.03%)</title><rect x="0.0115%" y="2741" width="0.0255%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="20"/><text x="0.2615%" y="2751.50"></text></g><g><title>aptos_accumulator::MerkleAccumulator&lt;R,H&gt;::append (23 samples, 0.03%)</title><rect x="0.0089%" y="2933" width="0.0293%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="23"/><text x="0.2589%" y="2943.50"></text></g><g><title>aptos_accumulator::MerkleAccumulatorView&lt;R,H&gt;::append (23 samples, 0.03%)</title><rect x="0.0089%" y="2917" width="0.0293%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="23"/><text x="0.2589%" y="2927.50"></text></g><g><title>aptos_accumulator::MerkleAccumulatorView&lt;R,H&gt;::hash_internal_node (22 samples, 0.03%)</title><rect x="0.0102%" y="2901" width="0.0281%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="22"/><text x="0.2602%" y="2911.50"></text></g><g><title>&lt;aptos_types::proof::MerkleTreeInternalNode&lt;H&gt; as aptos_crypto::hash::CryptoHash&gt;::hash (22 samples, 0.03%)</title><rect x="0.0102%" y="2885" width="0.0281%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="22"/><text x="0.2602%" y="2895.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (20 samples, 0.03%)</title><rect x="0.0383%" y="2741" width="0.0255%" height="15" fill="rgb(206,188,39)" fg:x="30" fg:w="20"/><text x="0.2883%" y="2751.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (20 samples, 0.03%)</title><rect x="0.0383%" y="2725" width="0.0255%" height="15" fill="rgb(217,207,13)" fg:x="30" fg:w="20"/><text x="0.2883%" y="2735.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (20 samples, 0.03%)</title><rect x="0.0383%" y="2709" width="0.0255%" height="15" fill="rgb(231,73,38)" fg:x="30" fg:w="20"/><text x="0.2883%" y="2719.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (20 samples, 0.03%)</title><rect x="0.0383%" y="2693" width="0.0255%" height="15" fill="rgb(225,20,46)" fg:x="30" fg:w="20"/><text x="0.2883%" y="2703.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (20 samples, 0.03%)</title><rect x="0.0383%" y="2677" width="0.0255%" height="15" fill="rgb(210,31,41)" fg:x="30" fg:w="20"/><text x="0.2883%" y="2687.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (19 samples, 0.02%)</title><rect x="0.0395%" y="2661" width="0.0242%" height="15" fill="rgb(221,200,47)" fg:x="31" fg:w="19"/><text x="0.2895%" y="2671.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (19 samples, 0.02%)</title><rect x="0.0395%" y="2645" width="0.0242%" height="15" fill="rgb(226,26,5)" fg:x="31" fg:w="19"/><text x="0.2895%" y="2655.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (19 samples, 0.02%)</title><rect x="0.0395%" y="2629" width="0.0242%" height="15" fill="rgb(249,33,26)" fg:x="31" fg:w="19"/><text x="0.2895%" y="2639.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (19 samples, 0.02%)</title><rect x="0.0395%" y="2613" width="0.0242%" height="15" fill="rgb(235,183,28)" fg:x="31" fg:w="19"/><text x="0.2895%" y="2623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.01%)</title><rect x="0.0510%" y="2597" width="0.0128%" height="15" fill="rgb(221,5,38)" fg:x="40" fg:w="10"/><text x="0.3010%" y="2607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (61 samples, 0.08%)</title><rect x="0.0383%" y="2933" width="0.0778%" height="15" fill="rgb(247,18,42)" fg:x="30" fg:w="61"/><text x="0.2883%" y="2943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (61 samples, 0.08%)</title><rect x="0.0383%" y="2917" width="0.0778%" height="15" fill="rgb(241,131,45)" fg:x="30" fg:w="61"/><text x="0.2883%" y="2927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (61 samples, 0.08%)</title><rect x="0.0383%" y="2901" width="0.0778%" height="15" fill="rgb(249,31,29)" fg:x="30" fg:w="61"/><text x="0.2883%" y="2911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (61 samples, 0.08%)</title><rect x="0.0383%" y="2885" width="0.0778%" height="15" fill="rgb(225,111,53)" fg:x="30" fg:w="61"/><text x="0.2883%" y="2895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (61 samples, 0.08%)</title><rect x="0.0383%" y="2869" width="0.0778%" height="15" fill="rgb(238,160,17)" fg:x="30" fg:w="61"/><text x="0.2883%" y="2879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (61 samples, 0.08%)</title><rect x="0.0383%" y="2853" width="0.0778%" height="15" fill="rgb(214,148,48)" fg:x="30" fg:w="61"/><text x="0.2883%" y="2863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (61 samples, 0.08%)</title><rect x="0.0383%" y="2837" width="0.0778%" height="15" fill="rgb(232,36,49)" fg:x="30" fg:w="61"/><text x="0.2883%" y="2847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 0.08%)</title><rect x="0.0383%" y="2821" width="0.0778%" height="15" fill="rgb(209,103,24)" fg:x="30" fg:w="61"/><text x="0.2883%" y="2831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 0.08%)</title><rect x="0.0383%" y="2805" width="0.0778%" height="15" fill="rgb(229,88,8)" fg:x="30" fg:w="61"/><text x="0.2883%" y="2815.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (61 samples, 0.08%)</title><rect x="0.0383%" y="2789" width="0.0778%" height="15" fill="rgb(213,181,19)" fg:x="30" fg:w="61"/><text x="0.2883%" y="2799.50"></text></g><g><title>core::ops::function::FnMut::call_mut (61 samples, 0.08%)</title><rect x="0.0383%" y="2773" width="0.0778%" height="15" fill="rgb(254,191,54)" fg:x="30" fg:w="61"/><text x="0.2883%" y="2783.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfo as aptos_crypto::hash::CryptoHash&gt;::hash (61 samples, 0.08%)</title><rect x="0.0383%" y="2757" width="0.0778%" height="15" fill="rgb(241,83,37)" fg:x="30" fg:w="61"/><text x="0.2883%" y="2767.50"></text></g><g><title>bcs::ser::serialize_into (41 samples, 0.05%)</title><rect x="0.0638%" y="2741" width="0.0523%" height="15" fill="rgb(233,36,39)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2751.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (41 samples, 0.05%)</title><rect x="0.0638%" y="2725" width="0.0523%" height="15" fill="rgb(226,3,54)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2735.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfo&gt;::serialize (41 samples, 0.05%)</title><rect x="0.0638%" y="2709" width="0.0523%" height="15" fill="rgb(245,192,40)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (41 samples, 0.05%)</title><rect x="0.0638%" y="2693" width="0.0523%" height="15" fill="rgb(238,167,29)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2703.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfoV0&gt;::serialize (41 samples, 0.05%)</title><rect x="0.0638%" y="2677" width="0.0523%" height="15" fill="rgb(232,182,51)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2687.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (41 samples, 0.05%)</title><rect x="0.0638%" y="2661" width="0.0523%" height="15" fill="rgb(231,60,39)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2671.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize (41 samples, 0.05%)</title><rect x="0.0638%" y="2645" width="0.0523%" height="15" fill="rgb(208,69,12)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2655.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::_::&lt;impl serde::ser::Serialize for &lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::Value&gt;::serialize (41 samples, 0.05%)</title><rect x="0.0638%" y="2629" width="0.0523%" height="15" fill="rgb(235,93,37)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2639.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (41 samples, 0.05%)</title><rect x="0.0638%" y="2613" width="0.0523%" height="15" fill="rgb(213,116,39)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (41 samples, 0.05%)</title><rect x="0.0638%" y="2597" width="0.0523%" height="15" fill="rgb(222,207,29)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (41 samples, 0.05%)</title><rect x="0.0638%" y="2581" width="0.0523%" height="15" fill="rgb(206,96,30)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2591.50"></text></g><g><title> 32]&gt;::serialize (41 samples, 0.05%)</title><rect x="0.0638%" y="2565" width="0.0523%" height="15" fill="rgb(218,138,4)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2575.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (41 samples, 0.05%)</title><rect x="0.0638%" y="2549" width="0.0523%" height="15" fill="rgb(250,191,14)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (41 samples, 0.05%)</title><rect x="0.0638%" y="2533" width="0.0523%" height="15" fill="rgb(239,60,40)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2543.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (41 samples, 0.05%)</title><rect x="0.0638%" y="2517" width="0.0523%" height="15" fill="rgb(206,27,48)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2527.50"></text></g><g><title>std::io::Write::write_all (41 samples, 0.05%)</title><rect x="0.0638%" y="2501" width="0.0523%" height="15" fill="rgb(225,35,8)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2511.50"></text></g><g><title>&lt;aptos_types::waypoint::Ledger2WaypointConverterHasher as std::io::Write&gt;::write (41 samples, 0.05%)</title><rect x="0.0638%" y="2485" width="0.0523%" height="15" fill="rgb(250,213,24)" fg:x="50" fg:w="41"/><text x="0.3138%" y="2495.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (30 samples, 0.04%)</title><rect x="0.0778%" y="2469" width="0.0383%" height="15" fill="rgb(247,123,22)" fg:x="61" fg:w="30"/><text x="0.3278%" y="2479.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (18 samples, 0.02%)</title><rect x="0.0931%" y="2453" width="0.0230%" height="15" fill="rgb(231,138,38)" fg:x="73" fg:w="18"/><text x="0.3431%" y="2463.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (18 samples, 0.02%)</title><rect x="0.0931%" y="2437" width="0.0230%" height="15" fill="rgb(231,145,46)" fg:x="73" fg:w="18"/><text x="0.3431%" y="2447.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (17 samples, 0.02%)</title><rect x="0.0944%" y="2421" width="0.0217%" height="15" fill="rgb(251,118,11)" fg:x="74" fg:w="17"/><text x="0.3444%" y="2431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (8 samples, 0.01%)</title><rect x="0.1326%" y="2805" width="0.0102%" height="15" fill="rgb(217,147,25)" fg:x="104" fg:w="8"/><text x="0.3826%" y="2815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.01%)</title><rect x="0.1326%" y="2789" width="0.0102%" height="15" fill="rgb(247,81,37)" fg:x="104" fg:w="8"/><text x="0.3826%" y="2799.50"></text></g><g><title>aptos_infallible::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.02%)</title><rect x="0.1326%" y="2853" width="0.0153%" height="15" fill="rgb(209,12,38)" fg:x="104" fg:w="12"/><text x="0.3826%" y="2863.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.02%)</title><rect x="0.1326%" y="2837" width="0.0153%" height="15" fill="rgb(227,1,9)" fg:x="104" fg:w="12"/><text x="0.3826%" y="2847.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (12 samples, 0.02%)</title><rect x="0.1326%" y="2821" width="0.0153%" height="15" fill="rgb(248,47,43)" fg:x="104" fg:w="12"/><text x="0.3826%" y="2831.50"></text></g><g><title>prometheus::histogram::Histogram::observe (20 samples, 0.03%)</title><rect x="0.1492%" y="2805" width="0.0255%" height="15" fill="rgb(221,10,30)" fg:x="117" fg:w="20"/><text x="0.3992%" y="2815.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (20 samples, 0.03%)</title><rect x="0.1492%" y="2789" width="0.0255%" height="15" fill="rgb(210,229,1)" fg:x="117" fg:w="20"/><text x="0.3992%" y="2799.50"></text></g><g><title>&lt;prometheus::atomic64::AtomicU64 as prometheus::atomic64::Atomic&gt;::inc_by (8 samples, 0.01%)</title><rect x="0.1645%" y="2773" width="0.0102%" height="15" fill="rgb(222,148,37)" fg:x="129" fg:w="8"/><text x="0.4145%" y="2783.50"></text></g><g><title>prometheus::atomic64::AtomicU64::inc_by_with_ordering (8 samples, 0.01%)</title><rect x="0.1645%" y="2757" width="0.0102%" height="15" fill="rgb(234,67,33)" fg:x="129" fg:w="8"/><text x="0.4145%" y="2767.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (8 samples, 0.01%)</title><rect x="0.1645%" y="2741" width="0.0102%" height="15" fill="rgb(247,98,35)" fg:x="129" fg:w="8"/><text x="0.4145%" y="2751.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.01%)</title><rect x="0.1645%" y="2725" width="0.0102%" height="15" fill="rgb(247,138,52)" fg:x="129" fg:w="8"/><text x="0.4145%" y="2735.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="0.1492%" y="2837" width="0.0281%" height="15" fill="rgb(213,79,30)" fg:x="117" fg:w="22"/><text x="0.3992%" y="2847.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (22 samples, 0.03%)</title><rect x="0.1492%" y="2821" width="0.0281%" height="15" fill="rgb(246,177,23)" fg:x="117" fg:w="22"/><text x="0.3992%" y="2831.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (25 samples, 0.03%)</title><rect x="0.1492%" y="2853" width="0.0319%" height="15" fill="rgb(230,62,27)" fg:x="117" fg:w="25"/><text x="0.3992%" y="2863.50"></text></g><g><title>aptos_db::ledger_store::LedgerStore::put_transaction_infos (148 samples, 0.19%)</title><rect x="0.0089%" y="2949" width="0.1887%" height="15" fill="rgb(216,154,8)" fg:x="7" fg:w="148"/><text x="0.2589%" y="2959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (64 samples, 0.08%)</title><rect x="0.1160%" y="2933" width="0.0816%" height="15" fill="rgb(244,35,45)" fg:x="91" fg:w="64"/><text x="0.3660%" y="2943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (64 samples, 0.08%)</title><rect x="0.1160%" y="2917" width="0.0816%" height="15" fill="rgb(251,115,12)" fg:x="91" fg:w="64"/><text x="0.3660%" y="2927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (64 samples, 0.08%)</title><rect x="0.1160%" y="2901" width="0.0816%" height="15" fill="rgb(240,54,50)" fg:x="91" fg:w="64"/><text x="0.3660%" y="2911.50"></text></g><g><title>aptos_db::ledger_store::LedgerStore::put_transaction_infos::{{closure}} (64 samples, 0.08%)</title><rect x="0.1160%" y="2885" width="0.0816%" height="15" fill="rgb(233,84,52)" fg:x="91" fg:w="64"/><text x="0.3660%" y="2895.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (64 samples, 0.08%)</title><rect x="0.1160%" y="2869" width="0.0816%" height="15" fill="rgb(207,117,47)" fg:x="91" fg:w="64"/><text x="0.3660%" y="2879.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="0.2053%" y="2917" width="0.0115%" height="15" fill="rgb(249,43,39)" fg:x="161" fg:w="9"/><text x="0.4553%" y="2927.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="0.2066%" y="2901" width="0.0102%" height="15" fill="rgb(209,38,44)" fg:x="162" fg:w="8"/><text x="0.4566%" y="2911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="0.2066%" y="2885" width="0.0102%" height="15" fill="rgb(236,212,23)" fg:x="162" fg:w="8"/><text x="0.4566%" y="2895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="0.2066%" y="2869" width="0.0102%" height="15" fill="rgb(242,79,21)" fg:x="162" fg:w="8"/><text x="0.4566%" y="2879.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="0.2066%" y="2853" width="0.0102%" height="15" fill="rgb(211,96,35)" fg:x="162" fg:w="8"/><text x="0.4566%" y="2863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="0.2066%" y="2837" width="0.0102%" height="15" fill="rgb(253,215,40)" fg:x="162" fg:w="8"/><text x="0.4566%" y="2847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="0.2066%" y="2821" width="0.0102%" height="15" fill="rgb(211,81,21)" fg:x="162" fg:w="8"/><text x="0.4566%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="0.2066%" y="2805" width="0.0102%" height="15" fill="rgb(208,190,38)" fg:x="162" fg:w="8"/><text x="0.4566%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.01%)</title><rect x="0.2066%" y="2789" width="0.0102%" height="15" fill="rgb(235,213,38)" fg:x="162" fg:w="8"/><text x="0.4566%" y="2799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="0.2066%" y="2773" width="0.0102%" height="15" fill="rgb(237,122,38)" fg:x="162" fg:w="8"/><text x="0.4566%" y="2783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="0.2066%" y="2757" width="0.0102%" height="15" fill="rgb(244,218,35)" fg:x="162" fg:w="8"/><text x="0.4566%" y="2767.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="0.2066%" y="2741" width="0.0102%" height="15" fill="rgb(240,68,47)" fg:x="162" fg:w="8"/><text x="0.4566%" y="2751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 0.03%)</title><rect x="0.2206%" y="2901" width="0.0268%" height="15" fill="rgb(210,16,53)" fg:x="173" fg:w="21"/><text x="0.4706%" y="2911.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="0.2372%" y="2885" width="0.0102%" height="15" fill="rgb(235,124,12)" fg:x="186" fg:w="8"/><text x="0.4872%" y="2895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.01%)</title><rect x="0.2487%" y="2837" width="0.0115%" height="15" fill="rgb(224,169,11)" fg:x="195" fg:w="9"/><text x="0.4987%" y="2847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="0.2487%" y="2821" width="0.0115%" height="15" fill="rgb(250,166,2)" fg:x="195" fg:w="9"/><text x="0.4987%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="0.2487%" y="2805" width="0.0115%" height="15" fill="rgb(242,216,29)" fg:x="195" fg:w="9"/><text x="0.4987%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="0.2487%" y="2789" width="0.0115%" height="15" fill="rgb(230,116,27)" fg:x="195" fg:w="9"/><text x="0.4987%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="0.2487%" y="2773" width="0.0115%" height="15" fill="rgb(228,99,48)" fg:x="195" fg:w="9"/><text x="0.4987%" y="2783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (11 samples, 0.01%)</title><rect x="0.2487%" y="2869" width="0.0140%" height="15" fill="rgb(253,11,6)" fg:x="195" fg:w="11"/><text x="0.4987%" y="2879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="0.2487%" y="2853" width="0.0140%" height="15" fill="rgb(247,143,39)" fg:x="195" fg:w="11"/><text x="0.4987%" y="2863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="0.2691%" y="2645" width="0.0102%" height="15" fill="rgb(236,97,10)" fg:x="211" fg:w="8"/><text x="0.5191%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="0.2691%" y="2629" width="0.0102%" height="15" fill="rgb(233,208,19)" fg:x="211" fg:w="8"/><text x="0.5191%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.01%)</title><rect x="0.2691%" y="2613" width="0.0102%" height="15" fill="rgb(216,164,2)" fg:x="211" fg:w="8"/><text x="0.5191%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.01%)</title><rect x="0.2691%" y="2597" width="0.0102%" height="15" fill="rgb(220,129,5)" fg:x="211" fg:w="8"/><text x="0.5191%" y="2607.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (9 samples, 0.01%)</title><rect x="0.2691%" y="2741" width="0.0115%" height="15" fill="rgb(242,17,10)" fg:x="211" fg:w="9"/><text x="0.5191%" y="2751.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (9 samples, 0.01%)</title><rect x="0.2691%" y="2725" width="0.0115%" height="15" fill="rgb(242,107,0)" fg:x="211" fg:w="9"/><text x="0.5191%" y="2735.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (9 samples, 0.01%)</title><rect x="0.2691%" y="2709" width="0.0115%" height="15" fill="rgb(251,28,31)" fg:x="211" fg:w="9"/><text x="0.5191%" y="2719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.01%)</title><rect x="0.2691%" y="2693" width="0.0115%" height="15" fill="rgb(233,223,10)" fg:x="211" fg:w="9"/><text x="0.5191%" y="2703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.01%)</title><rect x="0.2691%" y="2677" width="0.0115%" height="15" fill="rgb(215,21,27)" fg:x="211" fg:w="9"/><text x="0.5191%" y="2687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.01%)</title><rect x="0.2691%" y="2661" width="0.0115%" height="15" fill="rgb(232,23,21)" fg:x="211" fg:w="9"/><text x="0.5191%" y="2671.50"></text></g><g><title>&lt;aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::AccessPath&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (16 samples, 0.02%)</title><rect x="0.2691%" y="2805" width="0.0204%" height="15" fill="rgb(244,5,23)" fg:x="211" fg:w="16"/><text x="0.5191%" y="2815.50"></text></g><g><title>serde_bytes::serialize (16 samples, 0.02%)</title><rect x="0.2691%" y="2789" width="0.0204%" height="15" fill="rgb(226,81,46)" fg:x="211" fg:w="16"/><text x="0.5191%" y="2799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (16 samples, 0.02%)</title><rect x="0.2691%" y="2773" width="0.0204%" height="15" fill="rgb(247,70,30)" fg:x="211" fg:w="16"/><text x="0.5191%" y="2783.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (16 samples, 0.02%)</title><rect x="0.2691%" y="2757" width="0.0204%" height="15" fill="rgb(212,68,19)" fg:x="211" fg:w="16"/><text x="0.5191%" y="2767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.02%)</title><rect x="0.2997%" y="2549" width="0.0166%" height="15" fill="rgb(240,187,13)" fg:x="235" fg:w="13"/><text x="0.5497%" y="2559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.02%)</title><rect x="0.2997%" y="2533" width="0.0166%" height="15" fill="rgb(223,113,26)" fg:x="235" fg:w="13"/><text x="0.5497%" y="2543.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.02%)</title><rect x="0.2997%" y="2517" width="0.0166%" height="15" fill="rgb(206,192,2)" fg:x="235" fg:w="13"/><text x="0.5497%" y="2527.50"></text></g><g><title>rallocx (13 samples, 0.02%)</title><rect x="0.2997%" y="2501" width="0.0166%" height="15" fill="rgb(241,108,4)" fg:x="235" fg:w="13"/><text x="0.5497%" y="2511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (20 samples, 0.03%)</title><rect x="0.2933%" y="2629" width="0.0255%" height="15" fill="rgb(247,173,49)" fg:x="230" fg:w="20"/><text x="0.5433%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.03%)</title><rect x="0.2933%" y="2613" width="0.0255%" height="15" fill="rgb(224,114,35)" fg:x="230" fg:w="20"/><text x="0.5433%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.03%)</title><rect x="0.2933%" y="2597" width="0.0255%" height="15" fill="rgb(245,159,27)" fg:x="230" fg:w="20"/><text x="0.5433%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.02%)</title><rect x="0.2959%" y="2581" width="0.0230%" height="15" fill="rgb(245,172,44)" fg:x="232" fg:w="18"/><text x="0.5459%" y="2591.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="0.2997%" y="2565" width="0.0191%" height="15" fill="rgb(236,23,11)" fg:x="235" fg:w="15"/><text x="0.5497%" y="2575.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::AccessPath&gt;::serialize (41 samples, 0.05%)</title><rect x="0.2691%" y="2837" width="0.0523%" height="15" fill="rgb(205,117,38)" fg:x="211" fg:w="41"/><text x="0.5191%" y="2847.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (41 samples, 0.05%)</title><rect x="0.2691%" y="2821" width="0.0523%" height="15" fill="rgb(237,72,25)" fg:x="211" fg:w="41"/><text x="0.5191%" y="2831.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (25 samples, 0.03%)</title><rect x="0.2895%" y="2805" width="0.0319%" height="15" fill="rgb(244,70,9)" fg:x="227" fg:w="25"/><text x="0.5395%" y="2815.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (25 samples, 0.03%)</title><rect x="0.2895%" y="2789" width="0.0319%" height="15" fill="rgb(217,125,39)" fg:x="227" fg:w="25"/><text x="0.5395%" y="2799.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (24 samples, 0.03%)</title><rect x="0.2908%" y="2773" width="0.0306%" height="15" fill="rgb(235,36,10)" fg:x="228" fg:w="24"/><text x="0.5408%" y="2783.50"></text></g><g><title> 32]&gt;::serialize (24 samples, 0.03%)</title><rect x="0.2908%" y="2757" width="0.0306%" height="15" fill="rgb(251,123,47)" fg:x="228" fg:w="24"/><text x="0.5408%" y="2767.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (24 samples, 0.03%)</title><rect x="0.2908%" y="2741" width="0.0306%" height="15" fill="rgb(221,13,13)" fg:x="228" fg:w="24"/><text x="0.5408%" y="2751.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (24 samples, 0.03%)</title><rect x="0.2908%" y="2725" width="0.0306%" height="15" fill="rgb(238,131,9)" fg:x="228" fg:w="24"/><text x="0.5408%" y="2735.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (24 samples, 0.03%)</title><rect x="0.2908%" y="2709" width="0.0306%" height="15" fill="rgb(211,50,8)" fg:x="228" fg:w="24"/><text x="0.5408%" y="2719.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (24 samples, 0.03%)</title><rect x="0.2908%" y="2693" width="0.0306%" height="15" fill="rgb(245,182,24)" fg:x="228" fg:w="24"/><text x="0.5408%" y="2703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (24 samples, 0.03%)</title><rect x="0.2908%" y="2677" width="0.0306%" height="15" fill="rgb(242,14,37)" fg:x="228" fg:w="24"/><text x="0.5408%" y="2687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (24 samples, 0.03%)</title><rect x="0.2908%" y="2661" width="0.0306%" height="15" fill="rgb(246,228,12)" fg:x="228" fg:w="24"/><text x="0.5408%" y="2671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (24 samples, 0.03%)</title><rect x="0.2908%" y="2645" width="0.0306%" height="15" fill="rgb(213,55,15)" fg:x="228" fg:w="24"/><text x="0.5408%" y="2655.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::encode (62 samples, 0.08%)</title><rect x="0.2474%" y="2885" width="0.0791%" height="15" fill="rgb(209,9,3)" fg:x="194" fg:w="62"/><text x="0.4974%" y="2895.50"></text></g><g><title>bcs::ser::to_bytes (45 samples, 0.06%)</title><rect x="0.2691%" y="2869" width="0.0574%" height="15" fill="rgb(230,59,30)" fg:x="211" fg:w="45"/><text x="0.5191%" y="2879.50"></text></g><g><title>bcs::ser::serialize_into (45 samples, 0.06%)</title><rect x="0.2691%" y="2853" width="0.0574%" height="15" fill="rgb(209,121,21)" fg:x="211" fg:w="45"/><text x="0.5191%" y="2863.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u64 (10 samples, 0.01%)</title><rect x="0.3265%" y="2885" width="0.0128%" height="15" fill="rgb(220,109,13)" fg:x="256" fg:w="10"/><text x="0.5765%" y="2895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (10 samples, 0.01%)</title><rect x="0.3265%" y="2869" width="0.0128%" height="15" fill="rgb(232,18,1)" fg:x="256" fg:w="10"/><text x="0.5765%" y="2879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.01%)</title><rect x="0.3265%" y="2853" width="0.0128%" height="15" fill="rgb(215,41,42)" fg:x="256" fg:w="10"/><text x="0.5765%" y="2863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.01%)</title><rect x="0.3265%" y="2837" width="0.0128%" height="15" fill="rgb(224,123,36)" fg:x="256" fg:w="10"/><text x="0.5765%" y="2847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.01%)</title><rect x="0.3265%" y="2821" width="0.0128%" height="15" fill="rgb(240,125,3)" fg:x="256" fg:w="10"/><text x="0.5765%" y="2831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="0.3265%" y="2805" width="0.0128%" height="15" fill="rgb(205,98,50)" fg:x="256" fg:w="10"/><text x="0.5765%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="0.3265%" y="2789" width="0.0128%" height="15" fill="rgb(205,185,37)" fg:x="256" fg:w="10"/><text x="0.5765%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.01%)</title><rect x="0.3265%" y="2773" width="0.0128%" height="15" fill="rgb(238,207,15)" fg:x="256" fg:w="10"/><text x="0.5765%" y="2783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="0.3265%" y="2757" width="0.0128%" height="15" fill="rgb(213,199,42)" fg:x="256" fg:w="10"/><text x="0.5765%" y="2767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.01%)</title><rect x="0.3430%" y="2741" width="0.0128%" height="15" fill="rgb(235,201,11)" fg:x="269" fg:w="10"/><text x="0.5930%" y="2751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.01%)</title><rect x="0.3430%" y="2725" width="0.0128%" height="15" fill="rgb(207,46,11)" fg:x="269" fg:w="10"/><text x="0.5930%" y="2735.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.01%)</title><rect x="0.3430%" y="2709" width="0.0128%" height="15" fill="rgb(241,35,35)" fg:x="269" fg:w="10"/><text x="0.5930%" y="2719.50"></text></g><g><title>rallocx (10 samples, 0.01%)</title><rect x="0.3430%" y="2693" width="0.0128%" height="15" fill="rgb(243,32,47)" fg:x="269" fg:w="10"/><text x="0.5930%" y="2703.50"></text></g><g><title>aptos_db::schema::stale_state_value_index::&lt;impl aptos_schemadb::schema::KeyCodec&lt;aptos_db::schema::stale_state_value_index::StaleStateValueIndexSchema&gt; for aptos_types::state_store::state_value::StaleStateValueIndex&gt;::encode_key (86 samples, 0.11%)</title><rect x="0.2474%" y="2901" width="0.1097%" height="15" fill="rgb(247,202,23)" fg:x="194" fg:w="86"/><text x="0.4974%" y="2911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.01%)</title><rect x="0.3430%" y="2885" width="0.0140%" height="15" fill="rgb(219,102,11)" fg:x="269" fg:w="11"/><text x="0.5930%" y="2895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.01%)</title><rect x="0.3430%" y="2869" width="0.0140%" height="15" fill="rgb(243,110,44)" fg:x="269" fg:w="11"/><text x="0.5930%" y="2879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="0.3430%" y="2853" width="0.0140%" height="15" fill="rgb(222,74,54)" fg:x="269" fg:w="11"/><text x="0.5930%" y="2863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.01%)</title><rect x="0.3430%" y="2837" width="0.0140%" height="15" fill="rgb(216,99,12)" fg:x="269" fg:w="11"/><text x="0.5930%" y="2847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="0.3430%" y="2821" width="0.0140%" height="15" fill="rgb(226,22,26)" fg:x="269" fg:w="11"/><text x="0.5930%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="0.3430%" y="2805" width="0.0140%" height="15" fill="rgb(217,163,10)" fg:x="269" fg:w="11"/><text x="0.5930%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="0.3430%" y="2789" width="0.0140%" height="15" fill="rgb(213,25,53)" fg:x="269" fg:w="11"/><text x="0.5930%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="0.3430%" y="2773" width="0.0140%" height="15" fill="rgb(252,105,26)" fg:x="269" fg:w="11"/><text x="0.5930%" y="2783.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="0.3430%" y="2757" width="0.0140%" height="15" fill="rgb(220,39,43)" fg:x="269" fg:w="11"/><text x="0.5930%" y="2767.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (22 samples, 0.03%)</title><rect x="0.3571%" y="2853" width="0.0281%" height="15" fill="rgb(229,68,48)" fg:x="280" fg:w="22"/><text x="0.6071%" y="2863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.03%)</title><rect x="0.3571%" y="2837" width="0.0281%" height="15" fill="rgb(252,8,32)" fg:x="280" fg:w="22"/><text x="0.6071%" y="2847.50"></text></g><g><title>aptos_infallible::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.04%)</title><rect x="0.3571%" y="2901" width="0.0408%" height="15" fill="rgb(223,20,43)" fg:x="280" fg:w="32"/><text x="0.6071%" y="2911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.04%)</title><rect x="0.3571%" y="2885" width="0.0408%" height="15" fill="rgb(229,81,49)" fg:x="280" fg:w="32"/><text x="0.6071%" y="2895.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (32 samples, 0.04%)</title><rect x="0.3571%" y="2869" width="0.0408%" height="15" fill="rgb(236,28,36)" fg:x="280" fg:w="32"/><text x="0.6071%" y="2879.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (10 samples, 0.01%)</title><rect x="0.3851%" y="2853" width="0.0128%" height="15" fill="rgb(249,185,26)" fg:x="302" fg:w="10"/><text x="0.6351%" y="2863.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (10 samples, 0.01%)</title><rect x="0.3851%" y="2837" width="0.0128%" height="15" fill="rgb(249,174,33)" fg:x="302" fg:w="10"/><text x="0.6351%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (69 samples, 0.09%)</title><rect x="0.3979%" y="2901" width="0.0880%" height="15" fill="rgb(233,201,37)" fg:x="312" fg:w="69"/><text x="0.6479%" y="2911.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (69 samples, 0.09%)</title><rect x="0.3979%" y="2885" width="0.0880%" height="15" fill="rgb(221,78,26)" fg:x="312" fg:w="69"/><text x="0.6479%" y="2895.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (69 samples, 0.09%)</title><rect x="0.3979%" y="2869" width="0.0880%" height="15" fill="rgb(250,127,30)" fg:x="312" fg:w="69"/><text x="0.6479%" y="2879.50"></text></g><g><title>prometheus::histogram::Histogram::observe (69 samples, 0.09%)</title><rect x="0.3979%" y="2853" width="0.0880%" height="15" fill="rgb(230,49,44)" fg:x="312" fg:w="69"/><text x="0.6479%" y="2863.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (69 samples, 0.09%)</title><rect x="0.3979%" y="2837" width="0.0880%" height="15" fill="rgb(229,67,23)" fg:x="312" fg:w="69"/><text x="0.6479%" y="2847.50"></text></g><g><title>prometheus::histogram::ShardAndCount::inc (36 samples, 0.05%)</title><rect x="0.4400%" y="2821" width="0.0459%" height="15" fill="rgb(249,83,47)" fg:x="345" fg:w="36"/><text x="0.6900%" y="2831.50"></text></g><g><title>prometheus::histogram::ShardAndCount::inc_by (36 samples, 0.05%)</title><rect x="0.4400%" y="2805" width="0.0459%" height="15" fill="rgb(215,43,3)" fg:x="345" fg:w="36"/><text x="0.6900%" y="2815.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (36 samples, 0.05%)</title><rect x="0.4400%" y="2789" width="0.0459%" height="15" fill="rgb(238,154,13)" fg:x="345" fg:w="36"/><text x="0.6900%" y="2799.50"></text></g><g><title>core::sync::atomic::atomic_add (36 samples, 0.05%)</title><rect x="0.4400%" y="2773" width="0.0459%" height="15" fill="rgb(219,56,2)" fg:x="345" fg:w="36"/><text x="0.6900%" y="2783.50"></text></g><g><title>&lt;prometheus::histogram::Histogram as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="0.4859%" y="2885" width="0.0153%" height="15" fill="rgb(233,0,4)" fg:x="381" fg:w="12"/><text x="0.7359%" y="2895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="0.4859%" y="2869" width="0.0153%" height="15" fill="rgb(235,30,7)" fg:x="381" fg:w="12"/><text x="0.7359%" y="2879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.02%)</title><rect x="0.4859%" y="2853" width="0.0153%" height="15" fill="rgb(250,79,13)" fg:x="381" fg:w="12"/><text x="0.7359%" y="2863.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.02%)</title><rect x="0.4859%" y="2837" width="0.0153%" height="15" fill="rgb(211,146,34)" fg:x="381" fg:w="12"/><text x="0.7359%" y="2847.50"></text></g><g><title>prometheus::histogram::Histogram::start_timer (13 samples, 0.02%)</title><rect x="0.4859%" y="2901" width="0.0166%" height="15" fill="rgb(228,22,38)" fg:x="381" fg:w="13"/><text x="0.7359%" y="2911.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (35 samples, 0.04%)</title><rect x="0.5024%" y="2853" width="0.0446%" height="15" fill="rgb(235,168,5)" fg:x="394" fg:w="35"/><text x="0.7524%" y="2863.50"></text></g><g><title>&lt;prometheus::histogram::Histogram as core::clone::Clone&gt;::clone (35 samples, 0.04%)</title><rect x="0.5024%" y="2837" width="0.0446%" height="15" fill="rgb(221,155,16)" fg:x="394" fg:w="35"/><text x="0.7524%" y="2847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.04%)</title><rect x="0.5024%" y="2821" width="0.0446%" height="15" fill="rgb(215,215,53)" fg:x="394" fg:w="35"/><text x="0.7524%" y="2831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (35 samples, 0.04%)</title><rect x="0.5024%" y="2805" width="0.0446%" height="15" fill="rgb(223,4,10)" fg:x="394" fg:w="35"/><text x="0.7524%" y="2815.50"></text></g><g><title>core::sync::atomic::atomic_add (35 samples, 0.04%)</title><rect x="0.5024%" y="2789" width="0.0446%" height="15" fill="rgb(234,103,6)" fg:x="394" fg:w="35"/><text x="0.7524%" y="2799.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (28 samples, 0.04%)</title><rect x="0.5535%" y="2853" width="0.0357%" height="15" fill="rgb(227,97,0)" fg:x="434" fg:w="28"/><text x="0.8035%" y="2863.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (28 samples, 0.04%)</title><rect x="0.5535%" y="2837" width="0.0357%" height="15" fill="rgb(234,150,53)" fg:x="434" fg:w="28"/><text x="0.8035%" y="2847.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (27 samples, 0.03%)</title><rect x="0.5547%" y="2821" width="0.0344%" height="15" fill="rgb(228,201,54)" fg:x="435" fg:w="27"/><text x="0.8047%" y="2831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (27 samples, 0.03%)</title><rect x="0.5547%" y="2805" width="0.0344%" height="15" fill="rgb(222,22,37)" fg:x="435" fg:w="27"/><text x="0.8047%" y="2815.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.03%)</title><rect x="0.5547%" y="2789" width="0.0344%" height="15" fill="rgb(237,53,32)" fg:x="435" fg:w="27"/><text x="0.8047%" y="2799.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (76 samples, 0.10%)</title><rect x="0.5024%" y="2901" width="0.0969%" height="15" fill="rgb(233,25,53)" fg:x="394" fg:w="76"/><text x="0.7524%" y="2911.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (76 samples, 0.10%)</title><rect x="0.5024%" y="2885" width="0.0969%" height="15" fill="rgb(210,40,34)" fg:x="394" fg:w="76"/><text x="0.7524%" y="2895.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (76 samples, 0.10%)</title><rect x="0.5024%" y="2869" width="0.0969%" height="15" fill="rgb(241,220,44)" fg:x="394" fg:w="76"/><text x="0.7524%" y="2879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.01%)</title><rect x="0.5892%" y="2853" width="0.0102%" height="15" fill="rgb(235,28,35)" fg:x="462" fg:w="8"/><text x="0.8392%" y="2863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.01%)</title><rect x="0.5892%" y="2837" width="0.0102%" height="15" fill="rgb(210,56,17)" fg:x="462" fg:w="8"/><text x="0.8392%" y="2847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.01%)</title><rect x="0.5892%" y="2821" width="0.0102%" height="15" fill="rgb(224,130,29)" fg:x="462" fg:w="8"/><text x="0.8392%" y="2831.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.01%)</title><rect x="0.5892%" y="2805" width="0.0102%" height="15" fill="rgb(235,212,8)" fg:x="462" fg:w="8"/><text x="0.8392%" y="2815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.01%)</title><rect x="0.5892%" y="2789" width="0.0102%" height="15" fill="rgb(223,33,50)" fg:x="462" fg:w="8"/><text x="0.8392%" y="2799.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (310 samples, 0.40%)</title><rect x="0.2181%" y="2917" width="0.3953%" height="15" fill="rgb(219,149,13)" fg:x="171" fg:w="310"/><text x="0.4681%" y="2927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11 samples, 0.01%)</title><rect x="0.5994%" y="2901" width="0.0140%" height="15" fill="rgb(250,156,29)" fg:x="470" fg:w="11"/><text x="0.8494%" y="2911.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11 samples, 0.01%)</title><rect x="0.5994%" y="2885" width="0.0140%" height="15" fill="rgb(216,193,19)" fg:x="470" fg:w="11"/><text x="0.8494%" y="2895.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (13 samples, 0.02%)</title><rect x="0.6414%" y="2389" width="0.0166%" height="15" fill="rgb(216,135,14)" fg:x="503" fg:w="13"/><text x="0.8914%" y="2399.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (13 samples, 0.02%)</title><rect x="0.6414%" y="2373" width="0.0166%" height="15" fill="rgb(241,47,5)" fg:x="503" fg:w="13"/><text x="0.8914%" y="2383.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (13 samples, 0.02%)</title><rect x="0.6414%" y="2357" width="0.0166%" height="15" fill="rgb(233,42,35)" fg:x="503" fg:w="13"/><text x="0.8914%" y="2367.50"></text></g><g><title> N]&gt;::hash (13 samples, 0.02%)</title><rect x="0.6414%" y="2341" width="0.0166%" height="15" fill="rgb(231,13,6)" fg:x="503" fg:w="13"/><text x="0.8914%" y="2351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (13 samples, 0.02%)</title><rect x="0.6414%" y="2325" width="0.0166%" height="15" fill="rgb(207,181,40)" fg:x="503" fg:w="13"/><text x="0.8914%" y="2335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (13 samples, 0.02%)</title><rect x="0.6414%" y="2309" width="0.0166%" height="15" fill="rgb(254,173,49)" fg:x="503" fg:w="13"/><text x="0.8914%" y="2319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="0.6414%" y="2293" width="0.0166%" height="15" fill="rgb(221,1,38)" fg:x="503" fg:w="13"/><text x="0.8914%" y="2303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="0.6414%" y="2277" width="0.0166%" height="15" fill="rgb(206,124,46)" fg:x="503" fg:w="13"/><text x="0.8914%" y="2287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="0.6414%" y="2261" width="0.0166%" height="15" fill="rgb(249,21,11)" fg:x="503" fg:w="13"/><text x="0.8914%" y="2271.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (32 samples, 0.04%)</title><rect x="0.6210%" y="2405" width="0.0408%" height="15" fill="rgb(222,201,40)" fg:x="487" fg:w="32"/><text x="0.8710%" y="2415.50"></text></g><g><title>hashbrown::map::make_hash (56 samples, 0.07%)</title><rect x="0.6172%" y="2469" width="0.0714%" height="15" fill="rgb(235,61,29)" fg:x="484" fg:w="56"/><text x="0.8672%" y="2479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (56 samples, 0.07%)</title><rect x="0.6172%" y="2453" width="0.0714%" height="15" fill="rgb(219,207,3)" fg:x="484" fg:w="56"/><text x="0.8672%" y="2463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (53 samples, 0.07%)</title><rect x="0.6210%" y="2437" width="0.0676%" height="15" fill="rgb(222,56,46)" fg:x="487" fg:w="53"/><text x="0.8710%" y="2447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (53 samples, 0.07%)</title><rect x="0.6210%" y="2421" width="0.0676%" height="15" fill="rgb(239,76,54)" fg:x="487" fg:w="53"/><text x="0.8710%" y="2431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.03%)</title><rect x="0.6618%" y="2405" width="0.0268%" height="15" fill="rgb(231,124,27)" fg:x="519" fg:w="21"/><text x="0.9118%" y="2415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21 samples, 0.03%)</title><rect x="0.6618%" y="2389" width="0.0268%" height="15" fill="rgb(249,195,6)" fg:x="519" fg:w="21"/><text x="0.9118%" y="2399.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (63 samples, 0.08%)</title><rect x="0.6172%" y="2581" width="0.0803%" height="15" fill="rgb(237,174,47)" fg:x="484" fg:w="63"/><text x="0.8672%" y="2591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (63 samples, 0.08%)</title><rect x="0.6172%" y="2565" width="0.0803%" height="15" fill="rgb(206,201,31)" fg:x="484" fg:w="63"/><text x="0.8672%" y="2575.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (63 samples, 0.08%)</title><rect x="0.6172%" y="2549" width="0.0803%" height="15" fill="rgb(231,57,52)" fg:x="484" fg:w="63"/><text x="0.8672%" y="2559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (63 samples, 0.08%)</title><rect x="0.6172%" y="2533" width="0.0803%" height="15" fill="rgb(248,177,22)" fg:x="484" fg:w="63"/><text x="0.8672%" y="2543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (63 samples, 0.08%)</title><rect x="0.6172%" y="2517" width="0.0803%" height="15" fill="rgb(215,211,37)" fg:x="484" fg:w="63"/><text x="0.8672%" y="2527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (63 samples, 0.08%)</title><rect x="0.6172%" y="2501" width="0.0803%" height="15" fill="rgb(241,128,51)" fg:x="484" fg:w="63"/><text x="0.8672%" y="2511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (63 samples, 0.08%)</title><rect x="0.6172%" y="2485" width="0.0803%" height="15" fill="rgb(227,165,31)" fg:x="484" fg:w="63"/><text x="0.8672%" y="2495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (65 samples, 0.08%)</title><rect x="0.6172%" y="2917" width="0.0829%" height="15" fill="rgb(228,167,24)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (65 samples, 0.08%)</title><rect x="0.6172%" y="2901" width="0.0829%" height="15" fill="rgb(228,143,12)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2911.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (65 samples, 0.08%)</title><rect x="0.6172%" y="2885" width="0.0829%" height="15" fill="rgb(249,149,8)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (65 samples, 0.08%)</title><rect x="0.6172%" y="2869" width="0.0829%" height="15" fill="rgb(243,35,44)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (65 samples, 0.08%)</title><rect x="0.6172%" y="2853" width="0.0829%" height="15" fill="rgb(246,89,9)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (65 samples, 0.08%)</title><rect x="0.6172%" y="2837" width="0.0829%" height="15" fill="rgb(233,213,13)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.08%)</title><rect x="0.6172%" y="2821" width="0.0829%" height="15" fill="rgb(233,141,41)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.08%)</title><rect x="0.6172%" y="2805" width="0.0829%" height="15" fill="rgb(239,167,4)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2815.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.08%)</title><rect x="0.6172%" y="2789" width="0.0829%" height="15" fill="rgb(209,217,16)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2799.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.08%)</title><rect x="0.6172%" y="2773" width="0.0829%" height="15" fill="rgb(219,88,35)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2783.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (65 samples, 0.08%)</title><rect x="0.6172%" y="2757" width="0.0829%" height="15" fill="rgb(220,193,23)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2767.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.08%)</title><rect x="0.6172%" y="2741" width="0.0829%" height="15" fill="rgb(230,90,52)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.08%)</title><rect x="0.6172%" y="2725" width="0.0829%" height="15" fill="rgb(252,106,19)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.08%)</title><rect x="0.6172%" y="2709" width="0.0829%" height="15" fill="rgb(206,74,20)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2719.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (65 samples, 0.08%)</title><rect x="0.6172%" y="2693" width="0.0829%" height="15" fill="rgb(230,138,44)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2703.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (65 samples, 0.08%)</title><rect x="0.6172%" y="2677" width="0.0829%" height="15" fill="rgb(235,182,43)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (65 samples, 0.08%)</title><rect x="0.6172%" y="2661" width="0.0829%" height="15" fill="rgb(242,16,51)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2671.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.08%)</title><rect x="0.6172%" y="2645" width="0.0829%" height="15" fill="rgb(248,9,4)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2655.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.08%)</title><rect x="0.6172%" y="2629" width="0.0829%" height="15" fill="rgb(210,31,22)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2639.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.08%)</title><rect x="0.6172%" y="2613" width="0.0829%" height="15" fill="rgb(239,54,39)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2623.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (65 samples, 0.08%)</title><rect x="0.6172%" y="2597" width="0.0829%" height="15" fill="rgb(230,99,41)" fg:x="484" fg:w="65"/><text x="0.8672%" y="2607.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="0.7141%" y="2837" width="0.0102%" height="15" fill="rgb(253,106,12)" fg:x="560" fg:w="8"/><text x="0.9641%" y="2847.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.02%)</title><rect x="0.7090%" y="2885" width="0.0217%" height="15" fill="rgb(213,46,41)" fg:x="556" fg:w="17"/><text x="0.9590%" y="2895.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.02%)</title><rect x="0.7090%" y="2869" width="0.0217%" height="15" fill="rgb(215,133,35)" fg:x="556" fg:w="17"/><text x="0.9590%" y="2879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (13 samples, 0.02%)</title><rect x="0.7141%" y="2853" width="0.0166%" height="15" fill="rgb(213,28,5)" fg:x="560" fg:w="13"/><text x="0.9641%" y="2863.50"></text></g><g><title>aptos_db::state_store::StateStore::put_value_sets (422 samples, 0.54%)</title><rect x="0.1977%" y="2949" width="0.5381%" height="15" fill="rgb(215,77,49)" fg:x="155" fg:w="422"/><text x="0.4477%" y="2959.50"></text></g><g><title>aptos_db::state_store::StateStore::put_stats_and_indices (422 samples, 0.54%)</title><rect x="0.1977%" y="2933" width="0.5381%" height="15" fill="rgb(248,100,22)" fg:x="155" fg:w="422"/><text x="0.4477%" y="2943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (23 samples, 0.03%)</title><rect x="0.7065%" y="2917" width="0.0293%" height="15" fill="rgb(208,67,9)" fg:x="554" fg:w="23"/><text x="0.9565%" y="2927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.03%)</title><rect x="0.7065%" y="2901" width="0.0293%" height="15" fill="rgb(219,133,21)" fg:x="554" fg:w="23"/><text x="0.9565%" y="2911.50"></text></g><g><title>&lt;aptos_crypto::hash::TransactionAccumulatorHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (29 samples, 0.04%)</title><rect x="0.7460%" y="2597" width="0.0370%" height="15" fill="rgb(246,46,29)" fg:x="585" fg:w="29"/><text x="0.9960%" y="2607.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (29 samples, 0.04%)</title><rect x="0.7460%" y="2581" width="0.0370%" height="15" fill="rgb(246,185,52)" fg:x="585" fg:w="29"/><text x="0.9960%" y="2591.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (28 samples, 0.04%)</title><rect x="0.7473%" y="2565" width="0.0357%" height="15" fill="rgb(252,136,11)" fg:x="586" fg:w="28"/><text x="0.9973%" y="2575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (28 samples, 0.04%)</title><rect x="0.7473%" y="2549" width="0.0357%" height="15" fill="rgb(219,138,53)" fg:x="586" fg:w="28"/><text x="0.9973%" y="2559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (28 samples, 0.04%)</title><rect x="0.7473%" y="2533" width="0.0357%" height="15" fill="rgb(211,51,23)" fg:x="586" fg:w="28"/><text x="0.9973%" y="2543.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (27 samples, 0.03%)</title><rect x="0.7486%" y="2517" width="0.0344%" height="15" fill="rgb(247,221,28)" fg:x="587" fg:w="27"/><text x="0.9986%" y="2527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (27 samples, 0.03%)</title><rect x="0.7486%" y="2501" width="0.0344%" height="15" fill="rgb(251,222,45)" fg:x="587" fg:w="27"/><text x="0.9986%" y="2511.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (27 samples, 0.03%)</title><rect x="0.7486%" y="2485" width="0.0344%" height="15" fill="rgb(217,162,53)" fg:x="587" fg:w="27"/><text x="0.9986%" y="2495.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (27 samples, 0.03%)</title><rect x="0.7486%" y="2469" width="0.0344%" height="15" fill="rgb(229,93,14)" fg:x="587" fg:w="27"/><text x="0.9986%" y="2479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (27 samples, 0.03%)</title><rect x="0.7486%" y="2453" width="0.0344%" height="15" fill="rgb(209,67,49)" fg:x="587" fg:w="27"/><text x="0.9986%" y="2463.50"></text></g><g><title>aptos_accumulator::MerkleAccumulatorView&lt;R,H&gt;::hash_internal_node (32 samples, 0.04%)</title><rect x="0.7460%" y="2629" width="0.0408%" height="15" fill="rgb(213,87,29)" fg:x="585" fg:w="32"/><text x="0.9960%" y="2639.50"></text></g><g><title>&lt;aptos_types::proof::MerkleTreeInternalNode&lt;H&gt; as aptos_crypto::hash::CryptoHash&gt;::hash (32 samples, 0.04%)</title><rect x="0.7460%" y="2613" width="0.0408%" height="15" fill="rgb(205,151,52)" fg:x="585" fg:w="32"/><text x="0.9960%" y="2623.50"></text></g><g><title>aptos_accumulator::MerkleAccumulator&lt;R,H&gt;::append (38 samples, 0.05%)</title><rect x="0.7422%" y="2661" width="0.0485%" height="15" fill="rgb(253,215,39)" fg:x="582" fg:w="38"/><text x="0.9922%" y="2671.50"></text></g><g><title>aptos_accumulator::MerkleAccumulatorView&lt;R,H&gt;::append (38 samples, 0.05%)</title><rect x="0.7422%" y="2645" width="0.0485%" height="15" fill="rgb(221,220,41)" fg:x="582" fg:w="38"/><text x="0.9922%" y="2655.50"></text></g><g><title>&lt;aptos_types::contract_event::ContractEventHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (36 samples, 0.05%)</title><rect x="0.7906%" y="2469" width="0.0459%" height="15" fill="rgb(218,133,21)" fg:x="620" fg:w="36"/><text x="1.0406%" y="2479.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (36 samples, 0.05%)</title><rect x="0.7906%" y="2453" width="0.0459%" height="15" fill="rgb(221,193,43)" fg:x="620" fg:w="36"/><text x="1.0406%" y="2463.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (36 samples, 0.05%)</title><rect x="0.7906%" y="2437" width="0.0459%" height="15" fill="rgb(240,128,52)" fg:x="620" fg:w="36"/><text x="1.0406%" y="2447.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (36 samples, 0.05%)</title><rect x="0.7906%" y="2421" width="0.0459%" height="15" fill="rgb(253,114,12)" fg:x="620" fg:w="36"/><text x="1.0406%" y="2431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (36 samples, 0.05%)</title><rect x="0.7906%" y="2405" width="0.0459%" height="15" fill="rgb(215,223,47)" fg:x="620" fg:w="36"/><text x="1.0406%" y="2415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (36 samples, 0.05%)</title><rect x="0.7906%" y="2389" width="0.0459%" height="15" fill="rgb(248,225,23)" fg:x="620" fg:w="36"/><text x="1.0406%" y="2399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (36 samples, 0.05%)</title><rect x="0.7906%" y="2373" width="0.0459%" height="15" fill="rgb(250,108,0)" fg:x="620" fg:w="36"/><text x="1.0406%" y="2383.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (36 samples, 0.05%)</title><rect x="0.7906%" y="2357" width="0.0459%" height="15" fill="rgb(228,208,7)" fg:x="620" fg:w="36"/><text x="1.0406%" y="2367.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (36 samples, 0.05%)</title><rect x="0.7906%" y="2341" width="0.0459%" height="15" fill="rgb(244,45,10)" fg:x="620" fg:w="36"/><text x="1.0406%" y="2351.50"></text></g><g><title>&lt;aptos_types::contract_event::_::&lt;impl serde::ser::Serialize for aptos_types::contract_event::ContractEventV0&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (40 samples, 0.05%)</title><rect x="0.8391%" y="2373" width="0.0510%" height="15" fill="rgb(207,125,25)" fg:x="658" fg:w="40"/><text x="1.0891%" y="2383.50"></text></g><g><title>serde_bytes::serialize (40 samples, 0.05%)</title><rect x="0.8391%" y="2357" width="0.0510%" height="15" fill="rgb(210,195,18)" fg:x="658" fg:w="40"/><text x="1.0891%" y="2367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (40 samples, 0.05%)</title><rect x="0.8391%" y="2341" width="0.0510%" height="15" fill="rgb(249,80,12)" fg:x="658" fg:w="40"/><text x="1.0891%" y="2351.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (40 samples, 0.05%)</title><rect x="0.8391%" y="2325" width="0.0510%" height="15" fill="rgb(221,65,9)" fg:x="658" fg:w="40"/><text x="1.0891%" y="2335.50"></text></g><g><title>std::io::Write::write_all (39 samples, 0.05%)</title><rect x="0.8404%" y="2309" width="0.0497%" height="15" fill="rgb(235,49,36)" fg:x="659" fg:w="39"/><text x="1.0904%" y="2319.50"></text></g><g><title>&lt;aptos_types::contract_event::ContractEventHasher as std::io::Write&gt;::write (39 samples, 0.05%)</title><rect x="0.8404%" y="2293" width="0.0497%" height="15" fill="rgb(225,32,20)" fg:x="659" fg:w="39"/><text x="1.0904%" y="2303.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (39 samples, 0.05%)</title><rect x="0.8404%" y="2277" width="0.0497%" height="15" fill="rgb(215,141,46)" fg:x="659" fg:w="39"/><text x="1.0904%" y="2287.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (39 samples, 0.05%)</title><rect x="0.8404%" y="2261" width="0.0497%" height="15" fill="rgb(250,160,47)" fg:x="659" fg:w="39"/><text x="1.0904%" y="2271.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (39 samples, 0.05%)</title><rect x="0.8404%" y="2245" width="0.0497%" height="15" fill="rgb(216,222,40)" fg:x="659" fg:w="39"/><text x="1.0904%" y="2255.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (39 samples, 0.05%)</title><rect x="0.8404%" y="2229" width="0.0497%" height="15" fill="rgb(234,217,39)" fg:x="659" fg:w="39"/><text x="1.0904%" y="2239.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventKey&gt;::serialize (16 samples, 0.02%)</title><rect x="0.8901%" y="2373" width="0.0204%" height="15" fill="rgb(207,178,40)" fg:x="698" fg:w="16"/><text x="1.1401%" y="2383.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 0.02%)</title><rect x="0.8901%" y="2357" width="0.0204%" height="15" fill="rgb(221,136,13)" fg:x="698" fg:w="16"/><text x="1.1401%" y="2367.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (16 samples, 0.02%)</title><rect x="0.8901%" y="2341" width="0.0204%" height="15" fill="rgb(249,199,10)" fg:x="698" fg:w="16"/><text x="1.1401%" y="2351.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 0.02%)</title><rect x="0.8901%" y="2325" width="0.0204%" height="15" fill="rgb(249,222,13)" fg:x="698" fg:w="16"/><text x="1.1401%" y="2335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (16 samples, 0.02%)</title><rect x="0.8901%" y="2309" width="0.0204%" height="15" fill="rgb(244,185,38)" fg:x="698" fg:w="16"/><text x="1.1401%" y="2319.50"></text></g><g><title> 32]&gt;::serialize (16 samples, 0.02%)</title><rect x="0.8901%" y="2293" width="0.0204%" height="15" fill="rgb(236,202,9)" fg:x="698" fg:w="16"/><text x="1.1401%" y="2303.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (16 samples, 0.02%)</title><rect x="0.8901%" y="2277" width="0.0204%" height="15" fill="rgb(250,229,37)" fg:x="698" fg:w="16"/><text x="1.1401%" y="2287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (16 samples, 0.02%)</title><rect x="0.8901%" y="2261" width="0.0204%" height="15" fill="rgb(206,174,23)" fg:x="698" fg:w="16"/><text x="1.1401%" y="2271.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (16 samples, 0.02%)</title><rect x="0.8901%" y="2245" width="0.0204%" height="15" fill="rgb(211,33,43)" fg:x="698" fg:w="16"/><text x="1.1401%" y="2255.50"></text></g><g><title>std::io::Write::write_all (16 samples, 0.02%)</title><rect x="0.8901%" y="2229" width="0.0204%" height="15" fill="rgb(245,58,50)" fg:x="698" fg:w="16"/><text x="1.1401%" y="2239.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoV0Hasher as std::io::Write&gt;::write (16 samples, 0.02%)</title><rect x="0.8901%" y="2213" width="0.0204%" height="15" fill="rgb(244,68,36)" fg:x="698" fg:w="16"/><text x="1.1401%" y="2223.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (16 samples, 0.02%)</title><rect x="0.9131%" y="2293" width="0.0204%" height="15" fill="rgb(232,229,15)" fg:x="716" fg:w="16"/><text x="1.1631%" y="2303.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 0.02%)</title><rect x="0.9131%" y="2277" width="0.0204%" height="15" fill="rgb(254,30,23)" fg:x="716" fg:w="16"/><text x="1.1631%" y="2287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (16 samples, 0.02%)</title><rect x="0.9131%" y="2261" width="0.0204%" height="15" fill="rgb(235,160,14)" fg:x="716" fg:w="16"/><text x="1.1631%" y="2271.50"></text></g><g><title> 32]&gt;::serialize (16 samples, 0.02%)</title><rect x="0.9131%" y="2245" width="0.0204%" height="15" fill="rgb(212,155,44)" fg:x="716" fg:w="16"/><text x="1.1631%" y="2255.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (16 samples, 0.02%)</title><rect x="0.9131%" y="2229" width="0.0204%" height="15" fill="rgb(226,2,50)" fg:x="716" fg:w="16"/><text x="1.1631%" y="2239.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (16 samples, 0.02%)</title><rect x="0.9131%" y="2213" width="0.0204%" height="15" fill="rgb(234,177,6)" fg:x="716" fg:w="16"/><text x="1.1631%" y="2223.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (16 samples, 0.02%)</title><rect x="0.9131%" y="2197" width="0.0204%" height="15" fill="rgb(217,24,9)" fg:x="716" fg:w="16"/><text x="1.1631%" y="2207.50"></text></g><g><title>std::io::Write::write_all (16 samples, 0.02%)</title><rect x="0.9131%" y="2181" width="0.0204%" height="15" fill="rgb(220,13,46)" fg:x="716" fg:w="16"/><text x="1.1631%" y="2191.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoV0Hasher as std::io::Write&gt;::write (16 samples, 0.02%)</title><rect x="0.9131%" y="2165" width="0.0204%" height="15" fill="rgb(239,221,27)" fg:x="716" fg:w="16"/><text x="1.1631%" y="2175.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (20 samples, 0.03%)</title><rect x="0.9373%" y="2085" width="0.0255%" height="15" fill="rgb(222,198,25)" fg:x="735" fg:w="20"/><text x="1.1873%" y="2095.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (20 samples, 0.03%)</title><rect x="0.9373%" y="2069" width="0.0255%" height="15" fill="rgb(211,99,13)" fg:x="735" fg:w="20"/><text x="1.1873%" y="2079.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (20 samples, 0.03%)</title><rect x="0.9373%" y="2053" width="0.0255%" height="15" fill="rgb(232,111,31)" fg:x="735" fg:w="20"/><text x="1.1873%" y="2063.50"></text></g><g><title> 32]&gt;::serialize (20 samples, 0.03%)</title><rect x="0.9373%" y="2037" width="0.0255%" height="15" fill="rgb(245,82,37)" fg:x="735" fg:w="20"/><text x="1.1873%" y="2047.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (18 samples, 0.02%)</title><rect x="0.9398%" y="2021" width="0.0230%" height="15" fill="rgb(227,149,46)" fg:x="737" fg:w="18"/><text x="1.1898%" y="2031.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (18 samples, 0.02%)</title><rect x="0.9398%" y="2005" width="0.0230%" height="15" fill="rgb(218,36,50)" fg:x="737" fg:w="18"/><text x="1.1898%" y="2015.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (18 samples, 0.02%)</title><rect x="0.9398%" y="1989" width="0.0230%" height="15" fill="rgb(226,80,48)" fg:x="737" fg:w="18"/><text x="1.1898%" y="1999.50"></text></g><g><title>std::io::Write::write_all (18 samples, 0.02%)</title><rect x="0.9398%" y="1973" width="0.0230%" height="15" fill="rgb(238,224,15)" fg:x="737" fg:w="18"/><text x="1.1898%" y="1983.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoV0Hasher as std::io::Write&gt;::write (18 samples, 0.02%)</title><rect x="0.9398%" y="1957" width="0.0230%" height="15" fill="rgb(241,136,10)" fg:x="737" fg:w="18"/><text x="1.1898%" y="1967.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (13 samples, 0.02%)</title><rect x="0.9462%" y="1941" width="0.0166%" height="15" fill="rgb(208,32,45)" fg:x="742" fg:w="13"/><text x="1.1962%" y="1951.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (12 samples, 0.02%)</title><rect x="0.9475%" y="1925" width="0.0153%" height="15" fill="rgb(207,135,9)" fg:x="743" fg:w="12"/><text x="1.1975%" y="1935.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (12 samples, 0.02%)</title><rect x="0.9475%" y="1909" width="0.0153%" height="15" fill="rgb(206,86,44)" fg:x="743" fg:w="12"/><text x="1.1975%" y="1919.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (12 samples, 0.02%)</title><rect x="0.9475%" y="1893" width="0.0153%" height="15" fill="rgb(245,177,15)" fg:x="743" fg:w="12"/><text x="1.1975%" y="1903.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (44 samples, 0.06%)</title><rect x="0.9105%" y="2373" width="0.0561%" height="15" fill="rgb(206,64,50)" fg:x="714" fg:w="44"/><text x="1.1605%" y="2383.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (44 samples, 0.06%)</title><rect x="0.9105%" y="2357" width="0.0561%" height="15" fill="rgb(234,36,40)" fg:x="714" fg:w="44"/><text x="1.1605%" y="2367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (44 samples, 0.06%)</title><rect x="0.9105%" y="2341" width="0.0561%" height="15" fill="rgb(213,64,8)" fg:x="714" fg:w="44"/><text x="1.1605%" y="2351.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (44 samples, 0.06%)</title><rect x="0.9105%" y="2325" width="0.0561%" height="15" fill="rgb(210,75,36)" fg:x="714" fg:w="44"/><text x="1.1605%" y="2335.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (42 samples, 0.05%)</title><rect x="0.9131%" y="2309" width="0.0536%" height="15" fill="rgb(229,88,21)" fg:x="716" fg:w="42"/><text x="1.1631%" y="2319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (23 samples, 0.03%)</title><rect x="0.9373%" y="2293" width="0.0293%" height="15" fill="rgb(252,204,47)" fg:x="735" fg:w="23"/><text x="1.1873%" y="2303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (23 samples, 0.03%)</title><rect x="0.9373%" y="2277" width="0.0293%" height="15" fill="rgb(208,77,27)" fg:x="735" fg:w="23"/><text x="1.1873%" y="2287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (23 samples, 0.03%)</title><rect x="0.9373%" y="2261" width="0.0293%" height="15" fill="rgb(221,76,26)" fg:x="735" fg:w="23"/><text x="1.1873%" y="2271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (23 samples, 0.03%)</title><rect x="0.9373%" y="2245" width="0.0293%" height="15" fill="rgb(225,139,18)" fg:x="735" fg:w="23"/><text x="1.1873%" y="2255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (23 samples, 0.03%)</title><rect x="0.9373%" y="2229" width="0.0293%" height="15" fill="rgb(230,137,11)" fg:x="735" fg:w="23"/><text x="1.1873%" y="2239.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (23 samples, 0.03%)</title><rect x="0.9373%" y="2213" width="0.0293%" height="15" fill="rgb(212,28,1)" fg:x="735" fg:w="23"/><text x="1.1873%" y="2223.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (23 samples, 0.03%)</title><rect x="0.9373%" y="2197" width="0.0293%" height="15" fill="rgb(248,164,17)" fg:x="735" fg:w="23"/><text x="1.1873%" y="2207.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (23 samples, 0.03%)</title><rect x="0.9373%" y="2181" width="0.0293%" height="15" fill="rgb(222,171,42)" fg:x="735" fg:w="23"/><text x="1.1873%" y="2191.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (23 samples, 0.03%)</title><rect x="0.9373%" y="2165" width="0.0293%" height="15" fill="rgb(243,84,45)" fg:x="735" fg:w="23"/><text x="1.1873%" y="2175.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (23 samples, 0.03%)</title><rect x="0.9373%" y="2149" width="0.0293%" height="15" fill="rgb(252,49,23)" fg:x="735" fg:w="23"/><text x="1.1873%" y="2159.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (23 samples, 0.03%)</title><rect x="0.9373%" y="2133" width="0.0293%" height="15" fill="rgb(215,19,7)" fg:x="735" fg:w="23"/><text x="1.1873%" y="2143.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (23 samples, 0.03%)</title><rect x="0.9373%" y="2117" width="0.0293%" height="15" fill="rgb(238,81,41)" fg:x="735" fg:w="23"/><text x="1.1873%" y="2127.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (23 samples, 0.03%)</title><rect x="0.9373%" y="2101" width="0.0293%" height="15" fill="rgb(210,199,37)" fg:x="735" fg:w="23"/><text x="1.1873%" y="2111.50"></text></g><g><title>bcs::ser::serialize_into (108 samples, 0.14%)</title><rect x="0.8366%" y="2469" width="0.1377%" height="15" fill="rgb(244,192,49)" fg:x="656" fg:w="108"/><text x="1.0866%" y="2479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (108 samples, 0.14%)</title><rect x="0.8366%" y="2453" width="0.1377%" height="15" fill="rgb(226,211,11)" fg:x="656" fg:w="108"/><text x="1.0866%" y="2463.50"></text></g><g><title>aptos_types::contract_event::_::&lt;impl serde::ser::Serialize for aptos_types::contract_event::ContractEvent&gt;::serialize (108 samples, 0.14%)</title><rect x="0.8366%" y="2437" width="0.1377%" height="15" fill="rgb(236,162,54)" fg:x="656" fg:w="108"/><text x="1.0866%" y="2447.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (108 samples, 0.14%)</title><rect x="0.8366%" y="2421" width="0.1377%" height="15" fill="rgb(220,229,9)" fg:x="656" fg:w="108"/><text x="1.0866%" y="2431.50"></text></g><g><title>aptos_types::contract_event::_::&lt;impl serde::ser::Serialize for aptos_types::contract_event::ContractEventV0&gt;::serialize (108 samples, 0.14%)</title><rect x="0.8366%" y="2405" width="0.1377%" height="15" fill="rgb(250,87,22)" fg:x="656" fg:w="108"/><text x="1.0866%" y="2415.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (106 samples, 0.14%)</title><rect x="0.8391%" y="2389" width="0.1352%" height="15" fill="rgb(239,43,17)" fg:x="658" fg:w="106"/><text x="1.0891%" y="2399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (146 samples, 0.19%)</title><rect x="0.7906%" y="2661" width="0.1862%" height="15" fill="rgb(231,177,25)" fg:x="620" fg:w="146"/><text x="1.0406%" y="2671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (146 samples, 0.19%)</title><rect x="0.7906%" y="2645" width="0.1862%" height="15" fill="rgb(219,179,1)" fg:x="620" fg:w="146"/><text x="1.0406%" y="2655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (146 samples, 0.19%)</title><rect x="0.7906%" y="2629" width="0.1862%" height="15" fill="rgb(238,219,53)" fg:x="620" fg:w="146"/><text x="1.0406%" y="2639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (146 samples, 0.19%)</title><rect x="0.7906%" y="2613" width="0.1862%" height="15" fill="rgb(232,167,36)" fg:x="620" fg:w="146"/><text x="1.0406%" y="2623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (146 samples, 0.19%)</title><rect x="0.7906%" y="2597" width="0.1862%" height="15" fill="rgb(244,19,51)" fg:x="620" fg:w="146"/><text x="1.0406%" y="2607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (146 samples, 0.19%)</title><rect x="0.7906%" y="2581" width="0.1862%" height="15" fill="rgb(224,6,22)" fg:x="620" fg:w="146"/><text x="1.0406%" y="2591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (146 samples, 0.19%)</title><rect x="0.7906%" y="2565" width="0.1862%" height="15" fill="rgb(224,145,5)" fg:x="620" fg:w="146"/><text x="1.0406%" y="2575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (146 samples, 0.19%)</title><rect x="0.7906%" y="2549" width="0.1862%" height="15" fill="rgb(234,130,49)" fg:x="620" fg:w="146"/><text x="1.0406%" y="2559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (146 samples, 0.19%)</title><rect x="0.7906%" y="2533" width="0.1862%" height="15" fill="rgb(254,6,2)" fg:x="620" fg:w="146"/><text x="1.0406%" y="2543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (146 samples, 0.19%)</title><rect x="0.7906%" y="2517" width="0.1862%" height="15" fill="rgb(208,96,46)" fg:x="620" fg:w="146"/><text x="1.0406%" y="2527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (146 samples, 0.19%)</title><rect x="0.7906%" y="2501" width="0.1862%" height="15" fill="rgb(239,3,39)" fg:x="620" fg:w="146"/><text x="1.0406%" y="2511.50"></text></g><g><title>&lt;aptos_types::contract_event::ContractEvent as aptos_crypto::hash::CryptoHash&gt;::hash (146 samples, 0.19%)</title><rect x="0.7906%" y="2485" width="0.1862%" height="15" fill="rgb(233,210,1)" fg:x="620" fg:w="146"/><text x="1.0406%" y="2495.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (10 samples, 0.01%)</title><rect x="0.9781%" y="2533" width="0.0128%" height="15" fill="rgb(244,137,37)" fg:x="767" fg:w="10"/><text x="1.2281%" y="2543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.01%)</title><rect x="0.9781%" y="2517" width="0.0128%" height="15" fill="rgb(240,136,2)" fg:x="767" fg:w="10"/><text x="1.2281%" y="2527.50"></text></g><g><title>aptos_infallible::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.02%)</title><rect x="0.9781%" y="2581" width="0.0191%" height="15" fill="rgb(239,18,37)" fg:x="767" fg:w="15"/><text x="1.2281%" y="2591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.02%)</title><rect x="0.9781%" y="2565" width="0.0191%" height="15" fill="rgb(218,185,22)" fg:x="767" fg:w="15"/><text x="1.2281%" y="2575.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (15 samples, 0.02%)</title><rect x="0.9781%" y="2549" width="0.0191%" height="15" fill="rgb(225,218,4)" fg:x="767" fg:w="15"/><text x="1.2281%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (14 samples, 0.02%)</title><rect x="0.9972%" y="2581" width="0.0179%" height="15" fill="rgb(230,182,32)" fg:x="782" fg:w="14"/><text x="1.2472%" y="2591.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="0.9972%" y="2565" width="0.0179%" height="15" fill="rgb(242,56,43)" fg:x="782" fg:w="14"/><text x="1.2472%" y="2575.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (14 samples, 0.02%)</title><rect x="0.9972%" y="2549" width="0.0179%" height="15" fill="rgb(233,99,24)" fg:x="782" fg:w="14"/><text x="1.2472%" y="2559.50"></text></g><g><title>prometheus::histogram::Histogram::observe (14 samples, 0.02%)</title><rect x="0.9972%" y="2533" width="0.0179%" height="15" fill="rgb(234,209,42)" fg:x="782" fg:w="14"/><text x="1.2472%" y="2543.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (14 samples, 0.02%)</title><rect x="0.9972%" y="2517" width="0.0179%" height="15" fill="rgb(227,7,12)" fg:x="782" fg:w="14"/><text x="1.2472%" y="2527.50"></text></g><g><title>prometheus::histogram::ShardAndCount::inc (14 samples, 0.02%)</title><rect x="0.9972%" y="2501" width="0.0179%" height="15" fill="rgb(245,203,43)" fg:x="782" fg:w="14"/><text x="1.2472%" y="2511.50"></text></g><g><title>prometheus::histogram::ShardAndCount::inc_by (14 samples, 0.02%)</title><rect x="0.9972%" y="2485" width="0.0179%" height="15" fill="rgb(238,205,33)" fg:x="782" fg:w="14"/><text x="1.2472%" y="2495.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (14 samples, 0.02%)</title><rect x="0.9972%" y="2469" width="0.0179%" height="15" fill="rgb(231,56,7)" fg:x="782" fg:w="14"/><text x="1.2472%" y="2479.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.02%)</title><rect x="0.9972%" y="2453" width="0.0179%" height="15" fill="rgb(244,186,29)" fg:x="782" fg:w="14"/><text x="1.2472%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="1.0151%" y="2581" width="0.0102%" height="15" fill="rgb(234,111,31)" fg:x="796" fg:w="8"/><text x="1.2651%" y="2591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="1.0151%" y="2565" width="0.0102%" height="15" fill="rgb(241,149,10)" fg:x="796" fg:w="8"/><text x="1.2651%" y="2575.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (8 samples, 0.01%)</title><rect x="1.0151%" y="2549" width="0.0102%" height="15" fill="rgb(249,206,44)" fg:x="796" fg:w="8"/><text x="1.2651%" y="2559.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (8 samples, 0.01%)</title><rect x="1.0151%" y="2533" width="0.0102%" height="15" fill="rgb(251,153,30)" fg:x="796" fg:w="8"/><text x="1.2651%" y="2543.50"></text></g><g><title>core::sync::atomic::atomic_swap (8 samples, 0.01%)</title><rect x="1.0151%" y="2517" width="0.0102%" height="15" fill="rgb(239,152,38)" fg:x="796" fg:w="8"/><text x="1.2651%" y="2527.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (9 samples, 0.01%)</title><rect x="1.0266%" y="2581" width="0.0115%" height="15" fill="rgb(249,139,47)" fg:x="805" fg:w="9"/><text x="1.2766%" y="2591.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (9 samples, 0.01%)</title><rect x="1.0266%" y="2565" width="0.0115%" height="15" fill="rgb(244,64,35)" fg:x="805" fg:w="9"/><text x="1.2766%" y="2575.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (9 samples, 0.01%)</title><rect x="1.0266%" y="2549" width="0.0115%" height="15" fill="rgb(216,46,15)" fg:x="805" fg:w="9"/><text x="1.2766%" y="2559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 0.07%)</title><rect x="0.9768%" y="2645" width="0.0676%" height="15" fill="rgb(250,74,19)" fg:x="766" fg:w="53"/><text x="1.2268%" y="2655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (53 samples, 0.07%)</title><rect x="0.9768%" y="2629" width="0.0676%" height="15" fill="rgb(249,42,33)" fg:x="766" fg:w="53"/><text x="1.2268%" y="2639.50"></text></g><g><title>aptos_db::event_store::EventStore::put_events::{{closure}} (53 samples, 0.07%)</title><rect x="0.9768%" y="2613" width="0.0676%" height="15" fill="rgb(242,149,17)" fg:x="766" fg:w="53"/><text x="1.2268%" y="2623.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (53 samples, 0.07%)</title><rect x="0.9768%" y="2597" width="0.0676%" height="15" fill="rgb(244,29,21)" fg:x="766" fg:w="53"/><text x="1.2268%" y="2607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="1.0508%" y="2229" width="0.0115%" height="15" fill="rgb(220,130,37)" fg:x="824" fg:w="9"/><text x="1.3008%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="1.0508%" y="2213" width="0.0115%" height="15" fill="rgb(211,67,2)" fg:x="824" fg:w="9"/><text x="1.3008%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="1.0508%" y="2197" width="0.0115%" height="15" fill="rgb(235,68,52)" fg:x="824" fg:w="9"/><text x="1.3008%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="1.0508%" y="2181" width="0.0115%" height="15" fill="rgb(246,142,3)" fg:x="824" fg:w="9"/><text x="1.3008%" y="2191.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="1.0508%" y="2165" width="0.0115%" height="15" fill="rgb(241,25,7)" fg:x="824" fg:w="9"/><text x="1.3008%" y="2175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.01%)</title><rect x="1.0508%" y="2149" width="0.0115%" height="15" fill="rgb(242,119,39)" fg:x="824" fg:w="9"/><text x="1.3008%" y="2159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.01%)</title><rect x="1.0508%" y="2133" width="0.0115%" height="15" fill="rgb(241,98,45)" fg:x="824" fg:w="9"/><text x="1.3008%" y="2143.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.01%)</title><rect x="1.0508%" y="2117" width="0.0115%" height="15" fill="rgb(254,28,30)" fg:x="824" fg:w="9"/><text x="1.3008%" y="2127.50"></text></g><g><title>rallocx (8 samples, 0.01%)</title><rect x="1.0521%" y="2101" width="0.0102%" height="15" fill="rgb(241,142,54)" fg:x="825" fg:w="8"/><text x="1.3021%" y="2111.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (12 samples, 0.02%)</title><rect x="1.0508%" y="2405" width="0.0153%" height="15" fill="rgb(222,85,15)" fg:x="824" fg:w="12"/><text x="1.3008%" y="2415.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.02%)</title><rect x="1.0508%" y="2389" width="0.0153%" height="15" fill="rgb(210,85,47)" fg:x="824" fg:w="12"/><text x="1.3008%" y="2399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (12 samples, 0.02%)</title><rect x="1.0508%" y="2373" width="0.0153%" height="15" fill="rgb(224,206,25)" fg:x="824" fg:w="12"/><text x="1.3008%" y="2383.50"></text></g><g><title> 32]&gt;::serialize (12 samples, 0.02%)</title><rect x="1.0508%" y="2357" width="0.0153%" height="15" fill="rgb(243,201,19)" fg:x="824" fg:w="12"/><text x="1.3008%" y="2367.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (12 samples, 0.02%)</title><rect x="1.0508%" y="2341" width="0.0153%" height="15" fill="rgb(236,59,4)" fg:x="824" fg:w="12"/><text x="1.3008%" y="2351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (12 samples, 0.02%)</title><rect x="1.0508%" y="2325" width="0.0153%" height="15" fill="rgb(254,179,45)" fg:x="824" fg:w="12"/><text x="1.3008%" y="2335.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (12 samples, 0.02%)</title><rect x="1.0508%" y="2309" width="0.0153%" height="15" fill="rgb(226,14,10)" fg:x="824" fg:w="12"/><text x="1.3008%" y="2319.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (12 samples, 0.02%)</title><rect x="1.0508%" y="2293" width="0.0153%" height="15" fill="rgb(244,27,41)" fg:x="824" fg:w="12"/><text x="1.3008%" y="2303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.02%)</title><rect x="1.0508%" y="2277" width="0.0153%" height="15" fill="rgb(235,35,32)" fg:x="824" fg:w="12"/><text x="1.3008%" y="2287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.02%)</title><rect x="1.0508%" y="2261" width="0.0153%" height="15" fill="rgb(218,68,31)" fg:x="824" fg:w="12"/><text x="1.3008%" y="2271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.02%)</title><rect x="1.0508%" y="2245" width="0.0153%" height="15" fill="rgb(207,120,37)" fg:x="824" fg:w="12"/><text x="1.3008%" y="2255.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventKey&gt;::serialize (17 samples, 0.02%)</title><rect x="1.0508%" y="2437" width="0.0217%" height="15" fill="rgb(227,98,0)" fg:x="824" fg:w="17"/><text x="1.3008%" y="2447.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 0.02%)</title><rect x="1.0508%" y="2421" width="0.0217%" height="15" fill="rgb(207,7,3)" fg:x="824" fg:w="17"/><text x="1.3008%" y="2431.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (16 samples, 0.02%)</title><rect x="1.0750%" y="2357" width="0.0204%" height="15" fill="rgb(206,98,19)" fg:x="843" fg:w="16"/><text x="1.3250%" y="2367.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 0.02%)</title><rect x="1.0750%" y="2341" width="0.0204%" height="15" fill="rgb(217,5,26)" fg:x="843" fg:w="16"/><text x="1.3250%" y="2351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (16 samples, 0.02%)</title><rect x="1.0750%" y="2325" width="0.0204%" height="15" fill="rgb(235,190,38)" fg:x="843" fg:w="16"/><text x="1.3250%" y="2335.50"></text></g><g><title> 32]&gt;::serialize (16 samples, 0.02%)</title><rect x="1.0750%" y="2309" width="0.0204%" height="15" fill="rgb(247,86,24)" fg:x="843" fg:w="16"/><text x="1.3250%" y="2319.50"></text></g><g><title>aptos_types::contract_event::_::&lt;impl serde::ser::Serialize for aptos_types::contract_event::ContractEventV0&gt;::serialize (45 samples, 0.06%)</title><rect x="1.0470%" y="2469" width="0.0574%" height="15" fill="rgb(205,101,16)" fg:x="821" fg:w="45"/><text x="1.2970%" y="2479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (45 samples, 0.06%)</title><rect x="1.0470%" y="2453" width="0.0574%" height="15" fill="rgb(246,168,33)" fg:x="821" fg:w="45"/><text x="1.2970%" y="2463.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (25 samples, 0.03%)</title><rect x="1.0725%" y="2437" width="0.0319%" height="15" fill="rgb(231,114,1)" fg:x="841" fg:w="25"/><text x="1.3225%" y="2447.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (24 samples, 0.03%)</title><rect x="1.0737%" y="2421" width="0.0306%" height="15" fill="rgb(207,184,53)" fg:x="842" fg:w="24"/><text x="1.3237%" y="2431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (24 samples, 0.03%)</title><rect x="1.0737%" y="2405" width="0.0306%" height="15" fill="rgb(224,95,51)" fg:x="842" fg:w="24"/><text x="1.3237%" y="2415.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (24 samples, 0.03%)</title><rect x="1.0737%" y="2389" width="0.0306%" height="15" fill="rgb(212,188,45)" fg:x="842" fg:w="24"/><text x="1.3237%" y="2399.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (23 samples, 0.03%)</title><rect x="1.0750%" y="2373" width="0.0293%" height="15" fill="rgb(223,154,38)" fg:x="843" fg:w="23"/><text x="1.3250%" y="2383.50"></text></g><g><title>aptos_db::schema::event::&lt;impl aptos_schemadb::schema::ValueCodec&lt;aptos_db::schema::event::EventSchema&gt; for aptos_types::contract_event::ContractEvent&gt;::encode_value (47 samples, 0.06%)</title><rect x="1.0470%" y="2549" width="0.0599%" height="15" fill="rgb(251,22,52)" fg:x="821" fg:w="47"/><text x="1.2970%" y="2559.50"></text></g><g><title>bcs::ser::to_bytes (47 samples, 0.06%)</title><rect x="1.0470%" y="2533" width="0.0599%" height="15" fill="rgb(229,209,22)" fg:x="821" fg:w="47"/><text x="1.2970%" y="2543.50"></text></g><g><title>bcs::ser::serialize_into (47 samples, 0.06%)</title><rect x="1.0470%" y="2517" width="0.0599%" height="15" fill="rgb(234,138,34)" fg:x="821" fg:w="47"/><text x="1.2970%" y="2527.50"></text></g><g><title>aptos_types::contract_event::_::&lt;impl serde::ser::Serialize for aptos_types::contract_event::ContractEvent&gt;::serialize (47 samples, 0.06%)</title><rect x="1.0470%" y="2501" width="0.0599%" height="15" fill="rgb(212,95,11)" fg:x="821" fg:w="47"/><text x="1.2970%" y="2511.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (47 samples, 0.06%)</title><rect x="1.0470%" y="2485" width="0.0599%" height="15" fill="rgb(240,179,47)" fg:x="821" fg:w="47"/><text x="1.2970%" y="2495.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="1.1095%" y="2197" width="0.0102%" height="15" fill="rgb(240,163,11)" fg:x="870" fg:w="8"/><text x="1.3595%" y="2207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.01%)</title><rect x="1.1095%" y="2181" width="0.0102%" height="15" fill="rgb(236,37,12)" fg:x="870" fg:w="8"/><text x="1.3595%" y="2191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.01%)</title><rect x="1.1095%" y="2165" width="0.0102%" height="15" fill="rgb(232,164,16)" fg:x="870" fg:w="8"/><text x="1.3595%" y="2175.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.01%)</title><rect x="1.1095%" y="2149" width="0.0102%" height="15" fill="rgb(244,205,15)" fg:x="870" fg:w="8"/><text x="1.3595%" y="2159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="1.1095%" y="2261" width="0.0140%" height="15" fill="rgb(223,117,47)" fg:x="870" fg:w="11"/><text x="1.3595%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="1.1095%" y="2245" width="0.0140%" height="15" fill="rgb(244,107,35)" fg:x="870" fg:w="11"/><text x="1.3595%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="1.1095%" y="2229" width="0.0140%" height="15" fill="rgb(205,140,8)" fg:x="870" fg:w="11"/><text x="1.3595%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="1.1095%" y="2213" width="0.0140%" height="15" fill="rgb(228,84,46)" fg:x="870" fg:w="11"/><text x="1.3595%" y="2223.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (15 samples, 0.02%)</title><rect x="1.1095%" y="2437" width="0.0191%" height="15" fill="rgb(254,188,9)" fg:x="870" fg:w="15"/><text x="1.3595%" y="2447.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (15 samples, 0.02%)</title><rect x="1.1095%" y="2421" width="0.0191%" height="15" fill="rgb(206,112,54)" fg:x="870" fg:w="15"/><text x="1.3595%" y="2431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (15 samples, 0.02%)</title><rect x="1.1095%" y="2405" width="0.0191%" height="15" fill="rgb(216,84,49)" fg:x="870" fg:w="15"/><text x="1.3595%" y="2415.50"></text></g><g><title> 32]&gt;::serialize (15 samples, 0.02%)</title><rect x="1.1095%" y="2389" width="0.0191%" height="15" fill="rgb(214,194,35)" fg:x="870" fg:w="15"/><text x="1.3595%" y="2399.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (15 samples, 0.02%)</title><rect x="1.1095%" y="2373" width="0.0191%" height="15" fill="rgb(249,28,3)" fg:x="870" fg:w="15"/><text x="1.3595%" y="2383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (15 samples, 0.02%)</title><rect x="1.1095%" y="2357" width="0.0191%" height="15" fill="rgb(222,56,52)" fg:x="870" fg:w="15"/><text x="1.3595%" y="2367.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (15 samples, 0.02%)</title><rect x="1.1095%" y="2341" width="0.0191%" height="15" fill="rgb(245,217,50)" fg:x="870" fg:w="15"/><text x="1.3595%" y="2351.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (15 samples, 0.02%)</title><rect x="1.1095%" y="2325" width="0.0191%" height="15" fill="rgb(213,201,24)" fg:x="870" fg:w="15"/><text x="1.3595%" y="2335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.02%)</title><rect x="1.1095%" y="2309" width="0.0191%" height="15" fill="rgb(248,116,28)" fg:x="870" fg:w="15"/><text x="1.3595%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.02%)</title><rect x="1.1095%" y="2293" width="0.0191%" height="15" fill="rgb(219,72,43)" fg:x="870" fg:w="15"/><text x="1.3595%" y="2303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.02%)</title><rect x="1.1095%" y="2277" width="0.0191%" height="15" fill="rgb(209,138,14)" fg:x="870" fg:w="15"/><text x="1.3595%" y="2287.50"></text></g><g><title>aptos_db::schema::event_by_key::&lt;impl aptos_schemadb::schema::KeyCodec&lt;aptos_db::schema::event_by_key::EventByKeySchema&gt; for (aptos_types::event::EventKey,u64)&gt;::encode_key (18 samples, 0.02%)</title><rect x="1.1069%" y="2549" width="0.0230%" height="15" fill="rgb(222,18,33)" fg:x="868" fg:w="18"/><text x="1.3569%" y="2559.50"></text></g><g><title>aptos_types::event::EventKey::to_bytes (18 samples, 0.02%)</title><rect x="1.1069%" y="2533" width="0.0230%" height="15" fill="rgb(213,199,7)" fg:x="868" fg:w="18"/><text x="1.3569%" y="2543.50"></text></g><g><title>bcs::ser::to_bytes (18 samples, 0.02%)</title><rect x="1.1069%" y="2517" width="0.0230%" height="15" fill="rgb(250,110,10)" fg:x="868" fg:w="18"/><text x="1.3569%" y="2527.50"></text></g><g><title>bcs::ser::serialize_into (16 samples, 0.02%)</title><rect x="1.1095%" y="2501" width="0.0204%" height="15" fill="rgb(248,123,6)" fg:x="870" fg:w="16"/><text x="1.3595%" y="2511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 0.02%)</title><rect x="1.1095%" y="2485" width="0.0204%" height="15" fill="rgb(206,91,31)" fg:x="870" fg:w="16"/><text x="1.3595%" y="2495.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventKey&gt;::serialize (16 samples, 0.02%)</title><rect x="1.1095%" y="2469" width="0.0204%" height="15" fill="rgb(211,154,13)" fg:x="870" fg:w="16"/><text x="1.3595%" y="2479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 0.02%)</title><rect x="1.1095%" y="2453" width="0.0204%" height="15" fill="rgb(225,148,7)" fg:x="870" fg:w="16"/><text x="1.3595%" y="2463.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (13 samples, 0.02%)</title><rect x="1.1311%" y="2437" width="0.0166%" height="15" fill="rgb(220,160,43)" fg:x="887" fg:w="13"/><text x="1.3811%" y="2447.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 0.02%)</title><rect x="1.1311%" y="2421" width="0.0166%" height="15" fill="rgb(213,52,39)" fg:x="887" fg:w="13"/><text x="1.3811%" y="2431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (12 samples, 0.02%)</title><rect x="1.1324%" y="2405" width="0.0153%" height="15" fill="rgb(243,137,7)" fg:x="888" fg:w="12"/><text x="1.3824%" y="2415.50"></text></g><g><title> 32]&gt;::serialize (12 samples, 0.02%)</title><rect x="1.1324%" y="2389" width="0.0153%" height="15" fill="rgb(230,79,13)" fg:x="888" fg:w="12"/><text x="1.3824%" y="2399.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (12 samples, 0.02%)</title><rect x="1.1324%" y="2373" width="0.0153%" height="15" fill="rgb(247,105,23)" fg:x="888" fg:w="12"/><text x="1.3824%" y="2383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (11 samples, 0.01%)</title><rect x="1.1337%" y="2357" width="0.0140%" height="15" fill="rgb(223,179,41)" fg:x="889" fg:w="11"/><text x="1.3837%" y="2367.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (11 samples, 0.01%)</title><rect x="1.1337%" y="2341" width="0.0140%" height="15" fill="rgb(218,9,34)" fg:x="889" fg:w="11"/><text x="1.3837%" y="2351.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.01%)</title><rect x="1.1337%" y="2325" width="0.0140%" height="15" fill="rgb(222,106,8)" fg:x="889" fg:w="11"/><text x="1.3837%" y="2335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.01%)</title><rect x="1.1337%" y="2309" width="0.0140%" height="15" fill="rgb(211,220,0)" fg:x="889" fg:w="11"/><text x="1.3837%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="1.1337%" y="2293" width="0.0140%" height="15" fill="rgb(229,52,16)" fg:x="889" fg:w="11"/><text x="1.3837%" y="2303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.01%)</title><rect x="1.1337%" y="2277" width="0.0140%" height="15" fill="rgb(212,155,18)" fg:x="889" fg:w="11"/><text x="1.3837%" y="2287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="1.1337%" y="2261" width="0.0140%" height="15" fill="rgb(242,21,14)" fg:x="889" fg:w="11"/><text x="1.3837%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="1.1337%" y="2245" width="0.0140%" height="15" fill="rgb(222,19,48)" fg:x="889" fg:w="11"/><text x="1.3837%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="1.1337%" y="2229" width="0.0140%" height="15" fill="rgb(232,45,27)" fg:x="889" fg:w="11"/><text x="1.3837%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="1.1337%" y="2213" width="0.0140%" height="15" fill="rgb(249,103,42)" fg:x="889" fg:w="11"/><text x="1.3837%" y="2223.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="1.1350%" y="2197" width="0.0128%" height="15" fill="rgb(246,81,33)" fg:x="890" fg:w="10"/><text x="1.3850%" y="2207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.01%)</title><rect x="1.1362%" y="2181" width="0.0115%" height="15" fill="rgb(252,33,42)" fg:x="891" fg:w="9"/><text x="1.3862%" y="2191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.01%)</title><rect x="1.1362%" y="2165" width="0.0115%" height="15" fill="rgb(209,212,41)" fg:x="891" fg:w="9"/><text x="1.3862%" y="2175.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.01%)</title><rect x="1.1362%" y="2149" width="0.0115%" height="15" fill="rgb(207,154,6)" fg:x="891" fg:w="9"/><text x="1.3862%" y="2159.50"></text></g><g><title>rallocx (8 samples, 0.01%)</title><rect x="1.1375%" y="2133" width="0.0102%" height="15" fill="rgb(223,64,47)" fg:x="892" fg:w="8"/><text x="1.3875%" y="2143.50"></text></g><g><title>iralloct (8 samples, 0.01%)</title><rect x="1.1375%" y="2117" width="0.0102%" height="15" fill="rgb(211,161,38)" fg:x="892" fg:w="8"/><text x="1.3875%" y="2127.50"></text></g><g><title>aptos_db::schema::event_by_version::&lt;impl aptos_schemadb::schema::KeyCodec&lt;aptos_db::schema::event_by_version::EventByVersionSchema&gt; for (aptos_types::event::EventKey,u64,u64)&gt;::encode_key (17 samples, 0.02%)</title><rect x="1.1299%" y="2549" width="0.0217%" height="15" fill="rgb(219,138,40)" fg:x="886" fg:w="17"/><text x="1.3799%" y="2559.50"></text></g><g><title>aptos_types::event::EventKey::to_bytes (16 samples, 0.02%)</title><rect x="1.1311%" y="2533" width="0.0204%" height="15" fill="rgb(241,228,46)" fg:x="887" fg:w="16"/><text x="1.3811%" y="2543.50"></text></g><g><title>bcs::ser::to_bytes (16 samples, 0.02%)</title><rect x="1.1311%" y="2517" width="0.0204%" height="15" fill="rgb(223,209,38)" fg:x="887" fg:w="16"/><text x="1.3811%" y="2527.50"></text></g><g><title>bcs::ser::serialize_into (16 samples, 0.02%)</title><rect x="1.1311%" y="2501" width="0.0204%" height="15" fill="rgb(236,164,45)" fg:x="887" fg:w="16"/><text x="1.3811%" y="2511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 0.02%)</title><rect x="1.1311%" y="2485" width="0.0204%" height="15" fill="rgb(231,15,5)" fg:x="887" fg:w="16"/><text x="1.3811%" y="2495.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::ser::Serialize for aptos_types::event::EventKey&gt;::serialize (16 samples, 0.02%)</title><rect x="1.1311%" y="2469" width="0.0204%" height="15" fill="rgb(252,35,15)" fg:x="887" fg:w="16"/><text x="1.3811%" y="2479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 0.02%)</title><rect x="1.1311%" y="2453" width="0.0204%" height="15" fill="rgb(248,181,18)" fg:x="887" fg:w="16"/><text x="1.3811%" y="2463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (14 samples, 0.02%)</title><rect x="1.1515%" y="2501" width="0.0179%" height="15" fill="rgb(233,39,42)" fg:x="903" fg:w="14"/><text x="1.4015%" y="2511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.02%)</title><rect x="1.1515%" y="2485" width="0.0179%" height="15" fill="rgb(238,110,33)" fg:x="903" fg:w="14"/><text x="1.4015%" y="2495.50"></text></g><g><title>aptos_infallible::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.03%)</title><rect x="1.1515%" y="2549" width="0.0281%" height="15" fill="rgb(233,195,10)" fg:x="903" fg:w="22"/><text x="1.4015%" y="2559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.03%)</title><rect x="1.1515%" y="2533" width="0.0281%" height="15" fill="rgb(254,105,3)" fg:x="903" fg:w="22"/><text x="1.4015%" y="2543.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (22 samples, 0.03%)</title><rect x="1.1515%" y="2517" width="0.0281%" height="15" fill="rgb(221,225,9)" fg:x="903" fg:w="22"/><text x="1.4015%" y="2527.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (8 samples, 0.01%)</title><rect x="1.1694%" y="2501" width="0.0102%" height="15" fill="rgb(224,227,45)" fg:x="917" fg:w="8"/><text x="1.4194%" y="2511.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (8 samples, 0.01%)</title><rect x="1.1694%" y="2485" width="0.0102%" height="15" fill="rgb(229,198,43)" fg:x="917" fg:w="8"/><text x="1.4194%" y="2495.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (8 samples, 0.01%)</title><rect x="1.1694%" y="2469" width="0.0102%" height="15" fill="rgb(206,209,35)" fg:x="917" fg:w="8"/><text x="1.4194%" y="2479.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.01%)</title><rect x="1.1694%" y="2453" width="0.0102%" height="15" fill="rgb(245,195,53)" fg:x="917" fg:w="8"/><text x="1.4194%" y="2463.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (48 samples, 0.06%)</title><rect x="1.1796%" y="2533" width="0.0612%" height="15" fill="rgb(240,92,26)" fg:x="925" fg:w="48"/><text x="1.4296%" y="2543.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (48 samples, 0.06%)</title><rect x="1.1796%" y="2517" width="0.0612%" height="15" fill="rgb(207,40,23)" fg:x="925" fg:w="48"/><text x="1.4296%" y="2527.50"></text></g><g><title>prometheus::histogram::Histogram::observe (48 samples, 0.06%)</title><rect x="1.1796%" y="2501" width="0.0612%" height="15" fill="rgb(223,111,35)" fg:x="925" fg:w="48"/><text x="1.4296%" y="2511.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (48 samples, 0.06%)</title><rect x="1.1796%" y="2485" width="0.0612%" height="15" fill="rgb(229,147,28)" fg:x="925" fg:w="48"/><text x="1.4296%" y="2495.50"></text></g><g><title>prometheus::histogram::ShardAndCount::inc (48 samples, 0.06%)</title><rect x="1.1796%" y="2469" width="0.0612%" height="15" fill="rgb(211,29,28)" fg:x="925" fg:w="48"/><text x="1.4296%" y="2479.50"></text></g><g><title>prometheus::histogram::ShardAndCount::inc_by (48 samples, 0.06%)</title><rect x="1.1796%" y="2453" width="0.0612%" height="15" fill="rgb(228,72,33)" fg:x="925" fg:w="48"/><text x="1.4296%" y="2463.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (48 samples, 0.06%)</title><rect x="1.1796%" y="2437" width="0.0612%" height="15" fill="rgb(205,214,31)" fg:x="925" fg:w="48"/><text x="1.4296%" y="2447.50"></text></g><g><title>core::sync::atomic::atomic_add (48 samples, 0.06%)</title><rect x="1.1796%" y="2421" width="0.0612%" height="15" fill="rgb(224,111,15)" fg:x="925" fg:w="48"/><text x="1.4296%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::Histogram&gt; (14 samples, 0.02%)</title><rect x="1.2408%" y="2533" width="0.0179%" height="15" fill="rgb(253,21,26)" fg:x="973" fg:w="14"/><text x="1.4908%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;prometheus::histogram::HistogramCore&gt;&gt; (14 samples, 0.02%)</title><rect x="1.2408%" y="2517" width="0.0179%" height="15" fill="rgb(245,139,43)" fg:x="973" fg:w="14"/><text x="1.4908%" y="2527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="1.2408%" y="2501" width="0.0179%" height="15" fill="rgb(252,170,7)" fg:x="973" fg:w="14"/><text x="1.4908%" y="2511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.02%)</title><rect x="1.2408%" y="2485" width="0.0179%" height="15" fill="rgb(231,118,14)" fg:x="973" fg:w="14"/><text x="1.4908%" y="2495.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.02%)</title><rect x="1.2408%" y="2469" width="0.0179%" height="15" fill="rgb(238,83,0)" fg:x="973" fg:w="14"/><text x="1.4908%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (63 samples, 0.08%)</title><rect x="1.1796%" y="2549" width="0.0803%" height="15" fill="rgb(221,39,39)" fg:x="925" fg:w="63"/><text x="1.4296%" y="2559.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (10 samples, 0.01%)</title><rect x="1.2663%" y="2501" width="0.0128%" height="15" fill="rgb(222,119,46)" fg:x="993" fg:w="10"/><text x="1.5163%" y="2511.50"></text></g><g><title>&lt;prometheus::histogram::Histogram as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="1.2663%" y="2485" width="0.0128%" height="15" fill="rgb(222,165,49)" fg:x="993" fg:w="10"/><text x="1.5163%" y="2495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="1.2663%" y="2469" width="0.0128%" height="15" fill="rgb(219,113,52)" fg:x="993" fg:w="10"/><text x="1.5163%" y="2479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.01%)</title><rect x="1.2663%" y="2453" width="0.0128%" height="15" fill="rgb(214,7,15)" fg:x="993" fg:w="10"/><text x="1.5163%" y="2463.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.01%)</title><rect x="1.2663%" y="2437" width="0.0128%" height="15" fill="rgb(235,32,4)" fg:x="993" fg:w="10"/><text x="1.5163%" y="2447.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (9 samples, 0.01%)</title><rect x="1.2791%" y="2501" width="0.0115%" height="15" fill="rgb(238,90,54)" fg:x="1003" fg:w="9"/><text x="1.5291%" y="2511.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (9 samples, 0.01%)</title><rect x="1.2791%" y="2485" width="0.0115%" height="15" fill="rgb(213,208,19)" fg:x="1003" fg:w="9"/><text x="1.5291%" y="2495.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (9 samples, 0.01%)</title><rect x="1.2791%" y="2469" width="0.0115%" height="15" fill="rgb(233,156,4)" fg:x="1003" fg:w="9"/><text x="1.5291%" y="2479.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (23 samples, 0.03%)</title><rect x="1.2663%" y="2549" width="0.0293%" height="15" fill="rgb(207,194,5)" fg:x="993" fg:w="23"/><text x="1.5163%" y="2559.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (23 samples, 0.03%)</title><rect x="1.2663%" y="2533" width="0.0293%" height="15" fill="rgb(206,111,30)" fg:x="993" fg:w="23"/><text x="1.5163%" y="2543.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (23 samples, 0.03%)</title><rect x="1.2663%" y="2517" width="0.0293%" height="15" fill="rgb(243,70,54)" fg:x="993" fg:w="23"/><text x="1.5163%" y="2527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (9 samples, 0.01%)</title><rect x="1.3084%" y="2485" width="0.0115%" height="15" fill="rgb(242,28,8)" fg:x="1026" fg:w="9"/><text x="1.5584%" y="2495.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (9 samples, 0.01%)</title><rect x="1.3084%" y="2469" width="0.0115%" height="15" fill="rgb(219,106,18)" fg:x="1026" fg:w="9"/><text x="1.5584%" y="2479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.01%)</title><rect x="1.3084%" y="2453" width="0.0115%" height="15" fill="rgb(244,222,10)" fg:x="1026" fg:w="9"/><text x="1.5584%" y="2463.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (9 samples, 0.01%)</title><rect x="1.3084%" y="2437" width="0.0115%" height="15" fill="rgb(236,179,52)" fg:x="1026" fg:w="9"/><text x="1.5584%" y="2447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.01%)</title><rect x="1.3084%" y="2421" width="0.0115%" height="15" fill="rgb(213,23,39)" fg:x="1026" fg:w="9"/><text x="1.5584%" y="2431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (9 samples, 0.01%)</title><rect x="1.3084%" y="2405" width="0.0115%" height="15" fill="rgb(238,48,10)" fg:x="1026" fg:w="9"/><text x="1.5584%" y="2415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9 samples, 0.01%)</title><rect x="1.3084%" y="2389" width="0.0115%" height="15" fill="rgb(251,196,23)" fg:x="1026" fg:w="9"/><text x="1.5584%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (464 samples, 0.59%)</title><rect x="0.7384%" y="2821" width="0.5917%" height="15" fill="rgb(250,152,24)" fg:x="579" fg:w="464"/><text x="0.9884%" y="2831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (464 samples, 0.59%)</title><rect x="0.7384%" y="2805" width="0.5917%" height="15" fill="rgb(209,150,17)" fg:x="579" fg:w="464"/><text x="0.9884%" y="2815.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (464 samples, 0.59%)</title><rect x="0.7384%" y="2789" width="0.5917%" height="15" fill="rgb(234,202,34)" fg:x="579" fg:w="464"/><text x="0.9884%" y="2799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (464 samples, 0.59%)</title><rect x="0.7384%" y="2773" width="0.5917%" height="15" fill="rgb(253,148,53)" fg:x="579" fg:w="464"/><text x="0.9884%" y="2783.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (464 samples, 0.59%)</title><rect x="0.7384%" y="2757" width="0.5917%" height="15" fill="rgb(218,129,16)" fg:x="579" fg:w="464"/><text x="0.9884%" y="2767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (464 samples, 0.59%)</title><rect x="0.7384%" y="2741" width="0.5917%" height="15" fill="rgb(216,85,19)" fg:x="579" fg:w="464"/><text x="0.9884%" y="2751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (464 samples, 0.59%)</title><rect x="0.7384%" y="2725" width="0.5917%" height="15" fill="rgb(235,228,7)" fg:x="579" fg:w="464"/><text x="0.9884%" y="2735.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (461 samples, 0.59%)</title><rect x="0.7422%" y="2709" width="0.5879%" height="15" fill="rgb(245,175,0)" fg:x="582" fg:w="461"/><text x="0.9922%" y="2719.50"></text></g><g><title>aptos_db::AptosDB::save_transactions_impl::{{closure}}::{{closure}}::{{closure}} (461 samples, 0.59%)</title><rect x="0.7422%" y="2693" width="0.5879%" height="15" fill="rgb(208,168,36)" fg:x="582" fg:w="461"/><text x="0.9922%" y="2703.50"></text></g><g><title>aptos_db::event_store::EventStore::put_events (461 samples, 0.59%)</title><rect x="0.7422%" y="2677" width="0.5879%" height="15" fill="rgb(246,171,24)" fg:x="582" fg:w="461"/><text x="0.9922%" y="2687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (277 samples, 0.35%)</title><rect x="0.9768%" y="2661" width="0.3532%" height="15" fill="rgb(215,142,24)" fg:x="766" fg:w="277"/><text x="1.2268%" y="2671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (224 samples, 0.29%)</title><rect x="1.0444%" y="2645" width="0.2857%" height="15" fill="rgb(250,187,7)" fg:x="819" fg:w="224"/><text x="1.2944%" y="2655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (224 samples, 0.29%)</title><rect x="1.0444%" y="2629" width="0.2857%" height="15" fill="rgb(228,66,33)" fg:x="819" fg:w="224"/><text x="1.2944%" y="2639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (224 samples, 0.29%)</title><rect x="1.0444%" y="2613" width="0.2857%" height="15" fill="rgb(234,215,21)" fg:x="819" fg:w="224"/><text x="1.2944%" y="2623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (224 samples, 0.29%)</title><rect x="1.0444%" y="2597" width="0.2857%" height="15" fill="rgb(222,191,20)" fg:x="819" fg:w="224"/><text x="1.2944%" y="2607.50"></text></g><g><title>aptos_db::event_store::EventStore::put_events::{{closure}} (224 samples, 0.29%)</title><rect x="1.0444%" y="2581" width="0.2857%" height="15" fill="rgb(245,79,54)" fg:x="819" fg:w="224"/><text x="1.2944%" y="2591.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (224 samples, 0.29%)</title><rect x="1.0444%" y="2565" width="0.2857%" height="15" fill="rgb(240,10,37)" fg:x="819" fg:w="224"/><text x="1.2944%" y="2575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (22 samples, 0.03%)</title><rect x="1.3020%" y="2549" width="0.0281%" height="15" fill="rgb(214,192,32)" fg:x="1021" fg:w="22"/><text x="1.5520%" y="2559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (22 samples, 0.03%)</title><rect x="1.3020%" y="2533" width="0.0281%" height="15" fill="rgb(209,36,54)" fg:x="1021" fg:w="22"/><text x="1.5520%" y="2543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.02%)</title><rect x="1.3084%" y="2517" width="0.0217%" height="15" fill="rgb(220,10,11)" fg:x="1026" fg:w="17"/><text x="1.5584%" y="2527.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (17 samples, 0.02%)</title><rect x="1.3084%" y="2501" width="0.0217%" height="15" fill="rgb(221,106,17)" fg:x="1026" fg:w="17"/><text x="1.5584%" y="2511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (8 samples, 0.01%)</title><rect x="1.3199%" y="2485" width="0.0102%" height="15" fill="rgb(251,142,44)" fg:x="1035" fg:w="8"/><text x="1.5699%" y="2495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.01%)</title><rect x="1.3199%" y="2469" width="0.0102%" height="15" fill="rgb(238,13,15)" fg:x="1035" fg:w="8"/><text x="1.5699%" y="2479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (471 samples, 0.60%)</title><rect x="0.7358%" y="2949" width="0.6006%" height="15" fill="rgb(208,107,27)" fg:x="577" fg:w="471"/><text x="0.9858%" y="2959.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (470 samples, 0.60%)</title><rect x="0.7371%" y="2933" width="0.5994%" height="15" fill="rgb(205,136,37)" fg:x="578" fg:w="470"/><text x="0.9871%" y="2943.50"></text></g><g><title>core::iter::adapters::try_process (470 samples, 0.60%)</title><rect x="0.7371%" y="2917" width="0.5994%" height="15" fill="rgb(250,205,27)" fg:x="578" fg:w="470"/><text x="0.9871%" y="2927.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (469 samples, 0.60%)</title><rect x="0.7384%" y="2901" width="0.5981%" height="15" fill="rgb(210,80,43)" fg:x="579" fg:w="469"/><text x="0.9884%" y="2911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (469 samples, 0.60%)</title><rect x="0.7384%" y="2885" width="0.5981%" height="15" fill="rgb(247,160,36)" fg:x="579" fg:w="469"/><text x="0.9884%" y="2895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (469 samples, 0.60%)</title><rect x="0.7384%" y="2869" width="0.5981%" height="15" fill="rgb(234,13,49)" fg:x="579" fg:w="469"/><text x="0.9884%" y="2879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (469 samples, 0.60%)</title><rect x="0.7384%" y="2853" width="0.5981%" height="15" fill="rgb(234,122,0)" fg:x="579" fg:w="469"/><text x="0.9884%" y="2863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (469 samples, 0.60%)</title><rect x="0.7384%" y="2837" width="0.5981%" height="15" fill="rgb(207,146,38)" fg:x="579" fg:w="469"/><text x="0.9884%" y="2847.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (10 samples, 0.01%)</title><rect x="1.3364%" y="2853" width="0.0128%" height="15" fill="rgb(207,177,25)" fg:x="1048" fg:w="10"/><text x="1.5864%" y="2863.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (10 samples, 0.01%)</title><rect x="1.3364%" y="2837" width="0.0128%" height="15" fill="rgb(211,178,42)" fg:x="1048" fg:w="10"/><text x="1.5864%" y="2847.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (10 samples, 0.01%)</title><rect x="1.3364%" y="2821" width="0.0128%" height="15" fill="rgb(230,69,54)" fg:x="1048" fg:w="10"/><text x="1.5864%" y="2831.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (10 samples, 0.01%)</title><rect x="1.3364%" y="2805" width="0.0128%" height="15" fill="rgb(214,135,41)" fg:x="1048" fg:w="10"/><text x="1.5864%" y="2815.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (10 samples, 0.01%)</title><rect x="1.3364%" y="2789" width="0.0128%" height="15" fill="rgb(237,67,25)" fg:x="1048" fg:w="10"/><text x="1.5864%" y="2799.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (10 samples, 0.01%)</title><rect x="1.3364%" y="2773" width="0.0128%" height="15" fill="rgb(222,189,50)" fg:x="1048" fg:w="10"/><text x="1.5864%" y="2783.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (10 samples, 0.01%)</title><rect x="1.3364%" y="2757" width="0.0128%" height="15" fill="rgb(245,148,34)" fg:x="1048" fg:w="10"/><text x="1.5864%" y="2767.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (10 samples, 0.01%)</title><rect x="1.3364%" y="2741" width="0.0128%" height="15" fill="rgb(222,29,6)" fg:x="1048" fg:w="10"/><text x="1.5864%" y="2751.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (10 samples, 0.01%)</title><rect x="1.3364%" y="2725" width="0.0128%" height="15" fill="rgb(221,189,43)" fg:x="1048" fg:w="10"/><text x="1.5864%" y="2735.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (22 samples, 0.03%)</title><rect x="1.3811%" y="2453" width="0.0281%" height="15" fill="rgb(207,36,27)" fg:x="1083" fg:w="22"/><text x="1.6311%" y="2463.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 0.03%)</title><rect x="1.3811%" y="2437" width="0.0281%" height="15" fill="rgb(217,90,24)" fg:x="1083" fg:w="22"/><text x="1.6311%" y="2447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (19 samples, 0.02%)</title><rect x="1.3849%" y="2421" width="0.0242%" height="15" fill="rgb(224,66,35)" fg:x="1086" fg:w="19"/><text x="1.6349%" y="2431.50"></text></g><g><title> 32]&gt;::serialize (19 samples, 0.02%)</title><rect x="1.3849%" y="2405" width="0.0242%" height="15" fill="rgb(221,13,50)" fg:x="1086" fg:w="19"/><text x="1.6349%" y="2415.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (15 samples, 0.02%)</title><rect x="1.3900%" y="2389" width="0.0191%" height="15" fill="rgb(236,68,49)" fg:x="1090" fg:w="15"/><text x="1.6400%" y="2399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (15 samples, 0.02%)</title><rect x="1.3900%" y="2373" width="0.0191%" height="15" fill="rgb(229,146,28)" fg:x="1090" fg:w="15"/><text x="1.6400%" y="2383.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (15 samples, 0.02%)</title><rect x="1.3900%" y="2357" width="0.0191%" height="15" fill="rgb(225,31,38)" fg:x="1090" fg:w="15"/><text x="1.6400%" y="2367.50"></text></g><g><title>std::io::Write::write_all (15 samples, 0.02%)</title><rect x="1.3900%" y="2341" width="0.0191%" height="15" fill="rgb(250,208,3)" fg:x="1090" fg:w="15"/><text x="1.6400%" y="2351.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoV0Hasher as std::io::Write&gt;::write (15 samples, 0.02%)</title><rect x="1.3900%" y="2325" width="0.0191%" height="15" fill="rgb(246,54,23)" fg:x="1090" fg:w="15"/><text x="1.6400%" y="2335.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (14 samples, 0.02%)</title><rect x="1.3913%" y="2309" width="0.0179%" height="15" fill="rgb(243,76,11)" fg:x="1091" fg:w="14"/><text x="1.6413%" y="2319.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (14 samples, 0.02%)</title><rect x="1.3913%" y="2293" width="0.0179%" height="15" fill="rgb(245,21,50)" fg:x="1091" fg:w="14"/><text x="1.6413%" y="2303.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (14 samples, 0.02%)</title><rect x="1.3913%" y="2277" width="0.0179%" height="15" fill="rgb(228,9,43)" fg:x="1091" fg:w="14"/><text x="1.6413%" y="2287.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (14 samples, 0.02%)</title><rect x="1.3913%" y="2261" width="0.0179%" height="15" fill="rgb(208,100,47)" fg:x="1091" fg:w="14"/><text x="1.6413%" y="2271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.01%)</title><rect x="1.3977%" y="2245" width="0.0115%" height="15" fill="rgb(232,26,8)" fg:x="1096" fg:w="9"/><text x="1.6477%" y="2255.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (42 samples, 0.05%)</title><rect x="1.3581%" y="2725" width="0.0536%" height="15" fill="rgb(216,166,38)" fg:x="1065" fg:w="42"/><text x="1.6081%" y="2735.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (41 samples, 0.05%)</title><rect x="1.3594%" y="2709" width="0.0523%" height="15" fill="rgb(251,202,51)" fg:x="1066" fg:w="41"/><text x="1.6094%" y="2719.50"></text></g><g><title>aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize (41 samples, 0.05%)</title><rect x="1.3594%" y="2693" width="0.0523%" height="15" fill="rgb(254,216,34)" fg:x="1066" fg:w="41"/><text x="1.6094%" y="2703.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (41 samples, 0.05%)</title><rect x="1.3594%" y="2677" width="0.0523%" height="15" fill="rgb(251,32,27)" fg:x="1066" fg:w="41"/><text x="1.6094%" y="2687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (25 samples, 0.03%)</title><rect x="1.3798%" y="2661" width="0.0319%" height="15" fill="rgb(208,127,28)" fg:x="1082" fg:w="25"/><text x="1.6298%" y="2671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (25 samples, 0.03%)</title><rect x="1.3798%" y="2645" width="0.0319%" height="15" fill="rgb(224,137,22)" fg:x="1082" fg:w="25"/><text x="1.6298%" y="2655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (24 samples, 0.03%)</title><rect x="1.3811%" y="2629" width="0.0306%" height="15" fill="rgb(254,70,32)" fg:x="1083" fg:w="24"/><text x="1.6311%" y="2639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.03%)</title><rect x="1.3811%" y="2613" width="0.0306%" height="15" fill="rgb(229,75,37)" fg:x="1083" fg:w="24"/><text x="1.6311%" y="2623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (24 samples, 0.03%)</title><rect x="1.3811%" y="2597" width="0.0306%" height="15" fill="rgb(252,64,23)" fg:x="1083" fg:w="24"/><text x="1.6311%" y="2607.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (24 samples, 0.03%)</title><rect x="1.3811%" y="2581" width="0.0306%" height="15" fill="rgb(232,162,48)" fg:x="1083" fg:w="24"/><text x="1.6311%" y="2591.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (24 samples, 0.03%)</title><rect x="1.3811%" y="2565" width="0.0306%" height="15" fill="rgb(246,160,12)" fg:x="1083" fg:w="24"/><text x="1.6311%" y="2575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (24 samples, 0.03%)</title><rect x="1.3811%" y="2549" width="0.0306%" height="15" fill="rgb(247,166,0)" fg:x="1083" fg:w="24"/><text x="1.6311%" y="2559.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (24 samples, 0.03%)</title><rect x="1.3811%" y="2533" width="0.0306%" height="15" fill="rgb(249,219,21)" fg:x="1083" fg:w="24"/><text x="1.6311%" y="2543.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (24 samples, 0.03%)</title><rect x="1.3811%" y="2517" width="0.0306%" height="15" fill="rgb(205,209,3)" fg:x="1083" fg:w="24"/><text x="1.6311%" y="2527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (24 samples, 0.03%)</title><rect x="1.3811%" y="2501" width="0.0306%" height="15" fill="rgb(243,44,1)" fg:x="1083" fg:w="24"/><text x="1.6311%" y="2511.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (24 samples, 0.03%)</title><rect x="1.3811%" y="2485" width="0.0306%" height="15" fill="rgb(206,159,16)" fg:x="1083" fg:w="24"/><text x="1.6311%" y="2495.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 0.03%)</title><rect x="1.3811%" y="2469" width="0.0306%" height="15" fill="rgb(244,77,30)" fg:x="1083" fg:w="24"/><text x="1.6311%" y="2479.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (72 samples, 0.09%)</title><rect x="1.3492%" y="2757" width="0.0918%" height="15" fill="rgb(218,69,12)" fg:x="1058" fg:w="72"/><text x="1.5992%" y="2767.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (72 samples, 0.09%)</title><rect x="1.3492%" y="2741" width="0.0918%" height="15" fill="rgb(212,87,7)" fg:x="1058" fg:w="72"/><text x="1.5992%" y="2751.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (23 samples, 0.03%)</title><rect x="1.4117%" y="2725" width="0.0293%" height="15" fill="rgb(245,114,25)" fg:x="1107" fg:w="23"/><text x="1.6617%" y="2735.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (23 samples, 0.03%)</title><rect x="1.4117%" y="2709" width="0.0293%" height="15" fill="rgb(210,61,42)" fg:x="1107" fg:w="23"/><text x="1.6617%" y="2719.50"></text></g><g><title>std::io::Write::write_all (23 samples, 0.03%)</title><rect x="1.4117%" y="2693" width="0.0293%" height="15" fill="rgb(211,52,33)" fg:x="1107" fg:w="23"/><text x="1.6617%" y="2703.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionHasher as std::io::Write&gt;::write (23 samples, 0.03%)</title><rect x="1.4117%" y="2677" width="0.0293%" height="15" fill="rgb(234,58,33)" fg:x="1107" fg:w="23"/><text x="1.6617%" y="2687.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (22 samples, 0.03%)</title><rect x="1.4130%" y="2661" width="0.0281%" height="15" fill="rgb(220,115,36)" fg:x="1108" fg:w="22"/><text x="1.6630%" y="2671.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (21 samples, 0.03%)</title><rect x="1.4142%" y="2645" width="0.0268%" height="15" fill="rgb(243,153,54)" fg:x="1109" fg:w="21"/><text x="1.6642%" y="2655.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (21 samples, 0.03%)</title><rect x="1.4142%" y="2629" width="0.0268%" height="15" fill="rgb(251,47,18)" fg:x="1109" fg:w="21"/><text x="1.6642%" y="2639.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (21 samples, 0.03%)</title><rect x="1.4142%" y="2613" width="0.0268%" height="15" fill="rgb(242,102,42)" fg:x="1109" fg:w="21"/><text x="1.6642%" y="2623.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as aptos_crypto::hash::CryptoHash&gt;::hash (90 samples, 0.11%)</title><rect x="1.3364%" y="2869" width="0.1148%" height="15" fill="rgb(234,31,38)" fg:x="1048" fg:w="90"/><text x="1.5864%" y="2879.50"></text></g><g><title>bcs::ser::serialize_into (80 samples, 0.10%)</title><rect x="1.3492%" y="2853" width="0.1020%" height="15" fill="rgb(221,117,51)" fg:x="1058" fg:w="80"/><text x="1.5992%" y="2863.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (80 samples, 0.10%)</title><rect x="1.3492%" y="2837" width="0.1020%" height="15" fill="rgb(212,20,18)" fg:x="1058" fg:w="80"/><text x="1.5992%" y="2847.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::Transaction&gt;::serialize (80 samples, 0.10%)</title><rect x="1.3492%" y="2821" width="0.1020%" height="15" fill="rgb(245,133,36)" fg:x="1058" fg:w="80"/><text x="1.5992%" y="2831.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (80 samples, 0.10%)</title><rect x="1.3492%" y="2805" width="0.1020%" height="15" fill="rgb(212,6,19)" fg:x="1058" fg:w="80"/><text x="1.5992%" y="2815.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::SignedTransaction&gt;::serialize (80 samples, 0.10%)</title><rect x="1.3492%" y="2789" width="0.1020%" height="15" fill="rgb(218,1,36)" fg:x="1058" fg:w="80"/><text x="1.5992%" y="2799.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (80 samples, 0.10%)</title><rect x="1.3492%" y="2773" width="0.1020%" height="15" fill="rgb(246,84,54)" fg:x="1058" fg:w="80"/><text x="1.5992%" y="2783.50"></text></g><g><title>aptos_types::transaction::authenticator::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::authenticator::TransactionAuthenticator&gt;::serialize (8 samples, 0.01%)</title><rect x="1.4410%" y="2757" width="0.0102%" height="15" fill="rgb(242,110,6)" fg:x="1130" fg:w="8"/><text x="1.6910%" y="2767.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (17 samples, 0.02%)</title><rect x="1.4601%" y="2741" width="0.0217%" height="15" fill="rgb(214,47,5)" fg:x="1145" fg:w="17"/><text x="1.7101%" y="2751.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 0.02%)</title><rect x="1.4601%" y="2725" width="0.0217%" height="15" fill="rgb(218,159,25)" fg:x="1145" fg:w="17"/><text x="1.7101%" y="2735.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (13 samples, 0.02%)</title><rect x="1.4652%" y="2709" width="0.0166%" height="15" fill="rgb(215,211,28)" fg:x="1149" fg:w="13"/><text x="1.7152%" y="2719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (13 samples, 0.02%)</title><rect x="1.4652%" y="2693" width="0.0166%" height="15" fill="rgb(238,59,32)" fg:x="1149" fg:w="13"/><text x="1.7152%" y="2703.50"></text></g><g><title>aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize (13 samples, 0.02%)</title><rect x="1.4652%" y="2677" width="0.0166%" height="15" fill="rgb(226,82,3)" fg:x="1149" fg:w="13"/><text x="1.7152%" y="2687.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.02%)</title><rect x="1.4665%" y="2661" width="0.0153%" height="15" fill="rgb(240,164,32)" fg:x="1150" fg:w="12"/><text x="1.7165%" y="2671.50"></text></g><g><title>aptos_db::schema::transaction::&lt;impl aptos_schemadb::schema::ValueCodec&lt;aptos_db::schema::transaction::TransactionSchema&gt; for aptos_types::transaction::Transaction&gt;::encode_value (18 samples, 0.02%)</title><rect x="1.4601%" y="2853" width="0.0230%" height="15" fill="rgb(232,46,7)" fg:x="1145" fg:w="18"/><text x="1.7101%" y="2863.50"></text></g><g><title>bcs::ser::to_bytes (18 samples, 0.02%)</title><rect x="1.4601%" y="2837" width="0.0230%" height="15" fill="rgb(229,129,53)" fg:x="1145" fg:w="18"/><text x="1.7101%" y="2847.50"></text></g><g><title>bcs::ser::serialize_into (18 samples, 0.02%)</title><rect x="1.4601%" y="2821" width="0.0230%" height="15" fill="rgb(234,188,29)" fg:x="1145" fg:w="18"/><text x="1.7101%" y="2831.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::Transaction&gt;::serialize (18 samples, 0.02%)</title><rect x="1.4601%" y="2805" width="0.0230%" height="15" fill="rgb(246,141,4)" fg:x="1145" fg:w="18"/><text x="1.7101%" y="2815.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (18 samples, 0.02%)</title><rect x="1.4601%" y="2789" width="0.0230%" height="15" fill="rgb(229,23,39)" fg:x="1145" fg:w="18"/><text x="1.7101%" y="2799.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::SignedTransaction&gt;::serialize (18 samples, 0.02%)</title><rect x="1.4601%" y="2773" width="0.0230%" height="15" fill="rgb(206,12,3)" fg:x="1145" fg:w="18"/><text x="1.7101%" y="2783.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 0.02%)</title><rect x="1.4601%" y="2757" width="0.0230%" height="15" fill="rgb(252,226,20)" fg:x="1145" fg:w="18"/><text x="1.7101%" y="2767.50"></text></g><g><title>aptos_infallible::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.01%)</title><rect x="1.4869%" y="2853" width="0.0128%" height="15" fill="rgb(216,123,35)" fg:x="1166" fg:w="10"/><text x="1.7369%" y="2863.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.01%)</title><rect x="1.4869%" y="2837" width="0.0128%" height="15" fill="rgb(212,68,40)" fg:x="1166" fg:w="10"/><text x="1.7369%" y="2847.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (10 samples, 0.01%)</title><rect x="1.4869%" y="2821" width="0.0128%" height="15" fill="rgb(254,125,32)" fg:x="1166" fg:w="10"/><text x="1.7369%" y="2831.50"></text></g><g><title>&lt;prometheus::atomic64::AtomicF64 as prometheus::atomic64::Atomic&gt;::inc_by (9 samples, 0.01%)</title><rect x="1.5163%" y="2773" width="0.0115%" height="15" fill="rgb(253,97,22)" fg:x="1189" fg:w="9"/><text x="1.7663%" y="2783.50"></text></g><g><title>prometheus::atomic64::u64_to_f64 (9 samples, 0.01%)</title><rect x="1.5163%" y="2757" width="0.0115%" height="15" fill="rgb(241,101,14)" fg:x="1189" fg:w="9"/><text x="1.7663%" y="2767.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::from_bits (9 samples, 0.01%)</title><rect x="1.5163%" y="2741" width="0.0115%" height="15" fill="rgb(238,103,29)" fg:x="1189" fg:w="9"/><text x="1.7663%" y="2751.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::from_bits::rt_u64_to_f64 (9 samples, 0.01%)</title><rect x="1.5163%" y="2725" width="0.0115%" height="15" fill="rgb(233,195,47)" fg:x="1189" fg:w="9"/><text x="1.7663%" y="2735.50"></text></g><g><title>prometheus::histogram::Histogram::observe (20 samples, 0.03%)</title><rect x="1.5035%" y="2805" width="0.0255%" height="15" fill="rgb(246,218,30)" fg:x="1179" fg:w="20"/><text x="1.7535%" y="2815.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (20 samples, 0.03%)</title><rect x="1.5035%" y="2789" width="0.0255%" height="15" fill="rgb(219,145,47)" fg:x="1179" fg:w="20"/><text x="1.7535%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (24 samples, 0.03%)</title><rect x="1.5035%" y="2853" width="0.0306%" height="15" fill="rgb(243,12,26)" fg:x="1179" fg:w="24"/><text x="1.7535%" y="2863.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (24 samples, 0.03%)</title><rect x="1.5035%" y="2837" width="0.0306%" height="15" fill="rgb(214,87,16)" fg:x="1179" fg:w="24"/><text x="1.7535%" y="2847.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (24 samples, 0.03%)</title><rect x="1.5035%" y="2821" width="0.0306%" height="15" fill="rgb(208,99,42)" fg:x="1179" fg:w="24"/><text x="1.7535%" y="2831.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (8 samples, 0.01%)</title><rect x="1.5392%" y="2805" width="0.0102%" height="15" fill="rgb(253,99,2)" fg:x="1207" fg:w="8"/><text x="1.7892%" y="2815.50"></text></g><g><title>&lt;prometheus::histogram::Histogram as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="1.5392%" y="2789" width="0.0102%" height="15" fill="rgb(220,168,23)" fg:x="1207" fg:w="8"/><text x="1.7892%" y="2799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="1.5392%" y="2773" width="0.0102%" height="15" fill="rgb(242,38,24)" fg:x="1207" fg:w="8"/><text x="1.7892%" y="2783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.01%)</title><rect x="1.5392%" y="2757" width="0.0102%" height="15" fill="rgb(225,182,9)" fg:x="1207" fg:w="8"/><text x="1.7892%" y="2767.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.01%)</title><rect x="1.5392%" y="2741" width="0.0102%" height="15" fill="rgb(243,178,37)" fg:x="1207" fg:w="8"/><text x="1.7892%" y="2751.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (18 samples, 0.02%)</title><rect x="1.5392%" y="2853" width="0.0230%" height="15" fill="rgb(232,139,19)" fg:x="1207" fg:w="18"/><text x="1.7892%" y="2863.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (18 samples, 0.02%)</title><rect x="1.5392%" y="2837" width="0.0230%" height="15" fill="rgb(225,201,24)" fg:x="1207" fg:w="18"/><text x="1.7892%" y="2847.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (18 samples, 0.02%)</title><rect x="1.5392%" y="2821" width="0.0230%" height="15" fill="rgb(221,47,46)" fg:x="1207" fg:w="18"/><text x="1.7892%" y="2831.50"></text></g><g><title>aptos_db::transaction_store::TransactionStore::put_transaction (183 samples, 0.23%)</title><rect x="1.3364%" y="2885" width="0.2334%" height="15" fill="rgb(249,23,13)" fg:x="1048" fg:w="183"/><text x="1.5864%" y="2895.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (93 samples, 0.12%)</title><rect x="1.4512%" y="2869" width="0.1186%" height="15" fill="rgb(219,9,5)" fg:x="1138" fg:w="93"/><text x="1.7012%" y="2879.50"></text></g><g><title>arena_ralloc_move_helper (9 samples, 0.01%)</title><rect x="1.5800%" y="2421" width="0.0115%" height="15" fill="rgb(254,171,16)" fg:x="1239" fg:w="9"/><text x="1.8300%" y="2431.50"></text></g><g><title>ipalloct (9 samples, 0.01%)</title><rect x="1.5800%" y="2405" width="0.0115%" height="15" fill="rgb(230,171,20)" fg:x="1239" fg:w="9"/><text x="1.8300%" y="2415.50"></text></g><g><title>ipallocztm (9 samples, 0.01%)</title><rect x="1.5800%" y="2389" width="0.0115%" height="15" fill="rgb(210,71,41)" fg:x="1239" fg:w="9"/><text x="1.8300%" y="2399.50"></text></g><g><title>_rjem_je_arena_palloc (9 samples, 0.01%)</title><rect x="1.5800%" y="2373" width="0.0115%" height="15" fill="rgb(206,173,20)" fg:x="1239" fg:w="9"/><text x="1.8300%" y="2383.50"></text></g><g><title>_rjem_je_arena_palloc (9 samples, 0.01%)</title><rect x="1.5800%" y="2357" width="0.0115%" height="15" fill="rgb(233,88,34)" fg:x="1239" fg:w="9"/><text x="1.8300%" y="2367.50"></text></g><g><title>arena_malloc (9 samples, 0.01%)</title><rect x="1.5800%" y="2341" width="0.0115%" height="15" fill="rgb(223,209,46)" fg:x="1239" fg:w="9"/><text x="1.8300%" y="2351.50"></text></g><g><title>tcache_alloc_small (9 samples, 0.01%)</title><rect x="1.5800%" y="2325" width="0.0115%" height="15" fill="rgb(250,43,18)" fg:x="1239" fg:w="9"/><text x="1.8300%" y="2335.50"></text></g><g><title>iralloct (16 samples, 0.02%)</title><rect x="1.5787%" y="2453" width="0.0204%" height="15" fill="rgb(208,13,10)" fg:x="1238" fg:w="16"/><text x="1.8287%" y="2463.50"></text></g><g><title>_rjem_je_arena_ralloc (15 samples, 0.02%)</title><rect x="1.5800%" y="2437" width="0.0191%" height="15" fill="rgb(212,200,36)" fg:x="1239" fg:w="15"/><text x="1.8300%" y="2447.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (21 samples, 0.03%)</title><rect x="1.5749%" y="2677" width="0.0268%" height="15" fill="rgb(225,90,30)" fg:x="1235" fg:w="21"/><text x="1.8249%" y="2687.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (18 samples, 0.02%)</title><rect x="1.5787%" y="2661" width="0.0230%" height="15" fill="rgb(236,182,39)" fg:x="1238" fg:w="18"/><text x="1.8287%" y="2671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (18 samples, 0.02%)</title><rect x="1.5787%" y="2645" width="0.0230%" height="15" fill="rgb(212,144,35)" fg:x="1238" fg:w="18"/><text x="1.8287%" y="2655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (18 samples, 0.02%)</title><rect x="1.5787%" y="2629" width="0.0230%" height="15" fill="rgb(228,63,44)" fg:x="1238" fg:w="18"/><text x="1.8287%" y="2639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (18 samples, 0.02%)</title><rect x="1.5787%" y="2613" width="0.0230%" height="15" fill="rgb(228,109,6)" fg:x="1238" fg:w="18"/><text x="1.8287%" y="2623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="1.5787%" y="2597" width="0.0230%" height="15" fill="rgb(238,117,24)" fg:x="1238" fg:w="18"/><text x="1.8287%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="1.5787%" y="2581" width="0.0230%" height="15" fill="rgb(242,26,26)" fg:x="1238" fg:w="18"/><text x="1.8287%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.02%)</title><rect x="1.5787%" y="2565" width="0.0230%" height="15" fill="rgb(221,92,48)" fg:x="1238" fg:w="18"/><text x="1.8287%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.02%)</title><rect x="1.5787%" y="2549" width="0.0230%" height="15" fill="rgb(209,209,32)" fg:x="1238" fg:w="18"/><text x="1.8287%" y="2559.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.02%)</title><rect x="1.5787%" y="2533" width="0.0230%" height="15" fill="rgb(221,70,22)" fg:x="1238" fg:w="18"/><text x="1.8287%" y="2543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18 samples, 0.02%)</title><rect x="1.5787%" y="2517" width="0.0230%" height="15" fill="rgb(248,145,5)" fg:x="1238" fg:w="18"/><text x="1.8287%" y="2527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 0.02%)</title><rect x="1.5787%" y="2501" width="0.0230%" height="15" fill="rgb(226,116,26)" fg:x="1238" fg:w="18"/><text x="1.8287%" y="2511.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 0.02%)</title><rect x="1.5787%" y="2485" width="0.0230%" height="15" fill="rgb(244,5,17)" fg:x="1238" fg:w="18"/><text x="1.8287%" y="2495.50"></text></g><g><title>rallocx (18 samples, 0.02%)</title><rect x="1.5787%" y="2469" width="0.0230%" height="15" fill="rgb(252,159,33)" fg:x="1238" fg:w="18"/><text x="1.8287%" y="2479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (9 samples, 0.01%)</title><rect x="1.6144%" y="2549" width="0.0115%" height="15" fill="rgb(206,71,0)" fg:x="1266" fg:w="9"/><text x="1.8644%" y="2559.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.02%)</title><rect x="1.6310%" y="2261" width="0.0204%" height="15" fill="rgb(233,118,54)" fg:x="1279" fg:w="16"/><text x="1.8810%" y="2271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.02%)</title><rect x="1.6310%" y="2245" width="0.0204%" height="15" fill="rgb(234,83,48)" fg:x="1279" fg:w="16"/><text x="1.8810%" y="2255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.02%)</title><rect x="1.6310%" y="2229" width="0.0204%" height="15" fill="rgb(228,3,54)" fg:x="1279" fg:w="16"/><text x="1.8810%" y="2239.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.02%)</title><rect x="1.6310%" y="2213" width="0.0204%" height="15" fill="rgb(226,155,13)" fg:x="1279" fg:w="16"/><text x="1.8810%" y="2223.50"></text></g><g><title>rallocx (14 samples, 0.02%)</title><rect x="1.6336%" y="2197" width="0.0179%" height="15" fill="rgb(241,28,37)" fg:x="1281" fg:w="14"/><text x="1.8836%" y="2207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.02%)</title><rect x="1.6310%" y="2325" width="0.0217%" height="15" fill="rgb(233,93,10)" fg:x="1279" fg:w="17"/><text x="1.8810%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.02%)</title><rect x="1.6310%" y="2309" width="0.0217%" height="15" fill="rgb(225,113,19)" fg:x="1279" fg:w="17"/><text x="1.8810%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.02%)</title><rect x="1.6310%" y="2293" width="0.0217%" height="15" fill="rgb(241,2,18)" fg:x="1279" fg:w="17"/><text x="1.8810%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.02%)</title><rect x="1.6310%" y="2277" width="0.0217%" height="15" fill="rgb(228,207,21)" fg:x="1279" fg:w="17"/><text x="1.8810%" y="2287.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::AccessPath&gt;::serialize (26 samples, 0.03%)</title><rect x="1.6259%" y="2533" width="0.0332%" height="15" fill="rgb(213,211,35)" fg:x="1275" fg:w="26"/><text x="1.8759%" y="2543.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (26 samples, 0.03%)</title><rect x="1.6259%" y="2517" width="0.0332%" height="15" fill="rgb(209,83,10)" fg:x="1275" fg:w="26"/><text x="1.8759%" y="2527.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (22 samples, 0.03%)</title><rect x="1.6310%" y="2501" width="0.0281%" height="15" fill="rgb(209,164,1)" fg:x="1279" fg:w="22"/><text x="1.8810%" y="2511.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 0.03%)</title><rect x="1.6310%" y="2485" width="0.0281%" height="15" fill="rgb(213,184,43)" fg:x="1279" fg:w="22"/><text x="1.8810%" y="2495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (22 samples, 0.03%)</title><rect x="1.6310%" y="2469" width="0.0281%" height="15" fill="rgb(231,61,34)" fg:x="1279" fg:w="22"/><text x="1.8810%" y="2479.50"></text></g><g><title> 32]&gt;::serialize (22 samples, 0.03%)</title><rect x="1.6310%" y="2453" width="0.0281%" height="15" fill="rgb(235,75,3)" fg:x="1279" fg:w="22"/><text x="1.8810%" y="2463.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (22 samples, 0.03%)</title><rect x="1.6310%" y="2437" width="0.0281%" height="15" fill="rgb(220,106,47)" fg:x="1279" fg:w="22"/><text x="1.8810%" y="2447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (22 samples, 0.03%)</title><rect x="1.6310%" y="2421" width="0.0281%" height="15" fill="rgb(210,196,33)" fg:x="1279" fg:w="22"/><text x="1.8810%" y="2431.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (22 samples, 0.03%)</title><rect x="1.6310%" y="2405" width="0.0281%" height="15" fill="rgb(229,154,42)" fg:x="1279" fg:w="22"/><text x="1.8810%" y="2415.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (22 samples, 0.03%)</title><rect x="1.6310%" y="2389" width="0.0281%" height="15" fill="rgb(228,114,26)" fg:x="1279" fg:w="22"/><text x="1.8810%" y="2399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (22 samples, 0.03%)</title><rect x="1.6310%" y="2373" width="0.0281%" height="15" fill="rgb(208,144,1)" fg:x="1279" fg:w="22"/><text x="1.8810%" y="2383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (22 samples, 0.03%)</title><rect x="1.6310%" y="2357" width="0.0281%" height="15" fill="rgb(239,112,37)" fg:x="1279" fg:w="22"/><text x="1.8810%" y="2367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (22 samples, 0.03%)</title><rect x="1.6310%" y="2341" width="0.0281%" height="15" fill="rgb(210,96,50)" fg:x="1279" fg:w="22"/><text x="1.8810%" y="2351.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (28 samples, 0.04%)</title><rect x="1.6259%" y="2549" width="0.0357%" height="15" fill="rgb(222,178,2)" fg:x="1275" fg:w="28"/><text x="1.8759%" y="2559.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::serialize_key (45 samples, 0.06%)</title><rect x="1.6055%" y="2597" width="0.0574%" height="15" fill="rgb(226,74,18)" fg:x="1259" fg:w="45"/><text x="1.8555%" y="2607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (45 samples, 0.06%)</title><rect x="1.6055%" y="2581" width="0.0574%" height="15" fill="rgb(225,67,54)" fg:x="1259" fg:w="45"/><text x="1.8555%" y="2591.50"></text></g><g><title>aptos_types::state_store::state_key::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_key::StateKey&gt;::serialize (45 samples, 0.06%)</title><rect x="1.6055%" y="2565" width="0.0574%" height="15" fill="rgb(251,92,32)" fg:x="1259" fg:w="45"/><text x="1.8555%" y="2575.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (9 samples, 0.01%)</title><rect x="1.6655%" y="2549" width="0.0115%" height="15" fill="rgb(228,149,22)" fg:x="1306" fg:w="9"/><text x="1.9155%" y="2559.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (9 samples, 0.01%)</title><rect x="1.6655%" y="2533" width="0.0115%" height="15" fill="rgb(243,54,13)" fg:x="1306" fg:w="9"/><text x="1.9155%" y="2543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.01%)</title><rect x="1.6655%" y="2517" width="0.0115%" height="15" fill="rgb(243,180,28)" fg:x="1306" fg:w="9"/><text x="1.9155%" y="2527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.01%)</title><rect x="1.6655%" y="2501" width="0.0115%" height="15" fill="rgb(208,167,24)" fg:x="1306" fg:w="9"/><text x="1.9155%" y="2511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.01%)</title><rect x="1.6655%" y="2485" width="0.0115%" height="15" fill="rgb(245,73,45)" fg:x="1306" fg:w="9"/><text x="1.9155%" y="2495.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (87 samples, 0.11%)</title><rect x="1.5698%" y="2773" width="0.1109%" height="15" fill="rgb(237,203,48)" fg:x="1231" fg:w="87"/><text x="1.8198%" y="2783.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (87 samples, 0.11%)</title><rect x="1.5698%" y="2757" width="0.1109%" height="15" fill="rgb(211,197,16)" fg:x="1231" fg:w="87"/><text x="1.8198%" y="2767.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (87 samples, 0.11%)</title><rect x="1.5698%" y="2741" width="0.1109%" height="15" fill="rgb(243,99,51)" fg:x="1231" fg:w="87"/><text x="1.8198%" y="2751.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (87 samples, 0.11%)</title><rect x="1.5698%" y="2725" width="0.1109%" height="15" fill="rgb(215,123,29)" fg:x="1231" fg:w="87"/><text x="1.8198%" y="2735.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (87 samples, 0.11%)</title><rect x="1.5698%" y="2709" width="0.1109%" height="15" fill="rgb(239,186,37)" fg:x="1231" fg:w="87"/><text x="1.8198%" y="2719.50"></text></g><g><title>serde::ser::Serializer::collect_map (87 samples, 0.11%)</title><rect x="1.5698%" y="2693" width="0.1109%" height="15" fill="rgb(252,136,39)" fg:x="1231" fg:w="87"/><text x="1.8198%" y="2703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (62 samples, 0.08%)</title><rect x="1.6017%" y="2677" width="0.0791%" height="15" fill="rgb(223,213,32)" fg:x="1256" fg:w="62"/><text x="1.8517%" y="2687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (62 samples, 0.08%)</title><rect x="1.6017%" y="2661" width="0.0791%" height="15" fill="rgb(233,115,5)" fg:x="1256" fg:w="62"/><text x="1.8517%" y="2671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (59 samples, 0.08%)</title><rect x="1.6055%" y="2645" width="0.0752%" height="15" fill="rgb(207,226,44)" fg:x="1259" fg:w="59"/><text x="1.8555%" y="2655.50"></text></g><g><title>serde::ser::Serializer::collect_map::{{closure}} (59 samples, 0.08%)</title><rect x="1.6055%" y="2629" width="0.0752%" height="15" fill="rgb(208,126,0)" fg:x="1259" fg:w="59"/><text x="1.8555%" y="2639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (59 samples, 0.08%)</title><rect x="1.6055%" y="2613" width="0.0752%" height="15" fill="rgb(244,66,21)" fg:x="1259" fg:w="59"/><text x="1.8555%" y="2623.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 0.02%)</title><rect x="1.6629%" y="2597" width="0.0179%" height="15" fill="rgb(222,97,12)" fg:x="1304" fg:w="14"/><text x="1.9129%" y="2607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.02%)</title><rect x="1.6642%" y="2581" width="0.0166%" height="15" fill="rgb(219,213,19)" fg:x="1305" fg:w="13"/><text x="1.9142%" y="2591.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteOp&gt;::serialize (13 samples, 0.02%)</title><rect x="1.6642%" y="2565" width="0.0166%" height="15" fill="rgb(252,169,30)" fg:x="1305" fg:w="13"/><text x="1.9142%" y="2575.50"></text></g><g><title>aptos_db::schema::write_set::&lt;impl aptos_schemadb::schema::ValueCodec&lt;aptos_db::schema::write_set::WriteSetSchema&gt; for aptos_types::write_set::WriteSet&gt;::encode_value (88 samples, 0.11%)</title><rect x="1.5698%" y="2853" width="0.1122%" height="15" fill="rgb(206,32,51)" fg:x="1231" fg:w="88"/><text x="1.8198%" y="2863.50"></text></g><g><title>bcs::ser::to_bytes (88 samples, 0.11%)</title><rect x="1.5698%" y="2837" width="0.1122%" height="15" fill="rgb(250,172,42)" fg:x="1231" fg:w="88"/><text x="1.8198%" y="2847.50"></text></g><g><title>bcs::ser::serialize_into (88 samples, 0.11%)</title><rect x="1.5698%" y="2821" width="0.1122%" height="15" fill="rgb(209,34,43)" fg:x="1231" fg:w="88"/><text x="1.8198%" y="2831.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (88 samples, 0.11%)</title><rect x="1.5698%" y="2805" width="0.1122%" height="15" fill="rgb(223,11,35)" fg:x="1231" fg:w="88"/><text x="1.8198%" y="2815.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (88 samples, 0.11%)</title><rect x="1.5698%" y="2789" width="0.1122%" height="15" fill="rgb(251,219,26)" fg:x="1231" fg:w="88"/><text x="1.8198%" y="2799.50"></text></g><g><title>aptos_db::AptosDB::save_transactions_impl::{{closure}}::{{closure}} (1,329 samples, 1.69%)</title><rect x="0.0089%" y="2965" width="1.6948%" height="15" fill="rgb(231,119,3)" fg:x="7" fg:w="1329"/><text x="0.2589%" y="2975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (288 samples, 0.37%)</title><rect x="1.3364%" y="2949" width="0.3673%" height="15" fill="rgb(216,97,11)" fg:x="1048" fg:w="288"/><text x="1.5864%" y="2959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (288 samples, 0.37%)</title><rect x="1.3364%" y="2933" width="0.3673%" height="15" fill="rgb(223,59,9)" fg:x="1048" fg:w="288"/><text x="1.5864%" y="2943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (288 samples, 0.37%)</title><rect x="1.3364%" y="2917" width="0.3673%" height="15" fill="rgb(233,93,31)" fg:x="1048" fg:w="288"/><text x="1.5864%" y="2927.50"></text></g><g><title>aptos_db::AptosDB::save_transactions_impl::{{closure}}::{{closure}}::{{closure}} (288 samples, 0.37%)</title><rect x="1.3364%" y="2901" width="0.3673%" height="15" fill="rgb(239,81,33)" fg:x="1048" fg:w="288"/><text x="1.5864%" y="2911.50"></text></g><g><title>aptos_db::transaction_store::TransactionStore::put_write_set (105 samples, 0.13%)</title><rect x="1.5698%" y="2885" width="0.1339%" height="15" fill="rgb(213,120,34)" fg:x="1231" fg:w="105"/><text x="1.8198%" y="2895.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (105 samples, 0.13%)</title><rect x="1.5698%" y="2869" width="0.1339%" height="15" fill="rgb(243,49,53)" fg:x="1231" fg:w="105"/><text x="1.8198%" y="2879.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (25 samples, 0.03%)</title><rect x="1.7037%" y="1045" width="0.0319%" height="15" fill="rgb(247,216,33)" fg:x="1336" fg:w="25"/><text x="1.9537%" y="1055.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (25 samples, 0.03%)</title><rect x="1.7037%" y="1029" width="0.0319%" height="15" fill="rgb(226,26,14)" fg:x="1336" fg:w="25"/><text x="1.9537%" y="1039.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (25 samples, 0.03%)</title><rect x="1.7037%" y="1013" width="0.0319%" height="15" fill="rgb(215,49,53)" fg:x="1336" fg:w="25"/><text x="1.9537%" y="1023.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (25 samples, 0.03%)</title><rect x="1.7037%" y="997" width="0.0319%" height="15" fill="rgb(245,162,40)" fg:x="1336" fg:w="25"/><text x="1.9537%" y="1007.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (25 samples, 0.03%)</title><rect x="1.7037%" y="981" width="0.0319%" height="15" fill="rgb(229,68,17)" fg:x="1336" fg:w="25"/><text x="1.9537%" y="991.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (25 samples, 0.03%)</title><rect x="1.7037%" y="965" width="0.0319%" height="15" fill="rgb(213,182,10)" fg:x="1336" fg:w="25"/><text x="1.9537%" y="975.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (25 samples, 0.03%)</title><rect x="1.7037%" y="949" width="0.0319%" height="15" fill="rgb(245,125,30)" fg:x="1336" fg:w="25"/><text x="1.9537%" y="959.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (25 samples, 0.03%)</title><rect x="1.7037%" y="933" width="0.0319%" height="15" fill="rgb(232,202,2)" fg:x="1336" fg:w="25"/><text x="1.9537%" y="943.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (25 samples, 0.03%)</title><rect x="1.7037%" y="917" width="0.0319%" height="15" fill="rgb(237,140,51)" fg:x="1336" fg:w="25"/><text x="1.9537%" y="927.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (9 samples, 0.01%)</title><rect x="1.7369%" y="917" width="0.0115%" height="15" fill="rgb(236,157,25)" fg:x="1362" fg:w="9"/><text x="1.9869%" y="927.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.01%)</title><rect x="1.7369%" y="901" width="0.0115%" height="15" fill="rgb(219,209,0)" fg:x="1362" fg:w="9"/><text x="1.9869%" y="911.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (9 samples, 0.01%)</title><rect x="1.7369%" y="885" width="0.0115%" height="15" fill="rgb(240,116,54)" fg:x="1362" fg:w="9"/><text x="1.9869%" y="895.50"></text></g><g><title> 32]&gt;::serialize (9 samples, 0.01%)</title><rect x="1.7369%" y="869" width="0.0115%" height="15" fill="rgb(216,10,36)" fg:x="1362" fg:w="9"/><text x="1.9869%" y="879.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (9 samples, 0.01%)</title><rect x="1.7369%" y="853" width="0.0115%" height="15" fill="rgb(222,72,44)" fg:x="1362" fg:w="9"/><text x="1.9869%" y="863.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (9 samples, 0.01%)</title><rect x="1.7369%" y="837" width="0.0115%" height="15" fill="rgb(232,159,9)" fg:x="1362" fg:w="9"/><text x="1.9869%" y="847.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (9 samples, 0.01%)</title><rect x="1.7369%" y="821" width="0.0115%" height="15" fill="rgb(210,39,32)" fg:x="1362" fg:w="9"/><text x="1.9869%" y="831.50"></text></g><g><title>std::io::Write::write_all (9 samples, 0.01%)</title><rect x="1.7369%" y="805" width="0.0115%" height="15" fill="rgb(216,194,45)" fg:x="1362" fg:w="9"/><text x="1.9869%" y="815.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoV0Hasher as std::io::Write&gt;::write (9 samples, 0.01%)</title><rect x="1.7369%" y="789" width="0.0115%" height="15" fill="rgb(218,18,35)" fg:x="1362" fg:w="9"/><text x="1.9869%" y="799.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (47 samples, 0.06%)</title><rect x="1.7700%" y="645" width="0.0599%" height="15" fill="rgb(207,83,51)" fg:x="1388" fg:w="47"/><text x="2.0200%" y="655.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (47 samples, 0.06%)</title><rect x="1.7700%" y="629" width="0.0599%" height="15" fill="rgb(225,63,43)" fg:x="1388" fg:w="47"/><text x="2.0200%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (47 samples, 0.06%)</title><rect x="1.7700%" y="613" width="0.0599%" height="15" fill="rgb(207,57,36)" fg:x="1388" fg:w="47"/><text x="2.0200%" y="623.50"></text></g><g><title> 32]&gt;::serialize (47 samples, 0.06%)</title><rect x="1.7700%" y="597" width="0.0599%" height="15" fill="rgb(216,99,33)" fg:x="1388" fg:w="47"/><text x="2.0200%" y="607.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (43 samples, 0.05%)</title><rect x="1.7751%" y="581" width="0.0548%" height="15" fill="rgb(225,42,16)" fg:x="1392" fg:w="43"/><text x="2.0251%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (43 samples, 0.05%)</title><rect x="1.7751%" y="565" width="0.0548%" height="15" fill="rgb(220,201,45)" fg:x="1392" fg:w="43"/><text x="2.0251%" y="575.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (43 samples, 0.05%)</title><rect x="1.7751%" y="549" width="0.0548%" height="15" fill="rgb(225,33,4)" fg:x="1392" fg:w="43"/><text x="2.0251%" y="559.50"></text></g><g><title>std::io::Write::write_all (43 samples, 0.05%)</title><rect x="1.7751%" y="533" width="0.0548%" height="15" fill="rgb(224,33,50)" fg:x="1392" fg:w="43"/><text x="2.0251%" y="543.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoV0Hasher as std::io::Write&gt;::write (43 samples, 0.05%)</title><rect x="1.7751%" y="517" width="0.0548%" height="15" fill="rgb(246,198,51)" fg:x="1392" fg:w="43"/><text x="2.0251%" y="527.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (35 samples, 0.04%)</title><rect x="1.7853%" y="501" width="0.0446%" height="15" fill="rgb(205,22,4)" fg:x="1400" fg:w="35"/><text x="2.0353%" y="511.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (27 samples, 0.03%)</title><rect x="1.7955%" y="485" width="0.0344%" height="15" fill="rgb(206,3,8)" fg:x="1408" fg:w="27"/><text x="2.0455%" y="495.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (27 samples, 0.03%)</title><rect x="1.7955%" y="469" width="0.0344%" height="15" fill="rgb(251,23,15)" fg:x="1408" fg:w="27"/><text x="2.0455%" y="479.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (27 samples, 0.03%)</title><rect x="1.7955%" y="453" width="0.0344%" height="15" fill="rgb(252,88,28)" fg:x="1408" fg:w="27"/><text x="2.0455%" y="463.50"></text></g><g><title>aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize (68 samples, 0.09%)</title><rect x="1.7483%" y="885" width="0.0867%" height="15" fill="rgb(212,127,14)" fg:x="1371" fg:w="68"/><text x="1.9983%" y="895.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (65 samples, 0.08%)</title><rect x="1.7522%" y="869" width="0.0829%" height="15" fill="rgb(247,145,37)" fg:x="1374" fg:w="65"/><text x="2.0022%" y="879.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (56 samples, 0.07%)</title><rect x="1.7636%" y="853" width="0.0714%" height="15" fill="rgb(209,117,53)" fg:x="1383" fg:w="56"/><text x="2.0136%" y="863.50"></text></g><g><title>serde::ser::Serializer::collect_seq (56 samples, 0.07%)</title><rect x="1.7636%" y="837" width="0.0714%" height="15" fill="rgb(212,90,42)" fg:x="1383" fg:w="56"/><text x="2.0136%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (54 samples, 0.07%)</title><rect x="1.7662%" y="821" width="0.0689%" height="15" fill="rgb(218,164,37)" fg:x="1385" fg:w="54"/><text x="2.0162%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (54 samples, 0.07%)</title><rect x="1.7662%" y="805" width="0.0689%" height="15" fill="rgb(246,65,34)" fg:x="1385" fg:w="54"/><text x="2.0162%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (54 samples, 0.07%)</title><rect x="1.7662%" y="789" width="0.0689%" height="15" fill="rgb(231,100,33)" fg:x="1385" fg:w="54"/><text x="2.0162%" y="799.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (54 samples, 0.07%)</title><rect x="1.7662%" y="773" width="0.0689%" height="15" fill="rgb(228,126,14)" fg:x="1385" fg:w="54"/><text x="2.0162%" y="783.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (54 samples, 0.07%)</title><rect x="1.7662%" y="757" width="0.0689%" height="15" fill="rgb(215,173,21)" fg:x="1385" fg:w="54"/><text x="2.0162%" y="767.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (54 samples, 0.07%)</title><rect x="1.7662%" y="741" width="0.0689%" height="15" fill="rgb(210,6,40)" fg:x="1385" fg:w="54"/><text x="2.0162%" y="751.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (54 samples, 0.07%)</title><rect x="1.7662%" y="725" width="0.0689%" height="15" fill="rgb(212,48,18)" fg:x="1385" fg:w="54"/><text x="2.0162%" y="735.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (54 samples, 0.07%)</title><rect x="1.7662%" y="709" width="0.0689%" height="15" fill="rgb(230,214,11)" fg:x="1385" fg:w="54"/><text x="2.0162%" y="719.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (54 samples, 0.07%)</title><rect x="1.7662%" y="693" width="0.0689%" height="15" fill="rgb(254,105,39)" fg:x="1385" fg:w="54"/><text x="2.0162%" y="703.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (54 samples, 0.07%)</title><rect x="1.7662%" y="677" width="0.0689%" height="15" fill="rgb(245,158,5)" fg:x="1385" fg:w="54"/><text x="2.0162%" y="687.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (51 samples, 0.07%)</title><rect x="1.7700%" y="661" width="0.0650%" height="15" fill="rgb(249,208,11)" fg:x="1388" fg:w="51"/><text x="2.0200%" y="671.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (69 samples, 0.09%)</title><rect x="1.7483%" y="917" width="0.0880%" height="15" fill="rgb(210,39,28)" fg:x="1371" fg:w="69"/><text x="1.9983%" y="927.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (69 samples, 0.09%)</title><rect x="1.7483%" y="901" width="0.0880%" height="15" fill="rgb(211,56,53)" fg:x="1371" fg:w="69"/><text x="1.9983%" y="911.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (109 samples, 0.14%)</title><rect x="1.7369%" y="949" width="0.1390%" height="15" fill="rgb(226,201,30)" fg:x="1362" fg:w="109"/><text x="1.9869%" y="959.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (109 samples, 0.14%)</title><rect x="1.7369%" y="933" width="0.1390%" height="15" fill="rgb(239,101,34)" fg:x="1362" fg:w="109"/><text x="1.9869%" y="943.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (31 samples, 0.04%)</title><rect x="1.8363%" y="917" width="0.0395%" height="15" fill="rgb(226,209,5)" fg:x="1440" fg:w="31"/><text x="2.0863%" y="927.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (31 samples, 0.04%)</title><rect x="1.8363%" y="901" width="0.0395%" height="15" fill="rgb(250,105,47)" fg:x="1440" fg:w="31"/><text x="2.0863%" y="911.50"></text></g><g><title>std::io::Write::write_all (31 samples, 0.04%)</title><rect x="1.8363%" y="885" width="0.0395%" height="15" fill="rgb(230,72,3)" fg:x="1440" fg:w="31"/><text x="2.0863%" y="895.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionHasher as std::io::Write&gt;::write (31 samples, 0.04%)</title><rect x="1.8363%" y="869" width="0.0395%" height="15" fill="rgb(232,218,39)" fg:x="1440" fg:w="31"/><text x="2.0863%" y="879.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (31 samples, 0.04%)</title><rect x="1.8363%" y="853" width="0.0395%" height="15" fill="rgb(248,166,6)" fg:x="1440" fg:w="31"/><text x="2.0863%" y="863.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (29 samples, 0.04%)</title><rect x="1.8389%" y="837" width="0.0370%" height="15" fill="rgb(247,89,20)" fg:x="1442" fg:w="29"/><text x="2.0889%" y="847.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (29 samples, 0.04%)</title><rect x="1.8389%" y="821" width="0.0370%" height="15" fill="rgb(248,130,54)" fg:x="1442" fg:w="29"/><text x="2.0889%" y="831.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (29 samples, 0.04%)</title><rect x="1.8389%" y="805" width="0.0370%" height="15" fill="rgb(234,196,4)" fg:x="1442" fg:w="29"/><text x="2.0889%" y="815.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::SignedTransaction&gt;::serialize (115 samples, 0.15%)</title><rect x="1.7356%" y="981" width="0.1467%" height="15" fill="rgb(250,143,31)" fg:x="1361" fg:w="115"/><text x="1.9856%" y="991.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (115 samples, 0.15%)</title><rect x="1.7356%" y="965" width="0.1467%" height="15" fill="rgb(211,110,34)" fg:x="1361" fg:w="115"/><text x="1.9856%" y="975.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as aptos_crypto::hash::CryptoHash&gt;::hash (141 samples, 0.18%)</title><rect x="1.7037%" y="1061" width="0.1798%" height="15" fill="rgb(215,124,48)" fg:x="1336" fg:w="141"/><text x="1.9537%" y="1071.50"></text></g><g><title>bcs::ser::serialize_into (116 samples, 0.15%)</title><rect x="1.7356%" y="1045" width="0.1479%" height="15" fill="rgb(216,46,13)" fg:x="1361" fg:w="116"/><text x="1.9856%" y="1055.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (116 samples, 0.15%)</title><rect x="1.7356%" y="1029" width="0.1479%" height="15" fill="rgb(205,184,25)" fg:x="1361" fg:w="116"/><text x="1.9856%" y="1039.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::Transaction&gt;::serialize (116 samples, 0.15%)</title><rect x="1.7356%" y="1013" width="0.1479%" height="15" fill="rgb(228,1,10)" fg:x="1361" fg:w="116"/><text x="1.9856%" y="1023.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (116 samples, 0.15%)</title><rect x="1.7356%" y="997" width="0.1479%" height="15" fill="rgb(213,116,27)" fg:x="1361" fg:w="116"/><text x="1.9856%" y="1007.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (30 samples, 0.04%)</title><rect x="1.8848%" y="965" width="0.0383%" height="15" fill="rgb(241,95,50)" fg:x="1478" fg:w="30"/><text x="2.1348%" y="975.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (30 samples, 0.04%)</title><rect x="1.8848%" y="949" width="0.0383%" height="15" fill="rgb(238,48,32)" fg:x="1478" fg:w="30"/><text x="2.1348%" y="959.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (30 samples, 0.04%)</title><rect x="1.8848%" y="933" width="0.0383%" height="15" fill="rgb(235,113,49)" fg:x="1478" fg:w="30"/><text x="2.1348%" y="943.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (30 samples, 0.04%)</title><rect x="1.8848%" y="917" width="0.0383%" height="15" fill="rgb(205,127,43)" fg:x="1478" fg:w="30"/><text x="2.1348%" y="927.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (31 samples, 0.04%)</title><rect x="1.8848%" y="1045" width="0.0395%" height="15" fill="rgb(250,162,2)" fg:x="1478" fg:w="31"/><text x="2.1348%" y="1055.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (31 samples, 0.04%)</title><rect x="1.8848%" y="1029" width="0.0395%" height="15" fill="rgb(220,13,41)" fg:x="1478" fg:w="31"/><text x="2.1348%" y="1039.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (31 samples, 0.04%)</title><rect x="1.8848%" y="1013" width="0.0395%" height="15" fill="rgb(249,221,25)" fg:x="1478" fg:w="31"/><text x="2.1348%" y="1023.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (31 samples, 0.04%)</title><rect x="1.8848%" y="997" width="0.0395%" height="15" fill="rgb(215,208,19)" fg:x="1478" fg:w="31"/><text x="2.1348%" y="1007.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (31 samples, 0.04%)</title><rect x="1.8848%" y="981" width="0.0395%" height="15" fill="rgb(236,175,2)" fg:x="1478" fg:w="31"/><text x="2.1348%" y="991.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::update (10 samples, 0.01%)</title><rect x="1.9396%" y="773" width="0.0128%" height="15" fill="rgb(241,52,2)" fg:x="1521" fg:w="10"/><text x="2.1896%" y="783.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize (78 samples, 0.10%)</title><rect x="1.9243%" y="949" width="0.0995%" height="15" fill="rgb(248,140,14)" fg:x="1509" fg:w="78"/><text x="2.1743%" y="959.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::_::&lt;impl serde::ser::Serialize for &lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::Value&gt;::serialize (78 samples, 0.10%)</title><rect x="1.9243%" y="933" width="0.0995%" height="15" fill="rgb(253,22,42)" fg:x="1509" fg:w="78"/><text x="2.1743%" y="943.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (78 samples, 0.10%)</title><rect x="1.9243%" y="917" width="0.0995%" height="15" fill="rgb(234,61,47)" fg:x="1509" fg:w="78"/><text x="2.1743%" y="927.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (78 samples, 0.10%)</title><rect x="1.9243%" y="901" width="0.0995%" height="15" fill="rgb(208,226,15)" fg:x="1509" fg:w="78"/><text x="2.1743%" y="911.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (78 samples, 0.10%)</title><rect x="1.9243%" y="885" width="0.0995%" height="15" fill="rgb(217,221,4)" fg:x="1509" fg:w="78"/><text x="2.1743%" y="895.50"></text></g><g><title> 32]&gt;::serialize (78 samples, 0.10%)</title><rect x="1.9243%" y="869" width="0.0995%" height="15" fill="rgb(212,174,34)" fg:x="1509" fg:w="78"/><text x="2.1743%" y="879.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (78 samples, 0.10%)</title><rect x="1.9243%" y="853" width="0.0995%" height="15" fill="rgb(253,83,4)" fg:x="1509" fg:w="78"/><text x="2.1743%" y="863.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (78 samples, 0.10%)</title><rect x="1.9243%" y="837" width="0.0995%" height="15" fill="rgb(250,195,49)" fg:x="1509" fg:w="78"/><text x="2.1743%" y="847.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (78 samples, 0.10%)</title><rect x="1.9243%" y="821" width="0.0995%" height="15" fill="rgb(241,192,25)" fg:x="1509" fg:w="78"/><text x="2.1743%" y="831.50"></text></g><g><title>std::io::Write::write_all (78 samples, 0.10%)</title><rect x="1.9243%" y="805" width="0.0995%" height="15" fill="rgb(208,124,10)" fg:x="1509" fg:w="78"/><text x="2.1743%" y="815.50"></text></g><g><title>&lt;aptos_types::waypoint::Ledger2WaypointConverterHasher as std::io::Write&gt;::write (78 samples, 0.10%)</title><rect x="1.9243%" y="789" width="0.0995%" height="15" fill="rgb(222,33,0)" fg:x="1509" fg:w="78"/><text x="2.1743%" y="799.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (56 samples, 0.07%)</title><rect x="1.9524%" y="773" width="0.0714%" height="15" fill="rgb(234,209,28)" fg:x="1531" fg:w="56"/><text x="2.2024%" y="783.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (34 samples, 0.04%)</title><rect x="1.9804%" y="757" width="0.0434%" height="15" fill="rgb(224,11,23)" fg:x="1553" fg:w="34"/><text x="2.2304%" y="767.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (34 samples, 0.04%)</title><rect x="1.9804%" y="741" width="0.0434%" height="15" fill="rgb(232,99,1)" fg:x="1553" fg:w="34"/><text x="2.2304%" y="751.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (34 samples, 0.04%)</title><rect x="1.9804%" y="725" width="0.0434%" height="15" fill="rgb(237,95,45)" fg:x="1553" fg:w="34"/><text x="2.2304%" y="735.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfo as aptos_crypto::hash::CryptoHash&gt;::hash (111 samples, 0.14%)</title><rect x="1.8835%" y="1061" width="0.1416%" height="15" fill="rgb(208,109,11)" fg:x="1477" fg:w="111"/><text x="2.1335%" y="1071.50"></text></g><g><title>bcs::ser::serialize_into (79 samples, 0.10%)</title><rect x="1.9243%" y="1045" width="0.1007%" height="15" fill="rgb(216,190,48)" fg:x="1509" fg:w="79"/><text x="2.1743%" y="1055.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (79 samples, 0.10%)</title><rect x="1.9243%" y="1029" width="0.1007%" height="15" fill="rgb(251,171,36)" fg:x="1509" fg:w="79"/><text x="2.1743%" y="1039.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfo&gt;::serialize (79 samples, 0.10%)</title><rect x="1.9243%" y="1013" width="0.1007%" height="15" fill="rgb(230,62,22)" fg:x="1509" fg:w="79"/><text x="2.1743%" y="1023.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (79 samples, 0.10%)</title><rect x="1.9243%" y="997" width="0.1007%" height="15" fill="rgb(225,114,35)" fg:x="1509" fg:w="79"/><text x="2.1743%" y="1007.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfoV0&gt;::serialize (79 samples, 0.10%)</title><rect x="1.9243%" y="981" width="0.1007%" height="15" fill="rgb(215,118,42)" fg:x="1509" fg:w="79"/><text x="2.1743%" y="991.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (79 samples, 0.10%)</title><rect x="1.9243%" y="965" width="0.1007%" height="15" fill="rgb(243,119,21)" fg:x="1509" fg:w="79"/><text x="2.1743%" y="975.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (33 samples, 0.04%)</title><rect x="2.0302%" y="917" width="0.0421%" height="15" fill="rgb(252,177,53)" fg:x="1592" fg:w="33"/><text x="2.2802%" y="927.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (33 samples, 0.04%)</title><rect x="2.0302%" y="901" width="0.0421%" height="15" fill="rgb(237,209,29)" fg:x="1592" fg:w="33"/><text x="2.2802%" y="911.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (33 samples, 0.04%)</title><rect x="2.0302%" y="885" width="0.0421%" height="15" fill="rgb(212,65,23)" fg:x="1592" fg:w="33"/><text x="2.2802%" y="895.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (33 samples, 0.04%)</title><rect x="2.0302%" y="869" width="0.0421%" height="15" fill="rgb(230,222,46)" fg:x="1592" fg:w="33"/><text x="2.2802%" y="879.50"></text></g><g><title>&lt;aptos_crypto::hash::TransactionAccumulatorHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (34 samples, 0.04%)</title><rect x="2.0302%" y="997" width="0.0434%" height="15" fill="rgb(215,135,32)" fg:x="1592" fg:w="34"/><text x="2.2802%" y="1007.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (34 samples, 0.04%)</title><rect x="2.0302%" y="981" width="0.0434%" height="15" fill="rgb(246,101,22)" fg:x="1592" fg:w="34"/><text x="2.2802%" y="991.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (34 samples, 0.04%)</title><rect x="2.0302%" y="965" width="0.0434%" height="15" fill="rgb(206,107,13)" fg:x="1592" fg:w="34"/><text x="2.2802%" y="975.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (34 samples, 0.04%)</title><rect x="2.0302%" y="949" width="0.0434%" height="15" fill="rgb(250,100,44)" fg:x="1592" fg:w="34"/><text x="2.2802%" y="959.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (34 samples, 0.04%)</title><rect x="2.0302%" y="933" width="0.0434%" height="15" fill="rgb(231,147,38)" fg:x="1592" fg:w="34"/><text x="2.2802%" y="943.50"></text></g><g><title>&lt;aptos_types::proof::MerkleTreeInternalNode&lt;H&gt; as aptos_crypto::hash::CryptoHash&gt;::hash (36 samples, 0.05%)</title><rect x="2.0289%" y="1013" width="0.0459%" height="15" fill="rgb(229,8,40)" fg:x="1591" fg:w="36"/><text x="2.2789%" y="1023.50"></text></g><g><title>aptos_types::proof::accumulator::InMemoryAccumulator&lt;H&gt;::append_one (45 samples, 0.06%)</title><rect x="2.0289%" y="1029" width="0.0574%" height="15" fill="rgb(221,135,30)" fg:x="1591" fg:w="45"/><text x="2.2789%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.01%)</title><rect x="2.0748%" y="1013" width="0.0115%" height="15" fill="rgb(249,193,18)" fg:x="1627" fg:w="9"/><text x="2.3248%" y="1023.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (54 samples, 0.07%)</title><rect x="2.0927%" y="901" width="0.0689%" height="15" fill="rgb(209,133,39)" fg:x="1641" fg:w="54"/><text x="2.3427%" y="911.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (54 samples, 0.07%)</title><rect x="2.0927%" y="885" width="0.0689%" height="15" fill="rgb(232,100,14)" fg:x="1641" fg:w="54"/><text x="2.3427%" y="895.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (54 samples, 0.07%)</title><rect x="2.0927%" y="869" width="0.0689%" height="15" fill="rgb(224,185,1)" fg:x="1641" fg:w="54"/><text x="2.3427%" y="879.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (54 samples, 0.07%)</title><rect x="2.0927%" y="853" width="0.0689%" height="15" fill="rgb(223,139,8)" fg:x="1641" fg:w="54"/><text x="2.3427%" y="863.50"></text></g><g><title>&lt;aptos_crypto::hash::TransactionAccumulatorHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (61 samples, 0.08%)</title><rect x="2.0876%" y="981" width="0.0778%" height="15" fill="rgb(232,213,38)" fg:x="1637" fg:w="61"/><text x="2.3376%" y="991.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (61 samples, 0.08%)</title><rect x="2.0876%" y="965" width="0.0778%" height="15" fill="rgb(207,94,22)" fg:x="1637" fg:w="61"/><text x="2.3376%" y="975.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (59 samples, 0.08%)</title><rect x="2.0901%" y="949" width="0.0752%" height="15" fill="rgb(219,183,54)" fg:x="1639" fg:w="59"/><text x="2.3401%" y="959.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (58 samples, 0.07%)</title><rect x="2.0914%" y="933" width="0.0740%" height="15" fill="rgb(216,185,54)" fg:x="1640" fg:w="58"/><text x="2.3414%" y="943.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (58 samples, 0.07%)</title><rect x="2.0914%" y="917" width="0.0740%" height="15" fill="rgb(254,217,39)" fg:x="1640" fg:w="58"/><text x="2.3414%" y="927.50"></text></g><g><title>aptos_types::proof::accumulator::InMemoryAccumulator&lt;H&gt;::from_leaves (110 samples, 0.14%)</title><rect x="2.0289%" y="1061" width="0.1403%" height="15" fill="rgb(240,178,23)" fg:x="1591" fg:w="110"/><text x="2.2789%" y="1071.50"></text></g><g><title>aptos_types::proof::accumulator::InMemoryAccumulator&lt;H&gt;::append (110 samples, 0.14%)</title><rect x="2.0289%" y="1045" width="0.1403%" height="15" fill="rgb(218,11,47)" fg:x="1591" fg:w="110"/><text x="2.2789%" y="1055.50"></text></g><g><title>aptos_types::proof::accumulator::InMemoryAccumulator&lt;H&gt;::new (65 samples, 0.08%)</title><rect x="2.0863%" y="1029" width="0.0829%" height="15" fill="rgb(218,51,51)" fg:x="1636" fg:w="65"/><text x="2.3363%" y="1039.50"></text></g><g><title>aptos_types::proof::accumulator::InMemoryAccumulator&lt;H&gt;::compute_root_hash (64 samples, 0.08%)</title><rect x="2.0876%" y="1013" width="0.0816%" height="15" fill="rgb(238,126,27)" fg:x="1637" fg:w="64"/><text x="2.3376%" y="1023.50"></text></g><g><title>&lt;aptos_types::proof::MerkleTreeInternalNode&lt;H&gt; as aptos_crypto::hash::CryptoHash&gt;::hash (64 samples, 0.08%)</title><rect x="2.0876%" y="997" width="0.0816%" height="15" fill="rgb(249,202,22)" fg:x="1637" fg:w="64"/><text x="2.3376%" y="1007.50"></text></g><g><title>aptos_api::executor::src::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff (366 samples, 0.47%)</title><rect x="1.7037%" y="1077" width="0.4667%" height="15" fill="rgb(254,195,49)" fg:x="1336" fg:w="366"/><text x="1.9537%" y="1087.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="2.1909%" y="965" width="0.0102%" height="15" fill="rgb(208,123,14)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="975.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="2.1909%" y="949" width="0.0102%" height="15" fill="rgb(224,200,8)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="2.1909%" y="933" width="0.0102%" height="15" fill="rgb(217,61,36)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="2.1909%" y="917" width="0.0102%" height="15" fill="rgb(206,35,45)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="2.1909%" y="901" width="0.0102%" height="15" fill="rgb(217,65,33)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="2.1909%" y="885" width="0.0102%" height="15" fill="rgb(222,158,48)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="2.1909%" y="869" width="0.0102%" height="15" fill="rgb(254,2,54)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="2.1909%" y="853" width="0.0102%" height="15" fill="rgb(250,143,38)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.01%)</title><rect x="2.1909%" y="837" width="0.0102%" height="15" fill="rgb(248,25,0)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="2.1909%" y="821" width="0.0102%" height="15" fill="rgb(206,152,27)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="2.1909%" y="805" width="0.0102%" height="15" fill="rgb(240,77,30)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="815.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="2.1909%" y="789" width="0.0102%" height="15" fill="rgb(231,5,3)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="799.50"></text></g><g><title>mallocx (8 samples, 0.01%)</title><rect x="2.1909%" y="773" width="0.0102%" height="15" fill="rgb(207,226,32)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="783.50"></text></g><g><title>imalloc (8 samples, 0.01%)</title><rect x="2.1909%" y="757" width="0.0102%" height="15" fill="rgb(222,207,47)" fg:x="1718" fg:w="8"/><text x="2.4409%" y="767.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as core::clone::Clone&gt;::clone (34 samples, 0.04%)</title><rect x="2.1717%" y="1045" width="0.0434%" height="15" fill="rgb(229,115,45)" fg:x="1703" fg:w="34"/><text x="2.4217%" y="1055.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetV0 as core::clone::Clone&gt;::clone (34 samples, 0.04%)</title><rect x="2.1717%" y="1029" width="0.0434%" height="15" fill="rgb(224,191,6)" fg:x="1703" fg:w="34"/><text x="2.4217%" y="1039.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetMut as core::clone::Clone&gt;::clone (34 samples, 0.04%)</title><rect x="2.1717%" y="1013" width="0.0434%" height="15" fill="rgb(230,227,24)" fg:x="1703" fg:w="34"/><text x="2.4217%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.04%)</title><rect x="2.1717%" y="997" width="0.0434%" height="15" fill="rgb(228,80,19)" fg:x="1703" fg:w="34"/><text x="2.4217%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (19 samples, 0.02%)</title><rect x="2.1909%" y="981" width="0.0242%" height="15" fill="rgb(247,229,0)" fg:x="1718" fg:w="19"/><text x="2.4409%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (9 samples, 0.01%)</title><rect x="2.2036%" y="965" width="0.0115%" height="15" fill="rgb(237,194,15)" fg:x="1728" fg:w="9"/><text x="2.4536%" y="975.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="2.2151%" y="949" width="0.0115%" height="15" fill="rgb(219,203,20)" fg:x="1737" fg:w="9"/><text x="2.4651%" y="959.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="2.2151%" y="933" width="0.0115%" height="15" fill="rgb(234,128,8)" fg:x="1737" fg:w="9"/><text x="2.4651%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="2.2151%" y="917" width="0.0115%" height="15" fill="rgb(248,202,8)" fg:x="1737" fg:w="9"/><text x="2.4651%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.01%)</title><rect x="2.2151%" y="901" width="0.0115%" height="15" fill="rgb(206,104,37)" fg:x="1737" fg:w="9"/><text x="2.4651%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.01%)</title><rect x="2.2151%" y="885" width="0.0115%" height="15" fill="rgb(223,8,27)" fg:x="1737" fg:w="9"/><text x="2.4651%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.01%)</title><rect x="2.2151%" y="869" width="0.0115%" height="15" fill="rgb(216,217,28)" fg:x="1737" fg:w="9"/><text x="2.4651%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="2.2151%" y="853" width="0.0115%" height="15" fill="rgb(249,199,1)" fg:x="1737" fg:w="9"/><text x="2.4651%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="2.2151%" y="837" width="0.0115%" height="15" fill="rgb(240,85,17)" fg:x="1737" fg:w="9"/><text x="2.4651%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (9 samples, 0.01%)</title><rect x="2.2151%" y="821" width="0.0115%" height="15" fill="rgb(206,108,45)" fg:x="1737" fg:w="9"/><text x="2.4651%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="2.2151%" y="805" width="0.0115%" height="15" fill="rgb(245,210,41)" fg:x="1737" fg:w="9"/><text x="2.4651%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="2.2151%" y="789" width="0.0115%" height="15" fill="rgb(206,13,37)" fg:x="1737" fg:w="9"/><text x="2.4651%" y="799.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="2.2151%" y="773" width="0.0115%" height="15" fill="rgb(250,61,18)" fg:x="1737" fg:w="9"/><text x="2.4651%" y="783.50"></text></g><g><title>__rust_alloc (12 samples, 0.02%)</title><rect x="2.2266%" y="741" width="0.0153%" height="15" fill="rgb(235,172,48)" fg:x="1746" fg:w="12"/><text x="2.4766%" y="751.50"></text></g><g><title>core::clone::Clone::clone (29 samples, 0.04%)</title><rect x="2.2151%" y="965" width="0.0370%" height="15" fill="rgb(249,201,17)" fg:x="1737" fg:w="29"/><text x="2.4651%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="2.2266%" y="949" width="0.0255%" height="15" fill="rgb(219,208,6)" fg:x="1746" fg:w="20"/><text x="2.4766%" y="959.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValue as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="2.2266%" y="933" width="0.0255%" height="15" fill="rgb(248,31,23)" fg:x="1746" fg:w="20"/><text x="2.4766%" y="943.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="2.2266%" y="917" width="0.0255%" height="15" fill="rgb(245,15,42)" fg:x="1746" fg:w="20"/><text x="2.4766%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="2.2266%" y="901" width="0.0255%" height="15" fill="rgb(222,217,39)" fg:x="1746" fg:w="20"/><text x="2.4766%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.03%)</title><rect x="2.2266%" y="885" width="0.0255%" height="15" fill="rgb(210,219,27)" fg:x="1746" fg:w="20"/><text x="2.4766%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.03%)</title><rect x="2.2266%" y="869" width="0.0255%" height="15" fill="rgb(252,166,36)" fg:x="1746" fg:w="20"/><text x="2.4766%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.03%)</title><rect x="2.2266%" y="853" width="0.0255%" height="15" fill="rgb(245,132,34)" fg:x="1746" fg:w="20"/><text x="2.4766%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.03%)</title><rect x="2.2266%" y="837" width="0.0255%" height="15" fill="rgb(236,54,3)" fg:x="1746" fg:w="20"/><text x="2.4766%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.03%)</title><rect x="2.2266%" y="821" width="0.0255%" height="15" fill="rgb(241,173,43)" fg:x="1746" fg:w="20"/><text x="2.4766%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (20 samples, 0.03%)</title><rect x="2.2266%" y="805" width="0.0255%" height="15" fill="rgb(215,190,9)" fg:x="1746" fg:w="20"/><text x="2.4766%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.03%)</title><rect x="2.2266%" y="789" width="0.0255%" height="15" fill="rgb(242,101,16)" fg:x="1746" fg:w="20"/><text x="2.4766%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.03%)</title><rect x="2.2266%" y="773" width="0.0255%" height="15" fill="rgb(223,190,21)" fg:x="1746" fg:w="20"/><text x="2.4766%" y="783.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.03%)</title><rect x="2.2266%" y="757" width="0.0255%" height="15" fill="rgb(215,228,25)" fg:x="1746" fg:w="20"/><text x="2.4766%" y="767.50"></text></g><g><title>mallocx (8 samples, 0.01%)</title><rect x="2.2419%" y="741" width="0.0102%" height="15" fill="rgb(225,36,22)" fg:x="1758" fg:w="8"/><text x="2.4919%" y="751.50"></text></g><g><title>imalloc (8 samples, 0.01%)</title><rect x="2.2419%" y="725" width="0.0102%" height="15" fill="rgb(251,106,46)" fg:x="1758" fg:w="8"/><text x="2.4919%" y="735.50"></text></g><g><title>tsd_fetch (8 samples, 0.01%)</title><rect x="2.2419%" y="709" width="0.0102%" height="15" fill="rgb(208,90,1)" fg:x="1758" fg:w="8"/><text x="2.4919%" y="719.50"></text></g><g><title>tsd_fetch_impl (8 samples, 0.01%)</title><rect x="2.2419%" y="693" width="0.0102%" height="15" fill="rgb(243,10,4)" fg:x="1758" fg:w="8"/><text x="2.4919%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (49 samples, 0.06%)</title><rect x="2.2151%" y="997" width="0.0625%" height="15" fill="rgb(212,137,27)" fg:x="1737" fg:w="49"/><text x="2.4651%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (49 samples, 0.06%)</title><rect x="2.2151%" y="981" width="0.0625%" height="15" fill="rgb(231,220,49)" fg:x="1737" fg:w="49"/><text x="2.4651%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (20 samples, 0.03%)</title><rect x="2.2521%" y="965" width="0.0255%" height="15" fill="rgb(237,96,20)" fg:x="1766" fg:w="20"/><text x="2.5021%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (20 samples, 0.03%)</title><rect x="2.2521%" y="949" width="0.0255%" height="15" fill="rgb(239,229,30)" fg:x="1766" fg:w="20"/><text x="2.5021%" y="959.50"></text></g><g><title>core::ptr::write (20 samples, 0.03%)</title><rect x="2.2521%" y="933" width="0.0255%" height="15" fill="rgb(219,65,33)" fg:x="1766" fg:w="20"/><text x="2.5021%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (54 samples, 0.07%)</title><rect x="2.2151%" y="1045" width="0.0689%" height="15" fill="rgb(243,134,7)" fg:x="1737" fg:w="54"/><text x="2.4651%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (54 samples, 0.07%)</title><rect x="2.2151%" y="1029" width="0.0689%" height="15" fill="rgb(216,177,54)" fg:x="1737" fg:w="54"/><text x="2.4651%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (54 samples, 0.07%)</title><rect x="2.2151%" y="1013" width="0.0689%" height="15" fill="rgb(211,160,20)" fg:x="1737" fg:w="54"/><text x="2.4651%" y="1023.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (9 samples, 0.01%)</title><rect x="2.3107%" y="837" width="0.0115%" height="15" fill="rgb(239,85,39)" fg:x="1812" fg:w="9"/><text x="2.5607%" y="847.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (9 samples, 0.01%)</title><rect x="2.3107%" y="821" width="0.0115%" height="15" fill="rgb(232,125,22)" fg:x="1812" fg:w="9"/><text x="2.5607%" y="831.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (9 samples, 0.01%)</title><rect x="2.3107%" y="805" width="0.0115%" height="15" fill="rgb(244,57,34)" fg:x="1812" fg:w="9"/><text x="2.5607%" y="815.50"></text></g><g><title> N]&gt;::hash (9 samples, 0.01%)</title><rect x="2.3107%" y="789" width="0.0115%" height="15" fill="rgb(214,203,32)" fg:x="1812" fg:w="9"/><text x="2.5607%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (9 samples, 0.01%)</title><rect x="2.3107%" y="773" width="0.0115%" height="15" fill="rgb(207,58,43)" fg:x="1812" fg:w="9"/><text x="2.5607%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (9 samples, 0.01%)</title><rect x="2.3107%" y="757" width="0.0115%" height="15" fill="rgb(215,193,15)" fg:x="1812" fg:w="9"/><text x="2.5607%" y="767.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="2.3107%" y="741" width="0.0115%" height="15" fill="rgb(232,15,44)" fg:x="1812" fg:w="9"/><text x="2.5607%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="2.3107%" y="725" width="0.0115%" height="15" fill="rgb(212,3,48)" fg:x="1812" fg:w="9"/><text x="2.5607%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="2.3107%" y="709" width="0.0115%" height="15" fill="rgb(218,128,7)" fg:x="1812" fg:w="9"/><text x="2.5607%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.01%)</title><rect x="2.3107%" y="693" width="0.0115%" height="15" fill="rgb(226,216,39)" fg:x="1812" fg:w="9"/><text x="2.5607%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.01%)</title><rect x="2.3107%" y="677" width="0.0115%" height="15" fill="rgb(243,47,51)" fg:x="1812" fg:w="9"/><text x="2.5607%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (42 samples, 0.05%)</title><rect x="2.3043%" y="901" width="0.0536%" height="15" fill="rgb(241,183,40)" fg:x="1807" fg:w="42"/><text x="2.5543%" y="911.50"></text></g><g><title>core::hash::BuildHasher::hash_one (42 samples, 0.05%)</title><rect x="2.3043%" y="885" width="0.0536%" height="15" fill="rgb(231,217,32)" fg:x="1807" fg:w="42"/><text x="2.5543%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (37 samples, 0.05%)</title><rect x="2.3107%" y="869" width="0.0472%" height="15" fill="rgb(229,61,38)" fg:x="1812" fg:w="37"/><text x="2.5607%" y="879.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (37 samples, 0.05%)</title><rect x="2.3107%" y="853" width="0.0472%" height="15" fill="rgb(225,210,5)" fg:x="1812" fg:w="37"/><text x="2.5607%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (28 samples, 0.04%)</title><rect x="2.3222%" y="837" width="0.0357%" height="15" fill="rgb(231,79,45)" fg:x="1821" fg:w="28"/><text x="2.5722%" y="847.50"></text></g><g><title>core::hash::Hasher::write_isize (28 samples, 0.04%)</title><rect x="2.3222%" y="821" width="0.0357%" height="15" fill="rgb(224,100,7)" fg:x="1821" fg:w="28"/><text x="2.5722%" y="831.50"></text></g><g><title>core::hash::Hasher::write_usize (28 samples, 0.04%)</title><rect x="2.3222%" y="805" width="0.0357%" height="15" fill="rgb(241,198,18)" fg:x="1821" fg:w="28"/><text x="2.5722%" y="815.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.04%)</title><rect x="2.3222%" y="789" width="0.0357%" height="15" fill="rgb(252,97,53)" fg:x="1821" fg:w="28"/><text x="2.5722%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 0.04%)</title><rect x="2.3222%" y="773" width="0.0357%" height="15" fill="rgb(220,88,7)" fg:x="1821" fg:w="28"/><text x="2.5722%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.04%)</title><rect x="2.3222%" y="757" width="0.0357%" height="15" fill="rgb(213,176,14)" fg:x="1821" fg:w="28"/><text x="2.5722%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (59 samples, 0.08%)</title><rect x="2.2903%" y="949" width="0.0752%" height="15" fill="rgb(246,73,7)" fg:x="1796" fg:w="59"/><text x="2.5403%" y="959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (59 samples, 0.08%)</title><rect x="2.2903%" y="933" width="0.0752%" height="15" fill="rgb(245,64,36)" fg:x="1796" fg:w="59"/><text x="2.5403%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (52 samples, 0.07%)</title><rect x="2.2992%" y="917" width="0.0663%" height="15" fill="rgb(245,80,10)" fg:x="1803" fg:w="52"/><text x="2.5492%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (65 samples, 0.08%)</title><rect x="2.2839%" y="1045" width="0.0829%" height="15" fill="rgb(232,107,50)" fg:x="1791" fg:w="65"/><text x="2.5339%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (65 samples, 0.08%)</title><rect x="2.2839%" y="1029" width="0.0829%" height="15" fill="rgb(253,3,0)" fg:x="1791" fg:w="65"/><text x="2.5339%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (65 samples, 0.08%)</title><rect x="2.2839%" y="1013" width="0.0829%" height="15" fill="rgb(212,99,53)" fg:x="1791" fg:w="65"/><text x="2.5339%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.08%)</title><rect x="2.2839%" y="997" width="0.0829%" height="15" fill="rgb(249,111,54)" fg:x="1791" fg:w="65"/><text x="2.5339%" y="1007.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.08%)</title><rect x="2.2839%" y="981" width="0.0829%" height="15" fill="rgb(249,55,30)" fg:x="1791" fg:w="65"/><text x="2.5339%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (65 samples, 0.08%)</title><rect x="2.2839%" y="965" width="0.0829%" height="15" fill="rgb(237,47,42)" fg:x="1791" fg:w="65"/><text x="2.5339%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="2.3732%" y="789" width="0.0140%" height="15" fill="rgb(211,20,18)" fg:x="1861" fg:w="11"/><text x="2.6232%" y="799.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="2.3872%" y="693" width="0.0128%" height="15" fill="rgb(231,203,46)" fg:x="1872" fg:w="10"/><text x="2.6372%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="2.3872%" y="677" width="0.0128%" height="15" fill="rgb(237,142,3)" fg:x="1872" fg:w="10"/><text x="2.6372%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="2.3872%" y="661" width="0.0128%" height="15" fill="rgb(241,107,1)" fg:x="1872" fg:w="10"/><text x="2.6372%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.01%)</title><rect x="2.3872%" y="645" width="0.0128%" height="15" fill="rgb(229,83,13)" fg:x="1872" fg:w="10"/><text x="2.6372%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.01%)</title><rect x="2.3872%" y="629" width="0.0128%" height="15" fill="rgb(241,91,40)" fg:x="1872" fg:w="10"/><text x="2.6372%" y="639.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (15 samples, 0.02%)</title><rect x="2.4000%" y="661" width="0.0191%" height="15" fill="rgb(225,3,45)" fg:x="1882" fg:w="15"/><text x="2.6500%" y="671.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (15 samples, 0.02%)</title><rect x="2.4000%" y="645" width="0.0191%" height="15" fill="rgb(244,223,14)" fg:x="1882" fg:w="15"/><text x="2.6500%" y="655.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (15 samples, 0.02%)</title><rect x="2.4000%" y="629" width="0.0191%" height="15" fill="rgb(224,124,37)" fg:x="1882" fg:w="15"/><text x="2.6500%" y="639.50"></text></g><g><title> N]&gt;::hash (15 samples, 0.02%)</title><rect x="2.4000%" y="613" width="0.0191%" height="15" fill="rgb(251,171,30)" fg:x="1882" fg:w="15"/><text x="2.6500%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (15 samples, 0.02%)</title><rect x="2.4000%" y="597" width="0.0191%" height="15" fill="rgb(236,46,54)" fg:x="1882" fg:w="15"/><text x="2.6500%" y="607.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (15 samples, 0.02%)</title><rect x="2.4000%" y="581" width="0.0191%" height="15" fill="rgb(245,213,5)" fg:x="1882" fg:w="15"/><text x="2.6500%" y="591.50"></text></g><g><title>core::hash::Hasher::write_usize (15 samples, 0.02%)</title><rect x="2.4000%" y="565" width="0.0191%" height="15" fill="rgb(230,144,27)" fg:x="1882" fg:w="15"/><text x="2.6500%" y="575.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.02%)</title><rect x="2.4000%" y="549" width="0.0191%" height="15" fill="rgb(220,86,6)" fg:x="1882" fg:w="15"/><text x="2.6500%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.02%)</title><rect x="2.4000%" y="533" width="0.0191%" height="15" fill="rgb(240,20,13)" fg:x="1882" fg:w="15"/><text x="2.6500%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.02%)</title><rect x="2.4000%" y="517" width="0.0191%" height="15" fill="rgb(217,89,34)" fg:x="1882" fg:w="15"/><text x="2.6500%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (55 samples, 0.07%)</title><rect x="2.3872%" y="725" width="0.0701%" height="15" fill="rgb(229,13,5)" fg:x="1872" fg:w="55"/><text x="2.6372%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (55 samples, 0.07%)</title><rect x="2.3872%" y="709" width="0.0701%" height="15" fill="rgb(244,67,35)" fg:x="1872" fg:w="55"/><text x="2.6372%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (45 samples, 0.06%)</title><rect x="2.4000%" y="693" width="0.0574%" height="15" fill="rgb(221,40,2)" fg:x="1882" fg:w="45"/><text x="2.6500%" y="703.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (45 samples, 0.06%)</title><rect x="2.4000%" y="677" width="0.0574%" height="15" fill="rgb(237,157,21)" fg:x="1882" fg:w="45"/><text x="2.6500%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.04%)</title><rect x="2.4191%" y="661" width="0.0383%" height="15" fill="rgb(222,94,11)" fg:x="1897" fg:w="30"/><text x="2.6691%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 0.04%)</title><rect x="2.4191%" y="645" width="0.0383%" height="15" fill="rgb(249,113,6)" fg:x="1897" fg:w="30"/><text x="2.6691%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.04%)</title><rect x="2.4191%" y="629" width="0.0383%" height="15" fill="rgb(238,137,36)" fg:x="1897" fg:w="30"/><text x="2.6691%" y="639.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="2.4599%" y="581" width="0.0115%" height="15" fill="rgb(210,102,26)" fg:x="1929" fg:w="9"/><text x="2.7099%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="2.4599%" y="565" width="0.0115%" height="15" fill="rgb(218,30,30)" fg:x="1929" fg:w="9"/><text x="2.7099%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="2.4599%" y="549" width="0.0115%" height="15" fill="rgb(214,67,26)" fg:x="1929" fg:w="9"/><text x="2.7099%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.01%)</title><rect x="2.4599%" y="533" width="0.0115%" height="15" fill="rgb(251,9,53)" fg:x="1929" fg:w="9"/><text x="2.7099%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.01%)</title><rect x="2.4599%" y="517" width="0.0115%" height="15" fill="rgb(228,204,25)" fg:x="1929" fg:w="9"/><text x="2.7099%" y="527.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="2.4714%" y="549" width="0.0128%" height="15" fill="rgb(207,153,8)" fg:x="1938" fg:w="10"/><text x="2.7214%" y="559.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="2.4714%" y="533" width="0.0128%" height="15" fill="rgb(242,9,16)" fg:x="1938" fg:w="10"/><text x="2.7214%" y="543.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (10 samples, 0.01%)</title><rect x="2.4714%" y="517" width="0.0128%" height="15" fill="rgb(217,211,10)" fg:x="1938" fg:w="10"/><text x="2.7214%" y="527.50"></text></g><g><title> N]&gt;::hash (10 samples, 0.01%)</title><rect x="2.4714%" y="501" width="0.0128%" height="15" fill="rgb(219,228,52)" fg:x="1938" fg:w="10"/><text x="2.7214%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (10 samples, 0.01%)</title><rect x="2.4714%" y="485" width="0.0128%" height="15" fill="rgb(231,92,29)" fg:x="1938" fg:w="10"/><text x="2.7214%" y="495.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (10 samples, 0.01%)</title><rect x="2.4714%" y="469" width="0.0128%" height="15" fill="rgb(232,8,23)" fg:x="1938" fg:w="10"/><text x="2.7214%" y="479.50"></text></g><g><title>core::hash::Hasher::write_usize (10 samples, 0.01%)</title><rect x="2.4714%" y="453" width="0.0128%" height="15" fill="rgb(216,211,34)" fg:x="1938" fg:w="10"/><text x="2.7214%" y="463.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="2.4714%" y="437" width="0.0128%" height="15" fill="rgb(236,151,0)" fg:x="1938" fg:w="10"/><text x="2.7214%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="2.4714%" y="421" width="0.0128%" height="15" fill="rgb(209,168,3)" fg:x="1938" fg:w="10"/><text x="2.7214%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="2.4714%" y="405" width="0.0128%" height="15" fill="rgb(208,129,28)" fg:x="1938" fg:w="10"/><text x="2.7214%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (50 samples, 0.06%)</title><rect x="2.4599%" y="645" width="0.0638%" height="15" fill="rgb(229,78,22)" fg:x="1929" fg:w="50"/><text x="2.7099%" y="655.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (50 samples, 0.06%)</title><rect x="2.4599%" y="629" width="0.0638%" height="15" fill="rgb(228,187,13)" fg:x="1929" fg:w="50"/><text x="2.7099%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (50 samples, 0.06%)</title><rect x="2.4599%" y="613" width="0.0638%" height="15" fill="rgb(240,119,24)" fg:x="1929" fg:w="50"/><text x="2.7099%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (50 samples, 0.06%)</title><rect x="2.4599%" y="597" width="0.0638%" height="15" fill="rgb(209,194,42)" fg:x="1929" fg:w="50"/><text x="2.7099%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (41 samples, 0.05%)</title><rect x="2.4714%" y="581" width="0.0523%" height="15" fill="rgb(247,200,46)" fg:x="1938" fg:w="41"/><text x="2.7214%" y="591.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (41 samples, 0.05%)</title><rect x="2.4714%" y="565" width="0.0523%" height="15" fill="rgb(218,76,16)" fg:x="1938" fg:w="41"/><text x="2.7214%" y="575.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (31 samples, 0.04%)</title><rect x="2.4842%" y="549" width="0.0395%" height="15" fill="rgb(225,21,48)" fg:x="1948" fg:w="31"/><text x="2.7342%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (31 samples, 0.04%)</title><rect x="2.4842%" y="533" width="0.0395%" height="15" fill="rgb(239,223,50)" fg:x="1948" fg:w="31"/><text x="2.7342%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (31 samples, 0.04%)</title><rect x="2.4842%" y="517" width="0.0395%" height="15" fill="rgb(244,45,21)" fg:x="1948" fg:w="31"/><text x="2.7342%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (9 samples, 0.01%)</title><rect x="2.5237%" y="645" width="0.0115%" height="15" fill="rgb(232,33,43)" fg:x="1979" fg:w="9"/><text x="2.7737%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (9 samples, 0.01%)</title><rect x="2.5237%" y="629" width="0.0115%" height="15" fill="rgb(209,8,3)" fg:x="1979" fg:w="9"/><text x="2.7737%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (9 samples, 0.01%)</title><rect x="2.5237%" y="613" width="0.0115%" height="15" fill="rgb(214,25,53)" fg:x="1979" fg:w="9"/><text x="2.7737%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (9 samples, 0.01%)</title><rect x="2.5237%" y="597" width="0.0115%" height="15" fill="rgb(254,186,54)" fg:x="1979" fg:w="9"/><text x="2.7737%" y="607.50"></text></g><g><title>hashbrown::raw::is_full (9 samples, 0.01%)</title><rect x="2.5237%" y="581" width="0.0115%" height="15" fill="rgb(208,174,49)" fg:x="1979" fg:w="9"/><text x="2.7737%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (64 samples, 0.08%)</title><rect x="2.4574%" y="709" width="0.0816%" height="15" fill="rgb(233,191,51)" fg:x="1927" fg:w="64"/><text x="2.7074%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (64 samples, 0.08%)</title><rect x="2.4574%" y="693" width="0.0816%" height="15" fill="rgb(222,134,10)" fg:x="1927" fg:w="64"/><text x="2.7074%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (64 samples, 0.08%)</title><rect x="2.4574%" y="677" width="0.0816%" height="15" fill="rgb(230,226,20)" fg:x="1927" fg:w="64"/><text x="2.7074%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (64 samples, 0.08%)</title><rect x="2.4574%" y="661" width="0.0816%" height="15" fill="rgb(251,111,25)" fg:x="1927" fg:w="64"/><text x="2.7074%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (143 samples, 0.18%)</title><rect x="2.3732%" y="805" width="0.1824%" height="15" fill="rgb(224,40,46)" fg:x="1861" fg:w="143"/><text x="2.6232%" y="815.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::{{closure}} (132 samples, 0.17%)</title><rect x="2.3872%" y="789" width="0.1683%" height="15" fill="rgb(236,108,47)" fg:x="1872" fg:w="132"/><text x="2.6372%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (132 samples, 0.17%)</title><rect x="2.3872%" y="773" width="0.1683%" height="15" fill="rgb(234,93,0)" fg:x="1872" fg:w="132"/><text x="2.6372%" y="783.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (132 samples, 0.17%)</title><rect x="2.3872%" y="757" width="0.1683%" height="15" fill="rgb(224,213,32)" fg:x="1872" fg:w="132"/><text x="2.6372%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (132 samples, 0.17%)</title><rect x="2.3872%" y="741" width="0.1683%" height="15" fill="rgb(251,11,48)" fg:x="1872" fg:w="132"/><text x="2.6372%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (77 samples, 0.10%)</title><rect x="2.4574%" y="725" width="0.0982%" height="15" fill="rgb(236,173,5)" fg:x="1927" fg:w="77"/><text x="2.7074%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (13 samples, 0.02%)</title><rect x="2.5390%" y="709" width="0.0166%" height="15" fill="rgb(230,95,12)" fg:x="1991" fg:w="13"/><text x="2.7890%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (13 samples, 0.02%)</title><rect x="2.5390%" y="693" width="0.0166%" height="15" fill="rgb(232,209,1)" fg:x="1991" fg:w="13"/><text x="2.7890%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (13 samples, 0.02%)</title><rect x="2.5390%" y="677" width="0.0166%" height="15" fill="rgb(232,6,1)" fg:x="1991" fg:w="13"/><text x="2.7890%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.02%)</title><rect x="2.5390%" y="661" width="0.0166%" height="15" fill="rgb(210,224,50)" fg:x="1991" fg:w="13"/><text x="2.7890%" y="671.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (225 samples, 0.29%)</title><rect x="2.5785%" y="725" width="0.2869%" height="15" fill="rgb(228,127,35)" fg:x="2022" fg:w="225"/><text x="2.8285%" y="735.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (225 samples, 0.29%)</title><rect x="2.5785%" y="709" width="0.2869%" height="15" fill="rgb(245,102,45)" fg:x="2022" fg:w="225"/><text x="2.8285%" y="719.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (220 samples, 0.28%)</title><rect x="2.5849%" y="693" width="0.2806%" height="15" fill="rgb(214,1,49)" fg:x="2027" fg:w="220"/><text x="2.8349%" y="703.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (220 samples, 0.28%)</title><rect x="2.5849%" y="677" width="0.2806%" height="15" fill="rgb(226,163,40)" fg:x="2027" fg:w="220"/><text x="2.8349%" y="687.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (220 samples, 0.28%)</title><rect x="2.5849%" y="661" width="0.2806%" height="15" fill="rgb(239,212,28)" fg:x="2027" fg:w="220"/><text x="2.8349%" y="671.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (220 samples, 0.28%)</title><rect x="2.5849%" y="645" width="0.2806%" height="15" fill="rgb(220,20,13)" fg:x="2027" fg:w="220"/><text x="2.8349%" y="655.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (220 samples, 0.28%)</title><rect x="2.5849%" y="629" width="0.2806%" height="15" fill="rgb(210,164,35)" fg:x="2027" fg:w="220"/><text x="2.8349%" y="639.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (220 samples, 0.28%)</title><rect x="2.5849%" y="613" width="0.2806%" height="15" fill="rgb(248,109,41)" fg:x="2027" fg:w="220"/><text x="2.8349%" y="623.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (217 samples, 0.28%)</title><rect x="2.5887%" y="597" width="0.2767%" height="15" fill="rgb(238,23,50)" fg:x="2030" fg:w="217"/><text x="2.8387%" y="607.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (12 samples, 0.02%)</title><rect x="2.8655%" y="597" width="0.0153%" height="15" fill="rgb(211,48,49)" fg:x="2247" fg:w="12"/><text x="3.1155%" y="607.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (12 samples, 0.02%)</title><rect x="2.8655%" y="581" width="0.0153%" height="15" fill="rgb(223,36,21)" fg:x="2247" fg:w="12"/><text x="3.1155%" y="591.50"></text></g><g><title>std::io::Write::write_all (12 samples, 0.02%)</title><rect x="2.8655%" y="565" width="0.0153%" height="15" fill="rgb(207,123,46)" fg:x="2247" fg:w="12"/><text x="3.1155%" y="575.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as std::io::Write&gt;::write (12 samples, 0.02%)</title><rect x="2.8655%" y="549" width="0.0153%" height="15" fill="rgb(240,218,32)" fg:x="2247" fg:w="12"/><text x="3.1155%" y="559.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (11 samples, 0.01%)</title><rect x="2.8667%" y="533" width="0.0140%" height="15" fill="rgb(252,5,43)" fg:x="2248" fg:w="11"/><text x="3.1167%" y="543.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValue as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (385 samples, 0.49%)</title><rect x="2.5696%" y="773" width="0.4910%" height="15" fill="rgb(252,84,19)" fg:x="2015" fg:w="385"/><text x="2.8196%" y="783.50"></text></g><g><title>aptos_types::state_store::state_value::StateValue::new (385 samples, 0.49%)</title><rect x="2.5696%" y="757" width="0.4910%" height="15" fill="rgb(243,152,39)" fg:x="2015" fg:w="385"/><text x="2.8196%" y="767.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (379 samples, 0.48%)</title><rect x="2.5772%" y="741" width="0.4833%" height="15" fill="rgb(234,160,15)" fg:x="2021" fg:w="379"/><text x="2.8272%" y="751.50"></text></g><g><title>bcs::ser::serialize_into (153 samples, 0.20%)</title><rect x="2.8655%" y="725" width="0.1951%" height="15" fill="rgb(237,34,20)" fg:x="2247" fg:w="153"/><text x="3.1155%" y="735.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (153 samples, 0.20%)</title><rect x="2.8655%" y="709" width="0.1951%" height="15" fill="rgb(229,97,13)" fg:x="2247" fg:w="153"/><text x="3.1155%" y="719.50"></text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (153 samples, 0.20%)</title><rect x="2.8655%" y="693" width="0.1951%" height="15" fill="rgb(234,71,50)" fg:x="2247" fg:w="153"/><text x="3.1155%" y="703.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (153 samples, 0.20%)</title><rect x="2.8655%" y="677" width="0.1951%" height="15" fill="rgb(253,155,4)" fg:x="2247" fg:w="153"/><text x="3.1155%" y="687.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (153 samples, 0.20%)</title><rect x="2.8655%" y="661" width="0.1951%" height="15" fill="rgb(222,185,37)" fg:x="2247" fg:w="153"/><text x="3.1155%" y="671.50"></text></g><g><title>serde_bytes::serialize (153 samples, 0.20%)</title><rect x="2.8655%" y="645" width="0.1951%" height="15" fill="rgb(251,177,13)" fg:x="2247" fg:w="153"/><text x="3.1155%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (153 samples, 0.20%)</title><rect x="2.8655%" y="629" width="0.1951%" height="15" fill="rgb(250,179,40)" fg:x="2247" fg:w="153"/><text x="3.1155%" y="639.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (153 samples, 0.20%)</title><rect x="2.8655%" y="613" width="0.1951%" height="15" fill="rgb(242,44,2)" fg:x="2247" fg:w="153"/><text x="3.1155%" y="623.50"></text></g><g><title>std::io::Write::write_all (141 samples, 0.18%)</title><rect x="2.8808%" y="597" width="0.1798%" height="15" fill="rgb(216,177,13)" fg:x="2259" fg:w="141"/><text x="3.1308%" y="607.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as std::io::Write&gt;::write (141 samples, 0.18%)</title><rect x="2.8808%" y="581" width="0.1798%" height="15" fill="rgb(216,106,43)" fg:x="2259" fg:w="141"/><text x="3.1308%" y="591.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (141 samples, 0.18%)</title><rect x="2.8808%" y="565" width="0.1798%" height="15" fill="rgb(216,183,2)" fg:x="2259" fg:w="141"/><text x="3.1308%" y="575.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (141 samples, 0.18%)</title><rect x="2.8808%" y="549" width="0.1798%" height="15" fill="rgb(249,75,3)" fg:x="2259" fg:w="141"/><text x="3.1308%" y="559.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (141 samples, 0.18%)</title><rect x="2.8808%" y="533" width="0.1798%" height="15" fill="rgb(219,67,39)" fg:x="2259" fg:w="141"/><text x="3.1308%" y="543.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (141 samples, 0.18%)</title><rect x="2.8808%" y="517" width="0.1798%" height="15" fill="rgb(253,228,2)" fg:x="2259" fg:w="141"/><text x="3.1308%" y="527.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="3.0861%" y="709" width="0.0115%" height="15" fill="rgb(235,138,27)" fg:x="2420" fg:w="9"/><text x="3.3361%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="3.0861%" y="693" width="0.0115%" height="15" fill="rgb(236,97,51)" fg:x="2420" fg:w="9"/><text x="3.3361%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="3.0861%" y="677" width="0.0115%" height="15" fill="rgb(240,80,30)" fg:x="2420" fg:w="9"/><text x="3.3361%" y="687.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="3.0975%" y="677" width="0.0217%" height="15" fill="rgb(230,178,19)" fg:x="2429" fg:w="17"/><text x="3.3475%" y="687.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="3.0975%" y="661" width="0.0217%" height="15" fill="rgb(210,190,27)" fg:x="2429" fg:w="17"/><text x="3.3475%" y="671.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (17 samples, 0.02%)</title><rect x="3.0975%" y="645" width="0.0217%" height="15" fill="rgb(222,107,31)" fg:x="2429" fg:w="17"/><text x="3.3475%" y="655.50"></text></g><g><title> N]&gt;::hash (17 samples, 0.02%)</title><rect x="3.0975%" y="629" width="0.0217%" height="15" fill="rgb(216,127,34)" fg:x="2429" fg:w="17"/><text x="3.3475%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (17 samples, 0.02%)</title><rect x="3.0975%" y="613" width="0.0217%" height="15" fill="rgb(234,116,52)" fg:x="2429" fg:w="17"/><text x="3.3475%" y="623.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (17 samples, 0.02%)</title><rect x="3.0975%" y="597" width="0.0217%" height="15" fill="rgb(222,124,15)" fg:x="2429" fg:w="17"/><text x="3.3475%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (17 samples, 0.02%)</title><rect x="3.0975%" y="581" width="0.0217%" height="15" fill="rgb(231,179,28)" fg:x="2429" fg:w="17"/><text x="3.3475%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="3.0975%" y="565" width="0.0217%" height="15" fill="rgb(226,93,45)" fg:x="2429" fg:w="17"/><text x="3.3475%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="3.0975%" y="549" width="0.0217%" height="15" fill="rgb(215,8,51)" fg:x="2429" fg:w="17"/><text x="3.3475%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="3.0975%" y="533" width="0.0217%" height="15" fill="rgb(223,106,5)" fg:x="2429" fg:w="17"/><text x="3.3475%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (54 samples, 0.07%)</title><rect x="3.0848%" y="741" width="0.0689%" height="15" fill="rgb(250,191,5)" fg:x="2419" fg:w="54"/><text x="3.3348%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (53 samples, 0.07%)</title><rect x="3.0861%" y="725" width="0.0676%" height="15" fill="rgb(242,132,44)" fg:x="2420" fg:w="53"/><text x="3.3361%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (44 samples, 0.06%)</title><rect x="3.0975%" y="709" width="0.0561%" height="15" fill="rgb(251,152,29)" fg:x="2429" fg:w="44"/><text x="3.3475%" y="719.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (44 samples, 0.06%)</title><rect x="3.0975%" y="693" width="0.0561%" height="15" fill="rgb(218,179,5)" fg:x="2429" fg:w="44"/><text x="3.3475%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.03%)</title><rect x="3.1192%" y="677" width="0.0344%" height="15" fill="rgb(227,67,19)" fg:x="2446" fg:w="27"/><text x="3.3692%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.03%)</title><rect x="3.1192%" y="661" width="0.0344%" height="15" fill="rgb(233,119,31)" fg:x="2446" fg:w="27"/><text x="3.3692%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.03%)</title><rect x="3.1192%" y="645" width="0.0344%" height="15" fill="rgb(241,120,22)" fg:x="2446" fg:w="27"/><text x="3.3692%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (27 samples, 0.03%)</title><rect x="3.1192%" y="629" width="0.0344%" height="15" fill="rgb(224,102,30)" fg:x="2446" fg:w="27"/><text x="3.3692%" y="639.50"></text></g><g><title>aptos_executor_types::in_memory_state_calculator::InMemoryStateCalculator::add_transaction (783 samples, 1.00%)</title><rect x="2.1717%" y="1061" width="0.9985%" height="15" fill="rgb(210,164,37)" fg:x="1703" fg:w="783"/><text x="2.4217%" y="1071.50"></text></g><g><title>aptos_executor_types::in_memory_state_calculator::process_write_set (628 samples, 0.80%)</title><rect x="2.3694%" y="1045" width="0.8008%" height="15" fill="rgb(226,191,16)" fg:x="1858" fg:w="628"/><text x="2.6194%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (627 samples, 0.80%)</title><rect x="2.3707%" y="1029" width="0.7996%" height="15" fill="rgb(214,40,45)" fg:x="1859" fg:w="627"/><text x="2.6207%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (627 samples, 0.80%)</title><rect x="2.3707%" y="1013" width="0.7996%" height="15" fill="rgb(244,29,26)" fg:x="1859" fg:w="627"/><text x="2.6207%" y="1023.50"></text></g><g><title>core::iter::adapters::try_process (627 samples, 0.80%)</title><rect x="2.3707%" y="997" width="0.7996%" height="15" fill="rgb(216,16,5)" fg:x="1859" fg:w="627"/><text x="2.6207%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (627 samples, 0.80%)</title><rect x="2.3707%" y="981" width="0.7996%" height="15" fill="rgb(249,76,35)" fg:x="1859" fg:w="627"/><text x="2.6207%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (627 samples, 0.80%)</title><rect x="2.3707%" y="965" width="0.7996%" height="15" fill="rgb(207,11,44)" fg:x="1859" fg:w="627"/><text x="2.6207%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (627 samples, 0.80%)</title><rect x="2.3707%" y="949" width="0.7996%" height="15" fill="rgb(228,190,49)" fg:x="1859" fg:w="627"/><text x="2.6207%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (627 samples, 0.80%)</title><rect x="2.3707%" y="933" width="0.7996%" height="15" fill="rgb(214,173,12)" fg:x="1859" fg:w="627"/><text x="2.6207%" y="943.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (627 samples, 0.80%)</title><rect x="2.3707%" y="917" width="0.7996%" height="15" fill="rgb(218,26,35)" fg:x="1859" fg:w="627"/><text x="2.6207%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (627 samples, 0.80%)</title><rect x="2.3707%" y="901" width="0.7996%" height="15" fill="rgb(220,200,19)" fg:x="1859" fg:w="627"/><text x="2.6207%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::fold (627 samples, 0.80%)</title><rect x="2.3707%" y="885" width="0.7996%" height="15" fill="rgb(239,95,49)" fg:x="1859" fg:w="627"/><text x="2.6207%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (627 samples, 0.80%)</title><rect x="2.3707%" y="869" width="0.7996%" height="15" fill="rgb(235,85,53)" fg:x="1859" fg:w="627"/><text x="2.6207%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (627 samples, 0.80%)</title><rect x="2.3707%" y="853" width="0.7996%" height="15" fill="rgb(233,133,31)" fg:x="1859" fg:w="627"/><text x="2.6207%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (627 samples, 0.80%)</title><rect x="2.3707%" y="837" width="0.7996%" height="15" fill="rgb(218,25,20)" fg:x="1859" fg:w="627"/><text x="2.6207%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (625 samples, 0.80%)</title><rect x="2.3732%" y="821" width="0.7970%" height="15" fill="rgb(252,210,38)" fg:x="1861" fg:w="625"/><text x="2.6232%" y="831.50"></text></g><g><title>aptos_executor_types::in_memory_state_calculator::process_write_set::{{closure}} (482 samples, 0.61%)</title><rect x="2.5556%" y="805" width="0.6147%" height="15" fill="rgb(242,134,21)" fg:x="2004" fg:w="482"/><text x="2.8056%" y="815.50"></text></g><g><title>aptos_executor_types::in_memory_state_calculator::process_state_key_write_op (482 samples, 0.61%)</title><rect x="2.5556%" y="789" width="0.6147%" height="15" fill="rgb(213,28,48)" fg:x="2004" fg:w="482"/><text x="2.8056%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (72 samples, 0.09%)</title><rect x="3.0784%" y="773" width="0.0918%" height="15" fill="rgb(250,196,2)" fg:x="2414" fg:w="72"/><text x="3.3284%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (72 samples, 0.09%)</title><rect x="3.0784%" y="757" width="0.0918%" height="15" fill="rgb(227,5,17)" fg:x="2414" fg:w="72"/><text x="3.3284%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (13 samples, 0.02%)</title><rect x="3.1537%" y="741" width="0.0166%" height="15" fill="rgb(221,226,24)" fg:x="2473" fg:w="13"/><text x="3.4037%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (13 samples, 0.02%)</title><rect x="3.1537%" y="725" width="0.0166%" height="15" fill="rgb(211,5,48)" fg:x="2473" fg:w="13"/><text x="3.4037%" y="735.50"></text></g><g><title>aptos_executor_types::in_memory_state_calculator::InMemoryStateCalculator::calculate_for_transaction_chunk (784 samples, 1.00%)</title><rect x="2.1717%" y="1077" width="0.9998%" height="15" fill="rgb(219,150,6)" fg:x="1703" fg:w="784"/><text x="2.4217%" y="1087.50"></text></g><g><title>&lt;aptos_crypto::hash::TransactionAccumulatorHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (34 samples, 0.04%)</title><rect x="3.1715%" y="1029" width="0.0434%" height="15" fill="rgb(251,46,16)" fg:x="2487" fg:w="34"/><text x="3.4215%" y="1039.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (34 samples, 0.04%)</title><rect x="3.1715%" y="1013" width="0.0434%" height="15" fill="rgb(220,204,40)" fg:x="2487" fg:w="34"/><text x="3.4215%" y="1023.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (34 samples, 0.04%)</title><rect x="3.1715%" y="997" width="0.0434%" height="15" fill="rgb(211,85,2)" fg:x="2487" fg:w="34"/><text x="3.4215%" y="1007.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (34 samples, 0.04%)</title><rect x="3.1715%" y="981" width="0.0434%" height="15" fill="rgb(229,17,7)" fg:x="2487" fg:w="34"/><text x="3.4215%" y="991.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (34 samples, 0.04%)</title><rect x="3.1715%" y="965" width="0.0434%" height="15" fill="rgb(239,72,28)" fg:x="2487" fg:w="34"/><text x="3.4215%" y="975.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (33 samples, 0.04%)</title><rect x="3.1728%" y="949" width="0.0421%" height="15" fill="rgb(230,47,54)" fg:x="2488" fg:w="33"/><text x="3.4228%" y="959.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (33 samples, 0.04%)</title><rect x="3.1728%" y="933" width="0.0421%" height="15" fill="rgb(214,50,8)" fg:x="2488" fg:w="33"/><text x="3.4228%" y="943.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (33 samples, 0.04%)</title><rect x="3.1728%" y="917" width="0.0421%" height="15" fill="rgb(216,198,43)" fg:x="2488" fg:w="33"/><text x="3.4228%" y="927.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (33 samples, 0.04%)</title><rect x="3.1728%" y="901" width="0.0421%" height="15" fill="rgb(234,20,35)" fg:x="2488" fg:w="33"/><text x="3.4228%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (33 samples, 0.04%)</title><rect x="3.1728%" y="885" width="0.0421%" height="15" fill="rgb(254,45,19)" fg:x="2488" fg:w="33"/><text x="3.4228%" y="895.50"></text></g><g><title>aptos_api::executor::src::components::chunk_output::ChunkOutput::apply_to_ledger (1,186 samples, 1.51%)</title><rect x="1.7037%" y="1109" width="1.5124%" height="15" fill="rgb(219,14,44)" fg:x="1336" fg:w="1186"/><text x="1.9537%" y="1119.50"></text></g><g><title>aptos_api::executor::src::components::apply_chunk_output::ApplyChunkOutput::apply (1,186 samples, 1.51%)</title><rect x="1.7037%" y="1093" width="1.5124%" height="15" fill="rgb(217,220,26)" fg:x="1336" fg:w="1186"/><text x="1.9537%" y="1103.50"></text></g><g><title>aptos_types::proof::accumulator::InMemoryAccumulator&lt;H&gt;::append (35 samples, 0.04%)</title><rect x="3.1715%" y="1077" width="0.0446%" height="15" fill="rgb(213,158,28)" fg:x="2487" fg:w="35"/><text x="3.4215%" y="1087.50"></text></g><g><title>aptos_types::proof::accumulator::InMemoryAccumulator&lt;H&gt;::append_one (35 samples, 0.04%)</title><rect x="3.1715%" y="1061" width="0.0446%" height="15" fill="rgb(252,51,52)" fg:x="2487" fg:w="35"/><text x="3.4215%" y="1071.50"></text></g><g><title>&lt;aptos_types::proof::MerkleTreeInternalNode&lt;H&gt; as aptos_crypto::hash::CryptoHash&gt;::hash (35 samples, 0.04%)</title><rect x="3.1715%" y="1045" width="0.0446%" height="15" fill="rgb(246,89,16)" fg:x="2487" fg:w="35"/><text x="3.4215%" y="1055.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="3.2276%" y="885" width="0.0115%" height="15" fill="rgb(216,158,49)" fg:x="2531" fg:w="9"/><text x="3.4776%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="3.2276%" y="869" width="0.0115%" height="15" fill="rgb(236,107,19)" fg:x="2531" fg:w="9"/><text x="3.4776%" y="879.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (9 samples, 0.01%)</title><rect x="3.2276%" y="853" width="0.0115%" height="15" fill="rgb(228,185,30)" fg:x="2531" fg:w="9"/><text x="3.4776%" y="863.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="3.2276%" y="837" width="0.0115%" height="15" fill="rgb(246,134,8)" fg:x="2531" fg:w="9"/><text x="3.4776%" y="847.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="3.2276%" y="821" width="0.0115%" height="15" fill="rgb(214,143,50)" fg:x="2531" fg:w="9"/><text x="3.4776%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="3.2276%" y="805" width="0.0115%" height="15" fill="rgb(228,75,8)" fg:x="2531" fg:w="9"/><text x="3.4776%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.01%)</title><rect x="3.2276%" y="789" width="0.0115%" height="15" fill="rgb(207,175,4)" fg:x="2531" fg:w="9"/><text x="3.4776%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (9 samples, 0.01%)</title><rect x="3.2276%" y="773" width="0.0115%" height="15" fill="rgb(205,108,24)" fg:x="2531" fg:w="9"/><text x="3.4776%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (9 samples, 0.01%)</title><rect x="3.2276%" y="757" width="0.0115%" height="15" fill="rgb(244,120,49)" fg:x="2531" fg:w="9"/><text x="3.4776%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="3.2225%" y="949" width="0.0179%" height="15" fill="rgb(223,47,38)" fg:x="2527" fg:w="14"/><text x="3.4725%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.02%)</title><rect x="3.2225%" y="933" width="0.0179%" height="15" fill="rgb(229,179,11)" fg:x="2527" fg:w="14"/><text x="3.4725%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.02%)</title><rect x="3.2225%" y="917" width="0.0179%" height="15" fill="rgb(231,122,1)" fg:x="2527" fg:w="14"/><text x="3.4725%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.02%)</title><rect x="3.2225%" y="901" width="0.0179%" height="15" fill="rgb(245,119,9)" fg:x="2527" fg:w="14"/><text x="3.4725%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="3.2161%" y="1093" width="0.0268%" height="15" fill="rgb(241,163,25)" fg:x="2522" fg:w="21"/><text x="3.4661%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.03%)</title><rect x="3.2161%" y="1077" width="0.0268%" height="15" fill="rgb(217,214,3)" fg:x="2522" fg:w="21"/><text x="3.4661%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.03%)</title><rect x="3.2161%" y="1061" width="0.0268%" height="15" fill="rgb(240,86,28)" fg:x="2522" fg:w="21"/><text x="3.4661%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.03%)</title><rect x="3.2161%" y="1045" width="0.0268%" height="15" fill="rgb(215,47,9)" fg:x="2522" fg:w="21"/><text x="3.4661%" y="1055.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="3.2161%" y="1029" width="0.0268%" height="15" fill="rgb(252,25,45)" fg:x="2522" fg:w="21"/><text x="3.4661%" y="1039.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="3.2161%" y="1013" width="0.0268%" height="15" fill="rgb(251,164,9)" fg:x="2522" fg:w="21"/><text x="3.4661%" y="1023.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="3.2161%" y="997" width="0.0268%" height="15" fill="rgb(233,194,0)" fg:x="2522" fg:w="21"/><text x="3.4661%" y="1007.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="3.2161%" y="981" width="0.0268%" height="15" fill="rgb(249,111,24)" fg:x="2522" fg:w="21"/><text x="3.4661%" y="991.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="3.2161%" y="965" width="0.0268%" height="15" fill="rgb(250,223,3)" fg:x="2522" fg:w="21"/><text x="3.4661%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 0.02%)</title><rect x="3.2544%" y="949" width="0.0166%" height="15" fill="rgb(236,178,37)" fg:x="2552" fg:w="13"/><text x="3.5044%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (13 samples, 0.02%)</title><rect x="3.2544%" y="933" width="0.0166%" height="15" fill="rgb(241,158,50)" fg:x="2552" fg:w="13"/><text x="3.5044%" y="943.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="3.2799%" y="885" width="0.0102%" height="15" fill="rgb(213,121,41)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="895.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="3.2799%" y="869" width="0.0102%" height="15" fill="rgb(240,92,3)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="3.2799%" y="853" width="0.0102%" height="15" fill="rgb(205,123,3)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="3.2799%" y="837" width="0.0102%" height="15" fill="rgb(205,97,47)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="3.2799%" y="821" width="0.0102%" height="15" fill="rgb(247,152,14)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="3.2799%" y="805" width="0.0102%" height="15" fill="rgb(248,195,53)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="3.2799%" y="789" width="0.0102%" height="15" fill="rgb(226,201,16)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="3.2799%" y="773" width="0.0102%" height="15" fill="rgb(205,98,0)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.01%)</title><rect x="3.2799%" y="757" width="0.0102%" height="15" fill="rgb(214,191,48)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="3.2799%" y="741" width="0.0102%" height="15" fill="rgb(237,112,39)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="3.2799%" y="725" width="0.0102%" height="15" fill="rgb(247,203,27)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="735.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="3.2799%" y="709" width="0.0102%" height="15" fill="rgb(235,124,28)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="719.50"></text></g><g><title>mallocx (8 samples, 0.01%)</title><rect x="3.2799%" y="693" width="0.0102%" height="15" fill="rgb(208,207,46)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="703.50"></text></g><g><title>imalloc (8 samples, 0.01%)</title><rect x="3.2799%" y="677" width="0.0102%" height="15" fill="rgb(234,176,4)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="687.50"></text></g><g><title>tsd_fetch (8 samples, 0.01%)</title><rect x="3.2799%" y="661" width="0.0102%" height="15" fill="rgb(230,133,28)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="671.50"></text></g><g><title>tsd_fetch_impl (8 samples, 0.01%)</title><rect x="3.2799%" y="645" width="0.0102%" height="15" fill="rgb(211,137,40)" fg:x="2572" fg:w="8"/><text x="3.5299%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="3.2710%" y="949" width="0.0204%" height="15" fill="rgb(254,35,13)" fg:x="2565" fg:w="16"/><text x="3.5210%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.01%)</title><rect x="3.2786%" y="933" width="0.0128%" height="15" fill="rgb(225,49,51)" fg:x="2571" fg:w="10"/><text x="3.5286%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 0.01%)</title><rect x="3.2786%" y="917" width="0.0128%" height="15" fill="rgb(251,10,15)" fg:x="2571" fg:w="10"/><text x="3.5286%" y="927.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes::{{closure}} (9 samples, 0.01%)</title><rect x="3.2799%" y="901" width="0.0115%" height="15" fill="rgb(228,207,15)" fg:x="2572" fg:w="9"/><text x="3.5299%" y="911.50"></text></g><g><title>&lt;aptos_vm::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (32 samples, 0.04%)</title><rect x="3.2518%" y="1029" width="0.0408%" height="15" fill="rgb(241,99,19)" fg:x="2550" fg:w="32"/><text x="3.5018%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (30 samples, 0.04%)</title><rect x="3.2544%" y="1013" width="0.0383%" height="15" fill="rgb(207,104,49)" fg:x="2552" fg:w="30"/><text x="3.5044%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (30 samples, 0.04%)</title><rect x="3.2544%" y="997" width="0.0383%" height="15" fill="rgb(234,99,18)" fg:x="2552" fg:w="30"/><text x="3.5044%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (30 samples, 0.04%)</title><rect x="3.2544%" y="981" width="0.0383%" height="15" fill="rgb(213,191,49)" fg:x="2552" fg:w="30"/><text x="3.5044%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (30 samples, 0.04%)</title><rect x="3.2544%" y="965" width="0.0383%" height="15" fill="rgb(210,226,19)" fg:x="2552" fg:w="30"/><text x="3.5044%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="3.3041%" y="853" width="0.0179%" height="15" fill="rgb(229,97,18)" fg:x="2591" fg:w="14"/><text x="3.5541%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="3.3041%" y="837" width="0.0179%" height="15" fill="rgb(211,167,15)" fg:x="2591" fg:w="14"/><text x="3.5541%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14 samples, 0.02%)</title><rect x="3.3233%" y="789" width="0.0179%" height="15" fill="rgb(210,169,34)" fg:x="2606" fg:w="14"/><text x="3.5733%" y="799.50"></text></g><g><title>alloc::string::String::push_str (10 samples, 0.01%)</title><rect x="3.3284%" y="773" width="0.0128%" height="15" fill="rgb(241,121,31)" fg:x="2610" fg:w="10"/><text x="3.5784%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.01%)</title><rect x="3.3284%" y="757" width="0.0128%" height="15" fill="rgb(232,40,11)" fg:x="2610" fg:w="10"/><text x="3.5784%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.01%)</title><rect x="3.3284%" y="741" width="0.0128%" height="15" fill="rgb(205,86,26)" fg:x="2610" fg:w="10"/><text x="3.5784%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.01%)</title><rect x="3.3284%" y="725" width="0.0128%" height="15" fill="rgb(231,126,28)" fg:x="2610" fg:w="10"/><text x="3.5784%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="3.3284%" y="709" width="0.0128%" height="15" fill="rgb(219,221,18)" fg:x="2610" fg:w="10"/><text x="3.5784%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="3.3284%" y="693" width="0.0128%" height="15" fill="rgb(211,40,0)" fg:x="2610" fg:w="10"/><text x="3.5784%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.01%)</title><rect x="3.3284%" y="677" width="0.0128%" height="15" fill="rgb(239,85,43)" fg:x="2610" fg:w="10"/><text x="3.5784%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="3.3296%" y="661" width="0.0115%" height="15" fill="rgb(231,55,21)" fg:x="2611" fg:w="9"/><text x="3.5796%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="3.3296%" y="645" width="0.0115%" height="15" fill="rgb(225,184,43)" fg:x="2611" fg:w="9"/><text x="3.5796%" y="655.50"></text></g><g><title>core::fmt::Formatter::pad_integral (12 samples, 0.02%)</title><rect x="3.3500%" y="789" width="0.0153%" height="15" fill="rgb(251,158,41)" fg:x="2627" fg:w="12"/><text x="3.6000%" y="799.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (55 samples, 0.07%)</title><rect x="3.2965%" y="997" width="0.0701%" height="15" fill="rgb(234,159,37)" fg:x="2585" fg:w="55"/><text x="3.5465%" y="1007.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::Debug&gt;::fmt (55 samples, 0.07%)</title><rect x="3.2965%" y="981" width="0.0701%" height="15" fill="rgb(216,204,22)" fg:x="2585" fg:w="55"/><text x="3.5465%" y="991.50"></text></g><g><title>core::fmt::Formatter::write_fmt (54 samples, 0.07%)</title><rect x="3.2978%" y="965" width="0.0689%" height="15" fill="rgb(214,17,3)" fg:x="2586" fg:w="54"/><text x="3.5478%" y="975.50"></text></g><g><title>core::fmt::write (54 samples, 0.07%)</title><rect x="3.2978%" y="949" width="0.0689%" height="15" fill="rgb(212,111,17)" fg:x="2586" fg:w="54"/><text x="3.5478%" y="959.50"></text></g><g><title>core::fmt::rt::Argument::fmt (54 samples, 0.07%)</title><rect x="3.2978%" y="933" width="0.0689%" height="15" fill="rgb(221,157,24)" fg:x="2586" fg:w="54"/><text x="3.5478%" y="943.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (54 samples, 0.07%)</title><rect x="3.2978%" y="917" width="0.0689%" height="15" fill="rgb(252,16,13)" fg:x="2586" fg:w="54"/><text x="3.5478%" y="927.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::LowerHex&gt;::fmt (54 samples, 0.07%)</title><rect x="3.2978%" y="901" width="0.0689%" height="15" fill="rgb(221,62,2)" fg:x="2586" fg:w="54"/><text x="3.5478%" y="911.50"></text></g><g><title>core::fmt::Formatter::write_fmt (49 samples, 0.06%)</title><rect x="3.3041%" y="885" width="0.0625%" height="15" fill="rgb(247,87,22)" fg:x="2591" fg:w="49"/><text x="3.5541%" y="895.50"></text></g><g><title>core::fmt::write (49 samples, 0.06%)</title><rect x="3.3041%" y="869" width="0.0625%" height="15" fill="rgb(215,73,9)" fg:x="2591" fg:w="49"/><text x="3.5541%" y="879.50"></text></g><g><title>core::fmt::run (35 samples, 0.04%)</title><rect x="3.3220%" y="853" width="0.0446%" height="15" fill="rgb(207,175,33)" fg:x="2605" fg:w="35"/><text x="3.5720%" y="863.50"></text></g><g><title>core::fmt::rt::Argument::fmt (35 samples, 0.04%)</title><rect x="3.3220%" y="837" width="0.0446%" height="15" fill="rgb(243,129,54)" fg:x="2605" fg:w="35"/><text x="3.5720%" y="847.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (34 samples, 0.04%)</title><rect x="3.3233%" y="821" width="0.0434%" height="15" fill="rgb(227,119,45)" fg:x="2606" fg:w="34"/><text x="3.5733%" y="831.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (34 samples, 0.04%)</title><rect x="3.3233%" y="805" width="0.0434%" height="15" fill="rgb(205,109,36)" fg:x="2606" fg:w="34"/><text x="3.5733%" y="815.50"></text></g><g><title>&lt;aptos_logger::aptos_logger::AptosData as aptos_logger::logger::Logger&gt;::enabled (11 samples, 0.01%)</title><rect x="3.3666%" y="997" width="0.0140%" height="15" fill="rgb(205,6,39)" fg:x="2640" fg:w="11"/><text x="3.6166%" y="1007.50"></text></g><g><title>aptos_infallible::rwlock::RwLock&lt;T&gt;::read (11 samples, 0.01%)</title><rect x="3.3666%" y="981" width="0.0140%" height="15" fill="rgb(221,32,16)" fg:x="2640" fg:w="11"/><text x="3.6166%" y="991.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (11 samples, 0.01%)</title><rect x="3.3666%" y="965" width="0.0140%" height="15" fill="rgb(228,144,50)" fg:x="2640" fg:w="11"/><text x="3.6166%" y="975.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (11 samples, 0.01%)</title><rect x="3.3666%" y="949" width="0.0140%" height="15" fill="rgb(229,201,53)" fg:x="2640" fg:w="11"/><text x="3.6166%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (11 samples, 0.01%)</title><rect x="3.3666%" y="933" width="0.0140%" height="15" fill="rgb(249,153,27)" fg:x="2640" fg:w="11"/><text x="3.6166%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="3.3666%" y="917" width="0.0140%" height="15" fill="rgb(227,106,25)" fg:x="2640" fg:w="11"/><text x="3.6166%" y="927.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (41 samples, 0.05%)</title><rect x="3.3806%" y="997" width="0.0523%" height="15" fill="rgb(230,65,29)" fg:x="2651" fg:w="41"/><text x="3.6306%" y="1007.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (41 samples, 0.05%)</title><rect x="3.3806%" y="981" width="0.0523%" height="15" fill="rgb(221,57,46)" fg:x="2651" fg:w="41"/><text x="3.6306%" y="991.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (41 samples, 0.05%)</title><rect x="3.3806%" y="965" width="0.0523%" height="15" fill="rgb(229,161,17)" fg:x="2651" fg:w="41"/><text x="3.6306%" y="975.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (41 samples, 0.05%)</title><rect x="3.3806%" y="949" width="0.0523%" height="15" fill="rgb(222,213,11)" fg:x="2651" fg:w="41"/><text x="3.6306%" y="959.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (41 samples, 0.05%)</title><rect x="3.3806%" y="933" width="0.0523%" height="15" fill="rgb(235,35,13)" fg:x="2651" fg:w="41"/><text x="3.6306%" y="943.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (41 samples, 0.05%)</title><rect x="3.3806%" y="917" width="0.0523%" height="15" fill="rgb(233,158,34)" fg:x="2651" fg:w="41"/><text x="3.6306%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (41 samples, 0.05%)</title><rect x="3.3806%" y="901" width="0.0523%" height="15" fill="rgb(215,151,48)" fg:x="2651" fg:w="41"/><text x="3.6306%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (41 samples, 0.05%)</title><rect x="3.3806%" y="885" width="0.0523%" height="15" fill="rgb(229,84,14)" fg:x="2651" fg:w="41"/><text x="3.6306%" y="895.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_send (10 samples, 0.01%)</title><rect x="3.4457%" y="885" width="0.0128%" height="15" fill="rgb(229,68,14)" fg:x="2702" fg:w="10"/><text x="3.6957%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (10 samples, 0.01%)</title><rect x="3.4457%" y="869" width="0.0128%" height="15" fill="rgb(243,106,26)" fg:x="2702" fg:w="10"/><text x="3.6957%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.01%)</title><rect x="3.4457%" y="853" width="0.0128%" height="15" fill="rgb(206,45,38)" fg:x="2702" fg:w="10"/><text x="3.6957%" y="863.50"></text></g><g><title>aptos_logger::aptos_logger::AptosData::send_entry (38 samples, 0.05%)</title><rect x="3.4380%" y="949" width="0.0485%" height="15" fill="rgb(226,6,15)" fg:x="2696" fg:w="38"/><text x="3.6880%" y="959.50"></text></g><g><title>std::sync::mpsc::SyncSender&lt;T&gt;::try_send (32 samples, 0.04%)</title><rect x="3.4457%" y="933" width="0.0408%" height="15" fill="rgb(232,22,54)" fg:x="2702" fg:w="32"/><text x="3.6957%" y="943.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::try_send (32 samples, 0.04%)</title><rect x="3.4457%" y="917" width="0.0408%" height="15" fill="rgb(229,222,32)" fg:x="2702" fg:w="32"/><text x="3.6957%" y="927.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::try_send (32 samples, 0.04%)</title><rect x="3.4457%" y="901" width="0.0408%" height="15" fill="rgb(228,62,29)" fg:x="2702" fg:w="32"/><text x="3.6957%" y="911.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::write (22 samples, 0.03%)</title><rect x="3.4584%" y="885" width="0.0281%" height="15" fill="rgb(251,103,34)" fg:x="2712" fg:w="22"/><text x="3.7084%" y="895.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (22 samples, 0.03%)</title><rect x="3.4584%" y="869" width="0.0281%" height="15" fill="rgb(233,12,30)" fg:x="2712" fg:w="22"/><text x="3.7084%" y="879.50"></text></g><g><title>std::sync::mpmc::waker::Waker::try_select (19 samples, 0.02%)</title><rect x="3.4623%" y="853" width="0.0242%" height="15" fill="rgb(238,52,0)" fg:x="2715" fg:w="19"/><text x="3.7123%" y="863.50"></text></g><g><title>std::sync::mpmc::waker::current_thread_id (19 samples, 0.02%)</title><rect x="3.4623%" y="837" width="0.0242%" height="15" fill="rgb(223,98,5)" fg:x="2715" fg:w="19"/><text x="3.7123%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.02%)</title><rect x="3.4623%" y="821" width="0.0242%" height="15" fill="rgb(228,75,37)" fg:x="2715" fg:w="19"/><text x="3.7123%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.02%)</title><rect x="3.4623%" y="805" width="0.0242%" height="15" fill="rgb(205,115,49)" fg:x="2715" fg:w="19"/><text x="3.7123%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (19 samples, 0.02%)</title><rect x="3.4623%" y="789" width="0.0242%" height="15" fill="rgb(250,154,43)" fg:x="2715" fg:w="19"/><text x="3.7123%" y="799.50"></text></g><g><title>std::sync::mpmc::waker::current_thread_id::DUMMY::{{constant}}::{{closure}} (19 samples, 0.02%)</title><rect x="3.4623%" y="773" width="0.0242%" height="15" fill="rgb(226,43,29)" fg:x="2715" fg:w="19"/><text x="3.7123%" y="783.50"></text></g><g><title>std::sys::thread_local::fast_local::lazy::Storage&lt;T,D&gt;::get_or_init (19 samples, 0.02%)</title><rect x="3.4623%" y="757" width="0.0242%" height="15" fill="rgb(249,228,39)" fg:x="2715" fg:w="19"/><text x="3.7123%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (21 samples, 0.03%)</title><rect x="3.5069%" y="741" width="0.0268%" height="15" fill="rgb(216,79,43)" fg:x="2750" fg:w="21"/><text x="3.7569%" y="751.50"></text></g><g><title>alloc::string::String::push_str (15 samples, 0.02%)</title><rect x="3.5145%" y="725" width="0.0191%" height="15" fill="rgb(228,95,12)" fg:x="2756" fg:w="15"/><text x="3.7645%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.02%)</title><rect x="3.5145%" y="709" width="0.0191%" height="15" fill="rgb(249,221,15)" fg:x="2756" fg:w="15"/><text x="3.7645%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.02%)</title><rect x="3.5145%" y="693" width="0.0191%" height="15" fill="rgb(233,34,13)" fg:x="2756" fg:w="15"/><text x="3.7645%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.02%)</title><rect x="3.5145%" y="677" width="0.0191%" height="15" fill="rgb(214,103,39)" fg:x="2756" fg:w="15"/><text x="3.7645%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (15 samples, 0.02%)</title><rect x="3.5145%" y="661" width="0.0191%" height="15" fill="rgb(251,126,39)" fg:x="2756" fg:w="15"/><text x="3.7645%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.02%)</title><rect x="3.5145%" y="645" width="0.0191%" height="15" fill="rgb(214,216,36)" fg:x="2756" fg:w="15"/><text x="3.7645%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.02%)</title><rect x="3.5145%" y="629" width="0.0191%" height="15" fill="rgb(220,221,8)" fg:x="2756" fg:w="15"/><text x="3.7645%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="3.5196%" y="613" width="0.0140%" height="15" fill="rgb(240,216,3)" fg:x="2760" fg:w="11"/><text x="3.7696%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="3.5196%" y="597" width="0.0140%" height="15" fill="rgb(232,218,17)" fg:x="2760" fg:w="11"/><text x="3.7696%" y="607.50"></text></g><g><title>core::fmt::Formatter::pad_integral (14 samples, 0.02%)</title><rect x="3.5337%" y="741" width="0.0179%" height="15" fill="rgb(229,163,45)" fg:x="2771" fg:w="14"/><text x="3.7837%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (48 samples, 0.06%)</title><rect x="3.4992%" y="853" width="0.0612%" height="15" fill="rgb(231,110,42)" fg:x="2744" fg:w="48"/><text x="3.7492%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (48 samples, 0.06%)</title><rect x="3.4992%" y="837" width="0.0612%" height="15" fill="rgb(208,170,48)" fg:x="2744" fg:w="48"/><text x="3.7492%" y="847.50"></text></g><g><title>core::fmt::write (48 samples, 0.06%)</title><rect x="3.4992%" y="821" width="0.0612%" height="15" fill="rgb(239,116,25)" fg:x="2744" fg:w="48"/><text x="3.7492%" y="831.50"></text></g><g><title>core::fmt::run (48 samples, 0.06%)</title><rect x="3.4992%" y="805" width="0.0612%" height="15" fill="rgb(219,200,50)" fg:x="2744" fg:w="48"/><text x="3.7492%" y="815.50"></text></g><g><title>core::fmt::rt::Argument::fmt (42 samples, 0.05%)</title><rect x="3.5069%" y="789" width="0.0536%" height="15" fill="rgb(245,200,0)" fg:x="2750" fg:w="42"/><text x="3.7569%" y="799.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (42 samples, 0.05%)</title><rect x="3.5069%" y="773" width="0.0536%" height="15" fill="rgb(245,119,33)" fg:x="2750" fg:w="42"/><text x="3.7569%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (42 samples, 0.05%)</title><rect x="3.5069%" y="757" width="0.0536%" height="15" fill="rgb(231,125,12)" fg:x="2750" fg:w="42"/><text x="3.7569%" y="767.50"></text></g><g><title>chrono::format::format_inner (82 samples, 0.10%)</title><rect x="3.4929%" y="869" width="0.1046%" height="15" fill="rgb(216,96,41)" fg:x="2739" fg:w="82"/><text x="3.7429%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29 samples, 0.04%)</title><rect x="3.5605%" y="853" width="0.0370%" height="15" fill="rgb(248,43,45)" fg:x="2792" fg:w="29"/><text x="3.8105%" y="863.50"></text></g><g><title>chrono::format::format (88 samples, 0.11%)</title><rect x="3.4878%" y="885" width="0.1122%" height="15" fill="rgb(217,222,7)" fg:x="2735" fg:w="88"/><text x="3.7378%" y="895.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (92 samples, 0.12%)</title><rect x="3.4878%" y="917" width="0.1173%" height="15" fill="rgb(233,28,6)" fg:x="2735" fg:w="92"/><text x="3.7378%" y="927.50"></text></g><g><title>&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (92 samples, 0.12%)</title><rect x="3.4878%" y="901" width="0.1173%" height="15" fill="rgb(231,218,15)" fg:x="2735" fg:w="92"/><text x="3.7378%" y="911.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::naive_local (8 samples, 0.01%)</title><rect x="3.6051%" y="901" width="0.0102%" height="15" fill="rgb(226,171,48)" fg:x="2827" fg:w="8"/><text x="3.8551%" y="911.50"></text></g><g><title>chrono::offset::fixed::&lt;impl core::ops::arith::Add&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::add (8 samples, 0.01%)</title><rect x="3.6051%" y="885" width="0.0102%" height="15" fill="rgb(235,201,9)" fg:x="2827" fg:w="8"/><text x="3.8551%" y="895.50"></text></g><g><title>chrono::offset::fixed::add_with_leapsecond (8 samples, 0.01%)</title><rect x="3.6051%" y="869" width="0.0102%" height="15" fill="rgb(217,80,15)" fg:x="2827" fg:w="8"/><text x="3.8551%" y="879.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (8 samples, 0.01%)</title><rect x="3.6051%" y="853" width="0.0102%" height="15" fill="rgb(219,152,8)" fg:x="2827" fg:w="8"/><text x="3.8551%" y="863.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (8 samples, 0.01%)</title><rect x="3.6051%" y="837" width="0.0102%" height="15" fill="rgb(243,107,38)" fg:x="2827" fg:w="8"/><text x="3.8551%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.01%)</title><rect x="3.6153%" y="869" width="0.0115%" height="15" fill="rgb(231,17,5)" fg:x="2835" fg:w="9"/><text x="3.8653%" y="879.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.01%)</title><rect x="3.6166%" y="853" width="0.0102%" height="15" fill="rgb(209,25,54)" fg:x="2836" fg:w="8"/><text x="3.8666%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.01%)</title><rect x="3.6166%" y="837" width="0.0102%" height="15" fill="rgb(219,0,2)" fg:x="2836" fg:w="8"/><text x="3.8666%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="3.6166%" y="821" width="0.0102%" height="15" fill="rgb(246,9,5)" fg:x="2836" fg:w="8"/><text x="3.8666%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.01%)</title><rect x="3.6166%" y="805" width="0.0102%" height="15" fill="rgb(226,159,4)" fg:x="2836" fg:w="8"/><text x="3.8666%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="3.6166%" y="789" width="0.0102%" height="15" fill="rgb(219,175,34)" fg:x="2836" fg:w="8"/><text x="3.8666%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="3.6166%" y="773" width="0.0102%" height="15" fill="rgb(236,10,46)" fg:x="2836" fg:w="8"/><text x="3.8666%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.01%)</title><rect x="3.6166%" y="757" width="0.0102%" height="15" fill="rgb(240,211,16)" fg:x="2836" fg:w="8"/><text x="3.8666%" y="767.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::format_with_items (20 samples, 0.03%)</title><rect x="3.6051%" y="917" width="0.0255%" height="15" fill="rgb(205,3,43)" fg:x="2827" fg:w="20"/><text x="3.8551%" y="927.50"></text></g><g><title>chrono::format::DelayedFormat&lt;I&gt;::new_with_offset (12 samples, 0.02%)</title><rect x="3.6153%" y="901" width="0.0153%" height="15" fill="rgb(245,7,22)" fg:x="2835" fg:w="12"/><text x="3.8653%" y="911.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (12 samples, 0.02%)</title><rect x="3.6153%" y="885" width="0.0153%" height="15" fill="rgb(239,132,32)" fg:x="2835" fg:w="12"/><text x="3.8653%" y="895.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::to_rfc3339_opts (114 samples, 0.15%)</title><rect x="3.4878%" y="933" width="0.1454%" height="15" fill="rgb(228,202,34)" fg:x="2735" fg:w="114"/><text x="3.7378%" y="943.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::from_timestamp (12 samples, 0.02%)</title><rect x="3.6357%" y="917" width="0.0153%" height="15" fill="rgb(254,200,22)" fg:x="2851" fg:w="12"/><text x="3.8857%" y="927.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::from_timestamp_opt (12 samples, 0.02%)</title><rect x="3.6357%" y="901" width="0.0153%" height="15" fill="rgb(219,10,39)" fg:x="2851" fg:w="12"/><text x="3.8857%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (12 samples, 0.02%)</title><rect x="3.6357%" y="885" width="0.0153%" height="15" fill="rgb(226,210,39)" fg:x="2851" fg:w="12"/><text x="3.8857%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.02%)</title><rect x="3.6357%" y="869" width="0.0153%" height="15" fill="rgb(208,219,16)" fg:x="2851" fg:w="12"/><text x="3.8857%" y="879.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (12 samples, 0.02%)</title><rect x="3.6357%" y="853" width="0.0153%" height="15" fill="rgb(216,158,51)" fg:x="2851" fg:w="12"/><text x="3.8857%" y="863.50"></text></g><g><title>chrono::offset::utc::Utc::now (16 samples, 0.02%)</title><rect x="3.6331%" y="933" width="0.0204%" height="15" fill="rgb(233,14,44)" fg:x="2849" fg:w="16"/><text x="3.8831%" y="943.50"></text></g><g><title>&lt;move_core_types::vm_status::StatusType as core::fmt::Display&gt;::fmt (20 samples, 0.03%)</title><rect x="3.6842%" y="613" width="0.0255%" height="15" fill="rgb(237,97,39)" fg:x="2889" fg:w="20"/><text x="3.9342%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (17 samples, 0.02%)</title><rect x="3.6880%" y="597" width="0.0217%" height="15" fill="rgb(218,198,43)" fg:x="2892" fg:w="17"/><text x="3.9380%" y="607.50"></text></g><g><title>core::fmt::write (17 samples, 0.02%)</title><rect x="3.6880%" y="581" width="0.0217%" height="15" fill="rgb(231,104,20)" fg:x="2892" fg:w="17"/><text x="3.9380%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (15 samples, 0.02%)</title><rect x="3.6905%" y="565" width="0.0191%" height="15" fill="rgb(254,36,13)" fg:x="2894" fg:w="15"/><text x="3.9405%" y="575.50"></text></g><g><title>alloc::fmt::format (35 samples, 0.04%)</title><rect x="3.6676%" y="757" width="0.0446%" height="15" fill="rgb(248,14,50)" fg:x="2876" fg:w="35"/><text x="3.9176%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (35 samples, 0.04%)</title><rect x="3.6676%" y="741" width="0.0446%" height="15" fill="rgb(217,107,29)" fg:x="2876" fg:w="35"/><text x="3.9176%" y="751.50"></text></g><g><title>alloc::fmt::format::{{closure}} (35 samples, 0.04%)</title><rect x="3.6676%" y="725" width="0.0446%" height="15" fill="rgb(251,169,33)" fg:x="2876" fg:w="35"/><text x="3.9176%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (35 samples, 0.04%)</title><rect x="3.6676%" y="709" width="0.0446%" height="15" fill="rgb(217,108,32)" fg:x="2876" fg:w="35"/><text x="3.9176%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (31 samples, 0.04%)</title><rect x="3.6727%" y="693" width="0.0395%" height="15" fill="rgb(219,66,42)" fg:x="2880" fg:w="31"/><text x="3.9227%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (31 samples, 0.04%)</title><rect x="3.6727%" y="677" width="0.0395%" height="15" fill="rgb(206,180,7)" fg:x="2880" fg:w="31"/><text x="3.9227%" y="687.50"></text></g><g><title>core::fmt::write (31 samples, 0.04%)</title><rect x="3.6727%" y="661" width="0.0395%" height="15" fill="rgb(208,226,31)" fg:x="2880" fg:w="31"/><text x="3.9227%" y="671.50"></text></g><g><title>core::fmt::run (29 samples, 0.04%)</title><rect x="3.6752%" y="645" width="0.0370%" height="15" fill="rgb(218,26,49)" fg:x="2882" fg:w="29"/><text x="3.9252%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (29 samples, 0.04%)</title><rect x="3.6752%" y="629" width="0.0370%" height="15" fill="rgb(233,197,48)" fg:x="2882" fg:w="29"/><text x="3.9252%" y="639.50"></text></g><g><title>aptos_logger::aptos_logger::LogEntry::new (191 samples, 0.24%)</title><rect x="3.4865%" y="949" width="0.2436%" height="15" fill="rgb(252,181,51)" fg:x="2734" fg:w="191"/><text x="3.7365%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (60 samples, 0.08%)</title><rect x="3.6535%" y="933" width="0.0765%" height="15" fill="rgb(253,90,19)" fg:x="2865" fg:w="60"/><text x="3.9035%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once (60 samples, 0.08%)</title><rect x="3.6535%" y="917" width="0.0765%" height="15" fill="rgb(215,171,30)" fg:x="2865" fg:w="60"/><text x="3.9035%" y="927.50"></text></g><g><title>alloc::fmt::format (60 samples, 0.08%)</title><rect x="3.6535%" y="901" width="0.0765%" height="15" fill="rgb(214,222,9)" fg:x="2865" fg:w="60"/><text x="3.9035%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (60 samples, 0.08%)</title><rect x="3.6535%" y="885" width="0.0765%" height="15" fill="rgb(223,3,22)" fg:x="2865" fg:w="60"/><text x="3.9035%" y="895.50"></text></g><g><title>alloc::fmt::format::{{closure}} (60 samples, 0.08%)</title><rect x="3.6535%" y="869" width="0.0765%" height="15" fill="rgb(225,196,46)" fg:x="2865" fg:w="60"/><text x="3.9035%" y="879.50"></text></g><g><title>alloc::fmt::format::format_inner (60 samples, 0.08%)</title><rect x="3.6535%" y="853" width="0.0765%" height="15" fill="rgb(209,110,37)" fg:x="2865" fg:w="60"/><text x="3.9035%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (56 samples, 0.07%)</title><rect x="3.6586%" y="837" width="0.0714%" height="15" fill="rgb(249,89,12)" fg:x="2869" fg:w="56"/><text x="3.9086%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (56 samples, 0.07%)</title><rect x="3.6586%" y="821" width="0.0714%" height="15" fill="rgb(226,27,33)" fg:x="2869" fg:w="56"/><text x="3.9086%" y="831.50"></text></g><g><title>core::fmt::write (55 samples, 0.07%)</title><rect x="3.6599%" y="805" width="0.0701%" height="15" fill="rgb(213,82,22)" fg:x="2870" fg:w="55"/><text x="3.9099%" y="815.50"></text></g><g><title>core::fmt::rt::Argument::fmt (51 samples, 0.07%)</title><rect x="3.6650%" y="789" width="0.0650%" height="15" fill="rgb(248,140,0)" fg:x="2874" fg:w="51"/><text x="3.9150%" y="799.50"></text></g><g><title>&lt;move_core_types::vm_status::VMStatus as core::fmt::Display&gt;::fmt (51 samples, 0.07%)</title><rect x="3.6650%" y="773" width="0.0650%" height="15" fill="rgb(228,106,3)" fg:x="2874" fg:w="51"/><text x="3.9150%" y="783.50"></text></g><g><title>core::fmt::Formatter::write_fmt (14 samples, 0.02%)</title><rect x="3.7122%" y="757" width="0.0179%" height="15" fill="rgb(209,23,37)" fg:x="2911" fg:w="14"/><text x="3.9622%" y="767.50"></text></g><g><title>core::fmt::write (14 samples, 0.02%)</title><rect x="3.7122%" y="741" width="0.0179%" height="15" fill="rgb(241,93,50)" fg:x="2911" fg:w="14"/><text x="3.9622%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (9 samples, 0.01%)</title><rect x="3.7186%" y="725" width="0.0115%" height="15" fill="rgb(253,46,43)" fg:x="2916" fg:w="9"/><text x="3.9686%" y="735.50"></text></g><g><title>&lt;aptos_logger::aptos_logger::AptosData as aptos_logger::logger::Logger&gt;::record (233 samples, 0.30%)</title><rect x="3.4380%" y="965" width="0.2971%" height="15" fill="rgb(226,206,43)" fg:x="2696" fg:w="233"/><text x="3.6880%" y="975.50"></text></g><g><title>aptos_logger::event::Event::dispatch (238 samples, 0.30%)</title><rect x="3.4329%" y="997" width="0.3035%" height="15" fill="rgb(217,54,7)" fg:x="2692" fg:w="238"/><text x="3.6829%" y="1007.50"></text></g><g><title>aptos_logger::logger::dispatch (234 samples, 0.30%)</title><rect x="3.4380%" y="981" width="0.2984%" height="15" fill="rgb(223,5,52)" fg:x="2696" fg:w="234"/><text x="3.6880%" y="991.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasParameters as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="3.7441%" y="981" width="0.0102%" height="15" fill="rgb(206,52,46)" fg:x="2936" fg:w="8"/><text x="3.9941%" y="991.50"></text></g><g><title>&lt;aptos_gas::instr::InstructionGasParameters as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="3.7441%" y="965" width="0.0102%" height="15" fill="rgb(253,136,11)" fg:x="2936" fg:w="8"/><text x="3.9941%" y="975.50"></text></g><g><title>&lt;move_core_types::gas_algebra::GasQuantity&lt;U&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="3.7441%" y="949" width="0.0102%" height="15" fill="rgb(208,106,33)" fg:x="2936" fg:w="8"/><text x="3.9941%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="3.7543%" y="853" width="0.0115%" height="15" fill="rgb(206,54,4)" fg:x="2944" fg:w="9"/><text x="4.0043%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="3.7543%" y="837" width="0.0115%" height="15" fill="rgb(213,3,15)" fg:x="2944" fg:w="9"/><text x="4.0043%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.03%)</title><rect x="3.7543%" y="869" width="0.0255%" height="15" fill="rgb(252,211,39)" fg:x="2944" fg:w="20"/><text x="4.0043%" y="879.50"></text></g><g><title>core::alloc::layout::Layout::for_value_raw (11 samples, 0.01%)</title><rect x="3.7658%" y="853" width="0.0140%" height="15" fill="rgb(223,6,36)" fg:x="2953" fg:w="11"/><text x="4.0158%" y="863.50"></text></g><g><title>core::mem::size_of_val_raw (11 samples, 0.01%)</title><rect x="3.7658%" y="837" width="0.0140%" height="15" fill="rgb(252,169,45)" fg:x="2953" fg:w="11"/><text x="4.0158%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.05%)</title><rect x="3.7543%" y="981" width="0.0523%" height="15" fill="rgb(212,48,26)" fg:x="2944" fg:w="41"/><text x="4.0043%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (41 samples, 0.05%)</title><rect x="3.7543%" y="965" width="0.0523%" height="15" fill="rgb(251,102,48)" fg:x="2944" fg:w="41"/><text x="4.0043%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (41 samples, 0.05%)</title><rect x="3.7543%" y="949" width="0.0523%" height="15" fill="rgb(243,208,16)" fg:x="2944" fg:w="41"/><text x="4.0043%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (41 samples, 0.05%)</title><rect x="3.7543%" y="933" width="0.0523%" height="15" fill="rgb(219,96,24)" fg:x="2944" fg:w="41"/><text x="4.0043%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (41 samples, 0.05%)</title><rect x="3.7543%" y="917" width="0.0523%" height="15" fill="rgb(219,33,29)" fg:x="2944" fg:w="41"/><text x="4.0043%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt; (41 samples, 0.05%)</title><rect x="3.7543%" y="901" width="0.0523%" height="15" fill="rgb(223,176,5)" fg:x="2944" fg:w="41"/><text x="4.0043%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt; (41 samples, 0.05%)</title><rect x="3.7543%" y="885" width="0.0523%" height="15" fill="rgb(228,140,14)" fg:x="2944" fg:w="41"/><text x="4.0043%" y="895.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::check_transaction_format (17 samples, 0.02%)</title><rect x="3.8066%" y="965" width="0.0217%" height="15" fill="rgb(217,179,31)" fg:x="2985" fg:w="17"/><text x="4.0566%" y="975.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::contains_duplicate_signers (14 samples, 0.02%)</title><rect x="3.8104%" y="949" width="0.0179%" height="15" fill="rgb(230,9,30)" fg:x="2988" fg:w="14"/><text x="4.0604%" y="959.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::check_gas (18 samples, 0.02%)</title><rect x="3.8334%" y="933" width="0.0230%" height="15" fill="rgb(230,136,20)" fg:x="3006" fg:w="18"/><text x="4.0834%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveValue&gt; (16 samples, 0.02%)</title><rect x="3.8856%" y="869" width="0.0204%" height="15" fill="rgb(215,210,22)" fg:x="3047" fg:w="16"/><text x="4.1356%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.04%)</title><rect x="3.8678%" y="901" width="0.0446%" height="15" fill="rgb(218,43,5)" fg:x="3033" fg:w="35"/><text x="4.1178%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveValue]&gt; (35 samples, 0.04%)</title><rect x="3.8678%" y="885" width="0.0446%" height="15" fill="rgb(216,11,5)" fg:x="3033" fg:w="35"/><text x="4.1178%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveValue&gt;&gt; (36 samples, 0.05%)</title><rect x="3.8678%" y="917" width="0.0459%" height="15" fill="rgb(209,82,29)" fg:x="3033" fg:w="36"/><text x="4.1178%" y="927.50"></text></g><g><title>move_core_types::value::MoveValue::vector_u8 (8 samples, 0.01%)</title><rect x="3.9175%" y="917" width="0.0102%" height="15" fill="rgb(244,115,12)" fg:x="3072" fg:w="8"/><text x="4.1675%" y="927.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (23 samples, 0.03%)</title><rect x="3.9468%" y="661" width="0.0293%" height="15" fill="rgb(222,82,18)" fg:x="3095" fg:w="23"/><text x="4.1968%" y="671.50"></text></g><g><title>&lt;move_core_types::value::MoveValue as serde::ser::Serialize&gt;::serialize (23 samples, 0.03%)</title><rect x="3.9468%" y="645" width="0.0293%" height="15" fill="rgb(249,227,8)" fg:x="3095" fg:w="23"/><text x="4.1968%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.01%)</title><rect x="3.9634%" y="629" width="0.0128%" height="15" fill="rgb(253,141,45)" fg:x="3108" fg:w="10"/><text x="4.2134%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="3.9634%" y="613" width="0.0128%" height="15" fill="rgb(234,184,4)" fg:x="3108" fg:w="10"/><text x="4.2134%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="3.9647%" y="597" width="0.0115%" height="15" fill="rgb(218,194,23)" fg:x="3109" fg:w="9"/><text x="4.2147%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.01%)</title><rect x="3.9647%" y="581" width="0.0115%" height="15" fill="rgb(235,66,41)" fg:x="3109" fg:w="9"/><text x="4.2147%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.01%)</title><rect x="3.9647%" y="565" width="0.0115%" height="15" fill="rgb(245,217,1)" fg:x="3109" fg:w="9"/><text x="4.2147%" y="575.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.01%)</title><rect x="3.9647%" y="549" width="0.0115%" height="15" fill="rgb(229,91,1)" fg:x="3109" fg:w="9"/><text x="4.2147%" y="559.50"></text></g><g><title>move_core_types::value::serialize_values (53 samples, 0.07%)</title><rect x="3.9277%" y="917" width="0.0676%" height="15" fill="rgb(207,101,30)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (53 samples, 0.07%)</title><rect x="3.9277%" y="901" width="0.0676%" height="15" fill="rgb(223,82,49)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (53 samples, 0.07%)</title><rect x="3.9277%" y="885" width="0.0676%" height="15" fill="rgb(218,167,17)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (53 samples, 0.07%)</title><rect x="3.9277%" y="869" width="0.0676%" height="15" fill="rgb(208,103,14)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (53 samples, 0.07%)</title><rect x="3.9277%" y="853" width="0.0676%" height="15" fill="rgb(238,20,8)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (53 samples, 0.07%)</title><rect x="3.9277%" y="837" width="0.0676%" height="15" fill="rgb(218,80,54)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (53 samples, 0.07%)</title><rect x="3.9277%" y="821" width="0.0676%" height="15" fill="rgb(240,144,17)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (53 samples, 0.07%)</title><rect x="3.9277%" y="805" width="0.0676%" height="15" fill="rgb(245,27,50)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (53 samples, 0.07%)</title><rect x="3.9277%" y="789" width="0.0676%" height="15" fill="rgb(251,51,7)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (53 samples, 0.07%)</title><rect x="3.9277%" y="773" width="0.0676%" height="15" fill="rgb(245,217,29)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (53 samples, 0.07%)</title><rect x="3.9277%" y="757" width="0.0676%" height="15" fill="rgb(221,176,29)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="767.50"></text></g><g><title>move_core_types::value::serialize_values::{{closure}} (53 samples, 0.07%)</title><rect x="3.9277%" y="741" width="0.0676%" height="15" fill="rgb(212,180,24)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="751.50"></text></g><g><title>move_core_types::value::MoveValue::simple_serialize (53 samples, 0.07%)</title><rect x="3.9277%" y="725" width="0.0676%" height="15" fill="rgb(254,24,2)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="735.50"></text></g><g><title>bcs::ser::to_bytes (53 samples, 0.07%)</title><rect x="3.9277%" y="709" width="0.0676%" height="15" fill="rgb(230,100,2)" fg:x="3080" fg:w="53"/><text x="4.1777%" y="719.50"></text></g><g><title>bcs::ser::serialize_into (52 samples, 0.07%)</title><rect x="3.9290%" y="693" width="0.0663%" height="15" fill="rgb(219,142,25)" fg:x="3081" fg:w="52"/><text x="4.1790%" y="703.50"></text></g><g><title>&lt;move_core_types::value::MoveValue as serde::ser::Serialize&gt;::serialize (51 samples, 0.07%)</title><rect x="3.9303%" y="677" width="0.0650%" height="15" fill="rgb(240,73,43)" fg:x="3082" fg:w="51"/><text x="4.1803%" y="687.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (14 samples, 0.02%)</title><rect x="3.9775%" y="661" width="0.0179%" height="15" fill="rgb(214,114,15)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 0.02%)</title><rect x="3.9775%" y="645" width="0.0179%" height="15" fill="rgb(207,130,4)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (14 samples, 0.02%)</title><rect x="3.9775%" y="629" width="0.0179%" height="15" fill="rgb(221,25,40)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="639.50"></text></g><g><title> 32]&gt;::serialize (14 samples, 0.02%)</title><rect x="3.9775%" y="613" width="0.0179%" height="15" fill="rgb(241,184,7)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="623.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (14 samples, 0.02%)</title><rect x="3.9775%" y="597" width="0.0179%" height="15" fill="rgb(235,159,4)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (14 samples, 0.02%)</title><rect x="3.9775%" y="581" width="0.0179%" height="15" fill="rgb(214,87,48)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="591.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (14 samples, 0.02%)</title><rect x="3.9775%" y="565" width="0.0179%" height="15" fill="rgb(246,198,24)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (14 samples, 0.02%)</title><rect x="3.9775%" y="549" width="0.0179%" height="15" fill="rgb(209,66,40)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.02%)</title><rect x="3.9775%" y="533" width="0.0179%" height="15" fill="rgb(233,147,39)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.02%)</title><rect x="3.9775%" y="517" width="0.0179%" height="15" fill="rgb(231,145,52)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.02%)</title><rect x="3.9775%" y="501" width="0.0179%" height="15" fill="rgb(206,20,26)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.02%)</title><rect x="3.9775%" y="485" width="0.0179%" height="15" fill="rgb(238,220,4)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.02%)</title><rect x="3.9775%" y="469" width="0.0179%" height="15" fill="rgb(252,195,42)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.02%)</title><rect x="3.9775%" y="453" width="0.0179%" height="15" fill="rgb(209,10,6)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.02%)</title><rect x="3.9775%" y="437" width="0.0179%" height="15" fill="rgb(229,3,52)" fg:x="3119" fg:w="14"/><text x="4.2275%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="3.9826%" y="421" width="0.0128%" height="15" fill="rgb(253,49,37)" fg:x="3123" fg:w="10"/><text x="4.2326%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (10 samples, 0.01%)</title><rect x="3.9953%" y="885" width="0.0128%" height="15" fill="rgb(240,103,49)" fg:x="3133" fg:w="10"/><text x="4.2453%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (10 samples, 0.01%)</title><rect x="3.9953%" y="869" width="0.0128%" height="15" fill="rgb(250,182,30)" fg:x="3133" fg:w="10"/><text x="4.2453%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="3.9953%" y="853" width="0.0128%" height="15" fill="rgb(248,8,30)" fg:x="3133" fg:w="10"/><text x="4.2453%" y="863.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name (8 samples, 0.01%)</title><rect x="4.0119%" y="885" width="0.0102%" height="15" fill="rgb(237,120,30)" fg:x="3146" fg:w="8"/><text x="4.2619%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (8 samples, 0.01%)</title><rect x="4.0119%" y="869" width="0.0102%" height="15" fill="rgb(221,146,34)" fg:x="3146" fg:w="8"/><text x="4.2619%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="4.0119%" y="853" width="0.0102%" height="15" fill="rgb(242,55,13)" fg:x="3146" fg:w="8"/><text x="4.2619%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.01%)</title><rect x="4.0119%" y="837" width="0.0102%" height="15" fill="rgb(242,112,31)" fg:x="3146" fg:w="8"/><text x="4.2619%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (8 samples, 0.01%)</title><rect x="4.0119%" y="821" width="0.0102%" height="15" fill="rgb(249,192,27)" fg:x="3146" fg:w="8"/><text x="4.2619%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (8 samples, 0.01%)</title><rect x="4.0119%" y="805" width="0.0102%" height="15" fill="rgb(208,204,44)" fg:x="3146" fg:w="8"/><text x="4.2619%" y="815.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name::{{closure}} (8 samples, 0.01%)</title><rect x="4.0119%" y="789" width="0.0102%" height="15" fill="rgb(208,93,54)" fg:x="3146" fg:w="8"/><text x="4.2619%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (12 samples, 0.02%)</title><rect x="4.0489%" y="613" width="0.0153%" height="15" fill="rgb(242,1,31)" fg:x="3175" fg:w="12"/><text x="4.2989%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="4.0489%" y="597" width="0.0153%" height="15" fill="rgb(241,83,25)" fg:x="3175" fg:w="12"/><text x="4.2989%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.03%)</title><rect x="4.0489%" y="661" width="0.0344%" height="15" fill="rgb(205,169,50)" fg:x="3175" fg:w="27"/><text x="4.2989%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 0.03%)</title><rect x="4.0489%" y="645" width="0.0344%" height="15" fill="rgb(239,186,37)" fg:x="3175" fg:w="27"/><text x="4.2989%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (27 samples, 0.03%)</title><rect x="4.0489%" y="629" width="0.0344%" height="15" fill="rgb(205,221,10)" fg:x="3175" fg:w="27"/><text x="4.2989%" y="639.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (15 samples, 0.02%)</title><rect x="4.0642%" y="613" width="0.0191%" height="15" fill="rgb(218,196,15)" fg:x="3187" fg:w="15"/><text x="4.3142%" y="623.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type (14 samples, 0.02%)</title><rect x="4.0654%" y="597" width="0.0179%" height="15" fill="rgb(218,196,35)" fg:x="3188" fg:w="14"/><text x="4.3154%" y="607.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (14 samples, 0.02%)</title><rect x="4.0654%" y="581" width="0.0179%" height="15" fill="rgb(233,63,24)" fg:x="3188" fg:w="14"/><text x="4.3154%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.05%)</title><rect x="4.0489%" y="709" width="0.0485%" height="15" fill="rgb(225,8,4)" fg:x="3175" fg:w="38"/><text x="4.2989%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (38 samples, 0.05%)</title><rect x="4.0489%" y="693" width="0.0485%" height="15" fill="rgb(234,105,35)" fg:x="3175" fg:w="38"/><text x="4.2989%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (38 samples, 0.05%)</title><rect x="4.0489%" y="677" width="0.0485%" height="15" fill="rgb(236,21,32)" fg:x="3175" fg:w="38"/><text x="4.2989%" y="687.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (11 samples, 0.01%)</title><rect x="4.0833%" y="661" width="0.0140%" height="15" fill="rgb(228,109,6)" fg:x="3202" fg:w="11"/><text x="4.3333%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (39 samples, 0.05%)</title><rect x="4.0489%" y="741" width="0.0497%" height="15" fill="rgb(229,215,31)" fg:x="3175" fg:w="39"/><text x="4.2989%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (39 samples, 0.05%)</title><rect x="4.0489%" y="725" width="0.0497%" height="15" fill="rgb(221,52,54)" fg:x="3175" fg:w="39"/><text x="4.2989%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (52 samples, 0.07%)</title><rect x="4.0374%" y="869" width="0.0663%" height="15" fill="rgb(252,129,43)" fg:x="3166" fg:w="52"/><text x="4.2874%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (52 samples, 0.07%)</title><rect x="4.0374%" y="853" width="0.0663%" height="15" fill="rgb(248,183,27)" fg:x="3166" fg:w="52"/><text x="4.2874%" y="863.50"></text></g><g><title>core::iter::adapters::try_process (52 samples, 0.07%)</title><rect x="4.0374%" y="837" width="0.0663%" height="15" fill="rgb(250,0,22)" fg:x="3166" fg:w="52"/><text x="4.2874%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (48 samples, 0.06%)</title><rect x="4.0425%" y="821" width="0.0612%" height="15" fill="rgb(213,166,10)" fg:x="3170" fg:w="48"/><text x="4.2925%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (48 samples, 0.06%)</title><rect x="4.0425%" y="805" width="0.0612%" height="15" fill="rgb(207,163,36)" fg:x="3170" fg:w="48"/><text x="4.2925%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.06%)</title><rect x="4.0425%" y="789" width="0.0612%" height="15" fill="rgb(208,122,22)" fg:x="3170" fg:w="48"/><text x="4.2925%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (48 samples, 0.06%)</title><rect x="4.0425%" y="773" width="0.0612%" height="15" fill="rgb(207,104,49)" fg:x="3170" fg:w="48"/><text x="4.2925%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (46 samples, 0.06%)</title><rect x="4.0450%" y="757" width="0.0587%" height="15" fill="rgb(248,211,50)" fg:x="3172" fg:w="46"/><text x="4.2950%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,alloc::collections::btree::set::BTreeSet&lt;move_core_types::language_storage::ModuleId&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="4.1101%" y="837" width="0.0102%" height="15" fill="rgb(217,13,45)" fg:x="3223" fg:w="8"/><text x="4.3601%" y="847.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="4.1101%" y="821" width="0.0102%" height="15" fill="rgb(211,216,49)" fg:x="3223" fg:w="8"/><text x="4.3601%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (8 samples, 0.01%)</title><rect x="4.1101%" y="805" width="0.0102%" height="15" fill="rgb(221,58,53)" fg:x="3223" fg:w="8"/><text x="4.3601%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (8 samples, 0.01%)</title><rect x="4.1101%" y="789" width="0.0102%" height="15" fill="rgb(220,112,41)" fg:x="3223" fg:w="8"/><text x="4.3601%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.01%)</title><rect x="4.1101%" y="773" width="0.0102%" height="15" fill="rgb(236,38,28)" fg:x="3223" fg:w="8"/><text x="4.3601%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.01%)</title><rect x="4.1203%" y="821" width="0.0115%" height="15" fill="rgb(227,195,22)" fg:x="3231" fg:w="9"/><text x="4.3703%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.01%)</title><rect x="4.1203%" y="805" width="0.0115%" height="15" fill="rgb(214,55,33)" fg:x="3231" fg:w="9"/><text x="4.3703%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="4.1203%" y="789" width="0.0115%" height="15" fill="rgb(248,80,13)" fg:x="3231" fg:w="9"/><text x="4.3703%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.01%)</title><rect x="4.1203%" y="773" width="0.0115%" height="15" fill="rgb(238,52,6)" fg:x="3231" fg:w="9"/><text x="4.3703%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.01%)</title><rect x="4.1203%" y="757" width="0.0115%" height="15" fill="rgb(224,198,47)" fg:x="3231" fg:w="9"/><text x="4.3703%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (28 samples, 0.04%)</title><rect x="4.1037%" y="869" width="0.0357%" height="15" fill="rgb(233,171,20)" fg:x="3218" fg:w="28"/><text x="4.3537%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (27 samples, 0.03%)</title><rect x="4.1050%" y="853" width="0.0344%" height="15" fill="rgb(241,30,25)" fg:x="3219" fg:w="27"/><text x="4.3550%" y="863.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (15 samples, 0.02%)</title><rect x="4.1203%" y="837" width="0.0191%" height="15" fill="rgb(207,171,38)" fg:x="3231" fg:w="15"/><text x="4.3703%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (10 samples, 0.01%)</title><rect x="4.1458%" y="853" width="0.0128%" height="15" fill="rgb(234,70,1)" fg:x="3251" fg:w="10"/><text x="4.3958%" y="863.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name::{{closure}} (10 samples, 0.01%)</title><rect x="4.1458%" y="837" width="0.0128%" height="15" fill="rgb(232,178,18)" fg:x="3251" fg:w="10"/><text x="4.3958%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.01%)</title><rect x="4.1458%" y="821" width="0.0128%" height="15" fill="rgb(241,78,40)" fg:x="3251" fg:w="10"/><text x="4.3958%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.01%)</title><rect x="4.1458%" y="805" width="0.0128%" height="15" fill="rgb(222,35,25)" fg:x="3251" fg:w="10"/><text x="4.3958%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.01%)</title><rect x="4.1458%" y="789" width="0.0128%" height="15" fill="rgb(207,92,16)" fg:x="3251" fg:w="10"/><text x="4.3958%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.01%)</title><rect x="4.1458%" y="773" width="0.0128%" height="15" fill="rgb(216,59,51)" fg:x="3251" fg:w="10"/><text x="4.3958%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (109 samples, 0.14%)</title><rect x="4.0221%" y="885" width="0.1390%" height="15" fill="rgb(213,80,28)" fg:x="3154" fg:w="109"/><text x="4.2721%" y="895.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (12 samples, 0.02%)</title><rect x="4.1458%" y="869" width="0.0153%" height="15" fill="rgb(220,93,7)" fg:x="3251" fg:w="12"/><text x="4.3958%" y="879.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (16 samples, 0.02%)</title><rect x="4.2095%" y="645" width="0.0204%" height="15" fill="rgb(225,24,44)" fg:x="3301" fg:w="16"/><text x="4.4595%" y="655.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (13 samples, 0.02%)</title><rect x="4.2134%" y="629" width="0.0166%" height="15" fill="rgb(243,74,40)" fg:x="3304" fg:w="13"/><text x="4.4634%" y="639.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (31 samples, 0.04%)</title><rect x="4.1930%" y="741" width="0.0395%" height="15" fill="rgb(228,39,7)" fg:x="3288" fg:w="31"/><text x="4.4430%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.04%)</title><rect x="4.1930%" y="725" width="0.0395%" height="15" fill="rgb(227,79,8)" fg:x="3288" fg:w="31"/><text x="4.4430%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.04%)</title><rect x="4.1930%" y="709" width="0.0395%" height="15" fill="rgb(236,58,11)" fg:x="3288" fg:w="31"/><text x="4.4430%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.04%)</title><rect x="4.1930%" y="693" width="0.0395%" height="15" fill="rgb(249,63,35)" fg:x="3288" fg:w="31"/><text x="4.4430%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (30 samples, 0.04%)</title><rect x="4.1942%" y="677" width="0.0383%" height="15" fill="rgb(252,114,16)" fg:x="3289" fg:w="30"/><text x="4.4442%" y="687.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl::{{closure}} (24 samples, 0.03%)</title><rect x="4.2019%" y="661" width="0.0306%" height="15" fill="rgb(254,151,24)" fg:x="3295" fg:w="24"/><text x="4.4519%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (54 samples, 0.07%)</title><rect x="4.1662%" y="869" width="0.0689%" height="15" fill="rgb(253,54,39)" fg:x="3267" fg:w="54"/><text x="4.4162%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (50 samples, 0.06%)</title><rect x="4.1713%" y="853" width="0.0638%" height="15" fill="rgb(243,25,45)" fg:x="3271" fg:w="50"/><text x="4.4213%" y="863.50"></text></g><g><title>core::iter::adapters::try_process (50 samples, 0.06%)</title><rect x="4.1713%" y="837" width="0.0638%" height="15" fill="rgb(234,134,9)" fg:x="3271" fg:w="50"/><text x="4.4213%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (48 samples, 0.06%)</title><rect x="4.1738%" y="821" width="0.0612%" height="15" fill="rgb(227,166,31)" fg:x="3273" fg:w="48"/><text x="4.4238%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (48 samples, 0.06%)</title><rect x="4.1738%" y="805" width="0.0612%" height="15" fill="rgb(245,143,41)" fg:x="3273" fg:w="48"/><text x="4.4238%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.06%)</title><rect x="4.1738%" y="789" width="0.0612%" height="15" fill="rgb(238,181,32)" fg:x="3273" fg:w="48"/><text x="4.4238%" y="799.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (45 samples, 0.06%)</title><rect x="4.1777%" y="773" width="0.0574%" height="15" fill="rgb(224,113,18)" fg:x="3276" fg:w="45"/><text x="4.4277%" y="783.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (35 samples, 0.04%)</title><rect x="4.1904%" y="757" width="0.0446%" height="15" fill="rgb(240,229,28)" fg:x="3286" fg:w="35"/><text x="4.4404%" y="767.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame (14 samples, 0.02%)</title><rect x="4.2402%" y="837" width="0.0179%" height="15" fill="rgb(250,185,3)" fg:x="3325" fg:w="14"/><text x="4.4902%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;,move_vm_runtime::interpreter::Interpreter::execute_main&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,&amp;aptos_storage_interface::cached_state_view::CachedStateView&gt;&gt;&gt;,move_vm_types::gas::UnmeteredGasMeter&gt;::{{closure}}&gt;&gt; (14 samples, 0.02%)</title><rect x="4.2402%" y="821" width="0.0179%" height="15" fill="rgb(212,59,25)" fg:x="3325" fg:w="14"/><text x="4.4902%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (14 samples, 0.02%)</title><rect x="4.2402%" y="805" width="0.0179%" height="15" fill="rgb(221,87,20)" fg:x="3325" fg:w="14"/><text x="4.4902%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="4.2402%" y="789" width="0.0179%" height="15" fill="rgb(213,74,28)" fg:x="3325" fg:w="14"/><text x="4.4902%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(usize,move_vm_types::values::values_impl::Value)]&gt; (9 samples, 0.01%)</title><rect x="4.2465%" y="773" width="0.0115%" height="15" fill="rgb(224,132,34)" fg:x="3330" fg:w="9"/><text x="4.4965%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,move_vm_types::values::values_impl::Value)&gt; (9 samples, 0.01%)</title><rect x="4.2465%" y="757" width="0.0115%" height="15" fill="rgb(222,101,24)" fg:x="3330" fg:w="9"/><text x="4.4965%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (9 samples, 0.01%)</title><rect x="4.2465%" y="741" width="0.0115%" height="15" fill="rgb(254,142,4)" fg:x="3330" fg:w="9"/><text x="4.4965%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (13 samples, 0.02%)</title><rect x="4.2695%" y="821" width="0.0166%" height="15" fill="rgb(230,229,49)" fg:x="3348" fg:w="13"/><text x="4.5195%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="4.2733%" y="805" width="0.0128%" height="15" fill="rgb(238,70,47)" fg:x="3351" fg:w="10"/><text x="4.5233%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (10 samples, 0.01%)</title><rect x="4.2733%" y="789" width="0.0128%" height="15" fill="rgb(231,160,17)" fg:x="3351" fg:w="10"/><text x="4.5233%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (10 samples, 0.01%)</title><rect x="4.2733%" y="773" width="0.0128%" height="15" fill="rgb(218,68,53)" fg:x="3351" fg:w="10"/><text x="4.5233%" y="783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="4.2861%" y="789" width="0.0242%" height="15" fill="rgb(236,111,10)" fg:x="3361" fg:w="19"/><text x="4.5361%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="4.2950%" y="773" width="0.0153%" height="15" fill="rgb(224,34,41)" fg:x="3368" fg:w="12"/><text x="4.5450%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="4.2950%" y="757" width="0.0153%" height="15" fill="rgb(241,118,19)" fg:x="3368" fg:w="12"/><text x="4.5450%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (12 samples, 0.02%)</title><rect x="4.2950%" y="741" width="0.0153%" height="15" fill="rgb(238,129,25)" fg:x="3368" fg:w="12"/><text x="4.5450%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (10 samples, 0.01%)</title><rect x="4.2975%" y="725" width="0.0128%" height="15" fill="rgb(238,22,31)" fg:x="3370" fg:w="10"/><text x="4.5475%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="4.2975%" y="709" width="0.0128%" height="15" fill="rgb(222,174,48)" fg:x="3370" fg:w="10"/><text x="4.5475%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="4.2975%" y="693" width="0.0128%" height="15" fill="rgb(206,152,40)" fg:x="3370" fg:w="10"/><text x="4.5475%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="4.2975%" y="677" width="0.0128%" height="15" fill="rgb(218,99,54)" fg:x="3370" fg:w="10"/><text x="4.5475%" y="687.50"></text></g><g><title>sdallocx (9 samples, 0.01%)</title><rect x="4.2988%" y="661" width="0.0115%" height="15" fill="rgb(220,174,26)" fg:x="3371" fg:w="9"/><text x="4.5488%" y="671.50"></text></g><g><title>isfree (9 samples, 0.01%)</title><rect x="4.2988%" y="645" width="0.0115%" height="15" fill="rgb(245,116,9)" fg:x="3371" fg:w="9"/><text x="4.5488%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::interpreter::Frame&gt; (51 samples, 0.07%)</title><rect x="4.2644%" y="837" width="0.0650%" height="15" fill="rgb(209,72,35)" fg:x="3344" fg:w="51"/><text x="4.5144%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (34 samples, 0.04%)</title><rect x="4.2861%" y="821" width="0.0434%" height="15" fill="rgb(226,126,21)" fg:x="3361" fg:w="34"/><text x="4.5361%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (34 samples, 0.04%)</title><rect x="4.2861%" y="805" width="0.0434%" height="15" fill="rgb(227,192,1)" fg:x="3361" fg:w="34"/><text x="4.5361%" y="815.50"></text></g><g><title>sdallocx (10 samples, 0.01%)</title><rect x="4.3167%" y="789" width="0.0128%" height="15" fill="rgb(237,180,29)" fg:x="3385" fg:w="10"/><text x="4.5667%" y="799.50"></text></g><g><title>isfree (10 samples, 0.01%)</title><rect x="4.3167%" y="773" width="0.0128%" height="15" fill="rgb(230,197,35)" fg:x="3385" fg:w="10"/><text x="4.5667%" y="783.50"></text></g><g><title>isdalloct (10 samples, 0.01%)</title><rect x="4.3167%" y="757" width="0.0128%" height="15" fill="rgb(246,193,31)" fg:x="3385" fg:w="10"/><text x="4.5667%" y="767.50"></text></g><g><title>arena_sdalloc (10 samples, 0.01%)</title><rect x="4.3167%" y="741" width="0.0128%" height="15" fill="rgb(241,36,4)" fg:x="3385" fg:w="10"/><text x="4.5667%" y="751.50"></text></g><g><title>tcache_dalloc_small (10 samples, 0.01%)</title><rect x="4.3167%" y="725" width="0.0128%" height="15" fill="rgb(241,130,17)" fg:x="3385" fg:w="10"/><text x="4.5667%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (55 samples, 0.07%)</title><rect x="4.3294%" y="837" width="0.0701%" height="15" fill="rgb(206,137,32)" fg:x="3395" fg:w="55"/><text x="4.5794%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (8 samples, 0.01%)</title><rect x="4.4059%" y="821" width="0.0102%" height="15" fill="rgb(237,228,51)" fg:x="3455" fg:w="8"/><text x="4.6559%" y="831.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::push (10 samples, 0.01%)</title><rect x="4.4059%" y="837" width="0.0128%" height="15" fill="rgb(243,6,42)" fg:x="3455" fg:w="10"/><text x="4.6559%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (9 samples, 0.01%)</title><rect x="4.6253%" y="805" width="0.0115%" height="15" fill="rgb(251,74,28)" fg:x="3627" fg:w="9"/><text x="4.8753%" y="815.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="4.7235%" y="789" width="0.0268%" height="15" fill="rgb(218,20,49)" fg:x="3704" fg:w="21"/><text x="4.9735%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (10 samples, 0.01%)</title><rect x="4.7528%" y="789" width="0.0128%" height="15" fill="rgb(238,28,14)" fg:x="3727" fg:w="10"/><text x="5.0028%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.01%)</title><rect x="4.7528%" y="773" width="0.0128%" height="15" fill="rgb(229,40,46)" fg:x="3727" fg:w="10"/><text x="5.0028%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="4.7528%" y="757" width="0.0128%" height="15" fill="rgb(244,195,20)" fg:x="3727" fg:w="10"/><text x="5.0028%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="4.7528%" y="741" width="0.0128%" height="15" fill="rgb(253,56,35)" fg:x="3727" fg:w="10"/><text x="5.0028%" y="751.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="4.7528%" y="725" width="0.0128%" height="15" fill="rgb(210,149,44)" fg:x="3727" fg:w="10"/><text x="5.0028%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (10 samples, 0.01%)</title><rect x="4.7706%" y="789" width="0.0128%" height="15" fill="rgb(240,135,12)" fg:x="3741" fg:w="10"/><text x="5.0206%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (8 samples, 0.01%)</title><rect x="4.7834%" y="789" width="0.0102%" height="15" fill="rgb(251,24,50)" fg:x="3751" fg:w="8"/><text x="5.0334%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (41 samples, 0.05%)</title><rect x="4.7936%" y="789" width="0.0523%" height="15" fill="rgb(243,200,47)" fg:x="3759" fg:w="41"/><text x="5.0436%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.01%)</title><rect x="4.8331%" y="773" width="0.0128%" height="15" fill="rgb(224,166,26)" fg:x="3790" fg:w="10"/><text x="5.0831%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10 samples, 0.01%)</title><rect x="4.8331%" y="757" width="0.0128%" height="15" fill="rgb(233,0,47)" fg:x="3790" fg:w="10"/><text x="5.0831%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="4.8331%" y="741" width="0.0128%" height="15" fill="rgb(253,80,5)" fg:x="3790" fg:w="10"/><text x="5.0831%" y="751.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (27 samples, 0.03%)</title><rect x="4.8548%" y="773" width="0.0344%" height="15" fill="rgb(214,133,25)" fg:x="3807" fg:w="27"/><text x="5.1048%" y="783.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (27 samples, 0.03%)</title><rect x="4.8548%" y="757" width="0.0344%" height="15" fill="rgb(209,27,14)" fg:x="3807" fg:w="27"/><text x="5.1048%" y="767.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (27 samples, 0.03%)</title><rect x="4.8548%" y="741" width="0.0344%" height="15" fill="rgb(219,102,51)" fg:x="3807" fg:w="27"/><text x="5.1048%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (27 samples, 0.03%)</title><rect x="4.8548%" y="725" width="0.0344%" height="15" fill="rgb(237,18,16)" fg:x="3807" fg:w="27"/><text x="5.1048%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (27 samples, 0.03%)</title><rect x="4.8548%" y="709" width="0.0344%" height="15" fill="rgb(241,85,17)" fg:x="3807" fg:w="27"/><text x="5.1048%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (44 samples, 0.06%)</title><rect x="4.8459%" y="789" width="0.0561%" height="15" fill="rgb(236,90,42)" fg:x="3800" fg:w="44"/><text x="5.0959%" y="799.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (10 samples, 0.01%)</title><rect x="4.8892%" y="773" width="0.0128%" height="15" fill="rgb(249,57,21)" fg:x="3834" fg:w="10"/><text x="5.1392%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_to_struct (14 samples, 0.02%)</title><rect x="4.9020%" y="789" width="0.0179%" height="15" fill="rgb(243,12,36)" fg:x="3844" fg:w="14"/><text x="5.1520%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.02%)</title><rect x="4.9020%" y="773" width="0.0179%" height="15" fill="rgb(253,128,47)" fg:x="3844" fg:w="14"/><text x="5.1520%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="4.9020%" y="757" width="0.0179%" height="15" fill="rgb(207,33,20)" fg:x="3844" fg:w="14"/><text x="5.1520%" y="767.50"></text></g><g><title>core::iter::adapters::try_process (14 samples, 0.02%)</title><rect x="4.9020%" y="741" width="0.0179%" height="15" fill="rgb(233,215,35)" fg:x="3844" fg:w="14"/><text x="5.1520%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (14 samples, 0.02%)</title><rect x="4.9020%" y="725" width="0.0179%" height="15" fill="rgb(249,188,52)" fg:x="3844" fg:w="14"/><text x="5.1520%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.02%)</title><rect x="4.9020%" y="709" width="0.0179%" height="15" fill="rgb(225,12,32)" fg:x="3844" fg:w="14"/><text x="5.1520%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="4.9020%" y="693" width="0.0179%" height="15" fill="rgb(247,98,14)" fg:x="3844" fg:w="14"/><text x="5.1520%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="4.9045%" y="677" width="0.0153%" height="15" fill="rgb(247,219,48)" fg:x="3846" fg:w="12"/><text x="5.1545%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="4.9045%" y="661" width="0.0153%" height="15" fill="rgb(253,60,48)" fg:x="3846" fg:w="12"/><text x="5.1545%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_field_type (25 samples, 0.03%)</title><rect x="4.9199%" y="789" width="0.0319%" height="15" fill="rgb(245,15,52)" fg:x="3858" fg:w="25"/><text x="5.1699%" y="799.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="4.9326%" y="773" width="0.0191%" height="15" fill="rgb(220,133,28)" fg:x="3868" fg:w="15"/><text x="5.1826%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field (20 samples, 0.03%)</title><rect x="4.9556%" y="789" width="0.0255%" height="15" fill="rgb(217,180,4)" fg:x="3886" fg:w="20"/><text x="5.2056%" y="799.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (8 samples, 0.01%)</title><rect x="4.9709%" y="773" width="0.0102%" height="15" fill="rgb(251,24,1)" fg:x="3898" fg:w="8"/><text x="5.2209%" y="783.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (8 samples, 0.01%)</title><rect x="4.9709%" y="757" width="0.0102%" height="15" fill="rgb(212,185,49)" fg:x="3898" fg:w="8"/><text x="5.2209%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.01%)</title><rect x="4.9811%" y="773" width="0.0102%" height="15" fill="rgb(215,175,22)" fg:x="3906" fg:w="8"/><text x="5.2311%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="4.9811%" y="757" width="0.0102%" height="15" fill="rgb(250,205,14)" fg:x="3906" fg:w="8"/><text x="5.2311%" y="767.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.01%)</title><rect x="4.9811%" y="741" width="0.0102%" height="15" fill="rgb(225,211,22)" fg:x="3906" fg:w="8"/><text x="5.2311%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (8 samples, 0.01%)</title><rect x="4.9811%" y="725" width="0.0102%" height="15" fill="rgb(251,179,42)" fg:x="3906" fg:w="8"/><text x="5.2311%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.01%)</title><rect x="4.9811%" y="709" width="0.0102%" height="15" fill="rgb(208,216,51)" fg:x="3906" fg:w="8"/><text x="5.2311%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="4.9811%" y="693" width="0.0102%" height="15" fill="rgb(235,36,11)" fg:x="3906" fg:w="8"/><text x="5.2311%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (16 samples, 0.02%)</title><rect x="4.9811%" y="789" width="0.0204%" height="15" fill="rgb(213,189,28)" fg:x="3906" fg:w="16"/><text x="5.2311%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (8 samples, 0.01%)</title><rect x="4.9913%" y="773" width="0.0102%" height="15" fill="rgb(227,203,42)" fg:x="3914" fg:w="8"/><text x="5.2413%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (297 samples, 0.38%)</title><rect x="4.6482%" y="805" width="0.3787%" height="15" fill="rgb(244,72,36)" fg:x="3645" fg:w="297"/><text x="4.8982%" y="815.50"></text></g><g><title>sdallocx (11 samples, 0.01%)</title><rect x="5.0129%" y="789" width="0.0140%" height="15" fill="rgb(213,53,17)" fg:x="3931" fg:w="11"/><text x="5.2629%" y="799.50"></text></g><g><title>isfree (11 samples, 0.01%)</title><rect x="5.0129%" y="773" width="0.0140%" height="15" fill="rgb(207,167,3)" fg:x="3931" fg:w="11"/><text x="5.2629%" y="783.50"></text></g><g><title>isdalloct (11 samples, 0.01%)</title><rect x="5.0129%" y="757" width="0.0140%" height="15" fill="rgb(216,98,30)" fg:x="3931" fg:w="11"/><text x="5.2629%" y="767.50"></text></g><g><title>arena_sdalloc (11 samples, 0.01%)</title><rect x="5.0129%" y="741" width="0.0140%" height="15" fill="rgb(236,123,15)" fg:x="3931" fg:w="11"/><text x="5.2629%" y="751.50"></text></g><g><title>tcache_dalloc_small (11 samples, 0.01%)</title><rect x="5.0129%" y="725" width="0.0140%" height="15" fill="rgb(248,81,50)" fg:x="3931" fg:w="11"/><text x="5.2629%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (10 samples, 0.01%)</title><rect x="5.1035%" y="789" width="0.0128%" height="15" fill="rgb(214,120,4)" fg:x="4002" fg:w="10"/><text x="5.3535%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (82 samples, 0.10%)</title><rect x="5.0270%" y="805" width="0.1046%" height="15" fill="rgb(208,179,34)" fg:x="3942" fg:w="82"/><text x="5.2770%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::is_invalid (10 samples, 0.01%)</title><rect x="5.1188%" y="789" width="0.0128%" height="15" fill="rgb(227,140,7)" fg:x="4014" fg:w="10"/><text x="5.3688%" y="799.50"></text></g><g><title>core::fmt::Arguments::new_v1 (10 samples, 0.01%)</title><rect x="5.1188%" y="773" width="0.0128%" height="15" fill="rgb(214,22,6)" fg:x="4014" fg:w="10"/><text x="5.3688%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (9 samples, 0.01%)</title><rect x="5.1417%" y="773" width="0.0115%" height="15" fill="rgb(207,137,27)" fg:x="4032" fg:w="9"/><text x="5.3917%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool (19 samples, 0.02%)</title><rect x="5.1315%" y="805" width="0.0242%" height="15" fill="rgb(210,8,46)" fg:x="4024" fg:w="19"/><text x="5.3815%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (19 samples, 0.02%)</title><rect x="5.1315%" y="789" width="0.0242%" height="15" fill="rgb(240,16,54)" fg:x="4024" fg:w="19"/><text x="5.3815%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="5.1558%" y="757" width="0.0128%" height="15" fill="rgb(211,209,29)" fg:x="4043" fg:w="10"/><text x="5.4058%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int::{{closure}} (13 samples, 0.02%)</title><rect x="5.1558%" y="773" width="0.0166%" height="15" fill="rgb(226,228,24)" fg:x="4043" fg:w="13"/><text x="5.4058%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (8 samples, 0.01%)</title><rect x="5.1723%" y="773" width="0.0102%" height="15" fill="rgb(222,84,9)" fg:x="4056" fg:w="8"/><text x="5.4223%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (23 samples, 0.03%)</title><rect x="5.1558%" y="805" width="0.0293%" height="15" fill="rgb(234,203,30)" fg:x="4043" fg:w="23"/><text x="5.4058%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (23 samples, 0.03%)</title><rect x="5.1558%" y="789" width="0.0293%" height="15" fill="rgb(238,109,14)" fg:x="4043" fg:w="23"/><text x="5.4058%" y="799.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (11 samples, 0.01%)</title><rect x="5.2183%" y="245" width="0.0140%" height="15" fill="rgb(233,206,34)" fg:x="4092" fg:w="11"/><text x="5.4683%" y="255.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (29 samples, 0.04%)</title><rect x="5.2106%" y="597" width="0.0370%" height="15" fill="rgb(220,167,47)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="607.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (29 samples, 0.04%)</title><rect x="5.2106%" y="581" width="0.0370%" height="15" fill="rgb(238,105,10)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (29 samples, 0.04%)</title><rect x="5.2106%" y="565" width="0.0370%" height="15" fill="rgb(213,227,17)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="575.50"></text></g><g><title> 32]&gt;::serialize (29 samples, 0.04%)</title><rect x="5.2106%" y="549" width="0.0370%" height="15" fill="rgb(217,132,38)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="559.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (29 samples, 0.04%)</title><rect x="5.2106%" y="533" width="0.0370%" height="15" fill="rgb(242,146,4)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (29 samples, 0.04%)</title><rect x="5.2106%" y="517" width="0.0370%" height="15" fill="rgb(212,61,9)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (29 samples, 0.04%)</title><rect x="5.2106%" y="501" width="0.0370%" height="15" fill="rgb(247,126,22)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (29 samples, 0.04%)</title><rect x="5.2106%" y="485" width="0.0370%" height="15" fill="rgb(220,196,2)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (29 samples, 0.04%)</title><rect x="5.2106%" y="469" width="0.0370%" height="15" fill="rgb(208,46,4)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (29 samples, 0.04%)</title><rect x="5.2106%" y="453" width="0.0370%" height="15" fill="rgb(252,104,46)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (29 samples, 0.04%)</title><rect x="5.2106%" y="437" width="0.0370%" height="15" fill="rgb(237,152,48)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (29 samples, 0.04%)</title><rect x="5.2106%" y="421" width="0.0370%" height="15" fill="rgb(221,59,37)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (29 samples, 0.04%)</title><rect x="5.2106%" y="405" width="0.0370%" height="15" fill="rgb(209,202,51)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.04%)</title><rect x="5.2106%" y="389" width="0.0370%" height="15" fill="rgb(228,81,30)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 0.04%)</title><rect x="5.2106%" y="373" width="0.0370%" height="15" fill="rgb(227,42,39)" fg:x="4086" fg:w="29"/><text x="5.4606%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.03%)</title><rect x="5.2144%" y="357" width="0.0332%" height="15" fill="rgb(221,26,2)" fg:x="4089" fg:w="26"/><text x="5.4644%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (26 samples, 0.03%)</title><rect x="5.2144%" y="341" width="0.0332%" height="15" fill="rgb(254,61,31)" fg:x="4089" fg:w="26"/><text x="5.4644%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (26 samples, 0.03%)</title><rect x="5.2144%" y="325" width="0.0332%" height="15" fill="rgb(222,173,38)" fg:x="4089" fg:w="26"/><text x="5.4644%" y="335.50"></text></g><g><title>alloc::alloc::realloc (26 samples, 0.03%)</title><rect x="5.2144%" y="309" width="0.0332%" height="15" fill="rgb(218,50,12)" fg:x="4089" fg:w="26"/><text x="5.4644%" y="319.50"></text></g><g><title>rallocx (23 samples, 0.03%)</title><rect x="5.2183%" y="293" width="0.0293%" height="15" fill="rgb(223,88,40)" fg:x="4092" fg:w="23"/><text x="5.4683%" y="303.50"></text></g><g><title>iralloct (23 samples, 0.03%)</title><rect x="5.2183%" y="277" width="0.0293%" height="15" fill="rgb(237,54,19)" fg:x="4092" fg:w="23"/><text x="5.4683%" y="287.50"></text></g><g><title>_rjem_je_arena_ralloc (23 samples, 0.03%)</title><rect x="5.2183%" y="261" width="0.0293%" height="15" fill="rgb(251,129,25)" fg:x="4092" fg:w="23"/><text x="5.4683%" y="271.50"></text></g><g><title>isdalloct (11 samples, 0.01%)</title><rect x="5.2336%" y="245" width="0.0140%" height="15" fill="rgb(238,97,19)" fg:x="4104" fg:w="11"/><text x="5.4836%" y="255.50"></text></g><g><title>arena_sdalloc (11 samples, 0.01%)</title><rect x="5.2336%" y="229" width="0.0140%" height="15" fill="rgb(240,169,18)" fg:x="4104" fg:w="11"/><text x="5.4836%" y="239.50"></text></g><g><title>tcache_dalloc_small (11 samples, 0.01%)</title><rect x="5.2336%" y="213" width="0.0140%" height="15" fill="rgb(230,187,49)" fg:x="4104" fg:w="11"/><text x="5.4836%" y="223.50"></text></g><g><title>bcs::ser::to_bytes (46 samples, 0.06%)</title><rect x="5.2017%" y="693" width="0.0587%" height="15" fill="rgb(209,44,26)" fg:x="4079" fg:w="46"/><text x="5.4517%" y="703.50"></text></g><g><title>bcs::ser::serialize_into (46 samples, 0.06%)</title><rect x="5.2017%" y="677" width="0.0587%" height="15" fill="rgb(244,0,6)" fg:x="4079" fg:w="46"/><text x="5.4517%" y="687.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (46 samples, 0.06%)</title><rect x="5.2017%" y="661" width="0.0587%" height="15" fill="rgb(248,18,21)" fg:x="4079" fg:w="46"/><text x="5.4517%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (46 samples, 0.06%)</title><rect x="5.2017%" y="645" width="0.0587%" height="15" fill="rgb(245,180,19)" fg:x="4079" fg:w="46"/><text x="5.4517%" y="655.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (44 samples, 0.06%)</title><rect x="5.2042%" y="629" width="0.0561%" height="15" fill="rgb(252,118,36)" fg:x="4081" fg:w="44"/><text x="5.4542%" y="639.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (44 samples, 0.06%)</title><rect x="5.2042%" y="613" width="0.0561%" height="15" fill="rgb(210,224,19)" fg:x="4081" fg:w="44"/><text x="5.4542%" y="623.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (10 samples, 0.01%)</title><rect x="5.2476%" y="597" width="0.0128%" height="15" fill="rgb(218,30,24)" fg:x="4115" fg:w="10"/><text x="5.4976%" y="607.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.01%)</title><rect x="5.2476%" y="581" width="0.0128%" height="15" fill="rgb(219,75,50)" fg:x="4115" fg:w="10"/><text x="5.4976%" y="591.50"></text></g><g><title>aptos_vm::create_access_path (61 samples, 0.08%)</title><rect x="5.1953%" y="741" width="0.0778%" height="15" fill="rgb(234,72,50)" fg:x="4074" fg:w="61"/><text x="5.4453%" y="751.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (58 samples, 0.07%)</title><rect x="5.1991%" y="725" width="0.0740%" height="15" fill="rgb(219,100,48)" fg:x="4077" fg:w="58"/><text x="5.4491%" y="735.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (58 samples, 0.07%)</title><rect x="5.1991%" y="709" width="0.0740%" height="15" fill="rgb(253,5,41)" fg:x="4077" fg:w="58"/><text x="5.4491%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (10 samples, 0.01%)</title><rect x="5.2603%" y="693" width="0.0128%" height="15" fill="rgb(247,181,11)" fg:x="4125" fg:w="10"/><text x="5.5103%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (8 samples, 0.01%)</title><rect x="5.2629%" y="677" width="0.0102%" height="15" fill="rgb(222,223,25)" fg:x="4127" fg:w="8"/><text x="5.5129%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (8 samples, 0.01%)</title><rect x="5.2629%" y="661" width="0.0102%" height="15" fill="rgb(214,198,28)" fg:x="4127" fg:w="8"/><text x="5.5129%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (8 samples, 0.01%)</title><rect x="5.2629%" y="645" width="0.0102%" height="15" fill="rgb(230,46,43)" fg:x="4127" fg:w="8"/><text x="5.5129%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="5.2629%" y="629" width="0.0102%" height="15" fill="rgb(233,65,53)" fg:x="4127" fg:w="8"/><text x="5.5129%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="5.2629%" y="613" width="0.0102%" height="15" fill="rgb(221,121,27)" fg:x="4127" fg:w="8"/><text x="5.5129%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="5.2629%" y="597" width="0.0102%" height="15" fill="rgb(247,70,47)" fg:x="4127" fg:w="8"/><text x="5.5129%" y="607.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (31 samples, 0.04%)</title><rect x="5.2731%" y="725" width="0.0395%" height="15" fill="rgb(228,85,35)" fg:x="4135" fg:w="31"/><text x="5.5231%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (27 samples, 0.03%)</title><rect x="5.2782%" y="709" width="0.0344%" height="15" fill="rgb(209,50,18)" fg:x="4139" fg:w="27"/><text x="5.5282%" y="719.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (27 samples, 0.03%)</title><rect x="5.2782%" y="693" width="0.0344%" height="15" fill="rgb(250,19,35)" fg:x="4139" fg:w="27"/><text x="5.5282%" y="703.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (27 samples, 0.03%)</title><rect x="5.2782%" y="677" width="0.0344%" height="15" fill="rgb(253,107,29)" fg:x="4139" fg:w="27"/><text x="5.5282%" y="687.50"></text></g><g><title>&lt;aptos_storage_interface::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (27 samples, 0.03%)</title><rect x="5.2782%" y="661" width="0.0344%" height="15" fill="rgb(252,179,29)" fg:x="4139" fg:w="27"/><text x="5.5282%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (21 samples, 0.03%)</title><rect x="5.2858%" y="645" width="0.0268%" height="15" fill="rgb(238,194,6)" fg:x="4145" fg:w="21"/><text x="5.5358%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (21 samples, 0.03%)</title><rect x="5.2858%" y="629" width="0.0268%" height="15" fill="rgb(238,164,29)" fg:x="4145" fg:w="21"/><text x="5.5358%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (21 samples, 0.03%)</title><rect x="5.2858%" y="613" width="0.0268%" height="15" fill="rgb(224,25,9)" fg:x="4145" fg:w="21"/><text x="5.5358%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.03%)</title><rect x="5.2858%" y="597" width="0.0268%" height="15" fill="rgb(244,153,23)" fg:x="4145" fg:w="21"/><text x="5.5358%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.03%)</title><rect x="5.2858%" y="581" width="0.0268%" height="15" fill="rgb(212,203,14)" fg:x="4145" fg:w="21"/><text x="5.5358%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (18 samples, 0.02%)</title><rect x="5.2897%" y="565" width="0.0230%" height="15" fill="rgb(220,164,20)" fg:x="4148" fg:w="18"/><text x="5.5397%" y="575.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (18 samples, 0.02%)</title><rect x="5.2897%" y="549" width="0.0230%" height="15" fill="rgb(222,203,48)" fg:x="4148" fg:w="18"/><text x="5.5397%" y="559.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="5.2973%" y="533" width="0.0153%" height="15" fill="rgb(215,159,22)" fg:x="4154" fg:w="12"/><text x="5.5473%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="5.2973%" y="517" width="0.0153%" height="15" fill="rgb(216,183,47)" fg:x="4154" fg:w="12"/><text x="5.5473%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="5.2973%" y="501" width="0.0153%" height="15" fill="rgb(229,195,25)" fg:x="4154" fg:w="12"/><text x="5.5473%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.02%)</title><rect x="5.2973%" y="485" width="0.0153%" height="15" fill="rgb(224,132,51)" fg:x="4154" fg:w="12"/><text x="5.5473%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (12 samples, 0.02%)</title><rect x="5.2973%" y="469" width="0.0153%" height="15" fill="rgb(240,63,7)" fg:x="4154" fg:w="12"/><text x="5.5473%" y="479.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (35 samples, 0.04%)</title><rect x="5.2731%" y="741" width="0.0446%" height="15" fill="rgb(249,182,41)" fg:x="4135" fg:w="35"/><text x="5.5231%" y="751.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (100 samples, 0.13%)</title><rect x="5.1915%" y="757" width="0.1275%" height="15" fill="rgb(243,47,26)" fg:x="4071" fg:w="100"/><text x="5.4415%" y="767.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (18 samples, 0.02%)</title><rect x="5.3381%" y="757" width="0.0230%" height="15" fill="rgb(233,48,2)" fg:x="4186" fg:w="18"/><text x="5.5881%" y="767.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="5.3624%" y="709" width="0.0102%" height="15" fill="rgb(244,165,34)" fg:x="4205" fg:w="8"/><text x="5.6124%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="5.3624%" y="693" width="0.0102%" height="15" fill="rgb(207,89,7)" fg:x="4205" fg:w="8"/><text x="5.6124%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="5.3624%" y="677" width="0.0102%" height="15" fill="rgb(244,117,36)" fg:x="4205" fg:w="8"/><text x="5.6124%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="5.3624%" y="661" width="0.0102%" height="15" fill="rgb(226,144,34)" fg:x="4205" fg:w="8"/><text x="5.6124%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="5.3624%" y="645" width="0.0102%" height="15" fill="rgb(213,23,19)" fg:x="4205" fg:w="8"/><text x="5.6124%" y="655.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (11 samples, 0.01%)</title><rect x="5.3726%" y="709" width="0.0140%" height="15" fill="rgb(217,75,12)" fg:x="4213" fg:w="11"/><text x="5.6226%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (11 samples, 0.01%)</title><rect x="5.3726%" y="693" width="0.0140%" height="15" fill="rgb(224,159,17)" fg:x="4213" fg:w="11"/><text x="5.6226%" y="703.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (11 samples, 0.01%)</title><rect x="5.3726%" y="677" width="0.0140%" height="15" fill="rgb(217,118,1)" fg:x="4213" fg:w="11"/><text x="5.6226%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (11 samples, 0.01%)</title><rect x="5.3726%" y="661" width="0.0140%" height="15" fill="rgb(232,180,48)" fg:x="4213" fg:w="11"/><text x="5.6226%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.01%)</title><rect x="5.3726%" y="645" width="0.0140%" height="15" fill="rgb(230,27,33)" fg:x="4213" fg:w="11"/><text x="5.6226%" y="655.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (23 samples, 0.03%)</title><rect x="5.3611%" y="757" width="0.0293%" height="15" fill="rgb(205,31,21)" fg:x="4204" fg:w="23"/><text x="5.6111%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (22 samples, 0.03%)</title><rect x="5.3624%" y="741" width="0.0281%" height="15" fill="rgb(253,59,4)" fg:x="4205" fg:w="22"/><text x="5.6124%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (22 samples, 0.03%)</title><rect x="5.3624%" y="725" width="0.0281%" height="15" fill="rgb(224,201,9)" fg:x="4205" fg:w="22"/><text x="5.6124%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (33 samples, 0.04%)</title><rect x="5.3904%" y="757" width="0.0421%" height="15" fill="rgb(229,206,30)" fg:x="4227" fg:w="33"/><text x="5.6404%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (33 samples, 0.04%)</title><rect x="5.3904%" y="741" width="0.0421%" height="15" fill="rgb(212,67,47)" fg:x="4227" fg:w="33"/><text x="5.6404%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (22 samples, 0.03%)</title><rect x="5.4044%" y="725" width="0.0281%" height="15" fill="rgb(211,96,50)" fg:x="4238" fg:w="22"/><text x="5.6544%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (18 samples, 0.02%)</title><rect x="5.4095%" y="709" width="0.0230%" height="15" fill="rgb(252,114,18)" fg:x="4242" fg:w="18"/><text x="5.6595%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (18 samples, 0.02%)</title><rect x="5.4095%" y="693" width="0.0230%" height="15" fill="rgb(223,58,37)" fg:x="4242" fg:w="18"/><text x="5.6595%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18 samples, 0.02%)</title><rect x="5.4095%" y="677" width="0.0230%" height="15" fill="rgb(237,70,4)" fg:x="4242" fg:w="18"/><text x="5.6595%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18 samples, 0.02%)</title><rect x="5.4095%" y="661" width="0.0230%" height="15" fill="rgb(244,85,46)" fg:x="4242" fg:w="18"/><text x="5.6595%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.02%)</title><rect x="5.4095%" y="645" width="0.0230%" height="15" fill="rgb(223,39,52)" fg:x="4242" fg:w="18"/><text x="5.6595%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (18 samples, 0.02%)</title><rect x="5.4095%" y="629" width="0.0230%" height="15" fill="rgb(218,200,14)" fg:x="4242" fg:w="18"/><text x="5.6595%" y="639.50"></text></g><g><title>hashbrown::raw::h2 (18 samples, 0.02%)</title><rect x="5.4095%" y="613" width="0.0230%" height="15" fill="rgb(208,171,16)" fg:x="4242" fg:w="18"/><text x="5.6595%" y="623.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::cached (9 samples, 0.01%)</title><rect x="5.4325%" y="757" width="0.0115%" height="15" fill="rgb(234,200,18)" fg:x="4260" fg:w="9"/><text x="5.6825%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::cached (9 samples, 0.01%)</title><rect x="5.4325%" y="741" width="0.0115%" height="15" fill="rgb(228,45,11)" fg:x="4260" fg:w="9"/><text x="5.6825%" y="751.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (11 samples, 0.01%)</title><rect x="5.4452%" y="693" width="0.0140%" height="15" fill="rgb(237,182,11)" fg:x="4270" fg:w="11"/><text x="5.6952%" y="703.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (11 samples, 0.01%)</title><rect x="5.4452%" y="677" width="0.0140%" height="15" fill="rgb(241,175,49)" fg:x="4270" fg:w="11"/><text x="5.6952%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.02%)</title><rect x="5.4452%" y="709" width="0.0153%" height="15" fill="rgb(247,38,35)" fg:x="4270" fg:w="12"/><text x="5.6952%" y="719.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (220 samples, 0.28%)</title><rect x="5.1851%" y="789" width="0.2806%" height="15" fill="rgb(228,39,49)" fg:x="4066" fg:w="220"/><text x="5.4351%" y="799.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (215 samples, 0.27%)</title><rect x="5.1915%" y="773" width="0.2742%" height="15" fill="rgb(226,101,26)" fg:x="4071" fg:w="215"/><text x="5.4415%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (17 samples, 0.02%)</title><rect x="5.4440%" y="757" width="0.0217%" height="15" fill="rgb(206,141,19)" fg:x="4269" fg:w="17"/><text x="5.6940%" y="767.50"></text></g><g><title>bcs::de::from_bytes_seed (17 samples, 0.02%)</title><rect x="5.4440%" y="741" width="0.0217%" height="15" fill="rgb(211,200,13)" fg:x="4269" fg:w="17"/><text x="5.6940%" y="751.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (17 samples, 0.02%)</title><rect x="5.4440%" y="725" width="0.0217%" height="15" fill="rgb(241,121,6)" fg:x="4269" fg:w="17"/><text x="5.6940%" y="735.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (27 samples, 0.03%)</title><rect x="5.4657%" y="789" width="0.0344%" height="15" fill="rgb(234,221,29)" fg:x="4286" fg:w="27"/><text x="5.7157%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (27 samples, 0.03%)</title><rect x="5.4657%" y="773" width="0.0344%" height="15" fill="rgb(229,136,5)" fg:x="4286" fg:w="27"/><text x="5.7157%" y="783.50"></text></g><g><title>core::ptr::write (27 samples, 0.03%)</title><rect x="5.4657%" y="757" width="0.0344%" height="15" fill="rgb(238,36,11)" fg:x="4286" fg:w="27"/><text x="5.7157%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (250 samples, 0.32%)</title><rect x="5.1851%" y="805" width="0.3188%" height="15" fill="rgb(251,55,41)" fg:x="4066" fg:w="250"/><text x="5.4351%" y="815.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="5.5116%" y="741" width="0.0140%" height="15" fill="rgb(242,34,40)" fg:x="4322" fg:w="11"/><text x="5.7616%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="5.5358%" y="421" width="0.0242%" height="15" fill="rgb(215,42,17)" fg:x="4341" fg:w="19"/><text x="5.7858%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="5.5358%" y="405" width="0.0242%" height="15" fill="rgb(207,44,46)" fg:x="4341" fg:w="19"/><text x="5.7858%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.02%)</title><rect x="5.5358%" y="389" width="0.0242%" height="15" fill="rgb(211,206,28)" fg:x="4341" fg:w="19"/><text x="5.7858%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.02%)</title><rect x="5.5358%" y="373" width="0.0242%" height="15" fill="rgb(237,167,16)" fg:x="4341" fg:w="19"/><text x="5.7858%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.02%)</title><rect x="5.5358%" y="357" width="0.0242%" height="15" fill="rgb(233,66,6)" fg:x="4341" fg:w="19"/><text x="5.7858%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18 samples, 0.02%)</title><rect x="5.5371%" y="341" width="0.0230%" height="15" fill="rgb(246,123,29)" fg:x="4342" fg:w="18"/><text x="5.7871%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 0.02%)</title><rect x="5.5371%" y="325" width="0.0230%" height="15" fill="rgb(209,62,40)" fg:x="4342" fg:w="18"/><text x="5.7871%" y="335.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 0.02%)</title><rect x="5.5371%" y="309" width="0.0230%" height="15" fill="rgb(218,4,25)" fg:x="4342" fg:w="18"/><text x="5.7871%" y="319.50"></text></g><g><title>rallocx (17 samples, 0.02%)</title><rect x="5.5383%" y="293" width="0.0217%" height="15" fill="rgb(253,91,49)" fg:x="4343" fg:w="17"/><text x="5.7883%" y="303.50"></text></g><g><title>sz_index2size (16 samples, 0.02%)</title><rect x="5.5396%" y="277" width="0.0204%" height="15" fill="rgb(228,155,29)" fg:x="4344" fg:w="16"/><text x="5.7896%" y="287.50"></text></g><g><title>sz_index2size_lookup (16 samples, 0.02%)</title><rect x="5.5396%" y="261" width="0.0204%" height="15" fill="rgb(243,57,37)" fg:x="4344" fg:w="16"/><text x="5.7896%" y="271.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (26 samples, 0.03%)</title><rect x="5.5358%" y="597" width="0.0332%" height="15" fill="rgb(244,167,17)" fg:x="4341" fg:w="26"/><text x="5.7858%" y="607.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (26 samples, 0.03%)</title><rect x="5.5358%" y="581" width="0.0332%" height="15" fill="rgb(207,181,38)" fg:x="4341" fg:w="26"/><text x="5.7858%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (26 samples, 0.03%)</title><rect x="5.5358%" y="565" width="0.0332%" height="15" fill="rgb(211,8,23)" fg:x="4341" fg:w="26"/><text x="5.7858%" y="575.50"></text></g><g><title> 32]&gt;::serialize (26 samples, 0.03%)</title><rect x="5.5358%" y="549" width="0.0332%" height="15" fill="rgb(235,11,44)" fg:x="4341" fg:w="26"/><text x="5.7858%" y="559.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (26 samples, 0.03%)</title><rect x="5.5358%" y="533" width="0.0332%" height="15" fill="rgb(248,18,52)" fg:x="4341" fg:w="26"/><text x="5.7858%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (26 samples, 0.03%)</title><rect x="5.5358%" y="517" width="0.0332%" height="15" fill="rgb(208,4,7)" fg:x="4341" fg:w="26"/><text x="5.7858%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (26 samples, 0.03%)</title><rect x="5.5358%" y="501" width="0.0332%" height="15" fill="rgb(240,17,39)" fg:x="4341" fg:w="26"/><text x="5.7858%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (26 samples, 0.03%)</title><rect x="5.5358%" y="485" width="0.0332%" height="15" fill="rgb(207,170,3)" fg:x="4341" fg:w="26"/><text x="5.7858%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (26 samples, 0.03%)</title><rect x="5.5358%" y="469" width="0.0332%" height="15" fill="rgb(236,100,52)" fg:x="4341" fg:w="26"/><text x="5.7858%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26 samples, 0.03%)</title><rect x="5.5358%" y="453" width="0.0332%" height="15" fill="rgb(246,78,51)" fg:x="4341" fg:w="26"/><text x="5.7858%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26 samples, 0.03%)</title><rect x="5.5358%" y="437" width="0.0332%" height="15" fill="rgb(211,17,15)" fg:x="4341" fg:w="26"/><text x="5.7858%" y="447.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (9 samples, 0.01%)</title><rect x="5.5728%" y="389" width="0.0115%" height="15" fill="rgb(209,59,46)" fg:x="4370" fg:w="9"/><text x="5.8228%" y="399.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.01%)</title><rect x="5.5728%" y="373" width="0.0115%" height="15" fill="rgb(210,92,25)" fg:x="4370" fg:w="9"/><text x="5.8228%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (9 samples, 0.01%)</title><rect x="5.5728%" y="357" width="0.0115%" height="15" fill="rgb(238,174,52)" fg:x="4370" fg:w="9"/><text x="5.8228%" y="367.50"></text></g><g><title> 32]&gt;::serialize (9 samples, 0.01%)</title><rect x="5.5728%" y="341" width="0.0115%" height="15" fill="rgb(230,73,7)" fg:x="4370" fg:w="9"/><text x="5.8228%" y="351.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (9 samples, 0.01%)</title><rect x="5.5728%" y="325" width="0.0115%" height="15" fill="rgb(243,124,40)" fg:x="4370" fg:w="9"/><text x="5.8228%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (9 samples, 0.01%)</title><rect x="5.5728%" y="309" width="0.0115%" height="15" fill="rgb(244,170,11)" fg:x="4370" fg:w="9"/><text x="5.8228%" y="319.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (9 samples, 0.01%)</title><rect x="5.5728%" y="293" width="0.0115%" height="15" fill="rgb(207,114,54)" fg:x="4370" fg:w="9"/><text x="5.8228%" y="303.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (9 samples, 0.01%)</title><rect x="5.5728%" y="277" width="0.0115%" height="15" fill="rgb(205,42,20)" fg:x="4370" fg:w="9"/><text x="5.8228%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.01%)</title><rect x="5.5728%" y="261" width="0.0115%" height="15" fill="rgb(230,30,28)" fg:x="4370" fg:w="9"/><text x="5.8228%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.01%)</title><rect x="5.5728%" y="245" width="0.0115%" height="15" fill="rgb(205,73,54)" fg:x="4370" fg:w="9"/><text x="5.8228%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.01%)</title><rect x="5.5728%" y="229" width="0.0115%" height="15" fill="rgb(254,227,23)" fg:x="4370" fg:w="9"/><text x="5.8228%" y="239.50"></text></g><g><title>bcs::ser::to_bytes (44 samples, 0.06%)</title><rect x="5.5294%" y="693" width="0.0561%" height="15" fill="rgb(228,202,34)" fg:x="4336" fg:w="44"/><text x="5.7794%" y="703.50"></text></g><g><title>bcs::ser::serialize_into (44 samples, 0.06%)</title><rect x="5.5294%" y="677" width="0.0561%" height="15" fill="rgb(222,225,37)" fg:x="4336" fg:w="44"/><text x="5.7794%" y="687.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (44 samples, 0.06%)</title><rect x="5.5294%" y="661" width="0.0561%" height="15" fill="rgb(221,14,54)" fg:x="4336" fg:w="44"/><text x="5.7794%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (44 samples, 0.06%)</title><rect x="5.5294%" y="645" width="0.0561%" height="15" fill="rgb(254,102,2)" fg:x="4336" fg:w="44"/><text x="5.7794%" y="655.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (39 samples, 0.05%)</title><rect x="5.5358%" y="629" width="0.0497%" height="15" fill="rgb(232,104,17)" fg:x="4341" fg:w="39"/><text x="5.7858%" y="639.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (39 samples, 0.05%)</title><rect x="5.5358%" y="613" width="0.0497%" height="15" fill="rgb(250,220,14)" fg:x="4341" fg:w="39"/><text x="5.7858%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="5.5689%" y="597" width="0.0166%" height="15" fill="rgb(241,158,9)" fg:x="4367" fg:w="13"/><text x="5.8189%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (13 samples, 0.02%)</title><rect x="5.5689%" y="581" width="0.0166%" height="15" fill="rgb(246,9,43)" fg:x="4367" fg:w="13"/><text x="5.8189%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (13 samples, 0.02%)</title><rect x="5.5689%" y="565" width="0.0166%" height="15" fill="rgb(206,73,33)" fg:x="4367" fg:w="13"/><text x="5.8189%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.02%)</title><rect x="5.5689%" y="549" width="0.0166%" height="15" fill="rgb(222,79,8)" fg:x="4367" fg:w="13"/><text x="5.8189%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (13 samples, 0.02%)</title><rect x="5.5689%" y="533" width="0.0166%" height="15" fill="rgb(234,8,54)" fg:x="4367" fg:w="13"/><text x="5.8189%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (13 samples, 0.02%)</title><rect x="5.5689%" y="517" width="0.0166%" height="15" fill="rgb(209,134,38)" fg:x="4367" fg:w="13"/><text x="5.8189%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (13 samples, 0.02%)</title><rect x="5.5689%" y="501" width="0.0166%" height="15" fill="rgb(230,127,29)" fg:x="4367" fg:w="13"/><text x="5.8189%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.02%)</title><rect x="5.5689%" y="485" width="0.0166%" height="15" fill="rgb(242,44,41)" fg:x="4367" fg:w="13"/><text x="5.8189%" y="495.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (13 samples, 0.02%)</title><rect x="5.5689%" y="469" width="0.0166%" height="15" fill="rgb(222,56,43)" fg:x="4367" fg:w="13"/><text x="5.8189%" y="479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (11 samples, 0.01%)</title><rect x="5.5715%" y="453" width="0.0140%" height="15" fill="rgb(238,39,47)" fg:x="4369" fg:w="11"/><text x="5.8215%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (11 samples, 0.01%)</title><rect x="5.5715%" y="437" width="0.0140%" height="15" fill="rgb(226,79,43)" fg:x="4369" fg:w="11"/><text x="5.8215%" y="447.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (11 samples, 0.01%)</title><rect x="5.5715%" y="421" width="0.0140%" height="15" fill="rgb(242,105,53)" fg:x="4369" fg:w="11"/><text x="5.8215%" y="431.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.01%)</title><rect x="5.5715%" y="405" width="0.0140%" height="15" fill="rgb(251,132,46)" fg:x="4369" fg:w="11"/><text x="5.8215%" y="415.50"></text></g><g><title>aptos_vm::create_access_path (51 samples, 0.07%)</title><rect x="5.5256%" y="741" width="0.0650%" height="15" fill="rgb(231,77,14)" fg:x="4333" fg:w="51"/><text x="5.7756%" y="751.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (51 samples, 0.07%)</title><rect x="5.5256%" y="725" width="0.0650%" height="15" fill="rgb(240,135,9)" fg:x="4333" fg:w="51"/><text x="5.7756%" y="735.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (51 samples, 0.07%)</title><rect x="5.5256%" y="709" width="0.0650%" height="15" fill="rgb(248,109,14)" fg:x="4333" fg:w="51"/><text x="5.7756%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (9 samples, 0.01%)</title><rect x="5.5906%" y="709" width="0.0115%" height="15" fill="rgb(227,146,52)" fg:x="4384" fg:w="9"/><text x="5.8406%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.01%)</title><rect x="5.5906%" y="693" width="0.0115%" height="15" fill="rgb(232,54,3)" fg:x="4384" fg:w="9"/><text x="5.8406%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (9 samples, 0.01%)</title><rect x="5.5906%" y="677" width="0.0115%" height="15" fill="rgb(229,201,43)" fg:x="4384" fg:w="9"/><text x="5.8406%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (9 samples, 0.01%)</title><rect x="5.5906%" y="661" width="0.0115%" height="15" fill="rgb(252,161,33)" fg:x="4384" fg:w="9"/><text x="5.8406%" y="671.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::Ord&gt;::cmp (9 samples, 0.01%)</title><rect x="5.5906%" y="645" width="0.0115%" height="15" fill="rgb(226,146,40)" fg:x="4384" fg:w="9"/><text x="5.8406%" y="655.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::cmp::Ord&gt;::cmp (9 samples, 0.01%)</title><rect x="5.5906%" y="629" width="0.0115%" height="15" fill="rgb(219,47,25)" fg:x="4384" fg:w="9"/><text x="5.8406%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (9 samples, 0.01%)</title><rect x="5.5906%" y="613" width="0.0115%" height="15" fill="rgb(250,135,13)" fg:x="4384" fg:w="9"/><text x="5.8406%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (9 samples, 0.01%)</title><rect x="5.5906%" y="597" width="0.0115%" height="15" fill="rgb(219,229,18)" fg:x="4384" fg:w="9"/><text x="5.8406%" y="607.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (9 samples, 0.01%)</title><rect x="5.5906%" y="581" width="0.0115%" height="15" fill="rgb(217,152,27)" fg:x="4384" fg:w="9"/><text x="5.8406%" y="591.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (10 samples, 0.01%)</title><rect x="5.5906%" y="725" width="0.0128%" height="15" fill="rgb(225,71,47)" fg:x="4384" fg:w="10"/><text x="5.8406%" y="735.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (15 samples, 0.02%)</title><rect x="5.5906%" y="741" width="0.0191%" height="15" fill="rgb(220,139,14)" fg:x="4384" fg:w="15"/><text x="5.8406%" y="751.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (85 samples, 0.11%)</title><rect x="5.5039%" y="757" width="0.1084%" height="15" fill="rgb(247,54,32)" fg:x="4316" fg:w="85"/><text x="5.7539%" y="767.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="5.6123%" y="757" width="0.0128%" height="15" fill="rgb(252,131,39)" fg:x="4401" fg:w="10"/><text x="5.8623%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (8 samples, 0.01%)</title><rect x="5.6289%" y="757" width="0.0102%" height="15" fill="rgb(210,108,39)" fg:x="4414" fg:w="8"/><text x="5.8789%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (8 samples, 0.01%)</title><rect x="5.6289%" y="741" width="0.0102%" height="15" fill="rgb(205,23,29)" fg:x="4414" fg:w="8"/><text x="5.8789%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.01%)</title><rect x="5.6289%" y="725" width="0.0102%" height="15" fill="rgb(246,139,46)" fg:x="4414" fg:w="8"/><text x="5.8789%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (8 samples, 0.01%)</title><rect x="5.6391%" y="757" width="0.0102%" height="15" fill="rgb(250,81,26)" fg:x="4422" fg:w="8"/><text x="5.8891%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.01%)</title><rect x="5.6391%" y="741" width="0.0102%" height="15" fill="rgb(214,104,7)" fg:x="4422" fg:w="8"/><text x="5.8891%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.01%)</title><rect x="5.6391%" y="725" width="0.0102%" height="15" fill="rgb(233,189,8)" fg:x="4422" fg:w="8"/><text x="5.8891%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.01%)</title><rect x="5.6391%" y="709" width="0.0102%" height="15" fill="rgb(228,141,17)" fg:x="4422" fg:w="8"/><text x="5.8891%" y="719.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (8 samples, 0.01%)</title><rect x="5.6391%" y="693" width="0.0102%" height="15" fill="rgb(247,157,1)" fg:x="4422" fg:w="8"/><text x="5.8891%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (8 samples, 0.01%)</title><rect x="5.6391%" y="677" width="0.0102%" height="15" fill="rgb(249,225,5)" fg:x="4422" fg:w="8"/><text x="5.8891%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (8 samples, 0.01%)</title><rect x="5.6391%" y="661" width="0.0102%" height="15" fill="rgb(242,55,13)" fg:x="4422" fg:w="8"/><text x="5.8891%" y="671.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (8 samples, 0.01%)</title><rect x="5.6391%" y="645" width="0.0102%" height="15" fill="rgb(230,49,50)" fg:x="4422" fg:w="8"/><text x="5.8891%" y="655.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (9 samples, 0.01%)</title><rect x="5.6620%" y="757" width="0.0115%" height="15" fill="rgb(241,111,38)" fg:x="4440" fg:w="9"/><text x="5.9120%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="5.6633%" y="741" width="0.0102%" height="15" fill="rgb(252,155,4)" fg:x="4441" fg:w="8"/><text x="5.9133%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="5.6799%" y="613" width="0.0242%" height="15" fill="rgb(212,69,32)" fg:x="4454" fg:w="19"/><text x="5.9299%" y="623.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (29 samples, 0.04%)</title><rect x="5.7194%" y="437" width="0.0370%" height="15" fill="rgb(243,107,47)" fg:x="4485" fg:w="29"/><text x="5.9694%" y="447.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="5.7296%" y="421" width="0.0268%" height="15" fill="rgb(247,130,12)" fg:x="4493" fg:w="21"/><text x="5.9796%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="5.7296%" y="405" width="0.0268%" height="15" fill="rgb(233,74,16)" fg:x="4493" fg:w="21"/><text x="5.9796%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.03%)</title><rect x="5.7296%" y="389" width="0.0268%" height="15" fill="rgb(208,58,18)" fg:x="4493" fg:w="21"/><text x="5.9796%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.03%)</title><rect x="5.7296%" y="373" width="0.0268%" height="15" fill="rgb(242,225,1)" fg:x="4493" fg:w="21"/><text x="5.9796%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.03%)</title><rect x="5.7296%" y="357" width="0.0268%" height="15" fill="rgb(249,39,40)" fg:x="4493" fg:w="21"/><text x="5.9796%" y="367.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (55 samples, 0.07%)</title><rect x="5.7041%" y="533" width="0.0701%" height="15" fill="rgb(207,72,44)" fg:x="4473" fg:w="55"/><text x="5.9541%" y="543.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (43 samples, 0.05%)</title><rect x="5.7194%" y="517" width="0.0548%" height="15" fill="rgb(215,193,12)" fg:x="4485" fg:w="43"/><text x="5.9694%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (43 samples, 0.05%)</title><rect x="5.7194%" y="501" width="0.0548%" height="15" fill="rgb(248,41,39)" fg:x="4485" fg:w="43"/><text x="5.9694%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43 samples, 0.05%)</title><rect x="5.7194%" y="485" width="0.0548%" height="15" fill="rgb(253,85,4)" fg:x="4485" fg:w="43"/><text x="5.9694%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (43 samples, 0.05%)</title><rect x="5.7194%" y="469" width="0.0548%" height="15" fill="rgb(243,70,31)" fg:x="4485" fg:w="43"/><text x="5.9694%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43 samples, 0.05%)</title><rect x="5.7194%" y="453" width="0.0548%" height="15" fill="rgb(253,195,26)" fg:x="4485" fg:w="43"/><text x="5.9694%" y="463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (9 samples, 0.01%)</title><rect x="5.7628%" y="437" width="0.0115%" height="15" fill="rgb(243,42,11)" fg:x="4519" fg:w="9"/><text x="6.0128%" y="447.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (85 samples, 0.11%)</title><rect x="5.6799%" y="629" width="0.1084%" height="15" fill="rgb(239,66,17)" fg:x="4454" fg:w="85"/><text x="5.9299%" y="639.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (66 samples, 0.08%)</title><rect x="5.7041%" y="613" width="0.0842%" height="15" fill="rgb(217,132,21)" fg:x="4473" fg:w="66"/><text x="5.9541%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (66 samples, 0.08%)</title><rect x="5.7041%" y="597" width="0.0842%" height="15" fill="rgb(252,202,21)" fg:x="4473" fg:w="66"/><text x="5.9541%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (66 samples, 0.08%)</title><rect x="5.7041%" y="581" width="0.0842%" height="15" fill="rgb(233,98,36)" fg:x="4473" fg:w="66"/><text x="5.9541%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (66 samples, 0.08%)</title><rect x="5.7041%" y="565" width="0.0842%" height="15" fill="rgb(216,153,54)" fg:x="4473" fg:w="66"/><text x="5.9541%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (66 samples, 0.08%)</title><rect x="5.7041%" y="549" width="0.0842%" height="15" fill="rgb(250,99,7)" fg:x="4473" fg:w="66"/><text x="5.9541%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (8 samples, 0.01%)</title><rect x="5.7781%" y="533" width="0.0102%" height="15" fill="rgb(207,56,50)" fg:x="4531" fg:w="8"/><text x="6.0281%" y="543.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (89 samples, 0.11%)</title><rect x="5.6799%" y="709" width="0.1135%" height="15" fill="rgb(244,61,34)" fg:x="4454" fg:w="89"/><text x="5.9299%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (89 samples, 0.11%)</title><rect x="5.6799%" y="693" width="0.1135%" height="15" fill="rgb(241,50,38)" fg:x="4454" fg:w="89"/><text x="5.9299%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (89 samples, 0.11%)</title><rect x="5.6799%" y="677" width="0.1135%" height="15" fill="rgb(212,166,30)" fg:x="4454" fg:w="89"/><text x="5.9299%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (89 samples, 0.11%)</title><rect x="5.6799%" y="661" width="0.1135%" height="15" fill="rgb(249,127,32)" fg:x="4454" fg:w="89"/><text x="5.9299%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (89 samples, 0.11%)</title><rect x="5.6799%" y="645" width="0.1135%" height="15" fill="rgb(209,103,0)" fg:x="4454" fg:w="89"/><text x="5.9299%" y="655.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="5.7934%" y="629" width="0.0102%" height="15" fill="rgb(238,209,51)" fg:x="4543" fg:w="8"/><text x="6.0434%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="5.7934%" y="613" width="0.0102%" height="15" fill="rgb(237,56,23)" fg:x="4543" fg:w="8"/><text x="6.0434%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="5.7934%" y="597" width="0.0102%" height="15" fill="rgb(215,153,46)" fg:x="4543" fg:w="8"/><text x="6.0434%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="5.7934%" y="581" width="0.0102%" height="15" fill="rgb(224,49,31)" fg:x="4543" fg:w="8"/><text x="6.0434%" y="591.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (104 samples, 0.13%)</title><rect x="5.6735%" y="757" width="0.1326%" height="15" fill="rgb(250,18,42)" fg:x="4449" fg:w="104"/><text x="5.9235%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (104 samples, 0.13%)</title><rect x="5.6735%" y="741" width="0.1326%" height="15" fill="rgb(215,176,39)" fg:x="4449" fg:w="104"/><text x="5.9235%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (99 samples, 0.13%)</title><rect x="5.6799%" y="725" width="0.1262%" height="15" fill="rgb(223,77,29)" fg:x="4454" fg:w="99"/><text x="5.9299%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.01%)</title><rect x="5.7934%" y="709" width="0.0128%" height="15" fill="rgb(234,94,52)" fg:x="4543" fg:w="10"/><text x="6.0434%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.01%)</title><rect x="5.7934%" y="693" width="0.0128%" height="15" fill="rgb(220,154,50)" fg:x="4543" fg:w="10"/><text x="6.0434%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.01%)</title><rect x="5.7934%" y="677" width="0.0128%" height="15" fill="rgb(212,11,10)" fg:x="4543" fg:w="10"/><text x="6.0434%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.01%)</title><rect x="5.7934%" y="661" width="0.0128%" height="15" fill="rgb(205,166,19)" fg:x="4543" fg:w="10"/><text x="6.0434%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.01%)</title><rect x="5.7934%" y="645" width="0.0128%" height="15" fill="rgb(244,198,16)" fg:x="4543" fg:w="10"/><text x="6.0434%" y="655.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="5.8112%" y="629" width="0.0102%" height="15" fill="rgb(219,69,12)" fg:x="4557" fg:w="8"/><text x="6.0612%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="5.8112%" y="613" width="0.0102%" height="15" fill="rgb(245,30,7)" fg:x="4557" fg:w="8"/><text x="6.0612%" y="623.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (8 samples, 0.01%)</title><rect x="5.8112%" y="597" width="0.0102%" height="15" fill="rgb(218,221,48)" fg:x="4557" fg:w="8"/><text x="6.0612%" y="607.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="5.8112%" y="581" width="0.0102%" height="15" fill="rgb(216,66,15)" fg:x="4557" fg:w="8"/><text x="6.0612%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="5.8112%" y="693" width="0.0115%" height="15" fill="rgb(226,122,50)" fg:x="4557" fg:w="9"/><text x="6.0612%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.01%)</title><rect x="5.8112%" y="677" width="0.0115%" height="15" fill="rgb(239,156,16)" fg:x="4557" fg:w="9"/><text x="6.0612%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.01%)</title><rect x="5.8112%" y="661" width="0.0115%" height="15" fill="rgb(224,27,38)" fg:x="4557" fg:w="9"/><text x="6.0612%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.01%)</title><rect x="5.8112%" y="645" width="0.0115%" height="15" fill="rgb(224,39,27)" fg:x="4557" fg:w="9"/><text x="6.0612%" y="655.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="5.8112%" y="709" width="0.0153%" height="15" fill="rgb(215,92,29)" fg:x="4557" fg:w="12"/><text x="6.0612%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (25 samples, 0.03%)</title><rect x="5.8061%" y="757" width="0.0319%" height="15" fill="rgb(207,159,16)" fg:x="4553" fg:w="25"/><text x="6.0561%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (25 samples, 0.03%)</title><rect x="5.8061%" y="741" width="0.0319%" height="15" fill="rgb(238,163,47)" fg:x="4553" fg:w="25"/><text x="6.0561%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (21 samples, 0.03%)</title><rect x="5.8112%" y="725" width="0.0268%" height="15" fill="rgb(219,91,49)" fg:x="4557" fg:w="21"/><text x="6.0612%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.01%)</title><rect x="5.8265%" y="709" width="0.0115%" height="15" fill="rgb(227,167,31)" fg:x="4569" fg:w="9"/><text x="6.0765%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.01%)</title><rect x="5.8265%" y="693" width="0.0115%" height="15" fill="rgb(234,80,54)" fg:x="4569" fg:w="9"/><text x="6.0765%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.01%)</title><rect x="5.8265%" y="677" width="0.0115%" height="15" fill="rgb(212,114,2)" fg:x="4569" fg:w="9"/><text x="6.0765%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.01%)</title><rect x="5.8265%" y="661" width="0.0115%" height="15" fill="rgb(234,50,24)" fg:x="4569" fg:w="9"/><text x="6.0765%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.01%)</title><rect x="5.8265%" y="645" width="0.0115%" height="15" fill="rgb(221,68,8)" fg:x="4569" fg:w="9"/><text x="6.0765%" y="655.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (58 samples, 0.07%)</title><rect x="5.8814%" y="421" width="0.0740%" height="15" fill="rgb(254,180,31)" fg:x="4612" fg:w="58"/><text x="6.1314%" y="431.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (58 samples, 0.07%)</title><rect x="5.8814%" y="405" width="0.0740%" height="15" fill="rgb(247,130,50)" fg:x="4612" fg:w="58"/><text x="6.1314%" y="415.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (54 samples, 0.07%)</title><rect x="5.8865%" y="389" width="0.0689%" height="15" fill="rgb(211,109,4)" fg:x="4616" fg:w="54"/><text x="6.1365%" y="399.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (54 samples, 0.07%)</title><rect x="5.8865%" y="373" width="0.0689%" height="15" fill="rgb(238,50,21)" fg:x="4616" fg:w="54"/><text x="6.1365%" y="383.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (54 samples, 0.07%)</title><rect x="5.8865%" y="357" width="0.0689%" height="15" fill="rgb(225,57,45)" fg:x="4616" fg:w="54"/><text x="6.1365%" y="367.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (54 samples, 0.07%)</title><rect x="5.8865%" y="341" width="0.0689%" height="15" fill="rgb(209,196,50)" fg:x="4616" fg:w="54"/><text x="6.1365%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (51 samples, 0.07%)</title><rect x="5.8903%" y="325" width="0.0650%" height="15" fill="rgb(242,140,13)" fg:x="4619" fg:w="51"/><text x="6.1403%" y="335.50"></text></g><g><title> 32]&gt;::deserialize (51 samples, 0.07%)</title><rect x="5.8903%" y="309" width="0.0650%" height="15" fill="rgb(217,111,7)" fg:x="4619" fg:w="51"/><text x="6.1403%" y="319.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (51 samples, 0.07%)</title><rect x="5.8903%" y="293" width="0.0650%" height="15" fill="rgb(253,193,51)" fg:x="4619" fg:w="51"/><text x="6.1403%" y="303.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (51 samples, 0.07%)</title><rect x="5.8903%" y="277" width="0.0650%" height="15" fill="rgb(252,70,29)" fg:x="4619" fg:w="51"/><text x="6.1403%" y="287.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (51 samples, 0.07%)</title><rect x="5.8903%" y="261" width="0.0650%" height="15" fill="rgb(232,127,12)" fg:x="4619" fg:w="51"/><text x="6.1403%" y="271.50"></text></g><g><title>serde::de::SeqAccess::next_element (29 samples, 0.04%)</title><rect x="5.9184%" y="245" width="0.0370%" height="15" fill="rgb(211,180,21)" fg:x="4641" fg:w="29"/><text x="6.1684%" y="255.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (29 samples, 0.04%)</title><rect x="5.9184%" y="229" width="0.0370%" height="15" fill="rgb(229,72,13)" fg:x="4641" fg:w="29"/><text x="6.1684%" y="239.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19 samples, 0.02%)</title><rect x="5.9311%" y="213" width="0.0242%" height="15" fill="rgb(240,211,49)" fg:x="4651" fg:w="19"/><text x="6.1811%" y="223.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (19 samples, 0.02%)</title><rect x="5.9311%" y="197" width="0.0242%" height="15" fill="rgb(219,149,40)" fg:x="4651" fg:w="19"/><text x="6.1811%" y="207.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (19 samples, 0.02%)</title><rect x="5.9311%" y="181" width="0.0242%" height="15" fill="rgb(210,127,46)" fg:x="4651" fg:w="19"/><text x="6.1811%" y="191.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (13 samples, 0.02%)</title><rect x="5.9388%" y="165" width="0.0166%" height="15" fill="rgb(220,106,7)" fg:x="4657" fg:w="13"/><text x="6.1888%" y="175.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (77 samples, 0.10%)</title><rect x="5.8814%" y="469" width="0.0982%" height="15" fill="rgb(249,31,22)" fg:x="4612" fg:w="77"/><text x="6.1314%" y="479.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (77 samples, 0.10%)</title><rect x="5.8814%" y="453" width="0.0982%" height="15" fill="rgb(253,1,49)" fg:x="4612" fg:w="77"/><text x="6.1314%" y="463.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (77 samples, 0.10%)</title><rect x="5.8814%" y="437" width="0.0982%" height="15" fill="rgb(227,144,33)" fg:x="4612" fg:w="77"/><text x="6.1314%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="5.9553%" y="421" width="0.0242%" height="15" fill="rgb(249,163,44)" fg:x="4670" fg:w="19"/><text x="6.2053%" y="431.50"></text></g><g><title>core::ptr::write (18 samples, 0.02%)</title><rect x="5.9566%" y="405" width="0.0230%" height="15" fill="rgb(234,15,39)" fg:x="4671" fg:w="18"/><text x="6.2066%" y="415.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (95 samples, 0.12%)</title><rect x="5.8674%" y="501" width="0.1211%" height="15" fill="rgb(207,66,16)" fg:x="4601" fg:w="95"/><text x="6.1174%" y="511.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (95 samples, 0.12%)</title><rect x="5.8674%" y="485" width="0.1211%" height="15" fill="rgb(233,112,24)" fg:x="4601" fg:w="95"/><text x="6.1174%" y="495.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (113 samples, 0.14%)</title><rect x="5.8495%" y="533" width="0.1441%" height="15" fill="rgb(230,90,22)" fg:x="4587" fg:w="113"/><text x="6.0995%" y="543.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (113 samples, 0.14%)</title><rect x="5.8495%" y="517" width="0.1441%" height="15" fill="rgb(229,61,13)" fg:x="4587" fg:w="113"/><text x="6.0995%" y="527.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (116 samples, 0.15%)</title><rect x="5.8495%" y="549" width="0.1479%" height="15" fill="rgb(225,57,24)" fg:x="4587" fg:w="116"/><text x="6.0995%" y="559.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (123 samples, 0.16%)</title><rect x="5.8469%" y="565" width="0.1569%" height="15" fill="rgb(208,169,48)" fg:x="4585" fg:w="123"/><text x="6.0969%" y="575.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (150 samples, 0.19%)</title><rect x="5.8469%" y="581" width="0.1913%" height="15" fill="rgb(244,218,51)" fg:x="4585" fg:w="150"/><text x="6.0969%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (27 samples, 0.03%)</title><rect x="6.0038%" y="565" width="0.0344%" height="15" fill="rgb(214,148,10)" fg:x="4708" fg:w="27"/><text x="6.2538%" y="575.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (153 samples, 0.20%)</title><rect x="5.8469%" y="629" width="0.1951%" height="15" fill="rgb(225,174,27)" fg:x="4585" fg:w="153"/><text x="6.0969%" y="639.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (153 samples, 0.20%)</title><rect x="5.8469%" y="613" width="0.1951%" height="15" fill="rgb(230,96,26)" fg:x="4585" fg:w="153"/><text x="6.0969%" y="623.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (153 samples, 0.20%)</title><rect x="5.8469%" y="597" width="0.1951%" height="15" fill="rgb(232,10,30)" fg:x="4585" fg:w="153"/><text x="6.0969%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (9 samples, 0.01%)</title><rect x="6.0472%" y="629" width="0.0115%" height="15" fill="rgb(222,8,50)" fg:x="4742" fg:w="9"/><text x="6.2972%" y="639.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (9 samples, 0.01%)</title><rect x="6.0472%" y="613" width="0.0115%" height="15" fill="rgb(213,81,27)" fg:x="4742" fg:w="9"/><text x="6.2972%" y="623.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (9 samples, 0.01%)</title><rect x="6.0472%" y="597" width="0.0115%" height="15" fill="rgb(245,50,10)" fg:x="4742" fg:w="9"/><text x="6.2972%" y="607.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (169 samples, 0.22%)</title><rect x="5.8469%" y="661" width="0.2155%" height="15" fill="rgb(216,100,18)" fg:x="4585" fg:w="169"/><text x="6.0969%" y="671.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (169 samples, 0.22%)</title><rect x="5.8469%" y="645" width="0.2155%" height="15" fill="rgb(236,147,54)" fg:x="4585" fg:w="169"/><text x="6.0969%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13 samples, 0.02%)</title><rect x="6.0625%" y="645" width="0.0166%" height="15" fill="rgb(205,143,26)" fg:x="4754" fg:w="13"/><text x="6.3125%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.02%)</title><rect x="6.0625%" y="629" width="0.0166%" height="15" fill="rgb(236,26,9)" fg:x="4754" fg:w="13"/><text x="6.3125%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.02%)</title><rect x="6.0625%" y="613" width="0.0166%" height="15" fill="rgb(221,165,53)" fg:x="4754" fg:w="13"/><text x="6.3125%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.02%)</title><rect x="6.0637%" y="597" width="0.0153%" height="15" fill="rgb(214,110,17)" fg:x="4755" fg:w="12"/><text x="6.3137%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.02%)</title><rect x="6.0637%" y="581" width="0.0153%" height="15" fill="rgb(237,197,12)" fg:x="4755" fg:w="12"/><text x="6.3137%" y="591.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.02%)</title><rect x="6.0637%" y="565" width="0.0153%" height="15" fill="rgb(205,84,17)" fg:x="4755" fg:w="12"/><text x="6.3137%" y="575.50"></text></g><g><title>rallocx (10 samples, 0.01%)</title><rect x="6.0663%" y="549" width="0.0128%" height="15" fill="rgb(237,18,45)" fg:x="4757" fg:w="10"/><text x="6.3163%" y="559.50"></text></g><g><title>iralloct (10 samples, 0.01%)</title><rect x="6.0663%" y="533" width="0.0128%" height="15" fill="rgb(221,87,14)" fg:x="4757" fg:w="10"/><text x="6.3163%" y="543.50"></text></g><g><title>_rjem_je_arena_ralloc (10 samples, 0.01%)</title><rect x="6.0663%" y="517" width="0.0128%" height="15" fill="rgb(238,186,15)" fg:x="4757" fg:w="10"/><text x="6.3163%" y="527.50"></text></g><g><title>arena_ralloc_move_helper (10 samples, 0.01%)</title><rect x="6.0663%" y="501" width="0.0128%" height="15" fill="rgb(208,115,11)" fg:x="4757" fg:w="10"/><text x="6.3163%" y="511.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (217 samples, 0.28%)</title><rect x="5.8469%" y="709" width="0.2767%" height="15" fill="rgb(254,175,0)" fg:x="4585" fg:w="217"/><text x="6.0969%" y="719.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (217 samples, 0.28%)</title><rect x="5.8469%" y="693" width="0.2767%" height="15" fill="rgb(227,24,42)" fg:x="4585" fg:w="217"/><text x="6.0969%" y="703.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (217 samples, 0.28%)</title><rect x="5.8469%" y="677" width="0.2767%" height="15" fill="rgb(223,211,37)" fg:x="4585" fg:w="217"/><text x="6.0969%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (48 samples, 0.06%)</title><rect x="6.0625%" y="661" width="0.0612%" height="15" fill="rgb(235,49,27)" fg:x="4754" fg:w="48"/><text x="6.3125%" y="671.50"></text></g><g><title>core::ptr::write (35 samples, 0.04%)</title><rect x="6.0790%" y="645" width="0.0446%" height="15" fill="rgb(254,97,51)" fg:x="4767" fg:w="35"/><text x="6.3290%" y="655.50"></text></g><g><title>bcs::de::from_bytes_seed (227 samples, 0.29%)</title><rect x="5.8380%" y="741" width="0.2895%" height="15" fill="rgb(249,51,40)" fg:x="4578" fg:w="227"/><text x="6.0880%" y="751.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (220 samples, 0.28%)</title><rect x="5.8469%" y="725" width="0.2806%" height="15" fill="rgb(210,128,45)" fg:x="4585" fg:w="220"/><text x="6.0969%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (228 samples, 0.29%)</title><rect x="5.8380%" y="757" width="0.2908%" height="15" fill="rgb(224,137,50)" fg:x="4578" fg:w="228"/><text x="6.0880%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (495 samples, 0.63%)</title><rect x="5.5039%" y="805" width="0.6312%" height="15" fill="rgb(242,15,9)" fg:x="4316" fg:w="495"/><text x="5.7539%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (495 samples, 0.63%)</title><rect x="5.5039%" y="789" width="0.6312%" height="15" fill="rgb(233,187,41)" fg:x="4316" fg:w="495"/><text x="5.7539%" y="799.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (495 samples, 0.63%)</title><rect x="5.5039%" y="773" width="0.6312%" height="15" fill="rgb(227,2,29)" fg:x="4316" fg:w="495"/><text x="5.7539%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::check_balance (12 samples, 0.02%)</title><rect x="6.1351%" y="805" width="0.0153%" height="15" fill="rgb(222,70,3)" fg:x="4811" fg:w="12"/><text x="6.3851%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (16 samples, 0.02%)</title><rect x="6.1505%" y="789" width="0.0204%" height="15" fill="rgb(213,11,42)" fg:x="4823" fg:w="16"/><text x="6.4005%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (16 samples, 0.02%)</title><rect x="6.1505%" y="773" width="0.0204%" height="15" fill="rgb(225,150,9)" fg:x="4823" fg:w="16"/><text x="6.4005%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (32 samples, 0.04%)</title><rect x="6.1505%" y="805" width="0.0408%" height="15" fill="rgb(230,162,45)" fg:x="4823" fg:w="32"/><text x="6.4005%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (16 samples, 0.02%)</title><rect x="6.1709%" y="789" width="0.0204%" height="15" fill="rgb(222,14,52)" fg:x="4839" fg:w="16"/><text x="6.4209%" y="799.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (8 samples, 0.01%)</title><rect x="6.1811%" y="773" width="0.0102%" height="15" fill="rgb(254,198,14)" fg:x="4847" fg:w="8"/><text x="6.4311%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Resolver::constant_at (8 samples, 0.01%)</title><rect x="6.1989%" y="805" width="0.0102%" height="15" fill="rgb(220,217,30)" fg:x="4861" fg:w="8"/><text x="6.4489%" y="815.50"></text></g><g><title>move_binary_format::access::ModuleAccess::constant_at (8 samples, 0.01%)</title><rect x="6.1989%" y="789" width="0.0102%" height="15" fill="rgb(215,146,41)" fg:x="4861" fg:w="8"/><text x="6.4489%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="6.2193%" y="661" width="0.0140%" height="15" fill="rgb(217,27,36)" fg:x="4877" fg:w="11"/><text x="6.4693%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (11 samples, 0.01%)</title><rect x="6.2193%" y="645" width="0.0140%" height="15" fill="rgb(219,218,39)" fg:x="4877" fg:w="11"/><text x="6.4693%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="6.2193%" y="629" width="0.0140%" height="15" fill="rgb(219,4,42)" fg:x="4877" fg:w="11"/><text x="6.4693%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="6.2193%" y="613" width="0.0140%" height="15" fill="rgb(249,119,36)" fg:x="4877" fg:w="11"/><text x="6.4693%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.01%)</title><rect x="6.2193%" y="597" width="0.0140%" height="15" fill="rgb(209,23,33)" fg:x="4877" fg:w="11"/><text x="6.4693%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (9 samples, 0.01%)</title><rect x="6.2219%" y="581" width="0.0115%" height="15" fill="rgb(211,10,0)" fg:x="4879" fg:w="9"/><text x="6.4719%" y="591.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (9 samples, 0.01%)</title><rect x="6.2219%" y="565" width="0.0115%" height="15" fill="rgb(208,99,37)" fg:x="4879" fg:w="9"/><text x="6.4719%" y="575.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (9 samples, 0.01%)</title><rect x="6.2219%" y="549" width="0.0115%" height="15" fill="rgb(213,132,31)" fg:x="4879" fg:w="9"/><text x="6.4719%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.02%)</title><rect x="6.2168%" y="789" width="0.0217%" height="15" fill="rgb(243,129,40)" fg:x="4875" fg:w="17"/><text x="6.4668%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="6.2168%" y="773" width="0.0217%" height="15" fill="rgb(210,66,33)" fg:x="4875" fg:w="17"/><text x="6.4668%" y="783.50"></text></g><g><title>core::iter::adapters::try_process (17 samples, 0.02%)</title><rect x="6.2168%" y="757" width="0.0217%" height="15" fill="rgb(209,189,4)" fg:x="4875" fg:w="17"/><text x="6.4668%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (17 samples, 0.02%)</title><rect x="6.2168%" y="741" width="0.0217%" height="15" fill="rgb(214,107,37)" fg:x="4875" fg:w="17"/><text x="6.4668%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.02%)</title><rect x="6.2168%" y="725" width="0.0217%" height="15" fill="rgb(245,88,54)" fg:x="4875" fg:w="17"/><text x="6.4668%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="6.2168%" y="709" width="0.0217%" height="15" fill="rgb(205,146,20)" fg:x="4875" fg:w="17"/><text x="6.4668%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="6.2193%" y="693" width="0.0191%" height="15" fill="rgb(220,161,25)" fg:x="4877" fg:w="15"/><text x="6.4693%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="6.2193%" y="677" width="0.0191%" height="15" fill="rgb(215,152,15)" fg:x="4877" fg:w="15"/><text x="6.4693%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (36 samples, 0.05%)</title><rect x="6.2168%" y="805" width="0.0459%" height="15" fill="rgb(233,192,44)" fg:x="4875" fg:w="36"/><text x="6.4668%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (19 samples, 0.02%)</title><rect x="6.2384%" y="789" width="0.0242%" height="15" fill="rgb(240,170,46)" fg:x="4892" fg:w="19"/><text x="6.4884%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (18 samples, 0.02%)</title><rect x="6.2397%" y="773" width="0.0230%" height="15" fill="rgb(207,104,33)" fg:x="4893" fg:w="18"/><text x="6.4897%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (18 samples, 0.02%)</title><rect x="6.2397%" y="757" width="0.0230%" height="15" fill="rgb(219,21,39)" fg:x="4893" fg:w="18"/><text x="6.4897%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="6.2397%" y="741" width="0.0230%" height="15" fill="rgb(214,133,29)" fg:x="4893" fg:w="18"/><text x="6.4897%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="6.2486%" y="725" width="0.0140%" height="15" fill="rgb(226,93,6)" fg:x="4900" fg:w="11"/><text x="6.4986%" y="735.50"></text></g><g><title>move_vm_runtime::tracing::trace (23 samples, 0.03%)</title><rect x="6.2627%" y="805" width="0.0293%" height="15" fill="rgb(252,222,34)" fg:x="4911" fg:w="23"/><text x="6.5127%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::copy_loc (16 samples, 0.02%)</title><rect x="6.2958%" y="805" width="0.0204%" height="15" fill="rgb(252,92,48)" fg:x="4937" fg:w="16"/><text x="6.5458%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (12 samples, 0.02%)</title><rect x="6.3009%" y="789" width="0.0153%" height="15" fill="rgb(245,223,24)" fg:x="4941" fg:w="12"/><text x="6.5509%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::move_loc (19 samples, 0.02%)</title><rect x="6.3162%" y="805" width="0.0242%" height="15" fill="rgb(205,176,3)" fg:x="4953" fg:w="19"/><text x="6.5662%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (11 samples, 0.01%)</title><rect x="6.3264%" y="789" width="0.0140%" height="15" fill="rgb(235,151,15)" fg:x="4961" fg:w="11"/><text x="6.5764%" y="799.50"></text></g><g><title>core::mem::replace (11 samples, 0.01%)</title><rect x="6.3264%" y="773" width="0.0140%" height="15" fill="rgb(237,209,11)" fg:x="4961" fg:w="11"/><text x="6.5764%" y="783.50"></text></g><g><title>core::ptr::write (11 samples, 0.01%)</title><rect x="6.3264%" y="757" width="0.0140%" height="15" fill="rgb(243,227,24)" fg:x="4961" fg:w="11"/><text x="6.5764%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::read_ref (10 samples, 0.01%)</title><rect x="6.3430%" y="773" width="0.0128%" height="15" fill="rgb(239,193,16)" fg:x="4974" fg:w="10"/><text x="6.5930%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value (8 samples, 0.01%)</title><rect x="6.3456%" y="757" width="0.0102%" height="15" fill="rgb(231,27,9)" fg:x="4976" fg:w="8"/><text x="6.5956%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (26 samples, 0.03%)</title><rect x="6.3430%" y="805" width="0.0332%" height="15" fill="rgb(219,169,10)" fg:x="4974" fg:w="26"/><text x="6.5930%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (26 samples, 0.03%)</title><rect x="6.3430%" y="789" width="0.0332%" height="15" fill="rgb(244,229,43)" fg:x="4974" fg:w="26"/><text x="6.5930%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (16 samples, 0.02%)</title><rect x="6.3558%" y="773" width="0.0204%" height="15" fill="rgb(254,38,20)" fg:x="4984" fg:w="16"/><text x="6.6058%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (12 samples, 0.02%)</title><rect x="6.3762%" y="805" width="0.0153%" height="15" fill="rgb(250,47,30)" fg:x="5000" fg:w="12"/><text x="6.6262%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (9 samples, 0.01%)</title><rect x="6.3800%" y="789" width="0.0115%" height="15" fill="rgb(224,124,36)" fg:x="5003" fg:w="9"/><text x="6.6300%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Value::constant_sig_token_to_layout (9 samples, 0.01%)</title><rect x="6.3978%" y="789" width="0.0115%" height="15" fill="rgb(246,68,51)" fg:x="5017" fg:w="9"/><text x="6.6478%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="6.4093%" y="757" width="0.0128%" height="15" fill="rgb(253,43,49)" fg:x="5026" fg:w="10"/><text x="6.6593%" y="767.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (11 samples, 0.01%)</title><rect x="6.4297%" y="741" width="0.0140%" height="15" fill="rgb(219,54,36)" fg:x="5042" fg:w="11"/><text x="6.6797%" y="751.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (11 samples, 0.01%)</title><rect x="6.4297%" y="725" width="0.0140%" height="15" fill="rgb(227,133,34)" fg:x="5042" fg:w="11"/><text x="6.6797%" y="735.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (11 samples, 0.01%)</title><rect x="6.4297%" y="709" width="0.0140%" height="15" fill="rgb(247,227,15)" fg:x="5042" fg:w="11"/><text x="6.6797%" y="719.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (11 samples, 0.01%)</title><rect x="6.4297%" y="693" width="0.0140%" height="15" fill="rgb(229,96,14)" fg:x="5042" fg:w="11"/><text x="6.6797%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (9 samples, 0.01%)</title><rect x="6.4323%" y="677" width="0.0115%" height="15" fill="rgb(220,79,17)" fg:x="5044" fg:w="9"/><text x="6.6823%" y="687.50"></text></g><g><title> 32]&gt;::deserialize (9 samples, 0.01%)</title><rect x="6.4323%" y="661" width="0.0115%" height="15" fill="rgb(205,131,53)" fg:x="5044" fg:w="9"/><text x="6.6823%" y="671.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (9 samples, 0.01%)</title><rect x="6.4323%" y="645" width="0.0115%" height="15" fill="rgb(209,50,29)" fg:x="5044" fg:w="9"/><text x="6.6823%" y="655.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (9 samples, 0.01%)</title><rect x="6.4323%" y="629" width="0.0115%" height="15" fill="rgb(245,86,46)" fg:x="5044" fg:w="9"/><text x="6.6823%" y="639.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (9 samples, 0.01%)</title><rect x="6.4323%" y="613" width="0.0115%" height="15" fill="rgb(235,66,46)" fg:x="5044" fg:w="9"/><text x="6.6823%" y="623.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (42 samples, 0.05%)</title><rect x="6.3915%" y="805" width="0.0536%" height="15" fill="rgb(232,148,31)" fg:x="5012" fg:w="42"/><text x="6.6415%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (28 samples, 0.04%)</title><rect x="6.4093%" y="789" width="0.0357%" height="15" fill="rgb(217,149,8)" fg:x="5026" fg:w="28"/><text x="6.6593%" y="799.50"></text></g><g><title>bcs::de::from_bytes_seed (28 samples, 0.04%)</title><rect x="6.4093%" y="773" width="0.0357%" height="15" fill="rgb(209,183,11)" fg:x="5026" fg:w="28"/><text x="6.6593%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 0.02%)</title><rect x="6.4221%" y="757" width="0.0230%" height="15" fill="rgb(208,55,20)" fg:x="5036" fg:w="18"/><text x="6.6721%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (1,598 samples, 2.04%)</title><rect x="4.4187%" y="837" width="2.0378%" height="15" fill="rgb(218,39,14)" fg:x="3465" fg:w="1598"/><text x="4.6687%" y="847.50">m..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (1,598 samples, 2.04%)</title><rect x="4.4187%" y="821" width="2.0378%" height="15" fill="rgb(216,169,33)" fg:x="3465" fg:w="1598"/><text x="4.6687%" y="831.50">m..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="6.4603%" y="693" width="0.0217%" height="15" fill="rgb(233,80,24)" fg:x="5066" fg:w="17"/><text x="6.7103%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="6.4603%" y="677" width="0.0217%" height="15" fill="rgb(213,179,31)" fg:x="5066" fg:w="17"/><text x="6.7103%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="6.4603%" y="661" width="0.0217%" height="15" fill="rgb(209,19,5)" fg:x="5066" fg:w="17"/><text x="6.7103%" y="671.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (48 samples, 0.06%)</title><rect x="6.4820%" y="661" width="0.0612%" height="15" fill="rgb(219,18,35)" fg:x="5083" fg:w="48"/><text x="6.7320%" y="671.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (48 samples, 0.06%)</title><rect x="6.4820%" y="645" width="0.0612%" height="15" fill="rgb(209,169,16)" fg:x="5083" fg:w="48"/><text x="6.7320%" y="655.50"></text></g><g><title> N]&gt;::hash (48 samples, 0.06%)</title><rect x="6.4820%" y="629" width="0.0612%" height="15" fill="rgb(245,90,51)" fg:x="5083" fg:w="48"/><text x="6.7320%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (48 samples, 0.06%)</title><rect x="6.4820%" y="613" width="0.0612%" height="15" fill="rgb(220,99,45)" fg:x="5083" fg:w="48"/><text x="6.7320%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (48 samples, 0.06%)</title><rect x="6.4820%" y="597" width="0.0612%" height="15" fill="rgb(249,89,25)" fg:x="5083" fg:w="48"/><text x="6.7320%" y="607.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (48 samples, 0.06%)</title><rect x="6.4820%" y="581" width="0.0612%" height="15" fill="rgb(239,193,0)" fg:x="5083" fg:w="48"/><text x="6.7320%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (48 samples, 0.06%)</title><rect x="6.4820%" y="565" width="0.0612%" height="15" fill="rgb(231,126,1)" fg:x="5083" fg:w="48"/><text x="6.7320%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (48 samples, 0.06%)</title><rect x="6.4820%" y="549" width="0.0612%" height="15" fill="rgb(243,166,3)" fg:x="5083" fg:w="48"/><text x="6.7320%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (66 samples, 0.08%)</title><rect x="6.4603%" y="725" width="0.0842%" height="15" fill="rgb(223,22,34)" fg:x="5066" fg:w="66"/><text x="6.7103%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (66 samples, 0.08%)</title><rect x="6.4603%" y="709" width="0.0842%" height="15" fill="rgb(251,52,51)" fg:x="5066" fg:w="66"/><text x="6.7103%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (49 samples, 0.06%)</title><rect x="6.4820%" y="693" width="0.0625%" height="15" fill="rgb(221,165,28)" fg:x="5083" fg:w="49"/><text x="6.7320%" y="703.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (49 samples, 0.06%)</title><rect x="6.4820%" y="677" width="0.0625%" height="15" fill="rgb(218,121,47)" fg:x="5083" fg:w="49"/><text x="6.7320%" y="687.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (117 samples, 0.15%)</title><rect x="6.4565%" y="837" width="0.1492%" height="15" fill="rgb(209,120,9)" fg:x="5063" fg:w="117"/><text x="6.7065%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (114 samples, 0.15%)</title><rect x="6.4603%" y="821" width="0.1454%" height="15" fill="rgb(236,68,12)" fg:x="5066" fg:w="114"/><text x="6.7103%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (114 samples, 0.15%)</title><rect x="6.4603%" y="805" width="0.1454%" height="15" fill="rgb(225,194,26)" fg:x="5066" fg:w="114"/><text x="6.7103%" y="815.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (114 samples, 0.15%)</title><rect x="6.4603%" y="789" width="0.1454%" height="15" fill="rgb(231,84,39)" fg:x="5066" fg:w="114"/><text x="6.7103%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (114 samples, 0.15%)</title><rect x="6.4603%" y="773" width="0.1454%" height="15" fill="rgb(210,11,45)" fg:x="5066" fg:w="114"/><text x="6.7103%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (114 samples, 0.15%)</title><rect x="6.4603%" y="757" width="0.1454%" height="15" fill="rgb(224,54,52)" fg:x="5066" fg:w="114"/><text x="6.7103%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (114 samples, 0.15%)</title><rect x="6.4603%" y="741" width="0.1454%" height="15" fill="rgb(238,102,14)" fg:x="5066" fg:w="114"/><text x="6.7103%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (48 samples, 0.06%)</title><rect x="6.5445%" y="725" width="0.0612%" height="15" fill="rgb(243,160,52)" fg:x="5132" fg:w="48"/><text x="6.7945%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (48 samples, 0.06%)</title><rect x="6.5445%" y="709" width="0.0612%" height="15" fill="rgb(216,114,19)" fg:x="5132" fg:w="48"/><text x="6.7945%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (48 samples, 0.06%)</title><rect x="6.5445%" y="693" width="0.0612%" height="15" fill="rgb(244,166,37)" fg:x="5132" fg:w="48"/><text x="6.7945%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (48 samples, 0.06%)</title><rect x="6.5445%" y="677" width="0.0612%" height="15" fill="rgb(246,29,44)" fg:x="5132" fg:w="48"/><text x="6.7945%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (48 samples, 0.06%)</title><rect x="6.5445%" y="661" width="0.0612%" height="15" fill="rgb(215,56,53)" fg:x="5132" fg:w="48"/><text x="6.7945%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (48 samples, 0.06%)</title><rect x="6.5445%" y="645" width="0.0612%" height="15" fill="rgb(217,60,2)" fg:x="5132" fg:w="48"/><text x="6.7945%" y="655.50"></text></g><g><title>move_stdlib::natives::signer::make_native_borrow_address::{{closure}} (28 samples, 0.04%)</title><rect x="6.6223%" y="805" width="0.0357%" height="15" fill="rgb(207,26,24)" fg:x="5193" fg:w="28"/><text x="6.8723%" y="815.50"></text></g><g><title>move_stdlib::natives::signer::native_borrow_address (28 samples, 0.04%)</title><rect x="6.6223%" y="789" width="0.0357%" height="15" fill="rgb(252,210,15)" fg:x="5193" fg:w="28"/><text x="6.8723%" y="799.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (11 samples, 0.01%)</title><rect x="6.6618%" y="805" width="0.0140%" height="15" fill="rgb(253,209,26)" fg:x="5224" fg:w="11"/><text x="6.9118%" y="815.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (11 samples, 0.01%)</title><rect x="6.6618%" y="789" width="0.0140%" height="15" fill="rgb(238,170,14)" fg:x="5224" fg:w="11"/><text x="6.9118%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (56 samples, 0.07%)</title><rect x="6.6057%" y="837" width="0.0714%" height="15" fill="rgb(216,178,15)" fg:x="5180" fg:w="56"/><text x="6.8557%" y="847.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (56 samples, 0.07%)</title><rect x="6.6057%" y="821" width="0.0714%" height="15" fill="rgb(250,197,2)" fg:x="5180" fg:w="56"/><text x="6.8557%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19 samples, 0.02%)</title><rect x="6.7052%" y="805" width="0.0242%" height="15" fill="rgb(212,70,42)" fg:x="5258" fg:w="19"/><text x="6.9552%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="6.7052%" y="789" width="0.0242%" height="15" fill="rgb(227,213,9)" fg:x="5258" fg:w="19"/><text x="6.9552%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="6.7052%" y="773" width="0.0242%" height="15" fill="rgb(245,99,25)" fg:x="5258" fg:w="19"/><text x="6.9552%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="6.7052%" y="757" width="0.0242%" height="15" fill="rgb(250,82,29)" fg:x="5258" fg:w="19"/><text x="6.9552%" y="767.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (15 samples, 0.02%)</title><rect x="6.7103%" y="741" width="0.0191%" height="15" fill="rgb(241,226,54)" fg:x="5262" fg:w="15"/><text x="6.9603%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="6.7371%" y="677" width="0.0102%" height="15" fill="rgb(221,99,41)" fg:x="5283" fg:w="8"/><text x="6.9871%" y="687.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (34 samples, 0.04%)</title><rect x="6.7052%" y="821" width="0.0434%" height="15" fill="rgb(213,90,21)" fg:x="5258" fg:w="34"/><text x="6.9552%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.02%)</title><rect x="6.7294%" y="805" width="0.0191%" height="15" fill="rgb(205,208,24)" fg:x="5277" fg:w="15"/><text x="6.9794%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="6.7294%" y="789" width="0.0191%" height="15" fill="rgb(246,31,12)" fg:x="5277" fg:w="15"/><text x="6.9794%" y="799.50"></text></g><g><title>core::iter::adapters::try_process (15 samples, 0.02%)</title><rect x="6.7294%" y="773" width="0.0191%" height="15" fill="rgb(213,154,6)" fg:x="5277" fg:w="15"/><text x="6.9794%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (12 samples, 0.02%)</title><rect x="6.7332%" y="757" width="0.0153%" height="15" fill="rgb(222,163,29)" fg:x="5280" fg:w="12"/><text x="6.9832%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.02%)</title><rect x="6.7332%" y="741" width="0.0153%" height="15" fill="rgb(227,201,8)" fg:x="5280" fg:w="12"/><text x="6.9832%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="6.7332%" y="725" width="0.0153%" height="15" fill="rgb(233,9,32)" fg:x="5280" fg:w="12"/><text x="6.9832%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="6.7332%" y="709" width="0.0153%" height="15" fill="rgb(217,54,24)" fg:x="5280" fg:w="12"/><text x="6.9832%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="6.7371%" y="693" width="0.0115%" height="15" fill="rgb(235,192,0)" fg:x="5283" fg:w="9"/><text x="6.9871%" y="703.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (10 samples, 0.01%)</title><rect x="6.7485%" y="821" width="0.0128%" height="15" fill="rgb(235,45,9)" fg:x="5292" fg:w="10"/><text x="6.9985%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (10 samples, 0.01%)</title><rect x="6.7485%" y="805" width="0.0128%" height="15" fill="rgb(246,42,40)" fg:x="5292" fg:w="10"/><text x="6.9985%" y="815.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (12 samples, 0.02%)</title><rect x="6.7613%" y="821" width="0.0153%" height="15" fill="rgb(248,111,24)" fg:x="5302" fg:w="12"/><text x="7.0113%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (12 samples, 0.02%)</title><rect x="6.7613%" y="805" width="0.0153%" height="15" fill="rgb(249,65,22)" fg:x="5302" fg:w="12"/><text x="7.0113%" y="815.50"></text></g><g><title>core::cmp::PartialEq::ne (12 samples, 0.02%)</title><rect x="6.7613%" y="789" width="0.0153%" height="15" fill="rgb(238,111,51)" fg:x="5302" fg:w="12"/><text x="7.0113%" y="799.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (11 samples, 0.01%)</title><rect x="6.7626%" y="773" width="0.0140%" height="15" fill="rgb(250,118,22)" fg:x="5303" fg:w="11"/><text x="7.0126%" y="783.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (8 samples, 0.01%)</title><rect x="6.7830%" y="805" width="0.0102%" height="15" fill="rgb(234,84,26)" fg:x="5319" fg:w="8"/><text x="7.0330%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.01%)</title><rect x="6.7830%" y="789" width="0.0102%" height="15" fill="rgb(243,172,12)" fg:x="5319" fg:w="8"/><text x="7.0330%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.01%)</title><rect x="6.7830%" y="773" width="0.0102%" height="15" fill="rgb(236,150,49)" fg:x="5319" fg:w="8"/><text x="7.0330%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="6.7830%" y="757" width="0.0102%" height="15" fill="rgb(225,197,26)" fg:x="5319" fg:w="8"/><text x="7.0330%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="6.7830%" y="741" width="0.0102%" height="15" fill="rgb(214,17,42)" fg:x="5319" fg:w="8"/><text x="7.0330%" y="751.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="6.7830%" y="725" width="0.0102%" height="15" fill="rgb(224,165,40)" fg:x="5319" fg:w="8"/><text x="7.0330%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (17 samples, 0.02%)</title><rect x="6.7830%" y="821" width="0.0217%" height="15" fill="rgb(246,100,4)" fg:x="5319" fg:w="17"/><text x="7.0330%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.01%)</title><rect x="6.7932%" y="805" width="0.0115%" height="15" fill="rgb(222,103,0)" fg:x="5327" fg:w="9"/><text x="7.0432%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="6.7932%" y="789" width="0.0115%" height="15" fill="rgb(227,189,26)" fg:x="5327" fg:w="9"/><text x="7.0432%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="6.7932%" y="773" width="0.0115%" height="15" fill="rgb(214,202,17)" fg:x="5327" fg:w="9"/><text x="7.0432%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="6.7932%" y="757" width="0.0115%" height="15" fill="rgb(229,111,3)" fg:x="5327" fg:w="9"/><text x="7.0432%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (106 samples, 0.14%)</title><rect x="6.6784%" y="837" width="0.1352%" height="15" fill="rgb(229,172,15)" fg:x="5237" fg:w="106"/><text x="6.9284%" y="847.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="6.8136%" y="757" width="0.0115%" height="15" fill="rgb(230,224,35)" fg:x="5343" fg:w="9"/><text x="7.0636%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (15 samples, 0.02%)</title><rect x="6.8136%" y="837" width="0.0191%" height="15" fill="rgb(251,141,6)" fg:x="5343" fg:w="15"/><text x="7.0636%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 0.02%)</title><rect x="6.8136%" y="821" width="0.0191%" height="15" fill="rgb(225,208,6)" fg:x="5343" fg:w="15"/><text x="7.0636%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.02%)</title><rect x="6.8136%" y="805" width="0.0191%" height="15" fill="rgb(246,181,16)" fg:x="5343" fg:w="15"/><text x="7.0636%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.02%)</title><rect x="6.8136%" y="789" width="0.0191%" height="15" fill="rgb(227,129,36)" fg:x="5343" fg:w="15"/><text x="7.0636%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.02%)</title><rect x="6.8136%" y="773" width="0.0191%" height="15" fill="rgb(248,117,24)" fg:x="5343" fg:w="15"/><text x="7.0636%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::function_at (32 samples, 0.04%)</title><rect x="6.8378%" y="837" width="0.0408%" height="15" fill="rgb(214,185,35)" fg:x="5362" fg:w="32"/><text x="7.0878%" y="847.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::function_at (32 samples, 0.04%)</title><rect x="6.8378%" y="821" width="0.0408%" height="15" fill="rgb(236,150,34)" fg:x="5362" fg:w="32"/><text x="7.0878%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.04%)</title><rect x="6.8378%" y="805" width="0.0408%" height="15" fill="rgb(243,228,27)" fg:x="5362" fg:w="32"/><text x="7.0878%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (32 samples, 0.04%)</title><rect x="6.8378%" y="789" width="0.0408%" height="15" fill="rgb(245,77,44)" fg:x="5362" fg:w="32"/><text x="7.0878%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (32 samples, 0.04%)</title><rect x="6.8378%" y="773" width="0.0408%" height="15" fill="rgb(235,214,42)" fg:x="5362" fg:w="32"/><text x="7.0878%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="6.8888%" y="821" width="0.0128%" height="15" fill="rgb(221,74,3)" fg:x="5402" fg:w="10"/><text x="7.1388%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_function (22 samples, 0.03%)</title><rect x="6.8888%" y="837" width="0.0281%" height="15" fill="rgb(206,121,29)" fg:x="5402" fg:w="22"/><text x="7.1388%" y="847.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (8 samples, 0.01%)</title><rect x="6.9067%" y="821" width="0.0102%" height="15" fill="rgb(249,131,53)" fg:x="5416" fg:w="8"/><text x="7.1567%" y="831.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (8 samples, 0.01%)</title><rect x="6.9067%" y="805" width="0.0102%" height="15" fill="rgb(236,170,29)" fg:x="5416" fg:w="8"/><text x="7.1567%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (15 samples, 0.02%)</title><rect x="6.9169%" y="837" width="0.0191%" height="15" fill="rgb(247,96,15)" fg:x="5424" fg:w="15"/><text x="7.1669%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (9 samples, 0.01%)</title><rect x="6.9424%" y="837" width="0.0115%" height="15" fill="rgb(211,210,7)" fg:x="5444" fg:w="9"/><text x="7.1924%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (8 samples, 0.01%)</title><rect x="6.9436%" y="821" width="0.0102%" height="15" fill="rgb(240,88,50)" fg:x="5445" fg:w="8"/><text x="7.1936%" y="831.50"></text></g><g><title>core::mem::replace (8 samples, 0.01%)</title><rect x="6.9436%" y="805" width="0.0102%" height="15" fill="rgb(209,229,26)" fg:x="5445" fg:w="8"/><text x="7.1936%" y="815.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="6.9436%" y="789" width="0.0102%" height="15" fill="rgb(210,68,23)" fg:x="5445" fg:w="8"/><text x="7.1936%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (2,139 samples, 2.73%)</title><rect x="4.2402%" y="869" width="2.7277%" height="15" fill="rgb(229,180,13)" fg:x="3325" fg:w="2139"/><text x="4.4902%" y="879.50">mo..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (2,139 samples, 2.73%)</title><rect x="4.2402%" y="853" width="2.7277%" height="15" fill="rgb(236,53,44)" fg:x="3325" fg:w="2139"/><text x="4.4902%" y="863.50">mo..</text></g><g><title>sdallocx (11 samples, 0.01%)</title><rect x="6.9538%" y="837" width="0.0140%" height="15" fill="rgb(244,214,29)" fg:x="5453" fg:w="11"/><text x="7.2038%" y="847.50"></text></g><g><title>isfree (11 samples, 0.01%)</title><rect x="6.9538%" y="821" width="0.0140%" height="15" fill="rgb(220,75,29)" fg:x="5453" fg:w="11"/><text x="7.2038%" y="831.50"></text></g><g><title>isdalloct (11 samples, 0.01%)</title><rect x="6.9538%" y="805" width="0.0140%" height="15" fill="rgb(214,183,37)" fg:x="5453" fg:w="11"/><text x="7.2038%" y="815.50"></text></g><g><title>arena_sdalloc (11 samples, 0.01%)</title><rect x="6.9538%" y="789" width="0.0140%" height="15" fill="rgb(239,117,29)" fg:x="5453" fg:w="11"/><text x="7.2038%" y="799.50"></text></g><g><title>tcache_dalloc_small (11 samples, 0.01%)</title><rect x="6.9538%" y="773" width="0.0140%" height="15" fill="rgb(237,171,35)" fg:x="5453" fg:w="11"/><text x="7.2038%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="7.0100%" y="501" width="0.0140%" height="15" fill="rgb(229,178,53)" fg:x="5497" fg:w="11"/><text x="7.2600%" y="511.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (16 samples, 0.02%)</title><rect x="7.0061%" y="533" width="0.0204%" height="15" fill="rgb(210,102,19)" fg:x="5494" fg:w="16"/><text x="7.2561%" y="543.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (13 samples, 0.02%)</title><rect x="7.0100%" y="517" width="0.0166%" height="15" fill="rgb(235,127,22)" fg:x="5497" fg:w="13"/><text x="7.2600%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (19 samples, 0.02%)</title><rect x="7.0265%" y="501" width="0.0242%" height="15" fill="rgb(244,31,31)" fg:x="5510" fg:w="19"/><text x="7.2765%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (12 samples, 0.02%)</title><rect x="7.0750%" y="485" width="0.0153%" height="15" fill="rgb(231,43,21)" fg:x="5548" fg:w="12"/><text x="7.3250%" y="495.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (12 samples, 0.02%)</title><rect x="7.0750%" y="469" width="0.0153%" height="15" fill="rgb(217,131,35)" fg:x="5548" fg:w="12"/><text x="7.3250%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (10 samples, 0.01%)</title><rect x="7.0775%" y="453" width="0.0128%" height="15" fill="rgb(221,149,4)" fg:x="5550" fg:w="10"/><text x="7.3275%" y="463.50"></text></g><g><title>bcs::de::from_bytes_seed (53 samples, 0.07%)</title><rect x="7.0265%" y="517" width="0.0676%" height="15" fill="rgb(232,170,28)" fg:x="5510" fg:w="53"/><text x="7.2765%" y="527.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (34 samples, 0.04%)</title><rect x="7.0508%" y="501" width="0.0434%" height="15" fill="rgb(238,56,10)" fg:x="5529" fg:w="34"/><text x="7.3008%" y="511.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (79 samples, 0.10%)</title><rect x="7.0010%" y="549" width="0.1007%" height="15" fill="rgb(235,196,14)" fg:x="5490" fg:w="79"/><text x="7.2510%" y="559.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (59 samples, 0.08%)</title><rect x="7.0265%" y="533" width="0.0752%" height="15" fill="rgb(216,45,48)" fg:x="5510" fg:w="59"/><text x="7.2765%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (103 samples, 0.13%)</title><rect x="6.9717%" y="693" width="0.1313%" height="15" fill="rgb(238,213,17)" fg:x="5467" fg:w="103"/><text x="7.2217%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (103 samples, 0.13%)</title><rect x="6.9717%" y="677" width="0.1313%" height="15" fill="rgb(212,13,2)" fg:x="5467" fg:w="103"/><text x="7.2217%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (103 samples, 0.13%)</title><rect x="6.9717%" y="661" width="0.1313%" height="15" fill="rgb(240,114,20)" fg:x="5467" fg:w="103"/><text x="7.2217%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (103 samples, 0.13%)</title><rect x="6.9717%" y="645" width="0.1313%" height="15" fill="rgb(228,41,40)" fg:x="5467" fg:w="103"/><text x="7.2217%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (103 samples, 0.13%)</title><rect x="6.9717%" y="629" width="0.1313%" height="15" fill="rgb(244,132,35)" fg:x="5467" fg:w="103"/><text x="7.2217%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (103 samples, 0.13%)</title><rect x="6.9717%" y="613" width="0.1313%" height="15" fill="rgb(253,189,4)" fg:x="5467" fg:w="103"/><text x="7.2217%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (103 samples, 0.13%)</title><rect x="6.9717%" y="597" width="0.1313%" height="15" fill="rgb(224,37,19)" fg:x="5467" fg:w="103"/><text x="7.2217%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (103 samples, 0.13%)</title><rect x="6.9717%" y="581" width="0.1313%" height="15" fill="rgb(235,223,18)" fg:x="5467" fg:w="103"/><text x="7.2217%" y="591.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (84 samples, 0.11%)</title><rect x="6.9959%" y="565" width="0.1071%" height="15" fill="rgb(235,163,25)" fg:x="5486" fg:w="84"/><text x="7.2459%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (119 samples, 0.15%)</title><rect x="6.9717%" y="725" width="0.1518%" height="15" fill="rgb(217,145,28)" fg:x="5467" fg:w="119"/><text x="7.2217%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (119 samples, 0.15%)</title><rect x="6.9717%" y="709" width="0.1518%" height="15" fill="rgb(223,223,32)" fg:x="5467" fg:w="119"/><text x="7.2217%" y="719.50"></text></g><g><title>core::ptr::write (13 samples, 0.02%)</title><rect x="7.1069%" y="693" width="0.0166%" height="15" fill="rgb(227,189,39)" fg:x="5573" fg:w="13"/><text x="7.3569%" y="703.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (14 samples, 0.02%)</title><rect x="7.1464%" y="469" width="0.0179%" height="15" fill="rgb(248,10,22)" fg:x="5604" fg:w="14"/><text x="7.3964%" y="479.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (14 samples, 0.02%)</title><rect x="7.1464%" y="453" width="0.0179%" height="15" fill="rgb(248,46,39)" fg:x="5604" fg:w="14"/><text x="7.3964%" y="463.50"></text></g><g><title> 32]&gt;::deserialize (14 samples, 0.02%)</title><rect x="7.1464%" y="437" width="0.0179%" height="15" fill="rgb(248,113,48)" fg:x="5604" fg:w="14"/><text x="7.3964%" y="447.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (14 samples, 0.02%)</title><rect x="7.1464%" y="421" width="0.0179%" height="15" fill="rgb(245,16,25)" fg:x="5604" fg:w="14"/><text x="7.3964%" y="431.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (14 samples, 0.02%)</title><rect x="7.1464%" y="405" width="0.0179%" height="15" fill="rgb(249,152,16)" fg:x="5604" fg:w="14"/><text x="7.3964%" y="415.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (14 samples, 0.02%)</title><rect x="7.1464%" y="389" width="0.0179%" height="15" fill="rgb(250,16,1)" fg:x="5604" fg:w="14"/><text x="7.3964%" y="399.50"></text></g><g><title>serde::de::SeqAccess::next_element (13 samples, 0.02%)</title><rect x="7.1477%" y="373" width="0.0166%" height="15" fill="rgb(249,138,3)" fg:x="5605" fg:w="13"/><text x="7.3977%" y="383.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (9 samples, 0.01%)</title><rect x="7.1528%" y="357" width="0.0115%" height="15" fill="rgb(227,71,41)" fg:x="5609" fg:w="9"/><text x="7.4028%" y="367.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.01%)</title><rect x="7.1528%" y="341" width="0.0115%" height="15" fill="rgb(209,184,23)" fg:x="5609" fg:w="9"/><text x="7.4028%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (9 samples, 0.01%)</title><rect x="7.1528%" y="325" width="0.0115%" height="15" fill="rgb(223,215,31)" fg:x="5609" fg:w="9"/><text x="7.4028%" y="335.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (9 samples, 0.01%)</title><rect x="7.1528%" y="309" width="0.0115%" height="15" fill="rgb(210,146,28)" fg:x="5609" fg:w="9"/><text x="7.4028%" y="319.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (20 samples, 0.03%)</title><rect x="7.1400%" y="517" width="0.0255%" height="15" fill="rgb(209,183,41)" fg:x="5599" fg:w="20"/><text x="7.3900%" y="527.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (17 samples, 0.02%)</title><rect x="7.1439%" y="501" width="0.0217%" height="15" fill="rgb(209,224,45)" fg:x="5602" fg:w="17"/><text x="7.3939%" y="511.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (17 samples, 0.02%)</title><rect x="7.1439%" y="485" width="0.0217%" height="15" fill="rgb(224,209,51)" fg:x="5602" fg:w="17"/><text x="7.3939%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.05%)</title><rect x="7.1235%" y="725" width="0.0472%" height="15" fill="rgb(223,17,39)" fg:x="5586" fg:w="37"/><text x="7.3735%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (37 samples, 0.05%)</title><rect x="7.1235%" y="709" width="0.0472%" height="15" fill="rgb(234,204,37)" fg:x="5586" fg:w="37"/><text x="7.3735%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 0.05%)</title><rect x="7.1235%" y="693" width="0.0472%" height="15" fill="rgb(236,120,5)" fg:x="5586" fg:w="37"/><text x="7.3735%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 0.05%)</title><rect x="7.1235%" y="677" width="0.0472%" height="15" fill="rgb(248,97,27)" fg:x="5586" fg:w="37"/><text x="7.3735%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 0.05%)</title><rect x="7.1235%" y="661" width="0.0472%" height="15" fill="rgb(240,66,17)" fg:x="5586" fg:w="37"/><text x="7.3735%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (37 samples, 0.05%)</title><rect x="7.1235%" y="645" width="0.0472%" height="15" fill="rgb(210,79,3)" fg:x="5586" fg:w="37"/><text x="7.3735%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (37 samples, 0.05%)</title><rect x="7.1235%" y="629" width="0.0472%" height="15" fill="rgb(214,176,27)" fg:x="5586" fg:w="37"/><text x="7.3735%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (37 samples, 0.05%)</title><rect x="7.1235%" y="613" width="0.0472%" height="15" fill="rgb(235,185,3)" fg:x="5586" fg:w="37"/><text x="7.3735%" y="623.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (37 samples, 0.05%)</title><rect x="7.1235%" y="597" width="0.0472%" height="15" fill="rgb(227,24,12)" fg:x="5586" fg:w="37"/><text x="7.3735%" y="607.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (37 samples, 0.05%)</title><rect x="7.1235%" y="581" width="0.0472%" height="15" fill="rgb(252,169,48)" fg:x="5586" fg:w="37"/><text x="7.3735%" y="591.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (24 samples, 0.03%)</title><rect x="7.1400%" y="565" width="0.0306%" height="15" fill="rgb(212,65,1)" fg:x="5599" fg:w="24"/><text x="7.3900%" y="575.50"></text></g><g><title>bcs::de::from_bytes_seed (24 samples, 0.03%)</title><rect x="7.1400%" y="549" width="0.0306%" height="15" fill="rgb(242,39,24)" fg:x="5599" fg:w="24"/><text x="7.3900%" y="559.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 0.03%)</title><rect x="7.1400%" y="533" width="0.0306%" height="15" fill="rgb(249,32,23)" fg:x="5599" fg:w="24"/><text x="7.3900%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (158 samples, 0.20%)</title><rect x="6.9704%" y="853" width="0.2015%" height="15" fill="rgb(251,195,23)" fg:x="5466" fg:w="158"/><text x="7.2204%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (158 samples, 0.20%)</title><rect x="6.9704%" y="837" width="0.2015%" height="15" fill="rgb(236,174,8)" fg:x="5466" fg:w="158"/><text x="7.2204%" y="847.50"></text></g><g><title>core::iter::adapters::try_process (158 samples, 0.20%)</title><rect x="6.9704%" y="821" width="0.2015%" height="15" fill="rgb(220,197,8)" fg:x="5466" fg:w="158"/><text x="7.2204%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (158 samples, 0.20%)</title><rect x="6.9704%" y="805" width="0.2015%" height="15" fill="rgb(240,108,37)" fg:x="5466" fg:w="158"/><text x="7.2204%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (158 samples, 0.20%)</title><rect x="6.9704%" y="789" width="0.2015%" height="15" fill="rgb(232,176,24)" fg:x="5466" fg:w="158"/><text x="7.2204%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (158 samples, 0.20%)</title><rect x="6.9704%" y="773" width="0.2015%" height="15" fill="rgb(243,35,29)" fg:x="5466" fg:w="158"/><text x="7.2204%" y="783.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (157 samples, 0.20%)</title><rect x="6.9717%" y="757" width="0.2002%" height="15" fill="rgb(210,37,18)" fg:x="5467" fg:w="157"/><text x="7.2217%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (157 samples, 0.20%)</title><rect x="6.9717%" y="741" width="0.2002%" height="15" fill="rgb(224,184,40)" fg:x="5467" fg:w="157"/><text x="7.2217%" y="751.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args (169 samples, 0.22%)</title><rect x="6.9679%" y="869" width="0.2155%" height="15" fill="rgb(236,39,29)" fg:x="5464" fg:w="169"/><text x="7.2179%" y="879.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (9 samples, 0.01%)</title><rect x="7.1719%" y="853" width="0.0115%" height="15" fill="rgb(232,48,39)" fg:x="5624" fg:w="9"/><text x="7.4219%" y="863.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (9 samples, 0.01%)</title><rect x="7.1719%" y="837" width="0.0115%" height="15" fill="rgb(236,34,42)" fg:x="5624" fg:w="9"/><text x="7.4219%" y="847.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::run_prologue_with_payload (2,640 samples, 3.37%)</title><rect x="3.8334%" y="949" width="3.3666%" height="15" fill="rgb(243,106,37)" fg:x="3006" fg:w="2640"/><text x="4.0834%" y="959.50">apt..</text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_script_prologue (2,622 samples, 3.34%)</title><rect x="3.8563%" y="933" width="3.3437%" height="15" fill="rgb(218,96,6)" fg:x="3024" fg:w="2622"/><text x="4.1063%" y="943.50">apt..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (2,513 samples, 3.20%)</title><rect x="3.9953%" y="917" width="3.2047%" height="15" fill="rgb(235,130,12)" fg:x="3133" fg:w="2513"/><text x="4.2453%" y="927.50">mov..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (2,513 samples, 3.20%)</title><rect x="3.9953%" y="901" width="3.2047%" height="15" fill="rgb(231,95,0)" fg:x="3133" fg:w="2513"/><text x="4.2453%" y="911.50">mov..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (2,383 samples, 3.04%)</title><rect x="4.1611%" y="885" width="3.0389%" height="15" fill="rgb(228,12,23)" fg:x="3263" fg:w="2383"/><text x="4.4111%" y="895.50">mov..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (13 samples, 0.02%)</title><rect x="7.1834%" y="869" width="0.0166%" height="15" fill="rgb(216,12,1)" fg:x="5633" fg:w="13"/><text x="7.4334%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.02%)</title><rect x="7.1834%" y="853" width="0.0166%" height="15" fill="rgb(219,59,3)" fg:x="5633" fg:w="13"/><text x="7.4334%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="7.1834%" y="837" width="0.0166%" height="15" fill="rgb(215,208,46)" fg:x="5633" fg:w="13"/><text x="7.4334%" y="847.50"></text></g><g><title>core::iter::adapters::try_process (13 samples, 0.02%)</title><rect x="7.1834%" y="821" width="0.0166%" height="15" fill="rgb(254,224,29)" fg:x="5633" fg:w="13"/><text x="7.4334%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (13 samples, 0.02%)</title><rect x="7.1834%" y="805" width="0.0166%" height="15" fill="rgb(232,14,29)" fg:x="5633" fg:w="13"/><text x="7.4334%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.02%)</title><rect x="7.1834%" y="789" width="0.0166%" height="15" fill="rgb(208,45,52)" fg:x="5633" fg:w="13"/><text x="7.4334%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="7.1834%" y="773" width="0.0166%" height="15" fill="rgb(234,191,28)" fg:x="5633" fg:w="13"/><text x="7.4334%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="7.1834%" y="757" width="0.0166%" height="15" fill="rgb(244,67,43)" fg:x="5633" fg:w="13"/><text x="7.4334%" y="767.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (12 samples, 0.02%)</title><rect x="7.2051%" y="725" width="0.0153%" height="15" fill="rgb(236,189,24)" fg:x="5650" fg:w="12"/><text x="7.4551%" y="735.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.02%)</title><rect x="7.2051%" y="709" width="0.0153%" height="15" fill="rgb(239,214,33)" fg:x="5650" fg:w="12"/><text x="7.4551%" y="719.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (12 samples, 0.02%)</title><rect x="7.2051%" y="693" width="0.0153%" height="15" fill="rgb(226,176,41)" fg:x="5650" fg:w="12"/><text x="7.4551%" y="703.50"></text></g><g><title> 32]&gt;::serialize (12 samples, 0.02%)</title><rect x="7.2051%" y="677" width="0.0153%" height="15" fill="rgb(248,47,8)" fg:x="5650" fg:w="12"/><text x="7.4551%" y="687.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (12 samples, 0.02%)</title><rect x="7.2051%" y="661" width="0.0153%" height="15" fill="rgb(218,81,44)" fg:x="5650" fg:w="12"/><text x="7.4551%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (8 samples, 0.01%)</title><rect x="7.2102%" y="645" width="0.0102%" height="15" fill="rgb(213,98,6)" fg:x="5654" fg:w="8"/><text x="7.4602%" y="655.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (8 samples, 0.01%)</title><rect x="7.2102%" y="629" width="0.0102%" height="15" fill="rgb(222,85,22)" fg:x="5654" fg:w="8"/><text x="7.4602%" y="639.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.01%)</title><rect x="7.2102%" y="613" width="0.0102%" height="15" fill="rgb(239,46,39)" fg:x="5654" fg:w="8"/><text x="7.4602%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.01%)</title><rect x="7.2102%" y="597" width="0.0102%" height="15" fill="rgb(237,12,29)" fg:x="5654" fg:w="8"/><text x="7.4602%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="7.2102%" y="581" width="0.0102%" height="15" fill="rgb(214,77,8)" fg:x="5654" fg:w="8"/><text x="7.4602%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.01%)</title><rect x="7.2102%" y="565" width="0.0102%" height="15" fill="rgb(217,168,37)" fg:x="5654" fg:w="8"/><text x="7.4602%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="7.2102%" y="549" width="0.0102%" height="15" fill="rgb(221,217,23)" fg:x="5654" fg:w="8"/><text x="7.4602%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="7.2102%" y="533" width="0.0102%" height="15" fill="rgb(243,229,36)" fg:x="5654" fg:w="8"/><text x="7.4602%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.01%)</title><rect x="7.2102%" y="517" width="0.0102%" height="15" fill="rgb(251,163,40)" fg:x="5654" fg:w="8"/><text x="7.4602%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.01%)</title><rect x="7.2102%" y="501" width="0.0102%" height="15" fill="rgb(237,222,12)" fg:x="5654" fg:w="8"/><text x="7.4602%" y="511.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (13 samples, 0.02%)</title><rect x="7.2344%" y="453" width="0.0166%" height="15" fill="rgb(248,132,6)" fg:x="5673" fg:w="13"/><text x="7.4844%" y="463.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 0.02%)</title><rect x="7.2344%" y="437" width="0.0166%" height="15" fill="rgb(227,167,50)" fg:x="5673" fg:w="13"/><text x="7.4844%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (13 samples, 0.02%)</title><rect x="7.2344%" y="421" width="0.0166%" height="15" fill="rgb(242,84,37)" fg:x="5673" fg:w="13"/><text x="7.4844%" y="431.50"></text></g><g><title> 32]&gt;::serialize (13 samples, 0.02%)</title><rect x="7.2344%" y="405" width="0.0166%" height="15" fill="rgb(212,4,50)" fg:x="5673" fg:w="13"/><text x="7.4844%" y="415.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (13 samples, 0.02%)</title><rect x="7.2344%" y="389" width="0.0166%" height="15" fill="rgb(230,228,32)" fg:x="5673" fg:w="13"/><text x="7.4844%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (13 samples, 0.02%)</title><rect x="7.2344%" y="373" width="0.0166%" height="15" fill="rgb(248,217,23)" fg:x="5673" fg:w="13"/><text x="7.4844%" y="383.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (13 samples, 0.02%)</title><rect x="7.2344%" y="357" width="0.0166%" height="15" fill="rgb(238,197,32)" fg:x="5673" fg:w="13"/><text x="7.4844%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (13 samples, 0.02%)</title><rect x="7.2344%" y="341" width="0.0166%" height="15" fill="rgb(236,106,1)" fg:x="5673" fg:w="13"/><text x="7.4844%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.02%)</title><rect x="7.2344%" y="325" width="0.0166%" height="15" fill="rgb(219,228,13)" fg:x="5673" fg:w="13"/><text x="7.4844%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.02%)</title><rect x="7.2344%" y="309" width="0.0166%" height="15" fill="rgb(238,30,35)" fg:x="5673" fg:w="13"/><text x="7.4844%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.02%)</title><rect x="7.2344%" y="293" width="0.0166%" height="15" fill="rgb(236,70,23)" fg:x="5673" fg:w="13"/><text x="7.4844%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.01%)</title><rect x="7.2395%" y="277" width="0.0115%" height="15" fill="rgb(249,104,48)" fg:x="5677" fg:w="9"/><text x="7.4895%" y="287.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (15 samples, 0.02%)</title><rect x="7.2331%" y="517" width="0.0191%" height="15" fill="rgb(254,117,50)" fg:x="5672" fg:w="15"/><text x="7.4831%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (15 samples, 0.02%)</title><rect x="7.2331%" y="501" width="0.0191%" height="15" fill="rgb(223,152,4)" fg:x="5672" fg:w="15"/><text x="7.4831%" y="511.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (15 samples, 0.02%)</title><rect x="7.2331%" y="485" width="0.0191%" height="15" fill="rgb(245,6,2)" fg:x="5672" fg:w="15"/><text x="7.4831%" y="495.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 0.02%)</title><rect x="7.2344%" y="469" width="0.0179%" height="15" fill="rgb(249,150,24)" fg:x="5673" fg:w="14"/><text x="7.4844%" y="479.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (26 samples, 0.03%)</title><rect x="7.2204%" y="725" width="0.0332%" height="15" fill="rgb(228,185,42)" fg:x="5662" fg:w="26"/><text x="7.4704%" y="735.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (26 samples, 0.03%)</title><rect x="7.2204%" y="709" width="0.0332%" height="15" fill="rgb(226,39,33)" fg:x="5662" fg:w="26"/><text x="7.4704%" y="719.50"></text></g><g><title>aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize (26 samples, 0.03%)</title><rect x="7.2204%" y="693" width="0.0332%" height="15" fill="rgb(221,166,19)" fg:x="5662" fg:w="26"/><text x="7.4704%" y="703.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 0.03%)</title><rect x="7.2229%" y="677" width="0.0306%" height="15" fill="rgb(209,109,2)" fg:x="5664" fg:w="24"/><text x="7.4729%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (16 samples, 0.02%)</title><rect x="7.2331%" y="661" width="0.0204%" height="15" fill="rgb(252,216,26)" fg:x="5672" fg:w="16"/><text x="7.4831%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (16 samples, 0.02%)</title><rect x="7.2331%" y="645" width="0.0204%" height="15" fill="rgb(227,173,36)" fg:x="5672" fg:w="16"/><text x="7.4831%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (16 samples, 0.02%)</title><rect x="7.2331%" y="629" width="0.0204%" height="15" fill="rgb(209,90,7)" fg:x="5672" fg:w="16"/><text x="7.4831%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.02%)</title><rect x="7.2331%" y="613" width="0.0204%" height="15" fill="rgb(250,194,11)" fg:x="5672" fg:w="16"/><text x="7.4831%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (16 samples, 0.02%)</title><rect x="7.2331%" y="597" width="0.0204%" height="15" fill="rgb(220,72,50)" fg:x="5672" fg:w="16"/><text x="7.4831%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (16 samples, 0.02%)</title><rect x="7.2331%" y="581" width="0.0204%" height="15" fill="rgb(222,106,48)" fg:x="5672" fg:w="16"/><text x="7.4831%" y="591.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (16 samples, 0.02%)</title><rect x="7.2331%" y="565" width="0.0204%" height="15" fill="rgb(216,220,45)" fg:x="5672" fg:w="16"/><text x="7.4831%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 0.02%)</title><rect x="7.2331%" y="549" width="0.0204%" height="15" fill="rgb(234,112,18)" fg:x="5672" fg:w="16"/><text x="7.4831%" y="559.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (16 samples, 0.02%)</title><rect x="7.2331%" y="533" width="0.0204%" height="15" fill="rgb(206,179,9)" fg:x="5672" fg:w="16"/><text x="7.4831%" y="543.50"></text></g><g><title>bcs::ser::to_bytes (43 samples, 0.05%)</title><rect x="7.2038%" y="789" width="0.0548%" height="15" fill="rgb(215,115,40)" fg:x="5649" fg:w="43"/><text x="7.4538%" y="799.50"></text></g><g><title>bcs::ser::serialize_into (43 samples, 0.05%)</title><rect x="7.2038%" y="773" width="0.0548%" height="15" fill="rgb(222,69,34)" fg:x="5649" fg:w="43"/><text x="7.4538%" y="783.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (43 samples, 0.05%)</title><rect x="7.2038%" y="757" width="0.0548%" height="15" fill="rgb(209,161,10)" fg:x="5649" fg:w="43"/><text x="7.4538%" y="767.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (43 samples, 0.05%)</title><rect x="7.2038%" y="741" width="0.0548%" height="15" fill="rgb(217,6,38)" fg:x="5649" fg:w="43"/><text x="7.4538%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (44 samples, 0.06%)</title><rect x="7.2038%" y="853" width="0.0561%" height="15" fill="rgb(229,229,48)" fg:x="5649" fg:w="44"/><text x="7.4538%" y="863.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (44 samples, 0.06%)</title><rect x="7.2038%" y="837" width="0.0561%" height="15" fill="rgb(225,21,28)" fg:x="5649" fg:w="44"/><text x="7.4538%" y="847.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (44 samples, 0.06%)</title><rect x="7.2038%" y="821" width="0.0561%" height="15" fill="rgb(206,33,13)" fg:x="5649" fg:w="44"/><text x="7.4538%" y="831.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::raw_txn_bytes_len::{{closure}} (44 samples, 0.06%)</title><rect x="7.2038%" y="805" width="0.0561%" height="15" fill="rgb(242,178,17)" fg:x="5649" fg:w="44"/><text x="7.4538%" y="815.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (47 samples, 0.06%)</title><rect x="7.2012%" y="885" width="0.0599%" height="15" fill="rgb(220,162,5)" fg:x="5647" fg:w="47"/><text x="7.4512%" y="895.50"></text></g><g><title>once_cell::imp::initialize_or_wait (45 samples, 0.06%)</title><rect x="7.2038%" y="869" width="0.0574%" height="15" fill="rgb(210,33,43)" fg:x="5649" fg:w="45"/><text x="7.4538%" y="879.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::raw_txn_bytes_len (48 samples, 0.06%)</title><rect x="7.2012%" y="933" width="0.0612%" height="15" fill="rgb(216,116,54)" fg:x="5647" fg:w="48"/><text x="7.4512%" y="943.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (48 samples, 0.06%)</title><rect x="7.2012%" y="917" width="0.0612%" height="15" fill="rgb(249,92,24)" fg:x="5647" fg:w="48"/><text x="7.4512%" y="927.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (48 samples, 0.06%)</title><rect x="7.2012%" y="901" width="0.0612%" height="15" fill="rgb(231,189,14)" fg:x="5647" fg:w="48"/><text x="7.4512%" y="911.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key (22 samples, 0.03%)</title><rect x="7.2663%" y="933" width="0.0281%" height="15" fill="rgb(230,8,41)" fg:x="5698" fg:w="22"/><text x="7.5163%" y="943.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::from_preimage (16 samples, 0.02%)</title><rect x="7.2739%" y="917" width="0.0204%" height="15" fill="rgb(249,7,27)" fg:x="5704" fg:w="16"/><text x="7.5239%" y="927.50"></text></g><g><title>aptos_crypto::hash::HashValue::sha3_256_of (16 samples, 0.02%)</title><rect x="7.2739%" y="901" width="0.0204%" height="15" fill="rgb(232,86,5)" fg:x="5704" fg:w="16"/><text x="7.5239%" y="911.50"></text></g><g><title>aptos_crypto::hash::HashValue::from_keccak (16 samples, 0.02%)</title><rect x="7.2739%" y="885" width="0.0204%" height="15" fill="rgb(224,175,18)" fg:x="5704" fg:w="16"/><text x="7.5239%" y="895.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (16 samples, 0.02%)</title><rect x="7.2739%" y="869" width="0.0204%" height="15" fill="rgb(220,129,12)" fg:x="5704" fg:w="16"/><text x="7.5239%" y="879.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (16 samples, 0.02%)</title><rect x="7.2739%" y="853" width="0.0204%" height="15" fill="rgb(210,19,36)" fg:x="5704" fg:w="16"/><text x="7.5239%" y="863.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (16 samples, 0.02%)</title><rect x="7.2739%" y="837" width="0.0204%" height="15" fill="rgb(219,96,14)" fg:x="5704" fg:w="16"/><text x="7.5239%" y="847.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (16 samples, 0.02%)</title><rect x="7.2739%" y="821" width="0.0204%" height="15" fill="rgb(249,106,1)" fg:x="5704" fg:w="16"/><text x="7.5239%" y="831.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (16 samples, 0.02%)</title><rect x="7.2739%" y="805" width="0.0204%" height="15" fill="rgb(249,155,20)" fg:x="5704" fg:w="16"/><text x="7.5239%" y="815.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (16 samples, 0.02%)</title><rect x="7.2739%" y="789" width="0.0204%" height="15" fill="rgb(244,168,9)" fg:x="5704" fg:w="16"/><text x="7.5239%" y="799.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (16 samples, 0.02%)</title><rect x="7.2739%" y="773" width="0.0204%" height="15" fill="rgb(216,23,50)" fg:x="5704" fg:w="16"/><text x="7.5239%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16 samples, 0.02%)</title><rect x="7.2739%" y="757" width="0.0204%" height="15" fill="rgb(224,219,20)" fg:x="5704" fg:w="16"/><text x="7.5239%" y="767.50"></text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::new (75 samples, 0.10%)</title><rect x="7.2000%" y="949" width="0.0956%" height="15" fill="rgb(222,156,15)" fg:x="5646" fg:w="75"/><text x="7.4500%" y="959.50"></text></g><g><title>aptos_vm::adapter_common::validate_signature_checked_transaction (2,739 samples, 3.49%)</title><rect x="3.8066%" y="981" width="3.4929%" height="15" fill="rgb(231,97,17)" fg:x="2985" fg:w="2739"/><text x="4.0566%" y="991.50">apt..</text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::run_prologue (2,722 samples, 3.47%)</title><rect x="3.8283%" y="965" width="3.4712%" height="15" fill="rgb(218,70,48)" fg:x="3002" fg:w="2722"/><text x="4.0783%" y="975.50">&lt;ap..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (31 samples, 0.04%)</title><rect x="7.3007%" y="965" width="0.0395%" height="15" fill="rgb(212,196,52)" fg:x="5725" fg:w="31"/><text x="7.5507%" y="975.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="7.3402%" y="901" width="0.0140%" height="15" fill="rgb(243,203,18)" fg:x="5756" fg:w="11"/><text x="7.5902%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="7.3428%" y="885" width="0.0115%" height="15" fill="rgb(252,125,41)" fg:x="5758" fg:w="9"/><text x="7.5928%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 0.02%)</title><rect x="7.3402%" y="965" width="0.0217%" height="15" fill="rgb(223,180,33)" fg:x="5756" fg:w="17"/><text x="7.5902%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="7.3402%" y="949" width="0.0217%" height="15" fill="rgb(254,159,46)" fg:x="5756" fg:w="17"/><text x="7.5902%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="7.3402%" y="933" width="0.0217%" height="15" fill="rgb(254,38,10)" fg:x="5756" fg:w="17"/><text x="7.5902%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="7.3402%" y="917" width="0.0217%" height="15" fill="rgb(208,217,32)" fg:x="5756" fg:w="17"/><text x="7.5902%" y="927.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="7.3709%" y="917" width="0.0128%" height="15" fill="rgb(221,120,13)" fg:x="5780" fg:w="10"/><text x="7.6209%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="7.3709%" y="901" width="0.0128%" height="15" fill="rgb(246,54,52)" fg:x="5780" fg:w="10"/><text x="7.6209%" y="911.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::charge_write_set_gas (19 samples, 0.02%)</title><rect x="7.3645%" y="965" width="0.0242%" height="15" fill="rgb(242,34,25)" fg:x="5775" fg:w="19"/><text x="7.6145%" y="975.50"></text></g><g><title>aptos_gas::transaction::storage::StoragePricing::calculate_write_set_gas (16 samples, 0.02%)</title><rect x="7.3683%" y="949" width="0.0204%" height="15" fill="rgb(247,209,9)" fg:x="5778" fg:w="16"/><text x="7.6183%" y="959.50"></text></g><g><title>aptos_gas::transaction::storage::StoragePricingV2::calculate_write_set_gas (14 samples, 0.02%)</title><rect x="7.3709%" y="933" width="0.0179%" height="15" fill="rgb(228,71,26)" fg:x="5780" fg:w="14"/><text x="7.6209%" y="943.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::resolve_pending_code_publish (16 samples, 0.02%)</title><rect x="7.3887%" y="965" width="0.0204%" height="15" fill="rgb(222,145,49)" fg:x="5794" fg:w="16"/><text x="7.6387%" y="975.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::extract_publish_request (16 samples, 0.02%)</title><rect x="7.3887%" y="949" width="0.0204%" height="15" fill="rgb(218,121,17)" fg:x="5794" fg:w="16"/><text x="7.6387%" y="959.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::get_mut (16 samples, 0.02%)</title><rect x="7.3887%" y="933" width="0.0204%" height="15" fill="rgb(244,50,7)" fg:x="5794" fg:w="16"/><text x="7.6387%" y="943.50"></text></g><g><title>aptos_aggregator::delta_change_set::DeltaChangeSet::try_into_write_set_mut (8 samples, 0.01%)</title><rect x="7.4333%" y="949" width="0.0102%" height="15" fill="rgb(246,229,37)" fg:x="5829" fg:w="8"/><text x="7.6833%" y="959.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (8 samples, 0.01%)</title><rect x="7.4920%" y="917" width="0.0102%" height="15" fill="rgb(225,18,5)" fg:x="5875" fg:w="8"/><text x="7.7420%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (8 samples, 0.01%)</title><rect x="7.4920%" y="901" width="0.0102%" height="15" fill="rgb(213,204,8)" fg:x="5875" fg:w="8"/><text x="7.7420%" y="911.50"></text></g><g><title>aptos_types::transaction::change_set::ChangeSet::new (11 samples, 0.01%)</title><rect x="7.5035%" y="917" width="0.0140%" height="15" fill="rgb(238,103,6)" fg:x="5884" fg:w="11"/><text x="7.7535%" y="927.50"></text></g><g><title>&lt;aptos_gas::transaction::storage::ChangeSetConfigs as aptos_types::transaction::change_set::CheckChangeSet&gt;::check_change_set (9 samples, 0.01%)</title><rect x="7.5060%" y="901" width="0.0115%" height="15" fill="rgb(222,25,35)" fg:x="5886" fg:w="9"/><text x="7.7560%" y="911.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::squash_change_set (48 samples, 0.06%)</title><rect x="7.4576%" y="933" width="0.0612%" height="15" fill="rgb(213,203,35)" fg:x="5848" fg:w="48"/><text x="7.7076%" y="943.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::squash (91 samples, 0.12%)</title><rect x="7.4461%" y="949" width="0.1160%" height="15" fill="rgb(221,79,53)" fg:x="5839" fg:w="91"/><text x="7.6961%" y="959.50"></text></g><g><title>aptos_aggregator::transaction::ChangeSetExt::squash_delta_change_set (34 samples, 0.04%)</title><rect x="7.5188%" y="933" width="0.0434%" height="15" fill="rgb(243,200,35)" fg:x="5896" fg:w="34"/><text x="7.7688%" y="943.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (35 samples, 0.04%)</title><rect x="7.5762%" y="885" width="0.0446%" height="15" fill="rgb(248,60,25)" fg:x="5941" fg:w="35"/><text x="7.8262%" y="895.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (35 samples, 0.04%)</title><rect x="7.5762%" y="869" width="0.0446%" height="15" fill="rgb(227,53,46)" fg:x="5941" fg:w="35"/><text x="7.8262%" y="879.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (35 samples, 0.04%)</title><rect x="7.5762%" y="853" width="0.0446%" height="15" fill="rgb(216,120,32)" fg:x="5941" fg:w="35"/><text x="7.8262%" y="863.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (34 samples, 0.04%)</title><rect x="7.5774%" y="837" width="0.0434%" height="15" fill="rgb(220,134,1)" fg:x="5942" fg:w="34"/><text x="7.8274%" y="847.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (34 samples, 0.04%)</title><rect x="7.5774%" y="821" width="0.0434%" height="15" fill="rgb(237,168,5)" fg:x="5942" fg:w="34"/><text x="7.8274%" y="831.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (34 samples, 0.04%)</title><rect x="7.5774%" y="805" width="0.0434%" height="15" fill="rgb(231,100,33)" fg:x="5942" fg:w="34"/><text x="7.8274%" y="815.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (34 samples, 0.04%)</title><rect x="7.5774%" y="789" width="0.0434%" height="15" fill="rgb(236,177,47)" fg:x="5942" fg:w="34"/><text x="7.8274%" y="799.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (34 samples, 0.04%)</title><rect x="7.5774%" y="773" width="0.0434%" height="15" fill="rgb(235,7,49)" fg:x="5942" fg:w="34"/><text x="7.8274%" y="783.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (34 samples, 0.04%)</title><rect x="7.5774%" y="757" width="0.0434%" height="15" fill="rgb(232,119,22)" fg:x="5942" fg:w="34"/><text x="7.8274%" y="767.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::update (15 samples, 0.02%)</title><rect x="7.6348%" y="677" width="0.0191%" height="15" fill="rgb(254,73,53)" fg:x="5987" fg:w="15"/><text x="7.8848%" y="687.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (34 samples, 0.04%)</title><rect x="7.6259%" y="821" width="0.0434%" height="15" fill="rgb(251,35,20)" fg:x="5980" fg:w="34"/><text x="7.8759%" y="831.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (34 samples, 0.04%)</title><rect x="7.6259%" y="805" width="0.0434%" height="15" fill="rgb(241,119,20)" fg:x="5980" fg:w="34"/><text x="7.8759%" y="815.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (34 samples, 0.04%)</title><rect x="7.6259%" y="789" width="0.0434%" height="15" fill="rgb(207,102,14)" fg:x="5980" fg:w="34"/><text x="7.8759%" y="799.50"></text></g><g><title> 32]&gt;::serialize (34 samples, 0.04%)</title><rect x="7.6259%" y="773" width="0.0434%" height="15" fill="rgb(248,201,50)" fg:x="5980" fg:w="34"/><text x="7.8759%" y="783.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (34 samples, 0.04%)</title><rect x="7.6259%" y="757" width="0.0434%" height="15" fill="rgb(222,185,44)" fg:x="5980" fg:w="34"/><text x="7.8759%" y="767.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (34 samples, 0.04%)</title><rect x="7.6259%" y="741" width="0.0434%" height="15" fill="rgb(218,107,18)" fg:x="5980" fg:w="34"/><text x="7.8759%" y="751.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (34 samples, 0.04%)</title><rect x="7.6259%" y="725" width="0.0434%" height="15" fill="rgb(237,177,39)" fg:x="5980" fg:w="34"/><text x="7.8759%" y="735.50"></text></g><g><title>std::io::Write::write_all (34 samples, 0.04%)</title><rect x="7.6259%" y="709" width="0.0434%" height="15" fill="rgb(246,69,6)" fg:x="5980" fg:w="34"/><text x="7.8759%" y="719.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as std::io::Write&gt;::write (34 samples, 0.04%)</title><rect x="7.6259%" y="693" width="0.0434%" height="15" fill="rgb(234,208,37)" fg:x="5980" fg:w="34"/><text x="7.8759%" y="703.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (12 samples, 0.02%)</title><rect x="7.6540%" y="677" width="0.0153%" height="15" fill="rgb(225,4,6)" fg:x="6002" fg:w="12"/><text x="7.9040%" y="687.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (38 samples, 0.05%)</title><rect x="7.6259%" y="837" width="0.0485%" height="15" fill="rgb(233,45,0)" fg:x="5980" fg:w="38"/><text x="7.8759%" y="847.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::as_uuid (84 samples, 0.11%)</title><rect x="7.5749%" y="917" width="0.1071%" height="15" fill="rgb(226,136,5)" fg:x="5940" fg:w="84"/><text x="7.8249%" y="927.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (83 samples, 0.11%)</title><rect x="7.5762%" y="901" width="0.1058%" height="15" fill="rgb(211,91,47)" fg:x="5941" fg:w="83"/><text x="7.8262%" y="911.50"></text></g><g><title>bcs::ser::serialize_into (44 samples, 0.06%)</title><rect x="7.6259%" y="885" width="0.0561%" height="15" fill="rgb(242,88,51)" fg:x="5980" fg:w="44"/><text x="7.8759%" y="895.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (44 samples, 0.06%)</title><rect x="7.6259%" y="869" width="0.0561%" height="15" fill="rgb(230,91,28)" fg:x="5980" fg:w="44"/><text x="7.8759%" y="879.50"></text></g><g><title>aptos_vm::move_vm_ext::session::_::&lt;impl serde::ser::Serialize for aptos_vm::move_vm_ext::session::SessionId&gt;::serialize (44 samples, 0.06%)</title><rect x="7.6259%" y="853" width="0.0561%" height="15" fill="rgb(254,186,29)" fg:x="5980" fg:w="44"/><text x="7.8759%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="7.7101%" y="853" width="0.0128%" height="15" fill="rgb(238,6,4)" fg:x="6046" fg:w="10"/><text x="7.9601%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.01%)</title><rect x="7.7101%" y="837" width="0.0128%" height="15" fill="rgb(221,151,16)" fg:x="6046" fg:w="10"/><text x="7.9601%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (8 samples, 0.01%)</title><rect x="7.7126%" y="821" width="0.0102%" height="15" fill="rgb(251,143,52)" fg:x="6048" fg:w="8"/><text x="7.9626%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (8 samples, 0.01%)</title><rect x="7.7126%" y="805" width="0.0102%" height="15" fill="rgb(206,90,15)" fg:x="6048" fg:w="8"/><text x="7.9626%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (19 samples, 0.02%)</title><rect x="7.7101%" y="869" width="0.0242%" height="15" fill="rgb(218,35,8)" fg:x="6046" fg:w="19"/><text x="7.9601%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (9 samples, 0.01%)</title><rect x="7.7228%" y="853" width="0.0115%" height="15" fill="rgb(239,215,6)" fg:x="6056" fg:w="9"/><text x="7.9728%" y="863.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (133 samples, 0.17%)</title><rect x="7.5672%" y="949" width="0.1696%" height="15" fill="rgb(245,116,39)" fg:x="5934" fg:w="133"/><text x="7.8172%" y="959.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (133 samples, 0.17%)</title><rect x="7.5672%" y="933" width="0.1696%" height="15" fill="rgb(242,65,28)" fg:x="5934" fg:w="133"/><text x="7.8172%" y="943.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (39 samples, 0.05%)</title><rect x="7.6871%" y="917" width="0.0497%" height="15" fill="rgb(252,132,53)" fg:x="6028" fg:w="39"/><text x="7.9371%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (28 samples, 0.04%)</title><rect x="7.7011%" y="901" width="0.0357%" height="15" fill="rgb(224,159,50)" fg:x="6039" fg:w="28"/><text x="7.9511%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.04%)</title><rect x="7.7011%" y="885" width="0.0357%" height="15" fill="rgb(224,93,4)" fg:x="6039" fg:w="28"/><text x="7.9511%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (8 samples, 0.01%)</title><rect x="7.7585%" y="597" width="0.0102%" height="15" fill="rgb(208,81,34)" fg:x="6084" fg:w="8"/><text x="8.0085%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.01%)</title><rect x="7.7585%" y="581" width="0.0102%" height="15" fill="rgb(233,92,54)" fg:x="6084" fg:w="8"/><text x="8.0085%" y="591.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (12 samples, 0.02%)</title><rect x="7.7585%" y="677" width="0.0153%" height="15" fill="rgb(237,21,14)" fg:x="6084" fg:w="12"/><text x="8.0085%" y="687.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (12 samples, 0.02%)</title><rect x="7.7585%" y="661" width="0.0153%" height="15" fill="rgb(249,128,51)" fg:x="6084" fg:w="12"/><text x="8.0085%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.02%)</title><rect x="7.7585%" y="645" width="0.0153%" height="15" fill="rgb(223,129,24)" fg:x="6084" fg:w="12"/><text x="8.0085%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.02%)</title><rect x="7.7585%" y="629" width="0.0153%" height="15" fill="rgb(231,168,25)" fg:x="6084" fg:w="12"/><text x="8.0085%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.02%)</title><rect x="7.7585%" y="613" width="0.0153%" height="15" fill="rgb(224,39,20)" fg:x="6084" fg:w="12"/><text x="8.0085%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.03%)</title><rect x="7.7547%" y="853" width="0.0319%" height="15" fill="rgb(225,152,53)" fg:x="6081" fg:w="25"/><text x="8.0047%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (25 samples, 0.03%)</title><rect x="7.7547%" y="837" width="0.0319%" height="15" fill="rgb(252,17,24)" fg:x="6081" fg:w="25"/><text x="8.0047%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (25 samples, 0.03%)</title><rect x="7.7547%" y="821" width="0.0319%" height="15" fill="rgb(250,114,30)" fg:x="6081" fg:w="25"/><text x="8.0047%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.03%)</title><rect x="7.7547%" y="805" width="0.0319%" height="15" fill="rgb(229,5,4)" fg:x="6081" fg:w="25"/><text x="8.0047%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.03%)</title><rect x="7.7547%" y="789" width="0.0319%" height="15" fill="rgb(225,176,49)" fg:x="6081" fg:w="25"/><text x="8.0047%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (25 samples, 0.03%)</title><rect x="7.7547%" y="773" width="0.0319%" height="15" fill="rgb(224,221,49)" fg:x="6081" fg:w="25"/><text x="8.0047%" y="783.50"></text></g><g><title>move_core_types::value::serialize_values::{{closure}} (25 samples, 0.03%)</title><rect x="7.7547%" y="757" width="0.0319%" height="15" fill="rgb(253,169,27)" fg:x="6081" fg:w="25"/><text x="8.0047%" y="767.50"></text></g><g><title>move_core_types::value::MoveValue::simple_serialize (25 samples, 0.03%)</title><rect x="7.7547%" y="741" width="0.0319%" height="15" fill="rgb(211,206,16)" fg:x="6081" fg:w="25"/><text x="8.0047%" y="751.50"></text></g><g><title>bcs::ser::to_bytes (22 samples, 0.03%)</title><rect x="7.7585%" y="725" width="0.0281%" height="15" fill="rgb(244,87,35)" fg:x="6084" fg:w="22"/><text x="8.0085%" y="735.50"></text></g><g><title>bcs::ser::serialize_into (22 samples, 0.03%)</title><rect x="7.7585%" y="709" width="0.0281%" height="15" fill="rgb(246,28,10)" fg:x="6084" fg:w="22"/><text x="8.0085%" y="719.50"></text></g><g><title>&lt;move_core_types::value::MoveValue as serde::ser::Serialize&gt;::serialize (22 samples, 0.03%)</title><rect x="7.7585%" y="693" width="0.0281%" height="15" fill="rgb(229,12,44)" fg:x="6084" fg:w="22"/><text x="8.0085%" y="703.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (10 samples, 0.01%)</title><rect x="7.7738%" y="677" width="0.0128%" height="15" fill="rgb(210,145,37)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="687.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.01%)</title><rect x="7.7738%" y="661" width="0.0128%" height="15" fill="rgb(227,112,52)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (10 samples, 0.01%)</title><rect x="7.7738%" y="645" width="0.0128%" height="15" fill="rgb(238,155,34)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="655.50"></text></g><g><title> 32]&gt;::serialize (10 samples, 0.01%)</title><rect x="7.7738%" y="629" width="0.0128%" height="15" fill="rgb(239,226,36)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="639.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (10 samples, 0.01%)</title><rect x="7.7738%" y="613" width="0.0128%" height="15" fill="rgb(230,16,23)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (10 samples, 0.01%)</title><rect x="7.7738%" y="597" width="0.0128%" height="15" fill="rgb(236,171,36)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="607.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (10 samples, 0.01%)</title><rect x="7.7738%" y="581" width="0.0128%" height="15" fill="rgb(221,22,14)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="591.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (10 samples, 0.01%)</title><rect x="7.7738%" y="565" width="0.0128%" height="15" fill="rgb(242,43,11)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.01%)</title><rect x="7.7738%" y="549" width="0.0128%" height="15" fill="rgb(232,69,23)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.01%)</title><rect x="7.7738%" y="533" width="0.0128%" height="15" fill="rgb(216,180,54)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.01%)</title><rect x="7.7738%" y="517" width="0.0128%" height="15" fill="rgb(216,5,24)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="7.7738%" y="501" width="0.0128%" height="15" fill="rgb(225,89,9)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="7.7738%" y="485" width="0.0128%" height="15" fill="rgb(243,75,33)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.01%)</title><rect x="7.7738%" y="469" width="0.0128%" height="15" fill="rgb(247,141,45)" fg:x="6096" fg:w="10"/><text x="8.0238%" y="479.50"></text></g><g><title>move_core_types::value::serialize_values (26 samples, 0.03%)</title><rect x="7.7547%" y="933" width="0.0332%" height="15" fill="rgb(232,177,36)" fg:x="6081" fg:w="26"/><text x="8.0047%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.03%)</title><rect x="7.7547%" y="917" width="0.0332%" height="15" fill="rgb(219,125,36)" fg:x="6081" fg:w="26"/><text x="8.0047%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.03%)</title><rect x="7.7547%" y="901" width="0.0332%" height="15" fill="rgb(227,94,9)" fg:x="6081" fg:w="26"/><text x="8.0047%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.03%)</title><rect x="7.7547%" y="885" width="0.0332%" height="15" fill="rgb(240,34,52)" fg:x="6081" fg:w="26"/><text x="8.0047%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (26 samples, 0.03%)</title><rect x="7.7547%" y="869" width="0.0332%" height="15" fill="rgb(216,45,12)" fg:x="6081" fg:w="26"/><text x="8.0047%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.01%)</title><rect x="7.8389%" y="757" width="0.0115%" height="15" fill="rgb(246,21,19)" fg:x="6147" fg:w="9"/><text x="8.0889%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9 samples, 0.01%)</title><rect x="7.8389%" y="741" width="0.0115%" height="15" fill="rgb(213,98,42)" fg:x="6147" fg:w="9"/><text x="8.0889%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.03%)</title><rect x="7.8503%" y="757" width="0.0268%" height="15" fill="rgb(250,136,47)" fg:x="6156" fg:w="21"/><text x="8.1003%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (14 samples, 0.02%)</title><rect x="7.8593%" y="741" width="0.0179%" height="15" fill="rgb(251,124,27)" fg:x="6163" fg:w="14"/><text x="8.1093%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.02%)</title><rect x="7.8593%" y="725" width="0.0179%" height="15" fill="rgb(229,180,14)" fg:x="6163" fg:w="14"/><text x="8.1093%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.01%)</title><rect x="7.8644%" y="709" width="0.0128%" height="15" fill="rgb(245,216,25)" fg:x="6167" fg:w="10"/><text x="8.1144%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (45 samples, 0.06%)</title><rect x="7.8210%" y="885" width="0.0574%" height="15" fill="rgb(251,43,5)" fg:x="6133" fg:w="45"/><text x="8.0710%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (45 samples, 0.06%)</title><rect x="7.8210%" y="869" width="0.0574%" height="15" fill="rgb(250,128,24)" fg:x="6133" fg:w="45"/><text x="8.0710%" y="879.50"></text></g><g><title>core::iter::adapters::try_process (45 samples, 0.06%)</title><rect x="7.8210%" y="853" width="0.0574%" height="15" fill="rgb(217,117,27)" fg:x="6133" fg:w="45"/><text x="8.0710%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (36 samples, 0.05%)</title><rect x="7.8325%" y="837" width="0.0459%" height="15" fill="rgb(245,147,4)" fg:x="6142" fg:w="36"/><text x="8.0825%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (36 samples, 0.05%)</title><rect x="7.8325%" y="821" width="0.0459%" height="15" fill="rgb(242,201,35)" fg:x="6142" fg:w="36"/><text x="8.0825%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (36 samples, 0.05%)</title><rect x="7.8325%" y="805" width="0.0459%" height="15" fill="rgb(218,181,1)" fg:x="6142" fg:w="36"/><text x="8.0825%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 0.05%)</title><rect x="7.8325%" y="789" width="0.0459%" height="15" fill="rgb(222,6,29)" fg:x="6142" fg:w="36"/><text x="8.0825%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (31 samples, 0.04%)</title><rect x="7.8389%" y="773" width="0.0395%" height="15" fill="rgb(208,186,3)" fg:x="6147" fg:w="31"/><text x="8.0889%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (16 samples, 0.02%)</title><rect x="7.8784%" y="885" width="0.0204%" height="15" fill="rgb(216,36,26)" fg:x="6178" fg:w="16"/><text x="8.1284%" y="895.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (12 samples, 0.02%)</title><rect x="7.8835%" y="869" width="0.0153%" height="15" fill="rgb(248,201,23)" fg:x="6182" fg:w="12"/><text x="8.1335%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (8 samples, 0.01%)</title><rect x="7.9001%" y="869" width="0.0102%" height="15" fill="rgb(251,170,31)" fg:x="6195" fg:w="8"/><text x="8.1501%" y="879.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name::{{closure}} (8 samples, 0.01%)</title><rect x="7.9001%" y="853" width="0.0102%" height="15" fill="rgb(207,110,25)" fg:x="6195" fg:w="8"/><text x="8.1501%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.01%)</title><rect x="7.9001%" y="837" width="0.0102%" height="15" fill="rgb(250,54,15)" fg:x="6195" fg:w="8"/><text x="8.1501%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.01%)</title><rect x="7.9001%" y="821" width="0.0102%" height="15" fill="rgb(227,68,33)" fg:x="6195" fg:w="8"/><text x="8.1501%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.01%)</title><rect x="7.9001%" y="805" width="0.0102%" height="15" fill="rgb(238,34,41)" fg:x="6195" fg:w="8"/><text x="8.1501%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (88 samples, 0.11%)</title><rect x="7.8019%" y="901" width="0.1122%" height="15" fill="rgb(220,11,15)" fg:x="6118" fg:w="88"/><text x="8.0519%" y="911.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (11 samples, 0.01%)</title><rect x="7.9001%" y="885" width="0.0140%" height="15" fill="rgb(246,111,35)" fg:x="6195" fg:w="11"/><text x="8.1501%" y="895.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (11 samples, 0.01%)</title><rect x="7.9320%" y="757" width="0.0140%" height="15" fill="rgb(209,88,53)" fg:x="6220" fg:w="11"/><text x="8.1820%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="7.9320%" y="741" width="0.0140%" height="15" fill="rgb(231,185,47)" fg:x="6220" fg:w="11"/><text x="8.1820%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="7.9320%" y="725" width="0.0140%" height="15" fill="rgb(233,154,1)" fg:x="6220" fg:w="11"/><text x="8.1820%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="7.9320%" y="709" width="0.0140%" height="15" fill="rgb(225,15,46)" fg:x="6220" fg:w="11"/><text x="8.1820%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (11 samples, 0.01%)</title><rect x="7.9320%" y="693" width="0.0140%" height="15" fill="rgb(211,135,41)" fg:x="6220" fg:w="11"/><text x="8.1820%" y="703.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl::{{closure}} (8 samples, 0.01%)</title><rect x="7.9358%" y="677" width="0.0102%" height="15" fill="rgb(208,54,0)" fg:x="6223" fg:w="8"/><text x="8.1858%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.03%)</title><rect x="7.9141%" y="885" width="0.0332%" height="15" fill="rgb(244,136,14)" fg:x="6206" fg:w="26"/><text x="8.1641%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (22 samples, 0.03%)</title><rect x="7.9192%" y="869" width="0.0281%" height="15" fill="rgb(241,56,14)" fg:x="6210" fg:w="22"/><text x="8.1692%" y="879.50"></text></g><g><title>core::iter::adapters::try_process (22 samples, 0.03%)</title><rect x="7.9192%" y="853" width="0.0281%" height="15" fill="rgb(205,80,24)" fg:x="6210" fg:w="22"/><text x="8.1692%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (16 samples, 0.02%)</title><rect x="7.9269%" y="837" width="0.0204%" height="15" fill="rgb(220,57,4)" fg:x="6216" fg:w="16"/><text x="8.1769%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.02%)</title><rect x="7.9269%" y="821" width="0.0204%" height="15" fill="rgb(226,193,50)" fg:x="6216" fg:w="16"/><text x="8.1769%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="7.9269%" y="805" width="0.0204%" height="15" fill="rgb(231,168,22)" fg:x="6216" fg:w="16"/><text x="8.1769%" y="815.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="7.9269%" y="789" width="0.0204%" height="15" fill="rgb(254,215,14)" fg:x="6216" fg:w="16"/><text x="8.1769%" y="799.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (13 samples, 0.02%)</title><rect x="7.9307%" y="773" width="0.0166%" height="15" fill="rgb(211,115,16)" fg:x="6219" fg:w="13"/><text x="8.1807%" y="783.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (11 samples, 0.01%)</title><rect x="8.0812%" y="789" width="0.0140%" height="15" fill="rgb(236,210,16)" fg:x="6337" fg:w="11"/><text x="8.3312%" y="799.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (11 samples, 0.01%)</title><rect x="8.0812%" y="773" width="0.0140%" height="15" fill="rgb(221,94,12)" fg:x="6337" fg:w="11"/><text x="8.3312%" y="783.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (11 samples, 0.01%)</title><rect x="8.0812%" y="757" width="0.0140%" height="15" fill="rgb(235,218,49)" fg:x="6337" fg:w="11"/><text x="8.3312%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (11 samples, 0.01%)</title><rect x="8.0812%" y="741" width="0.0140%" height="15" fill="rgb(217,114,14)" fg:x="6337" fg:w="11"/><text x="8.3312%" y="751.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (11 samples, 0.01%)</title><rect x="8.0812%" y="725" width="0.0140%" height="15" fill="rgb(216,145,22)" fg:x="6337" fg:w="11"/><text x="8.3312%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (11 samples, 0.01%)</title><rect x="8.0812%" y="709" width="0.0140%" height="15" fill="rgb(217,112,39)" fg:x="6337" fg:w="11"/><text x="8.3312%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="8.0952%" y="677" width="0.0140%" height="15" fill="rgb(225,85,32)" fg:x="6348" fg:w="11"/><text x="8.3452%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (11 samples, 0.01%)</title><rect x="8.0952%" y="661" width="0.0140%" height="15" fill="rgb(245,209,47)" fg:x="6348" fg:w="11"/><text x="8.3452%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (9 samples, 0.01%)</title><rect x="8.0977%" y="645" width="0.0115%" height="15" fill="rgb(218,220,15)" fg:x="6350" fg:w="9"/><text x="8.3477%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="8.0952%" y="741" width="0.0204%" height="15" fill="rgb(222,202,31)" fg:x="6348" fg:w="16"/><text x="8.3452%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="8.0952%" y="725" width="0.0204%" height="15" fill="rgb(243,203,4)" fg:x="6348" fg:w="16"/><text x="8.3452%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="8.0952%" y="709" width="0.0204%" height="15" fill="rgb(237,92,17)" fg:x="6348" fg:w="16"/><text x="8.3452%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (16 samples, 0.02%)</title><rect x="8.0952%" y="693" width="0.0204%" height="15" fill="rgb(231,119,7)" fg:x="6348" fg:w="16"/><text x="8.3452%" y="703.50"></text></g><g><title>&lt;move_vm_types::gas::UnmeteredGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame (34 samples, 0.04%)</title><rect x="8.0812%" y="853" width="0.0434%" height="15" fill="rgb(237,82,41)" fg:x="6337" fg:w="34"/><text x="8.3312%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;,move_vm_runtime::interpreter::Interpreter::execute_main&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::delta_state_view::DeltaStateView&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_block_executor::view::LatestView&lt;aptos_vm::adapter_common::PreprocessedTransaction,&amp;aptos_storage_interface::cached_state_view::CachedStateView&gt;&gt;&gt;&gt;&gt;&gt;,move_vm_types::gas::UnmeteredGasMeter&gt;::{{closure}}&gt;&gt; (34 samples, 0.04%)</title><rect x="8.0812%" y="837" width="0.0434%" height="15" fill="rgb(226,81,48)" fg:x="6337" fg:w="34"/><text x="8.3312%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (34 samples, 0.04%)</title><rect x="8.0812%" y="821" width="0.0434%" height="15" fill="rgb(234,70,51)" fg:x="6337" fg:w="34"/><text x="8.3312%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.04%)</title><rect x="8.0812%" y="805" width="0.0434%" height="15" fill="rgb(251,86,4)" fg:x="6337" fg:w="34"/><text x="8.3312%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(usize,move_vm_types::values::values_impl::Value)]&gt; (23 samples, 0.03%)</title><rect x="8.0952%" y="789" width="0.0293%" height="15" fill="rgb(244,144,28)" fg:x="6348" fg:w="23"/><text x="8.3452%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,move_vm_types::values::values_impl::Value)&gt; (23 samples, 0.03%)</title><rect x="8.0952%" y="773" width="0.0293%" height="15" fill="rgb(232,161,39)" fg:x="6348" fg:w="23"/><text x="8.3452%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (23 samples, 0.03%)</title><rect x="8.0952%" y="757" width="0.0293%" height="15" fill="rgb(247,34,51)" fg:x="6348" fg:w="23"/><text x="8.3452%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="8.1449%" y="757" width="0.0115%" height="15" fill="rgb(225,132,2)" fg:x="6387" fg:w="9"/><text x="8.3949%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="8.1449%" y="741" width="0.0115%" height="15" fill="rgb(209,159,44)" fg:x="6387" fg:w="9"/><text x="8.3949%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="8.1449%" y="725" width="0.0115%" height="15" fill="rgb(251,214,1)" fg:x="6387" fg:w="9"/><text x="8.3949%" y="735.50"></text></g><g><title>__rust_dealloc (8 samples, 0.01%)</title><rect x="8.1462%" y="709" width="0.0102%" height="15" fill="rgb(247,84,47)" fg:x="6388" fg:w="8"/><text x="8.3962%" y="719.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (8 samples, 0.01%)</title><rect x="8.1462%" y="693" width="0.0102%" height="15" fill="rgb(240,111,43)" fg:x="6388" fg:w="8"/><text x="8.3962%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (12 samples, 0.02%)</title><rect x="8.1564%" y="757" width="0.0153%" height="15" fill="rgb(215,214,35)" fg:x="6396" fg:w="12"/><text x="8.4064%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (44 samples, 0.06%)</title><rect x="8.1449%" y="773" width="0.0561%" height="15" fill="rgb(248,207,23)" fg:x="6387" fg:w="44"/><text x="8.3949%" y="783.50"></text></g><g><title>sdallocx (23 samples, 0.03%)</title><rect x="8.1717%" y="757" width="0.0293%" height="15" fill="rgb(214,186,4)" fg:x="6408" fg:w="23"/><text x="8.4217%" y="767.50"></text></g><g><title>tsd_tcachep_get (23 samples, 0.03%)</title><rect x="8.1717%" y="741" width="0.0293%" height="15" fill="rgb(220,133,22)" fg:x="6408" fg:w="23"/><text x="8.4217%" y="751.50"></text></g><g><title>tsd_tcachep_get_unsafe (23 samples, 0.03%)</title><rect x="8.1717%" y="725" width="0.0293%" height="15" fill="rgb(239,134,19)" fg:x="6408" fg:w="23"/><text x="8.4217%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.07%)</title><rect x="8.1309%" y="821" width="0.0727%" height="15" fill="rgb(250,140,9)" fg:x="6376" fg:w="57"/><text x="8.3809%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (57 samples, 0.07%)</title><rect x="8.1309%" y="805" width="0.0727%" height="15" fill="rgb(225,59,14)" fg:x="6376" fg:w="57"/><text x="8.3809%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (46 samples, 0.06%)</title><rect x="8.1449%" y="789" width="0.0587%" height="15" fill="rgb(214,152,51)" fg:x="6387" fg:w="46"/><text x="8.3949%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (64 samples, 0.08%)</title><rect x="8.1309%" y="837" width="0.0816%" height="15" fill="rgb(251,227,43)" fg:x="6376" fg:w="64"/><text x="8.3809%" y="847.50"></text></g><g><title>__rust_dealloc (12 samples, 0.02%)</title><rect x="8.2291%" y="677" width="0.0153%" height="15" fill="rgb(241,96,17)" fg:x="6453" fg:w="12"/><text x="8.4791%" y="687.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (8 samples, 0.01%)</title><rect x="8.2342%" y="661" width="0.0102%" height="15" fill="rgb(234,198,43)" fg:x="6457" fg:w="8"/><text x="8.4842%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.06%)</title><rect x="8.2189%" y="805" width="0.0612%" height="15" fill="rgb(220,108,29)" fg:x="6445" fg:w="48"/><text x="8.4689%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (44 samples, 0.06%)</title><rect x="8.2240%" y="789" width="0.0561%" height="15" fill="rgb(226,163,33)" fg:x="6449" fg:w="44"/><text x="8.4740%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (44 samples, 0.06%)</title><rect x="8.2240%" y="773" width="0.0561%" height="15" fill="rgb(205,194,45)" fg:x="6449" fg:w="44"/><text x="8.4740%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (44 samples, 0.06%)</title><rect x="8.2240%" y="757" width="0.0561%" height="15" fill="rgb(206,143,44)" fg:x="6449" fg:w="44"/><text x="8.4740%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (42 samples, 0.05%)</title><rect x="8.2265%" y="741" width="0.0536%" height="15" fill="rgb(236,136,36)" fg:x="6451" fg:w="42"/><text x="8.4765%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.05%)</title><rect x="8.2265%" y="725" width="0.0536%" height="15" fill="rgb(249,172,42)" fg:x="6451" fg:w="42"/><text x="8.4765%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (42 samples, 0.05%)</title><rect x="8.2265%" y="709" width="0.0536%" height="15" fill="rgb(216,139,23)" fg:x="6451" fg:w="42"/><text x="8.4765%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (42 samples, 0.05%)</title><rect x="8.2265%" y="693" width="0.0536%" height="15" fill="rgb(207,166,20)" fg:x="6451" fg:w="42"/><text x="8.4765%" y="703.50"></text></g><g><title>sdallocx (27 samples, 0.03%)</title><rect x="8.2457%" y="677" width="0.0344%" height="15" fill="rgb(210,209,22)" fg:x="6466" fg:w="27"/><text x="8.4957%" y="687.50"></text></g><g><title>isfree (27 samples, 0.03%)</title><rect x="8.2457%" y="661" width="0.0344%" height="15" fill="rgb(232,118,20)" fg:x="6466" fg:w="27"/><text x="8.4957%" y="671.50"></text></g><g><title>isdalloct (27 samples, 0.03%)</title><rect x="8.2457%" y="645" width="0.0344%" height="15" fill="rgb(238,113,42)" fg:x="6466" fg:w="27"/><text x="8.4957%" y="655.50"></text></g><g><title>arena_sdalloc (27 samples, 0.03%)</title><rect x="8.2457%" y="629" width="0.0344%" height="15" fill="rgb(231,42,5)" fg:x="6466" fg:w="27"/><text x="8.4957%" y="639.50"></text></g><g><title>tcache_dalloc_small (27 samples, 0.03%)</title><rect x="8.2457%" y="613" width="0.0344%" height="15" fill="rgb(243,166,24)" fg:x="6466" fg:w="27"/><text x="8.4957%" y="623.50"></text></g><g><title>__rust_dealloc (10 samples, 0.01%)</title><rect x="8.2801%" y="805" width="0.0128%" height="15" fill="rgb(237,226,12)" fg:x="6493" fg:w="10"/><text x="8.5301%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::interpreter::Frame&gt; (147 samples, 0.19%)</title><rect x="8.1309%" y="853" width="0.1875%" height="15" fill="rgb(229,133,24)" fg:x="6376" fg:w="147"/><text x="8.3809%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (83 samples, 0.11%)</title><rect x="8.2125%" y="837" width="0.1058%" height="15" fill="rgb(238,33,43)" fg:x="6440" fg:w="83"/><text x="8.4625%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (83 samples, 0.11%)</title><rect x="8.2125%" y="821" width="0.1058%" height="15" fill="rgb(227,59,38)" fg:x="6440" fg:w="83"/><text x="8.4625%" y="831.50"></text></g><g><title>sdallocx (19 samples, 0.02%)</title><rect x="8.2941%" y="805" width="0.0242%" height="15" fill="rgb(230,97,0)" fg:x="6504" fg:w="19"/><text x="8.5441%" y="815.50"></text></g><g><title>isfree (19 samples, 0.02%)</title><rect x="8.2941%" y="789" width="0.0242%" height="15" fill="rgb(250,173,50)" fg:x="6504" fg:w="19"/><text x="8.5441%" y="799.50"></text></g><g><title>isdalloct (19 samples, 0.02%)</title><rect x="8.2941%" y="773" width="0.0242%" height="15" fill="rgb(240,15,50)" fg:x="6504" fg:w="19"/><text x="8.5441%" y="783.50"></text></g><g><title>arena_sdalloc (19 samples, 0.02%)</title><rect x="8.2941%" y="757" width="0.0242%" height="15" fill="rgb(221,93,22)" fg:x="6504" fg:w="19"/><text x="8.5441%" y="767.50"></text></g><g><title>tcache_dalloc_small (19 samples, 0.02%)</title><rect x="8.2941%" y="741" width="0.0242%" height="15" fill="rgb(245,180,53)" fg:x="6504" fg:w="19"/><text x="8.5441%" y="751.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::push (16 samples, 0.02%)</title><rect x="8.3235%" y="853" width="0.0204%" height="15" fill="rgb(231,88,51)" fg:x="6527" fg:w="16"/><text x="8.5735%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="8.3298%" y="837" width="0.0140%" height="15" fill="rgb(240,58,21)" fg:x="6532" fg:w="11"/><text x="8.5798%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11 samples, 0.01%)</title><rect x="8.3298%" y="821" width="0.0140%" height="15" fill="rgb(237,21,10)" fg:x="6532" fg:w="11"/><text x="8.5798%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.01%)</title><rect x="8.3337%" y="805" width="0.0102%" height="15" fill="rgb(218,43,11)" fg:x="6535" fg:w="8"/><text x="8.5837%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (15 samples, 0.02%)</title><rect x="8.3515%" y="821" width="0.0191%" height="15" fill="rgb(218,221,29)" fg:x="6549" fg:w="15"/><text x="8.6015%" y="831.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (9 samples, 0.01%)</title><rect x="8.6461%" y="725" width="0.0115%" height="15" fill="rgb(214,118,42)" fg:x="6780" fg:w="9"/><text x="8.8961%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (8 samples, 0.01%)</title><rect x="8.6474%" y="709" width="0.0102%" height="15" fill="rgb(251,200,26)" fg:x="6781" fg:w="8"/><text x="8.8974%" y="719.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="8.6474%" y="693" width="0.0102%" height="15" fill="rgb(237,101,39)" fg:x="6781" fg:w="8"/><text x="8.8974%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="8.6461%" y="741" width="0.0179%" height="15" fill="rgb(251,117,11)" fg:x="6780" fg:w="14"/><text x="8.8961%" y="751.50"></text></g><g><title>core::ptr::read_volatile (11 samples, 0.01%)</title><rect x="8.6805%" y="581" width="0.0140%" height="15" fill="rgb(216,223,23)" fg:x="6807" fg:w="11"/><text x="8.9305%" y="591.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (45 samples, 0.06%)</title><rect x="8.6461%" y="773" width="0.0574%" height="15" fill="rgb(251,54,12)" fg:x="6780" fg:w="45"/><text x="8.8961%" y="783.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (45 samples, 0.06%)</title><rect x="8.6461%" y="757" width="0.0574%" height="15" fill="rgb(254,176,54)" fg:x="6780" fg:w="45"/><text x="8.8961%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.04%)</title><rect x="8.6639%" y="741" width="0.0395%" height="15" fill="rgb(210,32,8)" fg:x="6794" fg:w="31"/><text x="8.9139%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 0.04%)</title><rect x="8.6639%" y="725" width="0.0395%" height="15" fill="rgb(235,52,38)" fg:x="6794" fg:w="31"/><text x="8.9139%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 0.04%)</title><rect x="8.6639%" y="709" width="0.0395%" height="15" fill="rgb(231,4,44)" fg:x="6794" fg:w="31"/><text x="8.9139%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.04%)</title><rect x="8.6639%" y="693" width="0.0395%" height="15" fill="rgb(249,2,32)" fg:x="6794" fg:w="31"/><text x="8.9139%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24 samples, 0.03%)</title><rect x="8.6729%" y="677" width="0.0306%" height="15" fill="rgb(224,65,26)" fg:x="6801" fg:w="24"/><text x="8.9229%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.03%)</title><rect x="8.6729%" y="661" width="0.0306%" height="15" fill="rgb(250,73,40)" fg:x="6801" fg:w="24"/><text x="8.9229%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (24 samples, 0.03%)</title><rect x="8.6729%" y="645" width="0.0306%" height="15" fill="rgb(253,177,16)" fg:x="6801" fg:w="24"/><text x="8.9229%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.03%)</title><rect x="8.6729%" y="629" width="0.0306%" height="15" fill="rgb(217,32,34)" fg:x="6801" fg:w="24"/><text x="8.9229%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.03%)</title><rect x="8.6729%" y="613" width="0.0306%" height="15" fill="rgb(212,7,10)" fg:x="6801" fg:w="24"/><text x="8.9229%" y="623.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.03%)</title><rect x="8.6729%" y="597" width="0.0306%" height="15" fill="rgb(245,89,8)" fg:x="6801" fg:w="24"/><text x="8.9229%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (65 samples, 0.08%)</title><rect x="8.6461%" y="789" width="0.0829%" height="15" fill="rgb(237,16,53)" fg:x="6780" fg:w="65"/><text x="8.8961%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (20 samples, 0.03%)</title><rect x="8.7035%" y="773" width="0.0255%" height="15" fill="rgb(250,204,30)" fg:x="6825" fg:w="20"/><text x="8.9535%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (20 samples, 0.03%)</title><rect x="8.7035%" y="757" width="0.0255%" height="15" fill="rgb(208,77,27)" fg:x="6825" fg:w="20"/><text x="8.9535%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.03%)</title><rect x="8.7035%" y="741" width="0.0255%" height="15" fill="rgb(250,204,28)" fg:x="6825" fg:w="20"/><text x="8.9535%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.03%)</title><rect x="8.7035%" y="725" width="0.0255%" height="15" fill="rgb(244,63,21)" fg:x="6825" fg:w="20"/><text x="8.9535%" y="735.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.03%)</title><rect x="8.7035%" y="709" width="0.0255%" height="15" fill="rgb(236,85,44)" fg:x="6825" fg:w="20"/><text x="8.9535%" y="719.50"></text></g><g><title>mallocx (16 samples, 0.02%)</title><rect x="8.7086%" y="693" width="0.0204%" height="15" fill="rgb(215,98,4)" fg:x="6829" fg:w="16"/><text x="8.9586%" y="703.50"></text></g><g><title>imalloc (16 samples, 0.02%)</title><rect x="8.7086%" y="677" width="0.0204%" height="15" fill="rgb(235,38,11)" fg:x="6829" fg:w="16"/><text x="8.9586%" y="687.50"></text></g><g><title>imalloc_body (16 samples, 0.02%)</title><rect x="8.7086%" y="661" width="0.0204%" height="15" fill="rgb(254,186,25)" fg:x="6829" fg:w="16"/><text x="8.9586%" y="671.50"></text></g><g><title>sz_size2index (14 samples, 0.02%)</title><rect x="8.7111%" y="645" width="0.0179%" height="15" fill="rgb(225,55,31)" fg:x="6831" fg:w="14"/><text x="8.9611%" y="655.50"></text></g><g><title>sz_size2index_lookup (14 samples, 0.02%)</title><rect x="8.7111%" y="629" width="0.0179%" height="15" fill="rgb(211,15,21)" fg:x="6831" fg:w="14"/><text x="8.9611%" y="639.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (105 samples, 0.13%)</title><rect x="8.5976%" y="805" width="0.1339%" height="15" fill="rgb(215,187,41)" fg:x="6742" fg:w="105"/><text x="8.8476%" y="815.50"></text></g><g><title>__rust_dealloc (10 samples, 0.01%)</title><rect x="8.7315%" y="805" width="0.0128%" height="15" fill="rgb(248,69,32)" fg:x="6847" fg:w="10"/><text x="8.9815%" y="815.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (10 samples, 0.01%)</title><rect x="8.7315%" y="789" width="0.0128%" height="15" fill="rgb(252,102,52)" fg:x="6847" fg:w="10"/><text x="8.9815%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (26 samples, 0.03%)</title><rect x="8.7456%" y="805" width="0.0332%" height="15" fill="rgb(253,140,32)" fg:x="6858" fg:w="26"/><text x="8.9956%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (26 samples, 0.03%)</title><rect x="8.7456%" y="789" width="0.0332%" height="15" fill="rgb(216,56,42)" fg:x="6858" fg:w="26"/><text x="8.9956%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.03%)</title><rect x="8.7468%" y="773" width="0.0319%" height="15" fill="rgb(216,184,14)" fg:x="6859" fg:w="25"/><text x="8.9968%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.03%)</title><rect x="8.7468%" y="757" width="0.0319%" height="15" fill="rgb(237,187,27)" fg:x="6859" fg:w="25"/><text x="8.9968%" y="767.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.03%)</title><rect x="8.7468%" y="741" width="0.0319%" height="15" fill="rgb(219,65,3)" fg:x="6859" fg:w="25"/><text x="8.9968%" y="751.50"></text></g><g><title>mallocx (16 samples, 0.02%)</title><rect x="8.7583%" y="725" width="0.0204%" height="15" fill="rgb(245,83,25)" fg:x="6868" fg:w="16"/><text x="9.0083%" y="735.50"></text></g><g><title>imalloc (16 samples, 0.02%)</title><rect x="8.7583%" y="709" width="0.0204%" height="15" fill="rgb(214,205,45)" fg:x="6868" fg:w="16"/><text x="9.0083%" y="719.50"></text></g><g><title>imalloc_body (16 samples, 0.02%)</title><rect x="8.7583%" y="693" width="0.0204%" height="15" fill="rgb(241,20,18)" fg:x="6868" fg:w="16"/><text x="9.0083%" y="703.50"></text></g><g><title>imalloc_no_sample (16 samples, 0.02%)</title><rect x="8.7583%" y="677" width="0.0204%" height="15" fill="rgb(232,163,23)" fg:x="6868" fg:w="16"/><text x="9.0083%" y="687.50"></text></g><g><title>iallocztm (16 samples, 0.02%)</title><rect x="8.7583%" y="661" width="0.0204%" height="15" fill="rgb(214,5,46)" fg:x="6868" fg:w="16"/><text x="9.0083%" y="671.50"></text></g><g><title>arena_malloc (16 samples, 0.02%)</title><rect x="8.7583%" y="645" width="0.0204%" height="15" fill="rgb(229,78,17)" fg:x="6868" fg:w="16"/><text x="9.0083%" y="655.50"></text></g><g><title>tcache_alloc_small (16 samples, 0.02%)</title><rect x="8.7583%" y="629" width="0.0204%" height="15" fill="rgb(248,89,10)" fg:x="6868" fg:w="16"/><text x="9.0083%" y="639.50"></text></g><g><title>cache_bin_alloc_easy (14 samples, 0.02%)</title><rect x="8.7609%" y="613" width="0.0179%" height="15" fill="rgb(248,54,15)" fg:x="6870" fg:w="14"/><text x="9.0109%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (21 samples, 0.03%)</title><rect x="8.8310%" y="773" width="0.0268%" height="15" fill="rgb(223,116,6)" fg:x="6925" fg:w="21"/><text x="9.0810%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (44 samples, 0.06%)</title><rect x="8.8246%" y="789" width="0.0561%" height="15" fill="rgb(205,125,38)" fg:x="6920" fg:w="44"/><text x="9.0746%" y="799.50"></text></g><g><title>sdallocx (18 samples, 0.02%)</title><rect x="8.8578%" y="773" width="0.0230%" height="15" fill="rgb(251,78,38)" fg:x="6946" fg:w="18"/><text x="9.1078%" y="783.50"></text></g><g><title>isfree (18 samples, 0.02%)</title><rect x="8.8578%" y="757" width="0.0230%" height="15" fill="rgb(253,78,28)" fg:x="6946" fg:w="18"/><text x="9.1078%" y="767.50"></text></g><g><title>isdalloct (18 samples, 0.02%)</title><rect x="8.8578%" y="741" width="0.0230%" height="15" fill="rgb(209,120,3)" fg:x="6946" fg:w="18"/><text x="9.1078%" y="751.50"></text></g><g><title>arena_sdalloc (18 samples, 0.02%)</title><rect x="8.8578%" y="725" width="0.0230%" height="15" fill="rgb(238,229,9)" fg:x="6946" fg:w="18"/><text x="9.1078%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (77 samples, 0.10%)</title><rect x="8.7851%" y="805" width="0.0982%" height="15" fill="rgb(253,159,18)" fg:x="6889" fg:w="77"/><text x="9.0351%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (19 samples, 0.02%)</title><rect x="8.8833%" y="805" width="0.0242%" height="15" fill="rgb(244,42,34)" fg:x="6966" fg:w="19"/><text x="9.1333%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (53 samples, 0.07%)</title><rect x="8.9088%" y="805" width="0.0676%" height="15" fill="rgb(224,8,7)" fg:x="6986" fg:w="53"/><text x="9.1588%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (53 samples, 0.07%)</title><rect x="8.9088%" y="789" width="0.0676%" height="15" fill="rgb(210,201,45)" fg:x="6986" fg:w="53"/><text x="9.1588%" y="799.50"></text></g><g><title>core::ptr::write (51 samples, 0.07%)</title><rect x="8.9113%" y="773" width="0.0650%" height="15" fill="rgb(252,185,21)" fg:x="6988" fg:w="51"/><text x="9.1613%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.01%)</title><rect x="9.0083%" y="789" width="0.0128%" height="15" fill="rgb(223,131,1)" fg:x="7064" fg:w="10"/><text x="9.2583%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="9.0083%" y="773" width="0.0128%" height="15" fill="rgb(245,141,16)" fg:x="7064" fg:w="10"/><text x="9.2583%" y="783.50"></text></g><g><title>core::iter::adapters::try_process (10 samples, 0.01%)</title><rect x="9.0083%" y="757" width="0.0128%" height="15" fill="rgb(229,55,45)" fg:x="7064" fg:w="10"/><text x="9.2583%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (10 samples, 0.01%)</title><rect x="9.0083%" y="741" width="0.0128%" height="15" fill="rgb(208,92,15)" fg:x="7064" fg:w="10"/><text x="9.2583%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.01%)</title><rect x="9.0083%" y="725" width="0.0128%" height="15" fill="rgb(234,185,47)" fg:x="7064" fg:w="10"/><text x="9.2583%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="9.0083%" y="709" width="0.0128%" height="15" fill="rgb(253,104,50)" fg:x="7064" fg:w="10"/><text x="9.2583%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="9.0083%" y="693" width="0.0128%" height="15" fill="rgb(205,70,7)" fg:x="7064" fg:w="10"/><text x="9.2583%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="9.0083%" y="677" width="0.0128%" height="15" fill="rgb(240,178,43)" fg:x="7064" fg:w="10"/><text x="9.2583%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (39 samples, 0.05%)</title><rect x="8.9764%" y="805" width="0.0497%" height="15" fill="rgb(214,112,2)" fg:x="7039" fg:w="39"/><text x="9.2264%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (23 samples, 0.03%)</title><rect x="9.0465%" y="645" width="0.0293%" height="15" fill="rgb(206,46,17)" fg:x="7094" fg:w="23"/><text x="9.2965%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.03%)</title><rect x="9.0465%" y="629" width="0.0293%" height="15" fill="rgb(225,220,16)" fg:x="7094" fg:w="23"/><text x="9.2965%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.03%)</title><rect x="9.0465%" y="613" width="0.0293%" height="15" fill="rgb(238,65,40)" fg:x="7094" fg:w="23"/><text x="9.2965%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (23 samples, 0.03%)</title><rect x="9.0465%" y="597" width="0.0293%" height="15" fill="rgb(230,151,21)" fg:x="7094" fg:w="23"/><text x="9.2965%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (23 samples, 0.03%)</title><rect x="9.0465%" y="581" width="0.0293%" height="15" fill="rgb(218,58,49)" fg:x="7094" fg:w="23"/><text x="9.2965%" y="591.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (23 samples, 0.03%)</title><rect x="9.0465%" y="565" width="0.0293%" height="15" fill="rgb(219,179,14)" fg:x="7094" fg:w="23"/><text x="9.2965%" y="575.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (22 samples, 0.03%)</title><rect x="9.0478%" y="549" width="0.0281%" height="15" fill="rgb(223,72,1)" fg:x="7095" fg:w="22"/><text x="9.2978%" y="559.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (20 samples, 0.03%)</title><rect x="9.0503%" y="533" width="0.0255%" height="15" fill="rgb(238,126,10)" fg:x="7097" fg:w="20"/><text x="9.3003%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.05%)</title><rect x="9.0465%" y="661" width="0.0510%" height="15" fill="rgb(224,206,38)" fg:x="7094" fg:w="40"/><text x="9.2965%" y="671.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (17 samples, 0.02%)</title><rect x="9.0758%" y="645" width="0.0217%" height="15" fill="rgb(212,201,54)" fg:x="7117" fg:w="17"/><text x="9.3258%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (58 samples, 0.07%)</title><rect x="9.0287%" y="789" width="0.0740%" height="15" fill="rgb(218,154,48)" fg:x="7080" fg:w="58"/><text x="9.2787%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (58 samples, 0.07%)</title><rect x="9.0287%" y="773" width="0.0740%" height="15" fill="rgb(232,93,24)" fg:x="7080" fg:w="58"/><text x="9.2787%" y="783.50"></text></g><g><title>core::iter::adapters::try_process (58 samples, 0.07%)</title><rect x="9.0287%" y="757" width="0.0740%" height="15" fill="rgb(245,30,21)" fg:x="7080" fg:w="58"/><text x="9.2787%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (46 samples, 0.06%)</title><rect x="9.0440%" y="741" width="0.0587%" height="15" fill="rgb(242,148,29)" fg:x="7092" fg:w="46"/><text x="9.2940%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (46 samples, 0.06%)</title><rect x="9.0440%" y="725" width="0.0587%" height="15" fill="rgb(244,153,54)" fg:x="7092" fg:w="46"/><text x="9.2940%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (46 samples, 0.06%)</title><rect x="9.0440%" y="709" width="0.0587%" height="15" fill="rgb(252,87,22)" fg:x="7092" fg:w="46"/><text x="9.2940%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (46 samples, 0.06%)</title><rect x="9.0440%" y="693" width="0.0587%" height="15" fill="rgb(210,51,29)" fg:x="7092" fg:w="46"/><text x="9.2940%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (46 samples, 0.06%)</title><rect x="9.0440%" y="677" width="0.0587%" height="15" fill="rgb(242,136,47)" fg:x="7092" fg:w="46"/><text x="9.2940%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_to_struct (59 samples, 0.08%)</title><rect x="9.0287%" y="805" width="0.0752%" height="15" fill="rgb(238,68,4)" fg:x="7080" fg:w="59"/><text x="9.2787%" y="815.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (23 samples, 0.03%)</title><rect x="9.1039%" y="789" width="0.0293%" height="15" fill="rgb(242,161,30)" fg:x="7139" fg:w="23"/><text x="9.3539%" y="799.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::CachedStructIndex as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="9.1192%" y="773" width="0.0140%" height="15" fill="rgb(218,58,44)" fg:x="7151" fg:w="11"/><text x="9.3692%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_field_type (39 samples, 0.05%)</title><rect x="9.1039%" y="805" width="0.0497%" height="15" fill="rgb(252,125,32)" fg:x="7139" fg:w="39"/><text x="9.3539%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_struct_type (16 samples, 0.02%)</title><rect x="9.1332%" y="789" width="0.0204%" height="15" fill="rgb(219,178,0)" fg:x="7162" fg:w="16"/><text x="9.3832%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.02%)</title><rect x="9.1332%" y="773" width="0.0204%" height="15" fill="rgb(213,152,7)" fg:x="7162" fg:w="16"/><text x="9.3832%" y="783.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.02%)</title><rect x="9.1842%" y="581" width="0.0166%" height="15" fill="rgb(249,109,34)" fg:x="7202" fg:w="13"/><text x="9.4342%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.04%)</title><rect x="9.1842%" y="661" width="0.0434%" height="15" fill="rgb(232,96,21)" fg:x="7202" fg:w="34"/><text x="9.4342%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (34 samples, 0.04%)</title><rect x="9.1842%" y="645" width="0.0434%" height="15" fill="rgb(228,27,39)" fg:x="7202" fg:w="34"/><text x="9.4342%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.04%)</title><rect x="9.1842%" y="629" width="0.0434%" height="15" fill="rgb(211,182,52)" fg:x="7202" fg:w="34"/><text x="9.4342%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.04%)</title><rect x="9.1842%" y="613" width="0.0434%" height="15" fill="rgb(234,178,38)" fg:x="7202" fg:w="34"/><text x="9.4342%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34 samples, 0.04%)</title><rect x="9.1842%" y="597" width="0.0434%" height="15" fill="rgb(221,111,3)" fg:x="7202" fg:w="34"/><text x="9.4342%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (21 samples, 0.03%)</title><rect x="9.2008%" y="581" width="0.0268%" height="15" fill="rgb(228,175,21)" fg:x="7215" fg:w="21"/><text x="9.4508%" y="591.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (21 samples, 0.03%)</title><rect x="9.2008%" y="565" width="0.0268%" height="15" fill="rgb(228,174,43)" fg:x="7215" fg:w="21"/><text x="9.4508%" y="575.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (21 samples, 0.03%)</title><rect x="9.2008%" y="549" width="0.0268%" height="15" fill="rgb(211,191,0)" fg:x="7215" fg:w="21"/><text x="9.4508%" y="559.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (20 samples, 0.03%)</title><rect x="9.2021%" y="533" width="0.0255%" height="15" fill="rgb(253,117,3)" fg:x="7216" fg:w="20"/><text x="9.4521%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (60 samples, 0.08%)</title><rect x="9.1562%" y="789" width="0.0765%" height="15" fill="rgb(241,127,19)" fg:x="7180" fg:w="60"/><text x="9.4062%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (60 samples, 0.08%)</title><rect x="9.1562%" y="773" width="0.0765%" height="15" fill="rgb(218,103,12)" fg:x="7180" fg:w="60"/><text x="9.4062%" y="783.50"></text></g><g><title>core::iter::adapters::try_process (60 samples, 0.08%)</title><rect x="9.1562%" y="757" width="0.0765%" height="15" fill="rgb(236,214,43)" fg:x="7180" fg:w="60"/><text x="9.4062%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (43 samples, 0.05%)</title><rect x="9.1779%" y="741" width="0.0548%" height="15" fill="rgb(244,144,19)" fg:x="7197" fg:w="43"/><text x="9.4279%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (43 samples, 0.05%)</title><rect x="9.1779%" y="725" width="0.0548%" height="15" fill="rgb(246,188,10)" fg:x="7197" fg:w="43"/><text x="9.4279%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (43 samples, 0.05%)</title><rect x="9.1779%" y="709" width="0.0548%" height="15" fill="rgb(212,193,33)" fg:x="7197" fg:w="43"/><text x="9.4279%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 0.05%)</title><rect x="9.1779%" y="693" width="0.0548%" height="15" fill="rgb(241,51,29)" fg:x="7197" fg:w="43"/><text x="9.4279%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (43 samples, 0.05%)</title><rect x="9.1779%" y="677" width="0.0548%" height="15" fill="rgb(211,58,19)" fg:x="7197" fg:w="43"/><text x="9.4279%" y="687.50"></text></g><g><title>__rust_dealloc (8 samples, 0.01%)</title><rect x="9.2378%" y="709" width="0.0102%" height="15" fill="rgb(229,111,26)" fg:x="7244" fg:w="8"/><text x="9.4878%" y="719.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (8 samples, 0.01%)</title><rect x="9.2378%" y="693" width="0.0102%" height="15" fill="rgb(213,115,40)" fg:x="7244" fg:w="8"/><text x="9.4878%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (27 samples, 0.03%)</title><rect x="9.2327%" y="789" width="0.0344%" height="15" fill="rgb(209,56,44)" fg:x="7240" fg:w="27"/><text x="9.4827%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (23 samples, 0.03%)</title><rect x="9.2378%" y="773" width="0.0293%" height="15" fill="rgb(230,108,32)" fg:x="7244" fg:w="23"/><text x="9.4878%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.03%)</title><rect x="9.2378%" y="757" width="0.0293%" height="15" fill="rgb(216,165,31)" fg:x="7244" fg:w="23"/><text x="9.4878%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.03%)</title><rect x="9.2378%" y="741" width="0.0293%" height="15" fill="rgb(218,122,21)" fg:x="7244" fg:w="23"/><text x="9.4878%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.03%)</title><rect x="9.2378%" y="725" width="0.0293%" height="15" fill="rgb(223,224,47)" fg:x="7244" fg:w="23"/><text x="9.4878%" y="735.50"></text></g><g><title>sdallocx (15 samples, 0.02%)</title><rect x="9.2480%" y="709" width="0.0191%" height="15" fill="rgb(238,102,44)" fg:x="7252" fg:w="15"/><text x="9.4980%" y="719.50"></text></g><g><title>isfree (15 samples, 0.02%)</title><rect x="9.2480%" y="693" width="0.0191%" height="15" fill="rgb(236,46,40)" fg:x="7252" fg:w="15"/><text x="9.4980%" y="703.50"></text></g><g><title>isdalloct (15 samples, 0.02%)</title><rect x="9.2480%" y="677" width="0.0191%" height="15" fill="rgb(247,202,50)" fg:x="7252" fg:w="15"/><text x="9.4980%" y="687.50"></text></g><g><title>arena_sdalloc (15 samples, 0.02%)</title><rect x="9.2480%" y="661" width="0.0191%" height="15" fill="rgb(209,99,20)" fg:x="7252" fg:w="15"/><text x="9.4980%" y="671.50"></text></g><g><title>tcache_dalloc_small (15 samples, 0.02%)</title><rect x="9.2480%" y="645" width="0.0191%" height="15" fill="rgb(252,27,34)" fg:x="7252" fg:w="15"/><text x="9.4980%" y="655.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_struct_type (19 samples, 0.02%)</title><rect x="9.2671%" y="789" width="0.0242%" height="15" fill="rgb(215,206,23)" fg:x="7267" fg:w="19"/><text x="9.5171%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (19 samples, 0.02%)</title><rect x="9.2671%" y="773" width="0.0242%" height="15" fill="rgb(212,135,36)" fg:x="7267" fg:w="19"/><text x="9.5171%" y="783.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="9.2671%" y="757" width="0.0242%" height="15" fill="rgb(240,189,1)" fg:x="7267" fg:w="19"/><text x="9.5171%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (19 samples, 0.02%)</title><rect x="9.2671%" y="741" width="0.0242%" height="15" fill="rgb(242,56,20)" fg:x="7267" fg:w="19"/><text x="9.5171%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.02%)</title><rect x="9.2671%" y="725" width="0.0242%" height="15" fill="rgb(247,132,33)" fg:x="7267" fg:w="19"/><text x="9.5171%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (19 samples, 0.02%)</title><rect x="9.2671%" y="709" width="0.0242%" height="15" fill="rgb(208,149,11)" fg:x="7267" fg:w="19"/><text x="9.5171%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field (135 samples, 0.17%)</title><rect x="9.1562%" y="805" width="0.1722%" height="15" fill="rgb(211,33,11)" fg:x="7180" fg:w="135"/><text x="9.4062%" y="815.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (29 samples, 0.04%)</title><rect x="9.2914%" y="789" width="0.0370%" height="15" fill="rgb(221,29,38)" fg:x="7286" fg:w="29"/><text x="9.5414%" y="799.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (29 samples, 0.04%)</title><rect x="9.2914%" y="773" width="0.0370%" height="15" fill="rgb(206,182,49)" fg:x="7286" fg:w="29"/><text x="9.5414%" y="783.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (13 samples, 0.02%)</title><rect x="9.3118%" y="757" width="0.0166%" height="15" fill="rgb(216,140,1)" fg:x="7302" fg:w="13"/><text x="9.5618%" y="767.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.01%)</title><rect x="9.3347%" y="693" width="0.0102%" height="15" fill="rgb(232,57,40)" fg:x="7320" fg:w="8"/><text x="9.5847%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="9.3513%" y="661" width="0.0128%" height="15" fill="rgb(224,186,18)" fg:x="7333" fg:w="10"/><text x="9.6013%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (8 samples, 0.01%)</title><rect x="9.3538%" y="645" width="0.0102%" height="15" fill="rgb(215,121,11)" fg:x="7335" fg:w="8"/><text x="9.6038%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="9.3538%" y="629" width="0.0102%" height="15" fill="rgb(245,147,10)" fg:x="7335" fg:w="8"/><text x="9.6038%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="9.3538%" y="613" width="0.0102%" height="15" fill="rgb(238,153,13)" fg:x="7335" fg:w="8"/><text x="9.6038%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.01%)</title><rect x="9.3538%" y="597" width="0.0102%" height="15" fill="rgb(233,108,0)" fg:x="7335" fg:w="8"/><text x="9.6038%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (8 samples, 0.01%)</title><rect x="9.3538%" y="581" width="0.0102%" height="15" fill="rgb(212,157,17)" fg:x="7335" fg:w="8"/><text x="9.6038%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.03%)</title><rect x="9.3347%" y="789" width="0.0306%" height="15" fill="rgb(225,213,38)" fg:x="7320" fg:w="24"/><text x="9.5847%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (24 samples, 0.03%)</title><rect x="9.3347%" y="773" width="0.0306%" height="15" fill="rgb(248,16,11)" fg:x="7320" fg:w="24"/><text x="9.5847%" y="783.50"></text></g><g><title>core::iter::adapters::try_process (24 samples, 0.03%)</title><rect x="9.3347%" y="757" width="0.0306%" height="15" fill="rgb(241,33,4)" fg:x="7320" fg:w="24"/><text x="9.5847%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (24 samples, 0.03%)</title><rect x="9.3347%" y="741" width="0.0306%" height="15" fill="rgb(222,26,43)" fg:x="7320" fg:w="24"/><text x="9.5847%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.03%)</title><rect x="9.3347%" y="725" width="0.0306%" height="15" fill="rgb(243,29,36)" fg:x="7320" fg:w="24"/><text x="9.5847%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.03%)</title><rect x="9.3347%" y="709" width="0.0306%" height="15" fill="rgb(241,9,27)" fg:x="7320" fg:w="24"/><text x="9.5847%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="9.3449%" y="693" width="0.0204%" height="15" fill="rgb(205,117,26)" fg:x="7328" fg:w="16"/><text x="9.5949%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="9.3462%" y="677" width="0.0191%" height="15" fill="rgb(209,80,39)" fg:x="7329" fg:w="15"/><text x="9.5962%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_struct_fields (32 samples, 0.04%)</title><rect x="9.3283%" y="805" width="0.0408%" height="15" fill="rgb(239,155,6)" fg:x="7315" fg:w="32"/><text x="9.5783%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (8 samples, 0.01%)</title><rect x="9.3895%" y="565" width="0.0102%" height="15" fill="rgb(212,104,12)" fg:x="7363" fg:w="8"/><text x="9.6395%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="9.3895%" y="549" width="0.0102%" height="15" fill="rgb(234,204,3)" fg:x="7363" fg:w="8"/><text x="9.6395%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="9.3895%" y="661" width="0.0166%" height="15" fill="rgb(251,218,7)" fg:x="7363" fg:w="13"/><text x="9.6395%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (13 samples, 0.02%)</title><rect x="9.3895%" y="645" width="0.0166%" height="15" fill="rgb(221,81,32)" fg:x="7363" fg:w="13"/><text x="9.6395%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.02%)</title><rect x="9.3895%" y="629" width="0.0166%" height="15" fill="rgb(214,152,26)" fg:x="7363" fg:w="13"/><text x="9.6395%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.02%)</title><rect x="9.3895%" y="613" width="0.0166%" height="15" fill="rgb(223,22,3)" fg:x="7363" fg:w="13"/><text x="9.6395%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.02%)</title><rect x="9.3895%" y="597" width="0.0166%" height="15" fill="rgb(207,174,7)" fg:x="7363" fg:w="13"/><text x="9.6395%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.02%)</title><rect x="9.3895%" y="581" width="0.0166%" height="15" fill="rgb(224,19,52)" fg:x="7363" fg:w="13"/><text x="9.6395%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (22 samples, 0.03%)</title><rect x="9.3819%" y="789" width="0.0281%" height="15" fill="rgb(228,24,14)" fg:x="7357" fg:w="22"/><text x="9.6319%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (22 samples, 0.03%)</title><rect x="9.3819%" y="773" width="0.0281%" height="15" fill="rgb(230,153,43)" fg:x="7357" fg:w="22"/><text x="9.6319%" y="783.50"></text></g><g><title>core::iter::adapters::try_process (22 samples, 0.03%)</title><rect x="9.3819%" y="757" width="0.0281%" height="15" fill="rgb(231,106,12)" fg:x="7357" fg:w="22"/><text x="9.6319%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (16 samples, 0.02%)</title><rect x="9.3895%" y="741" width="0.0204%" height="15" fill="rgb(215,92,2)" fg:x="7363" fg:w="16"/><text x="9.6395%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.02%)</title><rect x="9.3895%" y="725" width="0.0204%" height="15" fill="rgb(249,143,25)" fg:x="7363" fg:w="16"/><text x="9.6395%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="9.3895%" y="709" width="0.0204%" height="15" fill="rgb(252,7,35)" fg:x="7363" fg:w="16"/><text x="9.6395%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="9.3895%" y="693" width="0.0204%" height="15" fill="rgb(216,69,40)" fg:x="7363" fg:w="16"/><text x="9.6395%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="9.3895%" y="677" width="0.0204%" height="15" fill="rgb(240,36,33)" fg:x="7363" fg:w="16"/><text x="9.6395%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (46 samples, 0.06%)</title><rect x="9.3691%" y="805" width="0.0587%" height="15" fill="rgb(231,128,14)" fg:x="7347" fg:w="46"/><text x="9.6191%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (14 samples, 0.02%)</title><rect x="9.4099%" y="789" width="0.0179%" height="15" fill="rgb(245,143,14)" fg:x="7379" fg:w="14"/><text x="9.6599%" y="799.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (18 samples, 0.02%)</title><rect x="9.4367%" y="805" width="0.0230%" height="15" fill="rgb(222,130,28)" fg:x="7400" fg:w="18"/><text x="9.6867%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (13 samples, 0.02%)</title><rect x="9.4431%" y="789" width="0.0166%" height="15" fill="rgb(212,10,48)" fg:x="7405" fg:w="13"/><text x="9.6931%" y="799.50"></text></g><g><title>core::cmp::PartialEq::ne (13 samples, 0.02%)</title><rect x="9.4431%" y="773" width="0.0166%" height="15" fill="rgb(254,118,45)" fg:x="7405" fg:w="13"/><text x="9.6931%" y="783.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (13 samples, 0.02%)</title><rect x="9.4431%" y="757" width="0.0166%" height="15" fill="rgb(228,6,45)" fg:x="7405" fg:w="13"/><text x="9.6931%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13 samples, 0.02%)</title><rect x="9.4431%" y="741" width="0.0166%" height="15" fill="rgb(241,18,35)" fg:x="7405" fg:w="13"/><text x="9.6931%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.02%)</title><rect x="9.4431%" y="725" width="0.0166%" height="15" fill="rgb(227,214,53)" fg:x="7405" fg:w="13"/><text x="9.6931%" y="735.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_vec_ref (11 samples, 0.01%)</title><rect x="9.4661%" y="805" width="0.0140%" height="15" fill="rgb(224,107,51)" fg:x="7423" fg:w="11"/><text x="9.7161%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (903 samples, 1.15%)</title><rect x="8.3783%" y="821" width="1.1515%" height="15" fill="rgb(248,60,28)" fg:x="6570" fg:w="903"/><text x="8.6283%" y="831.50"></text></g><g><title>sdallocx (34 samples, 0.04%)</title><rect x="9.4865%" y="805" width="0.0434%" height="15" fill="rgb(249,101,23)" fg:x="7439" fg:w="34"/><text x="9.7365%" y="815.50"></text></g><g><title>isfree (34 samples, 0.04%)</title><rect x="9.4865%" y="789" width="0.0434%" height="15" fill="rgb(228,51,19)" fg:x="7439" fg:w="34"/><text x="9.7365%" y="799.50"></text></g><g><title>isdalloct (34 samples, 0.04%)</title><rect x="9.4865%" y="773" width="0.0434%" height="15" fill="rgb(213,20,6)" fg:x="7439" fg:w="34"/><text x="9.7365%" y="783.50"></text></g><g><title>arena_sdalloc (34 samples, 0.04%)</title><rect x="9.4865%" y="757" width="0.0434%" height="15" fill="rgb(212,124,10)" fg:x="7439" fg:w="34"/><text x="9.7365%" y="767.50"></text></g><g><title>sz_size2index (34 samples, 0.04%)</title><rect x="9.4865%" y="741" width="0.0434%" height="15" fill="rgb(248,3,40)" fg:x="7439" fg:w="34"/><text x="9.7365%" y="751.50"></text></g><g><title>sz_size2index_lookup (34 samples, 0.04%)</title><rect x="9.4865%" y="725" width="0.0434%" height="15" fill="rgb(223,178,23)" fg:x="7439" fg:w="34"/><text x="9.7365%" y="735.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="9.6624%" y="805" width="0.0191%" height="15" fill="rgb(240,132,45)" fg:x="7577" fg:w="15"/><text x="9.9124%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (11 samples, 0.01%)</title><rect x="9.6816%" y="805" width="0.0140%" height="15" fill="rgb(245,164,36)" fg:x="7592" fg:w="11"/><text x="9.9316%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::is_invalid (12 samples, 0.02%)</title><rect x="9.6994%" y="805" width="0.0153%" height="15" fill="rgb(231,188,53)" fg:x="7606" fg:w="12"/><text x="9.9494%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (146 samples, 0.19%)</title><rect x="9.5298%" y="821" width="0.1862%" height="15" fill="rgb(237,198,39)" fg:x="7473" fg:w="146"/><text x="9.7798%" y="831.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (9 samples, 0.01%)</title><rect x="9.7492%" y="773" width="0.0115%" height="15" fill="rgb(223,120,35)" fg:x="7645" fg:w="9"/><text x="9.9992%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (24 samples, 0.03%)</title><rect x="9.7390%" y="789" width="0.0306%" height="15" fill="rgb(253,107,49)" fg:x="7637" fg:w="24"/><text x="9.9890%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool (50 samples, 0.06%)</title><rect x="9.7160%" y="821" width="0.0638%" height="15" fill="rgb(216,44,31)" fg:x="7619" fg:w="50"/><text x="9.9660%" y="831.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (50 samples, 0.06%)</title><rect x="9.7160%" y="805" width="0.0638%" height="15" fill="rgb(253,87,21)" fg:x="7619" fg:w="50"/><text x="9.9660%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (8 samples, 0.01%)</title><rect x="9.7696%" y="789" width="0.0102%" height="15" fill="rgb(226,18,2)" fg:x="7661" fg:w="8"/><text x="10.0196%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int::{{closure}} (16 samples, 0.02%)</title><rect x="9.8014%" y="789" width="0.0204%" height="15" fill="rgb(216,8,46)" fg:x="7686" fg:w="16"/><text x="10.0514%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.02%)</title><rect x="9.8014%" y="773" width="0.0204%" height="15" fill="rgb(226,140,39)" fg:x="7686" fg:w="16"/><text x="10.0514%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (21 samples, 0.03%)</title><rect x="9.8218%" y="789" width="0.0268%" height="15" fill="rgb(221,194,54)" fg:x="7702" fg:w="21"/><text x="10.0718%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (59 samples, 0.08%)</title><rect x="9.7798%" y="821" width="0.0752%" height="15" fill="rgb(213,92,11)" fg:x="7669" fg:w="59"/><text x="10.0298%" y="831.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (59 samples, 0.08%)</title><rect x="9.7798%" y="805" width="0.0752%" height="15" fill="rgb(229,162,46)" fg:x="7669" fg:w="59"/><text x="10.0298%" y="815.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="9.8703%" y="741" width="0.0115%" height="15" fill="rgb(214,111,36)" fg:x="7740" fg:w="9"/><text x="10.1203%" y="751.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (12 samples, 0.02%)</title><rect x="9.9328%" y="245" width="0.0153%" height="15" fill="rgb(207,6,21)" fg:x="7789" fg:w="12"/><text x="10.1828%" y="255.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (56 samples, 0.07%)</title><rect x="9.9009%" y="597" width="0.0714%" height="15" fill="rgb(213,127,38)" fg:x="7764" fg:w="56"/><text x="10.1509%" y="607.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (56 samples, 0.07%)</title><rect x="9.9009%" y="581" width="0.0714%" height="15" fill="rgb(238,118,32)" fg:x="7764" fg:w="56"/><text x="10.1509%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (56 samples, 0.07%)</title><rect x="9.9009%" y="565" width="0.0714%" height="15" fill="rgb(240,139,39)" fg:x="7764" fg:w="56"/><text x="10.1509%" y="575.50"></text></g><g><title> 32]&gt;::serialize (56 samples, 0.07%)</title><rect x="9.9009%" y="549" width="0.0714%" height="15" fill="rgb(235,10,37)" fg:x="7764" fg:w="56"/><text x="10.1509%" y="559.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (56 samples, 0.07%)</title><rect x="9.9009%" y="533" width="0.0714%" height="15" fill="rgb(249,171,38)" fg:x="7764" fg:w="56"/><text x="10.1509%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (56 samples, 0.07%)</title><rect x="9.9009%" y="517" width="0.0714%" height="15" fill="rgb(242,144,32)" fg:x="7764" fg:w="56"/><text x="10.1509%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (56 samples, 0.07%)</title><rect x="9.9009%" y="501" width="0.0714%" height="15" fill="rgb(217,117,21)" fg:x="7764" fg:w="56"/><text x="10.1509%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (56 samples, 0.07%)</title><rect x="9.9009%" y="485" width="0.0714%" height="15" fill="rgb(249,87,1)" fg:x="7764" fg:w="56"/><text x="10.1509%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (56 samples, 0.07%)</title><rect x="9.9009%" y="469" width="0.0714%" height="15" fill="rgb(248,196,48)" fg:x="7764" fg:w="56"/><text x="10.1509%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (56 samples, 0.07%)</title><rect x="9.9009%" y="453" width="0.0714%" height="15" fill="rgb(251,206,33)" fg:x="7764" fg:w="56"/><text x="10.1509%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (56 samples, 0.07%)</title><rect x="9.9009%" y="437" width="0.0714%" height="15" fill="rgb(232,141,28)" fg:x="7764" fg:w="56"/><text x="10.1509%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (40 samples, 0.05%)</title><rect x="9.9213%" y="421" width="0.0510%" height="15" fill="rgb(209,167,14)" fg:x="7780" fg:w="40"/><text x="10.1713%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (40 samples, 0.05%)</title><rect x="9.9213%" y="405" width="0.0510%" height="15" fill="rgb(225,11,50)" fg:x="7780" fg:w="40"/><text x="10.1713%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (40 samples, 0.05%)</title><rect x="9.9213%" y="389" width="0.0510%" height="15" fill="rgb(209,50,20)" fg:x="7780" fg:w="40"/><text x="10.1713%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (40 samples, 0.05%)</title><rect x="9.9213%" y="373" width="0.0510%" height="15" fill="rgb(212,17,46)" fg:x="7780" fg:w="40"/><text x="10.1713%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (34 samples, 0.04%)</title><rect x="9.9290%" y="357" width="0.0434%" height="15" fill="rgb(216,101,39)" fg:x="7786" fg:w="34"/><text x="10.1790%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (34 samples, 0.04%)</title><rect x="9.9290%" y="341" width="0.0434%" height="15" fill="rgb(212,228,48)" fg:x="7786" fg:w="34"/><text x="10.1790%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (34 samples, 0.04%)</title><rect x="9.9290%" y="325" width="0.0434%" height="15" fill="rgb(250,6,50)" fg:x="7786" fg:w="34"/><text x="10.1790%" y="335.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.04%)</title><rect x="9.9290%" y="309" width="0.0434%" height="15" fill="rgb(250,160,48)" fg:x="7786" fg:w="34"/><text x="10.1790%" y="319.50"></text></g><g><title>rallocx (31 samples, 0.04%)</title><rect x="9.9328%" y="293" width="0.0395%" height="15" fill="rgb(244,216,33)" fg:x="7789" fg:w="31"/><text x="10.1828%" y="303.50"></text></g><g><title>iralloct (31 samples, 0.04%)</title><rect x="9.9328%" y="277" width="0.0395%" height="15" fill="rgb(207,157,5)" fg:x="7789" fg:w="31"/><text x="10.1828%" y="287.50"></text></g><g><title>_rjem_je_arena_ralloc (31 samples, 0.04%)</title><rect x="9.9328%" y="261" width="0.0395%" height="15" fill="rgb(228,199,8)" fg:x="7789" fg:w="31"/><text x="10.1828%" y="271.50"></text></g><g><title>arena_ralloc_move_helper (19 samples, 0.02%)</title><rect x="9.9481%" y="245" width="0.0242%" height="15" fill="rgb(227,80,20)" fg:x="7801" fg:w="19"/><text x="10.1981%" y="255.50"></text></g><g><title>ipalloct (19 samples, 0.02%)</title><rect x="9.9481%" y="229" width="0.0242%" height="15" fill="rgb(222,9,33)" fg:x="7801" fg:w="19"/><text x="10.1981%" y="239.50"></text></g><g><title>ipallocztm (19 samples, 0.02%)</title><rect x="9.9481%" y="213" width="0.0242%" height="15" fill="rgb(239,44,28)" fg:x="7801" fg:w="19"/><text x="10.1981%" y="223.50"></text></g><g><title>_rjem_je_arena_palloc (19 samples, 0.02%)</title><rect x="9.9481%" y="197" width="0.0242%" height="15" fill="rgb(249,187,43)" fg:x="7801" fg:w="19"/><text x="10.1981%" y="207.50"></text></g><g><title>_rjem_je_arena_palloc (19 samples, 0.02%)</title><rect x="9.9481%" y="181" width="0.0242%" height="15" fill="rgb(216,141,28)" fg:x="7801" fg:w="19"/><text x="10.1981%" y="191.50"></text></g><g><title>arena_malloc (19 samples, 0.02%)</title><rect x="9.9481%" y="165" width="0.0242%" height="15" fill="rgb(230,154,53)" fg:x="7801" fg:w="19"/><text x="10.1981%" y="175.50"></text></g><g><title>tcache_alloc_small (19 samples, 0.02%)</title><rect x="9.9481%" y="149" width="0.0242%" height="15" fill="rgb(227,82,4)" fg:x="7801" fg:w="19"/><text x="10.1981%" y="159.50"></text></g><g><title>cache_bin_alloc_easy (19 samples, 0.02%)</title><rect x="9.9481%" y="133" width="0.0242%" height="15" fill="rgb(220,107,16)" fg:x="7801" fg:w="19"/><text x="10.1981%" y="143.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (10 samples, 0.01%)</title><rect x="9.9813%" y="389" width="0.0128%" height="15" fill="rgb(207,187,2)" fg:x="7827" fg:w="10"/><text x="10.2313%" y="399.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.01%)</title><rect x="9.9813%" y="373" width="0.0128%" height="15" fill="rgb(210,162,52)" fg:x="7827" fg:w="10"/><text x="10.2313%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (10 samples, 0.01%)</title><rect x="9.9813%" y="357" width="0.0128%" height="15" fill="rgb(217,216,49)" fg:x="7827" fg:w="10"/><text x="10.2313%" y="367.50"></text></g><g><title> 32]&gt;::serialize (10 samples, 0.01%)</title><rect x="9.9813%" y="341" width="0.0128%" height="15" fill="rgb(218,146,49)" fg:x="7827" fg:w="10"/><text x="10.2313%" y="351.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (10 samples, 0.01%)</title><rect x="9.9813%" y="325" width="0.0128%" height="15" fill="rgb(216,55,40)" fg:x="7827" fg:w="10"/><text x="10.2313%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (10 samples, 0.01%)</title><rect x="9.9813%" y="309" width="0.0128%" height="15" fill="rgb(208,196,21)" fg:x="7827" fg:w="10"/><text x="10.2313%" y="319.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (10 samples, 0.01%)</title><rect x="9.9813%" y="293" width="0.0128%" height="15" fill="rgb(242,117,42)" fg:x="7827" fg:w="10"/><text x="10.2313%" y="303.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (10 samples, 0.01%)</title><rect x="9.9813%" y="277" width="0.0128%" height="15" fill="rgb(210,11,23)" fg:x="7827" fg:w="10"/><text x="10.2313%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.01%)</title><rect x="9.9813%" y="261" width="0.0128%" height="15" fill="rgb(217,110,2)" fg:x="7827" fg:w="10"/><text x="10.2313%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.01%)</title><rect x="9.9813%" y="245" width="0.0128%" height="15" fill="rgb(229,77,54)" fg:x="7827" fg:w="10"/><text x="10.2313%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.01%)</title><rect x="9.9813%" y="229" width="0.0128%" height="15" fill="rgb(218,53,16)" fg:x="7827" fg:w="10"/><text x="10.2313%" y="239.50"></text></g><g><title>bcs::ser::to_bytes (82 samples, 0.10%)</title><rect x="9.8907%" y="693" width="0.1046%" height="15" fill="rgb(215,38,13)" fg:x="7756" fg:w="82"/><text x="10.1407%" y="703.50"></text></g><g><title>bcs::ser::serialize_into (82 samples, 0.10%)</title><rect x="9.8907%" y="677" width="0.1046%" height="15" fill="rgb(235,42,18)" fg:x="7756" fg:w="82"/><text x="10.1407%" y="687.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (82 samples, 0.10%)</title><rect x="9.8907%" y="661" width="0.1046%" height="15" fill="rgb(219,66,54)" fg:x="7756" fg:w="82"/><text x="10.1407%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (82 samples, 0.10%)</title><rect x="9.8907%" y="645" width="0.1046%" height="15" fill="rgb(222,205,4)" fg:x="7756" fg:w="82"/><text x="10.1407%" y="655.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (78 samples, 0.10%)</title><rect x="9.8958%" y="629" width="0.0995%" height="15" fill="rgb(227,213,46)" fg:x="7760" fg:w="78"/><text x="10.1458%" y="639.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (74 samples, 0.09%)</title><rect x="9.9009%" y="613" width="0.0944%" height="15" fill="rgb(250,145,42)" fg:x="7764" fg:w="74"/><text x="10.1509%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (14 samples, 0.02%)</title><rect x="9.9774%" y="597" width="0.0179%" height="15" fill="rgb(219,15,2)" fg:x="7824" fg:w="14"/><text x="10.2274%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (14 samples, 0.02%)</title><rect x="9.9774%" y="581" width="0.0179%" height="15" fill="rgb(231,181,52)" fg:x="7824" fg:w="14"/><text x="10.2274%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (14 samples, 0.02%)</title><rect x="9.9774%" y="565" width="0.0179%" height="15" fill="rgb(235,1,42)" fg:x="7824" fg:w="14"/><text x="10.2274%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.02%)</title><rect x="9.9774%" y="549" width="0.0179%" height="15" fill="rgb(249,88,27)" fg:x="7824" fg:w="14"/><text x="10.2274%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (14 samples, 0.02%)</title><rect x="9.9774%" y="533" width="0.0179%" height="15" fill="rgb(235,145,16)" fg:x="7824" fg:w="14"/><text x="10.2274%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (14 samples, 0.02%)</title><rect x="9.9774%" y="517" width="0.0179%" height="15" fill="rgb(237,114,19)" fg:x="7824" fg:w="14"/><text x="10.2274%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (14 samples, 0.02%)</title><rect x="9.9774%" y="501" width="0.0179%" height="15" fill="rgb(238,51,50)" fg:x="7824" fg:w="14"/><text x="10.2274%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 0.02%)</title><rect x="9.9774%" y="485" width="0.0179%" height="15" fill="rgb(205,194,25)" fg:x="7824" fg:w="14"/><text x="10.2274%" y="495.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (14 samples, 0.02%)</title><rect x="9.9774%" y="469" width="0.0179%" height="15" fill="rgb(215,203,17)" fg:x="7824" fg:w="14"/><text x="10.2274%" y="479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (13 samples, 0.02%)</title><rect x="9.9787%" y="453" width="0.0166%" height="15" fill="rgb(233,112,49)" fg:x="7825" fg:w="13"/><text x="10.2287%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="9.9787%" y="437" width="0.0166%" height="15" fill="rgb(241,130,26)" fg:x="7825" fg:w="13"/><text x="10.2287%" y="447.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (13 samples, 0.02%)</title><rect x="9.9787%" y="421" width="0.0166%" height="15" fill="rgb(252,223,19)" fg:x="7825" fg:w="13"/><text x="10.2287%" y="431.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.01%)</title><rect x="9.9813%" y="405" width="0.0140%" height="15" fill="rgb(211,95,25)" fg:x="7827" fg:w="11"/><text x="10.2313%" y="415.50"></text></g><g><title>aptos_vm::create_access_path (103 samples, 0.13%)</title><rect x="9.8818%" y="741" width="0.1313%" height="15" fill="rgb(251,182,27)" fg:x="7749" fg:w="103"/><text x="10.1318%" y="751.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (102 samples, 0.13%)</title><rect x="9.8831%" y="725" width="0.1301%" height="15" fill="rgb(238,24,4)" fg:x="7750" fg:w="102"/><text x="10.1331%" y="735.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (102 samples, 0.13%)</title><rect x="9.8831%" y="709" width="0.1301%" height="15" fill="rgb(224,220,25)" fg:x="7750" fg:w="102"/><text x="10.1331%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (14 samples, 0.02%)</title><rect x="9.9953%" y="693" width="0.0179%" height="15" fill="rgb(239,133,26)" fg:x="7838" fg:w="14"/><text x="10.2453%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (14 samples, 0.02%)</title><rect x="9.9953%" y="677" width="0.0179%" height="15" fill="rgb(211,94,48)" fg:x="7838" fg:w="14"/><text x="10.2453%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (11 samples, 0.01%)</title><rect x="9.9991%" y="661" width="0.0140%" height="15" fill="rgb(239,87,6)" fg:x="7841" fg:w="11"/><text x="10.2491%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (11 samples, 0.01%)</title><rect x="9.9991%" y="645" width="0.0140%" height="15" fill="rgb(227,62,0)" fg:x="7841" fg:w="11"/><text x="10.2491%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="9.9991%" y="629" width="0.0140%" height="15" fill="rgb(211,226,4)" fg:x="7841" fg:w="11"/><text x="10.2491%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="9.9991%" y="613" width="0.0140%" height="15" fill="rgb(253,38,52)" fg:x="7841" fg:w="11"/><text x="10.2491%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="9.9991%" y="597" width="0.0140%" height="15" fill="rgb(229,126,40)" fg:x="7841" fg:w="11"/><text x="10.2491%" y="607.50"></text></g><g><title>sdallocx (10 samples, 0.01%)</title><rect x="10.0004%" y="581" width="0.0128%" height="15" fill="rgb(229,165,44)" fg:x="7842" fg:w="10"/><text x="10.2504%" y="591.50"></text></g><g><title>isfree (10 samples, 0.01%)</title><rect x="10.0004%" y="565" width="0.0128%" height="15" fill="rgb(247,95,47)" fg:x="7842" fg:w="10"/><text x="10.2504%" y="575.50"></text></g><g><title>isdalloct (10 samples, 0.01%)</title><rect x="10.0004%" y="549" width="0.0128%" height="15" fill="rgb(216,140,30)" fg:x="7842" fg:w="10"/><text x="10.2504%" y="559.50"></text></g><g><title>arena_sdalloc (10 samples, 0.01%)</title><rect x="10.0004%" y="533" width="0.0128%" height="15" fill="rgb(246,214,8)" fg:x="7842" fg:w="10"/><text x="10.2504%" y="543.50"></text></g><g><title>tcache_dalloc_small (10 samples, 0.01%)</title><rect x="10.0004%" y="517" width="0.0128%" height="15" fill="rgb(227,224,15)" fg:x="7842" fg:w="10"/><text x="10.2504%" y="527.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (13 samples, 0.02%)</title><rect x="10.0182%" y="613" width="0.0166%" height="15" fill="rgb(233,175,4)" fg:x="7856" fg:w="13"/><text x="10.2682%" y="623.50"></text></g><g><title>&lt;aptos_storage_interface::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (13 samples, 0.02%)</title><rect x="10.0182%" y="597" width="0.0166%" height="15" fill="rgb(221,66,45)" fg:x="7856" fg:w="13"/><text x="10.2682%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.01%)</title><rect x="10.0208%" y="581" width="0.0140%" height="15" fill="rgb(221,178,18)" fg:x="7858" fg:w="11"/><text x="10.2708%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.01%)</title><rect x="10.0208%" y="565" width="0.0140%" height="15" fill="rgb(213,81,29)" fg:x="7858" fg:w="11"/><text x="10.2708%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.01%)</title><rect x="10.0208%" y="549" width="0.0140%" height="15" fill="rgb(220,89,49)" fg:x="7858" fg:w="11"/><text x="10.2708%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.01%)</title><rect x="10.0208%" y="533" width="0.0140%" height="15" fill="rgb(227,60,33)" fg:x="7858" fg:w="11"/><text x="10.2708%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.01%)</title><rect x="10.0208%" y="517" width="0.0140%" height="15" fill="rgb(205,113,12)" fg:x="7858" fg:w="11"/><text x="10.2708%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (10 samples, 0.01%)</title><rect x="10.0221%" y="501" width="0.0128%" height="15" fill="rgb(211,32,1)" fg:x="7859" fg:w="10"/><text x="10.2721%" y="511.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="10.0221%" y="485" width="0.0128%" height="15" fill="rgb(246,2,12)" fg:x="7859" fg:w="10"/><text x="10.2721%" y="495.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="10.0221%" y="469" width="0.0128%" height="15" fill="rgb(243,37,27)" fg:x="7859" fg:w="10"/><text x="10.2721%" y="479.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="10.0221%" y="453" width="0.0128%" height="15" fill="rgb(248,211,31)" fg:x="7859" fg:w="10"/><text x="10.2721%" y="463.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (10 samples, 0.01%)</title><rect x="10.0221%" y="437" width="0.0128%" height="15" fill="rgb(242,146,47)" fg:x="7859" fg:w="10"/><text x="10.2721%" y="447.50"></text></g><g><title> N]&gt;::hash (10 samples, 0.01%)</title><rect x="10.0221%" y="421" width="0.0128%" height="15" fill="rgb(206,70,20)" fg:x="7859" fg:w="10"/><text x="10.2721%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (10 samples, 0.01%)</title><rect x="10.0221%" y="405" width="0.0128%" height="15" fill="rgb(215,10,51)" fg:x="7859" fg:w="10"/><text x="10.2721%" y="415.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (10 samples, 0.01%)</title><rect x="10.0221%" y="389" width="0.0128%" height="15" fill="rgb(243,178,53)" fg:x="7859" fg:w="10"/><text x="10.2721%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (10 samples, 0.01%)</title><rect x="10.0221%" y="373" width="0.0128%" height="15" fill="rgb(233,221,20)" fg:x="7859" fg:w="10"/><text x="10.2721%" y="383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="10.0221%" y="357" width="0.0128%" height="15" fill="rgb(218,95,35)" fg:x="7859" fg:w="10"/><text x="10.2721%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="10.0221%" y="341" width="0.0128%" height="15" fill="rgb(229,13,5)" fg:x="7859" fg:w="10"/><text x="10.2721%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="10.0221%" y="325" width="0.0128%" height="15" fill="rgb(252,164,30)" fg:x="7859" fg:w="10"/><text x="10.2721%" y="335.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (20 samples, 0.03%)</title><rect x="10.0131%" y="725" width="0.0255%" height="15" fill="rgb(232,68,36)" fg:x="7852" fg:w="20"/><text x="10.2631%" y="735.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (20 samples, 0.03%)</title><rect x="10.0131%" y="709" width="0.0255%" height="15" fill="rgb(219,59,54)" fg:x="7852" fg:w="20"/><text x="10.2631%" y="719.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (16 samples, 0.02%)</title><rect x="10.0182%" y="693" width="0.0204%" height="15" fill="rgb(250,92,33)" fg:x="7856" fg:w="16"/><text x="10.2682%" y="703.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (16 samples, 0.02%)</title><rect x="10.0182%" y="677" width="0.0204%" height="15" fill="rgb(229,162,54)" fg:x="7856" fg:w="16"/><text x="10.2682%" y="687.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (16 samples, 0.02%)</title><rect x="10.0182%" y="661" width="0.0204%" height="15" fill="rgb(244,114,52)" fg:x="7856" fg:w="16"/><text x="10.2682%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (16 samples, 0.02%)</title><rect x="10.0182%" y="645" width="0.0204%" height="15" fill="rgb(212,211,43)" fg:x="7856" fg:w="16"/><text x="10.2682%" y="655.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (16 samples, 0.02%)</title><rect x="10.0182%" y="629" width="0.0204%" height="15" fill="rgb(226,147,8)" fg:x="7856" fg:w="16"/><text x="10.2682%" y="639.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (21 samples, 0.03%)</title><rect x="10.0131%" y="741" width="0.0268%" height="15" fill="rgb(226,23,13)" fg:x="7852" fg:w="21"/><text x="10.2631%" y="751.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (135 samples, 0.17%)</title><rect x="9.8690%" y="773" width="0.1722%" height="15" fill="rgb(240,63,4)" fg:x="7739" fg:w="135"/><text x="10.1190%" y="783.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (135 samples, 0.17%)</title><rect x="9.8690%" y="757" width="0.1722%" height="15" fill="rgb(221,1,32)" fg:x="7739" fg:w="135"/><text x="10.1190%" y="767.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="10.0412%" y="773" width="0.0140%" height="15" fill="rgb(242,117,10)" fg:x="7874" fg:w="11"/><text x="10.2912%" y="783.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::CachedStructIndex as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="10.0450%" y="757" width="0.0102%" height="15" fill="rgb(249,172,44)" fg:x="7877" fg:w="8"/><text x="10.2950%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (12 samples, 0.02%)</title><rect x="10.0565%" y="773" width="0.0153%" height="15" fill="rgb(244,46,45)" fg:x="7886" fg:w="12"/><text x="10.3065%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (12 samples, 0.02%)</title><rect x="10.0565%" y="757" width="0.0153%" height="15" fill="rgb(206,43,17)" fg:x="7886" fg:w="12"/><text x="10.3065%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.02%)</title><rect x="10.0565%" y="741" width="0.0153%" height="15" fill="rgb(239,218,39)" fg:x="7886" fg:w="12"/><text x="10.3065%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (12 samples, 0.02%)</title><rect x="10.0565%" y="725" width="0.0153%" height="15" fill="rgb(208,169,54)" fg:x="7886" fg:w="12"/><text x="10.3065%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (12 samples, 0.02%)</title><rect x="10.0565%" y="709" width="0.0153%" height="15" fill="rgb(247,25,42)" fg:x="7886" fg:w="12"/><text x="10.3065%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (9 samples, 0.01%)</title><rect x="10.0603%" y="693" width="0.0115%" height="15" fill="rgb(226,23,31)" fg:x="7889" fg:w="9"/><text x="10.3103%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (11 samples, 0.01%)</title><rect x="10.0718%" y="773" width="0.0140%" height="15" fill="rgb(247,16,28)" fg:x="7898" fg:w="11"/><text x="10.3218%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (11 samples, 0.01%)</title><rect x="10.0718%" y="757" width="0.0140%" height="15" fill="rgb(231,147,38)" fg:x="7898" fg:w="11"/><text x="10.3218%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="10.0718%" y="741" width="0.0140%" height="15" fill="rgb(253,81,48)" fg:x="7898" fg:w="11"/><text x="10.3218%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="10.0718%" y="725" width="0.0140%" height="15" fill="rgb(249,222,43)" fg:x="7898" fg:w="11"/><text x="10.3218%" y="735.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (11 samples, 0.01%)</title><rect x="10.0718%" y="709" width="0.0140%" height="15" fill="rgb(221,3,27)" fg:x="7898" fg:w="11"/><text x="10.3218%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,Type&gt;::borrow_mut (11 samples, 0.01%)</title><rect x="10.0858%" y="741" width="0.0140%" height="15" fill="rgb(228,180,5)" fg:x="7909" fg:w="11"/><text x="10.3358%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (12 samples, 0.02%)</title><rect x="10.0858%" y="757" width="0.0153%" height="15" fill="rgb(227,131,42)" fg:x="7909" fg:w="12"/><text x="10.3358%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (16 samples, 0.02%)</title><rect x="10.0858%" y="773" width="0.0204%" height="15" fill="rgb(212,3,39)" fg:x="7909" fg:w="16"/><text x="10.3358%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="10.1139%" y="773" width="0.0140%" height="15" fill="rgb(226,45,5)" fg:x="7931" fg:w="11"/><text x="10.3639%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="10.1139%" y="757" width="0.0140%" height="15" fill="rgb(215,167,45)" fg:x="7931" fg:w="11"/><text x="10.3639%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="10.1139%" y="741" width="0.0140%" height="15" fill="rgb(250,218,53)" fg:x="7931" fg:w="11"/><text x="10.3639%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="10.1139%" y="725" width="0.0140%" height="15" fill="rgb(207,140,0)" fg:x="7931" fg:w="11"/><text x="10.3639%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="10.1139%" y="709" width="0.0140%" height="15" fill="rgb(238,133,51)" fg:x="7931" fg:w="11"/><text x="10.3639%" y="719.50"></text></g><g><title>sdallocx (10 samples, 0.01%)</title><rect x="10.1152%" y="693" width="0.0128%" height="15" fill="rgb(218,203,53)" fg:x="7932" fg:w="10"/><text x="10.3652%" y="703.50"></text></g><g><title>isfree (10 samples, 0.01%)</title><rect x="10.1152%" y="677" width="0.0128%" height="15" fill="rgb(226,184,25)" fg:x="7932" fg:w="10"/><text x="10.3652%" y="687.50"></text></g><g><title>isdalloct (10 samples, 0.01%)</title><rect x="10.1152%" y="661" width="0.0128%" height="15" fill="rgb(231,121,21)" fg:x="7932" fg:w="10"/><text x="10.3652%" y="671.50"></text></g><g><title>arena_sdalloc (10 samples, 0.01%)</title><rect x="10.1152%" y="645" width="0.0128%" height="15" fill="rgb(251,14,34)" fg:x="7932" fg:w="10"/><text x="10.3652%" y="655.50"></text></g><g><title>tcache_dalloc_small (10 samples, 0.01%)</title><rect x="10.1152%" y="629" width="0.0128%" height="15" fill="rgb(249,193,11)" fg:x="7932" fg:w="10"/><text x="10.3652%" y="639.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="10.1917%" y="165" width="0.0102%" height="15" fill="rgb(220,172,37)" fg:x="7992" fg:w="8"/><text x="10.4417%" y="175.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (16 samples, 0.02%)</title><rect x="10.1866%" y="277" width="0.0204%" height="15" fill="rgb(231,229,43)" fg:x="7988" fg:w="16"/><text x="10.4366%" y="287.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="10.1866%" y="261" width="0.0204%" height="15" fill="rgb(250,161,5)" fg:x="7988" fg:w="16"/><text x="10.4366%" y="271.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="10.1917%" y="245" width="0.0153%" height="15" fill="rgb(218,225,18)" fg:x="7992" fg:w="12"/><text x="10.4417%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="10.1917%" y="229" width="0.0153%" height="15" fill="rgb(245,45,42)" fg:x="7992" fg:w="12"/><text x="10.4417%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.02%)</title><rect x="10.1917%" y="213" width="0.0153%" height="15" fill="rgb(211,115,1)" fg:x="7992" fg:w="12"/><text x="10.4417%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.02%)</title><rect x="10.1917%" y="197" width="0.0153%" height="15" fill="rgb(248,133,52)" fg:x="7992" fg:w="12"/><text x="10.4417%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.02%)</title><rect x="10.1917%" y="181" width="0.0153%" height="15" fill="rgb(238,100,21)" fg:x="7992" fg:w="12"/><text x="10.4417%" y="191.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (24 samples, 0.03%)</title><rect x="10.1815%" y="309" width="0.0306%" height="15" fill="rgb(247,144,11)" fg:x="7984" fg:w="24"/><text x="10.4315%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="10.1866%" y="293" width="0.0255%" height="15" fill="rgb(206,164,16)" fg:x="7988" fg:w="20"/><text x="10.4366%" y="303.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="10.1789%" y="405" width="0.0344%" height="15" fill="rgb(222,34,3)" fg:x="7982" fg:w="27"/><text x="10.4289%" y="415.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (25 samples, 0.03%)</title><rect x="10.1815%" y="389" width="0.0319%" height="15" fill="rgb(248,82,4)" fg:x="7984" fg:w="25"/><text x="10.4315%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.03%)</title><rect x="10.1815%" y="373" width="0.0319%" height="15" fill="rgb(228,81,46)" fg:x="7984" fg:w="25"/><text x="10.4315%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.03%)</title><rect x="10.1815%" y="357" width="0.0319%" height="15" fill="rgb(227,67,47)" fg:x="7984" fg:w="25"/><text x="10.4315%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.03%)</title><rect x="10.1815%" y="341" width="0.0319%" height="15" fill="rgb(215,93,53)" fg:x="7984" fg:w="25"/><text x="10.4315%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.03%)</title><rect x="10.1815%" y="325" width="0.0319%" height="15" fill="rgb(248,194,39)" fg:x="7984" fg:w="25"/><text x="10.4315%" y="335.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (31 samples, 0.04%)</title><rect x="10.1751%" y="517" width="0.0395%" height="15" fill="rgb(215,5,19)" fg:x="7979" fg:w="31"/><text x="10.4251%" y="527.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (31 samples, 0.04%)</title><rect x="10.1751%" y="501" width="0.0395%" height="15" fill="rgb(226,215,51)" fg:x="7979" fg:w="31"/><text x="10.4251%" y="511.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (28 samples, 0.04%)</title><rect x="10.1789%" y="485" width="0.0357%" height="15" fill="rgb(225,56,26)" fg:x="7982" fg:w="28"/><text x="10.4289%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.04%)</title><rect x="10.1789%" y="469" width="0.0357%" height="15" fill="rgb(222,75,29)" fg:x="7982" fg:w="28"/><text x="10.4289%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.04%)</title><rect x="10.1789%" y="453" width="0.0357%" height="15" fill="rgb(236,139,6)" fg:x="7982" fg:w="28"/><text x="10.4289%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.04%)</title><rect x="10.1789%" y="437" width="0.0357%" height="15" fill="rgb(223,137,36)" fg:x="7982" fg:w="28"/><text x="10.4289%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.04%)</title><rect x="10.1789%" y="421" width="0.0357%" height="15" fill="rgb(226,99,2)" fg:x="7982" fg:w="28"/><text x="10.4289%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.04%)</title><rect x="10.1751%" y="533" width="0.0434%" height="15" fill="rgb(206,133,23)" fg:x="7979" fg:w="34"/><text x="10.4251%" y="543.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (10 samples, 0.01%)</title><rect x="10.2184%" y="421" width="0.0128%" height="15" fill="rgb(243,173,15)" fg:x="8013" fg:w="10"/><text x="10.4684%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (10 samples, 0.01%)</title><rect x="10.2184%" y="405" width="0.0128%" height="15" fill="rgb(228,69,28)" fg:x="8013" fg:w="10"/><text x="10.4684%" y="415.50"></text></g><g><title>core::ptr::write (10 samples, 0.01%)</title><rect x="10.2184%" y="389" width="0.0128%" height="15" fill="rgb(212,51,22)" fg:x="8013" fg:w="10"/><text x="10.4684%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="10.2184%" y="437" width="0.0153%" height="15" fill="rgb(227,113,0)" fg:x="8013" fg:w="12"/><text x="10.4684%" y="447.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="10.2184%" y="453" width="0.0217%" height="15" fill="rgb(252,84,27)" fg:x="8013" fg:w="17"/><text x="10.4684%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="10.2401%" y="453" width="0.0140%" height="15" fill="rgb(223,145,39)" fg:x="8030" fg:w="11"/><text x="10.4901%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="10.2401%" y="437" width="0.0140%" height="15" fill="rgb(239,219,30)" fg:x="8030" fg:w="11"/><text x="10.4901%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (11 samples, 0.01%)</title><rect x="10.2401%" y="421" width="0.0140%" height="15" fill="rgb(224,196,39)" fg:x="8030" fg:w="11"/><text x="10.4901%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="10.2401%" y="405" width="0.0140%" height="15" fill="rgb(205,35,43)" fg:x="8030" fg:w="11"/><text x="10.4901%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="10.2401%" y="389" width="0.0140%" height="15" fill="rgb(228,201,21)" fg:x="8030" fg:w="11"/><text x="10.4901%" y="399.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="10.2401%" y="373" width="0.0140%" height="15" fill="rgb(237,118,16)" fg:x="8030" fg:w="11"/><text x="10.4901%" y="383.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (98 samples, 0.12%)</title><rect x="10.1470%" y="549" width="0.1250%" height="15" fill="rgb(241,17,19)" fg:x="7957" fg:w="98"/><text x="10.3970%" y="559.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (42 samples, 0.05%)</title><rect x="10.2184%" y="533" width="0.0536%" height="15" fill="rgb(214,10,25)" fg:x="8013" fg:w="42"/><text x="10.4684%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42 samples, 0.05%)</title><rect x="10.2184%" y="517" width="0.0536%" height="15" fill="rgb(238,37,29)" fg:x="8013" fg:w="42"/><text x="10.4684%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42 samples, 0.05%)</title><rect x="10.2184%" y="501" width="0.0536%" height="15" fill="rgb(253,83,25)" fg:x="8013" fg:w="42"/><text x="10.4684%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (42 samples, 0.05%)</title><rect x="10.2184%" y="485" width="0.0536%" height="15" fill="rgb(234,192,12)" fg:x="8013" fg:w="42"/><text x="10.4684%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42 samples, 0.05%)</title><rect x="10.2184%" y="469" width="0.0536%" height="15" fill="rgb(241,216,45)" fg:x="8013" fg:w="42"/><text x="10.4684%" y="479.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (14 samples, 0.02%)</title><rect x="10.2542%" y="453" width="0.0179%" height="15" fill="rgb(242,22,33)" fg:x="8041" fg:w="14"/><text x="10.5042%" y="463.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (115 samples, 0.15%)</title><rect x="10.1381%" y="645" width="0.1467%" height="15" fill="rgb(231,105,49)" fg:x="7950" fg:w="115"/><text x="10.3881%" y="655.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (108 samples, 0.14%)</title><rect x="10.1470%" y="629" width="0.1377%" height="15" fill="rgb(218,204,15)" fg:x="7957" fg:w="108"/><text x="10.3970%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (108 samples, 0.14%)</title><rect x="10.1470%" y="613" width="0.1377%" height="15" fill="rgb(235,138,41)" fg:x="7957" fg:w="108"/><text x="10.3970%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (108 samples, 0.14%)</title><rect x="10.1470%" y="597" width="0.1377%" height="15" fill="rgb(246,0,9)" fg:x="7957" fg:w="108"/><text x="10.3970%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (108 samples, 0.14%)</title><rect x="10.1470%" y="581" width="0.1377%" height="15" fill="rgb(210,74,4)" fg:x="7957" fg:w="108"/><text x="10.3970%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (108 samples, 0.14%)</title><rect x="10.1470%" y="565" width="0.1377%" height="15" fill="rgb(250,60,41)" fg:x="7957" fg:w="108"/><text x="10.3970%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="10.2720%" y="549" width="0.0128%" height="15" fill="rgb(220,115,12)" fg:x="8055" fg:w="10"/><text x="10.5220%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="10.2720%" y="533" width="0.0128%" height="15" fill="rgb(237,100,13)" fg:x="8055" fg:w="10"/><text x="10.5220%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (10 samples, 0.01%)</title><rect x="10.2720%" y="517" width="0.0128%" height="15" fill="rgb(213,55,26)" fg:x="8055" fg:w="10"/><text x="10.5220%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="10.2720%" y="501" width="0.0128%" height="15" fill="rgb(216,17,4)" fg:x="8055" fg:w="10"/><text x="10.5220%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="10.2720%" y="485" width="0.0128%" height="15" fill="rgb(220,153,47)" fg:x="8055" fg:w="10"/><text x="10.5220%" y="495.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="10.2720%" y="469" width="0.0128%" height="15" fill="rgb(215,131,9)" fg:x="8055" fg:w="10"/><text x="10.5220%" y="479.50"></text></g><g><title>mallocx (8 samples, 0.01%)</title><rect x="10.2746%" y="453" width="0.0102%" height="15" fill="rgb(233,46,42)" fg:x="8057" fg:w="8"/><text x="10.5246%" y="463.50"></text></g><g><title>imalloc (8 samples, 0.01%)</title><rect x="10.2746%" y="437" width="0.0102%" height="15" fill="rgb(226,86,7)" fg:x="8057" fg:w="8"/><text x="10.5246%" y="447.50"></text></g><g><title>imalloc_body (8 samples, 0.01%)</title><rect x="10.2746%" y="421" width="0.0102%" height="15" fill="rgb(239,226,21)" fg:x="8057" fg:w="8"/><text x="10.5246%" y="431.50"></text></g><g><title>imalloc_no_sample (8 samples, 0.01%)</title><rect x="10.2746%" y="405" width="0.0102%" height="15" fill="rgb(244,137,22)" fg:x="8057" fg:w="8"/><text x="10.5246%" y="415.50"></text></g><g><title>iallocztm (8 samples, 0.01%)</title><rect x="10.2746%" y="389" width="0.0102%" height="15" fill="rgb(211,139,35)" fg:x="8057" fg:w="8"/><text x="10.5246%" y="399.50"></text></g><g><title>arena_malloc (8 samples, 0.01%)</title><rect x="10.2746%" y="373" width="0.0102%" height="15" fill="rgb(214,62,50)" fg:x="8057" fg:w="8"/><text x="10.5246%" y="383.50"></text></g><g><title>tcache_alloc_small (8 samples, 0.01%)</title><rect x="10.2746%" y="357" width="0.0102%" height="15" fill="rgb(212,113,44)" fg:x="8057" fg:w="8"/><text x="10.5246%" y="367.50"></text></g><g><title>cache_bin_alloc_easy (8 samples, 0.01%)</title><rect x="10.2746%" y="341" width="0.0102%" height="15" fill="rgb(226,150,43)" fg:x="8057" fg:w="8"/><text x="10.5246%" y="351.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (119 samples, 0.15%)</title><rect x="10.1368%" y="725" width="0.1518%" height="15" fill="rgb(250,71,37)" fg:x="7949" fg:w="119"/><text x="10.3868%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (118 samples, 0.15%)</title><rect x="10.1381%" y="709" width="0.1505%" height="15" fill="rgb(219,76,19)" fg:x="7950" fg:w="118"/><text x="10.3881%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (118 samples, 0.15%)</title><rect x="10.1381%" y="693" width="0.1505%" height="15" fill="rgb(250,39,11)" fg:x="7950" fg:w="118"/><text x="10.3881%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (118 samples, 0.15%)</title><rect x="10.1381%" y="677" width="0.1505%" height="15" fill="rgb(230,64,31)" fg:x="7950" fg:w="118"/><text x="10.3881%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (118 samples, 0.15%)</title><rect x="10.1381%" y="661" width="0.1505%" height="15" fill="rgb(208,222,23)" fg:x="7950" fg:w="118"/><text x="10.3881%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (128 samples, 0.16%)</title><rect x="10.1279%" y="773" width="0.1632%" height="15" fill="rgb(227,125,18)" fg:x="7942" fg:w="128"/><text x="10.3779%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (128 samples, 0.16%)</title><rect x="10.1279%" y="757" width="0.1632%" height="15" fill="rgb(234,210,9)" fg:x="7942" fg:w="128"/><text x="10.3779%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (121 samples, 0.15%)</title><rect x="10.1368%" y="741" width="0.1543%" height="15" fill="rgb(217,127,24)" fg:x="7949" fg:w="121"/><text x="10.3868%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="10.2924%" y="741" width="0.0128%" height="15" fill="rgb(239,141,48)" fg:x="8071" fg:w="10"/><text x="10.5424%" y="751.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="10.3064%" y="725" width="0.0115%" height="15" fill="rgb(227,109,8)" fg:x="8082" fg:w="9"/><text x="10.5564%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (57 samples, 0.07%)</title><rect x="10.2911%" y="773" width="0.0727%" height="15" fill="rgb(235,184,23)" fg:x="8070" fg:w="57"/><text x="10.5411%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (57 samples, 0.07%)</title><rect x="10.2911%" y="757" width="0.0727%" height="15" fill="rgb(227,226,48)" fg:x="8070" fg:w="57"/><text x="10.5411%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (45 samples, 0.06%)</title><rect x="10.3064%" y="741" width="0.0574%" height="15" fill="rgb(206,150,11)" fg:x="8082" fg:w="45"/><text x="10.5564%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (36 samples, 0.05%)</title><rect x="10.3179%" y="725" width="0.0459%" height="15" fill="rgb(254,2,33)" fg:x="8091" fg:w="36"/><text x="10.5679%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (36 samples, 0.05%)</title><rect x="10.3179%" y="709" width="0.0459%" height="15" fill="rgb(243,160,20)" fg:x="8091" fg:w="36"/><text x="10.5679%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.05%)</title><rect x="10.3179%" y="693" width="0.0459%" height="15" fill="rgb(218,208,30)" fg:x="8091" fg:w="36"/><text x="10.5679%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (29 samples, 0.04%)</title><rect x="10.3268%" y="677" width="0.0370%" height="15" fill="rgb(224,120,49)" fg:x="8098" fg:w="29"/><text x="10.5768%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (29 samples, 0.04%)</title><rect x="10.3268%" y="661" width="0.0370%" height="15" fill="rgb(246,12,2)" fg:x="8098" fg:w="29"/><text x="10.5768%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (29 samples, 0.04%)</title><rect x="10.3268%" y="645" width="0.0370%" height="15" fill="rgb(236,117,3)" fg:x="8098" fg:w="29"/><text x="10.5768%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (29 samples, 0.04%)</title><rect x="10.3268%" y="629" width="0.0370%" height="15" fill="rgb(216,128,52)" fg:x="8098" fg:w="29"/><text x="10.5768%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (29 samples, 0.04%)</title><rect x="10.3268%" y="613" width="0.0370%" height="15" fill="rgb(246,145,19)" fg:x="8098" fg:w="29"/><text x="10.5768%" y="623.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (29 samples, 0.04%)</title><rect x="10.3268%" y="597" width="0.0370%" height="15" fill="rgb(222,11,46)" fg:x="8098" fg:w="29"/><text x="10.5768%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (29 samples, 0.04%)</title><rect x="10.3268%" y="581" width="0.0370%" height="15" fill="rgb(245,82,36)" fg:x="8098" fg:w="29"/><text x="10.5768%" y="591.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::CachedStructIndex as core::cmp::PartialEq&gt;::eq (29 samples, 0.04%)</title><rect x="10.3268%" y="565" width="0.0370%" height="15" fill="rgb(250,73,51)" fg:x="8098" fg:w="29"/><text x="10.5768%" y="575.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (23 samples, 0.03%)</title><rect x="10.4187%" y="213" width="0.0293%" height="15" fill="rgb(221,189,23)" fg:x="8170" fg:w="23"/><text x="10.6687%" y="223.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (22 samples, 0.03%)</title><rect x="10.4199%" y="197" width="0.0281%" height="15" fill="rgb(210,33,7)" fg:x="8171" fg:w="22"/><text x="10.6699%" y="207.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (22 samples, 0.03%)</title><rect x="10.4199%" y="181" width="0.0281%" height="15" fill="rgb(210,107,22)" fg:x="8171" fg:w="22"/><text x="10.6699%" y="191.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (22 samples, 0.03%)</title><rect x="10.4199%" y="165" width="0.0281%" height="15" fill="rgb(222,116,37)" fg:x="8171" fg:w="22"/><text x="10.6699%" y="175.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (20 samples, 0.03%)</title><rect x="10.4225%" y="149" width="0.0255%" height="15" fill="rgb(254,17,48)" fg:x="8173" fg:w="20"/><text x="10.6725%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (20 samples, 0.03%)</title><rect x="10.4225%" y="133" width="0.0255%" height="15" fill="rgb(224,36,32)" fg:x="8173" fg:w="20"/><text x="10.6725%" y="143.50"></text></g><g><title> 32]&gt;::deserialize (20 samples, 0.03%)</title><rect x="10.4225%" y="117" width="0.0255%" height="15" fill="rgb(232,90,46)" fg:x="8173" fg:w="20"/><text x="10.6725%" y="127.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (20 samples, 0.03%)</title><rect x="10.4225%" y="101" width="0.0255%" height="15" fill="rgb(241,66,40)" fg:x="8173" fg:w="20"/><text x="10.6725%" y="111.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (20 samples, 0.03%)</title><rect x="10.4225%" y="85" width="0.0255%" height="15" fill="rgb(249,184,29)" fg:x="8173" fg:w="20"/><text x="10.6725%" y="95.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (20 samples, 0.03%)</title><rect x="10.4225%" y="69" width="0.0255%" height="15" fill="rgb(231,181,1)" fg:x="8173" fg:w="20"/><text x="10.6725%" y="79.50"></text></g><g><title>serde::de::SeqAccess::next_element (12 samples, 0.02%)</title><rect x="10.4327%" y="53" width="0.0153%" height="15" fill="rgb(224,94,2)" fg:x="8181" fg:w="12"/><text x="10.6827%" y="63.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.02%)</title><rect x="10.4327%" y="37" width="0.0153%" height="15" fill="rgb(229,170,15)" fg:x="8181" fg:w="12"/><text x="10.6827%" y="47.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (31 samples, 0.04%)</title><rect x="10.4187%" y="309" width="0.0395%" height="15" fill="rgb(240,127,35)" fg:x="8170" fg:w="31"/><text x="10.6687%" y="319.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (31 samples, 0.04%)</title><rect x="10.4187%" y="293" width="0.0395%" height="15" fill="rgb(248,196,34)" fg:x="8170" fg:w="31"/><text x="10.6687%" y="303.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (31 samples, 0.04%)</title><rect x="10.4187%" y="277" width="0.0395%" height="15" fill="rgb(236,137,7)" fg:x="8170" fg:w="31"/><text x="10.6687%" y="287.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (31 samples, 0.04%)</title><rect x="10.4187%" y="261" width="0.0395%" height="15" fill="rgb(235,127,16)" fg:x="8170" fg:w="31"/><text x="10.6687%" y="271.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (31 samples, 0.04%)</title><rect x="10.4187%" y="245" width="0.0395%" height="15" fill="rgb(250,192,54)" fg:x="8170" fg:w="31"/><text x="10.6687%" y="255.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (31 samples, 0.04%)</title><rect x="10.4187%" y="229" width="0.0395%" height="15" fill="rgb(218,98,20)" fg:x="8170" fg:w="31"/><text x="10.6687%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (8 samples, 0.01%)</title><rect x="10.4480%" y="213" width="0.0102%" height="15" fill="rgb(230,176,47)" fg:x="8193" fg:w="8"/><text x="10.6980%" y="223.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (34 samples, 0.04%)</title><rect x="10.4174%" y="341" width="0.0434%" height="15" fill="rgb(244,2,33)" fg:x="8169" fg:w="34"/><text x="10.6674%" y="351.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::VectorElementVisitor as serde::de::Visitor&gt;::visit_seq (33 samples, 0.04%)</title><rect x="10.4187%" y="325" width="0.0421%" height="15" fill="rgb(231,100,17)" fg:x="8170" fg:w="33"/><text x="10.6687%" y="335.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (40 samples, 0.05%)</title><rect x="10.4174%" y="373" width="0.0510%" height="15" fill="rgb(245,23,12)" fg:x="8169" fg:w="40"/><text x="10.6674%" y="383.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (40 samples, 0.05%)</title><rect x="10.4174%" y="357" width="0.0510%" height="15" fill="rgb(249,55,22)" fg:x="8169" fg:w="40"/><text x="10.6674%" y="367.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (62 samples, 0.08%)</title><rect x="10.3970%" y="501" width="0.0791%" height="15" fill="rgb(207,134,9)" fg:x="8153" fg:w="62"/><text x="10.6470%" y="511.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (62 samples, 0.08%)</title><rect x="10.3970%" y="485" width="0.0791%" height="15" fill="rgb(218,134,0)" fg:x="8153" fg:w="62"/><text x="10.6470%" y="495.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (62 samples, 0.08%)</title><rect x="10.3970%" y="469" width="0.0791%" height="15" fill="rgb(213,212,33)" fg:x="8153" fg:w="62"/><text x="10.6470%" y="479.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (47 samples, 0.06%)</title><rect x="10.4161%" y="453" width="0.0599%" height="15" fill="rgb(252,106,18)" fg:x="8168" fg:w="47"/><text x="10.6661%" y="463.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (47 samples, 0.06%)</title><rect x="10.4161%" y="437" width="0.0599%" height="15" fill="rgb(208,126,42)" fg:x="8168" fg:w="47"/><text x="10.6661%" y="447.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (46 samples, 0.06%)</title><rect x="10.4174%" y="421" width="0.0587%" height="15" fill="rgb(246,175,29)" fg:x="8169" fg:w="46"/><text x="10.6674%" y="431.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (46 samples, 0.06%)</title><rect x="10.4174%" y="405" width="0.0587%" height="15" fill="rgb(215,13,50)" fg:x="8169" fg:w="46"/><text x="10.6674%" y="415.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (46 samples, 0.06%)</title><rect x="10.4174%" y="389" width="0.0587%" height="15" fill="rgb(216,172,15)" fg:x="8169" fg:w="46"/><text x="10.6674%" y="399.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (64 samples, 0.08%)</title><rect x="10.3970%" y="517" width="0.0816%" height="15" fill="rgb(212,103,13)" fg:x="8153" fg:w="64"/><text x="10.6470%" y="527.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (67 samples, 0.09%)</title><rect x="10.3970%" y="565" width="0.0854%" height="15" fill="rgb(231,171,36)" fg:x="8153" fg:w="67"/><text x="10.6470%" y="575.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::VectorElementVisitor as serde::de::Visitor&gt;::visit_seq (67 samples, 0.09%)</title><rect x="10.3970%" y="549" width="0.0854%" height="15" fill="rgb(250,123,20)" fg:x="8153" fg:w="67"/><text x="10.6470%" y="559.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (67 samples, 0.09%)</title><rect x="10.3970%" y="533" width="0.0854%" height="15" fill="rgb(212,53,50)" fg:x="8153" fg:w="67"/><text x="10.6470%" y="543.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (11 samples, 0.01%)</title><rect x="10.4913%" y="405" width="0.0140%" height="15" fill="rgb(243,54,12)" fg:x="8227" fg:w="11"/><text x="10.7413%" y="415.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (11 samples, 0.01%)</title><rect x="10.4913%" y="389" width="0.0140%" height="15" fill="rgb(234,101,34)" fg:x="8227" fg:w="11"/><text x="10.7413%" y="399.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (11 samples, 0.01%)</title><rect x="10.4913%" y="373" width="0.0140%" height="15" fill="rgb(254,67,22)" fg:x="8227" fg:w="11"/><text x="10.7413%" y="383.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (10 samples, 0.01%)</title><rect x="10.4926%" y="357" width="0.0128%" height="15" fill="rgb(250,35,47)" fg:x="8228" fg:w="10"/><text x="10.7426%" y="367.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (10 samples, 0.01%)</title><rect x="10.4926%" y="341" width="0.0128%" height="15" fill="rgb(226,126,38)" fg:x="8228" fg:w="10"/><text x="10.7426%" y="351.50"></text></g><g><title> 32]&gt;::deserialize (10 samples, 0.01%)</title><rect x="10.4926%" y="325" width="0.0128%" height="15" fill="rgb(216,138,53)" fg:x="8228" fg:w="10"/><text x="10.7426%" y="335.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (10 samples, 0.01%)</title><rect x="10.4926%" y="309" width="0.0128%" height="15" fill="rgb(246,199,43)" fg:x="8228" fg:w="10"/><text x="10.7426%" y="319.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (10 samples, 0.01%)</title><rect x="10.4926%" y="293" width="0.0128%" height="15" fill="rgb(232,125,11)" fg:x="8228" fg:w="10"/><text x="10.7426%" y="303.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (10 samples, 0.01%)</title><rect x="10.4926%" y="277" width="0.0128%" height="15" fill="rgb(218,219,45)" fg:x="8228" fg:w="10"/><text x="10.7426%" y="287.50"></text></g><g><title>serde::de::SeqAccess::next_element (10 samples, 0.01%)</title><rect x="10.4926%" y="261" width="0.0128%" height="15" fill="rgb(216,102,54)" fg:x="8228" fg:w="10"/><text x="10.7426%" y="271.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.02%)</title><rect x="10.4913%" y="437" width="0.0153%" height="15" fill="rgb(250,228,7)" fg:x="8227" fg:w="12"/><text x="10.7413%" y="447.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.02%)</title><rect x="10.4913%" y="421" width="0.0153%" height="15" fill="rgb(226,125,25)" fg:x="8227" fg:w="12"/><text x="10.7413%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.02%)</title><rect x="10.5067%" y="437" width="0.0217%" height="15" fill="rgb(224,165,27)" fg:x="8239" fg:w="17"/><text x="10.7567%" y="447.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (30 samples, 0.04%)</title><rect x="10.4913%" y="485" width="0.0383%" height="15" fill="rgb(233,86,3)" fg:x="8227" fg:w="30"/><text x="10.7413%" y="495.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (30 samples, 0.04%)</title><rect x="10.4913%" y="469" width="0.0383%" height="15" fill="rgb(228,116,20)" fg:x="8227" fg:w="30"/><text x="10.7413%" y="479.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (30 samples, 0.04%)</title><rect x="10.4913%" y="453" width="0.0383%" height="15" fill="rgb(209,192,17)" fg:x="8227" fg:w="30"/><text x="10.7413%" y="463.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (51 samples, 0.07%)</title><rect x="10.4824%" y="517" width="0.0650%" height="15" fill="rgb(224,88,34)" fg:x="8220" fg:w="51"/><text x="10.7324%" y="527.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (51 samples, 0.07%)</title><rect x="10.4824%" y="501" width="0.0650%" height="15" fill="rgb(233,38,6)" fg:x="8220" fg:w="51"/><text x="10.7324%" y="511.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (52 samples, 0.07%)</title><rect x="10.4824%" y="565" width="0.0663%" height="15" fill="rgb(212,59,30)" fg:x="8220" fg:w="52"/><text x="10.7324%" y="575.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (52 samples, 0.07%)</title><rect x="10.4824%" y="549" width="0.0663%" height="15" fill="rgb(213,80,3)" fg:x="8220" fg:w="52"/><text x="10.7324%" y="559.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (52 samples, 0.07%)</title><rect x="10.4824%" y="533" width="0.0663%" height="15" fill="rgb(251,178,7)" fg:x="8220" fg:w="52"/><text x="10.7324%" y="543.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (139 samples, 0.18%)</title><rect x="10.3842%" y="597" width="0.1773%" height="15" fill="rgb(213,154,26)" fg:x="8143" fg:w="139"/><text x="10.6342%" y="607.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (139 samples, 0.18%)</title><rect x="10.3842%" y="581" width="0.1773%" height="15" fill="rgb(238,165,49)" fg:x="8143" fg:w="139"/><text x="10.6342%" y="591.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (140 samples, 0.18%)</title><rect x="10.3842%" y="629" width="0.1785%" height="15" fill="rgb(248,91,46)" fg:x="8143" fg:w="140"/><text x="10.6342%" y="639.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (140 samples, 0.18%)</title><rect x="10.3842%" y="613" width="0.1785%" height="15" fill="rgb(244,21,52)" fg:x="8143" fg:w="140"/><text x="10.6342%" y="623.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (154 samples, 0.20%)</title><rect x="10.3689%" y="645" width="0.1964%" height="15" fill="rgb(247,122,20)" fg:x="8131" fg:w="154"/><text x="10.6189%" y="655.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (9 samples, 0.01%)</title><rect x="10.5691%" y="645" width="0.0115%" height="15" fill="rgb(218,27,9)" fg:x="8288" fg:w="9"/><text x="10.8191%" y="655.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (9 samples, 0.01%)</title><rect x="10.5691%" y="629" width="0.0115%" height="15" fill="rgb(246,7,6)" fg:x="8288" fg:w="9"/><text x="10.8191%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (9 samples, 0.01%)</title><rect x="10.5691%" y="613" width="0.0115%" height="15" fill="rgb(227,135,54)" fg:x="8288" fg:w="9"/><text x="10.8191%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.01%)</title><rect x="10.5691%" y="597" width="0.0115%" height="15" fill="rgb(247,14,11)" fg:x="8288" fg:w="9"/><text x="10.8191%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="10.5691%" y="581" width="0.0115%" height="15" fill="rgb(206,149,34)" fg:x="8288" fg:w="9"/><text x="10.8191%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="10.5691%" y="565" width="0.0115%" height="15" fill="rgb(227,228,4)" fg:x="8288" fg:w="9"/><text x="10.8191%" y="575.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="10.5691%" y="549" width="0.0115%" height="15" fill="rgb(238,218,28)" fg:x="8288" fg:w="9"/><text x="10.8191%" y="559.50"></text></g><g><title>mallocx (8 samples, 0.01%)</title><rect x="10.5704%" y="533" width="0.0102%" height="15" fill="rgb(252,86,40)" fg:x="8289" fg:w="8"/><text x="10.8204%" y="543.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (171 samples, 0.22%)</title><rect x="10.3689%" y="677" width="0.2181%" height="15" fill="rgb(251,225,11)" fg:x="8131" fg:w="171"/><text x="10.6189%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (171 samples, 0.22%)</title><rect x="10.3689%" y="661" width="0.2181%" height="15" fill="rgb(206,46,49)" fg:x="8131" fg:w="171"/><text x="10.6189%" y="671.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (177 samples, 0.23%)</title><rect x="10.3689%" y="709" width="0.2257%" height="15" fill="rgb(245,128,24)" fg:x="8131" fg:w="177"/><text x="10.6189%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (177 samples, 0.23%)</title><rect x="10.3689%" y="693" width="0.2257%" height="15" fill="rgb(219,177,34)" fg:x="8131" fg:w="177"/><text x="10.6189%" y="703.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (181 samples, 0.23%)</title><rect x="10.3664%" y="725" width="0.2308%" height="15" fill="rgb(218,60,48)" fg:x="8129" fg:w="181"/><text x="10.6164%" y="735.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (182 samples, 0.23%)</title><rect x="10.3664%" y="741" width="0.2321%" height="15" fill="rgb(221,11,5)" fg:x="8129" fg:w="182"/><text x="10.6164%" y="751.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (600 samples, 0.77%)</title><rect x="9.8550%" y="805" width="0.7651%" height="15" fill="rgb(220,148,13)" fg:x="7728" fg:w="600"/><text x="10.1050%" y="815.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (594 samples, 0.76%)</title><rect x="9.8627%" y="789" width="0.7575%" height="15" fill="rgb(210,16,3)" fg:x="7734" fg:w="594"/><text x="10.1127%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (199 samples, 0.25%)</title><rect x="10.3664%" y="773" width="0.2538%" height="15" fill="rgb(236,80,2)" fg:x="8129" fg:w="199"/><text x="10.6164%" y="783.50"></text></g><g><title>bcs::de::from_bytes_seed (199 samples, 0.25%)</title><rect x="10.3664%" y="757" width="0.2538%" height="15" fill="rgb(239,129,19)" fg:x="8129" fg:w="199"/><text x="10.6164%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (17 samples, 0.02%)</title><rect x="10.5985%" y="741" width="0.0217%" height="15" fill="rgb(220,106,35)" fg:x="8311" fg:w="17"/><text x="10.8485%" y="751.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (604 samples, 0.77%)</title><rect x="9.8550%" y="821" width="0.7702%" height="15" fill="rgb(252,139,45)" fg:x="7728" fg:w="604"/><text x="10.1050%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="10.6329%" y="725" width="0.0179%" height="15" fill="rgb(229,8,36)" fg:x="8338" fg:w="14"/><text x="10.8829%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.01%)</title><rect x="10.6393%" y="709" width="0.0115%" height="15" fill="rgb(230,126,33)" fg:x="8343" fg:w="9"/><text x="10.8893%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.01%)</title><rect x="10.6393%" y="693" width="0.0115%" height="15" fill="rgb(239,140,21)" fg:x="8343" fg:w="9"/><text x="10.8893%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.01%)</title><rect x="10.6393%" y="677" width="0.0115%" height="15" fill="rgb(254,104,9)" fg:x="8343" fg:w="9"/><text x="10.8893%" y="687.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="10.6329%" y="741" width="0.0255%" height="15" fill="rgb(239,52,14)" fg:x="8338" fg:w="20"/><text x="10.8829%" y="751.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (18 samples, 0.02%)</title><rect x="10.6699%" y="597" width="0.0230%" height="15" fill="rgb(208,227,44)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="607.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (18 samples, 0.02%)</title><rect x="10.6699%" y="581" width="0.0230%" height="15" fill="rgb(246,18,19)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (18 samples, 0.02%)</title><rect x="10.6699%" y="565" width="0.0230%" height="15" fill="rgb(235,228,25)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="575.50"></text></g><g><title> 32]&gt;::serialize (18 samples, 0.02%)</title><rect x="10.6699%" y="549" width="0.0230%" height="15" fill="rgb(240,156,20)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="559.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (18 samples, 0.02%)</title><rect x="10.6699%" y="533" width="0.0230%" height="15" fill="rgb(224,8,20)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (18 samples, 0.02%)</title><rect x="10.6699%" y="517" width="0.0230%" height="15" fill="rgb(214,12,52)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (18 samples, 0.02%)</title><rect x="10.6699%" y="501" width="0.0230%" height="15" fill="rgb(211,220,47)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (18 samples, 0.02%)</title><rect x="10.6699%" y="485" width="0.0230%" height="15" fill="rgb(250,173,5)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (18 samples, 0.02%)</title><rect x="10.6699%" y="469" width="0.0230%" height="15" fill="rgb(250,125,52)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (18 samples, 0.02%)</title><rect x="10.6699%" y="453" width="0.0230%" height="15" fill="rgb(209,133,18)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (18 samples, 0.02%)</title><rect x="10.6699%" y="437" width="0.0230%" height="15" fill="rgb(216,173,22)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="10.6699%" y="421" width="0.0230%" height="15" fill="rgb(205,3,22)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="10.6699%" y="405" width="0.0230%" height="15" fill="rgb(248,22,20)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.02%)</title><rect x="10.6699%" y="389" width="0.0230%" height="15" fill="rgb(233,6,29)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.02%)</title><rect x="10.6699%" y="373" width="0.0230%" height="15" fill="rgb(240,22,54)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.02%)</title><rect x="10.6699%" y="357" width="0.0230%" height="15" fill="rgb(231,133,32)" fg:x="8367" fg:w="18"/><text x="10.9199%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.02%)</title><rect x="10.6712%" y="341" width="0.0217%" height="15" fill="rgb(248,193,4)" fg:x="8368" fg:w="17"/><text x="10.9212%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 0.02%)</title><rect x="10.6712%" y="325" width="0.0217%" height="15" fill="rgb(211,178,46)" fg:x="8368" fg:w="17"/><text x="10.9212%" y="335.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.02%)</title><rect x="10.6712%" y="309" width="0.0217%" height="15" fill="rgb(224,5,42)" fg:x="8368" fg:w="17"/><text x="10.9212%" y="319.50"></text></g><g><title>rallocx (16 samples, 0.02%)</title><rect x="10.6724%" y="293" width="0.0204%" height="15" fill="rgb(239,176,25)" fg:x="8369" fg:w="16"/><text x="10.9224%" y="303.50"></text></g><g><title>bcs::ser::to_bytes (30 samples, 0.04%)</title><rect x="10.6610%" y="693" width="0.0383%" height="15" fill="rgb(245,187,50)" fg:x="8360" fg:w="30"/><text x="10.9110%" y="703.50"></text></g><g><title>bcs::ser::serialize_into (29 samples, 0.04%)</title><rect x="10.6622%" y="677" width="0.0370%" height="15" fill="rgb(248,24,15)" fg:x="8361" fg:w="29"/><text x="10.9122%" y="687.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (29 samples, 0.04%)</title><rect x="10.6622%" y="661" width="0.0370%" height="15" fill="rgb(205,166,13)" fg:x="8361" fg:w="29"/><text x="10.9122%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (29 samples, 0.04%)</title><rect x="10.6622%" y="645" width="0.0370%" height="15" fill="rgb(208,114,23)" fg:x="8361" fg:w="29"/><text x="10.9122%" y="655.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (28 samples, 0.04%)</title><rect x="10.6635%" y="629" width="0.0357%" height="15" fill="rgb(239,127,18)" fg:x="8362" fg:w="28"/><text x="10.9135%" y="639.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 0.04%)</title><rect x="10.6635%" y="613" width="0.0357%" height="15" fill="rgb(219,154,28)" fg:x="8362" fg:w="28"/><text x="10.9135%" y="623.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (42 samples, 0.05%)</title><rect x="10.6584%" y="725" width="0.0536%" height="15" fill="rgb(225,157,23)" fg:x="8358" fg:w="42"/><text x="10.9084%" y="735.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (42 samples, 0.05%)</title><rect x="10.6584%" y="709" width="0.0536%" height="15" fill="rgb(219,8,6)" fg:x="8358" fg:w="42"/><text x="10.9084%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (10 samples, 0.01%)</title><rect x="10.6992%" y="693" width="0.0128%" height="15" fill="rgb(212,47,6)" fg:x="8390" fg:w="10"/><text x="10.9492%" y="703.50"></text></g><g><title>aptos_vm::create_access_path (48 samples, 0.06%)</title><rect x="10.6584%" y="741" width="0.0612%" height="15" fill="rgb(224,190,4)" fg:x="8358" fg:w="48"/><text x="10.9084%" y="751.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (38 samples, 0.05%)</title><rect x="10.7222%" y="677" width="0.0485%" height="15" fill="rgb(239,183,29)" fg:x="8408" fg:w="38"/><text x="10.9722%" y="687.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (38 samples, 0.05%)</title><rect x="10.7222%" y="661" width="0.0485%" height="15" fill="rgb(213,57,7)" fg:x="8408" fg:w="38"/><text x="10.9722%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (26 samples, 0.03%)</title><rect x="10.7375%" y="645" width="0.0332%" height="15" fill="rgb(216,148,1)" fg:x="8420" fg:w="26"/><text x="10.9875%" y="655.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (26 samples, 0.03%)</title><rect x="10.7375%" y="629" width="0.0332%" height="15" fill="rgb(236,182,29)" fg:x="8420" fg:w="26"/><text x="10.9875%" y="639.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (25 samples, 0.03%)</title><rect x="10.7387%" y="613" width="0.0319%" height="15" fill="rgb(244,120,48)" fg:x="8421" fg:w="25"/><text x="10.9887%" y="623.50"></text></g><g><title>&lt;aptos_storage_interface::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (25 samples, 0.03%)</title><rect x="10.7387%" y="597" width="0.0319%" height="15" fill="rgb(206,71,34)" fg:x="8421" fg:w="25"/><text x="10.9887%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.01%)</title><rect x="10.7579%" y="581" width="0.0128%" height="15" fill="rgb(242,32,6)" fg:x="8436" fg:w="10"/><text x="11.0079%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.01%)</title><rect x="10.7579%" y="565" width="0.0128%" height="15" fill="rgb(241,35,3)" fg:x="8436" fg:w="10"/><text x="11.0079%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.01%)</title><rect x="10.7579%" y="549" width="0.0128%" height="15" fill="rgb(222,62,19)" fg:x="8436" fg:w="10"/><text x="11.0079%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.01%)</title><rect x="10.7579%" y="533" width="0.0128%" height="15" fill="rgb(223,110,41)" fg:x="8436" fg:w="10"/><text x="11.0079%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.01%)</title><rect x="10.7579%" y="517" width="0.0128%" height="15" fill="rgb(208,224,4)" fg:x="8436" fg:w="10"/><text x="11.0079%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (10 samples, 0.01%)</title><rect x="10.7579%" y="501" width="0.0128%" height="15" fill="rgb(241,137,19)" fg:x="8436" fg:w="10"/><text x="11.0079%" y="511.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="10.7579%" y="485" width="0.0128%" height="15" fill="rgb(244,24,17)" fg:x="8436" fg:w="10"/><text x="11.0079%" y="495.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="10.7579%" y="469" width="0.0128%" height="15" fill="rgb(245,178,49)" fg:x="8436" fg:w="10"/><text x="11.0079%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="10.7579%" y="453" width="0.0128%" height="15" fill="rgb(219,160,38)" fg:x="8436" fg:w="10"/><text x="11.0079%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="10.7579%" y="437" width="0.0128%" height="15" fill="rgb(228,137,14)" fg:x="8436" fg:w="10"/><text x="11.0079%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="10.7579%" y="421" width="0.0128%" height="15" fill="rgb(237,134,11)" fg:x="8436" fg:w="10"/><text x="11.0079%" y="431.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (48 samples, 0.06%)</title><rect x="10.7222%" y="693" width="0.0612%" height="15" fill="rgb(211,126,44)" fg:x="8408" fg:w="48"/><text x="10.9722%" y="703.50"></text></g><g><title>aptos_types::write_set::WriteSetV0::get (10 samples, 0.01%)</title><rect x="10.7706%" y="677" width="0.0128%" height="15" fill="rgb(226,171,33)" fg:x="8446" fg:w="10"/><text x="11.0206%" y="687.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::get (10 samples, 0.01%)</title><rect x="10.7706%" y="661" width="0.0128%" height="15" fill="rgb(253,99,13)" fg:x="8446" fg:w="10"/><text x="11.0206%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (10 samples, 0.01%)</title><rect x="10.7706%" y="645" width="0.0128%" height="15" fill="rgb(244,48,7)" fg:x="8446" fg:w="10"/><text x="11.0206%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.01%)</title><rect x="10.7706%" y="629" width="0.0128%" height="15" fill="rgb(244,217,54)" fg:x="8446" fg:w="10"/><text x="11.0206%" y="639.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (56 samples, 0.07%)</title><rect x="10.7196%" y="725" width="0.0714%" height="15" fill="rgb(224,15,18)" fg:x="8406" fg:w="56"/><text x="10.9696%" y="735.50"></text></g><g><title>&lt;aptos_vm::delta_state_view::DeltaStateView&lt;S&gt; as aptos_state_view::TStateView&gt;::get_state_value (56 samples, 0.07%)</title><rect x="10.7196%" y="709" width="0.0714%" height="15" fill="rgb(244,99,12)" fg:x="8406" fg:w="56"/><text x="10.9696%" y="719.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (63 samples, 0.08%)</title><rect x="10.7196%" y="741" width="0.0803%" height="15" fill="rgb(233,226,8)" fg:x="8406" fg:w="63"/><text x="10.9696%" y="751.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapterOwned&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (145 samples, 0.18%)</title><rect x="10.6252%" y="773" width="0.1849%" height="15" fill="rgb(229,211,3)" fg:x="8332" fg:w="145"/><text x="10.8752%" y="783.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (139 samples, 0.18%)</title><rect x="10.6329%" y="757" width="0.1773%" height="15" fill="rgb(216,140,21)" fg:x="8338" fg:w="139"/><text x="10.8829%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::AccessPath&gt; (8 samples, 0.01%)</title><rect x="10.8000%" y="741" width="0.0102%" height="15" fill="rgb(234,122,30)" fg:x="8469" fg:w="8"/><text x="11.0500%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="10.8000%" y="725" width="0.0102%" height="15" fill="rgb(236,25,46)" fg:x="8469" fg:w="8"/><text x="11.0500%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="10.8000%" y="709" width="0.0102%" height="15" fill="rgb(217,52,54)" fg:x="8469" fg:w="8"/><text x="11.0500%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="10.8000%" y="693" width="0.0102%" height="15" fill="rgb(222,29,26)" fg:x="8469" fg:w="8"/><text x="11.0500%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="10.8000%" y="677" width="0.0102%" height="15" fill="rgb(216,177,29)" fg:x="8469" fg:w="8"/><text x="11.0500%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="10.8000%" y="661" width="0.0102%" height="15" fill="rgb(247,136,51)" fg:x="8469" fg:w="8"/><text x="11.0500%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (10 samples, 0.01%)</title><rect x="10.8242%" y="773" width="0.0128%" height="15" fill="rgb(231,47,47)" fg:x="8488" fg:w="10"/><text x="11.0742%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (10 samples, 0.01%)</title><rect x="10.8242%" y="757" width="0.0128%" height="15" fill="rgb(211,192,36)" fg:x="8488" fg:w="10"/><text x="11.0742%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (9 samples, 0.01%)</title><rect x="10.8255%" y="741" width="0.0115%" height="15" fill="rgb(229,156,32)" fg:x="8489" fg:w="9"/><text x="11.0755%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (9 samples, 0.01%)</title><rect x="10.8255%" y="725" width="0.0115%" height="15" fill="rgb(248,213,20)" fg:x="8489" fg:w="9"/><text x="11.0755%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="10.8255%" y="709" width="0.0115%" height="15" fill="rgb(217,64,7)" fg:x="8489" fg:w="9"/><text x="11.0755%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="10.8255%" y="693" width="0.0115%" height="15" fill="rgb(232,142,8)" fg:x="8489" fg:w="9"/><text x="11.0755%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="10.8255%" y="677" width="0.0115%" height="15" fill="rgb(224,92,44)" fg:x="8489" fg:w="9"/><text x="11.0755%" y="687.50"></text></g><g><title>sdallocx (9 samples, 0.01%)</title><rect x="10.8255%" y="661" width="0.0115%" height="15" fill="rgb(214,169,17)" fg:x="8489" fg:w="9"/><text x="11.0755%" y="671.50"></text></g><g><title>isfree (9 samples, 0.01%)</title><rect x="10.8255%" y="645" width="0.0115%" height="15" fill="rgb(210,59,37)" fg:x="8489" fg:w="9"/><text x="11.0755%" y="655.50"></text></g><g><title>isdalloct (9 samples, 0.01%)</title><rect x="10.8255%" y="629" width="0.0115%" height="15" fill="rgb(214,116,48)" fg:x="8489" fg:w="9"/><text x="11.0755%" y="639.50"></text></g><g><title>arena_sdalloc (9 samples, 0.01%)</title><rect x="10.8255%" y="613" width="0.0115%" height="15" fill="rgb(244,191,6)" fg:x="8489" fg:w="9"/><text x="11.0755%" y="623.50"></text></g><g><title>tcache_dalloc_small (9 samples, 0.01%)</title><rect x="10.8255%" y="597" width="0.0115%" height="15" fill="rgb(241,50,52)" fg:x="8489" fg:w="9"/><text x="11.0755%" y="607.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (27 samples, 0.03%)</title><rect x="10.8369%" y="773" width="0.0344%" height="15" fill="rgb(236,75,39)" fg:x="8498" fg:w="27"/><text x="11.0869%" y="783.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="10.9186%" y="453" width="0.0128%" height="15" fill="rgb(236,99,0)" fg:x="8562" fg:w="10"/><text x="11.1686%" y="463.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="10.9186%" y="437" width="0.0128%" height="15" fill="rgb(207,202,15)" fg:x="8562" fg:w="10"/><text x="11.1686%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="10.9186%" y="421" width="0.0128%" height="15" fill="rgb(233,207,14)" fg:x="8562" fg:w="10"/><text x="11.1686%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.01%)</title><rect x="10.9186%" y="405" width="0.0128%" height="15" fill="rgb(226,27,51)" fg:x="8562" fg:w="10"/><text x="11.1686%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.01%)</title><rect x="10.9186%" y="389" width="0.0128%" height="15" fill="rgb(206,104,42)" fg:x="8562" fg:w="10"/><text x="11.1686%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.01%)</title><rect x="10.9186%" y="373" width="0.0128%" height="15" fill="rgb(212,225,4)" fg:x="8562" fg:w="10"/><text x="11.1686%" y="383.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (8 samples, 0.01%)</title><rect x="10.9211%" y="357" width="0.0102%" height="15" fill="rgb(233,96,42)" fg:x="8564" fg:w="8"/><text x="11.1711%" y="367.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="10.9186%" y="549" width="0.0140%" height="15" fill="rgb(229,21,32)" fg:x="8562" fg:w="11"/><text x="11.1686%" y="559.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="10.9186%" y="533" width="0.0140%" height="15" fill="rgb(226,216,24)" fg:x="8562" fg:w="11"/><text x="11.1686%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="10.9186%" y="517" width="0.0140%" height="15" fill="rgb(221,163,17)" fg:x="8562" fg:w="11"/><text x="11.1686%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="10.9186%" y="501" width="0.0140%" height="15" fill="rgb(216,216,42)" fg:x="8562" fg:w="11"/><text x="11.1686%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="10.9186%" y="485" width="0.0140%" height="15" fill="rgb(240,118,7)" fg:x="8562" fg:w="11"/><text x="11.1686%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="10.9186%" y="469" width="0.0140%" height="15" fill="rgb(221,67,37)" fg:x="8562" fg:w="11"/><text x="11.1686%" y="479.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (45 samples, 0.06%)</title><rect x="10.8969%" y="645" width="0.0574%" height="15" fill="rgb(241,32,44)" fg:x="8545" fg:w="45"/><text x="11.1469%" y="655.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (28 samples, 0.04%)</title><rect x="10.9186%" y="629" width="0.0357%" height="15" fill="rgb(235,204,43)" fg:x="8562" fg:w="28"/><text x="11.1686%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.04%)</title><rect x="10.9186%" y="613" width="0.0357%" height="15" fill="rgb(213,116,10)" fg:x="8562" fg:w="28"/><text x="11.1686%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.04%)</title><rect x="10.9186%" y="597" width="0.0357%" height="15" fill="rgb(239,15,48)" fg:x="8562" fg:w="28"/><text x="11.1686%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.04%)</title><rect x="10.9186%" y="581" width="0.0357%" height="15" fill="rgb(207,123,36)" fg:x="8562" fg:w="28"/><text x="11.1686%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.04%)</title><rect x="10.9186%" y="565" width="0.0357%" height="15" fill="rgb(209,103,30)" fg:x="8562" fg:w="28"/><text x="11.1686%" y="575.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (15 samples, 0.02%)</title><rect x="10.9351%" y="549" width="0.0191%" height="15" fill="rgb(238,100,19)" fg:x="8575" fg:w="15"/><text x="11.1851%" y="559.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (53 samples, 0.07%)</title><rect x="10.8879%" y="725" width="0.0676%" height="15" fill="rgb(244,30,14)" fg:x="8538" fg:w="53"/><text x="11.1379%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (53 samples, 0.07%)</title><rect x="10.8879%" y="709" width="0.0676%" height="15" fill="rgb(249,174,6)" fg:x="8538" fg:w="53"/><text x="11.1379%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (53 samples, 0.07%)</title><rect x="10.8879%" y="693" width="0.0676%" height="15" fill="rgb(235,213,41)" fg:x="8538" fg:w="53"/><text x="11.1379%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (53 samples, 0.07%)</title><rect x="10.8879%" y="677" width="0.0676%" height="15" fill="rgb(213,118,6)" fg:x="8538" fg:w="53"/><text x="11.1379%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (53 samples, 0.07%)</title><rect x="10.8879%" y="661" width="0.0676%" height="15" fill="rgb(235,44,51)" fg:x="8538" fg:w="53"/><text x="11.1379%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (76 samples, 0.10%)</title><rect x="10.8714%" y="773" width="0.0969%" height="15" fill="rgb(217,9,53)" fg:x="8525" fg:w="76"/><text x="11.1214%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (76 samples, 0.10%)</title><rect x="10.8714%" y="757" width="0.0969%" height="15" fill="rgb(237,172,34)" fg:x="8525" fg:w="76"/><text x="11.1214%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (76 samples, 0.10%)</title><rect x="10.8714%" y="741" width="0.0969%" height="15" fill="rgb(206,206,11)" fg:x="8525" fg:w="76"/><text x="11.1214%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.01%)</title><rect x="10.9555%" y="725" width="0.0128%" height="15" fill="rgb(214,149,29)" fg:x="8591" fg:w="10"/><text x="11.2055%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.01%)</title><rect x="10.9555%" y="709" width="0.0128%" height="15" fill="rgb(208,123,3)" fg:x="8591" fg:w="10"/><text x="11.2055%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.01%)</title><rect x="10.9555%" y="693" width="0.0128%" height="15" fill="rgb(229,126,4)" fg:x="8591" fg:w="10"/><text x="11.2055%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.01%)</title><rect x="10.9555%" y="677" width="0.0128%" height="15" fill="rgb(222,92,36)" fg:x="8591" fg:w="10"/><text x="11.2055%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.01%)</title><rect x="10.9555%" y="661" width="0.0128%" height="15" fill="rgb(216,39,41)" fg:x="8591" fg:w="10"/><text x="11.2055%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (15 samples, 0.02%)</title><rect x="10.9683%" y="773" width="0.0191%" height="15" fill="rgb(253,127,28)" fg:x="8601" fg:w="15"/><text x="11.2183%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (15 samples, 0.02%)</title><rect x="10.9683%" y="757" width="0.0191%" height="15" fill="rgb(249,152,51)" fg:x="8601" fg:w="15"/><text x="11.2183%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (15 samples, 0.02%)</title><rect x="10.9683%" y="741" width="0.0191%" height="15" fill="rgb(209,123,42)" fg:x="8601" fg:w="15"/><text x="11.2183%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.01%)</title><rect x="10.9772%" y="725" width="0.0102%" height="15" fill="rgb(241,118,22)" fg:x="8608" fg:w="8"/><text x="11.2272%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.01%)</title><rect x="10.9772%" y="709" width="0.0102%" height="15" fill="rgb(208,25,7)" fg:x="8608" fg:w="8"/><text x="11.2272%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.01%)</title><rect x="10.9772%" y="693" width="0.0102%" height="15" fill="rgb(243,144,39)" fg:x="8608" fg:w="8"/><text x="11.2272%" y="703.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (18 samples, 0.02%)</title><rect x="11.0295%" y="357" width="0.0230%" height="15" fill="rgb(250,50,5)" fg:x="8649" fg:w="18"/><text x="11.2795%" y="367.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (18 samples, 0.02%)</title><rect x="11.0295%" y="341" width="0.0230%" height="15" fill="rgb(207,67,11)" fg:x="8649" fg:w="18"/><text x="11.2795%" y="351.50"></text></g><g><title> 32]&gt;::deserialize (18 samples, 0.02%)</title><rect x="11.0295%" y="325" width="0.0230%" height="15" fill="rgb(245,204,40)" fg:x="8649" fg:w="18"/><text x="11.2795%" y="335.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (18 samples, 0.02%)</title><rect x="11.0295%" y="309" width="0.0230%" height="15" fill="rgb(238,228,24)" fg:x="8649" fg:w="18"/><text x="11.2795%" y="319.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (18 samples, 0.02%)</title><rect x="11.0295%" y="293" width="0.0230%" height="15" fill="rgb(217,116,22)" fg:x="8649" fg:w="18"/><text x="11.2795%" y="303.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (18 samples, 0.02%)</title><rect x="11.0295%" y="277" width="0.0230%" height="15" fill="rgb(234,98,12)" fg:x="8649" fg:w="18"/><text x="11.2795%" y="287.50"></text></g><g><title>serde::de::SeqAccess::next_element (12 samples, 0.02%)</title><rect x="11.0371%" y="261" width="0.0153%" height="15" fill="rgb(242,170,50)" fg:x="8655" fg:w="12"/><text x="11.2871%" y="271.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.02%)</title><rect x="11.0371%" y="245" width="0.0153%" height="15" fill="rgb(235,7,5)" fg:x="8655" fg:w="12"/><text x="11.2871%" y="255.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.02%)</title><rect x="11.0371%" y="229" width="0.0153%" height="15" fill="rgb(241,114,28)" fg:x="8655" fg:w="12"/><text x="11.2871%" y="239.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (12 samples, 0.02%)</title><rect x="11.0371%" y="213" width="0.0153%" height="15" fill="rgb(246,112,42)" fg:x="8655" fg:w="12"/><text x="11.2871%" y="223.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (12 samples, 0.02%)</title><rect x="11.0371%" y="197" width="0.0153%" height="15" fill="rgb(248,228,14)" fg:x="8655" fg:w="12"/><text x="11.2871%" y="207.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (8 samples, 0.01%)</title><rect x="11.0422%" y="181" width="0.0102%" height="15" fill="rgb(208,133,18)" fg:x="8659" fg:w="8"/><text x="11.2922%" y="191.50"></text></g><g><title>bcs::de::Deserializer::next (8 samples, 0.01%)</title><rect x="11.0422%" y="165" width="0.0102%" height="15" fill="rgb(207,35,49)" fg:x="8659" fg:w="8"/><text x="11.2922%" y="175.50"></text></g><g><title>bcs::de::Deserializer::peek (8 samples, 0.01%)</title><rect x="11.0422%" y="149" width="0.0102%" height="15" fill="rgb(205,68,36)" fg:x="8659" fg:w="8"/><text x="11.2922%" y="159.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (8 samples, 0.01%)</title><rect x="11.0422%" y="133" width="0.0102%" height="15" fill="rgb(245,62,40)" fg:x="8659" fg:w="8"/><text x="11.2922%" y="143.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (23 samples, 0.03%)</title><rect x="11.0244%" y="405" width="0.0293%" height="15" fill="rgb(228,27,24)" fg:x="8645" fg:w="23"/><text x="11.2744%" y="415.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (23 samples, 0.03%)</title><rect x="11.0244%" y="389" width="0.0293%" height="15" fill="rgb(253,19,12)" fg:x="8645" fg:w="23"/><text x="11.2744%" y="399.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (23 samples, 0.03%)</title><rect x="11.0244%" y="373" width="0.0293%" height="15" fill="rgb(232,28,20)" fg:x="8645" fg:w="23"/><text x="11.2744%" y="383.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (24 samples, 0.03%)</title><rect x="11.0244%" y="437" width="0.0306%" height="15" fill="rgb(218,35,51)" fg:x="8645" fg:w="24"/><text x="11.2744%" y="447.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 0.03%)</title><rect x="11.0244%" y="421" width="0.0306%" height="15" fill="rgb(212,90,40)" fg:x="8645" fg:w="24"/><text x="11.2744%" y="431.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (27 samples, 0.03%)</title><rect x="11.0244%" y="469" width="0.0344%" height="15" fill="rgb(220,172,12)" fg:x="8645" fg:w="27"/><text x="11.2744%" y="479.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (27 samples, 0.03%)</title><rect x="11.0244%" y="453" width="0.0344%" height="15" fill="rgb(226,159,20)" fg:x="8645" fg:w="27"/><text x="11.2744%" y="463.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (28 samples, 0.04%)</title><rect x="11.0244%" y="485" width="0.0357%" height="15" fill="rgb(234,205,16)" fg:x="8645" fg:w="28"/><text x="11.2744%" y="495.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (29 samples, 0.04%)</title><rect x="11.0244%" y="501" width="0.0370%" height="15" fill="rgb(207,9,39)" fg:x="8645" fg:w="29"/><text x="11.2744%" y="511.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (45 samples, 0.06%)</title><rect x="11.0244%" y="517" width="0.0574%" height="15" fill="rgb(249,143,15)" fg:x="8645" fg:w="45"/><text x="11.2744%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (16 samples, 0.02%)</title><rect x="11.0614%" y="501" width="0.0204%" height="15" fill="rgb(253,133,29)" fg:x="8674" fg:w="16"/><text x="11.3114%" y="511.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (46 samples, 0.06%)</title><rect x="11.0244%" y="549" width="0.0587%" height="15" fill="rgb(221,187,0)" fg:x="8645" fg:w="46"/><text x="11.2744%" y="559.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (46 samples, 0.06%)</title><rect x="11.0244%" y="533" width="0.0587%" height="15" fill="rgb(205,204,26)" fg:x="8645" fg:w="46"/><text x="11.2744%" y="543.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (49 samples, 0.06%)</title><rect x="11.0244%" y="565" width="0.0625%" height="15" fill="rgb(224,68,54)" fg:x="8645" fg:w="49"/><text x="11.2744%" y="575.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (54 samples, 0.07%)</title><rect x="11.0244%" y="597" width="0.0689%" height="15" fill="rgb(209,67,4)" fg:x="8645" fg:w="54"/><text x="11.2744%" y="607.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (54 samples, 0.07%)</title><rect x="11.0244%" y="581" width="0.0689%" height="15" fill="rgb(228,229,18)" fg:x="8645" fg:w="54"/><text x="11.2744%" y="591.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (84 samples, 0.11%)</title><rect x="10.9925%" y="645" width="0.1071%" height="15" fill="rgb(231,89,13)" fg:x="8620" fg:w="84"/><text x="11.2425%" y="655.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (84 samples, 0.11%)</title><rect x="10.9925%" y="629" width="0.1071%" height="15" fill="rgb(210,182,18)" fg:x="8620" fg:w="84"/><text x="11.2425%" y="639.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (84 samples, 0.11%)</title><rect x="10.9925%" y="613" width="0.1071%" height="15" fill="rgb(240,105,2)" fg:x="8620" fg:w="84"/><text x="11.2425%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (11 samples, 0.01%)</title><rect x="11.1035%" y="645" width="0.0140%" height="15" fill="rgb(207,170,50)" fg:x="8707" fg:w="11"/><text x="11.3535%" y="655.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (11 samples, 0.01%)</title><rect x="11.1035%" y="629" width="0.0140%" height="15" fill="rgb(232,133,24)" fg:x="8707" fg:w="11"/><text x="11.3535%" y="639.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (9 samples, 0.01%)</title><rect x="11.1060%" y="613" width="0.0115%" height="15" fill="rgb(235,166,27)" fg:x="8709" fg:w="9"/><text x="11.3560%" y="623.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (99 samples, 0.13%)</title><rect x="10.9925%" y="677" width="0.1262%" height="15" fill="rgb(209,19,13)" fg:x="8620" fg:w="99"/><text x="11.2425%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (99 samples, 0.13%)</title><rect x="10.9925%" y="661" width="0.1262%" height="15" fill="rgb(226,79,39)" fg:x="8620" fg:w="99"/><text x="11.2425%" y="671.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (433 samples, 0.55%)</title><rect x="10.6252%" y="821" width="0.5522%" height="15" fill="rgb(222,163,10)" fg:x="8332" fg:w="433"/><text x="10.8752%" y="831.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (433 samples, 0.55%)</title><rect x="10.6252%" y="805" width="0.5522%" height="15" fill="rgb(214,44,19)" fg:x="8332" fg:w="433"/><text x="10.8752%" y="815.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (433 samples, 0.55%)</title><rect x="10.6252%" y="789" width="0.5522%" height="15" fill="rgb(210,217,13)" fg:x="8332" fg:w="433"/><text x="10.8752%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (147 samples, 0.19%)</title><rect x="10.9900%" y="773" width="0.1875%" height="15" fill="rgb(237,61,54)" fg:x="8618" fg:w="147"/><text x="11.2400%" y="783.50"></text></g><g><title>bcs::de::from_bytes_seed (145 samples, 0.18%)</title><rect x="10.9925%" y="757" width="0.1849%" height="15" fill="rgb(226,184,24)" fg:x="8620" fg:w="145"/><text x="11.2425%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (145 samples, 0.18%)</title><rect x="10.9925%" y="741" width="0.1849%" height="15" fill="rgb(223,226,4)" fg:x="8620" fg:w="145"/><text x="11.2425%" y="751.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (145 samples, 0.18%)</title><rect x="10.9925%" y="725" width="0.1849%" height="15" fill="rgb(210,26,41)" fg:x="8620" fg:w="145"/><text x="11.2425%" y="735.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (145 samples, 0.18%)</title><rect x="10.9925%" y="709" width="0.1849%" height="15" fill="rgb(220,221,6)" fg:x="8620" fg:w="145"/><text x="11.2425%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (145 samples, 0.18%)</title><rect x="10.9925%" y="693" width="0.1849%" height="15" fill="rgb(225,89,49)" fg:x="8620" fg:w="145"/><text x="11.2425%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (46 samples, 0.06%)</title><rect x="11.1188%" y="677" width="0.0587%" height="15" fill="rgb(218,70,45)" fg:x="8719" fg:w="46"/><text x="11.3688%" y="687.50"></text></g><g><title>core::ptr::write (46 samples, 0.06%)</title><rect x="11.1188%" y="661" width="0.0587%" height="15" fill="rgb(238,166,21)" fg:x="8719" fg:w="46"/><text x="11.3688%" y="671.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::check_balance (40 samples, 0.05%)</title><rect x="11.1774%" y="821" width="0.0510%" height="15" fill="rgb(224,141,44)" fg:x="8765" fg:w="40"/><text x="11.4274%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (328 samples, 0.42%)</title><rect x="11.3330%" y="805" width="0.4183%" height="15" fill="rgb(230,12,49)" fg:x="8887" fg:w="328"/><text x="11.5830%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (35 samples, 0.04%)</title><rect x="11.7513%" y="805" width="0.0446%" height="15" fill="rgb(212,174,12)" fg:x="9215" fg:w="35"/><text x="12.0013%" y="815.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;bool&gt;&gt;::cast (8 samples, 0.01%)</title><rect x="11.7959%" y="789" width="0.0102%" height="15" fill="rgb(246,67,9)" fg:x="9250" fg:w="8"/><text x="12.0459%" y="799.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (20 samples, 0.03%)</title><rect x="11.8227%" y="789" width="0.0255%" height="15" fill="rgb(239,35,23)" fg:x="9271" fg:w="20"/><text x="12.0727%" y="799.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::ContainerRef&gt;&gt;::cast (13 samples, 0.02%)</title><rect x="11.8316%" y="773" width="0.0166%" height="15" fill="rgb(211,167,0)" fg:x="9278" fg:w="13"/><text x="12.0816%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (501 samples, 0.64%)</title><rect x="11.2284%" y="821" width="0.6389%" height="15" fill="rgb(225,119,45)" fg:x="8805" fg:w="501"/><text x="11.4784%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (56 samples, 0.07%)</title><rect x="11.7959%" y="805" width="0.0714%" height="15" fill="rgb(210,162,6)" fg:x="9250" fg:w="56"/><text x="12.0459%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (104 samples, 0.13%)</title><rect x="11.8750%" y="821" width="0.1326%" height="15" fill="rgb(208,118,35)" fg:x="9312" fg:w="104"/><text x="12.1250%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (104 samples, 0.13%)</title><rect x="11.8750%" y="805" width="0.1326%" height="15" fill="rgb(239,4,53)" fg:x="9312" fg:w="104"/><text x="12.1250%" y="815.50"></text></g><g><title>core::ptr::write (99 samples, 0.13%)</title><rect x="11.8814%" y="789" width="0.1262%" height="15" fill="rgb(213,130,21)" fg:x="9317" fg:w="99"/><text x="12.1314%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.02%)</title><rect x="12.0255%" y="805" width="0.0217%" height="15" fill="rgb(235,148,0)" fg:x="9430" fg:w="17"/><text x="12.2755%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="12.0255%" y="789" width="0.0217%" height="15" fill="rgb(244,224,18)" fg:x="9430" fg:w="17"/><text x="12.2755%" y="799.50"></text></g><g><title>core::iter::adapters::try_process (17 samples, 0.02%)</title><rect x="12.0255%" y="773" width="0.0217%" height="15" fill="rgb(211,214,4)" fg:x="9430" fg:w="17"/><text x="12.2755%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (17 samples, 0.02%)</title><rect x="12.0255%" y="757" width="0.0217%" height="15" fill="rgb(206,119,25)" fg:x="9430" fg:w="17"/><text x="12.2755%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.02%)</title><rect x="12.0255%" y="741" width="0.0217%" height="15" fill="rgb(243,93,47)" fg:x="9430" fg:w="17"/><text x="12.2755%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="12.0255%" y="725" width="0.0217%" height="15" fill="rgb(224,194,6)" fg:x="9430" fg:w="17"/><text x="12.2755%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="12.0306%" y="709" width="0.0166%" height="15" fill="rgb(243,229,6)" fg:x="9434" fg:w="13"/><text x="12.2806%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="12.0306%" y="693" width="0.0166%" height="15" fill="rgb(207,23,50)" fg:x="9434" fg:w="13"/><text x="12.2806%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.01%)</title><rect x="12.0471%" y="789" width="0.0102%" height="15" fill="rgb(253,192,32)" fg:x="9447" fg:w="8"/><text x="12.2971%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="12.0471%" y="773" width="0.0102%" height="15" fill="rgb(213,21,6)" fg:x="9447" fg:w="8"/><text x="12.2971%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="12.0471%" y="757" width="0.0102%" height="15" fill="rgb(243,151,13)" fg:x="9447" fg:w="8"/><text x="12.2971%" y="767.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="12.0471%" y="741" width="0.0102%" height="15" fill="rgb(233,165,41)" fg:x="9447" fg:w="8"/><text x="12.2971%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (19 samples, 0.02%)</title><rect x="12.0573%" y="789" width="0.0242%" height="15" fill="rgb(246,176,45)" fg:x="9455" fg:w="19"/><text x="12.3073%" y="799.50"></text></g><g><title>core::ptr::read (19 samples, 0.02%)</title><rect x="12.0573%" y="773" width="0.0242%" height="15" fill="rgb(217,170,52)" fg:x="9455" fg:w="19"/><text x="12.3073%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (48 samples, 0.06%)</title><rect x="12.0255%" y="821" width="0.0612%" height="15" fill="rgb(214,203,54)" fg:x="9430" fg:w="48"/><text x="12.2755%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (31 samples, 0.04%)</title><rect x="12.0471%" y="805" width="0.0395%" height="15" fill="rgb(248,215,49)" fg:x="9447" fg:w="31"/><text x="12.2971%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_single_type (14 samples, 0.02%)</title><rect x="12.0867%" y="821" width="0.0179%" height="15" fill="rgb(208,46,10)" fg:x="9478" fg:w="14"/><text x="12.3367%" y="831.50"></text></g><g><title>move_vm_runtime::tracing::trace (34 samples, 0.04%)</title><rect x="12.1045%" y="821" width="0.0434%" height="15" fill="rgb(254,5,31)" fg:x="9492" fg:w="34"/><text x="12.3545%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (18 samples, 0.02%)</title><rect x="12.1632%" y="805" width="0.0230%" height="15" fill="rgb(222,104,33)" fg:x="9538" fg:w="18"/><text x="12.4132%" y="815.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (18 samples, 0.02%)</title><rect x="12.1632%" y="789" width="0.0230%" height="15" fill="rgb(248,49,16)" fg:x="9538" fg:w="18"/><text x="12.4132%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::copy_loc (36 samples, 0.05%)</title><rect x="12.1632%" y="821" width="0.0459%" height="15" fill="rgb(232,198,41)" fg:x="9538" fg:w="36"/><text x="12.4132%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (18 samples, 0.02%)</title><rect x="12.1861%" y="805" width="0.0230%" height="15" fill="rgb(214,125,3)" fg:x="9556" fg:w="18"/><text x="12.4361%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::move_loc (51 samples, 0.07%)</title><rect x="12.2091%" y="821" width="0.0650%" height="15" fill="rgb(229,220,28)" fg:x="9574" fg:w="51"/><text x="12.4591%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (26 samples, 0.03%)</title><rect x="12.2410%" y="805" width="0.0332%" height="15" fill="rgb(222,64,37)" fg:x="9599" fg:w="26"/><text x="12.4910%" y="815.50"></text></g><g><title>core::mem::replace (26 samples, 0.03%)</title><rect x="12.2410%" y="789" width="0.0332%" height="15" fill="rgb(249,184,13)" fg:x="9599" fg:w="26"/><text x="12.4910%" y="799.50"></text></g><g><title>core::ptr::write (26 samples, 0.03%)</title><rect x="12.2410%" y="773" width="0.0332%" height="15" fill="rgb(252,176,6)" fg:x="9599" fg:w="26"/><text x="12.4910%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (13 samples, 0.02%)</title><rect x="12.2831%" y="821" width="0.0166%" height="15" fill="rgb(228,153,7)" fg:x="9632" fg:w="13"/><text x="12.5331%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (13 samples, 0.02%)</title><rect x="12.2831%" y="805" width="0.0166%" height="15" fill="rgb(242,193,5)" fg:x="9632" fg:w="13"/><text x="12.5331%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (13 samples, 0.02%)</title><rect x="12.2831%" y="789" width="0.0166%" height="15" fill="rgb(232,140,9)" fg:x="9632" fg:w="13"/><text x="12.5331%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_by_ref (8 samples, 0.01%)</title><rect x="12.3277%" y="789" width="0.0102%" height="15" fill="rgb(213,222,16)" fg:x="9667" fg:w="8"/><text x="12.5777%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (30 samples, 0.04%)</title><rect x="12.3060%" y="821" width="0.0383%" height="15" fill="rgb(222,75,50)" fg:x="9650" fg:w="30"/><text x="12.5560%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (13 samples, 0.02%)</title><rect x="12.3277%" y="805" width="0.0166%" height="15" fill="rgb(205,180,2)" fg:x="9667" fg:w="13"/><text x="12.5777%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="12.3455%" y="805" width="0.0128%" height="15" fill="rgb(216,34,7)" fg:x="9681" fg:w="10"/><text x="12.5955%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Value::constant_sig_token_to_layout (10 samples, 0.01%)</title><rect x="12.3596%" y="805" width="0.0128%" height="15" fill="rgb(253,16,32)" fg:x="9692" fg:w="10"/><text x="12.6096%" y="815.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (47 samples, 0.06%)</title><rect x="12.3774%" y="757" width="0.0599%" height="15" fill="rgb(208,97,28)" fg:x="9706" fg:w="47"/><text x="12.6274%" y="767.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (47 samples, 0.06%)</title><rect x="12.3774%" y="741" width="0.0599%" height="15" fill="rgb(225,92,11)" fg:x="9706" fg:w="47"/><text x="12.6274%" y="751.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (47 samples, 0.06%)</title><rect x="12.3774%" y="725" width="0.0599%" height="15" fill="rgb(243,38,12)" fg:x="9706" fg:w="47"/><text x="12.6274%" y="735.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (47 samples, 0.06%)</title><rect x="12.3774%" y="709" width="0.0599%" height="15" fill="rgb(208,139,16)" fg:x="9706" fg:w="47"/><text x="12.6274%" y="719.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (43 samples, 0.05%)</title><rect x="12.3825%" y="693" width="0.0548%" height="15" fill="rgb(227,24,9)" fg:x="9710" fg:w="43"/><text x="12.6325%" y="703.50"></text></g><g><title> 32]&gt;::deserialize (43 samples, 0.05%)</title><rect x="12.3825%" y="677" width="0.0548%" height="15" fill="rgb(206,62,11)" fg:x="9710" fg:w="43"/><text x="12.6325%" y="687.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (43 samples, 0.05%)</title><rect x="12.3825%" y="661" width="0.0548%" height="15" fill="rgb(228,134,27)" fg:x="9710" fg:w="43"/><text x="12.6325%" y="671.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (43 samples, 0.05%)</title><rect x="12.3825%" y="645" width="0.0548%" height="15" fill="rgb(205,55,33)" fg:x="9710" fg:w="43"/><text x="12.6325%" y="655.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (43 samples, 0.05%)</title><rect x="12.3825%" y="629" width="0.0548%" height="15" fill="rgb(243,75,43)" fg:x="9710" fg:w="43"/><text x="12.6325%" y="639.50"></text></g><g><title>serde::de::SeqAccess::next_element (28 samples, 0.04%)</title><rect x="12.4016%" y="613" width="0.0357%" height="15" fill="rgb(223,27,42)" fg:x="9725" fg:w="28"/><text x="12.6516%" y="623.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (28 samples, 0.04%)</title><rect x="12.4016%" y="597" width="0.0357%" height="15" fill="rgb(232,189,33)" fg:x="9725" fg:w="28"/><text x="12.6516%" y="607.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (28 samples, 0.04%)</title><rect x="12.4016%" y="581" width="0.0357%" height="15" fill="rgb(210,9,39)" fg:x="9725" fg:w="28"/><text x="12.6516%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (28 samples, 0.04%)</title><rect x="12.4016%" y="565" width="0.0357%" height="15" fill="rgb(242,85,26)" fg:x="9725" fg:w="28"/><text x="12.6516%" y="575.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (28 samples, 0.04%)</title><rect x="12.4016%" y="549" width="0.0357%" height="15" fill="rgb(248,44,4)" fg:x="9725" fg:w="28"/><text x="12.6516%" y="559.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (8 samples, 0.01%)</title><rect x="12.4272%" y="533" width="0.0102%" height="15" fill="rgb(250,96,46)" fg:x="9745" fg:w="8"/><text x="12.6772%" y="543.50"></text></g><g><title>bcs::de::Deserializer::next (8 samples, 0.01%)</title><rect x="12.4272%" y="517" width="0.0102%" height="15" fill="rgb(229,116,26)" fg:x="9745" fg:w="8"/><text x="12.6772%" y="527.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (56 samples, 0.07%)</title><rect x="12.3723%" y="773" width="0.0714%" height="15" fill="rgb(246,94,34)" fg:x="9702" fg:w="56"/><text x="12.6223%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (90 samples, 0.11%)</title><rect x="12.3443%" y="821" width="0.1148%" height="15" fill="rgb(251,73,21)" fg:x="9680" fg:w="90"/><text x="12.5943%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (68 samples, 0.09%)</title><rect x="12.3723%" y="805" width="0.0867%" height="15" fill="rgb(254,121,25)" fg:x="9702" fg:w="68"/><text x="12.6223%" y="815.50"></text></g><g><title>bcs::de::from_bytes_seed (68 samples, 0.09%)</title><rect x="12.3723%" y="789" width="0.0867%" height="15" fill="rgb(215,161,49)" fg:x="9702" fg:w="68"/><text x="12.6223%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (12 samples, 0.02%)</title><rect x="12.4437%" y="773" width="0.0153%" height="15" fill="rgb(221,43,13)" fg:x="9758" fg:w="12"/><text x="12.6937%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (3,247 samples, 4.14%)</title><rect x="8.3439%" y="853" width="4.1407%" height="15" fill="rgb(249,5,37)" fg:x="6543" fg:w="3247"/><text x="8.5939%" y="863.50">move_..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (3,247 samples, 4.14%)</title><rect x="8.3439%" y="837" width="4.1407%" height="15" fill="rgb(226,25,44)" fg:x="6543" fg:w="3247"/><text x="8.5939%" y="847.50">move_..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (53 samples, 0.07%)</title><rect x="12.6197%" y="709" width="0.0676%" height="15" fill="rgb(238,189,16)" fg:x="9896" fg:w="53"/><text x="12.8697%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (53 samples, 0.07%)</title><rect x="12.6197%" y="693" width="0.0676%" height="15" fill="rgb(251,186,8)" fg:x="9896" fg:w="53"/><text x="12.8697%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (53 samples, 0.07%)</title><rect x="12.6197%" y="677" width="0.0676%" height="15" fill="rgb(254,34,31)" fg:x="9896" fg:w="53"/><text x="12.8697%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (53 samples, 0.07%)</title><rect x="12.6197%" y="661" width="0.0676%" height="15" fill="rgb(225,215,27)" fg:x="9896" fg:w="53"/><text x="12.8697%" y="671.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (239 samples, 0.30%)</title><rect x="12.4845%" y="853" width="0.3048%" height="15" fill="rgb(221,192,48)" fg:x="9790" fg:w="239"/><text x="12.7345%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (237 samples, 0.30%)</title><rect x="12.4871%" y="837" width="0.3022%" height="15" fill="rgb(219,137,20)" fg:x="9792" fg:w="237"/><text x="12.7371%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (133 samples, 0.17%)</title><rect x="12.6197%" y="821" width="0.1696%" height="15" fill="rgb(219,84,11)" fg:x="9896" fg:w="133"/><text x="12.8697%" y="831.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (133 samples, 0.17%)</title><rect x="12.6197%" y="805" width="0.1696%" height="15" fill="rgb(224,10,23)" fg:x="9896" fg:w="133"/><text x="12.8697%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (133 samples, 0.17%)</title><rect x="12.6197%" y="789" width="0.1696%" height="15" fill="rgb(248,22,39)" fg:x="9896" fg:w="133"/><text x="12.8697%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (133 samples, 0.17%)</title><rect x="12.6197%" y="773" width="0.1696%" height="15" fill="rgb(212,154,20)" fg:x="9896" fg:w="133"/><text x="12.8697%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (133 samples, 0.17%)</title><rect x="12.6197%" y="757" width="0.1696%" height="15" fill="rgb(236,199,50)" fg:x="9896" fg:w="133"/><text x="12.8697%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (133 samples, 0.17%)</title><rect x="12.6197%" y="741" width="0.1696%" height="15" fill="rgb(211,9,17)" fg:x="9896" fg:w="133"/><text x="12.8697%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (133 samples, 0.17%)</title><rect x="12.6197%" y="725" width="0.1696%" height="15" fill="rgb(243,216,36)" fg:x="9896" fg:w="133"/><text x="12.8697%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (80 samples, 0.10%)</title><rect x="12.6873%" y="709" width="0.1020%" height="15" fill="rgb(250,2,10)" fg:x="9949" fg:w="80"/><text x="12.9373%" y="719.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (80 samples, 0.10%)</title><rect x="12.6873%" y="693" width="0.1020%" height="15" fill="rgb(226,50,48)" fg:x="9949" fg:w="80"/><text x="12.9373%" y="703.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (79 samples, 0.10%)</title><rect x="12.6886%" y="677" width="0.1007%" height="15" fill="rgb(243,81,16)" fg:x="9950" fg:w="79"/><text x="12.9386%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (79 samples, 0.10%)</title><rect x="12.6886%" y="661" width="0.1007%" height="15" fill="rgb(250,14,2)" fg:x="9950" fg:w="79"/><text x="12.9386%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (79 samples, 0.10%)</title><rect x="12.6886%" y="645" width="0.1007%" height="15" fill="rgb(233,135,29)" fg:x="9950" fg:w="79"/><text x="12.9386%" y="655.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (79 samples, 0.10%)</title><rect x="12.6886%" y="629" width="0.1007%" height="15" fill="rgb(224,64,43)" fg:x="9950" fg:w="79"/><text x="12.9386%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (79 samples, 0.10%)</title><rect x="12.6886%" y="613" width="0.1007%" height="15" fill="rgb(238,84,13)" fg:x="9950" fg:w="79"/><text x="12.9386%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (79 samples, 0.10%)</title><rect x="12.6886%" y="597" width="0.1007%" height="15" fill="rgb(253,48,26)" fg:x="9950" fg:w="79"/><text x="12.9386%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (79 samples, 0.10%)</title><rect x="12.6886%" y="581" width="0.1007%" height="15" fill="rgb(205,223,31)" fg:x="9950" fg:w="79"/><text x="12.9386%" y="591.50"></text></g><g><title>core::hash::sip::u8to64_le (79 samples, 0.10%)</title><rect x="12.6886%" y="565" width="0.1007%" height="15" fill="rgb(221,41,32)" fg:x="9950" fg:w="79"/><text x="12.9386%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (79 samples, 0.10%)</title><rect x="12.6886%" y="549" width="0.1007%" height="15" fill="rgb(213,158,31)" fg:x="9950" fg:w="79"/><text x="12.9386%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.02%)</title><rect x="12.7919%" y="821" width="0.0179%" height="15" fill="rgb(245,126,43)" fg:x="10031" fg:w="14"/><text x="13.0419%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_front (8 samples, 0.01%)</title><rect x="12.8110%" y="821" width="0.0102%" height="15" fill="rgb(227,7,22)" fg:x="10046" fg:w="8"/><text x="13.0610%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (8 samples, 0.01%)</title><rect x="12.8110%" y="805" width="0.0102%" height="15" fill="rgb(252,90,44)" fg:x="10046" fg:w="8"/><text x="13.0610%" y="815.50"></text></g><g><title>aptos_aggregator::aggregator_extension::AggregatorData::get_aggregator (8 samples, 0.01%)</title><rect x="12.8378%" y="789" width="0.0102%" height="15" fill="rgb(253,91,0)" fg:x="10067" fg:w="8"/><text x="13.0878%" y="799.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::helpers::get_aggregator_field (14 samples, 0.02%)</title><rect x="12.8595%" y="757" width="0.0179%" height="15" fill="rgb(252,175,49)" fg:x="10084" fg:w="14"/><text x="13.1095%" y="767.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::helpers::aggregator_info (27 samples, 0.03%)</title><rect x="12.8480%" y="789" width="0.0344%" height="15" fill="rgb(246,150,1)" fg:x="10075" fg:w="27"/><text x="13.0980%" y="799.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::helpers::get_aggregator_fields (18 samples, 0.02%)</title><rect x="12.8595%" y="773" width="0.0230%" height="15" fill="rgb(241,192,25)" fg:x="10084" fg:w="18"/><text x="13.1095%" y="783.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::get (12 samples, 0.02%)</title><rect x="12.8875%" y="789" width="0.0153%" height="15" fill="rgb(239,187,11)" fg:x="10106" fg:w="12"/><text x="13.1375%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.01%)</title><rect x="12.8926%" y="773" width="0.0102%" height="15" fill="rgb(218,202,51)" fg:x="10110" fg:w="8"/><text x="13.1426%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.01%)</title><rect x="12.8926%" y="757" width="0.0102%" height="15" fill="rgb(225,176,8)" fg:x="10110" fg:w="8"/><text x="13.1426%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.01%)</title><rect x="12.8926%" y="741" width="0.0102%" height="15" fill="rgb(219,122,41)" fg:x="10110" fg:w="8"/><text x="13.1426%" y="751.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::aggregator::make_native_sub::{{closure}} (65 samples, 0.08%)</title><rect x="12.8212%" y="821" width="0.0829%" height="15" fill="rgb(248,140,20)" fg:x="10054" fg:w="65"/><text x="13.0712%" y="831.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::aggregator::native_sub (65 samples, 0.08%)</title><rect x="12.8212%" y="805" width="0.0829%" height="15" fill="rgb(245,41,37)" fg:x="10054" fg:w="65"/><text x="13.0712%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.01%)</title><rect x="12.9462%" y="581" width="0.0102%" height="15" fill="rgb(235,82,39)" fg:x="10152" fg:w="8"/><text x="13.1962%" y="591.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.01%)</title><rect x="12.9462%" y="565" width="0.0102%" height="15" fill="rgb(230,108,42)" fg:x="10152" fg:w="8"/><text x="13.1962%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.01%)</title><rect x="12.9462%" y="549" width="0.0102%" height="15" fill="rgb(215,150,50)" fg:x="10152" fg:w="8"/><text x="13.1962%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="12.9462%" y="533" width="0.0102%" height="15" fill="rgb(233,212,5)" fg:x="10152" fg:w="8"/><text x="13.1962%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.01%)</title><rect x="12.9462%" y="517" width="0.0102%" height="15" fill="rgb(245,80,22)" fg:x="10152" fg:w="8"/><text x="13.1962%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="12.9462%" y="501" width="0.0102%" height="15" fill="rgb(238,129,16)" fg:x="10152" fg:w="8"/><text x="13.1962%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="12.9462%" y="485" width="0.0102%" height="15" fill="rgb(240,19,0)" fg:x="10152" fg:w="8"/><text x="13.1962%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.01%)</title><rect x="12.9462%" y="469" width="0.0102%" height="15" fill="rgb(232,42,35)" fg:x="10152" fg:w="8"/><text x="13.1962%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.01%)</title><rect x="12.9462%" y="453" width="0.0102%" height="15" fill="rgb(223,130,24)" fg:x="10152" fg:w="8"/><text x="13.1962%" y="463.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::fmt::Display&gt;::fmt (9 samples, 0.01%)</title><rect x="12.9462%" y="645" width="0.0115%" height="15" fill="rgb(237,16,22)" fg:x="10152" fg:w="9"/><text x="13.1962%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (9 samples, 0.01%)</title><rect x="12.9462%" y="629" width="0.0115%" height="15" fill="rgb(248,192,20)" fg:x="10152" fg:w="9"/><text x="13.1962%" y="639.50"></text></g><g><title>core::fmt::write (9 samples, 0.01%)</title><rect x="12.9462%" y="613" width="0.0115%" height="15" fill="rgb(233,167,2)" fg:x="10152" fg:w="9"/><text x="13.1962%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (9 samples, 0.01%)</title><rect x="12.9462%" y="597" width="0.0115%" height="15" fill="rgb(252,71,44)" fg:x="10152" fg:w="9"/><text x="13.1962%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (19 samples, 0.02%)</title><rect x="12.9347%" y="693" width="0.0242%" height="15" fill="rgb(238,37,47)" fg:x="10143" fg:w="19"/><text x="13.1847%" y="703.50"></text></g><g><title>core::fmt::write (19 samples, 0.02%)</title><rect x="12.9347%" y="677" width="0.0242%" height="15" fill="rgb(214,202,54)" fg:x="10143" fg:w="19"/><text x="13.1847%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (13 samples, 0.02%)</title><rect x="12.9423%" y="661" width="0.0166%" height="15" fill="rgb(254,165,40)" fg:x="10149" fg:w="13"/><text x="13.1923%" y="671.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="12.9781%" y="549" width="0.0166%" height="15" fill="rgb(246,173,38)" fg:x="10177" fg:w="13"/><text x="13.2281%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.02%)</title><rect x="12.9781%" y="533" width="0.0166%" height="15" fill="rgb(215,3,27)" fg:x="10177" fg:w="13"/><text x="13.2281%" y="543.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (13 samples, 0.02%)</title><rect x="12.9781%" y="517" width="0.0166%" height="15" fill="rgb(239,169,51)" fg:x="10177" fg:w="13"/><text x="13.2281%" y="527.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (66 samples, 0.08%)</title><rect x="12.9168%" y="789" width="0.0842%" height="15" fill="rgb(212,5,25)" fg:x="10129" fg:w="66"/><text x="13.1668%" y="799.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::fmt::Display&gt;::fmt (66 samples, 0.08%)</title><rect x="12.9168%" y="773" width="0.0842%" height="15" fill="rgb(243,45,17)" fg:x="10129" fg:w="66"/><text x="13.1668%" y="783.50"></text></g><g><title>core::fmt::Formatter::write_fmt (64 samples, 0.08%)</title><rect x="12.9194%" y="757" width="0.0816%" height="15" fill="rgb(242,97,9)" fg:x="10131" fg:w="64"/><text x="13.1694%" y="767.50"></text></g><g><title>core::fmt::write (64 samples, 0.08%)</title><rect x="12.9194%" y="741" width="0.0816%" height="15" fill="rgb(228,71,31)" fg:x="10131" fg:w="64"/><text x="13.1694%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (55 samples, 0.07%)</title><rect x="12.9309%" y="725" width="0.0701%" height="15" fill="rgb(252,184,16)" fg:x="10140" fg:w="55"/><text x="13.1809%" y="735.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::fmt::Display&gt;::fmt (53 samples, 0.07%)</title><rect x="12.9334%" y="709" width="0.0676%" height="15" fill="rgb(236,169,46)" fg:x="10142" fg:w="53"/><text x="13.1834%" y="719.50"></text></g><g><title>move_core_types::account_address::AccountAddress::short_str_lossless (32 samples, 0.04%)</title><rect x="12.9602%" y="693" width="0.0408%" height="15" fill="rgb(207,17,47)" fg:x="10163" fg:w="32"/><text x="13.2102%" y="703.50"></text></g><g><title>hex::encode (22 samples, 0.03%)</title><rect x="12.9730%" y="677" width="0.0281%" height="15" fill="rgb(206,201,28)" fg:x="10173" fg:w="22"/><text x="13.2230%" y="687.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (22 samples, 0.03%)</title><rect x="12.9730%" y="661" width="0.0281%" height="15" fill="rgb(224,184,23)" fg:x="10173" fg:w="22"/><text x="13.2230%" y="671.50"></text></g><g><title>hex::encode_to_iter (22 samples, 0.03%)</title><rect x="12.9730%" y="645" width="0.0281%" height="15" fill="rgb(208,139,48)" fg:x="10173" fg:w="22"/><text x="13.2230%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (22 samples, 0.03%)</title><rect x="12.9730%" y="629" width="0.0281%" height="15" fill="rgb(208,130,10)" fg:x="10173" fg:w="22"/><text x="13.2230%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (22 samples, 0.03%)</title><rect x="12.9730%" y="613" width="0.0281%" height="15" fill="rgb(211,213,45)" fg:x="10173" fg:w="22"/><text x="13.2230%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (22 samples, 0.03%)</title><rect x="12.9730%" y="597" width="0.0281%" height="15" fill="rgb(235,100,30)" fg:x="10173" fg:w="22"/><text x="13.2230%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 0.02%)</title><rect x="12.9781%" y="581" width="0.0230%" height="15" fill="rgb(206,144,31)" fg:x="10177" fg:w="18"/><text x="13.2281%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.02%)</title><rect x="12.9781%" y="565" width="0.0230%" height="15" fill="rgb(224,200,26)" fg:x="10177" fg:w="18"/><text x="13.2281%" y="575.50"></text></g><g><title>aptos_framework::natives::type_info::type_of_internal (13 samples, 0.02%)</title><rect x="13.0010%" y="789" width="0.0166%" height="15" fill="rgb(247,104,53)" fg:x="10195" fg:w="13"/><text x="13.2510%" y="799.50"></text></g><g><title>aptos_framework::natives::type_info::make_native_type_of::{{closure}} (108 samples, 0.14%)</title><rect x="12.9041%" y="821" width="0.1377%" height="15" fill="rgb(220,14,17)" fg:x="10119" fg:w="108"/><text x="13.1541%" y="831.50"></text></g><g><title>aptos_framework::natives::type_info::native_type_of (98 samples, 0.12%)</title><rect x="12.9168%" y="805" width="0.1250%" height="15" fill="rgb(230,140,40)" fg:x="10129" fg:w="98"/><text x="13.1668%" y="815.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::type_to_type_tag (11 samples, 0.01%)</title><rect x="13.0278%" y="789" width="0.0140%" height="15" fill="rgb(229,2,41)" fg:x="10216" fg:w="11"/><text x="13.2778%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (10 samples, 0.01%)</title><rect x="13.0291%" y="773" width="0.0128%" height="15" fill="rgb(232,89,16)" fg:x="10217" fg:w="10"/><text x="13.2791%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (10 samples, 0.01%)</title><rect x="13.0291%" y="757" width="0.0128%" height="15" fill="rgb(247,59,52)" fg:x="10217" fg:w="10"/><text x="13.2791%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (9 samples, 0.01%)</title><rect x="13.0303%" y="741" width="0.0115%" height="15" fill="rgb(226,110,21)" fg:x="10218" fg:w="9"/><text x="13.2803%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.01%)</title><rect x="13.0316%" y="725" width="0.0102%" height="15" fill="rgb(224,176,43)" fg:x="10219" fg:w="8"/><text x="13.2816%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.01%)</title><rect x="13.0316%" y="709" width="0.0102%" height="15" fill="rgb(221,73,6)" fg:x="10219" fg:w="8"/><text x="13.2816%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.01%)</title><rect x="13.0316%" y="693" width="0.0102%" height="15" fill="rgb(232,78,19)" fg:x="10219" fg:w="8"/><text x="13.2816%" y="703.50"></text></g><g><title>move_stdlib::natives::signer::make_native_borrow_address::{{closure}} (22 samples, 0.03%)</title><rect x="13.0507%" y="821" width="0.0281%" height="15" fill="rgb(233,112,48)" fg:x="10234" fg:w="22"/><text x="13.3007%" y="831.50"></text></g><g><title>move_stdlib::natives::signer::native_borrow_address (22 samples, 0.03%)</title><rect x="13.0507%" y="805" width="0.0281%" height="15" fill="rgb(243,131,47)" fg:x="10234" fg:w="22"/><text x="13.3007%" y="815.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (19 samples, 0.02%)</title><rect x="13.0839%" y="821" width="0.0242%" height="15" fill="rgb(226,51,1)" fg:x="10260" fg:w="19"/><text x="13.3339%" y="831.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (17 samples, 0.02%)</title><rect x="13.0864%" y="805" width="0.0217%" height="15" fill="rgb(247,58,7)" fg:x="10262" fg:w="17"/><text x="13.3364%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (254 samples, 0.32%)</title><rect x="12.7893%" y="853" width="0.3239%" height="15" fill="rgb(209,7,32)" fg:x="10029" fg:w="254"/><text x="13.0393%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (254 samples, 0.32%)</title><rect x="12.7893%" y="837" width="0.3239%" height="15" fill="rgb(209,39,41)" fg:x="10029" fg:w="254"/><text x="13.0393%" y="847.50"></text></g><g><title>__rust_dealloc (11 samples, 0.01%)</title><rect x="13.1400%" y="805" width="0.0140%" height="15" fill="rgb(226,182,46)" fg:x="10304" fg:w="11"/><text x="13.3900%" y="815.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="13.1400%" y="789" width="0.0140%" height="15" fill="rgb(230,219,10)" fg:x="10304" fg:w="11"/><text x="13.3900%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (12 samples, 0.02%)</title><rect x="13.1540%" y="805" width="0.0153%" height="15" fill="rgb(227,175,30)" fg:x="10315" fg:w="12"/><text x="13.4040%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (47 samples, 0.06%)</title><rect x="13.1298%" y="837" width="0.0599%" height="15" fill="rgb(217,2,50)" fg:x="10296" fg:w="47"/><text x="13.3798%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (47 samples, 0.06%)</title><rect x="13.1298%" y="821" width="0.0599%" height="15" fill="rgb(229,160,0)" fg:x="10296" fg:w="47"/><text x="13.3798%" y="831.50"></text></g><g><title>sdallocx (16 samples, 0.02%)</title><rect x="13.1693%" y="805" width="0.0204%" height="15" fill="rgb(207,78,37)" fg:x="10327" fg:w="16"/><text x="13.4193%" y="815.50"></text></g><g><title>isfree (16 samples, 0.02%)</title><rect x="13.1693%" y="789" width="0.0204%" height="15" fill="rgb(225,57,0)" fg:x="10327" fg:w="16"/><text x="13.4193%" y="799.50"></text></g><g><title>isdalloct (16 samples, 0.02%)</title><rect x="13.1693%" y="773" width="0.0204%" height="15" fill="rgb(232,154,2)" fg:x="10327" fg:w="16"/><text x="13.4193%" y="783.50"></text></g><g><title>arena_sdalloc (16 samples, 0.02%)</title><rect x="13.1693%" y="757" width="0.0204%" height="15" fill="rgb(241,212,25)" fg:x="10327" fg:w="16"/><text x="13.4193%" y="767.50"></text></g><g><title>tcache_dalloc_small (16 samples, 0.02%)</title><rect x="13.1693%" y="741" width="0.0204%" height="15" fill="rgb(226,69,20)" fg:x="10327" fg:w="16"/><text x="13.4193%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="13.1897%" y="821" width="0.0153%" height="15" fill="rgb(247,184,54)" fg:x="10343" fg:w="12"/><text x="13.4397%" y="831.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="13.2050%" y="757" width="0.0268%" height="15" fill="rgb(210,145,0)" fg:x="10355" fg:w="21"/><text x="13.4550%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="13.2203%" y="741" width="0.0115%" height="15" fill="rgb(253,82,12)" fg:x="10367" fg:w="9"/><text x="13.4703%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (24 samples, 0.03%)</title><rect x="13.2050%" y="821" width="0.0306%" height="15" fill="rgb(245,42,11)" fg:x="10355" fg:w="24"/><text x="13.4550%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.03%)</title><rect x="13.2050%" y="805" width="0.0306%" height="15" fill="rgb(219,147,32)" fg:x="10355" fg:w="24"/><text x="13.4550%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.03%)</title><rect x="13.2050%" y="789" width="0.0306%" height="15" fill="rgb(246,12,7)" fg:x="10355" fg:w="24"/><text x="13.4550%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.03%)</title><rect x="13.2050%" y="773" width="0.0306%" height="15" fill="rgb(243,50,9)" fg:x="10355" fg:w="24"/><text x="13.4550%" y="783.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (10 samples, 0.01%)</title><rect x="13.2357%" y="725" width="0.0128%" height="15" fill="rgb(219,149,6)" fg:x="10379" fg:w="10"/><text x="13.4857%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (47 samples, 0.06%)</title><rect x="13.2484%" y="693" width="0.0599%" height="15" fill="rgb(241,51,42)" fg:x="10389" fg:w="47"/><text x="13.4984%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (47 samples, 0.06%)</title><rect x="13.2484%" y="677" width="0.0599%" height="15" fill="rgb(226,128,27)" fg:x="10389" fg:w="47"/><text x="13.4984%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.04%)</title><rect x="13.2675%" y="661" width="0.0408%" height="15" fill="rgb(244,144,4)" fg:x="10404" fg:w="32"/><text x="13.5175%" y="671.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (25 samples, 0.03%)</title><rect x="13.2765%" y="645" width="0.0319%" height="15" fill="rgb(221,4,13)" fg:x="10411" fg:w="25"/><text x="13.5265%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.02%)</title><rect x="13.3479%" y="533" width="0.0217%" height="15" fill="rgb(208,170,28)" fg:x="10467" fg:w="17"/><text x="13.5979%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 0.10%)</title><rect x="13.3083%" y="693" width="0.0956%" height="15" fill="rgb(226,131,13)" fg:x="10436" fg:w="75"/><text x="13.5583%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (75 samples, 0.10%)</title><rect x="13.3083%" y="677" width="0.0956%" height="15" fill="rgb(215,72,41)" fg:x="10436" fg:w="75"/><text x="13.5583%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (75 samples, 0.10%)</title><rect x="13.3083%" y="661" width="0.0956%" height="15" fill="rgb(243,108,20)" fg:x="10436" fg:w="75"/><text x="13.5583%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (75 samples, 0.10%)</title><rect x="13.3083%" y="645" width="0.0956%" height="15" fill="rgb(230,189,17)" fg:x="10436" fg:w="75"/><text x="13.5583%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (75 samples, 0.10%)</title><rect x="13.3083%" y="629" width="0.0956%" height="15" fill="rgb(220,50,17)" fg:x="10436" fg:w="75"/><text x="13.5583%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (75 samples, 0.10%)</title><rect x="13.3083%" y="613" width="0.0956%" height="15" fill="rgb(248,152,48)" fg:x="10436" fg:w="75"/><text x="13.5583%" y="623.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (75 samples, 0.10%)</title><rect x="13.3083%" y="597" width="0.0956%" height="15" fill="rgb(244,91,11)" fg:x="10436" fg:w="75"/><text x="13.5583%" y="607.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (75 samples, 0.10%)</title><rect x="13.3083%" y="581" width="0.0956%" height="15" fill="rgb(220,157,5)" fg:x="10436" fg:w="75"/><text x="13.5583%" y="591.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (74 samples, 0.09%)</title><rect x="13.3096%" y="565" width="0.0944%" height="15" fill="rgb(253,137,8)" fg:x="10437" fg:w="74"/><text x="13.5596%" y="575.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (44 samples, 0.06%)</title><rect x="13.3479%" y="549" width="0.0561%" height="15" fill="rgb(217,137,51)" fg:x="10467" fg:w="44"/><text x="13.5979%" y="559.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (21 samples, 0.03%)</title><rect x="13.3772%" y="533" width="0.0268%" height="15" fill="rgb(218,209,53)" fg:x="10490" fg:w="21"/><text x="13.6272%" y="543.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (180 samples, 0.23%)</title><rect x="13.1897%" y="837" width="0.2295%" height="15" fill="rgb(249,137,25)" fg:x="10343" fg:w="180"/><text x="13.4397%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (144 samples, 0.18%)</title><rect x="13.2357%" y="821" width="0.1836%" height="15" fill="rgb(239,155,26)" fg:x="10379" fg:w="144"/><text x="13.4857%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (144 samples, 0.18%)</title><rect x="13.2357%" y="805" width="0.1836%" height="15" fill="rgb(227,85,46)" fg:x="10379" fg:w="144"/><text x="13.4857%" y="815.50"></text></g><g><title>core::iter::adapters::try_process (144 samples, 0.18%)</title><rect x="13.2357%" y="789" width="0.1836%" height="15" fill="rgb(251,107,43)" fg:x="10379" fg:w="144"/><text x="13.4857%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (144 samples, 0.18%)</title><rect x="13.2357%" y="773" width="0.1836%" height="15" fill="rgb(234,170,33)" fg:x="10379" fg:w="144"/><text x="13.4857%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (144 samples, 0.18%)</title><rect x="13.2357%" y="757" width="0.1836%" height="15" fill="rgb(206,29,35)" fg:x="10379" fg:w="144"/><text x="13.4857%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (144 samples, 0.18%)</title><rect x="13.2357%" y="741" width="0.1836%" height="15" fill="rgb(227,138,25)" fg:x="10379" fg:w="144"/><text x="13.4857%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (134 samples, 0.17%)</title><rect x="13.2484%" y="725" width="0.1709%" height="15" fill="rgb(249,131,35)" fg:x="10389" fg:w="134"/><text x="13.4984%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (134 samples, 0.17%)</title><rect x="13.2484%" y="709" width="0.1709%" height="15" fill="rgb(239,6,40)" fg:x="10389" fg:w="134"/><text x="13.4984%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.02%)</title><rect x="13.4040%" y="693" width="0.0153%" height="15" fill="rgb(246,136,47)" fg:x="10511" fg:w="12"/><text x="13.6540%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="13.4040%" y="677" width="0.0153%" height="15" fill="rgb(253,58,26)" fg:x="10511" fg:w="12"/><text x="13.6540%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="13.4040%" y="661" width="0.0153%" height="15" fill="rgb(237,141,10)" fg:x="10511" fg:w="12"/><text x="13.6540%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (12 samples, 0.02%)</title><rect x="13.4040%" y="645" width="0.0153%" height="15" fill="rgb(234,156,12)" fg:x="10511" fg:w="12"/><text x="13.6540%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="13.4040%" y="629" width="0.0153%" height="15" fill="rgb(243,224,36)" fg:x="10511" fg:w="12"/><text x="13.6540%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="13.4040%" y="613" width="0.0153%" height="15" fill="rgb(205,229,51)" fg:x="10511" fg:w="12"/><text x="13.6540%" y="623.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="13.4040%" y="597" width="0.0153%" height="15" fill="rgb(223,189,4)" fg:x="10511" fg:w="12"/><text x="13.6540%" y="607.50"></text></g><g><title>mallocx (9 samples, 0.01%)</title><rect x="13.4078%" y="581" width="0.0115%" height="15" fill="rgb(249,167,54)" fg:x="10514" fg:w="9"/><text x="13.6578%" y="591.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (24 samples, 0.03%)</title><rect x="13.4193%" y="837" width="0.0306%" height="15" fill="rgb(218,34,28)" fg:x="10523" fg:w="24"/><text x="13.6693%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (24 samples, 0.03%)</title><rect x="13.4193%" y="821" width="0.0306%" height="15" fill="rgb(232,109,42)" fg:x="10523" fg:w="24"/><text x="13.6693%" y="831.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (29 samples, 0.04%)</title><rect x="13.4524%" y="837" width="0.0370%" height="15" fill="rgb(248,214,46)" fg:x="10549" fg:w="29"/><text x="13.7024%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (25 samples, 0.03%)</title><rect x="13.4575%" y="821" width="0.0319%" height="15" fill="rgb(244,216,40)" fg:x="10553" fg:w="25"/><text x="13.7075%" y="831.50"></text></g><g><title>core::cmp::PartialEq::ne (25 samples, 0.03%)</title><rect x="13.4575%" y="805" width="0.0319%" height="15" fill="rgb(231,226,31)" fg:x="10553" fg:w="25"/><text x="13.7075%" y="815.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (25 samples, 0.03%)</title><rect x="13.4575%" y="789" width="0.0319%" height="15" fill="rgb(238,38,43)" fg:x="10553" fg:w="25"/><text x="13.7075%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (36 samples, 0.05%)</title><rect x="13.4894%" y="805" width="0.0459%" height="15" fill="rgb(208,88,43)" fg:x="10578" fg:w="36"/><text x="13.7394%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.01%)</title><rect x="13.5749%" y="789" width="0.0115%" height="15" fill="rgb(205,136,37)" fg:x="10645" fg:w="9"/><text x="13.8249%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (9 samples, 0.01%)</title><rect x="13.5749%" y="773" width="0.0115%" height="15" fill="rgb(237,34,14)" fg:x="10645" fg:w="9"/><text x="13.8249%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="13.5749%" y="757" width="0.0115%" height="15" fill="rgb(236,193,44)" fg:x="10645" fg:w="9"/><text x="13.8249%" y="767.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (100 samples, 0.13%)</title><rect x="13.4894%" y="837" width="0.1275%" height="15" fill="rgb(231,48,10)" fg:x="10578" fg:w="100"/><text x="13.7394%" y="847.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (100 samples, 0.13%)</title><rect x="13.4894%" y="821" width="0.1275%" height="15" fill="rgb(213,141,34)" fg:x="10578" fg:w="100"/><text x="13.7394%" y="831.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (62 samples, 0.08%)</title><rect x="13.5379%" y="805" width="0.0791%" height="15" fill="rgb(249,130,34)" fg:x="10616" fg:w="62"/><text x="13.7879%" y="815.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (24 samples, 0.03%)</title><rect x="13.5863%" y="789" width="0.0306%" height="15" fill="rgb(219,42,41)" fg:x="10654" fg:w="24"/><text x="13.8363%" y="799.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (22 samples, 0.03%)</title><rect x="13.6169%" y="821" width="0.0281%" height="15" fill="rgb(224,100,54)" fg:x="10678" fg:w="22"/><text x="13.8669%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 0.03%)</title><rect x="13.6169%" y="805" width="0.0281%" height="15" fill="rgb(229,200,27)" fg:x="10678" fg:w="22"/><text x="13.8669%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.01%)</title><rect x="13.6348%" y="789" width="0.0102%" height="15" fill="rgb(217,118,10)" fg:x="10692" fg:w="8"/><text x="13.8848%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="13.6348%" y="773" width="0.0102%" height="15" fill="rgb(206,22,3)" fg:x="10692" fg:w="8"/><text x="13.8848%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="13.6348%" y="757" width="0.0102%" height="15" fill="rgb(232,163,46)" fg:x="10692" fg:w="8"/><text x="13.8848%" y="767.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="13.6348%" y="741" width="0.0102%" height="15" fill="rgb(206,95,13)" fg:x="10692" fg:w="8"/><text x="13.8848%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (46 samples, 0.06%)</title><rect x="13.6169%" y="837" width="0.0587%" height="15" fill="rgb(253,154,18)" fg:x="10678" fg:w="46"/><text x="13.8669%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.03%)</title><rect x="13.6450%" y="821" width="0.0306%" height="15" fill="rgb(219,32,23)" fg:x="10700" fg:w="24"/><text x="13.8950%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.03%)</title><rect x="13.6450%" y="805" width="0.0306%" height="15" fill="rgb(230,191,45)" fg:x="10700" fg:w="24"/><text x="13.8950%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.03%)</title><rect x="13.6450%" y="789" width="0.0306%" height="15" fill="rgb(229,64,36)" fg:x="10700" fg:w="24"/><text x="13.8950%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (24 samples, 0.03%)</title><rect x="13.6450%" y="773" width="0.0306%" height="15" fill="rgb(205,129,25)" fg:x="10700" fg:w="24"/><text x="13.8950%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (24 samples, 0.03%)</title><rect x="13.6450%" y="757" width="0.0306%" height="15" fill="rgb(254,112,7)" fg:x="10700" fg:w="24"/><text x="13.8950%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24 samples, 0.03%)</title><rect x="13.6450%" y="741" width="0.0306%" height="15" fill="rgb(226,53,48)" fg:x="10700" fg:w="24"/><text x="13.8950%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.03%)</title><rect x="13.6450%" y="725" width="0.0306%" height="15" fill="rgb(214,153,38)" fg:x="10700" fg:w="24"/><text x="13.8950%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (24 samples, 0.03%)</title><rect x="13.6450%" y="709" width="0.0306%" height="15" fill="rgb(243,101,7)" fg:x="10700" fg:w="24"/><text x="13.8950%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.03%)</title><rect x="13.6450%" y="693" width="0.0306%" height="15" fill="rgb(240,140,22)" fg:x="10700" fg:w="24"/><text x="13.8950%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.03%)</title><rect x="13.6450%" y="677" width="0.0306%" height="15" fill="rgb(235,114,2)" fg:x="10700" fg:w="24"/><text x="13.8950%" y="687.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.03%)</title><rect x="13.6450%" y="661" width="0.0306%" height="15" fill="rgb(242,59,12)" fg:x="10700" fg:w="24"/><text x="13.8950%" y="671.50"></text></g><g><title>mallocx (18 samples, 0.02%)</title><rect x="13.6527%" y="645" width="0.0230%" height="15" fill="rgb(252,134,9)" fg:x="10706" fg:w="18"/><text x="13.9027%" y="655.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (30 samples, 0.04%)</title><rect x="13.6756%" y="837" width="0.0383%" height="15" fill="rgb(236,4,44)" fg:x="10724" fg:w="30"/><text x="13.9256%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (27 samples, 0.03%)</title><rect x="13.6794%" y="821" width="0.0344%" height="15" fill="rgb(254,172,41)" fg:x="10727" fg:w="27"/><text x="13.9294%" y="831.50"></text></g><g><title>core::mem::replace (27 samples, 0.03%)</title><rect x="13.6794%" y="805" width="0.0344%" height="15" fill="rgb(244,63,20)" fg:x="10727" fg:w="27"/><text x="13.9294%" y="815.50"></text></g><g><title>core::ptr::write (27 samples, 0.03%)</title><rect x="13.6794%" y="789" width="0.0344%" height="15" fill="rgb(250,73,31)" fg:x="10727" fg:w="27"/><text x="13.9294%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (482 samples, 0.61%)</title><rect x="13.1196%" y="853" width="0.6147%" height="15" fill="rgb(241,38,36)" fg:x="10288" fg:w="482"/><text x="13.3696%" y="863.50"></text></g><g><title>sdallocx (16 samples, 0.02%)</title><rect x="13.7139%" y="837" width="0.0204%" height="15" fill="rgb(245,211,2)" fg:x="10754" fg:w="16"/><text x="13.9639%" y="847.50"></text></g><g><title>isfree (16 samples, 0.02%)</title><rect x="13.7139%" y="821" width="0.0204%" height="15" fill="rgb(206,120,28)" fg:x="10754" fg:w="16"/><text x="13.9639%" y="831.50"></text></g><g><title>isdalloct (16 samples, 0.02%)</title><rect x="13.7139%" y="805" width="0.0204%" height="15" fill="rgb(211,59,34)" fg:x="10754" fg:w="16"/><text x="13.9639%" y="815.50"></text></g><g><title>arena_sdalloc (16 samples, 0.02%)</title><rect x="13.7139%" y="789" width="0.0204%" height="15" fill="rgb(233,168,5)" fg:x="10754" fg:w="16"/><text x="13.9639%" y="799.50"></text></g><g><title>tcache_dalloc_small (16 samples, 0.02%)</title><rect x="13.7139%" y="773" width="0.0204%" height="15" fill="rgb(234,33,13)" fg:x="10754" fg:w="16"/><text x="13.9639%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (11 samples, 0.01%)</title><rect x="13.7343%" y="853" width="0.0140%" height="15" fill="rgb(231,150,26)" fg:x="10770" fg:w="11"/><text x="13.9843%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11 samples, 0.01%)</title><rect x="13.7343%" y="837" width="0.0140%" height="15" fill="rgb(217,191,4)" fg:x="10770" fg:w="11"/><text x="13.9843%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="13.7343%" y="821" width="0.0140%" height="15" fill="rgb(246,198,38)" fg:x="10770" fg:w="11"/><text x="13.9843%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="13.7343%" y="805" width="0.0140%" height="15" fill="rgb(245,64,37)" fg:x="10770" fg:w="11"/><text x="13.9843%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="13.7343%" y="789" width="0.0140%" height="15" fill="rgb(250,30,36)" fg:x="10770" fg:w="11"/><text x="13.9843%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::function_at (59 samples, 0.08%)</title><rect x="13.7559%" y="853" width="0.0752%" height="15" fill="rgb(217,86,53)" fg:x="10787" fg:w="59"/><text x="14.0059%" y="863.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::function_at (59 samples, 0.08%)</title><rect x="13.7559%" y="837" width="0.0752%" height="15" fill="rgb(228,157,16)" fg:x="10787" fg:w="59"/><text x="14.0059%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (59 samples, 0.08%)</title><rect x="13.7559%" y="821" width="0.0752%" height="15" fill="rgb(217,59,31)" fg:x="10787" fg:w="59"/><text x="14.0059%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (59 samples, 0.08%)</title><rect x="13.7559%" y="805" width="0.0752%" height="15" fill="rgb(237,138,41)" fg:x="10787" fg:w="59"/><text x="14.0059%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_add (59 samples, 0.08%)</title><rect x="13.7559%" y="789" width="0.0752%" height="15" fill="rgb(227,91,49)" fg:x="10787" fg:w="59"/><text x="14.0059%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Resolver::function_from_handle (8 samples, 0.01%)</title><rect x="13.8312%" y="853" width="0.0102%" height="15" fill="rgb(247,21,44)" fg:x="10846" fg:w="8"/><text x="14.0812%" y="863.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (29 samples, 0.04%)</title><rect x="13.8452%" y="837" width="0.0370%" height="15" fill="rgb(219,210,51)" fg:x="10857" fg:w="29"/><text x="14.0952%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (29 samples, 0.04%)</title><rect x="13.8452%" y="821" width="0.0370%" height="15" fill="rgb(209,140,6)" fg:x="10857" fg:w="29"/><text x="14.0952%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.02%)</title><rect x="13.8822%" y="837" width="0.0191%" height="15" fill="rgb(221,188,24)" fg:x="10886" fg:w="15"/><text x="14.1322%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (15 samples, 0.02%)</title><rect x="13.8822%" y="821" width="0.0191%" height="15" fill="rgb(232,154,20)" fg:x="10886" fg:w="15"/><text x="14.1322%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="13.8873%" y="805" width="0.0140%" height="15" fill="rgb(244,137,50)" fg:x="10890" fg:w="11"/><text x="14.1373%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="13.8886%" y="789" width="0.0128%" height="15" fill="rgb(225,185,43)" fg:x="10891" fg:w="10"/><text x="14.1386%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_function (85 samples, 0.11%)</title><rect x="13.8452%" y="853" width="0.1084%" height="15" fill="rgb(213,205,38)" fg:x="10857" fg:w="85"/><text x="14.0952%" y="863.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (40 samples, 0.05%)</title><rect x="13.9026%" y="837" width="0.0510%" height="15" fill="rgb(236,73,12)" fg:x="10902" fg:w="40"/><text x="14.1526%" y="847.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (38 samples, 0.05%)</title><rect x="13.9051%" y="821" width="0.0485%" height="15" fill="rgb(235,219,13)" fg:x="10904" fg:w="38"/><text x="14.1551%" y="831.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (14 samples, 0.02%)</title><rect x="13.9625%" y="837" width="0.0179%" height="15" fill="rgb(218,59,36)" fg:x="10949" fg:w="14"/><text x="14.2125%" y="847.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (14 samples, 0.02%)</title><rect x="13.9625%" y="821" width="0.0179%" height="15" fill="rgb(205,110,39)" fg:x="10949" fg:w="14"/><text x="14.2125%" y="831.50"></text></g><g><title>core::cell::BorrowRefMut::new (14 samples, 0.02%)</title><rect x="13.9625%" y="805" width="0.0179%" height="15" fill="rgb(218,206,42)" fg:x="10949" fg:w="14"/><text x="14.2125%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (26 samples, 0.03%)</title><rect x="13.9536%" y="853" width="0.0332%" height="15" fill="rgb(248,125,24)" fg:x="10942" fg:w="26"/><text x="14.2036%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (4,756 samples, 6.07%)</title><rect x="7.9536%" y="885" width="6.0650%" height="15" fill="rgb(242,28,27)" fg:x="6237" fg:w="4756"/><text x="8.2036%" y="895.50">move_vm_..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (4,756 samples, 6.07%)</title><rect x="7.9536%" y="869" width="6.0650%" height="15" fill="rgb(216,228,15)" fg:x="6237" fg:w="4756"/><text x="8.2036%" y="879.50">move_vm_..</text></g><g><title>sdallocx (18 samples, 0.02%)</title><rect x="13.9957%" y="853" width="0.0230%" height="15" fill="rgb(235,116,46)" fg:x="10975" fg:w="18"/><text x="14.2457%" y="863.50"></text></g><g><title>isfree (18 samples, 0.02%)</title><rect x="13.9957%" y="837" width="0.0230%" height="15" fill="rgb(224,18,32)" fg:x="10975" fg:w="18"/><text x="14.2457%" y="847.50"></text></g><g><title>isdalloct (18 samples, 0.02%)</title><rect x="13.9957%" y="821" width="0.0230%" height="15" fill="rgb(252,5,12)" fg:x="10975" fg:w="18"/><text x="14.2457%" y="831.50"></text></g><g><title>arena_sdalloc (18 samples, 0.02%)</title><rect x="13.9957%" y="805" width="0.0230%" height="15" fill="rgb(251,36,5)" fg:x="10975" fg:w="18"/><text x="14.2457%" y="815.50"></text></g><g><title>tcache_dalloc_small (18 samples, 0.02%)</title><rect x="13.9957%" y="789" width="0.0230%" height="15" fill="rgb(217,53,14)" fg:x="10975" fg:w="18"/><text x="14.2457%" y="799.50"></text></g><g><title>bcs::de::from_bytes_seed (14 samples, 0.02%)</title><rect x="14.0365%" y="533" width="0.0179%" height="15" fill="rgb(215,86,45)" fg:x="11007" fg:w="14"/><text x="14.2865%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.03%)</title><rect x="14.0225%" y="661" width="0.0344%" height="15" fill="rgb(242,169,11)" fg:x="10996" fg:w="27"/><text x="14.2725%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.03%)</title><rect x="14.0225%" y="645" width="0.0344%" height="15" fill="rgb(211,213,45)" fg:x="10996" fg:w="27"/><text x="14.2725%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 0.03%)</title><rect x="14.0225%" y="629" width="0.0344%" height="15" fill="rgb(205,88,11)" fg:x="10996" fg:w="27"/><text x="14.2725%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (27 samples, 0.03%)</title><rect x="14.0225%" y="613" width="0.0344%" height="15" fill="rgb(252,69,26)" fg:x="10996" fg:w="27"/><text x="14.2725%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (27 samples, 0.03%)</title><rect x="14.0225%" y="597" width="0.0344%" height="15" fill="rgb(246,123,37)" fg:x="10996" fg:w="27"/><text x="14.2725%" y="607.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (27 samples, 0.03%)</title><rect x="14.0225%" y="581" width="0.0344%" height="15" fill="rgb(212,205,5)" fg:x="10996" fg:w="27"/><text x="14.2725%" y="591.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (27 samples, 0.03%)</title><rect x="14.0225%" y="565" width="0.0344%" height="15" fill="rgb(253,148,0)" fg:x="10996" fg:w="27"/><text x="14.2725%" y="575.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (16 samples, 0.02%)</title><rect x="14.0365%" y="549" width="0.0204%" height="15" fill="rgb(239,22,4)" fg:x="11007" fg:w="16"/><text x="14.2865%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.04%)</title><rect x="14.0225%" y="709" width="0.0446%" height="15" fill="rgb(226,26,53)" fg:x="10996" fg:w="35"/><text x="14.2725%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (35 samples, 0.04%)</title><rect x="14.0225%" y="693" width="0.0446%" height="15" fill="rgb(225,229,45)" fg:x="10996" fg:w="35"/><text x="14.2725%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.04%)</title><rect x="14.0225%" y="677" width="0.0446%" height="15" fill="rgb(220,60,37)" fg:x="10996" fg:w="35"/><text x="14.2725%" y="687.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (8 samples, 0.01%)</title><rect x="14.0569%" y="661" width="0.0102%" height="15" fill="rgb(217,180,35)" fg:x="11023" fg:w="8"/><text x="14.3069%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (41 samples, 0.05%)</title><rect x="14.0225%" y="741" width="0.0523%" height="15" fill="rgb(229,7,53)" fg:x="10996" fg:w="41"/><text x="14.2725%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (41 samples, 0.05%)</title><rect x="14.0225%" y="725" width="0.0523%" height="15" fill="rgb(254,137,3)" fg:x="10996" fg:w="41"/><text x="14.2725%" y="735.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (18 samples, 0.02%)</title><rect x="14.0875%" y="533" width="0.0230%" height="15" fill="rgb(215,140,41)" fg:x="11047" fg:w="18"/><text x="14.3375%" y="543.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (18 samples, 0.02%)</title><rect x="14.0875%" y="517" width="0.0230%" height="15" fill="rgb(250,80,15)" fg:x="11047" fg:w="18"/><text x="14.3375%" y="527.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (18 samples, 0.02%)</title><rect x="14.0875%" y="501" width="0.0230%" height="15" fill="rgb(252,191,6)" fg:x="11047" fg:w="18"/><text x="14.3375%" y="511.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (17 samples, 0.02%)</title><rect x="14.0888%" y="485" width="0.0217%" height="15" fill="rgb(246,217,18)" fg:x="11048" fg:w="17"/><text x="14.3388%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (15 samples, 0.02%)</title><rect x="14.0913%" y="469" width="0.0191%" height="15" fill="rgb(223,93,7)" fg:x="11050" fg:w="15"/><text x="14.3413%" y="479.50"></text></g><g><title> 32]&gt;::deserialize (15 samples, 0.02%)</title><rect x="14.0913%" y="453" width="0.0191%" height="15" fill="rgb(225,55,52)" fg:x="11050" fg:w="15"/><text x="14.3413%" y="463.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (15 samples, 0.02%)</title><rect x="14.0913%" y="437" width="0.0191%" height="15" fill="rgb(240,31,24)" fg:x="11050" fg:w="15"/><text x="14.3413%" y="447.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (15 samples, 0.02%)</title><rect x="14.0913%" y="421" width="0.0191%" height="15" fill="rgb(205,56,52)" fg:x="11050" fg:w="15"/><text x="14.3413%" y="431.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (15 samples, 0.02%)</title><rect x="14.0913%" y="405" width="0.0191%" height="15" fill="rgb(246,146,12)" fg:x="11050" fg:w="15"/><text x="14.3413%" y="415.50"></text></g><g><title>serde::de::SeqAccess::next_element (10 samples, 0.01%)</title><rect x="14.0977%" y="389" width="0.0128%" height="15" fill="rgb(239,84,36)" fg:x="11055" fg:w="10"/><text x="14.3477%" y="399.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (10 samples, 0.01%)</title><rect x="14.0977%" y="373" width="0.0128%" height="15" fill="rgb(207,41,40)" fg:x="11055" fg:w="10"/><text x="14.3477%" y="383.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10 samples, 0.01%)</title><rect x="14.0977%" y="357" width="0.0128%" height="15" fill="rgb(241,179,25)" fg:x="11055" fg:w="10"/><text x="14.3477%" y="367.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (10 samples, 0.01%)</title><rect x="14.0977%" y="341" width="0.0128%" height="15" fill="rgb(210,0,34)" fg:x="11055" fg:w="10"/><text x="14.3477%" y="351.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (10 samples, 0.01%)</title><rect x="14.0977%" y="325" width="0.0128%" height="15" fill="rgb(225,217,29)" fg:x="11055" fg:w="10"/><text x="14.3477%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.04%)</title><rect x="14.0748%" y="741" width="0.0446%" height="15" fill="rgb(216,191,38)" fg:x="11037" fg:w="35"/><text x="14.3248%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (35 samples, 0.04%)</title><rect x="14.0748%" y="725" width="0.0446%" height="15" fill="rgb(232,140,52)" fg:x="11037" fg:w="35"/><text x="14.3248%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.04%)</title><rect x="14.0748%" y="709" width="0.0446%" height="15" fill="rgb(223,158,51)" fg:x="11037" fg:w="35"/><text x="14.3248%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.04%)</title><rect x="14.0748%" y="693" width="0.0446%" height="15" fill="rgb(235,29,51)" fg:x="11037" fg:w="35"/><text x="14.3248%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.04%)</title><rect x="14.0748%" y="677" width="0.0446%" height="15" fill="rgb(215,181,18)" fg:x="11037" fg:w="35"/><text x="14.3248%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (35 samples, 0.04%)</title><rect x="14.0748%" y="661" width="0.0446%" height="15" fill="rgb(227,125,34)" fg:x="11037" fg:w="35"/><text x="14.3248%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (35 samples, 0.04%)</title><rect x="14.0748%" y="645" width="0.0446%" height="15" fill="rgb(230,197,49)" fg:x="11037" fg:w="35"/><text x="14.3248%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (29 samples, 0.04%)</title><rect x="14.0824%" y="629" width="0.0370%" height="15" fill="rgb(239,141,16)" fg:x="11043" fg:w="29"/><text x="14.3324%" y="639.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (29 samples, 0.04%)</title><rect x="14.0824%" y="613" width="0.0370%" height="15" fill="rgb(225,105,43)" fg:x="11043" fg:w="29"/><text x="14.3324%" y="623.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (29 samples, 0.04%)</title><rect x="14.0824%" y="597" width="0.0370%" height="15" fill="rgb(214,131,14)" fg:x="11043" fg:w="29"/><text x="14.3324%" y="607.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (25 samples, 0.03%)</title><rect x="14.0875%" y="581" width="0.0319%" height="15" fill="rgb(229,177,11)" fg:x="11047" fg:w="25"/><text x="14.3375%" y="591.50"></text></g><g><title>bcs::de::from_bytes_seed (25 samples, 0.03%)</title><rect x="14.0875%" y="565" width="0.0319%" height="15" fill="rgb(231,180,14)" fg:x="11047" fg:w="25"/><text x="14.3375%" y="575.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (25 samples, 0.03%)</title><rect x="14.0875%" y="549" width="0.0319%" height="15" fill="rgb(232,88,2)" fg:x="11047" fg:w="25"/><text x="14.3375%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (78 samples, 0.10%)</title><rect x="14.0212%" y="869" width="0.0995%" height="15" fill="rgb(205,220,8)" fg:x="10995" fg:w="78"/><text x="14.2712%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (78 samples, 0.10%)</title><rect x="14.0212%" y="853" width="0.0995%" height="15" fill="rgb(225,23,53)" fg:x="10995" fg:w="78"/><text x="14.2712%" y="863.50"></text></g><g><title>core::iter::adapters::try_process (78 samples, 0.10%)</title><rect x="14.0212%" y="837" width="0.0995%" height="15" fill="rgb(213,62,29)" fg:x="10995" fg:w="78"/><text x="14.2712%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (77 samples, 0.10%)</title><rect x="14.0225%" y="821" width="0.0982%" height="15" fill="rgb(227,75,7)" fg:x="10996" fg:w="77"/><text x="14.2725%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (77 samples, 0.10%)</title><rect x="14.0225%" y="805" width="0.0982%" height="15" fill="rgb(207,105,14)" fg:x="10996" fg:w="77"/><text x="14.2725%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (77 samples, 0.10%)</title><rect x="14.0225%" y="789" width="0.0982%" height="15" fill="rgb(245,62,29)" fg:x="10996" fg:w="77"/><text x="14.2725%" y="799.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (77 samples, 0.10%)</title><rect x="14.0225%" y="773" width="0.0982%" height="15" fill="rgb(236,202,4)" fg:x="10996" fg:w="77"/><text x="14.2725%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (77 samples, 0.10%)</title><rect x="14.0225%" y="757" width="0.0982%" height="15" fill="rgb(250,67,1)" fg:x="10996" fg:w="77"/><text x="14.2725%" y="767.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args (84 samples, 0.11%)</title><rect x="14.0186%" y="885" width="0.1071%" height="15" fill="rgb(253,115,44)" fg:x="10993" fg:w="84"/><text x="14.2686%" y="895.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::run_success_epilogue (5,015 samples, 6.40%)</title><rect x="7.7368%" y="949" width="6.3953%" height="15" fill="rgb(251,139,18)" fg:x="6067" fg:w="5015"/><text x="7.9868%" y="959.50">aptos_vm..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (4,975 samples, 6.34%)</title><rect x="7.7879%" y="933" width="6.3443%" height="15" fill="rgb(218,22,32)" fg:x="6107" fg:w="4975"/><text x="8.0379%" y="943.50">move_vm_..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (4,975 samples, 6.34%)</title><rect x="7.7879%" y="917" width="6.3443%" height="15" fill="rgb(243,53,5)" fg:x="6107" fg:w="4975"/><text x="8.0379%" y="927.50">move_vm_..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (4,876 samples, 6.22%)</title><rect x="7.9141%" y="901" width="6.2180%" height="15" fill="rgb(227,56,16)" fg:x="6206" fg:w="4876"/><text x="8.1641%" y="911.50">move_vm_..</text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="14.1449%" y="917" width="0.0128%" height="15" fill="rgb(245,53,0)" fg:x="11092" fg:w="10"/><text x="14.3949%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="14.1449%" y="901" width="0.0128%" height="15" fill="rgb(216,170,35)" fg:x="11092" fg:w="10"/><text x="14.3949%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.01%)</title><rect x="14.1449%" y="885" width="0.0128%" height="15" fill="rgb(211,200,8)" fg:x="11092" fg:w="10"/><text x="14.3949%" y="895.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::context::NativeAggregatorContext::into_change_set (28 samples, 0.04%)</title><rect x="14.1360%" y="933" width="0.0357%" height="15" fill="rgb(228,204,44)" fg:x="11085" fg:w="28"/><text x="14.3860%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="14.1755%" y="757" width="0.0102%" height="15" fill="rgb(214,121,17)" fg:x="11116" fg:w="8"/><text x="14.4255%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="14.1755%" y="741" width="0.0102%" height="15" fill="rgb(233,64,38)" fg:x="11116" fg:w="8"/><text x="14.4255%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="14.1755%" y="725" width="0.0102%" height="15" fill="rgb(253,54,19)" fg:x="11116" fg:w="8"/><text x="14.4255%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::native_extensions::NativeContextExtensions&gt; (16 samples, 0.02%)</title><rect x="14.1717%" y="933" width="0.0204%" height="15" fill="rgb(253,94,18)" fg:x="11113" fg:w="16"/><text x="14.4217%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="14.1717%" y="917" width="0.0204%" height="15" fill="rgb(227,57,52)" fg:x="11113" fg:w="16"/><text x="14.4217%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;,std::hash::random::RandomState&gt;&gt; (16 samples, 0.02%)</title><rect x="14.1717%" y="901" width="0.0204%" height="15" fill="rgb(230,228,50)" fg:x="11113" fg:w="16"/><text x="14.4217%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt;&gt; (16 samples, 0.02%)</title><rect x="14.1717%" y="885" width="0.0204%" height="15" fill="rgb(217,205,27)" fg:x="11113" fg:w="16"/><text x="14.4217%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="14.1717%" y="869" width="0.0204%" height="15" fill="rgb(252,71,50)" fg:x="11113" fg:w="16"/><text x="14.4217%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (16 samples, 0.02%)</title><rect x="14.1717%" y="853" width="0.0204%" height="15" fill="rgb(209,86,4)" fg:x="11113" fg:w="16"/><text x="14.4217%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (16 samples, 0.02%)</title><rect x="14.1717%" y="837" width="0.0204%" height="15" fill="rgb(229,94,0)" fg:x="11113" fg:w="16"/><text x="14.4217%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (16 samples, 0.02%)</title><rect x="14.1717%" y="821" width="0.0204%" height="15" fill="rgb(252,223,21)" fg:x="11113" fg:w="16"/><text x="14.4217%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (16 samples, 0.02%)</title><rect x="14.1717%" y="805" width="0.0204%" height="15" fill="rgb(230,210,4)" fg:x="11113" fg:w="16"/><text x="14.4217%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt; (16 samples, 0.02%)</title><rect x="14.1717%" y="789" width="0.0204%" height="15" fill="rgb(240,149,38)" fg:x="11113" fg:w="16"/><text x="14.4217%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt; (16 samples, 0.02%)</title><rect x="14.1717%" y="773" width="0.0204%" height="15" fill="rgb(254,105,20)" fg:x="11113" fg:w="16"/><text x="14.4217%" y="783.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::remove (13 samples, 0.02%)</title><rect x="14.1946%" y="933" width="0.0166%" height="15" fill="rgb(253,87,46)" fg:x="11131" fg:w="13"/><text x="14.4446%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (10 samples, 0.01%)</title><rect x="14.1985%" y="917" width="0.0128%" height="15" fill="rgb(253,116,33)" fg:x="11134" fg:w="10"/><text x="14.4485%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (10 samples, 0.01%)</title><rect x="14.1985%" y="901" width="0.0128%" height="15" fill="rgb(229,198,5)" fg:x="11134" fg:w="10"/><text x="14.4485%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (10 samples, 0.01%)</title><rect x="14.1985%" y="885" width="0.0128%" height="15" fill="rgb(242,38,37)" fg:x="11134" fg:w="10"/><text x="14.4485%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="14.2482%" y="901" width="0.0230%" height="15" fill="rgb(242,69,53)" fg:x="11173" fg:w="18"/><text x="14.4982%" y="911.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 samples, 0.02%)</title><rect x="14.2482%" y="885" width="0.0230%" height="15" fill="rgb(249,80,16)" fg:x="11173" fg:w="18"/><text x="14.4982%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="14.2839%" y="661" width="0.0191%" height="15" fill="rgb(206,128,11)" fg:x="11201" fg:w="15"/><text x="14.5339%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="14.2839%" y="645" width="0.0191%" height="15" fill="rgb(212,35,20)" fg:x="11201" fg:w="15"/><text x="14.5339%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="14.2864%" y="629" width="0.0166%" height="15" fill="rgb(236,79,13)" fg:x="11203" fg:w="13"/><text x="14.5364%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="14.2864%" y="613" width="0.0166%" height="15" fill="rgb(233,123,3)" fg:x="11203" fg:w="13"/><text x="14.5364%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (13 samples, 0.02%)</title><rect x="14.2864%" y="597" width="0.0166%" height="15" fill="rgb(214,93,52)" fg:x="11203" fg:w="13"/><text x="14.5364%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="14.2864%" y="581" width="0.0166%" height="15" fill="rgb(251,37,40)" fg:x="11203" fg:w="13"/><text x="14.5364%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (13 samples, 0.02%)</title><rect x="14.2864%" y="565" width="0.0166%" height="15" fill="rgb(227,80,54)" fg:x="11203" fg:w="13"/><text x="14.5364%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (13 samples, 0.02%)</title><rect x="14.2864%" y="549" width="0.0166%" height="15" fill="rgb(254,48,11)" fg:x="11203" fg:w="13"/><text x="14.5364%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (23 samples, 0.03%)</title><rect x="14.2801%" y="677" width="0.0293%" height="15" fill="rgb(235,193,26)" fg:x="11198" fg:w="23"/><text x="14.5301%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (37 samples, 0.05%)</title><rect x="14.2750%" y="805" width="0.0472%" height="15" fill="rgb(229,99,21)" fg:x="11194" fg:w="37"/><text x="14.5250%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (37 samples, 0.05%)</title><rect x="14.2750%" y="789" width="0.0472%" height="15" fill="rgb(211,140,41)" fg:x="11194" fg:w="37"/><text x="14.5250%" y="799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.05%)</title><rect x="14.2750%" y="773" width="0.0472%" height="15" fill="rgb(240,227,30)" fg:x="11194" fg:w="37"/><text x="14.5250%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (37 samples, 0.05%)</title><rect x="14.2750%" y="757" width="0.0472%" height="15" fill="rgb(215,224,45)" fg:x="11194" fg:w="37"/><text x="14.5250%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (37 samples, 0.05%)</title><rect x="14.2750%" y="741" width="0.0472%" height="15" fill="rgb(206,123,31)" fg:x="11194" fg:w="37"/><text x="14.5250%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (37 samples, 0.05%)</title><rect x="14.2750%" y="725" width="0.0472%" height="15" fill="rgb(210,138,16)" fg:x="11194" fg:w="37"/><text x="14.5250%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.05%)</title><rect x="14.2750%" y="709" width="0.0472%" height="15" fill="rgb(228,57,28)" fg:x="11194" fg:w="37"/><text x="14.5250%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (33 samples, 0.04%)</title><rect x="14.2801%" y="693" width="0.0421%" height="15" fill="rgb(242,170,10)" fg:x="11198" fg:w="33"/><text x="14.5301%" y="703.50"></text></g><g><title>sdallocx (8 samples, 0.01%)</title><rect x="14.3119%" y="677" width="0.0102%" height="15" fill="rgb(228,214,39)" fg:x="11223" fg:w="8"/><text x="14.5619%" y="687.50"></text></g><g><title>isfree (8 samples, 0.01%)</title><rect x="14.3119%" y="661" width="0.0102%" height="15" fill="rgb(218,179,33)" fg:x="11223" fg:w="8"/><text x="14.5619%" y="671.50"></text></g><g><title>isdalloct (8 samples, 0.01%)</title><rect x="14.3119%" y="645" width="0.0102%" height="15" fill="rgb(235,193,39)" fg:x="11223" fg:w="8"/><text x="14.5619%" y="655.50"></text></g><g><title>arena_sdalloc (8 samples, 0.01%)</title><rect x="14.3119%" y="629" width="0.0102%" height="15" fill="rgb(219,221,36)" fg:x="11223" fg:w="8"/><text x="14.5619%" y="639.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.01%)</title><rect x="14.3119%" y="613" width="0.0102%" height="15" fill="rgb(248,218,19)" fg:x="11223" fg:w="8"/><text x="14.5619%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.06%)</title><rect x="14.2711%" y="901" width="0.0561%" height="15" fill="rgb(205,50,9)" fg:x="11191" fg:w="44"/><text x="14.5211%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (44 samples, 0.06%)</title><rect x="14.2711%" y="885" width="0.0561%" height="15" fill="rgb(238,81,28)" fg:x="11191" fg:w="44"/><text x="14.5211%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (44 samples, 0.06%)</title><rect x="14.2711%" y="869" width="0.0561%" height="15" fill="rgb(235,110,19)" fg:x="11191" fg:w="44"/><text x="14.5211%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (44 samples, 0.06%)</title><rect x="14.2711%" y="853" width="0.0561%" height="15" fill="rgb(214,7,14)" fg:x="11191" fg:w="44"/><text x="14.5211%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.06%)</title><rect x="14.2711%" y="837" width="0.0561%" height="15" fill="rgb(211,77,3)" fg:x="11191" fg:w="44"/><text x="14.5211%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (44 samples, 0.06%)</title><rect x="14.2711%" y="821" width="0.0561%" height="15" fill="rgb(229,5,9)" fg:x="11191" fg:w="44"/><text x="14.5211%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (18 samples, 0.02%)</title><rect x="14.3681%" y="757" width="0.0230%" height="15" fill="rgb(225,90,11)" fg:x="11267" fg:w="18"/><text x="14.6181%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (11 samples, 0.01%)</title><rect x="14.3770%" y="741" width="0.0140%" height="15" fill="rgb(242,56,8)" fg:x="11274" fg:w="11"/><text x="14.6270%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (11 samples, 0.01%)</title><rect x="14.3770%" y="725" width="0.0140%" height="15" fill="rgb(249,212,39)" fg:x="11274" fg:w="11"/><text x="14.6270%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="14.3770%" y="709" width="0.0140%" height="15" fill="rgb(236,90,9)" fg:x="11274" fg:w="11"/><text x="14.6270%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (11 samples, 0.01%)</title><rect x="14.3770%" y="693" width="0.0140%" height="15" fill="rgb(206,88,35)" fg:x="11274" fg:w="11"/><text x="14.6270%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (36 samples, 0.05%)</title><rect x="14.3477%" y="837" width="0.0459%" height="15" fill="rgb(205,126,30)" fg:x="11251" fg:w="36"/><text x="14.5977%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (20 samples, 0.03%)</title><rect x="14.3681%" y="821" width="0.0255%" height="15" fill="rgb(230,176,12)" fg:x="11267" fg:w="20"/><text x="14.6181%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (20 samples, 0.03%)</title><rect x="14.3681%" y="805" width="0.0255%" height="15" fill="rgb(243,19,9)" fg:x="11267" fg:w="20"/><text x="14.6181%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.03%)</title><rect x="14.3681%" y="789" width="0.0255%" height="15" fill="rgb(245,171,17)" fg:x="11267" fg:w="20"/><text x="14.6181%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (20 samples, 0.03%)</title><rect x="14.3681%" y="773" width="0.0255%" height="15" fill="rgb(227,52,21)" fg:x="11267" fg:w="20"/><text x="14.6181%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (46 samples, 0.06%)</title><rect x="14.3413%" y="901" width="0.0587%" height="15" fill="rgb(238,69,14)" fg:x="11246" fg:w="46"/><text x="14.5913%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (46 samples, 0.06%)</title><rect x="14.3413%" y="885" width="0.0587%" height="15" fill="rgb(241,156,39)" fg:x="11246" fg:w="46"/><text x="14.5913%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.06%)</title><rect x="14.3413%" y="869" width="0.0587%" height="15" fill="rgb(212,227,28)" fg:x="11246" fg:w="46"/><text x="14.5913%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (46 samples, 0.06%)</title><rect x="14.3413%" y="853" width="0.0587%" height="15" fill="rgb(209,118,27)" fg:x="11246" fg:w="46"/><text x="14.5913%" y="863.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="14.4152%" y="853" width="0.0102%" height="15" fill="rgb(226,102,5)" fg:x="11304" fg:w="8"/><text x="14.6652%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (23 samples, 0.03%)</title><rect x="14.4140%" y="901" width="0.0293%" height="15" fill="rgb(223,34,3)" fg:x="11303" fg:w="23"/><text x="14.6640%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (23 samples, 0.03%)</title><rect x="14.4140%" y="885" width="0.0293%" height="15" fill="rgb(221,81,38)" fg:x="11303" fg:w="23"/><text x="14.6640%" y="895.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (22 samples, 0.03%)</title><rect x="14.4152%" y="869" width="0.0281%" height="15" fill="rgb(236,219,28)" fg:x="11304" fg:w="22"/><text x="14.6652%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (14 samples, 0.02%)</title><rect x="14.4254%" y="853" width="0.0179%" height="15" fill="rgb(213,200,14)" fg:x="11312" fg:w="14"/><text x="14.6754%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 0.02%)</title><rect x="14.4254%" y="837" width="0.0179%" height="15" fill="rgb(240,33,19)" fg:x="11312" fg:w="14"/><text x="14.6754%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.02%)</title><rect x="14.4254%" y="821" width="0.0179%" height="15" fill="rgb(233,113,27)" fg:x="11312" fg:w="14"/><text x="14.6754%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.02%)</title><rect x="14.4280%" y="805" width="0.0153%" height="15" fill="rgb(220,221,18)" fg:x="11314" fg:w="12"/><text x="14.6780%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.02%)</title><rect x="14.4280%" y="789" width="0.0153%" height="15" fill="rgb(238,92,8)" fg:x="11314" fg:w="12"/><text x="14.6780%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (12 samples, 0.02%)</title><rect x="14.4280%" y="773" width="0.0153%" height="15" fill="rgb(222,164,16)" fg:x="11314" fg:w="12"/><text x="14.6780%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.02%)</title><rect x="14.4280%" y="757" width="0.0153%" height="15" fill="rgb(241,119,3)" fg:x="11314" fg:w="12"/><text x="14.6780%" y="767.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.02%)</title><rect x="14.4280%" y="741" width="0.0153%" height="15" fill="rgb(241,44,8)" fg:x="11314" fg:w="12"/><text x="14.6780%" y="751.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (12 samples, 0.02%)</title><rect x="14.4280%" y="725" width="0.0153%" height="15" fill="rgb(230,36,40)" fg:x="11314" fg:w="12"/><text x="14.6780%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.02%)</title><rect x="14.4280%" y="709" width="0.0153%" height="15" fill="rgb(243,16,36)" fg:x="11314" fg:w="12"/><text x="14.6780%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (12 samples, 0.02%)</title><rect x="14.4280%" y="693" width="0.0153%" height="15" fill="rgb(231,4,26)" fg:x="11314" fg:w="12"/><text x="14.6780%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (12 samples, 0.02%)</title><rect x="14.4280%" y="677" width="0.0153%" height="15" fill="rgb(240,9,31)" fg:x="11314" fg:w="12"/><text x="14.6780%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="14.4803%" y="437" width="0.0153%" height="15" fill="rgb(207,173,15)" fg:x="11355" fg:w="12"/><text x="14.7303%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="14.4803%" y="421" width="0.0153%" height="15" fill="rgb(224,192,53)" fg:x="11355" fg:w="12"/><text x="14.7303%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="14.4803%" y="405" width="0.0153%" height="15" fill="rgb(223,67,28)" fg:x="11355" fg:w="12"/><text x="14.7303%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="14.4803%" y="389" width="0.0153%" height="15" fill="rgb(211,20,47)" fg:x="11355" fg:w="12"/><text x="14.7303%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (12 samples, 0.02%)</title><rect x="14.4803%" y="373" width="0.0153%" height="15" fill="rgb(240,228,2)" fg:x="11355" fg:w="12"/><text x="14.7303%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="14.4803%" y="357" width="0.0153%" height="15" fill="rgb(248,151,12)" fg:x="11355" fg:w="12"/><text x="14.7303%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (12 samples, 0.02%)</title><rect x="14.4803%" y="341" width="0.0153%" height="15" fill="rgb(244,8,39)" fg:x="11355" fg:w="12"/><text x="14.7303%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (12 samples, 0.02%)</title><rect x="14.4803%" y="325" width="0.0153%" height="15" fill="rgb(222,26,8)" fg:x="11355" fg:w="12"/><text x="14.7303%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (12 samples, 0.02%)</title><rect x="14.4803%" y="309" width="0.0153%" height="15" fill="rgb(213,106,44)" fg:x="11355" fg:w="12"/><text x="14.7303%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="14.4816%" y="293" width="0.0140%" height="15" fill="rgb(214,129,20)" fg:x="11356" fg:w="11"/><text x="14.7316%" y="303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="14.4816%" y="277" width="0.0140%" height="15" fill="rgb(212,32,13)" fg:x="11356" fg:w="11"/><text x="14.7316%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="14.4816%" y="261" width="0.0140%" height="15" fill="rgb(208,168,33)" fg:x="11356" fg:w="11"/><text x="14.7316%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="14.4816%" y="245" width="0.0140%" height="15" fill="rgb(231,207,8)" fg:x="11356" fg:w="11"/><text x="14.7316%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (11 samples, 0.01%)</title><rect x="14.4816%" y="229" width="0.0140%" height="15" fill="rgb(235,219,23)" fg:x="11356" fg:w="11"/><text x="14.7316%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="14.4828%" y="213" width="0.0128%" height="15" fill="rgb(226,216,26)" fg:x="11357" fg:w="10"/><text x="14.7328%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (10 samples, 0.01%)</title><rect x="14.4828%" y="197" width="0.0128%" height="15" fill="rgb(239,137,16)" fg:x="11357" fg:w="10"/><text x="14.7328%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (10 samples, 0.01%)</title><rect x="14.4828%" y="181" width="0.0128%" height="15" fill="rgb(207,12,36)" fg:x="11357" fg:w="10"/><text x="14.7328%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (9 samples, 0.01%)</title><rect x="14.4841%" y="165" width="0.0115%" height="15" fill="rgb(210,214,24)" fg:x="11358" fg:w="9"/><text x="14.7341%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="14.4854%" y="149" width="0.0102%" height="15" fill="rgb(206,56,30)" fg:x="11359" fg:w="8"/><text x="14.7354%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="14.4854%" y="133" width="0.0102%" height="15" fill="rgb(228,143,26)" fg:x="11359" fg:w="8"/><text x="14.7354%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="14.4854%" y="117" width="0.0102%" height="15" fill="rgb(216,218,46)" fg:x="11359" fg:w="8"/><text x="14.7354%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="14.4854%" y="101" width="0.0102%" height="15" fill="rgb(206,6,19)" fg:x="11359" fg:w="8"/><text x="14.7354%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (8 samples, 0.01%)</title><rect x="14.4854%" y="85" width="0.0102%" height="15" fill="rgb(239,177,51)" fg:x="11359" fg:w="8"/><text x="14.7354%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="14.4854%" y="69" width="0.0102%" height="15" fill="rgb(216,55,25)" fg:x="11359" fg:w="8"/><text x="14.7354%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (8 samples, 0.01%)</title><rect x="14.4854%" y="53" width="0.0102%" height="15" fill="rgb(231,163,29)" fg:x="11359" fg:w="8"/><text x="14.7354%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (8 samples, 0.01%)</title><rect x="14.4854%" y="37" width="0.0102%" height="15" fill="rgb(232,149,50)" fg:x="11359" fg:w="8"/><text x="14.7354%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (13 samples, 0.02%)</title><rect x="14.4803%" y="453" width="0.0166%" height="15" fill="rgb(223,142,48)" fg:x="11355" fg:w="13"/><text x="14.7303%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (26 samples, 0.03%)</title><rect x="14.4650%" y="725" width="0.0332%" height="15" fill="rgb(245,83,23)" fg:x="11343" fg:w="26"/><text x="14.7150%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="14.4650%" y="709" width="0.0332%" height="15" fill="rgb(224,63,2)" fg:x="11343" fg:w="26"/><text x="14.7150%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (26 samples, 0.03%)</title><rect x="14.4650%" y="693" width="0.0332%" height="15" fill="rgb(218,65,53)" fg:x="11343" fg:w="26"/><text x="14.7150%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (26 samples, 0.03%)</title><rect x="14.4650%" y="677" width="0.0332%" height="15" fill="rgb(221,84,29)" fg:x="11343" fg:w="26"/><text x="14.7150%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (26 samples, 0.03%)</title><rect x="14.4650%" y="661" width="0.0332%" height="15" fill="rgb(234,0,32)" fg:x="11343" fg:w="26"/><text x="14.7150%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="14.4650%" y="645" width="0.0332%" height="15" fill="rgb(206,20,16)" fg:x="11343" fg:w="26"/><text x="14.7150%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (26 samples, 0.03%)</title><rect x="14.4650%" y="629" width="0.0332%" height="15" fill="rgb(244,172,18)" fg:x="11343" fg:w="26"/><text x="14.7150%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (26 samples, 0.03%)</title><rect x="14.4650%" y="613" width="0.0332%" height="15" fill="rgb(254,133,1)" fg:x="11343" fg:w="26"/><text x="14.7150%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (19 samples, 0.02%)</title><rect x="14.4739%" y="597" width="0.0242%" height="15" fill="rgb(222,206,41)" fg:x="11350" fg:w="19"/><text x="14.7239%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="14.4790%" y="581" width="0.0191%" height="15" fill="rgb(212,3,42)" fg:x="11354" fg:w="15"/><text x="14.7290%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="14.4790%" y="565" width="0.0191%" height="15" fill="rgb(241,11,4)" fg:x="11354" fg:w="15"/><text x="14.7290%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="14.4790%" y="549" width="0.0191%" height="15" fill="rgb(205,19,26)" fg:x="11354" fg:w="15"/><text x="14.7290%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="14.4790%" y="533" width="0.0191%" height="15" fill="rgb(210,179,32)" fg:x="11354" fg:w="15"/><text x="14.7290%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (15 samples, 0.02%)</title><rect x="14.4790%" y="517" width="0.0191%" height="15" fill="rgb(227,116,49)" fg:x="11354" fg:w="15"/><text x="14.7290%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="14.4790%" y="501" width="0.0191%" height="15" fill="rgb(211,146,6)" fg:x="11354" fg:w="15"/><text x="14.7290%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (15 samples, 0.02%)</title><rect x="14.4790%" y="485" width="0.0191%" height="15" fill="rgb(219,44,39)" fg:x="11354" fg:w="15"/><text x="14.7290%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (15 samples, 0.02%)</title><rect x="14.4790%" y="469" width="0.0191%" height="15" fill="rgb(234,128,11)" fg:x="11354" fg:w="15"/><text x="14.7290%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (36 samples, 0.05%)</title><rect x="14.4573%" y="741" width="0.0459%" height="15" fill="rgb(220,183,53)" fg:x="11337" fg:w="36"/><text x="14.7073%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.06%)</title><rect x="14.4522%" y="789" width="0.0574%" height="15" fill="rgb(213,219,32)" fg:x="11333" fg:w="45"/><text x="14.7022%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (45 samples, 0.06%)</title><rect x="14.4522%" y="773" width="0.0574%" height="15" fill="rgb(232,156,16)" fg:x="11333" fg:w="45"/><text x="14.7022%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (45 samples, 0.06%)</title><rect x="14.4522%" y="757" width="0.0574%" height="15" fill="rgb(246,135,34)" fg:x="11333" fg:w="45"/><text x="14.7022%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.07%)</title><rect x="14.4497%" y="853" width="0.0650%" height="15" fill="rgb(241,99,0)" fg:x="11331" fg:w="51"/><text x="14.6997%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (49 samples, 0.06%)</title><rect x="14.4522%" y="837" width="0.0625%" height="15" fill="rgb(222,103,45)" fg:x="11333" fg:w="49"/><text x="14.7022%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (49 samples, 0.06%)</title><rect x="14.4522%" y="821" width="0.0625%" height="15" fill="rgb(212,57,4)" fg:x="11333" fg:w="49"/><text x="14.7022%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (49 samples, 0.06%)</title><rect x="14.4522%" y="805" width="0.0625%" height="15" fill="rgb(215,68,47)" fg:x="11333" fg:w="49"/><text x="14.7022%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::into_effect (71 samples, 0.09%)</title><rect x="14.4433%" y="901" width="0.0905%" height="15" fill="rgb(230,84,2)" fg:x="11326" fg:w="71"/><text x="14.6933%" y="911.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::into_effect (71 samples, 0.09%)</title><rect x="14.4433%" y="885" width="0.0905%" height="15" fill="rgb(220,102,14)" fg:x="11326" fg:w="71"/><text x="14.6933%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (66 samples, 0.08%)</title><rect x="14.4497%" y="869" width="0.0842%" height="15" fill="rgb(240,10,32)" fg:x="11331" fg:w="66"/><text x="14.6997%" y="879.50"></text></g><g><title>sdallocx (11 samples, 0.01%)</title><rect x="14.5198%" y="853" width="0.0140%" height="15" fill="rgb(215,47,27)" fg:x="11386" fg:w="11"/><text x="14.7698%" y="863.50"></text></g><g><title>isfree (11 samples, 0.01%)</title><rect x="14.5198%" y="837" width="0.0140%" height="15" fill="rgb(233,188,43)" fg:x="11386" fg:w="11"/><text x="14.7698%" y="847.50"></text></g><g><title>isdalloct (11 samples, 0.01%)</title><rect x="14.5198%" y="821" width="0.0140%" height="15" fill="rgb(253,190,1)" fg:x="11386" fg:w="11"/><text x="14.7698%" y="831.50"></text></g><g><title>arena_sdalloc (11 samples, 0.01%)</title><rect x="14.5198%" y="805" width="0.0140%" height="15" fill="rgb(206,114,52)" fg:x="11386" fg:w="11"/><text x="14.7698%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (17 samples, 0.02%)</title><rect x="14.6180%" y="469" width="0.0217%" height="15" fill="rgb(233,120,37)" fg:x="11463" fg:w="17"/><text x="14.8680%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (17 samples, 0.02%)</title><rect x="14.6180%" y="453" width="0.0217%" height="15" fill="rgb(214,52,39)" fg:x="11463" fg:w="17"/><text x="14.8680%" y="463.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (35 samples, 0.04%)</title><rect x="14.6014%" y="677" width="0.0446%" height="15" fill="rgb(223,80,29)" fg:x="11450" fg:w="35"/><text x="14.8514%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (34 samples, 0.04%)</title><rect x="14.6027%" y="661" width="0.0434%" height="15" fill="rgb(230,101,40)" fg:x="11451" fg:w="34"/><text x="14.8527%" y="671.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (22 samples, 0.03%)</title><rect x="14.6180%" y="645" width="0.0281%" height="15" fill="rgb(219,211,8)" fg:x="11463" fg:w="22"/><text x="14.8680%" y="655.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 0.03%)</title><rect x="14.6180%" y="629" width="0.0281%" height="15" fill="rgb(252,126,28)" fg:x="11463" fg:w="22"/><text x="14.8680%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (22 samples, 0.03%)</title><rect x="14.6180%" y="613" width="0.0281%" height="15" fill="rgb(215,56,38)" fg:x="11463" fg:w="22"/><text x="14.8680%" y="623.50"></text></g><g><title> 32]&gt;::serialize (22 samples, 0.03%)</title><rect x="14.6180%" y="597" width="0.0281%" height="15" fill="rgb(249,55,44)" fg:x="11463" fg:w="22"/><text x="14.8680%" y="607.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (22 samples, 0.03%)</title><rect x="14.6180%" y="581" width="0.0281%" height="15" fill="rgb(220,221,32)" fg:x="11463" fg:w="22"/><text x="14.8680%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (22 samples, 0.03%)</title><rect x="14.6180%" y="565" width="0.0281%" height="15" fill="rgb(212,216,41)" fg:x="11463" fg:w="22"/><text x="14.8680%" y="575.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (22 samples, 0.03%)</title><rect x="14.6180%" y="549" width="0.0281%" height="15" fill="rgb(228,213,43)" fg:x="11463" fg:w="22"/><text x="14.8680%" y="559.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (22 samples, 0.03%)</title><rect x="14.6180%" y="533" width="0.0281%" height="15" fill="rgb(211,31,26)" fg:x="11463" fg:w="22"/><text x="14.8680%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (22 samples, 0.03%)</title><rect x="14.6180%" y="517" width="0.0281%" height="15" fill="rgb(229,202,19)" fg:x="11463" fg:w="22"/><text x="14.8680%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (22 samples, 0.03%)</title><rect x="14.6180%" y="501" width="0.0281%" height="15" fill="rgb(229,105,46)" fg:x="11463" fg:w="22"/><text x="14.8680%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (22 samples, 0.03%)</title><rect x="14.6180%" y="485" width="0.0281%" height="15" fill="rgb(235,108,1)" fg:x="11463" fg:w="22"/><text x="14.8680%" y="495.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (37 samples, 0.05%)</title><rect x="14.6002%" y="693" width="0.0472%" height="15" fill="rgb(245,111,35)" fg:x="11449" fg:w="37"/><text x="14.8502%" y="703.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (46 samples, 0.06%)</title><rect x="14.5925%" y="725" width="0.0587%" height="15" fill="rgb(219,185,31)" fg:x="11443" fg:w="46"/><text x="14.8425%" y="735.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (46 samples, 0.06%)</title><rect x="14.5925%" y="709" width="0.0587%" height="15" fill="rgb(214,4,43)" fg:x="11443" fg:w="46"/><text x="14.8425%" y="719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (70 samples, 0.09%)</title><rect x="14.5708%" y="773" width="0.0893%" height="15" fill="rgb(235,227,40)" fg:x="11426" fg:w="70"/><text x="14.8208%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (70 samples, 0.09%)</title><rect x="14.5708%" y="757" width="0.0893%" height="15" fill="rgb(230,88,30)" fg:x="11426" fg:w="70"/><text x="14.8208%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (53 samples, 0.07%)</title><rect x="14.5925%" y="741" width="0.0676%" height="15" fill="rgb(216,217,1)" fg:x="11443" fg:w="53"/><text x="14.8425%" y="751.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (77 samples, 0.10%)</title><rect x="14.5644%" y="789" width="0.0982%" height="15" fill="rgb(248,139,50)" fg:x="11421" fg:w="77"/><text x="14.8144%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="14.6728%" y="501" width="0.0115%" height="15" fill="rgb(233,1,21)" fg:x="11506" fg:w="9"/><text x="14.9228%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.01%)</title><rect x="14.6741%" y="485" width="0.0102%" height="15" fill="rgb(215,183,12)" fg:x="11507" fg:w="8"/><text x="14.9241%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.01%)</title><rect x="14.6741%" y="469" width="0.0102%" height="15" fill="rgb(229,104,42)" fg:x="11507" fg:w="8"/><text x="14.9241%" y="479.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.01%)</title><rect x="14.6741%" y="453" width="0.0102%" height="15" fill="rgb(243,34,48)" fg:x="11507" fg:w="8"/><text x="14.9241%" y="463.50"></text></g><g><title>rallocx (8 samples, 0.01%)</title><rect x="14.6741%" y="437" width="0.0102%" height="15" fill="rgb(239,11,44)" fg:x="11507" fg:w="8"/><text x="14.9241%" y="447.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (110 samples, 0.14%)</title><rect x="14.5453%" y="821" width="0.1403%" height="15" fill="rgb(231,98,35)" fg:x="11406" fg:w="110"/><text x="14.7953%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (110 samples, 0.14%)</title><rect x="14.5453%" y="805" width="0.1403%" height="15" fill="rgb(233,28,25)" fg:x="11406" fg:w="110"/><text x="14.7953%" y="815.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (17 samples, 0.02%)</title><rect x="14.6639%" y="789" width="0.0217%" height="15" fill="rgb(234,123,11)" fg:x="11499" fg:w="17"/><text x="14.9139%" y="799.50"></text></g><g><title>serde::ser::Serializer::collect_seq (17 samples, 0.02%)</title><rect x="14.6639%" y="773" width="0.0217%" height="15" fill="rgb(220,69,3)" fg:x="11499" fg:w="17"/><text x="14.9139%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (16 samples, 0.02%)</title><rect x="14.6652%" y="757" width="0.0204%" height="15" fill="rgb(214,64,36)" fg:x="11500" fg:w="16"/><text x="14.9152%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.02%)</title><rect x="14.6652%" y="741" width="0.0204%" height="15" fill="rgb(211,138,32)" fg:x="11500" fg:w="16"/><text x="14.9152%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (10 samples, 0.01%)</title><rect x="14.6728%" y="725" width="0.0128%" height="15" fill="rgb(213,118,47)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (10 samples, 0.01%)</title><rect x="14.6728%" y="709" width="0.0128%" height="15" fill="rgb(243,124,49)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (10 samples, 0.01%)</title><rect x="14.6728%" y="693" width="0.0128%" height="15" fill="rgb(221,30,28)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.01%)</title><rect x="14.6728%" y="677" width="0.0128%" height="15" fill="rgb(246,37,13)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (10 samples, 0.01%)</title><rect x="14.6728%" y="661" width="0.0128%" height="15" fill="rgb(249,66,14)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (10 samples, 0.01%)</title><rect x="14.6728%" y="645" width="0.0128%" height="15" fill="rgb(213,166,5)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (10 samples, 0.01%)</title><rect x="14.6728%" y="629" width="0.0128%" height="15" fill="rgb(221,66,24)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.01%)</title><rect x="14.6728%" y="613" width="0.0128%" height="15" fill="rgb(210,132,17)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.01%)</title><rect x="14.6728%" y="597" width="0.0128%" height="15" fill="rgb(243,202,5)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.01%)</title><rect x="14.6728%" y="581" width="0.0128%" height="15" fill="rgb(233,70,48)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="14.6728%" y="565" width="0.0128%" height="15" fill="rgb(238,41,26)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="14.6728%" y="549" width="0.0128%" height="15" fill="rgb(241,19,31)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.01%)</title><rect x="14.6728%" y="533" width="0.0128%" height="15" fill="rgb(214,76,10)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="14.6728%" y="517" width="0.0128%" height="15" fill="rgb(254,202,22)" fg:x="11506" fg:w="10"/><text x="14.9228%" y="527.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::finish (435 samples, 0.55%)</title><rect x="14.1321%" y="949" width="0.5547%" height="15" fill="rgb(214,72,24)" fg:x="11082" fg:w="435"/><text x="14.3821%" y="959.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::finish_with_extensions (373 samples, 0.48%)</title><rect x="14.2112%" y="933" width="0.4757%" height="15" fill="rgb(221,92,46)" fg:x="11144" fg:w="373"/><text x="14.4612%" y="943.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::into_effects (373 samples, 0.48%)</title><rect x="14.2112%" y="917" width="0.4757%" height="15" fill="rgb(246,13,50)" fg:x="11144" fg:w="373"/><text x="14.4612%" y="927.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (120 samples, 0.15%)</title><rect x="14.5338%" y="901" width="0.1530%" height="15" fill="rgb(240,165,38)" fg:x="11397" fg:w="120"/><text x="14.7838%" y="911.50"></text></g><g><title>bcs::ser::to_bytes (118 samples, 0.15%)</title><rect x="14.5364%" y="885" width="0.1505%" height="15" fill="rgb(241,24,51)" fg:x="11399" fg:w="118"/><text x="14.7864%" y="895.50"></text></g><g><title>bcs::ser::serialize_into (118 samples, 0.15%)</title><rect x="14.5364%" y="869" width="0.1505%" height="15" fill="rgb(227,51,44)" fg:x="11399" fg:w="118"/><text x="14.7864%" y="879.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (118 samples, 0.15%)</title><rect x="14.5364%" y="853" width="0.1505%" height="15" fill="rgb(231,121,3)" fg:x="11399" fg:w="118"/><text x="14.7864%" y="863.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (114 samples, 0.15%)</title><rect x="14.5415%" y="837" width="0.1454%" height="15" fill="rgb(245,3,41)" fg:x="11403" fg:w="114"/><text x="14.7915%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (14 samples, 0.02%)</title><rect x="14.7353%" y="917" width="0.0179%" height="15" fill="rgb(214,13,26)" fg:x="11555" fg:w="14"/><text x="14.9853%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (9 samples, 0.01%)</title><rect x="14.7417%" y="901" width="0.0115%" height="15" fill="rgb(252,75,11)" fg:x="11560" fg:w="9"/><text x="14.9917%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (9 samples, 0.01%)</title><rect x="14.7417%" y="885" width="0.0115%" height="15" fill="rgb(218,226,17)" fg:x="11560" fg:w="9"/><text x="14.9917%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="14.7417%" y="869" width="0.0115%" height="15" fill="rgb(248,89,38)" fg:x="11560" fg:w="9"/><text x="14.9917%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="14.7417%" y="853" width="0.0115%" height="15" fill="rgb(237,73,46)" fg:x="11560" fg:w="9"/><text x="14.9917%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="14.7417%" y="837" width="0.0115%" height="15" fill="rgb(242,78,33)" fg:x="11560" fg:w="9"/><text x="14.9917%" y="847.50"></text></g><g><title>__rust_alloc (8 samples, 0.01%)</title><rect x="14.7532%" y="837" width="0.0102%" height="15" fill="rgb(235,60,3)" fg:x="11569" fg:w="8"/><text x="15.0032%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.01%)</title><rect x="14.7532%" y="901" width="0.0115%" height="15" fill="rgb(216,172,19)" fg:x="11569" fg:w="9"/><text x="15.0032%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="14.7532%" y="885" width="0.0115%" height="15" fill="rgb(227,6,42)" fg:x="11569" fg:w="9"/><text x="15.0032%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="14.7532%" y="869" width="0.0115%" height="15" fill="rgb(223,207,42)" fg:x="11569" fg:w="9"/><text x="15.0032%" y="879.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="14.7532%" y="853" width="0.0115%" height="15" fill="rgb(246,138,30)" fg:x="11569" fg:w="9"/><text x="15.0032%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.02%)</title><rect x="14.7863%" y="581" width="0.0179%" height="15" fill="rgb(251,199,47)" fg:x="11595" fg:w="14"/><text x="15.0363%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.02%)</title><rect x="14.7863%" y="565" width="0.0179%" height="15" fill="rgb(228,218,44)" fg:x="11595" fg:w="14"/><text x="15.0363%" y="575.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.02%)</title><rect x="14.7863%" y="549" width="0.0179%" height="15" fill="rgb(220,68,6)" fg:x="11595" fg:w="14"/><text x="15.0363%" y="559.50"></text></g><g><title>rallocx (11 samples, 0.01%)</title><rect x="14.7902%" y="533" width="0.0140%" height="15" fill="rgb(240,60,26)" fg:x="11598" fg:w="11"/><text x="15.0402%" y="543.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (25 samples, 0.03%)</title><rect x="14.7774%" y="837" width="0.0319%" height="15" fill="rgb(211,200,19)" fg:x="11588" fg:w="25"/><text x="15.0274%" y="847.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (25 samples, 0.03%)</title><rect x="14.7774%" y="821" width="0.0319%" height="15" fill="rgb(242,145,30)" fg:x="11588" fg:w="25"/><text x="15.0274%" y="831.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (25 samples, 0.03%)</title><rect x="14.7774%" y="805" width="0.0319%" height="15" fill="rgb(225,64,13)" fg:x="11588" fg:w="25"/><text x="15.0274%" y="815.50"></text></g><g><title> 32]&gt;::serialize (25 samples, 0.03%)</title><rect x="14.7774%" y="789" width="0.0319%" height="15" fill="rgb(218,103,35)" fg:x="11588" fg:w="25"/><text x="15.0274%" y="799.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (25 samples, 0.03%)</title><rect x="14.7774%" y="773" width="0.0319%" height="15" fill="rgb(216,93,46)" fg:x="11588" fg:w="25"/><text x="15.0274%" y="783.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (25 samples, 0.03%)</title><rect x="14.7774%" y="757" width="0.0319%" height="15" fill="rgb(225,159,27)" fg:x="11588" fg:w="25"/><text x="15.0274%" y="767.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (25 samples, 0.03%)</title><rect x="14.7774%" y="741" width="0.0319%" height="15" fill="rgb(225,204,11)" fg:x="11588" fg:w="25"/><text x="15.0274%" y="751.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (25 samples, 0.03%)</title><rect x="14.7774%" y="725" width="0.0319%" height="15" fill="rgb(205,56,4)" fg:x="11588" fg:w="25"/><text x="15.0274%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (25 samples, 0.03%)</title><rect x="14.7774%" y="709" width="0.0319%" height="15" fill="rgb(206,6,35)" fg:x="11588" fg:w="25"/><text x="15.0274%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (25 samples, 0.03%)</title><rect x="14.7774%" y="693" width="0.0319%" height="15" fill="rgb(247,73,52)" fg:x="11588" fg:w="25"/><text x="15.0274%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (25 samples, 0.03%)</title><rect x="14.7774%" y="677" width="0.0319%" height="15" fill="rgb(246,97,4)" fg:x="11588" fg:w="25"/><text x="15.0274%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="14.7851%" y="661" width="0.0242%" height="15" fill="rgb(212,37,15)" fg:x="11594" fg:w="19"/><text x="15.0351%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="14.7851%" y="645" width="0.0242%" height="15" fill="rgb(208,130,40)" fg:x="11594" fg:w="19"/><text x="15.0351%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.02%)</title><rect x="14.7851%" y="629" width="0.0242%" height="15" fill="rgb(236,55,29)" fg:x="11594" fg:w="19"/><text x="15.0351%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.02%)</title><rect x="14.7863%" y="613" width="0.0230%" height="15" fill="rgb(209,156,45)" fg:x="11595" fg:w="18"/><text x="15.0363%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.02%)</title><rect x="14.7863%" y="597" width="0.0230%" height="15" fill="rgb(249,107,4)" fg:x="11595" fg:w="18"/><text x="15.0363%" y="607.50"></text></g><g><title>bcs::ser::to_bytes (40 samples, 0.05%)</title><rect x="14.7710%" y="901" width="0.0510%" height="15" fill="rgb(227,7,13)" fg:x="11583" fg:w="40"/><text x="15.0210%" y="911.50"></text></g><g><title>bcs::ser::serialize_into (36 samples, 0.05%)</title><rect x="14.7761%" y="885" width="0.0459%" height="15" fill="rgb(250,129,14)" fg:x="11587" fg:w="36"/><text x="15.0261%" y="895.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (36 samples, 0.05%)</title><rect x="14.7761%" y="869" width="0.0459%" height="15" fill="rgb(229,92,13)" fg:x="11587" fg:w="36"/><text x="15.0261%" y="879.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (36 samples, 0.05%)</title><rect x="14.7761%" y="853" width="0.0459%" height="15" fill="rgb(245,98,39)" fg:x="11587" fg:w="36"/><text x="15.0261%" y="863.50"></text></g><g><title>&lt;() as aptos_vm::access_path_cache::AccessPathCache&gt;::get_resource_path (76 samples, 0.10%)</title><rect x="14.7289%" y="933" width="0.0969%" height="15" fill="rgb(234,135,48)" fg:x="11550" fg:w="76"/><text x="14.9789%" y="943.50"></text></g><g><title>move_core_types::language_storage::StructTag::access_vector (57 samples, 0.07%)</title><rect x="14.7532%" y="917" width="0.0727%" height="15" fill="rgb(230,98,28)" fg:x="11569" fg:w="57"/><text x="15.0032%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.03%)</title><rect x="14.8259%" y="933" width="0.0293%" height="15" fill="rgb(223,121,0)" fg:x="11626" fg:w="23"/><text x="15.0759%" y="943.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (23 samples, 0.03%)</title><rect x="14.8259%" y="917" width="0.0293%" height="15" fill="rgb(234,173,33)" fg:x="11626" fg:w="23"/><text x="15.0759%" y="927.50"></text></g><g><title>arena_bin_malloc_hard (12 samples, 0.02%)</title><rect x="14.8845%" y="629" width="0.0153%" height="15" fill="rgb(245,47,8)" fg:x="11672" fg:w="12"/><text x="15.1345%" y="639.50"></text></g><g><title>arena_bin_nonfull_slab_get (10 samples, 0.01%)</title><rect x="14.8871%" y="613" width="0.0128%" height="15" fill="rgb(205,17,20)" fg:x="11674" fg:w="10"/><text x="15.1371%" y="623.50"></text></g><g><title>arena_slab_alloc (10 samples, 0.01%)</title><rect x="14.8871%" y="597" width="0.0128%" height="15" fill="rgb(232,151,16)" fg:x="11674" fg:w="10"/><text x="15.1371%" y="607.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (15 samples, 0.02%)</title><rect x="14.8845%" y="661" width="0.0191%" height="15" fill="rgb(208,30,32)" fg:x="11672" fg:w="15"/><text x="15.1345%" y="671.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (15 samples, 0.02%)</title><rect x="14.8845%" y="645" width="0.0191%" height="15" fill="rgb(254,26,3)" fg:x="11672" fg:w="15"/><text x="15.1345%" y="655.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::insert (29 samples, 0.04%)</title><rect x="14.8705%" y="933" width="0.0370%" height="15" fill="rgb(240,177,30)" fg:x="11661" fg:w="29"/><text x="15.1205%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (26 samples, 0.03%)</title><rect x="14.8743%" y="917" width="0.0332%" height="15" fill="rgb(248,76,44)" fg:x="11664" fg:w="26"/><text x="15.1243%" y="927.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (25 samples, 0.03%)</title><rect x="14.8756%" y="901" width="0.0319%" height="15" fill="rgb(241,186,54)" fg:x="11665" fg:w="25"/><text x="15.1256%" y="911.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (23 samples, 0.03%)</title><rect x="14.8782%" y="885" width="0.0293%" height="15" fill="rgb(249,171,29)" fg:x="11667" fg:w="23"/><text x="15.1282%" y="895.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (23 samples, 0.03%)</title><rect x="14.8782%" y="869" width="0.0293%" height="15" fill="rgb(237,151,44)" fg:x="11667" fg:w="23"/><text x="15.1282%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (23 samples, 0.03%)</title><rect x="14.8782%" y="853" width="0.0293%" height="15" fill="rgb(228,174,30)" fg:x="11667" fg:w="23"/><text x="15.1282%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (18 samples, 0.02%)</title><rect x="14.8845%" y="837" width="0.0230%" height="15" fill="rgb(252,14,37)" fg:x="11672" fg:w="18"/><text x="15.1345%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="14.8845%" y="821" width="0.0230%" height="15" fill="rgb(207,111,40)" fg:x="11672" fg:w="18"/><text x="15.1345%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="14.8845%" y="805" width="0.0230%" height="15" fill="rgb(248,171,54)" fg:x="11672" fg:w="18"/><text x="15.1345%" y="815.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="14.8845%" y="789" width="0.0230%" height="15" fill="rgb(211,127,2)" fg:x="11672" fg:w="18"/><text x="15.1345%" y="799.50"></text></g><g><title>mallocx (18 samples, 0.02%)</title><rect x="14.8845%" y="773" width="0.0230%" height="15" fill="rgb(236,87,47)" fg:x="11672" fg:w="18"/><text x="15.1345%" y="783.50"></text></g><g><title>imalloc (18 samples, 0.02%)</title><rect x="14.8845%" y="757" width="0.0230%" height="15" fill="rgb(223,190,45)" fg:x="11672" fg:w="18"/><text x="15.1345%" y="767.50"></text></g><g><title>imalloc_body (18 samples, 0.02%)</title><rect x="14.8845%" y="741" width="0.0230%" height="15" fill="rgb(215,5,16)" fg:x="11672" fg:w="18"/><text x="15.1345%" y="751.50"></text></g><g><title>imalloc_no_sample (18 samples, 0.02%)</title><rect x="14.8845%" y="725" width="0.0230%" height="15" fill="rgb(252,82,33)" fg:x="11672" fg:w="18"/><text x="15.1345%" y="735.50"></text></g><g><title>iallocztm (18 samples, 0.02%)</title><rect x="14.8845%" y="709" width="0.0230%" height="15" fill="rgb(247,213,44)" fg:x="11672" fg:w="18"/><text x="15.1345%" y="719.50"></text></g><g><title>arena_malloc (18 samples, 0.02%)</title><rect x="14.8845%" y="693" width="0.0230%" height="15" fill="rgb(205,196,44)" fg:x="11672" fg:w="18"/><text x="15.1345%" y="703.50"></text></g><g><title>tcache_alloc_small (18 samples, 0.02%)</title><rect x="14.8845%" y="677" width="0.0230%" height="15" fill="rgb(237,96,54)" fg:x="11672" fg:w="18"/><text x="15.1345%" y="687.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionOutput::into_change_set (183 samples, 0.23%)</title><rect x="14.6907%" y="949" width="0.2334%" height="15" fill="rgb(230,113,34)" fg:x="11520" fg:w="183"/><text x="14.9407%" y="959.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::success_transaction_cleanup (5,902 samples, 7.53%)</title><rect x="7.4091%" y="965" width="7.5264%" height="15" fill="rgb(221,224,12)" fg:x="5810" fg:w="5902"/><text x="7.6591%" y="975.50">aptos_vm::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_aggregator::aggregator_extension::AggregatorID,aptos_aggregator::aggregator_extension::Aggregator&gt;&gt; (10 samples, 0.01%)</title><rect x="14.9483%" y="933" width="0.0128%" height="15" fill="rgb(219,112,44)" fg:x="11722" fg:w="10"/><text x="15.1983%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="14.9483%" y="917" width="0.0128%" height="15" fill="rgb(210,31,13)" fg:x="11722" fg:w="10"/><text x="15.1983%" y="927.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::context::NativeAggregatorContext::into_change_set (15 samples, 0.02%)</title><rect x="14.9457%" y="949" width="0.0191%" height="15" fill="rgb(230,25,16)" fg:x="11720" fg:w="15"/><text x="15.1957%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="14.9649%" y="885" width="0.0166%" height="15" fill="rgb(246,108,53)" fg:x="11735" fg:w="13"/><text x="15.2149%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (13 samples, 0.02%)</title><rect x="14.9649%" y="869" width="0.0166%" height="15" fill="rgb(241,172,50)" fg:x="11735" fg:w="13"/><text x="15.2149%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (13 samples, 0.02%)</title><rect x="14.9649%" y="853" width="0.0166%" height="15" fill="rgb(235,141,10)" fg:x="11735" fg:w="13"/><text x="15.2149%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (13 samples, 0.02%)</title><rect x="14.9649%" y="837" width="0.0166%" height="15" fill="rgb(220,174,43)" fg:x="11735" fg:w="13"/><text x="15.2149%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (13 samples, 0.02%)</title><rect x="14.9649%" y="821" width="0.0166%" height="15" fill="rgb(215,181,40)" fg:x="11735" fg:w="13"/><text x="15.2149%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt; (13 samples, 0.02%)</title><rect x="14.9649%" y="805" width="0.0166%" height="15" fill="rgb(230,97,2)" fg:x="11735" fg:w="13"/><text x="15.2149%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt; (12 samples, 0.02%)</title><rect x="14.9661%" y="789" width="0.0153%" height="15" fill="rgb(211,25,27)" fg:x="11736" fg:w="12"/><text x="15.2161%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::native_extensions::NativeContextExtensions&gt; (14 samples, 0.02%)</title><rect x="14.9649%" y="949" width="0.0179%" height="15" fill="rgb(230,87,26)" fg:x="11735" fg:w="14"/><text x="15.2149%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt;&gt; (14 samples, 0.02%)</title><rect x="14.9649%" y="933" width="0.0179%" height="15" fill="rgb(227,160,17)" fg:x="11735" fg:w="14"/><text x="15.2149%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;,std::hash::random::RandomState&gt;&gt; (14 samples, 0.02%)</title><rect x="14.9649%" y="917" width="0.0179%" height="15" fill="rgb(244,85,34)" fg:x="11735" fg:w="14"/><text x="15.2149%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt;&gt; (14 samples, 0.02%)</title><rect x="14.9649%" y="901" width="0.0179%" height="15" fill="rgb(207,70,0)" fg:x="11735" fg:w="14"/><text x="15.2149%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.01%)</title><rect x="15.0031%" y="885" width="0.0102%" height="15" fill="rgb(223,129,7)" fg:x="11765" fg:w="8"/><text x="15.2531%" y="895.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.01%)</title><rect x="15.0031%" y="869" width="0.0102%" height="15" fill="rgb(246,105,7)" fg:x="11765" fg:w="8"/><text x="15.2531%" y="879.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::remove (20 samples, 0.03%)</title><rect x="14.9904%" y="949" width="0.0255%" height="15" fill="rgb(215,154,42)" fg:x="11755" fg:w="20"/><text x="15.2404%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (10 samples, 0.01%)</title><rect x="15.0031%" y="933" width="0.0128%" height="15" fill="rgb(220,215,30)" fg:x="11765" fg:w="10"/><text x="15.2531%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (10 samples, 0.01%)</title><rect x="15.0031%" y="917" width="0.0128%" height="15" fill="rgb(228,81,51)" fg:x="11765" fg:w="10"/><text x="15.2531%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (10 samples, 0.01%)</title><rect x="15.0031%" y="901" width="0.0128%" height="15" fill="rgb(247,71,54)" fg:x="11765" fg:w="10"/><text x="15.2531%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="15.0248%" y="917" width="0.0153%" height="15" fill="rgb(234,176,34)" fg:x="11782" fg:w="12"/><text x="15.2748%" y="927.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.02%)</title><rect x="15.0248%" y="901" width="0.0153%" height="15" fill="rgb(241,103,54)" fg:x="11782" fg:w="12"/><text x="15.2748%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (19 samples, 0.02%)</title><rect x="15.0580%" y="693" width="0.0242%" height="15" fill="rgb(228,22,34)" fg:x="11808" fg:w="19"/><text x="15.3080%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="15.0592%" y="677" width="0.0230%" height="15" fill="rgb(241,179,48)" fg:x="11809" fg:w="18"/><text x="15.3092%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="15.0592%" y="661" width="0.0230%" height="15" fill="rgb(235,167,37)" fg:x="11809" fg:w="18"/><text x="15.3092%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="15.0631%" y="645" width="0.0191%" height="15" fill="rgb(213,109,30)" fg:x="11812" fg:w="15"/><text x="15.3131%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="15.0631%" y="629" width="0.0191%" height="15" fill="rgb(222,172,16)" fg:x="11812" fg:w="15"/><text x="15.3131%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (15 samples, 0.02%)</title><rect x="15.0631%" y="613" width="0.0191%" height="15" fill="rgb(233,192,5)" fg:x="11812" fg:w="15"/><text x="15.3131%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="15.0631%" y="597" width="0.0191%" height="15" fill="rgb(247,189,41)" fg:x="11812" fg:w="15"/><text x="15.3131%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (15 samples, 0.02%)</title><rect x="15.0631%" y="581" width="0.0191%" height="15" fill="rgb(218,134,47)" fg:x="11812" fg:w="15"/><text x="15.3131%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (26 samples, 0.03%)</title><rect x="15.0541%" y="805" width="0.0332%" height="15" fill="rgb(216,29,3)" fg:x="11805" fg:w="26"/><text x="15.3041%" y="815.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="15.0541%" y="789" width="0.0332%" height="15" fill="rgb(246,140,12)" fg:x="11805" fg:w="26"/><text x="15.3041%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (26 samples, 0.03%)</title><rect x="15.0541%" y="773" width="0.0332%" height="15" fill="rgb(230,136,11)" fg:x="11805" fg:w="26"/><text x="15.3041%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (26 samples, 0.03%)</title><rect x="15.0541%" y="757" width="0.0332%" height="15" fill="rgb(247,22,47)" fg:x="11805" fg:w="26"/><text x="15.3041%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (26 samples, 0.03%)</title><rect x="15.0541%" y="741" width="0.0332%" height="15" fill="rgb(218,84,22)" fg:x="11805" fg:w="26"/><text x="15.3041%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="15.0541%" y="725" width="0.0332%" height="15" fill="rgb(216,87,39)" fg:x="11805" fg:w="26"/><text x="15.3041%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (26 samples, 0.03%)</title><rect x="15.0541%" y="709" width="0.0332%" height="15" fill="rgb(221,178,8)" fg:x="11805" fg:w="26"/><text x="15.3041%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (43 samples, 0.05%)</title><rect x="15.0439%" y="821" width="0.0548%" height="15" fill="rgb(230,42,11)" fg:x="11797" fg:w="43"/><text x="15.2939%" y="831.50"></text></g><g><title>sdallocx (9 samples, 0.01%)</title><rect x="15.0873%" y="805" width="0.0115%" height="15" fill="rgb(237,229,4)" fg:x="11831" fg:w="9"/><text x="15.3373%" y="815.50"></text></g><g><title>isfree (9 samples, 0.01%)</title><rect x="15.0873%" y="789" width="0.0115%" height="15" fill="rgb(222,31,33)" fg:x="11831" fg:w="9"/><text x="15.3373%" y="799.50"></text></g><g><title>isdalloct (9 samples, 0.01%)</title><rect x="15.0873%" y="773" width="0.0115%" height="15" fill="rgb(210,17,39)" fg:x="11831" fg:w="9"/><text x="15.3373%" y="783.50"></text></g><g><title>arena_sdalloc (9 samples, 0.01%)</title><rect x="15.0873%" y="757" width="0.0115%" height="15" fill="rgb(244,93,20)" fg:x="11831" fg:w="9"/><text x="15.3373%" y="767.50"></text></g><g><title>sz_size2index (9 samples, 0.01%)</title><rect x="15.0873%" y="741" width="0.0115%" height="15" fill="rgb(210,40,47)" fg:x="11831" fg:w="9"/><text x="15.3373%" y="751.50"></text></g><g><title>sz_size2index_lookup (9 samples, 0.01%)</title><rect x="15.0873%" y="725" width="0.0115%" height="15" fill="rgb(239,211,47)" fg:x="11831" fg:w="9"/><text x="15.3373%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.06%)</title><rect x="15.0439%" y="853" width="0.0574%" height="15" fill="rgb(251,223,49)" fg:x="11797" fg:w="45"/><text x="15.2939%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (45 samples, 0.06%)</title><rect x="15.0439%" y="837" width="0.0574%" height="15" fill="rgb(221,149,5)" fg:x="11797" fg:w="45"/><text x="15.2939%" y="847.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.08%)</title><rect x="15.0401%" y="917" width="0.0765%" height="15" fill="rgb(219,224,51)" fg:x="11794" fg:w="60"/><text x="15.2901%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (57 samples, 0.07%)</title><rect x="15.0439%" y="901" width="0.0727%" height="15" fill="rgb(223,7,8)" fg:x="11797" fg:w="57"/><text x="15.2939%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (57 samples, 0.07%)</title><rect x="15.0439%" y="885" width="0.0727%" height="15" fill="rgb(241,217,22)" fg:x="11797" fg:w="57"/><text x="15.2939%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (57 samples, 0.07%)</title><rect x="15.0439%" y="869" width="0.0727%" height="15" fill="rgb(248,209,0)" fg:x="11797" fg:w="57"/><text x="15.2939%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (12 samples, 0.02%)</title><rect x="15.1013%" y="853" width="0.0153%" height="15" fill="rgb(217,205,4)" fg:x="11842" fg:w="12"/><text x="15.3513%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="15.1013%" y="837" width="0.0153%" height="15" fill="rgb(228,124,39)" fg:x="11842" fg:w="12"/><text x="15.3513%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.02%)</title><rect x="15.1013%" y="821" width="0.0153%" height="15" fill="rgb(250,116,42)" fg:x="11842" fg:w="12"/><text x="15.3513%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.02%)</title><rect x="15.1013%" y="805" width="0.0153%" height="15" fill="rgb(223,202,9)" fg:x="11842" fg:w="12"/><text x="15.3513%" y="815.50"></text></g><g><title>sdallocx (10 samples, 0.01%)</title><rect x="15.1039%" y="789" width="0.0128%" height="15" fill="rgb(242,222,40)" fg:x="11844" fg:w="10"/><text x="15.3539%" y="799.50"></text></g><g><title>isfree (10 samples, 0.01%)</title><rect x="15.1039%" y="773" width="0.0128%" height="15" fill="rgb(229,99,46)" fg:x="11844" fg:w="10"/><text x="15.3539%" y="783.50"></text></g><g><title>isdalloct (10 samples, 0.01%)</title><rect x="15.1039%" y="757" width="0.0128%" height="15" fill="rgb(225,56,46)" fg:x="11844" fg:w="10"/><text x="15.3539%" y="767.50"></text></g><g><title>arena_sdalloc (10 samples, 0.01%)</title><rect x="15.1039%" y="741" width="0.0128%" height="15" fill="rgb(227,94,5)" fg:x="11844" fg:w="10"/><text x="15.3539%" y="751.50"></text></g><g><title>sz_size2index (10 samples, 0.01%)</title><rect x="15.1039%" y="725" width="0.0128%" height="15" fill="rgb(205,112,38)" fg:x="11844" fg:w="10"/><text x="15.3539%" y="735.50"></text></g><g><title>sz_size2index_lookup (10 samples, 0.01%)</title><rect x="15.1039%" y="709" width="0.0128%" height="15" fill="rgb(231,133,46)" fg:x="11844" fg:w="10"/><text x="15.3539%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (18 samples, 0.02%)</title><rect x="15.1230%" y="901" width="0.0230%" height="15" fill="rgb(217,16,9)" fg:x="11859" fg:w="18"/><text x="15.3730%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.01%)</title><rect x="15.1332%" y="885" width="0.0128%" height="15" fill="rgb(249,173,9)" fg:x="11867" fg:w="10"/><text x="15.3832%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (25 samples, 0.03%)</title><rect x="15.1230%" y="917" width="0.0319%" height="15" fill="rgb(205,163,53)" fg:x="11859" fg:w="25"/><text x="15.3730%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (26 samples, 0.03%)</title><rect x="15.1549%" y="917" width="0.0332%" height="15" fill="rgb(217,54,41)" fg:x="11884" fg:w="26"/><text x="15.4049%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (8 samples, 0.01%)</title><rect x="15.2161%" y="789" width="0.0102%" height="15" fill="rgb(228,216,12)" fg:x="11932" fg:w="8"/><text x="15.4661%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.01%)</title><rect x="15.2161%" y="773" width="0.0102%" height="15" fill="rgb(244,228,15)" fg:x="11932" fg:w="8"/><text x="15.4661%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (13 samples, 0.02%)</title><rect x="15.2276%" y="773" width="0.0166%" height="15" fill="rgb(221,176,53)" fg:x="11941" fg:w="13"/><text x="15.4776%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (13 samples, 0.02%)</title><rect x="15.2276%" y="757" width="0.0166%" height="15" fill="rgb(205,94,34)" fg:x="11941" fg:w="13"/><text x="15.4776%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (13 samples, 0.02%)</title><rect x="15.2276%" y="741" width="0.0166%" height="15" fill="rgb(213,110,48)" fg:x="11941" fg:w="13"/><text x="15.4776%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="15.2276%" y="725" width="0.0166%" height="15" fill="rgb(236,142,28)" fg:x="11941" fg:w="13"/><text x="15.4776%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (13 samples, 0.02%)</title><rect x="15.2276%" y="709" width="0.0166%" height="15" fill="rgb(225,135,29)" fg:x="11941" fg:w="13"/><text x="15.4776%" y="719.50"></text></g><g><title>sdallocx (8 samples, 0.01%)</title><rect x="15.2339%" y="693" width="0.0102%" height="15" fill="rgb(252,45,31)" fg:x="11946" fg:w="8"/><text x="15.4839%" y="703.50"></text></g><g><title>isfree (8 samples, 0.01%)</title><rect x="15.2339%" y="677" width="0.0102%" height="15" fill="rgb(211,187,50)" fg:x="11946" fg:w="8"/><text x="15.4839%" y="687.50"></text></g><g><title>isdalloct (8 samples, 0.01%)</title><rect x="15.2339%" y="661" width="0.0102%" height="15" fill="rgb(229,109,7)" fg:x="11946" fg:w="8"/><text x="15.4839%" y="671.50"></text></g><g><title>arena_sdalloc (8 samples, 0.01%)</title><rect x="15.2339%" y="645" width="0.0102%" height="15" fill="rgb(251,131,51)" fg:x="11946" fg:w="8"/><text x="15.4839%" y="655.50"></text></g><g><title>sz_size2index (8 samples, 0.01%)</title><rect x="15.2339%" y="629" width="0.0102%" height="15" fill="rgb(251,180,35)" fg:x="11946" fg:w="8"/><text x="15.4839%" y="639.50"></text></g><g><title>sz_size2index_lookup (8 samples, 0.01%)</title><rect x="15.2339%" y="613" width="0.0102%" height="15" fill="rgb(211,46,32)" fg:x="11946" fg:w="8"/><text x="15.4839%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (25 samples, 0.03%)</title><rect x="15.2161%" y="853" width="0.0319%" height="15" fill="rgb(248,123,17)" fg:x="11932" fg:w="25"/><text x="15.4661%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (25 samples, 0.03%)</title><rect x="15.2161%" y="837" width="0.0319%" height="15" fill="rgb(227,141,18)" fg:x="11932" fg:w="25"/><text x="15.4661%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (25 samples, 0.03%)</title><rect x="15.2161%" y="821" width="0.0319%" height="15" fill="rgb(216,102,9)" fg:x="11932" fg:w="25"/><text x="15.4661%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="15.2161%" y="805" width="0.0319%" height="15" fill="rgb(253,47,13)" fg:x="11932" fg:w="25"/><text x="15.4661%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (17 samples, 0.02%)</title><rect x="15.2263%" y="789" width="0.0217%" height="15" fill="rgb(226,93,23)" fg:x="11940" fg:w="17"/><text x="15.4763%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.05%)</title><rect x="15.2097%" y="885" width="0.0459%" height="15" fill="rgb(247,104,17)" fg:x="11927" fg:w="36"/><text x="15.4597%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (36 samples, 0.05%)</title><rect x="15.2097%" y="869" width="0.0459%" height="15" fill="rgb(233,203,26)" fg:x="11927" fg:w="36"/><text x="15.4597%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (39 samples, 0.05%)</title><rect x="15.2097%" y="917" width="0.0497%" height="15" fill="rgb(244,98,49)" fg:x="11927" fg:w="39"/><text x="15.4597%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (39 samples, 0.05%)</title><rect x="15.2097%" y="901" width="0.0497%" height="15" fill="rgb(235,134,22)" fg:x="11927" fg:w="39"/><text x="15.4597%" y="911.50"></text></g><g><title>move_core_types::effects::ChangeSet::add_account_changeset (16 samples, 0.02%)</title><rect x="15.2671%" y="917" width="0.0204%" height="15" fill="rgb(221,70,32)" fg:x="11972" fg:w="16"/><text x="15.5171%" y="927.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (12 samples, 0.02%)</title><rect x="15.2722%" y="901" width="0.0153%" height="15" fill="rgb(238,15,50)" fg:x="11976" fg:w="12"/><text x="15.5222%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.02%)</title><rect x="15.2875%" y="885" width="0.0179%" height="15" fill="rgb(215,221,48)" fg:x="11988" fg:w="14"/><text x="15.5375%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.02%)</title><rect x="15.3054%" y="885" width="0.0153%" height="15" fill="rgb(236,73,3)" fg:x="12002" fg:w="12"/><text x="15.5554%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.02%)</title><rect x="15.3054%" y="869" width="0.0153%" height="15" fill="rgb(250,107,11)" fg:x="12002" fg:w="12"/><text x="15.5554%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="15.3054%" y="853" width="0.0153%" height="15" fill="rgb(242,39,14)" fg:x="12002" fg:w="12"/><text x="15.5554%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="15.3054%" y="837" width="0.0153%" height="15" fill="rgb(248,164,37)" fg:x="12002" fg:w="12"/><text x="15.5554%" y="847.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="15.3054%" y="821" width="0.0153%" height="15" fill="rgb(217,60,12)" fg:x="12002" fg:w="12"/><text x="15.5554%" y="831.50"></text></g><g><title>mallocx (9 samples, 0.01%)</title><rect x="15.3092%" y="805" width="0.0115%" height="15" fill="rgb(240,125,29)" fg:x="12005" fg:w="9"/><text x="15.5592%" y="815.50"></text></g><g><title>imalloc (9 samples, 0.01%)</title><rect x="15.3092%" y="789" width="0.0115%" height="15" fill="rgb(208,207,28)" fg:x="12005" fg:w="9"/><text x="15.5592%" y="799.50"></text></g><g><title>imalloc_body (9 samples, 0.01%)</title><rect x="15.3092%" y="773" width="0.0115%" height="15" fill="rgb(209,159,27)" fg:x="12005" fg:w="9"/><text x="15.5592%" y="783.50"></text></g><g><title>imalloc_no_sample (9 samples, 0.01%)</title><rect x="15.3092%" y="757" width="0.0115%" height="15" fill="rgb(251,176,53)" fg:x="12005" fg:w="9"/><text x="15.5592%" y="767.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (11 samples, 0.01%)</title><rect x="15.3755%" y="453" width="0.0140%" height="15" fill="rgb(211,85,7)" fg:x="12057" fg:w="11"/><text x="15.6255%" y="463.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (11 samples, 0.01%)</title><rect x="15.3755%" y="437" width="0.0140%" height="15" fill="rgb(216,64,54)" fg:x="12057" fg:w="11"/><text x="15.6255%" y="447.50"></text></g><g><title>arena_slab_reg_alloc (11 samples, 0.01%)</title><rect x="15.3755%" y="421" width="0.0140%" height="15" fill="rgb(217,54,24)" fg:x="12057" fg:w="11"/><text x="15.6255%" y="431.50"></text></g><g><title>bitmap_sfu (11 samples, 0.01%)</title><rect x="15.3755%" y="405" width="0.0140%" height="15" fill="rgb(208,206,53)" fg:x="12057" fg:w="11"/><text x="15.6255%" y="415.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (65 samples, 0.08%)</title><rect x="15.3207%" y="757" width="0.0829%" height="15" fill="rgb(251,74,39)" fg:x="12014" fg:w="65"/><text x="15.5707%" y="767.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (65 samples, 0.08%)</title><rect x="15.3207%" y="741" width="0.0829%" height="15" fill="rgb(226,47,5)" fg:x="12014" fg:w="65"/><text x="15.5707%" y="751.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (50 samples, 0.06%)</title><rect x="15.3398%" y="725" width="0.0638%" height="15" fill="rgb(234,111,33)" fg:x="12029" fg:w="50"/><text x="15.5898%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (49 samples, 0.06%)</title><rect x="15.3411%" y="709" width="0.0625%" height="15" fill="rgb(251,14,10)" fg:x="12030" fg:w="49"/><text x="15.5911%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (25 samples, 0.03%)</title><rect x="15.3717%" y="693" width="0.0319%" height="15" fill="rgb(232,43,0)" fg:x="12054" fg:w="25"/><text x="15.6217%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (25 samples, 0.03%)</title><rect x="15.3717%" y="677" width="0.0319%" height="15" fill="rgb(222,68,43)" fg:x="12054" fg:w="25"/><text x="15.6217%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (25 samples, 0.03%)</title><rect x="15.3717%" y="661" width="0.0319%" height="15" fill="rgb(217,24,23)" fg:x="12054" fg:w="25"/><text x="15.6217%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (25 samples, 0.03%)</title><rect x="15.3717%" y="645" width="0.0319%" height="15" fill="rgb(229,209,14)" fg:x="12054" fg:w="25"/><text x="15.6217%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (25 samples, 0.03%)</title><rect x="15.3717%" y="629" width="0.0319%" height="15" fill="rgb(250,149,48)" fg:x="12054" fg:w="25"/><text x="15.6217%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.03%)</title><rect x="15.3717%" y="613" width="0.0319%" height="15" fill="rgb(210,120,37)" fg:x="12054" fg:w="25"/><text x="15.6217%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.03%)</title><rect x="15.3717%" y="597" width="0.0319%" height="15" fill="rgb(210,21,8)" fg:x="12054" fg:w="25"/><text x="15.6217%" y="607.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.03%)</title><rect x="15.3717%" y="581" width="0.0319%" height="15" fill="rgb(243,145,7)" fg:x="12054" fg:w="25"/><text x="15.6217%" y="591.50"></text></g><g><title>mallocx (23 samples, 0.03%)</title><rect x="15.3742%" y="565" width="0.0293%" height="15" fill="rgb(238,178,32)" fg:x="12056" fg:w="23"/><text x="15.6242%" y="575.50"></text></g><g><title>imalloc (23 samples, 0.03%)</title><rect x="15.3742%" y="549" width="0.0293%" height="15" fill="rgb(222,4,10)" fg:x="12056" fg:w="23"/><text x="15.6242%" y="559.50"></text></g><g><title>imalloc_body (23 samples, 0.03%)</title><rect x="15.3742%" y="533" width="0.0293%" height="15" fill="rgb(239,7,37)" fg:x="12056" fg:w="23"/><text x="15.6242%" y="543.50"></text></g><g><title>imalloc_no_sample (23 samples, 0.03%)</title><rect x="15.3742%" y="517" width="0.0293%" height="15" fill="rgb(215,31,37)" fg:x="12056" fg:w="23"/><text x="15.6242%" y="527.50"></text></g><g><title>iallocztm (23 samples, 0.03%)</title><rect x="15.3742%" y="501" width="0.0293%" height="15" fill="rgb(224,83,33)" fg:x="12056" fg:w="23"/><text x="15.6242%" y="511.50"></text></g><g><title>arena_malloc (23 samples, 0.03%)</title><rect x="15.3742%" y="485" width="0.0293%" height="15" fill="rgb(239,55,3)" fg:x="12056" fg:w="23"/><text x="15.6242%" y="495.50"></text></g><g><title>tcache_alloc_small (22 samples, 0.03%)</title><rect x="15.3755%" y="469" width="0.0281%" height="15" fill="rgb(247,92,11)" fg:x="12057" fg:w="22"/><text x="15.6255%" y="479.50"></text></g><g><title>cache_bin_alloc_easy (11 samples, 0.01%)</title><rect x="15.3895%" y="453" width="0.0140%" height="15" fill="rgb(239,200,7)" fg:x="12068" fg:w="11"/><text x="15.6395%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (74 samples, 0.09%)</title><rect x="15.3207%" y="853" width="0.0944%" height="15" fill="rgb(227,115,8)" fg:x="12014" fg:w="74"/><text x="15.5707%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (74 samples, 0.09%)</title><rect x="15.3207%" y="837" width="0.0944%" height="15" fill="rgb(215,189,27)" fg:x="12014" fg:w="74"/><text x="15.5707%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (74 samples, 0.09%)</title><rect x="15.3207%" y="821" width="0.0944%" height="15" fill="rgb(251,216,39)" fg:x="12014" fg:w="74"/><text x="15.5707%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (74 samples, 0.09%)</title><rect x="15.3207%" y="805" width="0.0944%" height="15" fill="rgb(207,29,47)" fg:x="12014" fg:w="74"/><text x="15.5707%" y="815.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (74 samples, 0.09%)</title><rect x="15.3207%" y="789" width="0.0944%" height="15" fill="rgb(210,71,34)" fg:x="12014" fg:w="74"/><text x="15.5707%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (74 samples, 0.09%)</title><rect x="15.3207%" y="773" width="0.0944%" height="15" fill="rgb(253,217,51)" fg:x="12014" fg:w="74"/><text x="15.5707%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (9 samples, 0.01%)</title><rect x="15.4035%" y="757" width="0.0115%" height="15" fill="rgb(222,117,46)" fg:x="12079" fg:w="9"/><text x="15.6535%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (9 samples, 0.01%)</title><rect x="15.4035%" y="741" width="0.0115%" height="15" fill="rgb(226,132,6)" fg:x="12079" fg:w="9"/><text x="15.6535%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="15.4035%" y="725" width="0.0115%" height="15" fill="rgb(254,145,51)" fg:x="12079" fg:w="9"/><text x="15.6535%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="15.4035%" y="709" width="0.0115%" height="15" fill="rgb(231,199,27)" fg:x="12079" fg:w="9"/><text x="15.6535%" y="719.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="15.4035%" y="693" width="0.0115%" height="15" fill="rgb(245,158,14)" fg:x="12079" fg:w="9"/><text x="15.6535%" y="703.50"></text></g><g><title>mallocx (8 samples, 0.01%)</title><rect x="15.4048%" y="677" width="0.0102%" height="15" fill="rgb(240,113,14)" fg:x="12080" fg:w="8"/><text x="15.6548%" y="687.50"></text></g><g><title>imalloc (8 samples, 0.01%)</title><rect x="15.4048%" y="661" width="0.0102%" height="15" fill="rgb(210,20,13)" fg:x="12080" fg:w="8"/><text x="15.6548%" y="671.50"></text></g><g><title>imalloc_body (8 samples, 0.01%)</title><rect x="15.4048%" y="645" width="0.0102%" height="15" fill="rgb(241,144,13)" fg:x="12080" fg:w="8"/><text x="15.6548%" y="655.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (93 samples, 0.12%)</title><rect x="15.3207%" y="869" width="0.1186%" height="15" fill="rgb(235,43,34)" fg:x="12014" fg:w="93"/><text x="15.5707%" y="879.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="15.4150%" y="853" width="0.0242%" height="15" fill="rgb(208,36,20)" fg:x="12088" fg:w="19"/><text x="15.6650%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="15.4150%" y="837" width="0.0242%" height="15" fill="rgb(239,204,10)" fg:x="12088" fg:w="19"/><text x="15.6650%" y="847.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.02%)</title><rect x="15.4163%" y="821" width="0.0230%" height="15" fill="rgb(217,84,43)" fg:x="12089" fg:w="18"/><text x="15.6663%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (18 samples, 0.02%)</title><rect x="15.4163%" y="805" width="0.0230%" height="15" fill="rgb(241,170,50)" fg:x="12089" fg:w="18"/><text x="15.6663%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (18 samples, 0.02%)</title><rect x="15.4163%" y="789" width="0.0230%" height="15" fill="rgb(226,205,29)" fg:x="12089" fg:w="18"/><text x="15.6663%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (18 samples, 0.02%)</title><rect x="15.4163%" y="773" width="0.0230%" height="15" fill="rgb(233,113,1)" fg:x="12089" fg:w="18"/><text x="15.6663%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (18 samples, 0.02%)</title><rect x="15.4163%" y="757" width="0.0230%" height="15" fill="rgb(253,98,13)" fg:x="12089" fg:w="18"/><text x="15.6663%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="15.4163%" y="741" width="0.0230%" height="15" fill="rgb(211,115,12)" fg:x="12089" fg:w="18"/><text x="15.6663%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="15.4163%" y="725" width="0.0230%" height="15" fill="rgb(208,12,16)" fg:x="12089" fg:w="18"/><text x="15.6663%" y="735.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="15.4163%" y="709" width="0.0230%" height="15" fill="rgb(237,193,54)" fg:x="12089" fg:w="18"/><text x="15.6663%" y="719.50"></text></g><g><title>mallocx (16 samples, 0.02%)</title><rect x="15.4189%" y="693" width="0.0204%" height="15" fill="rgb(243,22,42)" fg:x="12091" fg:w="16"/><text x="15.6689%" y="703.50"></text></g><g><title>imalloc (16 samples, 0.02%)</title><rect x="15.4189%" y="677" width="0.0204%" height="15" fill="rgb(233,151,36)" fg:x="12091" fg:w="16"/><text x="15.6689%" y="687.50"></text></g><g><title>imalloc_body (16 samples, 0.02%)</title><rect x="15.4189%" y="661" width="0.0204%" height="15" fill="rgb(237,57,45)" fg:x="12091" fg:w="16"/><text x="15.6689%" y="671.50"></text></g><g><title>imalloc_no_sample (16 samples, 0.02%)</title><rect x="15.4189%" y="645" width="0.0204%" height="15" fill="rgb(221,88,17)" fg:x="12091" fg:w="16"/><text x="15.6689%" y="655.50"></text></g><g><title>iallocztm (16 samples, 0.02%)</title><rect x="15.4189%" y="629" width="0.0204%" height="15" fill="rgb(230,79,15)" fg:x="12091" fg:w="16"/><text x="15.6689%" y="639.50"></text></g><g><title>arena_malloc (16 samples, 0.02%)</title><rect x="15.4189%" y="613" width="0.0204%" height="15" fill="rgb(213,57,13)" fg:x="12091" fg:w="16"/><text x="15.6689%" y="623.50"></text></g><g><title>tcache_alloc_small (16 samples, 0.02%)</title><rect x="15.4189%" y="597" width="0.0204%" height="15" fill="rgb(222,116,39)" fg:x="12091" fg:w="16"/><text x="15.6689%" y="607.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (12 samples, 0.02%)</title><rect x="15.4240%" y="581" width="0.0153%" height="15" fill="rgb(245,107,2)" fg:x="12095" fg:w="12"/><text x="15.6740%" y="591.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (12 samples, 0.02%)</title><rect x="15.4240%" y="565" width="0.0153%" height="15" fill="rgb(238,1,10)" fg:x="12095" fg:w="12"/><text x="15.6740%" y="575.50"></text></g><g><title>arena_slab_reg_alloc (12 samples, 0.02%)</title><rect x="15.4240%" y="549" width="0.0153%" height="15" fill="rgb(249,4,48)" fg:x="12095" fg:w="12"/><text x="15.6740%" y="559.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="15.4393%" y="789" width="0.0204%" height="15" fill="rgb(223,151,18)" fg:x="12107" fg:w="16"/><text x="15.6893%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="15.4393%" y="773" width="0.0204%" height="15" fill="rgb(227,65,43)" fg:x="12107" fg:w="16"/><text x="15.6893%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="15.4393%" y="757" width="0.0204%" height="15" fill="rgb(218,40,45)" fg:x="12107" fg:w="16"/><text x="15.6893%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.02%)</title><rect x="15.4393%" y="741" width="0.0204%" height="15" fill="rgb(252,121,31)" fg:x="12107" fg:w="16"/><text x="15.6893%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.01%)</title><rect x="15.4482%" y="725" width="0.0115%" height="15" fill="rgb(219,158,43)" fg:x="12114" fg:w="9"/><text x="15.6982%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (24 samples, 0.03%)</title><rect x="15.4393%" y="821" width="0.0306%" height="15" fill="rgb(231,162,42)" fg:x="12107" fg:w="24"/><text x="15.6893%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24 samples, 0.03%)</title><rect x="15.4393%" y="805" width="0.0306%" height="15" fill="rgb(217,179,25)" fg:x="12107" fg:w="24"/><text x="15.6893%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.01%)</title><rect x="15.4597%" y="789" width="0.0102%" height="15" fill="rgb(206,212,31)" fg:x="12123" fg:w="8"/><text x="15.7097%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (202 samples, 0.26%)</title><rect x="15.2875%" y="917" width="0.2576%" height="15" fill="rgb(235,144,12)" fg:x="11988" fg:w="202"/><text x="15.5375%" y="927.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (202 samples, 0.26%)</title><rect x="15.2875%" y="901" width="0.2576%" height="15" fill="rgb(213,51,10)" fg:x="11988" fg:w="202"/><text x="15.5375%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (176 samples, 0.22%)</title><rect x="15.3207%" y="885" width="0.2244%" height="15" fill="rgb(231,145,14)" fg:x="12014" fg:w="176"/><text x="15.5707%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (83 samples, 0.11%)</title><rect x="15.4393%" y="869" width="0.1058%" height="15" fill="rgb(235,15,28)" fg:x="12107" fg:w="83"/><text x="15.6893%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (83 samples, 0.11%)</title><rect x="15.4393%" y="853" width="0.1058%" height="15" fill="rgb(237,206,10)" fg:x="12107" fg:w="83"/><text x="15.6893%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (83 samples, 0.11%)</title><rect x="15.4393%" y="837" width="0.1058%" height="15" fill="rgb(236,227,27)" fg:x="12107" fg:w="83"/><text x="15.6893%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (59 samples, 0.08%)</title><rect x="15.4699%" y="821" width="0.0752%" height="15" fill="rgb(246,83,35)" fg:x="12131" fg:w="59"/><text x="15.7199%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (59 samples, 0.08%)</title><rect x="15.4699%" y="805" width="0.0752%" height="15" fill="rgb(220,136,24)" fg:x="12131" fg:w="59"/><text x="15.7199%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (59 samples, 0.08%)</title><rect x="15.4699%" y="789" width="0.0752%" height="15" fill="rgb(217,3,25)" fg:x="12131" fg:w="59"/><text x="15.7199%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (59 samples, 0.08%)</title><rect x="15.4699%" y="773" width="0.0752%" height="15" fill="rgb(239,24,14)" fg:x="12131" fg:w="59"/><text x="15.7199%" y="783.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (59 samples, 0.08%)</title><rect x="15.4699%" y="757" width="0.0752%" height="15" fill="rgb(244,16,53)" fg:x="12131" fg:w="59"/><text x="15.7199%" y="767.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (59 samples, 0.08%)</title><rect x="15.4699%" y="741" width="0.0752%" height="15" fill="rgb(208,175,44)" fg:x="12131" fg:w="59"/><text x="15.7199%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (59 samples, 0.08%)</title><rect x="15.4699%" y="725" width="0.0752%" height="15" fill="rgb(252,18,48)" fg:x="12131" fg:w="59"/><text x="15.7199%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (59 samples, 0.08%)</title><rect x="15.4699%" y="709" width="0.0752%" height="15" fill="rgb(234,199,32)" fg:x="12131" fg:w="59"/><text x="15.7199%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (59 samples, 0.08%)</title><rect x="15.4699%" y="693" width="0.0752%" height="15" fill="rgb(225,77,54)" fg:x="12131" fg:w="59"/><text x="15.7199%" y="703.50"></text></g><g><title>core::cmp::PartialEq::ne (10 samples, 0.01%)</title><rect x="15.5323%" y="677" width="0.0128%" height="15" fill="rgb(225,42,25)" fg:x="12180" fg:w="10"/><text x="15.7823%" y="687.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (10 samples, 0.01%)</title><rect x="15.5323%" y="661" width="0.0128%" height="15" fill="rgb(242,227,46)" fg:x="12180" fg:w="10"/><text x="15.7823%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="15.5515%" y="885" width="0.0102%" height="15" fill="rgb(246,197,35)" fg:x="12195" fg:w="8"/><text x="15.8015%" y="895.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::into_effect (18 samples, 0.02%)</title><rect x="15.5451%" y="917" width="0.0230%" height="15" fill="rgb(215,159,26)" fg:x="12190" fg:w="18"/><text x="15.7951%" y="927.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::into_effect (18 samples, 0.02%)</title><rect x="15.5451%" y="901" width="0.0230%" height="15" fill="rgb(212,194,50)" fg:x="12190" fg:w="18"/><text x="15.7951%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.01%)</title><rect x="15.6522%" y="549" width="0.0115%" height="15" fill="rgb(246,132,1)" fg:x="12274" fg:w="9"/><text x="15.9022%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.01%)</title><rect x="15.6522%" y="533" width="0.0115%" height="15" fill="rgb(217,71,7)" fg:x="12274" fg:w="9"/><text x="15.9022%" y="543.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.01%)</title><rect x="15.6522%" y="517" width="0.0115%" height="15" fill="rgb(252,59,32)" fg:x="12274" fg:w="9"/><text x="15.9022%" y="527.50"></text></g><g><title>rallocx (8 samples, 0.01%)</title><rect x="15.6535%" y="501" width="0.0102%" height="15" fill="rgb(253,204,25)" fg:x="12275" fg:w="8"/><text x="15.9035%" y="511.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (20 samples, 0.03%)</title><rect x="15.6433%" y="805" width="0.0255%" height="15" fill="rgb(232,21,16)" fg:x="12267" fg:w="20"/><text x="15.8933%" y="815.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (19 samples, 0.02%)</title><rect x="15.6446%" y="789" width="0.0242%" height="15" fill="rgb(248,90,29)" fg:x="12268" fg:w="19"/><text x="15.8946%" y="799.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (19 samples, 0.02%)</title><rect x="15.6446%" y="773" width="0.0242%" height="15" fill="rgb(249,223,7)" fg:x="12268" fg:w="19"/><text x="15.8946%" y="783.50"></text></g><g><title> 32]&gt;::serialize (19 samples, 0.02%)</title><rect x="15.6446%" y="757" width="0.0242%" height="15" fill="rgb(231,119,42)" fg:x="12268" fg:w="19"/><text x="15.8946%" y="767.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (19 samples, 0.02%)</title><rect x="15.6446%" y="741" width="0.0242%" height="15" fill="rgb(215,41,35)" fg:x="12268" fg:w="19"/><text x="15.8946%" y="751.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (19 samples, 0.02%)</title><rect x="15.6446%" y="725" width="0.0242%" height="15" fill="rgb(220,44,45)" fg:x="12268" fg:w="19"/><text x="15.8946%" y="735.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (19 samples, 0.02%)</title><rect x="15.6446%" y="709" width="0.0242%" height="15" fill="rgb(253,197,36)" fg:x="12268" fg:w="19"/><text x="15.8946%" y="719.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (19 samples, 0.02%)</title><rect x="15.6446%" y="693" width="0.0242%" height="15" fill="rgb(245,225,54)" fg:x="12268" fg:w="19"/><text x="15.8946%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.02%)</title><rect x="15.6446%" y="677" width="0.0242%" height="15" fill="rgb(239,94,37)" fg:x="12268" fg:w="19"/><text x="15.8946%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.02%)</title><rect x="15.6446%" y="661" width="0.0242%" height="15" fill="rgb(242,217,10)" fg:x="12268" fg:w="19"/><text x="15.8946%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (19 samples, 0.02%)</title><rect x="15.6446%" y="645" width="0.0242%" height="15" fill="rgb(250,193,7)" fg:x="12268" fg:w="19"/><text x="15.8946%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="15.6446%" y="629" width="0.0242%" height="15" fill="rgb(230,104,19)" fg:x="12268" fg:w="19"/><text x="15.8946%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="15.6446%" y="613" width="0.0242%" height="15" fill="rgb(230,181,4)" fg:x="12268" fg:w="19"/><text x="15.8946%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="15.6484%" y="597" width="0.0204%" height="15" fill="rgb(216,219,49)" fg:x="12271" fg:w="16"/><text x="15.8984%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="15.6484%" y="581" width="0.0204%" height="15" fill="rgb(254,144,0)" fg:x="12271" fg:w="16"/><text x="15.8984%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.02%)</title><rect x="15.6522%" y="565" width="0.0166%" height="15" fill="rgb(205,209,38)" fg:x="12274" fg:w="13"/><text x="15.9022%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.01%)</title><rect x="15.7300%" y="597" width="0.0140%" height="15" fill="rgb(240,21,42)" fg:x="12335" fg:w="11"/><text x="15.9800%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.01%)</title><rect x="15.7300%" y="581" width="0.0140%" height="15" fill="rgb(241,132,3)" fg:x="12335" fg:w="11"/><text x="15.9800%" y="591.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.01%)</title><rect x="15.7300%" y="565" width="0.0140%" height="15" fill="rgb(225,14,2)" fg:x="12335" fg:w="11"/><text x="15.9800%" y="575.50"></text></g><g><title>rallocx (9 samples, 0.01%)</title><rect x="15.7326%" y="549" width="0.0115%" height="15" fill="rgb(210,141,35)" fg:x="12337" fg:w="9"/><text x="15.9826%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="15.7287%" y="613" width="0.0217%" height="15" fill="rgb(251,14,44)" fg:x="12334" fg:w="17"/><text x="15.9787%" y="623.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (21 samples, 0.03%)</title><rect x="15.7287%" y="757" width="0.0268%" height="15" fill="rgb(247,48,18)" fg:x="12334" fg:w="21"/><text x="15.9787%" y="767.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (21 samples, 0.03%)</title><rect x="15.7287%" y="741" width="0.0268%" height="15" fill="rgb(225,0,40)" fg:x="12334" fg:w="21"/><text x="15.9787%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.03%)</title><rect x="15.7287%" y="725" width="0.0268%" height="15" fill="rgb(221,31,33)" fg:x="12334" fg:w="21"/><text x="15.9787%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.03%)</title><rect x="15.7287%" y="709" width="0.0268%" height="15" fill="rgb(237,42,40)" fg:x="12334" fg:w="21"/><text x="15.9787%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.03%)</title><rect x="15.7287%" y="693" width="0.0268%" height="15" fill="rgb(233,51,29)" fg:x="12334" fg:w="21"/><text x="15.9787%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 0.03%)</title><rect x="15.7287%" y="677" width="0.0268%" height="15" fill="rgb(226,58,20)" fg:x="12334" fg:w="21"/><text x="15.9787%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.03%)</title><rect x="15.7287%" y="661" width="0.0268%" height="15" fill="rgb(208,98,7)" fg:x="12334" fg:w="21"/><text x="15.9787%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.03%)</title><rect x="15.7287%" y="645" width="0.0268%" height="15" fill="rgb(228,143,44)" fg:x="12334" fg:w="21"/><text x="15.9787%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.03%)</title><rect x="15.7287%" y="629" width="0.0268%" height="15" fill="rgb(246,55,38)" fg:x="12334" fg:w="21"/><text x="15.9787%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (23 samples, 0.03%)</title><rect x="15.7874%" y="485" width="0.0293%" height="15" fill="rgb(247,87,16)" fg:x="12380" fg:w="23"/><text x="16.0374%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 0.03%)</title><rect x="15.7874%" y="469" width="0.0293%" height="15" fill="rgb(234,129,42)" fg:x="12380" fg:w="23"/><text x="16.0374%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.03%)</title><rect x="15.7874%" y="453" width="0.0293%" height="15" fill="rgb(220,82,16)" fg:x="12380" fg:w="23"/><text x="16.0374%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23 samples, 0.03%)</title><rect x="15.7874%" y="437" width="0.0293%" height="15" fill="rgb(211,88,4)" fg:x="12380" fg:w="23"/><text x="16.0374%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.03%)</title><rect x="15.7912%" y="421" width="0.0255%" height="15" fill="rgb(248,151,21)" fg:x="12383" fg:w="20"/><text x="16.0412%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (20 samples, 0.03%)</title><rect x="15.7912%" y="405" width="0.0255%" height="15" fill="rgb(238,163,6)" fg:x="12383" fg:w="20"/><text x="16.0412%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (20 samples, 0.03%)</title><rect x="15.7912%" y="389" width="0.0255%" height="15" fill="rgb(209,183,11)" fg:x="12383" fg:w="20"/><text x="16.0412%" y="399.50"></text></g><g><title>alloc::alloc::realloc (20 samples, 0.03%)</title><rect x="15.7912%" y="373" width="0.0255%" height="15" fill="rgb(219,37,20)" fg:x="12383" fg:w="20"/><text x="16.0412%" y="383.50"></text></g><g><title>rallocx (19 samples, 0.02%)</title><rect x="15.7925%" y="357" width="0.0242%" height="15" fill="rgb(210,158,4)" fg:x="12384" fg:w="19"/><text x="16.0425%" y="367.50"></text></g><g><title>iralloct (13 samples, 0.02%)</title><rect x="15.8001%" y="341" width="0.0166%" height="15" fill="rgb(221,167,53)" fg:x="12390" fg:w="13"/><text x="16.0501%" y="351.50"></text></g><g><title>_rjem_je_arena_ralloc (13 samples, 0.02%)</title><rect x="15.8001%" y="325" width="0.0166%" height="15" fill="rgb(237,151,45)" fg:x="12390" fg:w="13"/><text x="16.0501%" y="335.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (65 samples, 0.08%)</title><rect x="15.7555%" y="741" width="0.0829%" height="15" fill="rgb(231,39,3)" fg:x="12355" fg:w="65"/><text x="16.0055%" y="751.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (65 samples, 0.08%)</title><rect x="15.7555%" y="725" width="0.0829%" height="15" fill="rgb(212,167,28)" fg:x="12355" fg:w="65"/><text x="16.0055%" y="735.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (51 samples, 0.07%)</title><rect x="15.7734%" y="709" width="0.0650%" height="15" fill="rgb(232,178,8)" fg:x="12369" fg:w="51"/><text x="16.0234%" y="719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (51 samples, 0.07%)</title><rect x="15.7734%" y="693" width="0.0650%" height="15" fill="rgb(225,151,20)" fg:x="12369" fg:w="51"/><text x="16.0234%" y="703.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (51 samples, 0.07%)</title><rect x="15.7734%" y="677" width="0.0650%" height="15" fill="rgb(238,3,37)" fg:x="12369" fg:w="51"/><text x="16.0234%" y="687.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (41 samples, 0.05%)</title><rect x="15.7861%" y="661" width="0.0523%" height="15" fill="rgb(251,147,42)" fg:x="12379" fg:w="41"/><text x="16.0361%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (40 samples, 0.05%)</title><rect x="15.7874%" y="645" width="0.0510%" height="15" fill="rgb(208,173,10)" fg:x="12380" fg:w="40"/><text x="16.0374%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (40 samples, 0.05%)</title><rect x="15.7874%" y="629" width="0.0510%" height="15" fill="rgb(246,225,4)" fg:x="12380" fg:w="40"/><text x="16.0374%" y="639.50"></text></g><g><title> 32]&gt;::serialize (40 samples, 0.05%)</title><rect x="15.7874%" y="613" width="0.0510%" height="15" fill="rgb(248,102,6)" fg:x="12380" fg:w="40"/><text x="16.0374%" y="623.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (40 samples, 0.05%)</title><rect x="15.7874%" y="597" width="0.0510%" height="15" fill="rgb(232,6,21)" fg:x="12380" fg:w="40"/><text x="16.0374%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (40 samples, 0.05%)</title><rect x="15.7874%" y="581" width="0.0510%" height="15" fill="rgb(221,179,22)" fg:x="12380" fg:w="40"/><text x="16.0374%" y="591.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (40 samples, 0.05%)</title><rect x="15.7874%" y="565" width="0.0510%" height="15" fill="rgb(252,50,20)" fg:x="12380" fg:w="40"/><text x="16.0374%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (40 samples, 0.05%)</title><rect x="15.7874%" y="549" width="0.0510%" height="15" fill="rgb(222,56,38)" fg:x="12380" fg:w="40"/><text x="16.0374%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (40 samples, 0.05%)</title><rect x="15.7874%" y="533" width="0.0510%" height="15" fill="rgb(206,193,29)" fg:x="12380" fg:w="40"/><text x="16.0374%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (40 samples, 0.05%)</title><rect x="15.7874%" y="517" width="0.0510%" height="15" fill="rgb(239,192,45)" fg:x="12380" fg:w="40"/><text x="16.0374%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (40 samples, 0.05%)</title><rect x="15.7874%" y="501" width="0.0510%" height="15" fill="rgb(254,18,36)" fg:x="12380" fg:w="40"/><text x="16.0374%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="15.8167%" y="485" width="0.0217%" height="15" fill="rgb(221,127,11)" fg:x="12403" fg:w="17"/><text x="16.0667%" y="495.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (126 samples, 0.16%)</title><rect x="15.6815%" y="789" width="0.1607%" height="15" fill="rgb(234,146,35)" fg:x="12297" fg:w="126"/><text x="15.9315%" y="799.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (126 samples, 0.16%)</title><rect x="15.6815%" y="773" width="0.1607%" height="15" fill="rgb(254,201,37)" fg:x="12297" fg:w="126"/><text x="15.9315%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (68 samples, 0.09%)</title><rect x="15.7555%" y="757" width="0.0867%" height="15" fill="rgb(211,202,23)" fg:x="12355" fg:w="68"/><text x="16.0055%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (137 samples, 0.17%)</title><rect x="15.6688%" y="805" width="0.1747%" height="15" fill="rgb(237,91,2)" fg:x="12287" fg:w="137"/><text x="15.9188%" y="815.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (222 samples, 0.28%)</title><rect x="15.5872%" y="837" width="0.2831%" height="15" fill="rgb(226,228,36)" fg:x="12223" fg:w="222"/><text x="15.8372%" y="847.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (222 samples, 0.28%)</title><rect x="15.5872%" y="821" width="0.2831%" height="15" fill="rgb(213,63,50)" fg:x="12223" fg:w="222"/><text x="15.8372%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.03%)</title><rect x="15.8435%" y="805" width="0.0268%" height="15" fill="rgb(235,194,19)" fg:x="12424" fg:w="21"/><text x="16.0935%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.03%)</title><rect x="15.8435%" y="789" width="0.0268%" height="15" fill="rgb(207,204,18)" fg:x="12424" fg:w="21"/><text x="16.0935%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 0.03%)</title><rect x="15.8435%" y="773" width="0.0268%" height="15" fill="rgb(248,8,7)" fg:x="12424" fg:w="21"/><text x="16.0935%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (21 samples, 0.03%)</title><rect x="15.8435%" y="757" width="0.0268%" height="15" fill="rgb(223,145,47)" fg:x="12424" fg:w="21"/><text x="16.0935%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (21 samples, 0.03%)</title><rect x="15.8435%" y="741" width="0.0268%" height="15" fill="rgb(228,84,11)" fg:x="12424" fg:w="21"/><text x="16.0935%" y="751.50"></text></g><g><title>alloc::alloc::realloc (21 samples, 0.03%)</title><rect x="15.8435%" y="725" width="0.0268%" height="15" fill="rgb(218,76,45)" fg:x="12424" fg:w="21"/><text x="16.0935%" y="735.50"></text></g><g><title>rallocx (21 samples, 0.03%)</title><rect x="15.8435%" y="709" width="0.0268%" height="15" fill="rgb(223,80,15)" fg:x="12424" fg:w="21"/><text x="16.0935%" y="719.50"></text></g><g><title>sz_index2size (14 samples, 0.02%)</title><rect x="15.8524%" y="693" width="0.0179%" height="15" fill="rgb(219,218,33)" fg:x="12431" fg:w="14"/><text x="16.1024%" y="703.50"></text></g><g><title>sz_index2size_lookup (14 samples, 0.02%)</title><rect x="15.8524%" y="677" width="0.0179%" height="15" fill="rgb(208,51,11)" fg:x="12431" fg:w="14"/><text x="16.1024%" y="687.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (242 samples, 0.31%)</title><rect x="15.5693%" y="917" width="0.3086%" height="15" fill="rgb(229,165,39)" fg:x="12209" fg:w="242"/><text x="15.8193%" y="927.50"></text></g><g><title>bcs::ser::to_bytes (238 samples, 0.30%)</title><rect x="15.5744%" y="901" width="0.3035%" height="15" fill="rgb(241,100,24)" fg:x="12213" fg:w="238"/><text x="15.8244%" y="911.50"></text></g><g><title>bcs::ser::serialize_into (238 samples, 0.30%)</title><rect x="15.5744%" y="885" width="0.3035%" height="15" fill="rgb(228,14,23)" fg:x="12213" fg:w="238"/><text x="15.8244%" y="895.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (238 samples, 0.30%)</title><rect x="15.5744%" y="869" width="0.3035%" height="15" fill="rgb(247,116,52)" fg:x="12213" fg:w="238"/><text x="15.8244%" y="879.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (228 samples, 0.29%)</title><rect x="15.5872%" y="853" width="0.2908%" height="15" fill="rgb(216,149,33)" fg:x="12223" fg:w="228"/><text x="15.8372%" y="863.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionExt&lt;S&gt;::finish (759 samples, 0.97%)</title><rect x="14.9355%" y="965" width="0.9679%" height="15" fill="rgb(238,142,29)" fg:x="11712" fg:w="759"/><text x="15.1855%" y="975.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::finish_with_extensions (696 samples, 0.89%)</title><rect x="15.0159%" y="949" width="0.8876%" height="15" fill="rgb(224,83,40)" fg:x="11775" fg:w="696"/><text x="15.2659%" y="959.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::into_effects (696 samples, 0.89%)</title><rect x="15.0159%" y="933" width="0.8876%" height="15" fill="rgb(234,165,11)" fg:x="11775" fg:w="696"/><text x="15.2659%" y="943.50"></text></g><g><title>sdallocx (20 samples, 0.03%)</title><rect x="15.8779%" y="917" width="0.0255%" height="15" fill="rgb(215,96,23)" fg:x="12451" fg:w="20"/><text x="16.1279%" y="927.50"></text></g><g><title>isfree (20 samples, 0.03%)</title><rect x="15.8779%" y="901" width="0.0255%" height="15" fill="rgb(233,179,26)" fg:x="12451" fg:w="20"/><text x="16.1279%" y="911.50"></text></g><g><title>isdalloct (20 samples, 0.03%)</title><rect x="15.8779%" y="885" width="0.0255%" height="15" fill="rgb(225,129,33)" fg:x="12451" fg:w="20"/><text x="16.1279%" y="895.50"></text></g><g><title>arena_sdalloc (20 samples, 0.03%)</title><rect x="15.8779%" y="869" width="0.0255%" height="15" fill="rgb(237,49,13)" fg:x="12451" fg:w="20"/><text x="16.1279%" y="879.50"></text></g><g><title>tcache_dalloc_small (20 samples, 0.03%)</title><rect x="15.8779%" y="853" width="0.0255%" height="15" fill="rgb(211,3,31)" fg:x="12451" fg:w="20"/><text x="16.1279%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (15 samples, 0.02%)</title><rect x="15.9226%" y="853" width="0.0191%" height="15" fill="rgb(216,152,19)" fg:x="12486" fg:w="15"/><text x="16.1726%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (15 samples, 0.02%)</title><rect x="15.9226%" y="837" width="0.0191%" height="15" fill="rgb(251,121,35)" fg:x="12486" fg:w="15"/><text x="16.1726%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (14 samples, 0.02%)</title><rect x="15.9238%" y="821" width="0.0179%" height="15" fill="rgb(210,217,47)" fg:x="12487" fg:w="14"/><text x="16.1738%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (14 samples, 0.02%)</title><rect x="15.9238%" y="805" width="0.0179%" height="15" fill="rgb(244,116,22)" fg:x="12487" fg:w="14"/><text x="16.1738%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="15.9238%" y="789" width="0.0179%" height="15" fill="rgb(228,17,21)" fg:x="12487" fg:w="14"/><text x="16.1738%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.02%)</title><rect x="15.9238%" y="773" width="0.0179%" height="15" fill="rgb(240,149,34)" fg:x="12487" fg:w="14"/><text x="16.1738%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.02%)</title><rect x="15.9238%" y="757" width="0.0179%" height="15" fill="rgb(208,125,47)" fg:x="12487" fg:w="14"/><text x="16.1738%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.03%)</title><rect x="15.9187%" y="901" width="0.0293%" height="15" fill="rgb(249,186,39)" fg:x="12483" fg:w="23"/><text x="16.1687%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (23 samples, 0.03%)</title><rect x="15.9187%" y="885" width="0.0293%" height="15" fill="rgb(240,220,33)" fg:x="12483" fg:w="23"/><text x="16.1687%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (23 samples, 0.03%)</title><rect x="15.9187%" y="869" width="0.0293%" height="15" fill="rgb(243,110,23)" fg:x="12483" fg:w="23"/><text x="16.1687%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="15.9481%" y="869" width="0.0102%" height="15" fill="rgb(219,163,46)" fg:x="12506" fg:w="8"/><text x="16.1981%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="15.9481%" y="853" width="0.0102%" height="15" fill="rgb(216,126,30)" fg:x="12506" fg:w="8"/><text x="16.1981%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (34 samples, 0.04%)</title><rect x="15.9187%" y="917" width="0.0434%" height="15" fill="rgb(208,139,11)" fg:x="12483" fg:w="34"/><text x="16.1687%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (11 samples, 0.01%)</title><rect x="15.9481%" y="901" width="0.0140%" height="15" fill="rgb(213,118,36)" fg:x="12506" fg:w="11"/><text x="16.1981%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="15.9481%" y="885" width="0.0140%" height="15" fill="rgb(226,43,17)" fg:x="12506" fg:w="11"/><text x="16.1981%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (36 samples, 0.05%)</title><rect x="15.9187%" y="933" width="0.0459%" height="15" fill="rgb(254,217,4)" fg:x="12483" fg:w="36"/><text x="16.1687%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (19 samples, 0.02%)</title><rect x="15.9685%" y="917" width="0.0242%" height="15" fill="rgb(210,134,47)" fg:x="12522" fg:w="19"/><text x="16.2185%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (19 samples, 0.02%)</title><rect x="15.9685%" y="901" width="0.0242%" height="15" fill="rgb(237,24,49)" fg:x="12522" fg:w="19"/><text x="16.2185%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="15.9685%" y="885" width="0.0242%" height="15" fill="rgb(251,39,46)" fg:x="12522" fg:w="19"/><text x="16.2185%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="15.9685%" y="869" width="0.0242%" height="15" fill="rgb(251,220,3)" fg:x="12522" fg:w="19"/><text x="16.2185%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.02%)</title><rect x="15.9685%" y="853" width="0.0242%" height="15" fill="rgb(228,105,12)" fg:x="12522" fg:w="19"/><text x="16.2185%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.02%)</title><rect x="15.9685%" y="837" width="0.0242%" height="15" fill="rgb(215,196,1)" fg:x="12522" fg:w="19"/><text x="16.2185%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="15.9710%" y="821" width="0.0217%" height="15" fill="rgb(214,33,39)" fg:x="12524" fg:w="17"/><text x="16.2210%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.02%)</title><rect x="15.9723%" y="805" width="0.0204%" height="15" fill="rgb(220,19,52)" fg:x="12525" fg:w="16"/><text x="16.2223%" y="815.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.02%)</title><rect x="15.9723%" y="789" width="0.0204%" height="15" fill="rgb(221,78,38)" fg:x="12525" fg:w="16"/><text x="16.2223%" y="799.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.02%)</title><rect x="15.9723%" y="773" width="0.0204%" height="15" fill="rgb(253,30,16)" fg:x="12525" fg:w="16"/><text x="16.2223%" y="783.50"></text></g><g><title>rallocx (16 samples, 0.02%)</title><rect x="15.9723%" y="757" width="0.0204%" height="15" fill="rgb(242,65,0)" fg:x="12525" fg:w="16"/><text x="16.2223%" y="767.50"></text></g><g><title>iralloct (8 samples, 0.01%)</title><rect x="15.9825%" y="741" width="0.0102%" height="15" fill="rgb(235,201,12)" fg:x="12533" fg:w="8"/><text x="16.2325%" y="751.50"></text></g><g><title>_rjem_je_arena_ralloc (8 samples, 0.01%)</title><rect x="15.9825%" y="725" width="0.0102%" height="15" fill="rgb(233,161,9)" fg:x="12533" fg:w="8"/><text x="16.2325%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (17 samples, 0.02%)</title><rect x="15.9978%" y="677" width="0.0217%" height="15" fill="rgb(241,207,41)" fg:x="12545" fg:w="17"/><text x="16.2478%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (17 samples, 0.02%)</title><rect x="15.9978%" y="661" width="0.0217%" height="15" fill="rgb(212,69,46)" fg:x="12545" fg:w="17"/><text x="16.2478%" y="671.50"></text></g><g><title>__rust_realloc (8 samples, 0.01%)</title><rect x="16.0271%" y="549" width="0.0102%" height="15" fill="rgb(239,69,45)" fg:x="12568" fg:w="8"/><text x="16.2771%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (30 samples, 0.04%)</title><rect x="16.0271%" y="597" width="0.0383%" height="15" fill="rgb(242,117,48)" fg:x="12568" fg:w="30"/><text x="16.2771%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (30 samples, 0.04%)</title><rect x="16.0271%" y="581" width="0.0383%" height="15" fill="rgb(228,41,36)" fg:x="12568" fg:w="30"/><text x="16.2771%" y="591.50"></text></g><g><title>alloc::alloc::realloc (30 samples, 0.04%)</title><rect x="16.0271%" y="565" width="0.0383%" height="15" fill="rgb(212,3,32)" fg:x="12568" fg:w="30"/><text x="16.2771%" y="575.50"></text></g><g><title>rallocx (22 samples, 0.03%)</title><rect x="16.0373%" y="549" width="0.0281%" height="15" fill="rgb(233,41,49)" fg:x="12576" fg:w="22"/><text x="16.2873%" y="559.50"></text></g><g><title>iralloct (9 samples, 0.01%)</title><rect x="16.0539%" y="533" width="0.0115%" height="15" fill="rgb(252,170,49)" fg:x="12589" fg:w="9"/><text x="16.3039%" y="543.50"></text></g><g><title>_rjem_je_arena_ralloc (9 samples, 0.01%)</title><rect x="16.0539%" y="517" width="0.0115%" height="15" fill="rgb(229,53,26)" fg:x="12589" fg:w="9"/><text x="16.3039%" y="527.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (60 samples, 0.08%)</title><rect x="15.9978%" y="853" width="0.0765%" height="15" fill="rgb(217,157,12)" fg:x="12545" fg:w="60"/><text x="16.2478%" y="863.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (60 samples, 0.08%)</title><rect x="15.9978%" y="837" width="0.0765%" height="15" fill="rgb(227,17,9)" fg:x="12545" fg:w="60"/><text x="16.2478%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (60 samples, 0.08%)</title><rect x="15.9978%" y="821" width="0.0765%" height="15" fill="rgb(218,84,12)" fg:x="12545" fg:w="60"/><text x="16.2478%" y="831.50"></text></g><g><title> 32]&gt;::serialize (60 samples, 0.08%)</title><rect x="15.9978%" y="805" width="0.0765%" height="15" fill="rgb(212,79,24)" fg:x="12545" fg:w="60"/><text x="16.2478%" y="815.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (60 samples, 0.08%)</title><rect x="15.9978%" y="789" width="0.0765%" height="15" fill="rgb(217,222,37)" fg:x="12545" fg:w="60"/><text x="16.2478%" y="799.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (60 samples, 0.08%)</title><rect x="15.9978%" y="773" width="0.0765%" height="15" fill="rgb(246,208,8)" fg:x="12545" fg:w="60"/><text x="16.2478%" y="783.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (60 samples, 0.08%)</title><rect x="15.9978%" y="757" width="0.0765%" height="15" fill="rgb(244,133,10)" fg:x="12545" fg:w="60"/><text x="16.2478%" y="767.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (60 samples, 0.08%)</title><rect x="15.9978%" y="741" width="0.0765%" height="15" fill="rgb(209,219,41)" fg:x="12545" fg:w="60"/><text x="16.2478%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (60 samples, 0.08%)</title><rect x="15.9978%" y="725" width="0.0765%" height="15" fill="rgb(253,175,45)" fg:x="12545" fg:w="60"/><text x="16.2478%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (60 samples, 0.08%)</title><rect x="15.9978%" y="709" width="0.0765%" height="15" fill="rgb(235,100,37)" fg:x="12545" fg:w="60"/><text x="16.2478%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (60 samples, 0.08%)</title><rect x="15.9978%" y="693" width="0.0765%" height="15" fill="rgb(225,87,19)" fg:x="12545" fg:w="60"/><text x="16.2478%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (43 samples, 0.05%)</title><rect x="16.0195%" y="677" width="0.0548%" height="15" fill="rgb(217,152,17)" fg:x="12562" fg:w="43"/><text x="16.2695%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (43 samples, 0.05%)</title><rect x="16.0195%" y="661" width="0.0548%" height="15" fill="rgb(235,72,13)" fg:x="12562" fg:w="43"/><text x="16.2695%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (43 samples, 0.05%)</title><rect x="16.0195%" y="645" width="0.0548%" height="15" fill="rgb(233,140,18)" fg:x="12562" fg:w="43"/><text x="16.2695%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (43 samples, 0.05%)</title><rect x="16.0195%" y="629" width="0.0548%" height="15" fill="rgb(207,212,28)" fg:x="12562" fg:w="43"/><text x="16.2695%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (37 samples, 0.05%)</title><rect x="16.0271%" y="613" width="0.0472%" height="15" fill="rgb(220,130,25)" fg:x="12568" fg:w="37"/><text x="16.2771%" y="623.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (22 samples, 0.03%)</title><rect x="16.0743%" y="853" width="0.0281%" height="15" fill="rgb(205,55,34)" fg:x="12605" fg:w="22"/><text x="16.3243%" y="863.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 0.03%)</title><rect x="16.0743%" y="837" width="0.0281%" height="15" fill="rgb(237,54,35)" fg:x="12605" fg:w="22"/><text x="16.3243%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (22 samples, 0.03%)</title><rect x="16.0743%" y="821" width="0.0281%" height="15" fill="rgb(208,67,23)" fg:x="12605" fg:w="22"/><text x="16.3243%" y="831.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (22 samples, 0.03%)</title><rect x="16.0743%" y="805" width="0.0281%" height="15" fill="rgb(206,207,50)" fg:x="12605" fg:w="22"/><text x="16.3243%" y="815.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (22 samples, 0.03%)</title><rect x="16.0743%" y="789" width="0.0281%" height="15" fill="rgb(213,211,42)" fg:x="12605" fg:w="22"/><text x="16.3243%" y="799.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (16 samples, 0.02%)</title><rect x="16.0820%" y="773" width="0.0204%" height="15" fill="rgb(252,197,50)" fg:x="12611" fg:w="16"/><text x="16.3320%" y="783.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (16 samples, 0.02%)</title><rect x="16.0820%" y="757" width="0.0204%" height="15" fill="rgb(251,211,41)" fg:x="12611" fg:w="16"/><text x="16.3320%" y="767.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (16 samples, 0.02%)</title><rect x="16.0820%" y="741" width="0.0204%" height="15" fill="rgb(229,211,5)" fg:x="12611" fg:w="16"/><text x="16.3320%" y="751.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (16 samples, 0.02%)</title><rect x="16.0820%" y="725" width="0.0204%" height="15" fill="rgb(239,36,31)" fg:x="12611" fg:w="16"/><text x="16.3320%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.02%)</title><rect x="16.0820%" y="709" width="0.0204%" height="15" fill="rgb(248,67,31)" fg:x="12611" fg:w="16"/><text x="16.3320%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.02%)</title><rect x="16.0820%" y="693" width="0.0204%" height="15" fill="rgb(249,55,44)" fg:x="12611" fg:w="16"/><text x="16.3320%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.02%)</title><rect x="16.0820%" y="677" width="0.0204%" height="15" fill="rgb(216,82,12)" fg:x="12611" fg:w="16"/><text x="16.3320%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="16.0820%" y="661" width="0.0204%" height="15" fill="rgb(242,174,1)" fg:x="12611" fg:w="16"/><text x="16.3320%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="16.0820%" y="645" width="0.0204%" height="15" fill="rgb(208,120,29)" fg:x="12611" fg:w="16"/><text x="16.3320%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="16.0820%" y="629" width="0.0204%" height="15" fill="rgb(221,105,43)" fg:x="12611" fg:w="16"/><text x="16.3320%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (15 samples, 0.02%)</title><rect x="16.0832%" y="613" width="0.0191%" height="15" fill="rgb(234,124,22)" fg:x="12612" fg:w="15"/><text x="16.3332%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="16.0832%" y="597" width="0.0191%" height="15" fill="rgb(212,23,30)" fg:x="12612" fg:w="15"/><text x="16.3332%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.02%)</title><rect x="16.0858%" y="581" width="0.0166%" height="15" fill="rgb(219,122,53)" fg:x="12614" fg:w="13"/><text x="16.3358%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.02%)</title><rect x="16.0858%" y="565" width="0.0166%" height="15" fill="rgb(248,84,24)" fg:x="12614" fg:w="13"/><text x="16.3358%" y="575.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.02%)</title><rect x="16.0858%" y="549" width="0.0166%" height="15" fill="rgb(245,115,18)" fg:x="12614" fg:w="13"/><text x="16.3358%" y="559.50"></text></g><g><title>rallocx (10 samples, 0.01%)</title><rect x="16.0896%" y="533" width="0.0128%" height="15" fill="rgb(227,176,51)" fg:x="12617" fg:w="10"/><text x="16.3396%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (27 samples, 0.03%)</title><rect x="16.1228%" y="469" width="0.0344%" height="15" fill="rgb(229,63,42)" fg:x="12643" fg:w="27"/><text x="16.3728%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.03%)</title><rect x="16.1228%" y="453" width="0.0344%" height="15" fill="rgb(247,202,24)" fg:x="12643" fg:w="27"/><text x="16.3728%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.03%)</title><rect x="16.1253%" y="437" width="0.0319%" height="15" fill="rgb(244,173,20)" fg:x="12645" fg:w="25"/><text x="16.3753%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.03%)</title><rect x="16.1253%" y="421" width="0.0319%" height="15" fill="rgb(242,81,47)" fg:x="12645" fg:w="25"/><text x="16.3753%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.02%)</title><rect x="16.1343%" y="405" width="0.0230%" height="15" fill="rgb(231,185,54)" fg:x="12652" fg:w="18"/><text x="16.3843%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18 samples, 0.02%)</title><rect x="16.1343%" y="389" width="0.0230%" height="15" fill="rgb(243,55,32)" fg:x="12652" fg:w="18"/><text x="16.3843%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 0.02%)</title><rect x="16.1343%" y="373" width="0.0230%" height="15" fill="rgb(208,167,19)" fg:x="12652" fg:w="18"/><text x="16.3843%" y="383.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 0.02%)</title><rect x="16.1343%" y="357" width="0.0230%" height="15" fill="rgb(231,72,35)" fg:x="12652" fg:w="18"/><text x="16.3843%" y="367.50"></text></g><g><title>rallocx (16 samples, 0.02%)</title><rect x="16.1368%" y="341" width="0.0204%" height="15" fill="rgb(250,173,51)" fg:x="12654" fg:w="16"/><text x="16.3868%" y="351.50"></text></g><g><title>iralloct (16 samples, 0.02%)</title><rect x="16.1368%" y="325" width="0.0204%" height="15" fill="rgb(209,5,22)" fg:x="12654" fg:w="16"/><text x="16.3868%" y="335.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (52 samples, 0.07%)</title><rect x="16.1228%" y="645" width="0.0663%" height="15" fill="rgb(250,174,19)" fg:x="12643" fg:w="52"/><text x="16.3728%" y="655.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (52 samples, 0.07%)</title><rect x="16.1228%" y="629" width="0.0663%" height="15" fill="rgb(217,3,49)" fg:x="12643" fg:w="52"/><text x="16.3728%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (52 samples, 0.07%)</title><rect x="16.1228%" y="613" width="0.0663%" height="15" fill="rgb(218,225,5)" fg:x="12643" fg:w="52"/><text x="16.3728%" y="623.50"></text></g><g><title> 32]&gt;::serialize (52 samples, 0.07%)</title><rect x="16.1228%" y="597" width="0.0663%" height="15" fill="rgb(236,89,11)" fg:x="12643" fg:w="52"/><text x="16.3728%" y="607.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (52 samples, 0.07%)</title><rect x="16.1228%" y="581" width="0.0663%" height="15" fill="rgb(206,33,28)" fg:x="12643" fg:w="52"/><text x="16.3728%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (52 samples, 0.07%)</title><rect x="16.1228%" y="565" width="0.0663%" height="15" fill="rgb(241,56,42)" fg:x="12643" fg:w="52"/><text x="16.3728%" y="575.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (52 samples, 0.07%)</title><rect x="16.1228%" y="549" width="0.0663%" height="15" fill="rgb(222,44,11)" fg:x="12643" fg:w="52"/><text x="16.3728%" y="559.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (52 samples, 0.07%)</title><rect x="16.1228%" y="533" width="0.0663%" height="15" fill="rgb(234,111,20)" fg:x="12643" fg:w="52"/><text x="16.3728%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (52 samples, 0.07%)</title><rect x="16.1228%" y="517" width="0.0663%" height="15" fill="rgb(237,77,6)" fg:x="12643" fg:w="52"/><text x="16.3728%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (52 samples, 0.07%)</title><rect x="16.1228%" y="501" width="0.0663%" height="15" fill="rgb(235,111,23)" fg:x="12643" fg:w="52"/><text x="16.3728%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (52 samples, 0.07%)</title><rect x="16.1228%" y="485" width="0.0663%" height="15" fill="rgb(251,135,29)" fg:x="12643" fg:w="52"/><text x="16.3728%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.03%)</title><rect x="16.1572%" y="469" width="0.0319%" height="15" fill="rgb(217,57,1)" fg:x="12670" fg:w="25"/><text x="16.4072%" y="479.50"></text></g><g><title>bcs::ser::to_bytes (159 samples, 0.20%)</title><rect x="15.9927%" y="917" width="0.2028%" height="15" fill="rgb(249,119,31)" fg:x="12541" fg:w="159"/><text x="16.2427%" y="927.50"></text></g><g><title>bcs::ser::serialize_into (155 samples, 0.20%)</title><rect x="15.9978%" y="901" width="0.1977%" height="15" fill="rgb(233,164,33)" fg:x="12545" fg:w="155"/><text x="16.2478%" y="911.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (155 samples, 0.20%)</title><rect x="15.9978%" y="885" width="0.1977%" height="15" fill="rgb(250,217,43)" fg:x="12545" fg:w="155"/><text x="16.2478%" y="895.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (155 samples, 0.20%)</title><rect x="15.9978%" y="869" width="0.1977%" height="15" fill="rgb(232,154,50)" fg:x="12545" fg:w="155"/><text x="16.2478%" y="879.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (73 samples, 0.09%)</title><rect x="16.1024%" y="853" width="0.0931%" height="15" fill="rgb(227,190,8)" fg:x="12627" fg:w="73"/><text x="16.3524%" y="863.50"></text></g><g><title>serde::ser::Serializer::collect_seq (73 samples, 0.09%)</title><rect x="16.1024%" y="837" width="0.0931%" height="15" fill="rgb(209,217,32)" fg:x="12627" fg:w="73"/><text x="16.3524%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (73 samples, 0.09%)</title><rect x="16.1024%" y="821" width="0.0931%" height="15" fill="rgb(243,203,50)" fg:x="12627" fg:w="73"/><text x="16.3524%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (73 samples, 0.09%)</title><rect x="16.1024%" y="805" width="0.0931%" height="15" fill="rgb(232,152,27)" fg:x="12627" fg:w="73"/><text x="16.3524%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (73 samples, 0.09%)</title><rect x="16.1024%" y="789" width="0.0931%" height="15" fill="rgb(240,34,29)" fg:x="12627" fg:w="73"/><text x="16.3524%" y="799.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (73 samples, 0.09%)</title><rect x="16.1024%" y="773" width="0.0931%" height="15" fill="rgb(215,185,52)" fg:x="12627" fg:w="73"/><text x="16.3524%" y="783.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (73 samples, 0.09%)</title><rect x="16.1024%" y="757" width="0.0931%" height="15" fill="rgb(240,89,49)" fg:x="12627" fg:w="73"/><text x="16.3524%" y="767.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (73 samples, 0.09%)</title><rect x="16.1024%" y="741" width="0.0931%" height="15" fill="rgb(225,12,52)" fg:x="12627" fg:w="73"/><text x="16.3524%" y="751.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (64 samples, 0.08%)</title><rect x="16.1139%" y="725" width="0.0816%" height="15" fill="rgb(239,128,45)" fg:x="12636" fg:w="64"/><text x="16.3639%" y="735.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (58 samples, 0.07%)</title><rect x="16.1215%" y="709" width="0.0740%" height="15" fill="rgb(211,78,47)" fg:x="12642" fg:w="58"/><text x="16.3715%" y="719.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (58 samples, 0.07%)</title><rect x="16.1215%" y="693" width="0.0740%" height="15" fill="rgb(232,31,21)" fg:x="12642" fg:w="58"/><text x="16.3715%" y="703.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (58 samples, 0.07%)</title><rect x="16.1215%" y="677" width="0.0740%" height="15" fill="rgb(222,168,14)" fg:x="12642" fg:w="58"/><text x="16.3715%" y="687.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (58 samples, 0.07%)</title><rect x="16.1215%" y="661" width="0.0740%" height="15" fill="rgb(209,128,24)" fg:x="12642" fg:w="58"/><text x="16.3715%" y="671.50"></text></g><g><title>&lt;() as aptos_vm::access_path_cache::AccessPathCache&gt;::get_resource_path (224 samples, 0.29%)</title><rect x="15.9187%" y="949" width="0.2857%" height="15" fill="rgb(249,35,13)" fg:x="12483" fg:w="224"/><text x="16.1687%" y="959.50"></text></g><g><title>move_core_types::language_storage::StructTag::access_vector (188 samples, 0.24%)</title><rect x="15.9647%" y="933" width="0.2397%" height="15" fill="rgb(218,7,2)" fg:x="12519" fg:w="188"/><text x="16.2147%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="16.2044%" y="949" width="0.0128%" height="15" fill="rgb(238,107,27)" fg:x="12707" fg:w="10"/><text x="16.4544%" y="959.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.01%)</title><rect x="16.2044%" y="933" width="0.0128%" height="15" fill="rgb(217,88,38)" fg:x="12707" fg:w="10"/><text x="16.4544%" y="943.50"></text></g><g><title>aptos_types::transaction::change_set::ChangeSet::new (22 samples, 0.03%)</title><rect x="16.2210%" y="949" width="0.0281%" height="15" fill="rgb(230,207,0)" fg:x="12720" fg:w="22"/><text x="16.4710%" y="959.50"></text></g><g><title>&lt;aptos_gas::transaction::storage::ChangeSetConfigs as aptos_types::transaction::change_set::CheckChangeSet&gt;::check_change_set (13 samples, 0.02%)</title><rect x="16.2324%" y="933" width="0.0166%" height="15" fill="rgb(249,64,54)" fg:x="12729" fg:w="13"/><text x="16.4824%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,Type&gt;::borrow_mut (11 samples, 0.01%)</title><rect x="16.2554%" y="901" width="0.0140%" height="15" fill="rgb(231,7,11)" fg:x="12747" fg:w="11"/><text x="16.5054%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (14 samples, 0.02%)</title><rect x="16.2554%" y="917" width="0.0179%" height="15" fill="rgb(205,149,21)" fg:x="12747" fg:w="14"/><text x="16.5054%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (9 samples, 0.01%)</title><rect x="16.2796%" y="901" width="0.0115%" height="15" fill="rgb(215,126,34)" fg:x="12766" fg:w="9"/><text x="16.5296%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (9 samples, 0.01%)</title><rect x="16.2796%" y="885" width="0.0115%" height="15" fill="rgb(241,132,45)" fg:x="12766" fg:w="9"/><text x="16.5296%" y="895.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (9 samples, 0.01%)</title><rect x="16.2796%" y="869" width="0.0115%" height="15" fill="rgb(252,69,32)" fg:x="12766" fg:w="9"/><text x="16.5296%" y="879.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::insert (34 samples, 0.04%)</title><rect x="16.2490%" y="949" width="0.0434%" height="15" fill="rgb(232,204,19)" fg:x="12742" fg:w="34"/><text x="16.4990%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (29 samples, 0.04%)</title><rect x="16.2554%" y="933" width="0.0370%" height="15" fill="rgb(249,15,47)" fg:x="12747" fg:w="29"/><text x="16.5054%" y="943.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (15 samples, 0.02%)</title><rect x="16.2733%" y="917" width="0.0191%" height="15" fill="rgb(209,227,23)" fg:x="12761" fg:w="15"/><text x="16.5233%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="16.3421%" y="341" width="0.0153%" height="15" fill="rgb(248,92,24)" fg:x="12815" fg:w="12"/><text x="16.5921%" y="351.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (37 samples, 0.05%)</title><rect x="16.3179%" y="565" width="0.0472%" height="15" fill="rgb(247,59,2)" fg:x="12796" fg:w="37"/><text x="16.5679%" y="575.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (37 samples, 0.05%)</title><rect x="16.3179%" y="549" width="0.0472%" height="15" fill="rgb(221,30,5)" fg:x="12796" fg:w="37"/><text x="16.5679%" y="559.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (37 samples, 0.05%)</title><rect x="16.3179%" y="533" width="0.0472%" height="15" fill="rgb(208,108,53)" fg:x="12796" fg:w="37"/><text x="16.5679%" y="543.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (34 samples, 0.04%)</title><rect x="16.3217%" y="517" width="0.0434%" height="15" fill="rgb(211,183,26)" fg:x="12799" fg:w="34"/><text x="16.5717%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (34 samples, 0.04%)</title><rect x="16.3217%" y="501" width="0.0434%" height="15" fill="rgb(232,132,4)" fg:x="12799" fg:w="34"/><text x="16.5717%" y="511.50"></text></g><g><title> 32]&gt;::deserialize (34 samples, 0.04%)</title><rect x="16.3217%" y="485" width="0.0434%" height="15" fill="rgb(253,128,37)" fg:x="12799" fg:w="34"/><text x="16.5717%" y="495.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (34 samples, 0.04%)</title><rect x="16.3217%" y="469" width="0.0434%" height="15" fill="rgb(221,58,24)" fg:x="12799" fg:w="34"/><text x="16.5717%" y="479.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (34 samples, 0.04%)</title><rect x="16.3217%" y="453" width="0.0434%" height="15" fill="rgb(230,54,45)" fg:x="12799" fg:w="34"/><text x="16.5717%" y="463.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (34 samples, 0.04%)</title><rect x="16.3217%" y="437" width="0.0434%" height="15" fill="rgb(254,21,18)" fg:x="12799" fg:w="34"/><text x="16.5717%" y="447.50"></text></g><g><title>serde::de::SeqAccess::next_element (18 samples, 0.02%)</title><rect x="16.3421%" y="421" width="0.0230%" height="15" fill="rgb(221,108,0)" fg:x="12815" fg:w="18"/><text x="16.5921%" y="431.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (18 samples, 0.02%)</title><rect x="16.3421%" y="405" width="0.0230%" height="15" fill="rgb(206,95,1)" fg:x="12815" fg:w="18"/><text x="16.5921%" y="415.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 0.02%)</title><rect x="16.3421%" y="389" width="0.0230%" height="15" fill="rgb(237,52,5)" fg:x="12815" fg:w="18"/><text x="16.5921%" y="399.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (18 samples, 0.02%)</title><rect x="16.3421%" y="373" width="0.0230%" height="15" fill="rgb(218,150,34)" fg:x="12815" fg:w="18"/><text x="16.5921%" y="383.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (18 samples, 0.02%)</title><rect x="16.3421%" y="357" width="0.0230%" height="15" fill="rgb(235,194,28)" fg:x="12815" fg:w="18"/><text x="16.5921%" y="367.50"></text></g><g><title>bcs::de::from_bytes (45 samples, 0.06%)</title><rect x="16.3179%" y="677" width="0.0574%" height="15" fill="rgb(245,92,18)" fg:x="12796" fg:w="45"/><text x="16.5679%" y="687.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::de::Deserialize for aptos_types::event::EventKey&gt;::deserialize (45 samples, 0.06%)</title><rect x="16.3179%" y="661" width="0.0574%" height="15" fill="rgb(253,203,53)" fg:x="12796" fg:w="45"/><text x="16.5679%" y="671.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (45 samples, 0.06%)</title><rect x="16.3179%" y="645" width="0.0574%" height="15" fill="rgb(249,185,47)" fg:x="12796" fg:w="45"/><text x="16.5679%" y="655.50"></text></g><g><title>&lt;aptos_types::event::_::&lt;impl serde::de::Deserialize for aptos_types::event::EventKey&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (45 samples, 0.06%)</title><rect x="16.3179%" y="629" width="0.0574%" height="15" fill="rgb(252,194,52)" fg:x="12796" fg:w="45"/><text x="16.5679%" y="639.50"></text></g><g><title>serde::de::SeqAccess::next_element (45 samples, 0.06%)</title><rect x="16.3179%" y="613" width="0.0574%" height="15" fill="rgb(210,53,36)" fg:x="12796" fg:w="45"/><text x="16.5679%" y="623.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (45 samples, 0.06%)</title><rect x="16.3179%" y="597" width="0.0574%" height="15" fill="rgb(237,37,25)" fg:x="12796" fg:w="45"/><text x="16.5679%" y="607.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (45 samples, 0.06%)</title><rect x="16.3179%" y="581" width="0.0574%" height="15" fill="rgb(242,116,27)" fg:x="12796" fg:w="45"/><text x="16.5679%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (8 samples, 0.01%)</title><rect x="16.3651%" y="565" width="0.0102%" height="15" fill="rgb(213,185,26)" fg:x="12833" fg:w="8"/><text x="16.6151%" y="575.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (8 samples, 0.01%)</title><rect x="16.3651%" y="549" width="0.0102%" height="15" fill="rgb(225,204,8)" fg:x="12833" fg:w="8"/><text x="16.6151%" y="559.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (8 samples, 0.01%)</title><rect x="16.3651%" y="533" width="0.0102%" height="15" fill="rgb(254,111,37)" fg:x="12833" fg:w="8"/><text x="16.6151%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.07%)</title><rect x="16.3051%" y="789" width="0.0727%" height="15" fill="rgb(242,35,9)" fg:x="12786" fg:w="57"/><text x="16.5551%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (57 samples, 0.07%)</title><rect x="16.3051%" y="773" width="0.0727%" height="15" fill="rgb(232,138,49)" fg:x="12786" fg:w="57"/><text x="16.5551%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 0.07%)</title><rect x="16.3051%" y="757" width="0.0727%" height="15" fill="rgb(247,56,4)" fg:x="12786" fg:w="57"/><text x="16.5551%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 0.07%)</title><rect x="16.3051%" y="741" width="0.0727%" height="15" fill="rgb(226,179,17)" fg:x="12786" fg:w="57"/><text x="16.5551%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 0.07%)</title><rect x="16.3051%" y="725" width="0.0727%" height="15" fill="rgb(216,163,45)" fg:x="12786" fg:w="57"/><text x="16.5551%" y="735.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (47 samples, 0.06%)</title><rect x="16.3179%" y="709" width="0.0599%" height="15" fill="rgb(211,157,3)" fg:x="12796" fg:w="47"/><text x="16.5679%" y="719.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionOutput::into_change_set::{{closure}} (47 samples, 0.06%)</title><rect x="16.3179%" y="693" width="0.0599%" height="15" fill="rgb(234,44,20)" fg:x="12796" fg:w="47"/><text x="16.5679%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (58 samples, 0.07%)</title><rect x="16.3051%" y="821" width="0.0740%" height="15" fill="rgb(254,138,23)" fg:x="12786" fg:w="58"/><text x="16.5551%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (58 samples, 0.07%)</title><rect x="16.3051%" y="805" width="0.0740%" height="15" fill="rgb(206,119,39)" fg:x="12786" fg:w="58"/><text x="16.5551%" y="815.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (11 samples, 0.01%)</title><rect x="16.3842%" y="549" width="0.0140%" height="15" fill="rgb(231,105,52)" fg:x="12848" fg:w="11"/><text x="16.6342%" y="559.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (11 samples, 0.01%)</title><rect x="16.3842%" y="533" width="0.0140%" height="15" fill="rgb(250,20,5)" fg:x="12848" fg:w="11"/><text x="16.6342%" y="543.50"></text></g><g><title> 32]&gt;::deserialize (11 samples, 0.01%)</title><rect x="16.3842%" y="517" width="0.0140%" height="15" fill="rgb(215,198,30)" fg:x="12848" fg:w="11"/><text x="16.6342%" y="527.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (11 samples, 0.01%)</title><rect x="16.3842%" y="501" width="0.0140%" height="15" fill="rgb(246,142,8)" fg:x="12848" fg:w="11"/><text x="16.6342%" y="511.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (11 samples, 0.01%)</title><rect x="16.3842%" y="485" width="0.0140%" height="15" fill="rgb(243,26,38)" fg:x="12848" fg:w="11"/><text x="16.6342%" y="495.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (11 samples, 0.01%)</title><rect x="16.3842%" y="469" width="0.0140%" height="15" fill="rgb(205,133,28)" fg:x="12848" fg:w="11"/><text x="16.6342%" y="479.50"></text></g><g><title>serde::de::SeqAccess::next_element (11 samples, 0.01%)</title><rect x="16.3842%" y="453" width="0.0140%" height="15" fill="rgb(212,34,0)" fg:x="12848" fg:w="11"/><text x="16.6342%" y="463.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (11 samples, 0.01%)</title><rect x="16.3842%" y="437" width="0.0140%" height="15" fill="rgb(251,226,22)" fg:x="12848" fg:w="11"/><text x="16.6342%" y="447.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 0.01%)</title><rect x="16.3842%" y="421" width="0.0140%" height="15" fill="rgb(252,119,9)" fg:x="12848" fg:w="11"/><text x="16.6342%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (11 samples, 0.01%)</title><rect x="16.3842%" y="405" width="0.0140%" height="15" fill="rgb(213,150,50)" fg:x="12848" fg:w="11"/><text x="16.6342%" y="415.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (11 samples, 0.01%)</title><rect x="16.3842%" y="389" width="0.0140%" height="15" fill="rgb(212,24,39)" fg:x="12848" fg:w="11"/><text x="16.6342%" y="399.50"></text></g><g><title>&lt;aptos_types::event::_::&lt;impl serde::de::Deserialize for aptos_types::event::EventKey&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (12 samples, 0.02%)</title><rect x="16.3842%" y="661" width="0.0153%" height="15" fill="rgb(213,46,39)" fg:x="12848" fg:w="12"/><text x="16.6342%" y="671.50"></text></g><g><title>serde::de::SeqAccess::next_element (12 samples, 0.02%)</title><rect x="16.3842%" y="645" width="0.0153%" height="15" fill="rgb(239,106,12)" fg:x="12848" fg:w="12"/><text x="16.6342%" y="655.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.02%)</title><rect x="16.3842%" y="629" width="0.0153%" height="15" fill="rgb(249,229,21)" fg:x="12848" fg:w="12"/><text x="16.6342%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.02%)</title><rect x="16.3842%" y="613" width="0.0153%" height="15" fill="rgb(212,158,3)" fg:x="12848" fg:w="12"/><text x="16.6342%" y="623.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (12 samples, 0.02%)</title><rect x="16.3842%" y="597" width="0.0153%" height="15" fill="rgb(253,26,48)" fg:x="12848" fg:w="12"/><text x="16.6342%" y="607.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (12 samples, 0.02%)</title><rect x="16.3842%" y="581" width="0.0153%" height="15" fill="rgb(238,178,20)" fg:x="12848" fg:w="12"/><text x="16.6342%" y="591.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (12 samples, 0.02%)</title><rect x="16.3842%" y="565" width="0.0153%" height="15" fill="rgb(208,86,15)" fg:x="12848" fg:w="12"/><text x="16.6342%" y="575.50"></text></g><g><title>bcs::de::from_bytes (17 samples, 0.02%)</title><rect x="16.3791%" y="709" width="0.0217%" height="15" fill="rgb(239,42,53)" fg:x="12844" fg:w="17"/><text x="16.6291%" y="719.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::de::Deserialize for aptos_types::event::EventKey&gt;::deserialize (17 samples, 0.02%)</title><rect x="16.3791%" y="693" width="0.0217%" height="15" fill="rgb(245,226,8)" fg:x="12844" fg:w="17"/><text x="16.6291%" y="703.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (17 samples, 0.02%)</title><rect x="16.3791%" y="677" width="0.0217%" height="15" fill="rgb(216,176,32)" fg:x="12844" fg:w="17"/><text x="16.6291%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="16.3791%" y="821" width="0.0242%" height="15" fill="rgb(231,186,21)" fg:x="12844" fg:w="19"/><text x="16.6291%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (19 samples, 0.02%)</title><rect x="16.3791%" y="805" width="0.0242%" height="15" fill="rgb(205,95,49)" fg:x="12844" fg:w="19"/><text x="16.6291%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.02%)</title><rect x="16.3791%" y="789" width="0.0242%" height="15" fill="rgb(217,145,8)" fg:x="12844" fg:w="19"/><text x="16.6291%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.02%)</title><rect x="16.3791%" y="773" width="0.0242%" height="15" fill="rgb(239,144,48)" fg:x="12844" fg:w="19"/><text x="16.6291%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.02%)</title><rect x="16.3791%" y="757" width="0.0242%" height="15" fill="rgb(214,189,23)" fg:x="12844" fg:w="19"/><text x="16.6291%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (19 samples, 0.02%)</title><rect x="16.3791%" y="741" width="0.0242%" height="15" fill="rgb(229,157,17)" fg:x="12844" fg:w="19"/><text x="16.6291%" y="751.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionOutput::into_change_set::{{closure}} (19 samples, 0.02%)</title><rect x="16.3791%" y="725" width="0.0242%" height="15" fill="rgb(230,5,48)" fg:x="12844" fg:w="19"/><text x="16.6291%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (85 samples, 0.11%)</title><rect x="16.2975%" y="949" width="0.1084%" height="15" fill="rgb(224,156,48)" fg:x="12780" fg:w="85"/><text x="16.5475%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (85 samples, 0.11%)</title><rect x="16.2975%" y="933" width="0.1084%" height="15" fill="rgb(223,14,29)" fg:x="12780" fg:w="85"/><text x="16.5475%" y="943.50"></text></g><g><title>core::iter::adapters::try_process (85 samples, 0.11%)</title><rect x="16.2975%" y="917" width="0.1084%" height="15" fill="rgb(229,96,36)" fg:x="12780" fg:w="85"/><text x="16.5475%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (85 samples, 0.11%)</title><rect x="16.2975%" y="901" width="0.1084%" height="15" fill="rgb(231,102,53)" fg:x="12780" fg:w="85"/><text x="16.5475%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (85 samples, 0.11%)</title><rect x="16.2975%" y="885" width="0.1084%" height="15" fill="rgb(210,77,38)" fg:x="12780" fg:w="85"/><text x="16.5475%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (85 samples, 0.11%)</title><rect x="16.2975%" y="869" width="0.1084%" height="15" fill="rgb(235,131,6)" fg:x="12780" fg:w="85"/><text x="16.5475%" y="879.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (85 samples, 0.11%)</title><rect x="16.2975%" y="853" width="0.1084%" height="15" fill="rgb(252,55,38)" fg:x="12780" fg:w="85"/><text x="16.5475%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (79 samples, 0.10%)</title><rect x="16.3051%" y="837" width="0.1007%" height="15" fill="rgb(246,38,14)" fg:x="12786" fg:w="79"/><text x="16.5551%" y="847.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionOutput::into_change_set (412 samples, 0.53%)</title><rect x="15.9034%" y="965" width="0.5254%" height="15" fill="rgb(242,27,5)" fg:x="12471" fg:w="412"/><text x="16.1534%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="16.4556%" y="517" width="0.0115%" height="15" fill="rgb(228,65,35)" fg:x="12904" fg:w="9"/><text x="16.7056%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="16.4556%" y="501" width="0.0115%" height="15" fill="rgb(245,93,11)" fg:x="12904" fg:w="9"/><text x="16.7056%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="16.4556%" y="485" width="0.0115%" height="15" fill="rgb(213,1,31)" fg:x="12904" fg:w="9"/><text x="16.7056%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="16.4556%" y="469" width="0.0115%" height="15" fill="rgb(237,205,14)" fg:x="12904" fg:w="9"/><text x="16.7056%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="16.4556%" y="453" width="0.0115%" height="15" fill="rgb(232,118,45)" fg:x="12904" fg:w="9"/><text x="16.7056%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (19 samples, 0.02%)</title><rect x="16.4505%" y="789" width="0.0242%" height="15" fill="rgb(218,5,6)" fg:x="12900" fg:w="19"/><text x="16.7005%" y="799.50"></text></g><g><title>aptos_vm::verifier::transaction_arg_validation::validate_combine_signer_and_txn_args::{{closure}} (19 samples, 0.02%)</title><rect x="16.4505%" y="773" width="0.0242%" height="15" fill="rgb(251,87,51)" fg:x="12900" fg:w="19"/><text x="16.7005%" y="783.50"></text></g><g><title>move_core_types::value::MoveValue::simple_serialize (17 samples, 0.02%)</title><rect x="16.4531%" y="757" width="0.0217%" height="15" fill="rgb(207,225,20)" fg:x="12902" fg:w="17"/><text x="16.7031%" y="767.50"></text></g><g><title>bcs::ser::to_bytes (15 samples, 0.02%)</title><rect x="16.4556%" y="741" width="0.0191%" height="15" fill="rgb(222,78,54)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="751.50"></text></g><g><title>bcs::ser::serialize_into (15 samples, 0.02%)</title><rect x="16.4556%" y="725" width="0.0191%" height="15" fill="rgb(232,85,16)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="735.50"></text></g><g><title>&lt;move_core_types::value::MoveValue as serde::ser::Serialize&gt;::serialize (15 samples, 0.02%)</title><rect x="16.4556%" y="709" width="0.0191%" height="15" fill="rgb(244,25,33)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="719.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (15 samples, 0.02%)</title><rect x="16.4556%" y="693" width="0.0191%" height="15" fill="rgb(233,24,36)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="703.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (15 samples, 0.02%)</title><rect x="16.4556%" y="677" width="0.0191%" height="15" fill="rgb(253,49,54)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (15 samples, 0.02%)</title><rect x="16.4556%" y="661" width="0.0191%" height="15" fill="rgb(245,12,22)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="671.50"></text></g><g><title> 32]&gt;::serialize (15 samples, 0.02%)</title><rect x="16.4556%" y="645" width="0.0191%" height="15" fill="rgb(253,141,28)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="655.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (15 samples, 0.02%)</title><rect x="16.4556%" y="629" width="0.0191%" height="15" fill="rgb(225,207,27)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (15 samples, 0.02%)</title><rect x="16.4556%" y="613" width="0.0191%" height="15" fill="rgb(220,84,2)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="623.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (15 samples, 0.02%)</title><rect x="16.4556%" y="597" width="0.0191%" height="15" fill="rgb(224,37,37)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="607.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (15 samples, 0.02%)</title><rect x="16.4556%" y="581" width="0.0191%" height="15" fill="rgb(220,143,18)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.02%)</title><rect x="16.4556%" y="565" width="0.0191%" height="15" fill="rgb(210,88,33)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.02%)</title><rect x="16.4556%" y="549" width="0.0191%" height="15" fill="rgb(219,87,51)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.02%)</title><rect x="16.4556%" y="533" width="0.0191%" height="15" fill="rgb(211,7,35)" fg:x="12904" fg:w="15"/><text x="16.7056%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.03%)</title><rect x="16.4441%" y="837" width="0.0319%" height="15" fill="rgb(232,77,2)" fg:x="12895" fg:w="25"/><text x="16.6941%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.03%)</title><rect x="16.4480%" y="821" width="0.0281%" height="15" fill="rgb(249,94,25)" fg:x="12898" fg:w="22"/><text x="16.6980%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.03%)</title><rect x="16.4480%" y="805" width="0.0281%" height="15" fill="rgb(215,112,2)" fg:x="12898" fg:w="22"/><text x="16.6980%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (27 samples, 0.03%)</title><rect x="16.4441%" y="885" width="0.0344%" height="15" fill="rgb(226,115,48)" fg:x="12895" fg:w="27"/><text x="16.6941%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (27 samples, 0.03%)</title><rect x="16.4441%" y="869" width="0.0344%" height="15" fill="rgb(249,196,10)" fg:x="12895" fg:w="27"/><text x="16.6941%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (27 samples, 0.03%)</title><rect x="16.4441%" y="853" width="0.0344%" height="15" fill="rgb(237,109,14)" fg:x="12895" fg:w="27"/><text x="16.6941%" y="863.50"></text></g><g><title>aptos_vm::verifier::transaction_arg_validation::validate_combine_signer_and_txn_args (40 samples, 0.05%)</title><rect x="16.4301%" y="965" width="0.0510%" height="15" fill="rgb(217,103,53)" fg:x="12884" fg:w="40"/><text x="16.6801%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (29 samples, 0.04%)</title><rect x="16.4441%" y="949" width="0.0370%" height="15" fill="rgb(244,137,9)" fg:x="12895" fg:w="29"/><text x="16.6941%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (29 samples, 0.04%)</title><rect x="16.4441%" y="933" width="0.0370%" height="15" fill="rgb(227,201,3)" fg:x="12895" fg:w="29"/><text x="16.6941%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 0.04%)</title><rect x="16.4441%" y="917" width="0.0370%" height="15" fill="rgb(243,94,6)" fg:x="12895" fg:w="29"/><text x="16.6941%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (29 samples, 0.04%)</title><rect x="16.4441%" y="901" width="0.0370%" height="15" fill="rgb(235,118,5)" fg:x="12895" fg:w="29"/><text x="16.6941%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::LoadedFunctionInstantiation&gt; (10 samples, 0.01%)</title><rect x="16.4811%" y="965" width="0.0128%" height="15" fill="rgb(247,10,30)" fg:x="12924" fg:w="10"/><text x="16.7311%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (8 samples, 0.01%)</title><rect x="16.4990%" y="933" width="0.0102%" height="15" fill="rgb(205,26,28)" fg:x="12938" fg:w="8"/><text x="16.7490%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="16.4990%" y="917" width="0.0102%" height="15" fill="rgb(206,99,35)" fg:x="12938" fg:w="8"/><text x="16.7490%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (8 samples, 0.01%)</title><rect x="16.4990%" y="901" width="0.0102%" height="15" fill="rgb(238,130,40)" fg:x="12938" fg:w="8"/><text x="16.7490%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (8 samples, 0.01%)</title><rect x="16.4990%" y="885" width="0.0102%" height="15" fill="rgb(224,126,31)" fg:x="12938" fg:w="8"/><text x="16.7490%" y="895.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name (8 samples, 0.01%)</title><rect x="16.5105%" y="933" width="0.0102%" height="15" fill="rgb(254,105,17)" fg:x="12947" fg:w="8"/><text x="16.7605%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (8 samples, 0.01%)</title><rect x="16.5105%" y="917" width="0.0102%" height="15" fill="rgb(216,87,36)" fg:x="12947" fg:w="8"/><text x="16.7605%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="16.5105%" y="901" width="0.0102%" height="15" fill="rgb(240,21,12)" fg:x="12947" fg:w="8"/><text x="16.7605%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.01%)</title><rect x="16.5105%" y="885" width="0.0102%" height="15" fill="rgb(245,192,34)" fg:x="12947" fg:w="8"/><text x="16.7605%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="16.5105%" y="869" width="0.0102%" height="15" fill="rgb(226,100,49)" fg:x="12947" fg:w="8"/><text x="16.7605%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.03%)</title><rect x="16.5219%" y="757" width="0.0255%" height="15" fill="rgb(245,188,27)" fg:x="12956" fg:w="20"/><text x="16.7719%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (20 samples, 0.03%)</title><rect x="16.5219%" y="741" width="0.0255%" height="15" fill="rgb(212,170,8)" fg:x="12956" fg:w="20"/><text x="16.7719%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.03%)</title><rect x="16.5219%" y="725" width="0.0255%" height="15" fill="rgb(217,113,29)" fg:x="12956" fg:w="20"/><text x="16.7719%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.03%)</title><rect x="16.5219%" y="709" width="0.0255%" height="15" fill="rgb(237,30,3)" fg:x="12956" fg:w="20"/><text x="16.7719%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (20 samples, 0.03%)</title><rect x="16.5219%" y="693" width="0.0255%" height="15" fill="rgb(227,19,28)" fg:x="12956" fg:w="20"/><text x="16.7719%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (20 samples, 0.03%)</title><rect x="16.5219%" y="677" width="0.0255%" height="15" fill="rgb(239,172,45)" fg:x="12956" fg:w="20"/><text x="16.7719%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (17 samples, 0.02%)</title><rect x="16.5258%" y="661" width="0.0217%" height="15" fill="rgb(254,55,39)" fg:x="12959" fg:w="17"/><text x="16.7758%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_type (17 samples, 0.02%)</title><rect x="16.5258%" y="645" width="0.0217%" height="15" fill="rgb(249,208,12)" fg:x="12959" fg:w="17"/><text x="16.7758%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.03%)</title><rect x="16.5219%" y="789" width="0.0319%" height="15" fill="rgb(240,52,13)" fg:x="12956" fg:w="25"/><text x="16.7719%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (25 samples, 0.03%)</title><rect x="16.5219%" y="773" width="0.0319%" height="15" fill="rgb(252,149,13)" fg:x="12956" fg:w="25"/><text x="16.7719%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (43 samples, 0.05%)</title><rect x="16.5207%" y="917" width="0.0548%" height="15" fill="rgb(232,81,48)" fg:x="12955" fg:w="43"/><text x="16.7707%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (43 samples, 0.05%)</title><rect x="16.5207%" y="901" width="0.0548%" height="15" fill="rgb(222,144,2)" fg:x="12955" fg:w="43"/><text x="16.7707%" y="911.50"></text></g><g><title>core::iter::adapters::try_process (43 samples, 0.05%)</title><rect x="16.5207%" y="885" width="0.0548%" height="15" fill="rgb(216,81,32)" fg:x="12955" fg:w="43"/><text x="16.7707%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (43 samples, 0.05%)</title><rect x="16.5207%" y="869" width="0.0548%" height="15" fill="rgb(244,78,51)" fg:x="12955" fg:w="43"/><text x="16.7707%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (43 samples, 0.05%)</title><rect x="16.5207%" y="853" width="0.0548%" height="15" fill="rgb(217,66,21)" fg:x="12955" fg:w="43"/><text x="16.7707%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (43 samples, 0.05%)</title><rect x="16.5207%" y="837" width="0.0548%" height="15" fill="rgb(247,101,42)" fg:x="12955" fg:w="43"/><text x="16.7707%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 0.05%)</title><rect x="16.5219%" y="821" width="0.0536%" height="15" fill="rgb(227,81,39)" fg:x="12956" fg:w="42"/><text x="16.7719%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (42 samples, 0.05%)</title><rect x="16.5219%" y="805" width="0.0536%" height="15" fill="rgb(220,223,44)" fg:x="12956" fg:w="42"/><text x="16.7719%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="16.5538%" y="789" width="0.0217%" height="15" fill="rgb(205,218,2)" fg:x="12981" fg:w="17"/><text x="16.8038%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (17 samples, 0.02%)</title><rect x="16.5538%" y="773" width="0.0217%" height="15" fill="rgb(212,207,28)" fg:x="12981" fg:w="17"/><text x="16.8038%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.02%)</title><rect x="16.5538%" y="757" width="0.0217%" height="15" fill="rgb(224,12,41)" fg:x="12981" fg:w="17"/><text x="16.8038%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.02%)</title><rect x="16.5538%" y="741" width="0.0217%" height="15" fill="rgb(216,118,12)" fg:x="12981" fg:w="17"/><text x="16.8038%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.02%)</title><rect x="16.5538%" y="725" width="0.0217%" height="15" fill="rgb(252,97,46)" fg:x="12981" fg:w="17"/><text x="16.8038%" y="735.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (12 samples, 0.02%)</title><rect x="16.5602%" y="709" width="0.0153%" height="15" fill="rgb(244,206,19)" fg:x="12986" fg:w="12"/><text x="16.8102%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (12 samples, 0.02%)</title><rect x="16.5602%" y="693" width="0.0153%" height="15" fill="rgb(231,84,31)" fg:x="12986" fg:w="12"/><text x="16.8102%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_type (12 samples, 0.02%)</title><rect x="16.5602%" y="677" width="0.0153%" height="15" fill="rgb(244,133,0)" fg:x="12986" fg:w="12"/><text x="16.8102%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (12 samples, 0.02%)</title><rect x="16.5793%" y="917" width="0.0153%" height="15" fill="rgb(223,15,50)" fg:x="13001" fg:w="12"/><text x="16.8293%" y="927.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (12 samples, 0.02%)</title><rect x="16.5793%" y="901" width="0.0153%" height="15" fill="rgb(250,118,49)" fg:x="13001" fg:w="12"/><text x="16.8293%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (70 samples, 0.09%)</title><rect x="16.5207%" y="933" width="0.0893%" height="15" fill="rgb(248,25,38)" fg:x="12955" fg:w="70"/><text x="16.7707%" y="943.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (10 samples, 0.01%)</title><rect x="16.5972%" y="917" width="0.0128%" height="15" fill="rgb(215,70,14)" fg:x="13015" fg:w="10"/><text x="16.8472%" y="927.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (8 samples, 0.01%)</title><rect x="16.5997%" y="901" width="0.0102%" height="15" fill="rgb(215,28,15)" fg:x="13017" fg:w="8"/><text x="16.8497%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.01%)</title><rect x="16.5997%" y="885" width="0.0102%" height="15" fill="rgb(243,6,28)" fg:x="13017" fg:w="8"/><text x="16.8497%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.01%)</title><rect x="16.5997%" y="869" width="0.0102%" height="15" fill="rgb(222,130,1)" fg:x="13017" fg:w="8"/><text x="16.8497%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.01%)</title><rect x="16.5997%" y="853" width="0.0102%" height="15" fill="rgb(236,166,44)" fg:x="13017" fg:w="8"/><text x="16.8497%" y="863.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (8 samples, 0.01%)</title><rect x="16.6367%" y="789" width="0.0102%" height="15" fill="rgb(221,108,14)" fg:x="13046" fg:w="8"/><text x="16.8867%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="16.6367%" y="773" width="0.0102%" height="15" fill="rgb(252,3,45)" fg:x="13046" fg:w="8"/><text x="16.8867%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="16.6367%" y="757" width="0.0102%" height="15" fill="rgb(237,68,30)" fg:x="13046" fg:w="8"/><text x="16.8867%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.01%)</title><rect x="16.6367%" y="741" width="0.0102%" height="15" fill="rgb(211,79,22)" fg:x="13046" fg:w="8"/><text x="16.8867%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.03%)</title><rect x="16.6188%" y="917" width="0.0306%" height="15" fill="rgb(252,185,21)" fg:x="13032" fg:w="24"/><text x="16.8688%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (23 samples, 0.03%)</title><rect x="16.6201%" y="901" width="0.0293%" height="15" fill="rgb(225,189,26)" fg:x="13033" fg:w="23"/><text x="16.8701%" y="911.50"></text></g><g><title>core::iter::adapters::try_process (23 samples, 0.03%)</title><rect x="16.6201%" y="885" width="0.0293%" height="15" fill="rgb(241,30,40)" fg:x="13033" fg:w="23"/><text x="16.8701%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (23 samples, 0.03%)</title><rect x="16.6201%" y="869" width="0.0293%" height="15" fill="rgb(235,215,44)" fg:x="13033" fg:w="23"/><text x="16.8701%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.03%)</title><rect x="16.6201%" y="853" width="0.0293%" height="15" fill="rgb(205,8,29)" fg:x="13033" fg:w="23"/><text x="16.8701%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (23 samples, 0.03%)</title><rect x="16.6201%" y="837" width="0.0293%" height="15" fill="rgb(241,137,42)" fg:x="13033" fg:w="23"/><text x="16.8701%" y="847.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="16.6239%" y="821" width="0.0255%" height="15" fill="rgb(237,155,2)" fg:x="13036" fg:w="20"/><text x="16.8739%" y="831.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (11 samples, 0.01%)</title><rect x="16.6354%" y="805" width="0.0140%" height="15" fill="rgb(245,29,42)" fg:x="13045" fg:w="11"/><text x="16.8854%" y="815.50"></text></g><g><title>core::cmp::PartialEq::ne (281 samples, 0.36%)</title><rect x="16.6686%" y="837" width="0.3583%" height="15" fill="rgb(234,101,35)" fg:x="13071" fg:w="281"/><text x="16.9186%" y="847.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (281 samples, 0.36%)</title><rect x="16.6686%" y="821" width="0.3583%" height="15" fill="rgb(228,64,37)" fg:x="13071" fg:w="281"/><text x="16.9186%" y="831.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (25 samples, 0.03%)</title><rect x="17.0269%" y="789" width="0.0319%" height="15" fill="rgb(217,214,36)" fg:x="13352" fg:w="25"/><text x="17.2769%" y="799.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (25 samples, 0.03%)</title><rect x="17.0269%" y="773" width="0.0319%" height="15" fill="rgb(243,70,3)" fg:x="13352" fg:w="25"/><text x="17.2769%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (25 samples, 0.03%)</title><rect x="17.0269%" y="757" width="0.0319%" height="15" fill="rgb(253,158,52)" fg:x="13352" fg:w="25"/><text x="17.2769%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (25 samples, 0.03%)</title><rect x="17.0269%" y="741" width="0.0319%" height="15" fill="rgb(234,111,54)" fg:x="13352" fg:w="25"/><text x="17.2769%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (19 samples, 0.02%)</title><rect x="17.0346%" y="725" width="0.0242%" height="15" fill="rgb(217,70,32)" fg:x="13358" fg:w="19"/><text x="17.2846%" y="735.50"></text></g><g><title>&lt;aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size::Visitor as move_vm_types::views::ValueVisitor&gt;::visit_u64 (19 samples, 0.02%)</title><rect x="17.0346%" y="709" width="0.0242%" height="15" fill="rgb(234,18,33)" fg:x="13358" fg:w="19"/><text x="17.2846%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (11 samples, 0.01%)</title><rect x="17.0767%" y="741" width="0.0140%" height="15" fill="rgb(234,12,49)" fg:x="13391" fg:w="11"/><text x="17.3267%" y="751.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (15 samples, 0.02%)</title><rect x="17.0767%" y="773" width="0.0191%" height="15" fill="rgb(236,10,21)" fg:x="13391" fg:w="15"/><text x="17.3267%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (15 samples, 0.02%)</title><rect x="17.0767%" y="757" width="0.0191%" height="15" fill="rgb(248,182,45)" fg:x="13391" fg:w="15"/><text x="17.3267%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="17.1009%" y="677" width="0.0166%" height="15" fill="rgb(217,95,36)" fg:x="13410" fg:w="13"/><text x="17.3509%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (13 samples, 0.02%)</title><rect x="17.1009%" y="661" width="0.0166%" height="15" fill="rgb(212,110,31)" fg:x="13410" fg:w="13"/><text x="17.3509%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (12 samples, 0.02%)</title><rect x="17.1022%" y="645" width="0.0153%" height="15" fill="rgb(206,32,53)" fg:x="13411" fg:w="12"/><text x="17.3522%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.03%)</title><rect x="17.0971%" y="741" width="0.0306%" height="15" fill="rgb(246,141,37)" fg:x="13407" fg:w="24"/><text x="17.3471%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (21 samples, 0.03%)</title><rect x="17.1009%" y="725" width="0.0268%" height="15" fill="rgb(219,16,7)" fg:x="13410" fg:w="21"/><text x="17.3509%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (21 samples, 0.03%)</title><rect x="17.1009%" y="709" width="0.0268%" height="15" fill="rgb(230,205,45)" fg:x="13410" fg:w="21"/><text x="17.3509%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (21 samples, 0.03%)</title><rect x="17.1009%" y="693" width="0.0268%" height="15" fill="rgb(231,43,49)" fg:x="13410" fg:w="21"/><text x="17.3509%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (8 samples, 0.01%)</title><rect x="17.1175%" y="677" width="0.0102%" height="15" fill="rgb(212,106,34)" fg:x="13423" fg:w="8"/><text x="17.3675%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="17.1175%" y="661" width="0.0102%" height="15" fill="rgb(206,83,17)" fg:x="13423" fg:w="8"/><text x="17.3675%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="17.1175%" y="645" width="0.0102%" height="15" fill="rgb(244,154,49)" fg:x="13423" fg:w="8"/><text x="17.3675%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="17.1175%" y="629" width="0.0102%" height="15" fill="rgb(244,149,49)" fg:x="13423" fg:w="8"/><text x="17.3675%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (21 samples, 0.03%)</title><rect x="17.1328%" y="741" width="0.0268%" height="15" fill="rgb(227,134,18)" fg:x="13435" fg:w="21"/><text x="17.3828%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (112 samples, 0.14%)</title><rect x="17.0269%" y="837" width="0.1428%" height="15" fill="rgb(237,116,36)" fg:x="13352" fg:w="112"/><text x="17.2769%" y="847.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame::{{closure}} (112 samples, 0.14%)</title><rect x="17.0269%" y="821" width="0.1428%" height="15" fill="rgb(205,129,40)" fg:x="13352" fg:w="112"/><text x="17.2769%" y="831.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (112 samples, 0.14%)</title><rect x="17.0269%" y="805" width="0.1428%" height="15" fill="rgb(236,178,4)" fg:x="13352" fg:w="112"/><text x="17.2769%" y="815.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (87 samples, 0.11%)</title><rect x="17.0588%" y="789" width="0.1109%" height="15" fill="rgb(251,76,53)" fg:x="13377" fg:w="87"/><text x="17.3088%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (58 samples, 0.07%)</title><rect x="17.0958%" y="773" width="0.0740%" height="15" fill="rgb(242,92,40)" fg:x="13406" fg:w="58"/><text x="17.3458%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (58 samples, 0.07%)</title><rect x="17.0958%" y="757" width="0.0740%" height="15" fill="rgb(209,45,30)" fg:x="13406" fg:w="58"/><text x="17.3458%" y="767.50"></text></g><g><title>sdallocx (8 samples, 0.01%)</title><rect x="17.1595%" y="741" width="0.0102%" height="15" fill="rgb(218,157,36)" fg:x="13456" fg:w="8"/><text x="17.4095%" y="751.50"></text></g><g><title>isfree (8 samples, 0.01%)</title><rect x="17.1595%" y="725" width="0.0102%" height="15" fill="rgb(222,186,16)" fg:x="13456" fg:w="8"/><text x="17.4095%" y="735.50"></text></g><g><title>isdalloct (8 samples, 0.01%)</title><rect x="17.1595%" y="709" width="0.0102%" height="15" fill="rgb(254,72,35)" fg:x="13456" fg:w="8"/><text x="17.4095%" y="719.50"></text></g><g><title>arena_sdalloc (8 samples, 0.01%)</title><rect x="17.1595%" y="693" width="0.0102%" height="15" fill="rgb(224,25,35)" fg:x="13456" fg:w="8"/><text x="17.4095%" y="703.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.01%)</title><rect x="17.1595%" y="677" width="0.0102%" height="15" fill="rgb(206,135,52)" fg:x="13456" fg:w="8"/><text x="17.4095%" y="687.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame (404 samples, 0.52%)</title><rect x="16.6609%" y="885" width="0.5152%" height="15" fill="rgb(229,174,47)" fg:x="13065" fg:w="404"/><text x="16.9109%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (404 samples, 0.52%)</title><rect x="16.6609%" y="869" width="0.5152%" height="15" fill="rgb(242,184,21)" fg:x="13065" fg:w="404"/><text x="16.9109%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (404 samples, 0.52%)</title><rect x="16.6609%" y="853" width="0.5152%" height="15" fill="rgb(213,22,45)" fg:x="13065" fg:w="404"/><text x="16.9109%" y="863.50"></text></g><g><title>__rust_dealloc (15 samples, 0.02%)</title><rect x="17.1761%" y="885" width="0.0191%" height="15" fill="rgb(237,81,54)" fg:x="13469" fg:w="15"/><text x="17.4261%" y="895.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="17.1812%" y="869" width="0.0140%" height="15" fill="rgb(248,177,18)" fg:x="13473" fg:w="11"/><text x="17.4312%" y="879.50"></text></g><g><title>jemallocator::layout_to_flags (11 samples, 0.01%)</title><rect x="17.1812%" y="853" width="0.0140%" height="15" fill="rgb(254,31,16)" fg:x="13473" fg:w="11"/><text x="17.4312%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.07%)</title><rect x="17.2475%" y="789" width="0.0740%" height="15" fill="rgb(235,20,31)" fg:x="13525" fg:w="58"/><text x="17.4975%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (58 samples, 0.07%)</title><rect x="17.2475%" y="773" width="0.0740%" height="15" fill="rgb(240,56,43)" fg:x="13525" fg:w="58"/><text x="17.4975%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (58 samples, 0.07%)</title><rect x="17.2475%" y="757" width="0.0740%" height="15" fill="rgb(237,197,51)" fg:x="13525" fg:w="58"/><text x="17.4975%" y="767.50"></text></g><g><title>sdallocx (50 samples, 0.06%)</title><rect x="17.2577%" y="741" width="0.0638%" height="15" fill="rgb(241,162,44)" fg:x="13533" fg:w="50"/><text x="17.5077%" y="751.50"></text></g><g><title>isfree (50 samples, 0.06%)</title><rect x="17.2577%" y="725" width="0.0638%" height="15" fill="rgb(224,23,20)" fg:x="13533" fg:w="50"/><text x="17.5077%" y="735.50"></text></g><g><title>isdalloct (50 samples, 0.06%)</title><rect x="17.2577%" y="709" width="0.0638%" height="15" fill="rgb(250,109,34)" fg:x="13533" fg:w="50"/><text x="17.5077%" y="719.50"></text></g><g><title>arena_sdalloc (50 samples, 0.06%)</title><rect x="17.2577%" y="693" width="0.0638%" height="15" fill="rgb(214,175,50)" fg:x="13533" fg:w="50"/><text x="17.5077%" y="703.50"></text></g><g><title>tcache_dalloc_small (50 samples, 0.06%)</title><rect x="17.2577%" y="677" width="0.0638%" height="15" fill="rgb(213,182,5)" fg:x="13533" fg:w="50"/><text x="17.5077%" y="687.50"></text></g><g><title>__rust_dealloc (13 samples, 0.02%)</title><rect x="17.3215%" y="789" width="0.0166%" height="15" fill="rgb(209,199,19)" fg:x="13583" fg:w="13"/><text x="17.5715%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (108 samples, 0.14%)</title><rect x="17.2475%" y="805" width="0.1377%" height="15" fill="rgb(236,224,42)" fg:x="13525" fg:w="108"/><text x="17.4975%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (37 samples, 0.05%)</title><rect x="17.3381%" y="789" width="0.0472%" height="15" fill="rgb(246,226,29)" fg:x="13596" fg:w="37"/><text x="17.5881%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (157 samples, 0.20%)</title><rect x="17.1965%" y="853" width="0.2002%" height="15" fill="rgb(227,223,11)" fg:x="13485" fg:w="157"/><text x="17.4465%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (120 samples, 0.15%)</title><rect x="17.2437%" y="837" width="0.1530%" height="15" fill="rgb(219,7,51)" fg:x="13522" fg:w="120"/><text x="17.4937%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (120 samples, 0.15%)</title><rect x="17.2437%" y="821" width="0.1530%" height="15" fill="rgb(245,167,10)" fg:x="13522" fg:w="120"/><text x="17.4937%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (9 samples, 0.01%)</title><rect x="17.3853%" y="805" width="0.0115%" height="15" fill="rgb(237,224,16)" fg:x="13633" fg:w="9"/><text x="17.6353%" y="815.50"></text></g><g><title>__rust_dealloc (16 samples, 0.02%)</title><rect x="17.3967%" y="789" width="0.0204%" height="15" fill="rgb(226,132,13)" fg:x="13642" fg:w="16"/><text x="17.6467%" y="799.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.02%)</title><rect x="17.3967%" y="773" width="0.0204%" height="15" fill="rgb(214,140,3)" fg:x="13642" fg:w="16"/><text x="17.6467%" y="783.50"></text></g><g><title>jemallocator::layout_to_flags (8 samples, 0.01%)</title><rect x="17.4069%" y="757" width="0.0102%" height="15" fill="rgb(221,177,4)" fg:x="13650" fg:w="8"/><text x="17.6569%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (61 samples, 0.08%)</title><rect x="17.3967%" y="821" width="0.0778%" height="15" fill="rgb(238,139,3)" fg:x="13642" fg:w="61"/><text x="17.6467%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (61 samples, 0.08%)</title><rect x="17.3967%" y="805" width="0.0778%" height="15" fill="rgb(216,17,39)" fg:x="13642" fg:w="61"/><text x="17.6467%" y="815.50"></text></g><g><title>sdallocx (44 samples, 0.06%)</title><rect x="17.4184%" y="789" width="0.0561%" height="15" fill="rgb(238,120,9)" fg:x="13659" fg:w="44"/><text x="17.6684%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (241 samples, 0.31%)</title><rect x="17.1965%" y="869" width="0.3073%" height="15" fill="rgb(244,92,53)" fg:x="13485" fg:w="241"/><text x="17.4465%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (84 samples, 0.11%)</title><rect x="17.3967%" y="853" width="0.1071%" height="15" fill="rgb(224,148,33)" fg:x="13642" fg:w="84"/><text x="17.6467%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.11%)</title><rect x="17.3967%" y="837" width="0.1071%" height="15" fill="rgb(243,6,36)" fg:x="13642" fg:w="84"/><text x="17.6467%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (23 samples, 0.03%)</title><rect x="17.4745%" y="821" width="0.0293%" height="15" fill="rgb(230,102,11)" fg:x="13703" fg:w="23"/><text x="17.7245%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (23 samples, 0.03%)</title><rect x="17.4745%" y="805" width="0.0293%" height="15" fill="rgb(234,148,36)" fg:x="13703" fg:w="23"/><text x="17.7245%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="17.5357%" y="773" width="0.0179%" height="15" fill="rgb(251,153,25)" fg:x="13751" fg:w="14"/><text x="17.7857%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (14 samples, 0.02%)</title><rect x="17.5357%" y="757" width="0.0179%" height="15" fill="rgb(215,129,8)" fg:x="13751" fg:w="14"/><text x="17.7857%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (14 samples, 0.02%)</title><rect x="17.5357%" y="741" width="0.0179%" height="15" fill="rgb(224,128,35)" fg:x="13751" fg:w="14"/><text x="17.7857%" y="751.50"></text></g><g><title>__rust_dealloc (18 samples, 0.02%)</title><rect x="17.5625%" y="709" width="0.0230%" height="15" fill="rgb(237,56,52)" fg:x="13772" fg:w="18"/><text x="17.8125%" y="719.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.02%)</title><rect x="17.5689%" y="693" width="0.0166%" height="15" fill="rgb(234,213,19)" fg:x="13777" fg:w="13"/><text x="17.8189%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.13%)</title><rect x="17.5141%" y="837" width="0.1288%" height="15" fill="rgb(252,82,23)" fg:x="13734" fg:w="101"/><text x="17.7641%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (84 samples, 0.11%)</title><rect x="17.5357%" y="821" width="0.1071%" height="15" fill="rgb(254,201,21)" fg:x="13751" fg:w="84"/><text x="17.7857%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (84 samples, 0.11%)</title><rect x="17.5357%" y="805" width="0.1071%" height="15" fill="rgb(250,186,11)" fg:x="13751" fg:w="84"/><text x="17.7857%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (84 samples, 0.11%)</title><rect x="17.5357%" y="789" width="0.1071%" height="15" fill="rgb(211,174,5)" fg:x="13751" fg:w="84"/><text x="17.7857%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (70 samples, 0.09%)</title><rect x="17.5536%" y="773" width="0.0893%" height="15" fill="rgb(214,121,10)" fg:x="13765" fg:w="70"/><text x="17.8036%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.09%)</title><rect x="17.5536%" y="757" width="0.0893%" height="15" fill="rgb(241,66,2)" fg:x="13765" fg:w="70"/><text x="17.8036%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (70 samples, 0.09%)</title><rect x="17.5536%" y="741" width="0.0893%" height="15" fill="rgb(220,167,19)" fg:x="13765" fg:w="70"/><text x="17.8036%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (70 samples, 0.09%)</title><rect x="17.5536%" y="725" width="0.0893%" height="15" fill="rgb(231,54,50)" fg:x="13765" fg:w="70"/><text x="17.8036%" y="735.50"></text></g><g><title>sdallocx (44 samples, 0.06%)</title><rect x="17.5867%" y="709" width="0.0561%" height="15" fill="rgb(239,217,53)" fg:x="13791" fg:w="44"/><text x="17.8367%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::interpreter::Frame&gt; (355 samples, 0.45%)</title><rect x="17.1965%" y="885" width="0.4527%" height="15" fill="rgb(248,8,0)" fg:x="13485" fg:w="355"/><text x="17.4465%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (114 samples, 0.15%)</title><rect x="17.5039%" y="869" width="0.1454%" height="15" fill="rgb(229,118,37)" fg:x="13726" fg:w="114"/><text x="17.7539%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (114 samples, 0.15%)</title><rect x="17.5039%" y="853" width="0.1454%" height="15" fill="rgb(253,223,43)" fg:x="13726" fg:w="114"/><text x="17.7539%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::pop (13 samples, 0.02%)</title><rect x="17.6492%" y="885" width="0.0166%" height="15" fill="rgb(211,77,36)" fg:x="13840" fg:w="13"/><text x="17.8992%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="17.6862%" y="821" width="0.0102%" height="15" fill="rgb(219,3,53)" fg:x="13869" fg:w="8"/><text x="17.9362%" y="831.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::push (25 samples, 0.03%)</title><rect x="17.6658%" y="885" width="0.0319%" height="15" fill="rgb(244,45,42)" fg:x="13853" fg:w="25"/><text x="17.9158%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.01%)</title><rect x="17.6862%" y="869" width="0.0115%" height="15" fill="rgb(225,95,27)" fg:x="13869" fg:w="9"/><text x="17.9362%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (9 samples, 0.01%)</title><rect x="17.6862%" y="853" width="0.0115%" height="15" fill="rgb(207,74,8)" fg:x="13869" fg:w="9"/><text x="17.9362%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="17.6862%" y="837" width="0.0115%" height="15" fill="rgb(243,63,36)" fg:x="13869" fg:w="9"/><text x="17.9362%" y="847.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="17.7002%" y="853" width="0.0115%" height="15" fill="rgb(211,180,12)" fg:x="13880" fg:w="9"/><text x="17.9502%" y="863.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (9 samples, 0.01%)</title><rect x="17.7002%" y="837" width="0.0115%" height="15" fill="rgb(254,166,49)" fg:x="13880" fg:w="9"/><text x="17.9502%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (9 samples, 0.01%)</title><rect x="17.7002%" y="821" width="0.0115%" height="15" fill="rgb(205,19,0)" fg:x="13880" fg:w="9"/><text x="17.9502%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (9 samples, 0.01%)</title><rect x="17.7002%" y="805" width="0.0115%" height="15" fill="rgb(224,172,32)" fg:x="13880" fg:w="9"/><text x="17.9502%" y="815.50"></text></g><g><title>core::mem::replace (9 samples, 0.01%)</title><rect x="17.7002%" y="789" width="0.0115%" height="15" fill="rgb(254,136,30)" fg:x="13880" fg:w="9"/><text x="17.9502%" y="799.50"></text></g><g><title>core::ptr::write (9 samples, 0.01%)</title><rect x="17.7002%" y="773" width="0.0115%" height="15" fill="rgb(246,19,35)" fg:x="13880" fg:w="9"/><text x="17.9502%" y="783.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (93 samples, 0.12%)</title><rect x="17.7117%" y="821" width="0.1186%" height="15" fill="rgb(219,24,36)" fg:x="13889" fg:w="93"/><text x="17.9617%" y="831.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (93 samples, 0.12%)</title><rect x="17.7117%" y="805" width="0.1186%" height="15" fill="rgb(251,55,1)" fg:x="13889" fg:w="93"/><text x="17.9617%" y="815.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (93 samples, 0.12%)</title><rect x="17.7117%" y="789" width="0.1186%" height="15" fill="rgb(218,117,39)" fg:x="13889" fg:w="93"/><text x="17.9617%" y="799.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (93 samples, 0.12%)</title><rect x="17.7117%" y="773" width="0.1186%" height="15" fill="rgb(248,169,11)" fg:x="13889" fg:w="93"/><text x="17.9617%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (93 samples, 0.12%)</title><rect x="17.7117%" y="757" width="0.1186%" height="15" fill="rgb(244,40,44)" fg:x="13889" fg:w="93"/><text x="17.9617%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (93 samples, 0.12%)</title><rect x="17.7117%" y="741" width="0.1186%" height="15" fill="rgb(234,62,37)" fg:x="13889" fg:w="93"/><text x="17.9617%" y="751.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_copy_loc (260 samples, 0.33%)</title><rect x="17.7117%" y="853" width="0.3316%" height="15" fill="rgb(207,117,42)" fg:x="13889" fg:w="260"/><text x="17.9617%" y="863.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size_stack_and_heap (260 samples, 0.33%)</title><rect x="17.7117%" y="837" width="0.3316%" height="15" fill="rgb(213,43,2)" fg:x="13889" fg:w="260"/><text x="17.9617%" y="847.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (167 samples, 0.21%)</title><rect x="17.8303%" y="821" width="0.2130%" height="15" fill="rgb(244,202,51)" fg:x="13982" fg:w="167"/><text x="18.0803%" y="831.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (167 samples, 0.21%)</title><rect x="17.8303%" y="805" width="0.2130%" height="15" fill="rgb(253,174,46)" fg:x="13982" fg:w="167"/><text x="18.0803%" y="815.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (167 samples, 0.21%)</title><rect x="17.8303%" y="789" width="0.2130%" height="15" fill="rgb(251,23,1)" fg:x="13982" fg:w="167"/><text x="18.0803%" y="799.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (167 samples, 0.21%)</title><rect x="17.8303%" y="773" width="0.2130%" height="15" fill="rgb(253,26,1)" fg:x="13982" fg:w="167"/><text x="18.0803%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (163 samples, 0.21%)</title><rect x="17.8354%" y="757" width="0.2079%" height="15" fill="rgb(216,89,31)" fg:x="13986" fg:w="163"/><text x="18.0854%" y="767.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_eq (27 samples, 0.03%)</title><rect x="18.0433%" y="853" width="0.0344%" height="15" fill="rgb(209,109,5)" fg:x="14149" fg:w="27"/><text x="18.2933%" y="863.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_neq (11 samples, 0.01%)</title><rect x="18.0777%" y="853" width="0.0140%" height="15" fill="rgb(229,63,13)" fg:x="14176" fg:w="11"/><text x="18.3277%" y="863.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_pop (9 samples, 0.01%)</title><rect x="18.0917%" y="853" width="0.0115%" height="15" fill="rgb(238,137,54)" fg:x="14187" fg:w="9"/><text x="18.3417%" y="863.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (9 samples, 0.01%)</title><rect x="18.0917%" y="837" width="0.0115%" height="15" fill="rgb(228,1,9)" fg:x="14187" fg:w="9"/><text x="18.3417%" y="847.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (332 samples, 0.42%)</title><rect x="18.1032%" y="805" width="0.4234%" height="15" fill="rgb(249,120,48)" fg:x="14196" fg:w="332"/><text x="18.3532%" y="815.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (332 samples, 0.42%)</title><rect x="18.1032%" y="789" width="0.4234%" height="15" fill="rgb(209,72,36)" fg:x="14196" fg:w="332"/><text x="18.3532%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_indexed (24 samples, 0.03%)</title><rect x="18.4960%" y="773" width="0.0306%" height="15" fill="rgb(247,98,49)" fg:x="14504" fg:w="24"/><text x="18.7460%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (24 samples, 0.03%)</title><rect x="18.4960%" y="757" width="0.0306%" height="15" fill="rgb(233,75,36)" fg:x="14504" fg:w="24"/><text x="18.7460%" y="767.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (335 samples, 0.43%)</title><rect x="18.1032%" y="821" width="0.4272%" height="15" fill="rgb(225,14,24)" fg:x="14196" fg:w="335"/><text x="18.3532%" y="831.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (108 samples, 0.14%)</title><rect x="18.5304%" y="773" width="0.1377%" height="15" fill="rgb(237,193,20)" fg:x="14531" fg:w="108"/><text x="18.7804%" y="783.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (108 samples, 0.14%)</title><rect x="18.5304%" y="757" width="0.1377%" height="15" fill="rgb(239,122,19)" fg:x="14531" fg:w="108"/><text x="18.7804%" y="767.50"></text></g><g><title>core::cell::BorrowRef::new (108 samples, 0.14%)</title><rect x="18.5304%" y="741" width="0.1377%" height="15" fill="rgb(231,220,10)" fg:x="14531" fg:w="108"/><text x="18.7804%" y="751.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (108 samples, 0.14%)</title><rect x="18.5304%" y="725" width="0.1377%" height="15" fill="rgb(220,66,15)" fg:x="14531" fg:w="108"/><text x="18.7804%" y="735.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (108 samples, 0.14%)</title><rect x="18.5304%" y="709" width="0.1377%" height="15" fill="rgb(215,171,52)" fg:x="14531" fg:w="108"/><text x="18.7804%" y="719.50"></text></g><g><title>core::mem::replace (108 samples, 0.14%)</title><rect x="18.5304%" y="693" width="0.1377%" height="15" fill="rgb(241,169,50)" fg:x="14531" fg:w="108"/><text x="18.7804%" y="703.50"></text></g><g><title>core::ptr::write (108 samples, 0.14%)</title><rect x="18.5304%" y="677" width="0.1377%" height="15" fill="rgb(236,189,0)" fg:x="14531" fg:w="108"/><text x="18.7804%" y="687.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_read_ref (458 samples, 0.58%)</title><rect x="18.1032%" y="853" width="0.5841%" height="15" fill="rgb(217,147,20)" fg:x="14196" fg:w="458"/><text x="18.3532%" y="863.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size_stack_and_heap (458 samples, 0.58%)</title><rect x="18.1032%" y="837" width="0.5841%" height="15" fill="rgb(206,188,39)" fg:x="14196" fg:w="458"/><text x="18.3532%" y="847.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (123 samples, 0.16%)</title><rect x="18.5304%" y="821" width="0.1569%" height="15" fill="rgb(227,118,25)" fg:x="14531" fg:w="123"/><text x="18.7804%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (123 samples, 0.16%)</title><rect x="18.5304%" y="805" width="0.1569%" height="15" fill="rgb(248,171,40)" fg:x="14531" fg:w="123"/><text x="18.7804%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_indexed (123 samples, 0.16%)</title><rect x="18.5304%" y="789" width="0.1569%" height="15" fill="rgb(251,90,54)" fg:x="14531" fg:w="123"/><text x="18.7804%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (15 samples, 0.02%)</title><rect x="18.6681%" y="773" width="0.0191%" height="15" fill="rgb(234,11,46)" fg:x="14639" fg:w="15"/><text x="18.9181%" y="783.50"></text></g><g><title>&lt;aptos_gas::misc::AbstractValueSizeVisitor as move_vm_types::views::ValueVisitor&gt;::visit_u64 (15 samples, 0.02%)</title><rect x="18.6681%" y="757" width="0.0191%" height="15" fill="rgb(229,134,13)" fg:x="14639" fg:w="15"/><text x="18.9181%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (65 samples, 0.08%)</title><rect x="18.7013%" y="853" width="0.0829%" height="15" fill="rgb(223,129,3)" fg:x="14665" fg:w="65"/><text x="18.9513%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (8 samples, 0.01%)</title><rect x="18.7740%" y="837" width="0.0102%" height="15" fill="rgb(221,124,13)" fg:x="14722" fg:w="8"/><text x="19.0240%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::VectorRef&gt; (40 samples, 0.05%)</title><rect x="18.7842%" y="853" width="0.0510%" height="15" fill="rgb(234,3,18)" fg:x="14730" fg:w="40"/><text x="19.0342%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ContainerRef&gt; (40 samples, 0.05%)</title><rect x="18.7842%" y="837" width="0.0510%" height="15" fill="rgb(249,199,20)" fg:x="14730" fg:w="40"/><text x="19.0342%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (40 samples, 0.05%)</title><rect x="18.7842%" y="821" width="0.0510%" height="15" fill="rgb(224,134,6)" fg:x="14730" fg:w="40"/><text x="19.0342%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4,038 samples, 5.15%)</title><rect x="19.7891%" y="837" width="5.1494%" height="15" fill="rgb(254,83,26)" fg:x="15518" fg:w="4038"/><text x="20.0391%" y="847.50">&lt;core:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="26.2163%" y="629" width="0.0140%" height="15" fill="rgb(217,88,9)" fg:x="20558" fg:w="11"/><text x="26.4663%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="26.2163%" y="613" width="0.0140%" height="15" fill="rgb(225,73,2)" fg:x="20558" fg:w="11"/><text x="26.4663%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (11 samples, 0.01%)</title><rect x="26.2163%" y="597" width="0.0140%" height="15" fill="rgb(226,44,39)" fg:x="20558" fg:w="11"/><text x="26.4663%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="26.2163%" y="581" width="0.0140%" height="15" fill="rgb(228,53,17)" fg:x="20558" fg:w="11"/><text x="26.4663%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="26.2163%" y="565" width="0.0140%" height="15" fill="rgb(212,27,27)" fg:x="20558" fg:w="11"/><text x="26.4663%" y="575.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="26.2163%" y="549" width="0.0140%" height="15" fill="rgb(241,50,6)" fg:x="20558" fg:w="11"/><text x="26.4663%" y="559.50"></text></g><g><title>mallocx (11 samples, 0.01%)</title><rect x="26.2163%" y="533" width="0.0140%" height="15" fill="rgb(225,28,51)" fg:x="20558" fg:w="11"/><text x="26.4663%" y="543.50"></text></g><g><title>imalloc (11 samples, 0.01%)</title><rect x="26.2163%" y="517" width="0.0140%" height="15" fill="rgb(215,33,16)" fg:x="20558" fg:w="11"/><text x="26.4663%" y="527.50"></text></g><g><title>imalloc_body (11 samples, 0.01%)</title><rect x="26.2163%" y="501" width="0.0140%" height="15" fill="rgb(243,40,39)" fg:x="20558" fg:w="11"/><text x="26.4663%" y="511.50"></text></g><g><title>imalloc_no_sample (11 samples, 0.01%)</title><rect x="26.2163%" y="485" width="0.0140%" height="15" fill="rgb(225,11,42)" fg:x="20558" fg:w="11"/><text x="26.4663%" y="495.50"></text></g><g><title>iallocztm (11 samples, 0.01%)</title><rect x="26.2163%" y="469" width="0.0140%" height="15" fill="rgb(241,220,38)" fg:x="20558" fg:w="11"/><text x="26.4663%" y="479.50"></text></g><g><title>arena_malloc (11 samples, 0.01%)</title><rect x="26.2163%" y="453" width="0.0140%" height="15" fill="rgb(244,52,35)" fg:x="20558" fg:w="11"/><text x="26.4663%" y="463.50"></text></g><g><title>tcache_alloc_small (8 samples, 0.01%)</title><rect x="26.2201%" y="437" width="0.0102%" height="15" fill="rgb(246,42,46)" fg:x="20561" fg:w="8"/><text x="26.4701%" y="447.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (8 samples, 0.01%)</title><rect x="26.2201%" y="421" width="0.0102%" height="15" fill="rgb(205,184,13)" fg:x="20561" fg:w="8"/><text x="26.4701%" y="431.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (8 samples, 0.01%)</title><rect x="26.2201%" y="405" width="0.0102%" height="15" fill="rgb(209,48,36)" fg:x="20561" fg:w="8"/><text x="26.4701%" y="415.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (46 samples, 0.06%)</title><rect x="26.1805%" y="709" width="0.0587%" height="15" fill="rgb(244,34,51)" fg:x="20530" fg:w="46"/><text x="26.4305%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="26.2163%" y="693" width="0.0230%" height="15" fill="rgb(221,107,33)" fg:x="20558" fg:w="18"/><text x="26.4663%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="26.2163%" y="677" width="0.0230%" height="15" fill="rgb(224,203,12)" fg:x="20558" fg:w="18"/><text x="26.4663%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="26.2163%" y="661" width="0.0230%" height="15" fill="rgb(230,215,18)" fg:x="20558" fg:w="18"/><text x="26.4663%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="26.2163%" y="645" width="0.0230%" height="15" fill="rgb(206,185,35)" fg:x="20558" fg:w="18"/><text x="26.4663%" y="655.50"></text></g><g><title>__rust_alloc (10 samples, 0.01%)</title><rect x="26.2443%" y="613" width="0.0128%" height="15" fill="rgb(228,140,34)" fg:x="20580" fg:w="10"/><text x="26.4943%" y="623.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (10 samples, 0.01%)</title><rect x="26.2443%" y="597" width="0.0128%" height="15" fill="rgb(208,93,13)" fg:x="20580" fg:w="10"/><text x="26.4943%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43 samples, 0.05%)</title><rect x="26.2392%" y="709" width="0.0548%" height="15" fill="rgb(221,193,39)" fg:x="20576" fg:w="43"/><text x="26.4892%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43 samples, 0.05%)</title><rect x="26.2392%" y="693" width="0.0548%" height="15" fill="rgb(241,132,34)" fg:x="20576" fg:w="43"/><text x="26.4892%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (43 samples, 0.05%)</title><rect x="26.2392%" y="677" width="0.0548%" height="15" fill="rgb(221,141,10)" fg:x="20576" fg:w="43"/><text x="26.4892%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43 samples, 0.05%)</title><rect x="26.2392%" y="661" width="0.0548%" height="15" fill="rgb(226,90,31)" fg:x="20576" fg:w="43"/><text x="26.4892%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.05%)</title><rect x="26.2392%" y="645" width="0.0548%" height="15" fill="rgb(243,75,5)" fg:x="20576" fg:w="43"/><text x="26.4892%" y="655.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.05%)</title><rect x="26.2392%" y="629" width="0.0548%" height="15" fill="rgb(227,156,21)" fg:x="20576" fg:w="43"/><text x="26.4892%" y="639.50"></text></g><g><title>mallocx (29 samples, 0.04%)</title><rect x="26.2571%" y="613" width="0.0370%" height="15" fill="rgb(250,195,8)" fg:x="20590" fg:w="29"/><text x="26.5071%" y="623.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (220 samples, 0.28%)</title><rect x="26.0620%" y="805" width="0.2806%" height="15" fill="rgb(220,134,5)" fg:x="20437" fg:w="220"/><text x="26.3120%" y="815.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (220 samples, 0.28%)</title><rect x="26.0620%" y="789" width="0.2806%" height="15" fill="rgb(246,106,34)" fg:x="20437" fg:w="220"/><text x="26.3120%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (127 samples, 0.16%)</title><rect x="26.1805%" y="773" width="0.1620%" height="15" fill="rgb(205,1,4)" fg:x="20530" fg:w="127"/><text x="26.4305%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (127 samples, 0.16%)</title><rect x="26.1805%" y="757" width="0.1620%" height="15" fill="rgb(224,151,29)" fg:x="20530" fg:w="127"/><text x="26.4305%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (127 samples, 0.16%)</title><rect x="26.1805%" y="741" width="0.1620%" height="15" fill="rgb(251,196,0)" fg:x="20530" fg:w="127"/><text x="26.4305%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (127 samples, 0.16%)</title><rect x="26.1805%" y="725" width="0.1620%" height="15" fill="rgb(212,127,0)" fg:x="20530" fg:w="127"/><text x="26.4305%" y="735.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (38 samples, 0.05%)</title><rect x="26.2940%" y="709" width="0.0485%" height="15" fill="rgb(236,71,53)" fg:x="20619" fg:w="38"/><text x="26.5440%" y="719.50"></text></g><g><title>__rust_alloc (121 samples, 0.15%)</title><rect x="26.3922%" y="725" width="0.1543%" height="15" fill="rgb(227,99,0)" fg:x="20696" fg:w="121"/><text x="26.6422%" y="735.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (121 samples, 0.15%)</title><rect x="26.3922%" y="709" width="0.1543%" height="15" fill="rgb(239,89,21)" fg:x="20696" fg:w="121"/><text x="26.6422%" y="719.50"></text></g><g><title>jemallocator::layout_to_flags (34 samples, 0.04%)</title><rect x="26.5032%" y="693" width="0.0434%" height="15" fill="rgb(243,122,19)" fg:x="20783" fg:w="34"/><text x="26.7532%" y="703.50"></text></g><g><title>_rjem_je_tcache_event_hard (10 samples, 0.01%)</title><rect x="26.5465%" y="597" width="0.0128%" height="15" fill="rgb(229,192,45)" fg:x="20817" fg:w="10"/><text x="26.7965%" y="607.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (8 samples, 0.01%)</title><rect x="26.5491%" y="581" width="0.0102%" height="15" fill="rgb(235,165,35)" fg:x="20819" fg:w="8"/><text x="26.7991%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (593 samples, 0.76%)</title><rect x="26.0620%" y="821" width="0.7562%" height="15" fill="rgb(253,202,0)" fg:x="20437" fg:w="593"/><text x="26.3120%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (373 samples, 0.48%)</title><rect x="26.3425%" y="805" width="0.4757%" height="15" fill="rgb(235,51,20)" fg:x="20657" fg:w="373"/><text x="26.5925%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (373 samples, 0.48%)</title><rect x="26.3425%" y="789" width="0.4757%" height="15" fill="rgb(218,95,46)" fg:x="20657" fg:w="373"/><text x="26.5925%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (373 samples, 0.48%)</title><rect x="26.3425%" y="773" width="0.4757%" height="15" fill="rgb(212,81,10)" fg:x="20657" fg:w="373"/><text x="26.5925%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (373 samples, 0.48%)</title><rect x="26.3425%" y="757" width="0.4757%" height="15" fill="rgb(240,59,0)" fg:x="20657" fg:w="373"/><text x="26.5925%" y="767.50"></text></g><g><title>alloc::alloc::alloc (373 samples, 0.48%)</title><rect x="26.3425%" y="741" width="0.4757%" height="15" fill="rgb(212,191,42)" fg:x="20657" fg:w="373"/><text x="26.5925%" y="751.50"></text></g><g><title>mallocx (213 samples, 0.27%)</title><rect x="26.5465%" y="725" width="0.2716%" height="15" fill="rgb(233,140,3)" fg:x="20817" fg:w="213"/><text x="26.7965%" y="735.50"></text></g><g><title>imalloc (213 samples, 0.27%)</title><rect x="26.5465%" y="709" width="0.2716%" height="15" fill="rgb(215,69,23)" fg:x="20817" fg:w="213"/><text x="26.7965%" y="719.50"></text></g><g><title>imalloc_body (213 samples, 0.27%)</title><rect x="26.5465%" y="693" width="0.2716%" height="15" fill="rgb(240,202,20)" fg:x="20817" fg:w="213"/><text x="26.7965%" y="703.50"></text></g><g><title>imalloc_no_sample (213 samples, 0.27%)</title><rect x="26.5465%" y="677" width="0.2716%" height="15" fill="rgb(209,146,50)" fg:x="20817" fg:w="213"/><text x="26.7965%" y="687.50"></text></g><g><title>iallocztm (213 samples, 0.27%)</title><rect x="26.5465%" y="661" width="0.2716%" height="15" fill="rgb(253,102,54)" fg:x="20817" fg:w="213"/><text x="26.7965%" y="671.50"></text></g><g><title>arena_malloc (213 samples, 0.27%)</title><rect x="26.5465%" y="645" width="0.2716%" height="15" fill="rgb(250,173,47)" fg:x="20817" fg:w="213"/><text x="26.7965%" y="655.50"></text></g><g><title>tcache_alloc_large (213 samples, 0.27%)</title><rect x="26.5465%" y="629" width="0.2716%" height="15" fill="rgb(232,142,7)" fg:x="20817" fg:w="213"/><text x="26.7965%" y="639.50"></text></g><g><title>tcache_event (213 samples, 0.27%)</title><rect x="26.5465%" y="613" width="0.2716%" height="15" fill="rgb(230,157,47)" fg:x="20817" fg:w="213"/><text x="26.7965%" y="623.50"></text></g><g><title>ticker_tick (203 samples, 0.26%)</title><rect x="26.5593%" y="597" width="0.2589%" height="15" fill="rgb(214,177,35)" fg:x="20827" fg:w="203"/><text x="26.8093%" y="607.50"></text></g><g><title>ticker_ticks (203 samples, 0.26%)</title><rect x="26.5593%" y="581" width="0.2589%" height="15" fill="rgb(234,119,46)" fg:x="20827" fg:w="203"/><text x="26.8093%" y="591.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="26.8182%" y="757" width="0.0140%" height="15" fill="rgb(241,180,50)" fg:x="21030" fg:w="11"/><text x="27.0682%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="26.8322%" y="757" width="0.0128%" height="15" fill="rgb(221,54,25)" fg:x="21041" fg:w="10"/><text x="27.0822%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="26.8322%" y="741" width="0.0128%" height="15" fill="rgb(209,157,44)" fg:x="21041" fg:w="10"/><text x="27.0822%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (10 samples, 0.01%)</title><rect x="26.8322%" y="725" width="0.0128%" height="15" fill="rgb(246,115,41)" fg:x="21041" fg:w="10"/><text x="27.0822%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="26.8322%" y="709" width="0.0128%" height="15" fill="rgb(229,86,1)" fg:x="21041" fg:w="10"/><text x="27.0822%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="26.8322%" y="693" width="0.0128%" height="15" fill="rgb(240,108,53)" fg:x="21041" fg:w="10"/><text x="27.0822%" y="703.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="26.8322%" y="677" width="0.0128%" height="15" fill="rgb(227,134,2)" fg:x="21041" fg:w="10"/><text x="27.0822%" y="687.50"></text></g><g><title>mallocx (9 samples, 0.01%)</title><rect x="26.8335%" y="661" width="0.0115%" height="15" fill="rgb(213,129,25)" fg:x="21042" fg:w="9"/><text x="27.0835%" y="671.50"></text></g><g><title>imalloc (9 samples, 0.01%)</title><rect x="26.8335%" y="645" width="0.0115%" height="15" fill="rgb(226,35,21)" fg:x="21042" fg:w="9"/><text x="27.0835%" y="655.50"></text></g><g><title>imalloc_body (9 samples, 0.01%)</title><rect x="26.8335%" y="629" width="0.0115%" height="15" fill="rgb(208,129,26)" fg:x="21042" fg:w="9"/><text x="27.0835%" y="639.50"></text></g><g><title>imalloc_no_sample (9 samples, 0.01%)</title><rect x="26.8335%" y="613" width="0.0115%" height="15" fill="rgb(224,83,6)" fg:x="21042" fg:w="9"/><text x="27.0835%" y="623.50"></text></g><g><title>iallocztm (9 samples, 0.01%)</title><rect x="26.8335%" y="597" width="0.0115%" height="15" fill="rgb(227,52,39)" fg:x="21042" fg:w="9"/><text x="27.0835%" y="607.50"></text></g><g><title>arena_malloc (9 samples, 0.01%)</title><rect x="26.8335%" y="581" width="0.0115%" height="15" fill="rgb(241,30,17)" fg:x="21042" fg:w="9"/><text x="27.0835%" y="591.50"></text></g><g><title>tcache_alloc_small (9 samples, 0.01%)</title><rect x="26.8335%" y="565" width="0.0115%" height="15" fill="rgb(246,186,42)" fg:x="21042" fg:w="9"/><text x="27.0835%" y="575.50"></text></g><g><title>cache_bin_alloc_easy (9 samples, 0.01%)</title><rect x="26.8335%" y="549" width="0.0115%" height="15" fill="rgb(221,169,15)" fg:x="21042" fg:w="9"/><text x="27.0835%" y="559.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (1,508 samples, 1.92%)</title><rect x="24.9385%" y="837" width="1.9231%" height="15" fill="rgb(235,108,21)" fg:x="19556" fg:w="1508"/><text x="25.1885%" y="847.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.04%)</title><rect x="26.8182%" y="821" width="0.0434%" height="15" fill="rgb(219,148,30)" fg:x="21030" fg:w="34"/><text x="27.0682%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34 samples, 0.04%)</title><rect x="26.8182%" y="805" width="0.0434%" height="15" fill="rgb(220,109,5)" fg:x="21030" fg:w="34"/><text x="27.0682%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (34 samples, 0.04%)</title><rect x="26.8182%" y="789" width="0.0434%" height="15" fill="rgb(213,203,48)" fg:x="21030" fg:w="34"/><text x="27.0682%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34 samples, 0.04%)</title><rect x="26.8182%" y="773" width="0.0434%" height="15" fill="rgb(244,71,33)" fg:x="21030" fg:w="34"/><text x="27.0682%" y="783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (13 samples, 0.02%)</title><rect x="26.8449%" y="757" width="0.0166%" height="15" fill="rgb(209,23,2)" fg:x="21051" fg:w="13"/><text x="27.0949%" y="767.50"></text></g><g><title>__rust_dealloc (191 samples, 0.24%)</title><rect x="26.8615%" y="837" width="0.2436%" height="15" fill="rgb(219,97,7)" fg:x="21064" fg:w="191"/><text x="27.1115%" y="847.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (191 samples, 0.24%)</title><rect x="26.8615%" y="821" width="0.2436%" height="15" fill="rgb(216,161,23)" fg:x="21064" fg:w="191"/><text x="27.1115%" y="831.50"></text></g><g><title>jemallocator::layout_to_flags (94 samples, 0.12%)</title><rect x="26.9852%" y="805" width="0.1199%" height="15" fill="rgb(207,45,42)" fg:x="21161" fg:w="94"/><text x="27.2352%" y="815.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (12 samples, 0.02%)</title><rect x="27.1051%" y="821" width="0.0153%" height="15" fill="rgb(241,61,4)" fg:x="21255" fg:w="12"/><text x="27.3551%" y="831.50"></text></g><g><title>_rjem_je_tcache_event_hard (17 samples, 0.02%)</title><rect x="27.1051%" y="837" width="0.0217%" height="15" fill="rgb(236,170,1)" fg:x="21255" fg:w="17"/><text x="27.3551%" y="847.50"></text></g><g><title>__rust_alloc (202 samples, 0.26%)</title><rect x="27.3040%" y="757" width="0.2576%" height="15" fill="rgb(239,72,5)" fg:x="21411" fg:w="202"/><text x="27.5540%" y="767.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (120 samples, 0.15%)</title><rect x="27.4086%" y="741" width="0.1530%" height="15" fill="rgb(214,13,50)" fg:x="21493" fg:w="120"/><text x="27.6586%" y="751.50"></text></g><g><title>jemallocator::layout_to_flags (55 samples, 0.07%)</title><rect x="27.4915%" y="725" width="0.0701%" height="15" fill="rgb(224,88,9)" fg:x="21558" fg:w="55"/><text x="27.7415%" y="735.50"></text></g><g><title>_rjem_je_tcache_event_hard (14 samples, 0.02%)</title><rect x="28.0870%" y="629" width="0.0179%" height="15" fill="rgb(238,192,34)" fg:x="22025" fg:w="14"/><text x="28.3370%" y="639.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (12 samples, 0.02%)</title><rect x="28.0896%" y="613" width="0.0153%" height="15" fill="rgb(217,203,50)" fg:x="22027" fg:w="12"/><text x="28.3396%" y="623.50"></text></g><g><title>extent_arena_get (8 samples, 0.01%)</title><rect x="28.0947%" y="597" width="0.0102%" height="15" fill="rgb(241,123,32)" fg:x="22031" fg:w="8"/><text x="28.3447%" y="607.50"></text></g><g><title>tcache_alloc_large (15 samples, 0.02%)</title><rect x="28.0870%" y="661" width="0.0191%" height="15" fill="rgb(248,151,39)" fg:x="22025" fg:w="15"/><text x="28.3370%" y="671.50"></text></g><g><title>tcache_event (15 samples, 0.02%)</title><rect x="28.0870%" y="645" width="0.0191%" height="15" fill="rgb(208,89,6)" fg:x="22025" fg:w="15"/><text x="28.3370%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (772 samples, 0.98%)</title><rect x="27.1268%" y="837" width="0.9845%" height="15" fill="rgb(254,43,26)" fg:x="21272" fg:w="772"/><text x="27.3768%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (772 samples, 0.98%)</title><rect x="27.1268%" y="821" width="0.9845%" height="15" fill="rgb(216,158,13)" fg:x="21272" fg:w="772"/><text x="27.3768%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (717 samples, 0.91%)</title><rect x="27.1969%" y="805" width="0.9143%" height="15" fill="rgb(212,47,37)" fg:x="21327" fg:w="717"/><text x="27.4469%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (717 samples, 0.91%)</title><rect x="27.1969%" y="789" width="0.9143%" height="15" fill="rgb(254,16,10)" fg:x="21327" fg:w="717"/><text x="27.4469%" y="799.50"></text></g><g><title>alloc::alloc::alloc (717 samples, 0.91%)</title><rect x="27.1969%" y="773" width="0.9143%" height="15" fill="rgb(223,228,16)" fg:x="21327" fg:w="717"/><text x="27.4469%" y="783.50"></text></g><g><title>mallocx (431 samples, 0.55%)</title><rect x="27.5616%" y="757" width="0.5496%" height="15" fill="rgb(249,108,50)" fg:x="21613" fg:w="431"/><text x="27.8116%" y="767.50"></text></g><g><title>imalloc (431 samples, 0.55%)</title><rect x="27.5616%" y="741" width="0.5496%" height="15" fill="rgb(208,220,5)" fg:x="21613" fg:w="431"/><text x="27.8116%" y="751.50"></text></g><g><title>imalloc_body (431 samples, 0.55%)</title><rect x="27.5616%" y="725" width="0.5496%" height="15" fill="rgb(217,89,48)" fg:x="21613" fg:w="431"/><text x="27.8116%" y="735.50"></text></g><g><title>imalloc_no_sample (431 samples, 0.55%)</title><rect x="27.5616%" y="709" width="0.5496%" height="15" fill="rgb(212,113,41)" fg:x="21613" fg:w="431"/><text x="27.8116%" y="719.50"></text></g><g><title>iallocztm (19 samples, 0.02%)</title><rect x="28.0870%" y="693" width="0.0242%" height="15" fill="rgb(231,127,5)" fg:x="22025" fg:w="19"/><text x="28.3370%" y="703.50"></text></g><g><title>arena_malloc (19 samples, 0.02%)</title><rect x="28.0870%" y="677" width="0.0242%" height="15" fill="rgb(217,141,17)" fg:x="22025" fg:w="19"/><text x="28.3370%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="28.1304%" y="821" width="0.0217%" height="15" fill="rgb(245,125,54)" fg:x="22059" fg:w="17"/><text x="28.3804%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="28.1304%" y="805" width="0.0217%" height="15" fill="rgb(248,125,3)" fg:x="22059" fg:w="17"/><text x="28.3804%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="28.1304%" y="789" width="0.0217%" height="15" fill="rgb(236,119,51)" fg:x="22059" fg:w="17"/><text x="28.3804%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (35 samples, 0.04%)</title><rect x="28.1546%" y="821" width="0.0446%" height="15" fill="rgb(239,99,8)" fg:x="22078" fg:w="35"/><text x="28.4046%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (67 samples, 0.09%)</title><rect x="28.1164%" y="837" width="0.0854%" height="15" fill="rgb(224,228,4)" fg:x="22048" fg:w="67"/><text x="28.3664%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="28.2043%" y="837" width="0.0102%" height="15" fill="rgb(220,131,45)" fg:x="22117" fg:w="8"/><text x="28.4543%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (8 samples, 0.01%)</title><rect x="28.2043%" y="821" width="0.0102%" height="15" fill="rgb(215,62,5)" fg:x="22117" fg:w="8"/><text x="28.4543%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="28.2043%" y="805" width="0.0102%" height="15" fill="rgb(253,12,24)" fg:x="22117" fg:w="8"/><text x="28.4543%" y="815.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (8 samples, 0.01%)</title><rect x="28.2043%" y="789" width="0.0102%" height="15" fill="rgb(248,120,50)" fg:x="22117" fg:w="8"/><text x="28.4543%" y="799.50"></text></g><g><title>__rust_dealloc (94 samples, 0.12%)</title><rect x="28.7756%" y="805" width="0.1199%" height="15" fill="rgb(245,194,10)" fg:x="22565" fg:w="94"/><text x="29.0256%" y="815.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (74 samples, 0.09%)</title><rect x="28.8012%" y="789" width="0.0944%" height="15" fill="rgb(241,149,38)" fg:x="22585" fg:w="74"/><text x="29.0512%" y="799.50"></text></g><g><title>jemallocator::layout_to_flags (35 samples, 0.04%)</title><rect x="28.8509%" y="773" width="0.0446%" height="15" fill="rgb(219,215,7)" fg:x="22624" fg:w="35"/><text x="29.1009%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 0.10%)</title><rect x="28.9032%" y="773" width="0.1046%" height="15" fill="rgb(208,120,31)" fg:x="22665" fg:w="82"/><text x="29.1532%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (82 samples, 0.10%)</title><rect x="28.9032%" y="757" width="0.1046%" height="15" fill="rgb(244,30,8)" fg:x="22665" fg:w="82"/><text x="29.1532%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (82 samples, 0.10%)</title><rect x="28.9032%" y="741" width="0.1046%" height="15" fill="rgb(238,35,44)" fg:x="22665" fg:w="82"/><text x="29.1532%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (114 samples, 0.15%)</title><rect x="28.9032%" y="789" width="0.1454%" height="15" fill="rgb(243,218,37)" fg:x="22665" fg:w="114"/><text x="29.1532%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (32 samples, 0.04%)</title><rect x="29.0077%" y="773" width="0.0408%" height="15" fill="rgb(218,169,10)" fg:x="22747" fg:w="32"/><text x="29.2577%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (135 samples, 0.17%)</title><rect x="28.9032%" y="805" width="0.1722%" height="15" fill="rgb(221,144,10)" fg:x="22665" fg:w="135"/><text x="29.1532%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (21 samples, 0.03%)</title><rect x="29.0485%" y="789" width="0.0268%" height="15" fill="rgb(226,41,38)" fg:x="22779" fg:w="21"/><text x="29.2985%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.03%)</title><rect x="29.0485%" y="773" width="0.0268%" height="15" fill="rgb(228,3,1)" fg:x="22779" fg:w="21"/><text x="29.2985%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (595 samples, 0.76%)</title><rect x="28.7221%" y="821" width="0.7588%" height="15" fill="rgb(209,129,12)" fg:x="22523" fg:w="595"/><text x="28.9721%" y="831.50"></text></g><g><title>sdallocx (318 samples, 0.41%)</title><rect x="29.0753%" y="805" width="0.4055%" height="15" fill="rgb(213,136,33)" fg:x="22800" fg:w="318"/><text x="29.3253%" y="815.50"></text></g><g><title>tsd_fetch (317 samples, 0.40%)</title><rect x="29.0766%" y="789" width="0.4042%" height="15" fill="rgb(209,181,29)" fg:x="22801" fg:w="317"/><text x="29.3266%" y="799.50"></text></g><g><title>tsd_fetch_impl (317 samples, 0.40%)</title><rect x="29.0766%" y="773" width="0.4042%" height="15" fill="rgb(234,173,18)" fg:x="22801" fg:w="317"/><text x="29.3266%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (1,005 samples, 1.28%)</title><rect x="28.2145%" y="837" width="1.2816%" height="15" fill="rgb(227,73,47)" fg:x="22125" fg:w="1005"/><text x="28.4645%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (12 samples, 0.02%)</title><rect x="29.4809%" y="821" width="0.0153%" height="15" fill="rgb(234,9,34)" fg:x="23118" fg:w="12"/><text x="29.7309%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="29.4809%" y="805" width="0.0153%" height="15" fill="rgb(235,172,15)" fg:x="23118" fg:w="12"/><text x="29.7309%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (229 samples, 0.29%)</title><rect x="29.4962%" y="837" width="0.2920%" height="15" fill="rgb(245,61,2)" fg:x="23130" fg:w="229"/><text x="29.7462%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (229 samples, 0.29%)</title><rect x="29.4962%" y="821" width="0.2920%" height="15" fill="rgb(238,39,47)" fg:x="23130" fg:w="229"/><text x="29.7462%" y="831.50"></text></g><g><title>core::ptr::read (229 samples, 0.29%)</title><rect x="29.4962%" y="805" width="0.2920%" height="15" fill="rgb(234,37,24)" fg:x="23130" fg:w="229"/><text x="29.7462%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (2,996 samples, 3.82%)</title><rect x="29.7971%" y="837" width="3.8206%" height="15" fill="rgb(248,223,24)" fg:x="23366" fg:w="2996"/><text x="30.0471%" y="847.50">move..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,996 samples, 3.82%)</title><rect x="29.7971%" y="821" width="3.8206%" height="15" fill="rgb(223,12,15)" fg:x="23366" fg:w="2996"/><text x="30.0471%" y="831.50">allo..</text></g><g><title>core::ptr::write (2,991 samples, 3.81%)</title><rect x="29.8035%" y="805" width="3.8142%" height="15" fill="rgb(249,6,3)" fg:x="23371" fg:w="2991"/><text x="30.0535%" y="815.50">core..</text></g><g><title>move_vm_runtime::interpreter::check_ability (163 samples, 0.21%)</title><rect x="33.6177%" y="837" width="0.2079%" height="15" fill="rgb(237,105,33)" fg:x="26362" fg:w="163"/><text x="33.8677%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.02%)</title><rect x="33.8256%" y="821" width="0.0179%" height="15" fill="rgb(252,208,35)" fg:x="26525" fg:w="14"/><text x="34.0756%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.02%)</title><rect x="33.8256%" y="805" width="0.0179%" height="15" fill="rgb(215,181,35)" fg:x="26525" fg:w="14"/><text x="34.0756%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="33.8256%" y="789" width="0.0179%" height="15" fill="rgb(246,212,3)" fg:x="26525" fg:w="14"/><text x="34.0756%" y="799.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.02%)</title><rect x="33.8256%" y="773" width="0.0179%" height="15" fill="rgb(247,156,24)" fg:x="26525" fg:w="14"/><text x="34.0756%" y="783.50"></text></g><g><title>mallocx (10 samples, 0.01%)</title><rect x="33.8307%" y="757" width="0.0128%" height="15" fill="rgb(248,9,31)" fg:x="26529" fg:w="10"/><text x="34.0807%" y="767.50"></text></g><g><title>imalloc (10 samples, 0.01%)</title><rect x="33.8307%" y="741" width="0.0128%" height="15" fill="rgb(234,26,45)" fg:x="26529" fg:w="10"/><text x="34.0807%" y="751.50"></text></g><g><title>tsd_fetch (10 samples, 0.01%)</title><rect x="33.8307%" y="725" width="0.0128%" height="15" fill="rgb(249,11,32)" fg:x="26529" fg:w="10"/><text x="34.0807%" y="735.50"></text></g><g><title>tsd_fetch_impl (10 samples, 0.01%)</title><rect x="33.8307%" y="709" width="0.0128%" height="15" fill="rgb(249,162,33)" fg:x="26529" fg:w="10"/><text x="34.0807%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (27 samples, 0.03%)</title><rect x="33.8434%" y="693" width="0.0344%" height="15" fill="rgb(232,4,32)" fg:x="26539" fg:w="27"/><text x="34.0934%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (27 samples, 0.03%)</title><rect x="33.8434%" y="677" width="0.0344%" height="15" fill="rgb(212,5,45)" fg:x="26539" fg:w="27"/><text x="34.0934%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="33.8434%" y="661" width="0.0344%" height="15" fill="rgb(227,95,13)" fg:x="26539" fg:w="27"/><text x="34.0934%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (27 samples, 0.03%)</title><rect x="33.8434%" y="645" width="0.0344%" height="15" fill="rgb(223,205,10)" fg:x="26539" fg:w="27"/><text x="34.0934%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.03%)</title><rect x="33.8434%" y="629" width="0.0344%" height="15" fill="rgb(222,178,8)" fg:x="26539" fg:w="27"/><text x="34.0934%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.03%)</title><rect x="33.8434%" y="613" width="0.0344%" height="15" fill="rgb(216,13,22)" fg:x="26539" fg:w="27"/><text x="34.0934%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 0.03%)</title><rect x="33.8434%" y="597" width="0.0344%" height="15" fill="rgb(240,167,12)" fg:x="26539" fg:w="27"/><text x="34.0934%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (27 samples, 0.03%)</title><rect x="33.8434%" y="581" width="0.0344%" height="15" fill="rgb(235,68,35)" fg:x="26539" fg:w="27"/><text x="34.0934%" y="591.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities::{{closure}} (20 samples, 0.03%)</title><rect x="33.8524%" y="565" width="0.0255%" height="15" fill="rgb(253,40,27)" fg:x="26546" fg:w="20"/><text x="34.1024%" y="575.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (20 samples, 0.03%)</title><rect x="33.8524%" y="549" width="0.0255%" height="15" fill="rgb(214,19,28)" fg:x="26546" fg:w="20"/><text x="34.1024%" y="559.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::struct_at (20 samples, 0.03%)</title><rect x="33.8524%" y="533" width="0.0255%" height="15" fill="rgb(210,167,45)" fg:x="26546" fg:w="20"/><text x="34.1024%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (35 samples, 0.04%)</title><rect x="33.8434%" y="821" width="0.0446%" height="15" fill="rgb(232,97,40)" fg:x="26539" fg:w="35"/><text x="34.0934%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (35 samples, 0.04%)</title><rect x="33.8434%" y="805" width="0.0446%" height="15" fill="rgb(250,35,23)" fg:x="26539" fg:w="35"/><text x="34.0934%" y="815.50"></text></g><g><title>core::iter::adapters::try_process (35 samples, 0.04%)</title><rect x="33.8434%" y="789" width="0.0446%" height="15" fill="rgb(248,47,53)" fg:x="26539" fg:w="35"/><text x="34.0934%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (35 samples, 0.04%)</title><rect x="33.8434%" y="773" width="0.0446%" height="15" fill="rgb(226,58,50)" fg:x="26539" fg:w="35"/><text x="34.0934%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (35 samples, 0.04%)</title><rect x="33.8434%" y="757" width="0.0446%" height="15" fill="rgb(217,105,26)" fg:x="26539" fg:w="35"/><text x="34.0934%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (35 samples, 0.04%)</title><rect x="33.8434%" y="741" width="0.0446%" height="15" fill="rgb(208,64,1)" fg:x="26539" fg:w="35"/><text x="34.0934%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 0.04%)</title><rect x="33.8434%" y="725" width="0.0446%" height="15" fill="rgb(214,80,1)" fg:x="26539" fg:w="35"/><text x="34.0934%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (35 samples, 0.04%)</title><rect x="33.8434%" y="709" width="0.0446%" height="15" fill="rgb(206,175,26)" fg:x="26539" fg:w="35"/><text x="34.0934%" y="719.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (11 samples, 0.01%)</title><rect x="33.8932%" y="741" width="0.0140%" height="15" fill="rgb(235,156,37)" fg:x="26578" fg:w="11"/><text x="34.1432%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.01%)</title><rect x="33.8932%" y="725" width="0.0140%" height="15" fill="rgb(213,100,9)" fg:x="26578" fg:w="11"/><text x="34.1432%" y="735.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities::{{closure}} (11 samples, 0.01%)</title><rect x="33.8932%" y="709" width="0.0140%" height="15" fill="rgb(241,15,13)" fg:x="26578" fg:w="11"/><text x="34.1432%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.01%)</title><rect x="33.8932%" y="693" width="0.0140%" height="15" fill="rgb(205,97,43)" fg:x="26578" fg:w="11"/><text x="34.1432%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.01%)</title><rect x="33.8932%" y="677" width="0.0140%" height="15" fill="rgb(216,106,32)" fg:x="26578" fg:w="11"/><text x="34.1432%" y="687.50"></text></g><g><title>&lt;move_binary_format::file_format::AbilitySetIterator as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="33.8932%" y="661" width="0.0140%" height="15" fill="rgb(226,200,8)" fg:x="26578" fg:w="11"/><text x="34.1432%" y="671.50"></text></g><g><title>__rust_dealloc (8 samples, 0.01%)</title><rect x="33.9097%" y="597" width="0.0102%" height="15" fill="rgb(244,54,29)" fg:x="26591" fg:w="8"/><text x="34.1597%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt; (19 samples, 0.02%)</title><rect x="33.9072%" y="725" width="0.0242%" height="15" fill="rgb(252,169,12)" fg:x="26589" fg:w="19"/><text x="34.1572%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="33.9072%" y="709" width="0.0242%" height="15" fill="rgb(231,199,11)" fg:x="26589" fg:w="19"/><text x="34.1572%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bool,alloc::alloc::Global&gt;&gt; (19 samples, 0.02%)</title><rect x="33.9072%" y="693" width="0.0242%" height="15" fill="rgb(233,191,18)" fg:x="26589" fg:w="19"/><text x="34.1572%" y="703.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="33.9072%" y="677" width="0.0242%" height="15" fill="rgb(215,83,47)" fg:x="26589" fg:w="19"/><text x="34.1572%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (19 samples, 0.02%)</title><rect x="33.9072%" y="661" width="0.0242%" height="15" fill="rgb(251,67,19)" fg:x="26589" fg:w="19"/><text x="34.1572%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="33.9072%" y="645" width="0.0242%" height="15" fill="rgb(240,7,20)" fg:x="26589" fg:w="19"/><text x="34.1572%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="33.9072%" y="629" width="0.0242%" height="15" fill="rgb(210,150,26)" fg:x="26589" fg:w="19"/><text x="34.1572%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="33.9072%" y="613" width="0.0242%" height="15" fill="rgb(228,75,42)" fg:x="26589" fg:w="19"/><text x="34.1572%" y="623.50"></text></g><g><title>sdallocx (9 samples, 0.01%)</title><rect x="33.9199%" y="597" width="0.0115%" height="15" fill="rgb(237,134,48)" fg:x="26599" fg:w="9"/><text x="34.1699%" y="607.50"></text></g><g><title>isfree (9 samples, 0.01%)</title><rect x="33.9199%" y="581" width="0.0115%" height="15" fill="rgb(205,80,50)" fg:x="26599" fg:w="9"/><text x="34.1699%" y="591.50"></text></g><g><title>isdalloct (9 samples, 0.01%)</title><rect x="33.9199%" y="565" width="0.0115%" height="15" fill="rgb(217,74,48)" fg:x="26599" fg:w="9"/><text x="34.1699%" y="575.50"></text></g><g><title>arena_sdalloc (9 samples, 0.01%)</title><rect x="33.9199%" y="549" width="0.0115%" height="15" fill="rgb(205,82,50)" fg:x="26599" fg:w="9"/><text x="34.1699%" y="559.50"></text></g><g><title>tcache_dalloc_small (9 samples, 0.01%)</title><rect x="33.9199%" y="533" width="0.0115%" height="15" fill="rgb(228,1,33)" fg:x="26599" fg:w="9"/><text x="34.1699%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_binary_format::file_format::AbilitySet&gt;,alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt;&gt; (21 samples, 0.03%)</title><rect x="33.9072%" y="741" width="0.0268%" height="15" fill="rgb(214,50,23)" fg:x="26589" fg:w="21"/><text x="34.1572%" y="751.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (45 samples, 0.06%)</title><rect x="33.8881%" y="821" width="0.0574%" height="15" fill="rgb(210,62,9)" fg:x="26574" fg:w="45"/><text x="34.1381%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41 samples, 0.05%)</title><rect x="33.8932%" y="805" width="0.0523%" height="15" fill="rgb(210,104,37)" fg:x="26578" fg:w="41"/><text x="34.1432%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41 samples, 0.05%)</title><rect x="33.8932%" y="789" width="0.0523%" height="15" fill="rgb(232,104,43)" fg:x="26578" fg:w="41"/><text x="34.1432%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41 samples, 0.05%)</title><rect x="33.8932%" y="773" width="0.0523%" height="15" fill="rgb(244,52,6)" fg:x="26578" fg:w="41"/><text x="34.1432%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (41 samples, 0.05%)</title><rect x="33.8932%" y="757" width="0.0523%" height="15" fill="rgb(211,174,52)" fg:x="26578" fg:w="41"/><text x="34.1432%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_binary_format::file_format::AbilitySet&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;move_binary_format::file_format::StructTypeParameter&gt;,move_vm_runtime::loader::Loader::abilities::{{closure}}&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="33.9340%" y="741" width="0.0115%" height="15" fill="rgb(229,48,4)" fg:x="26610" fg:w="9"/><text x="34.1840%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (9 samples, 0.01%)</title><rect x="33.9340%" y="725" width="0.0115%" height="15" fill="rgb(205,155,16)" fg:x="26610" fg:w="9"/><text x="34.1840%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="33.9340%" y="709" width="0.0115%" height="15" fill="rgb(211,141,53)" fg:x="26610" fg:w="9"/><text x="34.1840%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;move_binary_format::file_format::AbilitySet,alloc::alloc::Global&gt;&gt; (9 samples, 0.01%)</title><rect x="33.9340%" y="693" width="0.0115%" height="15" fill="rgb(240,148,11)" fg:x="26610" fg:w="9"/><text x="34.1840%" y="703.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="33.9340%" y="677" width="0.0115%" height="15" fill="rgb(214,45,23)" fg:x="26610" fg:w="9"/><text x="34.1840%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (9 samples, 0.01%)</title><rect x="33.9340%" y="661" width="0.0115%" height="15" fill="rgb(248,74,26)" fg:x="26610" fg:w="9"/><text x="34.1840%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="33.9340%" y="645" width="0.0115%" height="15" fill="rgb(218,121,16)" fg:x="26610" fg:w="9"/><text x="34.1840%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="33.9340%" y="629" width="0.0115%" height="15" fill="rgb(218,10,47)" fg:x="26610" fg:w="9"/><text x="34.1840%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="33.9340%" y="613" width="0.0115%" height="15" fill="rgb(227,99,14)" fg:x="26610" fg:w="9"/><text x="34.1840%" y="623.50"></text></g><g><title>sdallocx (8 samples, 0.01%)</title><rect x="33.9352%" y="597" width="0.0102%" height="15" fill="rgb(229,83,46)" fg:x="26611" fg:w="8"/><text x="34.1852%" y="607.50"></text></g><g><title>tsd_tcachep_get (8 samples, 0.01%)</title><rect x="33.9352%" y="581" width="0.0102%" height="15" fill="rgb(228,25,1)" fg:x="26611" fg:w="8"/><text x="34.1852%" y="591.50"></text></g><g><title>tsd_tcachep_get_unsafe (8 samples, 0.01%)</title><rect x="33.9352%" y="565" width="0.0102%" height="15" fill="rgb(252,190,15)" fg:x="26611" fg:w="8"/><text x="34.1852%" y="575.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (526 samples, 0.67%)</title><rect x="33.8256%" y="837" width="0.6708%" height="15" fill="rgb(213,103,51)" fg:x="26525" fg:w="526"/><text x="34.0756%" y="847.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::struct_at (428 samples, 0.55%)</title><rect x="33.9505%" y="821" width="0.5458%" height="15" fill="rgb(220,38,44)" fg:x="26623" fg:w="428"/><text x="34.2005%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (428 samples, 0.55%)</title><rect x="33.9505%" y="805" width="0.5458%" height="15" fill="rgb(210,45,26)" fg:x="26623" fg:w="428"/><text x="34.2005%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (428 samples, 0.55%)</title><rect x="33.9505%" y="789" width="0.5458%" height="15" fill="rgb(205,95,48)" fg:x="26623" fg:w="428"/><text x="34.2005%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (428 samples, 0.55%)</title><rect x="33.9505%" y="773" width="0.5458%" height="15" fill="rgb(225,179,37)" fg:x="26623" fg:w="428"/><text x="34.2005%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (24 samples, 0.03%)</title><rect x="34.5027%" y="821" width="0.0306%" height="15" fill="rgb(230,209,3)" fg:x="27056" fg:w="24"/><text x="34.7527%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.03%)</title><rect x="34.6277%" y="661" width="0.0268%" height="15" fill="rgb(248,12,46)" fg:x="27154" fg:w="21"/><text x="34.8777%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (21 samples, 0.03%)</title><rect x="34.6277%" y="645" width="0.0268%" height="15" fill="rgb(234,18,0)" fg:x="27154" fg:w="21"/><text x="34.8777%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.03%)</title><rect x="34.6277%" y="629" width="0.0268%" height="15" fill="rgb(238,197,14)" fg:x="27154" fg:w="21"/><text x="34.8777%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.03%)</title><rect x="34.6277%" y="613" width="0.0268%" height="15" fill="rgb(251,162,48)" fg:x="27154" fg:w="21"/><text x="34.8777%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.03%)</title><rect x="34.6277%" y="597" width="0.0268%" height="15" fill="rgb(237,73,42)" fg:x="27154" fg:w="21"/><text x="34.8777%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (21 samples, 0.03%)</title><rect x="34.6277%" y="581" width="0.0268%" height="15" fill="rgb(211,108,8)" fg:x="27154" fg:w="21"/><text x="34.8777%" y="591.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_to_struct::{{closure}} (21 samples, 0.03%)</title><rect x="34.6277%" y="565" width="0.0268%" height="15" fill="rgb(213,45,22)" fg:x="27154" fg:w="21"/><text x="34.8777%" y="575.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (21 samples, 0.03%)</title><rect x="34.6277%" y="549" width="0.0268%" height="15" fill="rgb(252,154,5)" fg:x="27154" fg:w="21"/><text x="34.8777%" y="559.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (21 samples, 0.03%)</title><rect x="34.6277%" y="533" width="0.0268%" height="15" fill="rgb(221,79,52)" fg:x="27154" fg:w="21"/><text x="34.8777%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (64 samples, 0.08%)</title><rect x="34.6277%" y="693" width="0.0816%" height="15" fill="rgb(229,220,36)" fg:x="27154" fg:w="64"/><text x="34.8777%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (64 samples, 0.08%)</title><rect x="34.6277%" y="677" width="0.0816%" height="15" fill="rgb(211,17,16)" fg:x="27154" fg:w="64"/><text x="34.8777%" y="687.50"></text></g><g><title>core::ptr::write (43 samples, 0.05%)</title><rect x="34.6545%" y="661" width="0.0548%" height="15" fill="rgb(222,55,31)" fg:x="27175" fg:w="43"/><text x="34.9045%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (95 samples, 0.12%)</title><rect x="34.7093%" y="677" width="0.1211%" height="15" fill="rgb(221,221,31)" fg:x="27218" fg:w="95"/><text x="34.9593%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (95 samples, 0.12%)</title><rect x="34.7093%" y="661" width="0.1211%" height="15" fill="rgb(227,168,26)" fg:x="27218" fg:w="95"/><text x="34.9593%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (95 samples, 0.12%)</title><rect x="34.7093%" y="645" width="0.1211%" height="15" fill="rgb(224,139,9)" fg:x="27218" fg:w="95"/><text x="34.9593%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (95 samples, 0.12%)</title><rect x="34.7093%" y="629" width="0.1211%" height="15" fill="rgb(254,172,0)" fg:x="27218" fg:w="95"/><text x="34.9593%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (95 samples, 0.12%)</title><rect x="34.7093%" y="613" width="0.1211%" height="15" fill="rgb(235,203,1)" fg:x="27218" fg:w="95"/><text x="34.9593%" y="623.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (95 samples, 0.12%)</title><rect x="34.7093%" y="597" width="0.1211%" height="15" fill="rgb(216,205,24)" fg:x="27218" fg:w="95"/><text x="34.9593%" y="607.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (93 samples, 0.12%)</title><rect x="34.7119%" y="581" width="0.1186%" height="15" fill="rgb(233,24,6)" fg:x="27220" fg:w="93"/><text x="34.9619%" y="591.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (89 samples, 0.11%)</title><rect x="34.7170%" y="565" width="0.1135%" height="15" fill="rgb(244,110,9)" fg:x="27224" fg:w="89"/><text x="34.9670%" y="575.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (26 samples, 0.03%)</title><rect x="34.7973%" y="549" width="0.0332%" height="15" fill="rgb(239,222,42)" fg:x="27287" fg:w="26"/><text x="35.0473%" y="559.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (26 samples, 0.03%)</title><rect x="34.7973%" y="533" width="0.0332%" height="15" fill="rgb(218,145,13)" fg:x="27287" fg:w="26"/><text x="35.0473%" y="543.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (26 samples, 0.03%)</title><rect x="34.7973%" y="517" width="0.0332%" height="15" fill="rgb(207,69,11)" fg:x="27287" fg:w="26"/><text x="35.0473%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (162 samples, 0.21%)</title><rect x="34.7093%" y="693" width="0.2066%" height="15" fill="rgb(220,223,22)" fg:x="27218" fg:w="162"/><text x="34.9593%" y="703.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (67 samples, 0.09%)</title><rect x="34.8305%" y="677" width="0.0854%" height="15" fill="rgb(245,102,5)" fg:x="27313" fg:w="67"/><text x="35.0805%" y="687.50"></text></g><g><title>__rust_alloc (10 samples, 0.01%)</title><rect x="34.9172%" y="581" width="0.0128%" height="15" fill="rgb(211,148,2)" fg:x="27381" fg:w="10"/><text x="35.1672%" y="591.50"></text></g><g><title>arena_bin_malloc_hard (10 samples, 0.01%)</title><rect x="34.9580%" y="437" width="0.0128%" height="15" fill="rgb(241,13,44)" fg:x="27413" fg:w="10"/><text x="35.2080%" y="447.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_to_struct (374 samples, 0.48%)</title><rect x="34.5027%" y="837" width="0.4769%" height="15" fill="rgb(219,137,21)" fg:x="27056" fg:w="374"/><text x="34.7527%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (350 samples, 0.45%)</title><rect x="34.5333%" y="821" width="0.4463%" height="15" fill="rgb(242,206,5)" fg:x="27080" fg:w="350"/><text x="34.7833%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (350 samples, 0.45%)</title><rect x="34.5333%" y="805" width="0.4463%" height="15" fill="rgb(217,114,22)" fg:x="27080" fg:w="350"/><text x="34.7833%" y="815.50"></text></g><g><title>core::iter::adapters::try_process (349 samples, 0.45%)</title><rect x="34.5346%" y="789" width="0.4451%" height="15" fill="rgb(253,206,42)" fg:x="27081" fg:w="349"/><text x="34.7846%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (276 samples, 0.35%)</title><rect x="34.6277%" y="773" width="0.3520%" height="15" fill="rgb(236,102,18)" fg:x="27154" fg:w="276"/><text x="34.8777%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (276 samples, 0.35%)</title><rect x="34.6277%" y="757" width="0.3520%" height="15" fill="rgb(208,59,49)" fg:x="27154" fg:w="276"/><text x="34.8777%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (276 samples, 0.35%)</title><rect x="34.6277%" y="741" width="0.3520%" height="15" fill="rgb(215,194,28)" fg:x="27154" fg:w="276"/><text x="34.8777%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (276 samples, 0.35%)</title><rect x="34.6277%" y="725" width="0.3520%" height="15" fill="rgb(243,207,11)" fg:x="27154" fg:w="276"/><text x="34.8777%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (276 samples, 0.35%)</title><rect x="34.6277%" y="709" width="0.3520%" height="15" fill="rgb(254,179,35)" fg:x="27154" fg:w="276"/><text x="34.8777%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (50 samples, 0.06%)</title><rect x="34.9159%" y="693" width="0.0638%" height="15" fill="rgb(235,97,3)" fg:x="27380" fg:w="50"/><text x="35.1659%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (50 samples, 0.06%)</title><rect x="34.9159%" y="677" width="0.0638%" height="15" fill="rgb(215,155,33)" fg:x="27380" fg:w="50"/><text x="35.1659%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (50 samples, 0.06%)</title><rect x="34.9159%" y="661" width="0.0638%" height="15" fill="rgb(223,128,12)" fg:x="27380" fg:w="50"/><text x="35.1659%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (50 samples, 0.06%)</title><rect x="34.9159%" y="645" width="0.0638%" height="15" fill="rgb(208,157,18)" fg:x="27380" fg:w="50"/><text x="35.1659%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50 samples, 0.06%)</title><rect x="34.9159%" y="629" width="0.0638%" height="15" fill="rgb(249,70,54)" fg:x="27380" fg:w="50"/><text x="35.1659%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (50 samples, 0.06%)</title><rect x="34.9159%" y="613" width="0.0638%" height="15" fill="rgb(244,118,24)" fg:x="27380" fg:w="50"/><text x="35.1659%" y="623.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.06%)</title><rect x="34.9159%" y="597" width="0.0638%" height="15" fill="rgb(211,54,0)" fg:x="27380" fg:w="50"/><text x="35.1659%" y="607.50"></text></g><g><title>mallocx (39 samples, 0.05%)</title><rect x="34.9299%" y="581" width="0.0497%" height="15" fill="rgb(245,137,45)" fg:x="27391" fg:w="39"/><text x="35.1799%" y="591.50"></text></g><g><title>imalloc (39 samples, 0.05%)</title><rect x="34.9299%" y="565" width="0.0497%" height="15" fill="rgb(232,154,31)" fg:x="27391" fg:w="39"/><text x="35.1799%" y="575.50"></text></g><g><title>imalloc_body (19 samples, 0.02%)</title><rect x="34.9554%" y="549" width="0.0242%" height="15" fill="rgb(253,6,39)" fg:x="27411" fg:w="19"/><text x="35.2054%" y="559.50"></text></g><g><title>imalloc_no_sample (19 samples, 0.02%)</title><rect x="34.9554%" y="533" width="0.0242%" height="15" fill="rgb(234,183,24)" fg:x="27411" fg:w="19"/><text x="35.2054%" y="543.50"></text></g><g><title>iallocztm (19 samples, 0.02%)</title><rect x="34.9554%" y="517" width="0.0242%" height="15" fill="rgb(252,84,40)" fg:x="27411" fg:w="19"/><text x="35.2054%" y="527.50"></text></g><g><title>arena_malloc (19 samples, 0.02%)</title><rect x="34.9554%" y="501" width="0.0242%" height="15" fill="rgb(224,65,2)" fg:x="27411" fg:w="19"/><text x="35.2054%" y="511.50"></text></g><g><title>tcache_alloc_small (18 samples, 0.02%)</title><rect x="34.9567%" y="485" width="0.0230%" height="15" fill="rgb(229,38,24)" fg:x="27412" fg:w="18"/><text x="35.2067%" y="495.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (18 samples, 0.02%)</title><rect x="34.9567%" y="469" width="0.0230%" height="15" fill="rgb(218,131,50)" fg:x="27412" fg:w="18"/><text x="35.2067%" y="479.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (17 samples, 0.02%)</title><rect x="34.9580%" y="453" width="0.0217%" height="15" fill="rgb(233,106,18)" fg:x="27413" fg:w="17"/><text x="35.2080%" y="463.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="34.9797%" y="821" width="0.0166%" height="15" fill="rgb(220,216,11)" fg:x="27430" fg:w="13"/><text x="35.2297%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_field_type (26 samples, 0.03%)</title><rect x="34.9797%" y="837" width="0.0332%" height="15" fill="rgb(251,100,45)" fg:x="27430" fg:w="26"/><text x="35.2297%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_struct_type (13 samples, 0.02%)</title><rect x="34.9962%" y="821" width="0.0166%" height="15" fill="rgb(235,143,32)" fg:x="27443" fg:w="13"/><text x="35.2462%" y="831.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (13 samples, 0.02%)</title><rect x="34.9962%" y="805" width="0.0166%" height="15" fill="rgb(248,124,34)" fg:x="27443" fg:w="13"/><text x="35.2462%" y="815.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (13 samples, 0.02%)</title><rect x="34.9962%" y="789" width="0.0166%" height="15" fill="rgb(225,221,4)" fg:x="27443" fg:w="13"/><text x="35.2462%" y="799.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (13 samples, 0.02%)</title><rect x="34.9962%" y="773" width="0.0166%" height="15" fill="rgb(242,27,43)" fg:x="27443" fg:w="13"/><text x="35.2462%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.02%)</title><rect x="34.9962%" y="757" width="0.0166%" height="15" fill="rgb(227,54,8)" fg:x="27443" fg:w="13"/><text x="35.2462%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.02%)</title><rect x="34.9962%" y="741" width="0.0166%" height="15" fill="rgb(253,139,49)" fg:x="27443" fg:w="13"/><text x="35.2462%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_struct_fields (16 samples, 0.02%)</title><rect x="35.0128%" y="837" width="0.0204%" height="15" fill="rgb(231,26,43)" fg:x="27456" fg:w="16"/><text x="35.2628%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (67 samples, 0.09%)</title><rect x="35.0370%" y="821" width="0.0854%" height="15" fill="rgb(207,121,39)" fg:x="27475" fg:w="67"/><text x="35.2870%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (64 samples, 0.08%)</title><rect x="35.1225%" y="725" width="0.0816%" height="15" fill="rgb(223,101,35)" fg:x="27542" fg:w="64"/><text x="35.3725%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.03%)</title><rect x="35.2475%" y="693" width="0.0319%" height="15" fill="rgb(232,87,23)" fg:x="27640" fg:w="25"/><text x="35.4975%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (25 samples, 0.03%)</title><rect x="35.2475%" y="677" width="0.0319%" height="15" fill="rgb(225,180,29)" fg:x="27640" fg:w="25"/><text x="35.4975%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.03%)</title><rect x="35.2475%" y="661" width="0.0319%" height="15" fill="rgb(225,25,17)" fg:x="27640" fg:w="25"/><text x="35.4975%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (25 samples, 0.03%)</title><rect x="35.2475%" y="645" width="0.0319%" height="15" fill="rgb(223,8,52)" fg:x="27640" fg:w="25"/><text x="35.4975%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.03%)</title><rect x="35.2475%" y="629" width="0.0319%" height="15" fill="rgb(246,42,21)" fg:x="27640" fg:w="25"/><text x="35.4975%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.03%)</title><rect x="35.2475%" y="613" width="0.0319%" height="15" fill="rgb(205,64,43)" fg:x="27640" fg:w="25"/><text x="35.4975%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 0.03%)</title><rect x="35.2475%" y="597" width="0.0319%" height="15" fill="rgb(221,160,13)" fg:x="27640" fg:w="25"/><text x="35.4975%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (25 samples, 0.03%)</title><rect x="35.2475%" y="581" width="0.0319%" height="15" fill="rgb(239,58,35)" fg:x="27640" fg:w="25"/><text x="35.4975%" y="591.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field::{{closure}} (25 samples, 0.03%)</title><rect x="35.2475%" y="565" width="0.0319%" height="15" fill="rgb(251,26,40)" fg:x="27640" fg:w="25"/><text x="35.4975%" y="575.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (24 samples, 0.03%)</title><rect x="35.2487%" y="549" width="0.0306%" height="15" fill="rgb(247,0,4)" fg:x="27641" fg:w="24"/><text x="35.4987%" y="559.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (23 samples, 0.03%)</title><rect x="35.2500%" y="533" width="0.0293%" height="15" fill="rgb(218,130,10)" fg:x="27642" fg:w="23"/><text x="35.5000%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (58 samples, 0.07%)</title><rect x="35.2793%" y="597" width="0.0740%" height="15" fill="rgb(239,32,7)" fg:x="27665" fg:w="58"/><text x="35.5293%" y="607.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (58 samples, 0.07%)</title><rect x="35.2793%" y="581" width="0.0740%" height="15" fill="rgb(210,192,24)" fg:x="27665" fg:w="58"/><text x="35.5293%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (125 samples, 0.16%)</title><rect x="35.2793%" y="693" width="0.1594%" height="15" fill="rgb(226,212,17)" fg:x="27665" fg:w="125"/><text x="35.5293%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (125 samples, 0.16%)</title><rect x="35.2793%" y="677" width="0.1594%" height="15" fill="rgb(219,201,28)" fg:x="27665" fg:w="125"/><text x="35.5293%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (125 samples, 0.16%)</title><rect x="35.2793%" y="661" width="0.1594%" height="15" fill="rgb(235,207,41)" fg:x="27665" fg:w="125"/><text x="35.5293%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (125 samples, 0.16%)</title><rect x="35.2793%" y="645" width="0.1594%" height="15" fill="rgb(241,95,54)" fg:x="27665" fg:w="125"/><text x="35.5293%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (125 samples, 0.16%)</title><rect x="35.2793%" y="629" width="0.1594%" height="15" fill="rgb(248,12,23)" fg:x="27665" fg:w="125"/><text x="35.5293%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (125 samples, 0.16%)</title><rect x="35.2793%" y="613" width="0.1594%" height="15" fill="rgb(228,173,4)" fg:x="27665" fg:w="125"/><text x="35.5293%" y="623.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (67 samples, 0.09%)</title><rect x="35.3533%" y="597" width="0.0854%" height="15" fill="rgb(254,99,5)" fg:x="27723" fg:w="67"/><text x="35.6033%" y="607.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (67 samples, 0.09%)</title><rect x="35.3533%" y="581" width="0.0854%" height="15" fill="rgb(212,184,17)" fg:x="27723" fg:w="67"/><text x="35.6033%" y="591.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (64 samples, 0.08%)</title><rect x="35.3571%" y="565" width="0.0816%" height="15" fill="rgb(252,174,1)" fg:x="27726" fg:w="64"/><text x="35.6071%" y="575.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (64 samples, 0.08%)</title><rect x="35.3571%" y="549" width="0.0816%" height="15" fill="rgb(241,118,51)" fg:x="27726" fg:w="64"/><text x="35.6071%" y="559.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (64 samples, 0.08%)</title><rect x="35.3571%" y="533" width="0.0816%" height="15" fill="rgb(227,94,47)" fg:x="27726" fg:w="64"/><text x="35.6071%" y="543.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (24 samples, 0.03%)</title><rect x="35.4081%" y="517" width="0.0306%" height="15" fill="rgb(229,104,2)" fg:x="27766" fg:w="24"/><text x="35.6581%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (24 samples, 0.03%)</title><rect x="35.4081%" y="501" width="0.0306%" height="15" fill="rgb(219,28,31)" fg:x="27766" fg:w="24"/><text x="35.6581%" y="511.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="35.4145%" y="485" width="0.0242%" height="15" fill="rgb(233,109,36)" fg:x="27771" fg:w="19"/><text x="35.6645%" y="495.50"></text></g><g><title>__rust_alloc (14 samples, 0.02%)</title><rect x="35.4400%" y="581" width="0.0179%" height="15" fill="rgb(246,88,11)" fg:x="27791" fg:w="14"/><text x="35.6900%" y="591.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (10 samples, 0.01%)</title><rect x="35.4451%" y="565" width="0.0128%" height="15" fill="rgb(209,212,17)" fg:x="27795" fg:w="10"/><text x="35.6951%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (286 samples, 0.36%)</title><rect x="35.1225%" y="821" width="0.3647%" height="15" fill="rgb(243,59,29)" fg:x="27542" fg:w="286"/><text x="35.3725%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (286 samples, 0.36%)</title><rect x="35.1225%" y="805" width="0.3647%" height="15" fill="rgb(244,205,48)" fg:x="27542" fg:w="286"/><text x="35.3725%" y="815.50"></text></g><g><title>core::iter::adapters::try_process (286 samples, 0.36%)</title><rect x="35.1225%" y="789" width="0.3647%" height="15" fill="rgb(227,30,6)" fg:x="27542" fg:w="286"/><text x="35.3725%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (286 samples, 0.36%)</title><rect x="35.1225%" y="773" width="0.3647%" height="15" fill="rgb(220,205,48)" fg:x="27542" fg:w="286"/><text x="35.3725%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (286 samples, 0.36%)</title><rect x="35.1225%" y="757" width="0.3647%" height="15" fill="rgb(250,94,14)" fg:x="27542" fg:w="286"/><text x="35.3725%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (286 samples, 0.36%)</title><rect x="35.1225%" y="741" width="0.3647%" height="15" fill="rgb(216,119,42)" fg:x="27542" fg:w="286"/><text x="35.3725%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (222 samples, 0.28%)</title><rect x="35.2041%" y="725" width="0.2831%" height="15" fill="rgb(232,155,0)" fg:x="27606" fg:w="222"/><text x="35.4541%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (222 samples, 0.28%)</title><rect x="35.2041%" y="709" width="0.2831%" height="15" fill="rgb(212,24,32)" fg:x="27606" fg:w="222"/><text x="35.4541%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (38 samples, 0.05%)</title><rect x="35.4387%" y="693" width="0.0485%" height="15" fill="rgb(216,69,20)" fg:x="27790" fg:w="38"/><text x="35.6887%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (38 samples, 0.05%)</title><rect x="35.4387%" y="677" width="0.0485%" height="15" fill="rgb(229,73,31)" fg:x="27790" fg:w="38"/><text x="35.6887%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (38 samples, 0.05%)</title><rect x="35.4387%" y="661" width="0.0485%" height="15" fill="rgb(224,219,20)" fg:x="27790" fg:w="38"/><text x="35.6887%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (38 samples, 0.05%)</title><rect x="35.4387%" y="645" width="0.0485%" height="15" fill="rgb(215,146,41)" fg:x="27790" fg:w="38"/><text x="35.6887%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.05%)</title><rect x="35.4387%" y="629" width="0.0485%" height="15" fill="rgb(244,71,31)" fg:x="27790" fg:w="38"/><text x="35.6887%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.05%)</title><rect x="35.4387%" y="613" width="0.0485%" height="15" fill="rgb(224,24,11)" fg:x="27790" fg:w="38"/><text x="35.6887%" y="623.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.05%)</title><rect x="35.4387%" y="597" width="0.0485%" height="15" fill="rgb(229,76,15)" fg:x="27790" fg:w="38"/><text x="35.6887%" y="607.50"></text></g><g><title>mallocx (23 samples, 0.03%)</title><rect x="35.4579%" y="581" width="0.0293%" height="15" fill="rgb(209,93,2)" fg:x="27805" fg:w="23"/><text x="35.7079%" y="591.50"></text></g><g><title>imalloc (23 samples, 0.03%)</title><rect x="35.4579%" y="565" width="0.0293%" height="15" fill="rgb(216,200,50)" fg:x="27805" fg:w="23"/><text x="35.7079%" y="575.50"></text></g><g><title>tsd_fetch (22 samples, 0.03%)</title><rect x="35.4591%" y="549" width="0.0281%" height="15" fill="rgb(211,67,34)" fg:x="27806" fg:w="22"/><text x="35.7091%" y="559.50"></text></g><g><title>tsd_fetch_impl (22 samples, 0.03%)</title><rect x="35.4591%" y="533" width="0.0281%" height="15" fill="rgb(225,87,47)" fg:x="27806" fg:w="22"/><text x="35.7091%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="35.4872%" y="805" width="0.0319%" height="15" fill="rgb(217,185,16)" fg:x="27828" fg:w="25"/><text x="35.7372%" y="815.50"></text></g><g><title>__rust_dealloc (14 samples, 0.02%)</title><rect x="35.5280%" y="741" width="0.0179%" height="15" fill="rgb(205,0,0)" fg:x="27860" fg:w="14"/><text x="35.7780%" y="751.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.02%)</title><rect x="35.5280%" y="725" width="0.0179%" height="15" fill="rgb(207,116,45)" fg:x="27860" fg:w="14"/><text x="35.7780%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (73 samples, 0.09%)</title><rect x="35.4872%" y="821" width="0.0931%" height="15" fill="rgb(221,156,26)" fg:x="27828" fg:w="73"/><text x="35.7372%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (48 samples, 0.06%)</title><rect x="35.5191%" y="805" width="0.0612%" height="15" fill="rgb(213,140,4)" fg:x="27853" fg:w="48"/><text x="35.7691%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.06%)</title><rect x="35.5191%" y="789" width="0.0612%" height="15" fill="rgb(231,224,15)" fg:x="27853" fg:w="48"/><text x="35.7691%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (48 samples, 0.06%)</title><rect x="35.5191%" y="773" width="0.0612%" height="15" fill="rgb(244,76,20)" fg:x="27853" fg:w="48"/><text x="35.7691%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (48 samples, 0.06%)</title><rect x="35.5191%" y="757" width="0.0612%" height="15" fill="rgb(238,117,7)" fg:x="27853" fg:w="48"/><text x="35.7691%" y="767.50"></text></g><g><title>sdallocx (25 samples, 0.03%)</title><rect x="35.5484%" y="741" width="0.0319%" height="15" fill="rgb(235,1,10)" fg:x="27876" fg:w="25"/><text x="35.7984%" y="751.50"></text></g><g><title>isfree (25 samples, 0.03%)</title><rect x="35.5484%" y="725" width="0.0319%" height="15" fill="rgb(216,165,6)" fg:x="27876" fg:w="25"/><text x="35.7984%" y="735.50"></text></g><g><title>isdalloct (25 samples, 0.03%)</title><rect x="35.5484%" y="709" width="0.0319%" height="15" fill="rgb(246,91,35)" fg:x="27876" fg:w="25"/><text x="35.7984%" y="719.50"></text></g><g><title>arena_sdalloc (25 samples, 0.03%)</title><rect x="35.5484%" y="693" width="0.0319%" height="15" fill="rgb(228,96,24)" fg:x="27876" fg:w="25"/><text x="35.7984%" y="703.50"></text></g><g><title>tcache_dalloc_small (25 samples, 0.03%)</title><rect x="35.5484%" y="677" width="0.0319%" height="15" fill="rgb(254,217,53)" fg:x="27876" fg:w="25"/><text x="35.7984%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11 samples, 0.01%)</title><rect x="35.5841%" y="773" width="0.0140%" height="15" fill="rgb(209,60,0)" fg:x="27904" fg:w="11"/><text x="35.8341%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="35.5867%" y="757" width="0.0115%" height="15" fill="rgb(250,93,26)" fg:x="27906" fg:w="9"/><text x="35.8367%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="35.5867%" y="741" width="0.0115%" height="15" fill="rgb(211,9,40)" fg:x="27906" fg:w="9"/><text x="35.8367%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (42 samples, 0.05%)</title><rect x="35.5841%" y="789" width="0.0536%" height="15" fill="rgb(242,57,20)" fg:x="27904" fg:w="42"/><text x="35.8341%" y="799.50"></text></g><g><title>core::ptr::write (31 samples, 0.04%)</title><rect x="35.5981%" y="773" width="0.0395%" height="15" fill="rgb(248,85,48)" fg:x="27915" fg:w="31"/><text x="35.8481%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field (490 samples, 0.62%)</title><rect x="35.0370%" y="837" width="0.6249%" height="15" fill="rgb(212,117,2)" fg:x="27475" fg:w="490"/><text x="35.2870%" y="847.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (64 samples, 0.08%)</title><rect x="35.5803%" y="821" width="0.0816%" height="15" fill="rgb(243,19,3)" fg:x="27901" fg:w="64"/><text x="35.8303%" y="831.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (61 samples, 0.08%)</title><rect x="35.5841%" y="805" width="0.0778%" height="15" fill="rgb(232,217,24)" fg:x="27904" fg:w="61"/><text x="35.8341%" y="815.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (19 samples, 0.02%)</title><rect x="35.6377%" y="789" width="0.0242%" height="15" fill="rgb(224,175,40)" fg:x="27946" fg:w="19"/><text x="35.8877%" y="799.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.01%)</title><rect x="35.6632%" y="725" width="0.0102%" height="15" fill="rgb(212,162,32)" fg:x="27966" fg:w="8"/><text x="35.9132%" y="735.50"></text></g><g><title>arena_bin_malloc_hard (9 samples, 0.01%)</title><rect x="35.7053%" y="341" width="0.0115%" height="15" fill="rgb(215,9,4)" fg:x="27999" fg:w="9"/><text x="35.9553%" y="351.50"></text></g><g><title>arena_bin_nonfull_slab_get (9 samples, 0.01%)</title><rect x="35.7053%" y="325" width="0.0115%" height="15" fill="rgb(242,42,7)" fg:x="27999" fg:w="9"/><text x="35.9553%" y="335.50"></text></g><g><title>arena_slab_alloc (8 samples, 0.01%)</title><rect x="35.7065%" y="309" width="0.0102%" height="15" fill="rgb(242,184,45)" fg:x="28000" fg:w="8"/><text x="35.9565%" y="319.50"></text></g><g><title>extent_recycle (8 samples, 0.01%)</title><rect x="35.7065%" y="293" width="0.0102%" height="15" fill="rgb(228,111,51)" fg:x="28000" fg:w="8"/><text x="35.9565%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 0.02%)</title><rect x="35.7002%" y="693" width="0.0217%" height="15" fill="rgb(236,147,17)" fg:x="27995" fg:w="17"/><text x="35.9502%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (17 samples, 0.02%)</title><rect x="35.7002%" y="677" width="0.0217%" height="15" fill="rgb(210,75,22)" fg:x="27995" fg:w="17"/><text x="35.9502%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="35.7014%" y="661" width="0.0204%" height="15" fill="rgb(217,159,45)" fg:x="27996" fg:w="16"/><text x="35.9514%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="35.7014%" y="645" width="0.0204%" height="15" fill="rgb(245,165,53)" fg:x="27996" fg:w="16"/><text x="35.9514%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="35.7014%" y="629" width="0.0204%" height="15" fill="rgb(251,190,50)" fg:x="27996" fg:w="16"/><text x="35.9514%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="35.7014%" y="613" width="0.0204%" height="15" fill="rgb(208,203,29)" fg:x="27996" fg:w="16"/><text x="35.9514%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.02%)</title><rect x="35.7014%" y="597" width="0.0204%" height="15" fill="rgb(207,209,35)" fg:x="27996" fg:w="16"/><text x="35.9514%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.02%)</title><rect x="35.7014%" y="581" width="0.0204%" height="15" fill="rgb(230,144,49)" fg:x="27996" fg:w="16"/><text x="35.9514%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.02%)</title><rect x="35.7014%" y="565" width="0.0204%" height="15" fill="rgb(229,31,6)" fg:x="27996" fg:w="16"/><text x="35.9514%" y="575.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.02%)</title><rect x="35.7014%" y="549" width="0.0204%" height="15" fill="rgb(251,129,24)" fg:x="27996" fg:w="16"/><text x="35.9514%" y="559.50"></text></g><g><title>rallocx (16 samples, 0.02%)</title><rect x="35.7014%" y="533" width="0.0204%" height="15" fill="rgb(235,105,15)" fg:x="27996" fg:w="16"/><text x="35.9514%" y="543.50"></text></g><g><title>iralloct (16 samples, 0.02%)</title><rect x="35.7014%" y="517" width="0.0204%" height="15" fill="rgb(216,52,43)" fg:x="27996" fg:w="16"/><text x="35.9514%" y="527.50"></text></g><g><title>_rjem_je_arena_ralloc (16 samples, 0.02%)</title><rect x="35.7014%" y="501" width="0.0204%" height="15" fill="rgb(238,144,41)" fg:x="27996" fg:w="16"/><text x="35.9514%" y="511.50"></text></g><g><title>arena_ralloc_move_helper (16 samples, 0.02%)</title><rect x="35.7014%" y="485" width="0.0204%" height="15" fill="rgb(243,63,9)" fg:x="27996" fg:w="16"/><text x="35.9514%" y="495.50"></text></g><g><title>ipalloct (13 samples, 0.02%)</title><rect x="35.7053%" y="469" width="0.0166%" height="15" fill="rgb(246,208,1)" fg:x="27999" fg:w="13"/><text x="35.9553%" y="479.50"></text></g><g><title>ipallocztm (13 samples, 0.02%)</title><rect x="35.7053%" y="453" width="0.0166%" height="15" fill="rgb(233,182,18)" fg:x="27999" fg:w="13"/><text x="35.9553%" y="463.50"></text></g><g><title>_rjem_je_arena_palloc (13 samples, 0.02%)</title><rect x="35.7053%" y="437" width="0.0166%" height="15" fill="rgb(242,224,8)" fg:x="27999" fg:w="13"/><text x="35.9553%" y="447.50"></text></g><g><title>_rjem_je_arena_palloc (13 samples, 0.02%)</title><rect x="35.7053%" y="421" width="0.0166%" height="15" fill="rgb(243,54,37)" fg:x="27999" fg:w="13"/><text x="35.9553%" y="431.50"></text></g><g><title>arena_malloc (13 samples, 0.02%)</title><rect x="35.7053%" y="405" width="0.0166%" height="15" fill="rgb(233,192,12)" fg:x="27999" fg:w="13"/><text x="35.9553%" y="415.50"></text></g><g><title>tcache_alloc_small (13 samples, 0.02%)</title><rect x="35.7053%" y="389" width="0.0166%" height="15" fill="rgb(251,192,53)" fg:x="27999" fg:w="13"/><text x="35.9553%" y="399.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (13 samples, 0.02%)</title><rect x="35.7053%" y="373" width="0.0166%" height="15" fill="rgb(246,141,26)" fg:x="27999" fg:w="13"/><text x="35.9553%" y="383.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (13 samples, 0.02%)</title><rect x="35.7053%" y="357" width="0.0166%" height="15" fill="rgb(239,195,19)" fg:x="27999" fg:w="13"/><text x="35.9553%" y="367.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (20 samples, 0.03%)</title><rect x="35.7384%" y="597" width="0.0255%" height="15" fill="rgb(241,16,39)" fg:x="28025" fg:w="20"/><text x="35.9884%" y="607.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (20 samples, 0.03%)</title><rect x="35.7384%" y="581" width="0.0255%" height="15" fill="rgb(223,13,53)" fg:x="28025" fg:w="20"/><text x="35.9884%" y="591.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (20 samples, 0.03%)</title><rect x="35.7384%" y="565" width="0.0255%" height="15" fill="rgb(214,227,0)" fg:x="28025" fg:w="20"/><text x="35.9884%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (50 samples, 0.06%)</title><rect x="35.7218%" y="677" width="0.0638%" height="15" fill="rgb(228,103,26)" fg:x="28012" fg:w="50"/><text x="35.9718%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (50 samples, 0.06%)</title><rect x="35.7218%" y="661" width="0.0638%" height="15" fill="rgb(254,177,53)" fg:x="28012" fg:w="50"/><text x="35.9718%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (50 samples, 0.06%)</title><rect x="35.7218%" y="645" width="0.0638%" height="15" fill="rgb(208,201,34)" fg:x="28012" fg:w="50"/><text x="35.9718%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (50 samples, 0.06%)</title><rect x="35.7218%" y="629" width="0.0638%" height="15" fill="rgb(212,39,5)" fg:x="28012" fg:w="50"/><text x="35.9718%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (50 samples, 0.06%)</title><rect x="35.7218%" y="613" width="0.0638%" height="15" fill="rgb(246,117,3)" fg:x="28012" fg:w="50"/><text x="35.9718%" y="623.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (17 samples, 0.02%)</title><rect x="35.7639%" y="597" width="0.0217%" height="15" fill="rgb(244,118,39)" fg:x="28045" fg:w="17"/><text x="36.0139%" y="607.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (17 samples, 0.02%)</title><rect x="35.7639%" y="581" width="0.0217%" height="15" fill="rgb(241,64,10)" fg:x="28045" fg:w="17"/><text x="36.0139%" y="591.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (16 samples, 0.02%)</title><rect x="35.7652%" y="565" width="0.0204%" height="15" fill="rgb(229,39,44)" fg:x="28046" fg:w="16"/><text x="36.0152%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.08%)</title><rect x="35.7218%" y="693" width="0.0803%" height="15" fill="rgb(230,226,3)" fg:x="28012" fg:w="63"/><text x="35.9718%" y="703.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (13 samples, 0.02%)</title><rect x="35.7856%" y="677" width="0.0166%" height="15" fill="rgb(222,13,42)" fg:x="28062" fg:w="13"/><text x="36.0356%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (121 samples, 0.15%)</title><rect x="35.6619%" y="821" width="0.1543%" height="15" fill="rgb(247,180,54)" fg:x="27965" fg:w="121"/><text x="35.9119%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (121 samples, 0.15%)</title><rect x="35.6619%" y="805" width="0.1543%" height="15" fill="rgb(205,96,16)" fg:x="27965" fg:w="121"/><text x="35.9119%" y="815.50"></text></g><g><title>core::iter::adapters::try_process (120 samples, 0.15%)</title><rect x="35.6632%" y="789" width="0.1530%" height="15" fill="rgb(205,100,21)" fg:x="27966" fg:w="120"/><text x="35.9132%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (120 samples, 0.15%)</title><rect x="35.6632%" y="773" width="0.1530%" height="15" fill="rgb(248,51,4)" fg:x="27966" fg:w="120"/><text x="35.9132%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (120 samples, 0.15%)</title><rect x="35.6632%" y="757" width="0.1530%" height="15" fill="rgb(217,197,30)" fg:x="27966" fg:w="120"/><text x="35.9132%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (120 samples, 0.15%)</title><rect x="35.6632%" y="741" width="0.1530%" height="15" fill="rgb(240,179,40)" fg:x="27966" fg:w="120"/><text x="35.9132%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (112 samples, 0.14%)</title><rect x="35.6734%" y="725" width="0.1428%" height="15" fill="rgb(212,185,35)" fg:x="27974" fg:w="112"/><text x="35.9234%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (108 samples, 0.14%)</title><rect x="35.6785%" y="709" width="0.1377%" height="15" fill="rgb(251,222,31)" fg:x="27978" fg:w="108"/><text x="35.9285%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="35.8022%" y="693" width="0.0140%" height="15" fill="rgb(208,140,36)" fg:x="28075" fg:w="11"/><text x="36.0522%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="35.8022%" y="677" width="0.0140%" height="15" fill="rgb(220,148,1)" fg:x="28075" fg:w="11"/><text x="36.0522%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="35.8022%" y="661" width="0.0140%" height="15" fill="rgb(254,4,28)" fg:x="28075" fg:w="11"/><text x="36.0522%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (11 samples, 0.01%)</title><rect x="35.8022%" y="645" width="0.0140%" height="15" fill="rgb(222,185,44)" fg:x="28075" fg:w="11"/><text x="36.0522%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="35.8022%" y="629" width="0.0140%" height="15" fill="rgb(215,74,39)" fg:x="28075" fg:w="11"/><text x="36.0522%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="35.8022%" y="613" width="0.0140%" height="15" fill="rgb(247,86,4)" fg:x="28075" fg:w="11"/><text x="36.0522%" y="623.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="35.8022%" y="597" width="0.0140%" height="15" fill="rgb(231,105,32)" fg:x="28075" fg:w="11"/><text x="36.0522%" y="607.50"></text></g><g><title>mallocx (9 samples, 0.01%)</title><rect x="35.8047%" y="581" width="0.0115%" height="15" fill="rgb(222,65,35)" fg:x="28077" fg:w="9"/><text x="36.0547%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_types::loaded_data::runtime_types::StructType&gt;&gt; (15 samples, 0.02%)</title><rect x="35.8162%" y="821" width="0.0191%" height="15" fill="rgb(218,145,35)" fg:x="28086" fg:w="15"/><text x="36.0662%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="35.8162%" y="805" width="0.0191%" height="15" fill="rgb(208,7,15)" fg:x="28086" fg:w="15"/><text x="36.0662%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.02%)</title><rect x="35.8162%" y="789" width="0.0191%" height="15" fill="rgb(209,83,13)" fg:x="28086" fg:w="15"/><text x="36.0662%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.02%)</title><rect x="35.8162%" y="773" width="0.0191%" height="15" fill="rgb(218,3,10)" fg:x="28086" fg:w="15"/><text x="36.0662%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_struct_fields (145 samples, 0.18%)</title><rect x="35.6619%" y="837" width="0.1849%" height="15" fill="rgb(211,219,4)" fg:x="27965" fg:w="145"/><text x="35.9119%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (9 samples, 0.01%)</title><rect x="35.8353%" y="821" width="0.0115%" height="15" fill="rgb(228,194,12)" fg:x="28101" fg:w="9"/><text x="36.0853%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="35.9119%" y="661" width="0.0115%" height="15" fill="rgb(210,175,7)" fg:x="28161" fg:w="9"/><text x="36.1619%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (9 samples, 0.01%)</title><rect x="35.9119%" y="645" width="0.0115%" height="15" fill="rgb(243,132,6)" fg:x="28161" fg:w="9"/><text x="36.1619%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="35.9119%" y="629" width="0.0115%" height="15" fill="rgb(207,72,18)" fg:x="28161" fg:w="9"/><text x="36.1619%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="35.9119%" y="613" width="0.0115%" height="15" fill="rgb(236,1,18)" fg:x="28161" fg:w="9"/><text x="36.1619%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.01%)</title><rect x="35.9119%" y="597" width="0.0115%" height="15" fill="rgb(227,0,18)" fg:x="28161" fg:w="9"/><text x="36.1619%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (9 samples, 0.01%)</title><rect x="35.9119%" y="581" width="0.0115%" height="15" fill="rgb(247,37,5)" fg:x="28161" fg:w="9"/><text x="36.1619%" y="591.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type::{{closure}} (9 samples, 0.01%)</title><rect x="35.9119%" y="565" width="0.0115%" height="15" fill="rgb(237,179,24)" fg:x="28161" fg:w="9"/><text x="36.1619%" y="575.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (9 samples, 0.01%)</title><rect x="35.9119%" y="549" width="0.0115%" height="15" fill="rgb(226,53,20)" fg:x="28161" fg:w="9"/><text x="36.1619%" y="559.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (8 samples, 0.01%)</title><rect x="35.9131%" y="533" width="0.0102%" height="15" fill="rgb(247,75,7)" fg:x="28162" fg:w="8"/><text x="36.1631%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (19 samples, 0.02%)</title><rect x="35.9119%" y="693" width="0.0242%" height="15" fill="rgb(233,96,12)" fg:x="28161" fg:w="19"/><text x="36.1619%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (19 samples, 0.02%)</title><rect x="35.9119%" y="677" width="0.0242%" height="15" fill="rgb(224,125,0)" fg:x="28161" fg:w="19"/><text x="36.1619%" y="687.50"></text></g><g><title>core::ptr::write (10 samples, 0.01%)</title><rect x="35.9233%" y="661" width="0.0128%" height="15" fill="rgb(224,92,25)" fg:x="28170" fg:w="10"/><text x="36.1733%" y="671.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.03%)</title><rect x="35.9361%" y="613" width="0.0268%" height="15" fill="rgb(224,42,24)" fg:x="28180" fg:w="21"/><text x="36.1861%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.02%)</title><rect x="35.9641%" y="549" width="0.0179%" height="15" fill="rgb(234,132,49)" fg:x="28202" fg:w="14"/><text x="36.2141%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.05%)</title><rect x="35.9361%" y="693" width="0.0497%" height="15" fill="rgb(248,100,35)" fg:x="28180" fg:w="39"/><text x="36.1861%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (39 samples, 0.05%)</title><rect x="35.9361%" y="677" width="0.0497%" height="15" fill="rgb(239,94,40)" fg:x="28180" fg:w="39"/><text x="36.1861%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 0.05%)</title><rect x="35.9361%" y="661" width="0.0497%" height="15" fill="rgb(235,139,28)" fg:x="28180" fg:w="39"/><text x="36.1861%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 0.05%)</title><rect x="35.9361%" y="645" width="0.0497%" height="15" fill="rgb(217,144,7)" fg:x="28180" fg:w="39"/><text x="36.1861%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (39 samples, 0.05%)</title><rect x="35.9361%" y="629" width="0.0497%" height="15" fill="rgb(227,55,4)" fg:x="28180" fg:w="39"/><text x="36.1861%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (18 samples, 0.02%)</title><rect x="35.9629%" y="613" width="0.0230%" height="15" fill="rgb(252,82,54)" fg:x="28201" fg:w="18"/><text x="36.2129%" y="623.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (18 samples, 0.02%)</title><rect x="35.9629%" y="597" width="0.0230%" height="15" fill="rgb(245,172,4)" fg:x="28201" fg:w="18"/><text x="36.2129%" y="607.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (18 samples, 0.02%)</title><rect x="35.9629%" y="581" width="0.0230%" height="15" fill="rgb(207,26,27)" fg:x="28201" fg:w="18"/><text x="36.2129%" y="591.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (17 samples, 0.02%)</title><rect x="35.9641%" y="565" width="0.0217%" height="15" fill="rgb(252,98,18)" fg:x="28202" fg:w="17"/><text x="36.2141%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (83 samples, 0.11%)</title><rect x="35.8966%" y="821" width="0.1058%" height="15" fill="rgb(244,8,26)" fg:x="28149" fg:w="83"/><text x="36.1466%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (83 samples, 0.11%)</title><rect x="35.8966%" y="805" width="0.1058%" height="15" fill="rgb(237,173,45)" fg:x="28149" fg:w="83"/><text x="36.1466%" y="815.50"></text></g><g><title>core::iter::adapters::try_process (83 samples, 0.11%)</title><rect x="35.8966%" y="789" width="0.1058%" height="15" fill="rgb(208,213,49)" fg:x="28149" fg:w="83"/><text x="36.1466%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (71 samples, 0.09%)</title><rect x="35.9119%" y="773" width="0.0905%" height="15" fill="rgb(212,122,37)" fg:x="28161" fg:w="71"/><text x="36.1619%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (71 samples, 0.09%)</title><rect x="35.9119%" y="757" width="0.0905%" height="15" fill="rgb(213,80,17)" fg:x="28161" fg:w="71"/><text x="36.1619%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (71 samples, 0.09%)</title><rect x="35.9119%" y="741" width="0.0905%" height="15" fill="rgb(206,210,43)" fg:x="28161" fg:w="71"/><text x="36.1619%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (71 samples, 0.09%)</title><rect x="35.9119%" y="725" width="0.0905%" height="15" fill="rgb(229,214,3)" fg:x="28161" fg:w="71"/><text x="36.1619%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (71 samples, 0.09%)</title><rect x="35.9119%" y="709" width="0.0905%" height="15" fill="rgb(235,213,29)" fg:x="28161" fg:w="71"/><text x="36.1619%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 0.02%)</title><rect x="35.9858%" y="693" width="0.0166%" height="15" fill="rgb(248,135,26)" fg:x="28219" fg:w="13"/><text x="36.2358%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.02%)</title><rect x="35.9858%" y="677" width="0.0166%" height="15" fill="rgb(242,188,12)" fg:x="28219" fg:w="13"/><text x="36.2358%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.02%)</title><rect x="35.9858%" y="661" width="0.0166%" height="15" fill="rgb(245,38,12)" fg:x="28219" fg:w="13"/><text x="36.2358%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (13 samples, 0.02%)</title><rect x="35.9858%" y="645" width="0.0166%" height="15" fill="rgb(218,42,13)" fg:x="28219" fg:w="13"/><text x="36.2358%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.02%)</title><rect x="35.9858%" y="629" width="0.0166%" height="15" fill="rgb(238,132,49)" fg:x="28219" fg:w="13"/><text x="36.2358%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.02%)</title><rect x="35.9858%" y="613" width="0.0166%" height="15" fill="rgb(209,196,19)" fg:x="28219" fg:w="13"/><text x="36.2358%" y="623.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.02%)</title><rect x="35.9858%" y="597" width="0.0166%" height="15" fill="rgb(244,131,22)" fg:x="28219" fg:w="13"/><text x="36.2358%" y="607.50"></text></g><g><title>mallocx (9 samples, 0.01%)</title><rect x="35.9909%" y="581" width="0.0115%" height="15" fill="rgb(223,18,34)" fg:x="28223" fg:w="9"/><text x="36.2409%" y="591.50"></text></g><g><title>imalloc (9 samples, 0.01%)</title><rect x="35.9909%" y="565" width="0.0115%" height="15" fill="rgb(252,124,54)" fg:x="28223" fg:w="9"/><text x="36.2409%" y="575.50"></text></g><g><title>imalloc_body (9 samples, 0.01%)</title><rect x="35.9909%" y="549" width="0.0115%" height="15" fill="rgb(229,106,42)" fg:x="28223" fg:w="9"/><text x="36.2409%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (33 samples, 0.04%)</title><rect x="36.0024%" y="805" width="0.0421%" height="15" fill="rgb(221,129,1)" fg:x="28232" fg:w="33"/><text x="36.2524%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 0.04%)</title><rect x="36.0024%" y="789" width="0.0421%" height="15" fill="rgb(229,74,15)" fg:x="28232" fg:w="33"/><text x="36.2524%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 0.04%)</title><rect x="36.0024%" y="773" width="0.0421%" height="15" fill="rgb(210,206,50)" fg:x="28232" fg:w="33"/><text x="36.2524%" y="783.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.04%)</title><rect x="36.0024%" y="757" width="0.0421%" height="15" fill="rgb(251,114,31)" fg:x="28232" fg:w="33"/><text x="36.2524%" y="767.50"></text></g><g><title>mallocx (26 samples, 0.03%)</title><rect x="36.0113%" y="741" width="0.0332%" height="15" fill="rgb(215,225,28)" fg:x="28239" fg:w="26"/><text x="36.2613%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (184 samples, 0.23%)</title><rect x="35.8468%" y="837" width="0.2346%" height="15" fill="rgb(237,109,14)" fg:x="28110" fg:w="184"/><text x="36.0968%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (62 samples, 0.08%)</title><rect x="36.0024%" y="821" width="0.0791%" height="15" fill="rgb(230,13,37)" fg:x="28232" fg:w="62"/><text x="36.2524%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (29 samples, 0.04%)</title><rect x="36.0445%" y="805" width="0.0370%" height="15" fill="rgb(231,40,28)" fg:x="28265" fg:w="29"/><text x="36.2945%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (29 samples, 0.04%)</title><rect x="36.0445%" y="789" width="0.0370%" height="15" fill="rgb(231,202,18)" fg:x="28265" fg:w="29"/><text x="36.2945%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.04%)</title><rect x="36.0445%" y="773" width="0.0370%" height="15" fill="rgb(225,33,18)" fg:x="28265" fg:w="29"/><text x="36.2945%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.04%)</title><rect x="36.0445%" y="757" width="0.0370%" height="15" fill="rgb(223,64,47)" fg:x="28265" fg:w="29"/><text x="36.2945%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.04%)</title><rect x="36.0445%" y="741" width="0.0370%" height="15" fill="rgb(234,114,13)" fg:x="28265" fg:w="29"/><text x="36.2945%" y="751.50"></text></g><g><title>sdallocx (18 samples, 0.02%)</title><rect x="36.0585%" y="725" width="0.0230%" height="15" fill="rgb(248,56,40)" fg:x="28276" fg:w="18"/><text x="36.3085%" y="735.50"></text></g><g><title>inallocx (18 samples, 0.02%)</title><rect x="36.0585%" y="709" width="0.0230%" height="15" fill="rgb(221,194,21)" fg:x="28276" fg:w="18"/><text x="36.3085%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_single_type (155 samples, 0.20%)</title><rect x="36.0815%" y="837" width="0.1977%" height="15" fill="rgb(242,108,46)" fg:x="28294" fg:w="155"/><text x="36.3315%" y="847.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (57 samples, 0.07%)</title><rect x="36.2064%" y="821" width="0.0727%" height="15" fill="rgb(220,106,10)" fg:x="28392" fg:w="57"/><text x="36.4564%" y="831.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (445 samples, 0.57%)</title><rect x="36.2791%" y="837" width="0.5675%" height="15" fill="rgb(211,88,4)" fg:x="28449" fg:w="445"/><text x="36.5291%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (310 samples, 0.40%)</title><rect x="36.4513%" y="821" width="0.3953%" height="15" fill="rgb(214,95,34)" fg:x="28584" fg:w="310"/><text x="36.7013%" y="831.50"></text></g><g><title>core::cmp::PartialEq::ne (310 samples, 0.40%)</title><rect x="36.4513%" y="805" width="0.3953%" height="15" fill="rgb(250,160,33)" fg:x="28584" fg:w="310"/><text x="36.7013%" y="815.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (240 samples, 0.31%)</title><rect x="36.5405%" y="789" width="0.3061%" height="15" fill="rgb(225,29,10)" fg:x="28654" fg:w="240"/><text x="36.7905%" y="799.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_ref_eq (19 samples, 0.02%)</title><rect x="36.8466%" y="837" width="0.0242%" height="15" fill="rgb(224,28,30)" fg:x="28894" fg:w="19"/><text x="37.0966%" y="847.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (16 samples, 0.02%)</title><rect x="36.8504%" y="821" width="0.0204%" height="15" fill="rgb(231,77,4)" fg:x="28897" fg:w="16"/><text x="37.1004%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (16 samples, 0.02%)</title><rect x="36.8504%" y="805" width="0.0204%" height="15" fill="rgb(209,63,21)" fg:x="28897" fg:w="16"/><text x="37.1004%" y="815.50"></text></g><g><title>core::cmp::PartialEq::ne (16 samples, 0.02%)</title><rect x="36.8504%" y="789" width="0.0204%" height="15" fill="rgb(226,22,11)" fg:x="28897" fg:w="16"/><text x="37.1004%" y="799.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (16 samples, 0.02%)</title><rect x="36.8504%" y="773" width="0.0204%" height="15" fill="rgb(216,82,30)" fg:x="28897" fg:w="16"/><text x="37.1004%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.01%)</title><rect x="36.8606%" y="757" width="0.0102%" height="15" fill="rgb(246,227,38)" fg:x="28905" fg:w="8"/><text x="37.1106%" y="767.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (8 samples, 0.01%)</title><rect x="36.8606%" y="741" width="0.0102%" height="15" fill="rgb(251,203,53)" fg:x="28905" fg:w="8"/><text x="37.1106%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (8 samples, 0.01%)</title><rect x="36.8606%" y="725" width="0.0102%" height="15" fill="rgb(254,101,1)" fg:x="28905" fg:w="8"/><text x="37.1106%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (8 samples, 0.01%)</title><rect x="36.8606%" y="709" width="0.0102%" height="15" fill="rgb(241,180,5)" fg:x="28905" fg:w="8"/><text x="37.1106%" y="719.50"></text></g><g><title>core::cmp::PartialEq::ne (8 samples, 0.01%)</title><rect x="36.8606%" y="693" width="0.0102%" height="15" fill="rgb(218,168,4)" fg:x="28905" fg:w="8"/><text x="37.1106%" y="703.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (8 samples, 0.01%)</title><rect x="36.8606%" y="677" width="0.0102%" height="15" fill="rgb(224,223,32)" fg:x="28905" fg:w="8"/><text x="37.1106%" y="687.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (60 samples, 0.08%)</title><rect x="36.9996%" y="821" width="0.0765%" height="15" fill="rgb(236,106,22)" fg:x="29014" fg:w="60"/><text x="37.2496%" y="831.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_vec_ref (212 samples, 0.27%)</title><rect x="36.8708%" y="837" width="0.2703%" height="15" fill="rgb(206,121,5)" fg:x="28913" fg:w="212"/><text x="37.1208%" y="847.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (51 samples, 0.07%)</title><rect x="37.0761%" y="821" width="0.0650%" height="15" fill="rgb(233,87,28)" fg:x="29074" fg:w="51"/><text x="37.3261%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (51 samples, 0.07%)</title><rect x="37.0761%" y="805" width="0.0650%" height="15" fill="rgb(236,137,17)" fg:x="29074" fg:w="51"/><text x="37.3261%" y="815.50"></text></g><g><title>core::cmp::PartialEq::ne (51 samples, 0.07%)</title><rect x="37.0761%" y="789" width="0.0650%" height="15" fill="rgb(209,183,38)" fg:x="29074" fg:w="51"/><text x="37.3261%" y="799.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (50 samples, 0.06%)</title><rect x="37.0774%" y="773" width="0.0638%" height="15" fill="rgb(206,162,44)" fg:x="29075" fg:w="50"/><text x="37.3274%" y="783.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::from_const_signature (13 samples, 0.02%)</title><rect x="37.1412%" y="837" width="0.0166%" height="15" fill="rgb(237,70,39)" fg:x="29125" fg:w="13"/><text x="37.3912%" y="847.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (15,026 samples, 19.16%)</title><rect x="18.8352%" y="853" width="19.1617%" height="15" fill="rgb(212,176,5)" fg:x="14770" fg:w="15026"/><text x="19.0852%" y="863.50">move_vm_runtime::interpreter::..</text></g><g><title>sdallocx (658 samples, 0.84%)</title><rect x="37.1578%" y="837" width="0.8391%" height="15" fill="rgb(232,95,16)" fg:x="29138" fg:w="658"/><text x="37.4078%" y="847.50"></text></g><g><title>isfree (658 samples, 0.84%)</title><rect x="37.1578%" y="821" width="0.8391%" height="15" fill="rgb(219,115,35)" fg:x="29138" fg:w="658"/><text x="37.4078%" y="831.50"></text></g><g><title>isdalloct (658 samples, 0.84%)</title><rect x="37.1578%" y="805" width="0.8391%" height="15" fill="rgb(251,67,27)" fg:x="29138" fg:w="658"/><text x="37.4078%" y="815.50"></text></g><g><title>arena_sdalloc (658 samples, 0.84%)</title><rect x="37.1578%" y="789" width="0.8391%" height="15" fill="rgb(222,95,40)" fg:x="29138" fg:w="658"/><text x="37.4078%" y="799.50"></text></g><g><title>tcache_dalloc_small (657 samples, 0.84%)</title><rect x="37.1590%" y="773" width="0.8378%" height="15" fill="rgb(250,35,16)" fg:x="29139" fg:w="657"/><text x="37.4090%" y="783.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (23 samples, 0.03%)</title><rect x="41.7792%" y="805" width="0.0293%" height="15" fill="rgb(224,86,44)" fg:x="32762" fg:w="23"/><text x="42.0292%" y="815.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (23 samples, 0.03%)</title><rect x="41.7792%" y="789" width="0.0293%" height="15" fill="rgb(237,53,53)" fg:x="32762" fg:w="23"/><text x="42.0292%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="41.7830%" y="773" width="0.0255%" height="15" fill="rgb(208,171,33)" fg:x="32765" fg:w="20"/><text x="42.0330%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.03%)</title><rect x="41.7830%" y="757" width="0.0255%" height="15" fill="rgb(222,64,27)" fg:x="32765" fg:w="20"/><text x="42.0330%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.03%)</title><rect x="41.7830%" y="741" width="0.0255%" height="15" fill="rgb(221,121,35)" fg:x="32765" fg:w="20"/><text x="42.0330%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.03%)</title><rect x="41.7830%" y="725" width="0.0255%" height="15" fill="rgb(228,137,42)" fg:x="32765" fg:w="20"/><text x="42.0330%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="41.7983%" y="709" width="0.0102%" height="15" fill="rgb(227,54,21)" fg:x="32777" fg:w="8"/><text x="42.0483%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="41.7983%" y="693" width="0.0102%" height="15" fill="rgb(240,168,33)" fg:x="32777" fg:w="8"/><text x="42.0483%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.01%)</title><rect x="41.7983%" y="677" width="0.0102%" height="15" fill="rgb(243,159,6)" fg:x="32777" fg:w="8"/><text x="42.0483%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="41.7983%" y="661" width="0.0102%" height="15" fill="rgb(205,211,41)" fg:x="32777" fg:w="8"/><text x="42.0483%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="41.7983%" y="645" width="0.0102%" height="15" fill="rgb(253,30,1)" fg:x="32777" fg:w="8"/><text x="42.0483%" y="655.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="41.7983%" y="629" width="0.0102%" height="15" fill="rgb(226,80,18)" fg:x="32777" fg:w="8"/><text x="42.0483%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="41.7792%" y="821" width="0.0344%" height="15" fill="rgb(253,156,46)" fg:x="32762" fg:w="27"/><text x="42.0292%" y="831.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (375 samples, 0.48%)</title><rect x="41.3571%" y="837" width="0.4782%" height="15" fill="rgb(248,87,27)" fg:x="32431" fg:w="375"/><text x="41.6071%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="41.8136%" y="821" width="0.0217%" height="15" fill="rgb(227,122,2)" fg:x="32789" fg:w="17"/><text x="42.0636%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="41.8136%" y="805" width="0.0217%" height="15" fill="rgb(229,94,39)" fg:x="32789" fg:w="17"/><text x="42.0636%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="41.8136%" y="789" width="0.0217%" height="15" fill="rgb(225,173,31)" fg:x="32789" fg:w="17"/><text x="42.0636%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="41.8136%" y="773" width="0.0217%" height="15" fill="rgb(239,176,30)" fg:x="32789" fg:w="17"/><text x="42.0636%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (10 samples, 0.01%)</title><rect x="42.2485%" y="805" width="0.0128%" height="15" fill="rgb(212,104,21)" fg:x="33130" fg:w="10"/><text x="42.4985%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (340 samples, 0.43%)</title><rect x="41.8430%" y="837" width="0.4336%" height="15" fill="rgb(240,209,40)" fg:x="32812" fg:w="340"/><text x="42.0930%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (23 samples, 0.03%)</title><rect x="42.2472%" y="821" width="0.0293%" height="15" fill="rgb(234,195,5)" fg:x="33129" fg:w="23"/><text x="42.4972%" y="831.50"></text></g><g><title>sdallocx (12 samples, 0.02%)</title><rect x="42.2612%" y="805" width="0.0153%" height="15" fill="rgb(238,213,1)" fg:x="33140" fg:w="12"/><text x="42.5112%" y="815.50"></text></g><g><title>isfree (12 samples, 0.02%)</title><rect x="42.2612%" y="789" width="0.0153%" height="15" fill="rgb(235,182,54)" fg:x="33140" fg:w="12"/><text x="42.5112%" y="799.50"></text></g><g><title>isdalloct (12 samples, 0.02%)</title><rect x="42.2612%" y="773" width="0.0153%" height="15" fill="rgb(229,50,46)" fg:x="33140" fg:w="12"/><text x="42.5112%" y="783.50"></text></g><g><title>arena_sdalloc (12 samples, 0.02%)</title><rect x="42.2612%" y="757" width="0.0153%" height="15" fill="rgb(219,145,13)" fg:x="33140" fg:w="12"/><text x="42.5112%" y="767.50"></text></g><g><title>tcache_dalloc_small (12 samples, 0.02%)</title><rect x="42.2612%" y="741" width="0.0153%" height="15" fill="rgb(220,226,10)" fg:x="33140" fg:w="12"/><text x="42.5112%" y="751.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (159 samples, 0.20%)</title><rect x="42.2765%" y="837" width="0.2028%" height="15" fill="rgb(248,47,30)" fg:x="33152" fg:w="159"/><text x="42.5265%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (159 samples, 0.20%)</title><rect x="42.2765%" y="821" width="0.2028%" height="15" fill="rgb(231,209,44)" fg:x="33152" fg:w="159"/><text x="42.5265%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.01%)</title><rect x="42.4806%" y="821" width="0.0115%" height="15" fill="rgb(209,80,30)" fg:x="33312" fg:w="9"/><text x="42.7306%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="42.4806%" y="805" width="0.0115%" height="15" fill="rgb(232,9,14)" fg:x="33312" fg:w="9"/><text x="42.7306%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="42.4806%" y="789" width="0.0115%" height="15" fill="rgb(243,91,43)" fg:x="33312" fg:w="9"/><text x="42.7306%" y="799.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="42.4806%" y="773" width="0.0115%" height="15" fill="rgb(231,90,52)" fg:x="33312" fg:w="9"/><text x="42.7306%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_types::loaded_data::runtime_types::StructType&gt;&gt; (28 samples, 0.04%)</title><rect x="42.4921%" y="821" width="0.0357%" height="15" fill="rgb(253,192,44)" fg:x="33321" fg:w="28"/><text x="42.7421%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.04%)</title><rect x="42.4921%" y="805" width="0.0357%" height="15" fill="rgb(241,66,31)" fg:x="33321" fg:w="28"/><text x="42.7421%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (28 samples, 0.04%)</title><rect x="42.4921%" y="789" width="0.0357%" height="15" fill="rgb(235,81,37)" fg:x="33321" fg:w="28"/><text x="42.7421%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (28 samples, 0.04%)</title><rect x="42.4921%" y="773" width="0.0357%" height="15" fill="rgb(223,221,9)" fg:x="33321" fg:w="28"/><text x="42.7421%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt; (9 samples, 0.01%)</title><rect x="42.5418%" y="725" width="0.0115%" height="15" fill="rgb(242,180,7)" fg:x="33360" fg:w="9"/><text x="42.7918%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="42.5418%" y="709" width="0.0115%" height="15" fill="rgb(243,78,19)" fg:x="33360" fg:w="9"/><text x="42.7918%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bool,alloc::alloc::Global&gt;&gt; (9 samples, 0.01%)</title><rect x="42.5418%" y="693" width="0.0115%" height="15" fill="rgb(233,23,17)" fg:x="33360" fg:w="9"/><text x="42.7918%" y="703.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="42.5418%" y="677" width="0.0115%" height="15" fill="rgb(252,122,45)" fg:x="33360" fg:w="9"/><text x="42.7918%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (9 samples, 0.01%)</title><rect x="42.5418%" y="661" width="0.0115%" height="15" fill="rgb(247,108,20)" fg:x="33360" fg:w="9"/><text x="42.7918%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="42.5418%" y="645" width="0.0115%" height="15" fill="rgb(235,84,21)" fg:x="33360" fg:w="9"/><text x="42.7918%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="42.5418%" y="629" width="0.0115%" height="15" fill="rgb(247,129,10)" fg:x="33360" fg:w="9"/><text x="42.7918%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="42.5418%" y="613" width="0.0115%" height="15" fill="rgb(208,173,14)" fg:x="33360" fg:w="9"/><text x="42.7918%" y="623.50"></text></g><g><title>sdallocx (8 samples, 0.01%)</title><rect x="42.5431%" y="597" width="0.0102%" height="15" fill="rgb(236,31,38)" fg:x="33361" fg:w="8"/><text x="42.7931%" y="607.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (22 samples, 0.03%)</title><rect x="42.5278%" y="821" width="0.0281%" height="15" fill="rgb(232,65,17)" fg:x="33349" fg:w="22"/><text x="42.7778%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.03%)</title><rect x="42.5278%" y="805" width="0.0281%" height="15" fill="rgb(224,45,49)" fg:x="33349" fg:w="22"/><text x="42.7778%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.03%)</title><rect x="42.5278%" y="789" width="0.0281%" height="15" fill="rgb(225,2,53)" fg:x="33349" fg:w="22"/><text x="42.7778%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.03%)</title><rect x="42.5278%" y="773" width="0.0281%" height="15" fill="rgb(248,210,53)" fg:x="33349" fg:w="22"/><text x="42.7778%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (22 samples, 0.03%)</title><rect x="42.5278%" y="757" width="0.0281%" height="15" fill="rgb(211,1,30)" fg:x="33349" fg:w="22"/><text x="42.7778%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_binary_format::file_format::AbilitySet&gt;,alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="42.5418%" y="741" width="0.0140%" height="15" fill="rgb(224,96,15)" fg:x="33360" fg:w="11"/><text x="42.7918%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (63 samples, 0.08%)</title><rect x="42.4793%" y="837" width="0.0803%" height="15" fill="rgb(252,45,11)" fg:x="33311" fg:w="63"/><text x="42.7293%" y="847.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (225 samples, 0.29%)</title><rect x="42.5596%" y="837" width="0.2869%" height="15" fill="rgb(220,125,38)" fg:x="33374" fg:w="225"/><text x="42.8096%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (158 samples, 0.20%)</title><rect x="42.6451%" y="821" width="0.2015%" height="15" fill="rgb(243,161,33)" fg:x="33441" fg:w="158"/><text x="42.8951%" y="831.50"></text></g><g><title>core::cmp::PartialEq::ne (158 samples, 0.20%)</title><rect x="42.6451%" y="805" width="0.2015%" height="15" fill="rgb(248,197,34)" fg:x="33441" fg:w="158"/><text x="42.8951%" y="815.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (125 samples, 0.16%)</title><rect x="42.6872%" y="789" width="0.1594%" height="15" fill="rgb(228,165,23)" fg:x="33474" fg:w="125"/><text x="42.9372%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::is_invalid (216 samples, 0.28%)</title><rect x="42.8466%" y="837" width="0.2755%" height="15" fill="rgb(236,94,38)" fg:x="33599" fg:w="216"/><text x="43.0966%" y="847.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (4,031 samples, 5.14%)</title><rect x="37.9969%" y="853" width="5.1405%" height="15" fill="rgb(220,13,23)" fg:x="29796" fg:w="4031"/><text x="38.2469%" y="863.50">move_v..</text></g><g><title>sdallocx (12 samples, 0.02%)</title><rect x="43.1220%" y="837" width="0.0153%" height="15" fill="rgb(234,26,39)" fg:x="33815" fg:w="12"/><text x="43.3720%" y="847.50"></text></g><g><title>isfree (12 samples, 0.02%)</title><rect x="43.1220%" y="821" width="0.0153%" height="15" fill="rgb(205,117,44)" fg:x="33815" fg:w="12"/><text x="43.3720%" y="831.50"></text></g><g><title>isdalloct (12 samples, 0.02%)</title><rect x="43.1220%" y="805" width="0.0153%" height="15" fill="rgb(250,42,2)" fg:x="33815" fg:w="12"/><text x="43.3720%" y="815.50"></text></g><g><title>arena_sdalloc (12 samples, 0.02%)</title><rect x="43.1220%" y="789" width="0.0153%" height="15" fill="rgb(223,83,14)" fg:x="33815" fg:w="12"/><text x="43.3720%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::ty_args (10,886 samples, 13.88%)</title><rect x="43.1373%" y="853" width="13.8822%" height="15" fill="rgb(241,147,50)" fg:x="33827" fg:w="10886"/><text x="43.3873%" y="863.50">move_vm_runtime::inte..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (10,886 samples, 13.88%)</title><rect x="43.1373%" y="837" width="13.8822%" height="15" fill="rgb(218,90,6)" fg:x="33827" fg:w="10886"/><text x="43.3873%" y="847.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (10,886 samples, 13.88%)</title><rect x="43.1373%" y="821" width="13.8822%" height="15" fill="rgb(210,191,5)" fg:x="33827" fg:w="10886"/><text x="43.3873%" y="831.50">alloc::vec::Vec&lt;T,A&gt;:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (10,886 samples, 13.88%)</title><rect x="43.1373%" y="805" width="13.8822%" height="15" fill="rgb(225,139,19)" fg:x="33827" fg:w="10886"/><text x="43.3873%" y="815.50">alloc::raw_vec::RawVe..</text></g><g><title>move_vm_types::values::values_impl::IntegerValue::gt (33 samples, 0.04%)</title><rect x="59.4782%" y="789" width="0.0421%" height="15" fill="rgb(210,1,33)" fg:x="46641" fg:w="33"/><text x="59.7282%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool::{{closure}} (134 samples, 0.17%)</title><rect x="59.4590%" y="821" width="0.1709%" height="15" fill="rgb(213,50,3)" fg:x="46626" fg:w="134"/><text x="59.7090%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (134 samples, 0.17%)</title><rect x="59.4590%" y="805" width="0.1709%" height="15" fill="rgb(234,227,4)" fg:x="46626" fg:w="134"/><text x="59.7090%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::lt (86 samples, 0.11%)</title><rect x="59.5203%" y="789" width="0.1097%" height="15" fill="rgb(246,63,5)" fg:x="46674" fg:w="86"/><text x="59.7703%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::get_internal_state (256 samples, 0.33%)</title><rect x="59.6299%" y="821" width="0.3265%" height="15" fill="rgb(245,136,27)" fg:x="46760" fg:w="256"/><text x="59.8799%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (901 samples, 1.15%)</title><rect x="59.9564%" y="805" width="1.1490%" height="15" fill="rgb(247,199,27)" fg:x="47016" fg:w="901"/><text x="60.2064%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (297 samples, 0.38%)</title><rect x="61.1054%" y="805" width="0.3787%" height="15" fill="rgb(252,158,49)" fg:x="47917" fg:w="297"/><text x="61.3554%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (223 samples, 0.28%)</title><rect x="61.1997%" y="789" width="0.2844%" height="15" fill="rgb(254,73,1)" fg:x="47991" fg:w="223"/><text x="61.4497%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (1,574 samples, 2.01%)</title><rect x="59.9564%" y="821" width="2.0072%" height="15" fill="rgb(248,93,19)" fg:x="47016" fg:w="1574"/><text x="60.2064%" y="831.50">m..</text></g><g><title>move_vm_types::values::values_impl::Value::value_as (376 samples, 0.48%)</title><rect x="61.4841%" y="805" width="0.4795%" height="15" fill="rgb(206,67,5)" fg:x="48214" fg:w="376"/><text x="61.7341%" y="815.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (376 samples, 0.48%)</title><rect x="61.4841%" y="789" width="0.4795%" height="15" fill="rgb(209,210,4)" fg:x="48214" fg:w="376"/><text x="61.7341%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (70 samples, 0.09%)</title><rect x="61.8743%" y="773" width="0.0893%" height="15" fill="rgb(214,185,36)" fg:x="48520" fg:w="70"/><text x="62.1243%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool (4,745 samples, 6.05%)</title><rect x="57.0195%" y="853" width="6.0510%" height="15" fill="rgb(233,191,26)" fg:x="44713" fg:w="4745"/><text x="57.2695%" y="863.50">move_vm_..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (4,745 samples, 6.05%)</title><rect x="57.0195%" y="837" width="6.0510%" height="15" fill="rgb(248,94,17)" fg:x="44713" fg:w="4745"/><text x="57.2695%" y="847.50">move_vm_..</text></g><g><title>move_vm_runtime::interpreter::Stack::push (868 samples, 1.11%)</title><rect x="61.9636%" y="821" width="1.1069%" height="15" fill="rgb(250,64,4)" fg:x="48590" fg:w="868"/><text x="62.2136%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (868 samples, 1.11%)</title><rect x="61.9636%" y="805" width="1.1069%" height="15" fill="rgb(218,41,53)" fg:x="48590" fg:w="868"/><text x="62.2136%" y="815.50"></text></g><g><title>core::ptr::write (868 samples, 1.11%)</title><rect x="61.9636%" y="789" width="1.1069%" height="15" fill="rgb(251,176,28)" fg:x="48590" fg:w="868"/><text x="62.2136%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::add_checked (38 samples, 0.05%)</title><rect x="63.9925%" y="789" width="0.0485%" height="15" fill="rgb(247,22,9)" fg:x="50181" fg:w="38"/><text x="64.2425%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::div_checked (10 samples, 0.01%)</title><rect x="64.0410%" y="789" width="0.0128%" height="15" fill="rgb(218,201,14)" fg:x="50219" fg:w="10"/><text x="64.2910%" y="799.50"></text></g><g><title>core::num::&lt;impl u128&gt;::checked_div (8 samples, 0.01%)</title><rect x="64.0435%" y="773" width="0.0102%" height="15" fill="rgb(218,94,10)" fg:x="50221" fg:w="8"/><text x="64.2935%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int::{{closure}} (64 samples, 0.08%)</title><rect x="63.9900%" y="821" width="0.0816%" height="15" fill="rgb(222,183,52)" fg:x="50179" fg:w="64"/><text x="64.2400%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (64 samples, 0.08%)</title><rect x="63.9900%" y="805" width="0.0816%" height="15" fill="rgb(242,140,25)" fg:x="50179" fg:w="64"/><text x="64.2400%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::sub_checked (10 samples, 0.01%)</title><rect x="64.0588%" y="789" width="0.0128%" height="15" fill="rgb(235,197,38)" fg:x="50233" fg:w="10"/><text x="64.3088%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (53 samples, 0.07%)</title><rect x="64.0741%" y="805" width="0.0676%" height="15" fill="rgb(237,136,15)" fg:x="50245" fg:w="53"/><text x="64.3241%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (85 samples, 0.11%)</title><rect x="64.1417%" y="789" width="0.1084%" height="15" fill="rgb(223,44,49)" fg:x="50298" fg:w="85"/><text x="64.3917%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (87 samples, 0.11%)</title><rect x="64.1417%" y="805" width="0.1109%" height="15" fill="rgb(227,71,15)" fg:x="50298" fg:w="87"/><text x="64.3917%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (330 samples, 0.42%)</title><rect x="64.0716%" y="821" width="0.4208%" height="15" fill="rgb(225,153,20)" fg:x="50243" fg:w="330"/><text x="64.3216%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (188 samples, 0.24%)</title><rect x="64.2526%" y="805" width="0.2397%" height="15" fill="rgb(210,190,26)" fg:x="50385" fg:w="188"/><text x="64.5026%" y="815.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::IntegerValue&gt;&gt;::cast (115 samples, 0.15%)</title><rect x="64.3457%" y="789" width="0.1467%" height="15" fill="rgb(223,147,5)" fg:x="50458" fg:w="115"/><text x="64.5957%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (23 samples, 0.03%)</title><rect x="64.4631%" y="773" width="0.0293%" height="15" fill="rgb(207,14,23)" fg:x="50550" fg:w="23"/><text x="64.7131%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (1,283 samples, 1.64%)</title><rect x="63.0705%" y="853" width="1.6361%" height="15" fill="rgb(211,195,53)" fg:x="49458" fg:w="1283"/><text x="63.3205%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (1,283 samples, 1.64%)</title><rect x="63.0705%" y="837" width="1.6361%" height="15" fill="rgb(237,75,46)" fg:x="49458" fg:w="1283"/><text x="63.3205%" y="847.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (168 samples, 0.21%)</title><rect x="64.4924%" y="821" width="0.2142%" height="15" fill="rgb(254,55,14)" fg:x="50573" fg:w="168"/><text x="64.7424%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.02%)</title><rect x="64.6875%" y="805" width="0.0191%" height="15" fill="rgb(230,185,30)" fg:x="50726" fg:w="15"/><text x="64.9375%" y="815.50"></text></g><g><title>core::ptr::write (15 samples, 0.02%)</title><rect x="64.6875%" y="789" width="0.0191%" height="15" fill="rgb(220,14,11)" fg:x="50726" fg:w="15"/><text x="64.9375%" y="799.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::use_heap_memory (8 samples, 0.01%)</title><rect x="64.7156%" y="805" width="0.0102%" height="15" fill="rgb(215,169,44)" fg:x="50748" fg:w="8"/><text x="64.9656%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (8 samples, 0.01%)</title><rect x="64.7321%" y="725" width="0.0102%" height="15" fill="rgb(253,203,20)" fg:x="50761" fg:w="8"/><text x="64.9821%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (18 samples, 0.02%)</title><rect x="64.7258%" y="741" width="0.0230%" height="15" fill="rgb(229,225,17)" fg:x="50756" fg:w="18"/><text x="64.9758%" y="751.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (23 samples, 0.03%)</title><rect x="64.7258%" y="805" width="0.0293%" height="15" fill="rgb(236,76,26)" fg:x="50756" fg:w="23"/><text x="64.9758%" y="815.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (23 samples, 0.03%)</title><rect x="64.7258%" y="789" width="0.0293%" height="15" fill="rgb(234,15,30)" fg:x="50756" fg:w="23"/><text x="64.9758%" y="799.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (23 samples, 0.03%)</title><rect x="64.7258%" y="773" width="0.0293%" height="15" fill="rgb(211,113,48)" fg:x="50756" fg:w="23"/><text x="64.9758%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::GlobalValue::view::Wrapper as move_vm_types::views::ValueView&gt;::visit (23 samples, 0.03%)</title><rect x="64.7258%" y="757" width="0.0293%" height="15" fill="rgb(221,31,36)" fg:x="50756" fg:w="23"/><text x="64.9758%" y="767.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_load_resource (32 samples, 0.04%)</title><rect x="64.7156%" y="821" width="0.0408%" height="15" fill="rgb(215,118,52)" fg:x="50748" fg:w="32"/><text x="64.9656%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="64.7602%" y="773" width="0.0140%" height="15" fill="rgb(241,151,27)" fg:x="50783" fg:w="11"/><text x="65.0102%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.01%)</title><rect x="64.7627%" y="757" width="0.0115%" height="15" fill="rgb(253,51,3)" fg:x="50785" fg:w="9"/><text x="65.0127%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.01%)</title><rect x="64.7627%" y="741" width="0.0115%" height="15" fill="rgb(216,201,24)" fg:x="50785" fg:w="9"/><text x="65.0127%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.01%)</title><rect x="64.7627%" y="725" width="0.0115%" height="15" fill="rgb(231,107,4)" fg:x="50785" fg:w="9"/><text x="65.0127%" y="735.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="64.7602%" y="789" width="0.0153%" height="15" fill="rgb(243,97,54)" fg:x="50783" fg:w="12"/><text x="65.0102%" y="799.50"></text></g><g><title>iralloct (16 samples, 0.02%)</title><rect x="64.8138%" y="325" width="0.0204%" height="15" fill="rgb(221,32,51)" fg:x="50825" fg:w="16"/><text x="65.0638%" y="335.50"></text></g><g><title>_rjem_je_arena_ralloc (16 samples, 0.02%)</title><rect x="64.8138%" y="309" width="0.0204%" height="15" fill="rgb(218,171,35)" fg:x="50825" fg:w="16"/><text x="65.0638%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.04%)</title><rect x="64.8099%" y="405" width="0.0408%" height="15" fill="rgb(214,20,53)" fg:x="50822" fg:w="32"/><text x="65.0599%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (31 samples, 0.04%)</title><rect x="64.8112%" y="389" width="0.0395%" height="15" fill="rgb(239,9,52)" fg:x="50823" fg:w="31"/><text x="65.0612%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (31 samples, 0.04%)</title><rect x="64.8112%" y="373" width="0.0395%" height="15" fill="rgb(215,114,45)" fg:x="50823" fg:w="31"/><text x="65.0612%" y="383.50"></text></g><g><title>alloc::alloc::realloc (31 samples, 0.04%)</title><rect x="64.8112%" y="357" width="0.0395%" height="15" fill="rgb(208,118,9)" fg:x="50823" fg:w="31"/><text x="65.0612%" y="367.50"></text></g><g><title>rallocx (29 samples, 0.04%)</title><rect x="64.8138%" y="341" width="0.0370%" height="15" fill="rgb(235,7,39)" fg:x="50825" fg:w="29"/><text x="65.0638%" y="351.50"></text></g><g><title>isalloc (13 samples, 0.02%)</title><rect x="64.8342%" y="325" width="0.0166%" height="15" fill="rgb(243,225,15)" fg:x="50841" fg:w="13"/><text x="65.0842%" y="335.50"></text></g><g><title>arena_salloc (13 samples, 0.02%)</title><rect x="64.8342%" y="309" width="0.0166%" height="15" fill="rgb(225,216,18)" fg:x="50841" fg:w="13"/><text x="65.0842%" y="319.50"></text></g><g><title>rtree_szind_read (13 samples, 0.02%)</title><rect x="64.8342%" y="293" width="0.0166%" height="15" fill="rgb(233,36,38)" fg:x="50841" fg:w="13"/><text x="65.0842%" y="303.50"></text></g><g><title>rtree_leaf_elm_szind_read (13 samples, 0.02%)</title><rect x="64.8342%" y="277" width="0.0166%" height="15" fill="rgb(239,88,23)" fg:x="50841" fg:w="13"/><text x="65.0842%" y="287.50"></text></g><g><title>rtree_leaf_elm_bits_read (13 samples, 0.02%)</title><rect x="64.8342%" y="261" width="0.0166%" height="15" fill="rgb(219,181,35)" fg:x="50841" fg:w="13"/><text x="65.0842%" y="271.50"></text></g><g><title>atomic_load_p (13 samples, 0.02%)</title><rect x="64.8342%" y="245" width="0.0166%" height="15" fill="rgb(215,18,46)" fg:x="50841" fg:w="13"/><text x="65.0842%" y="255.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (45 samples, 0.06%)</title><rect x="64.7972%" y="645" width="0.0574%" height="15" fill="rgb(241,38,11)" fg:x="50812" fg:w="45"/><text x="65.0472%" y="655.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (45 samples, 0.06%)</title><rect x="64.7972%" y="629" width="0.0574%" height="15" fill="rgb(248,169,45)" fg:x="50812" fg:w="45"/><text x="65.0472%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (45 samples, 0.06%)</title><rect x="64.7972%" y="613" width="0.0574%" height="15" fill="rgb(239,50,49)" fg:x="50812" fg:w="45"/><text x="65.0472%" y="623.50"></text></g><g><title> 32]&gt;::serialize (45 samples, 0.06%)</title><rect x="64.7972%" y="597" width="0.0574%" height="15" fill="rgb(231,96,31)" fg:x="50812" fg:w="45"/><text x="65.0472%" y="607.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (45 samples, 0.06%)</title><rect x="64.7972%" y="581" width="0.0574%" height="15" fill="rgb(224,193,37)" fg:x="50812" fg:w="45"/><text x="65.0472%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (45 samples, 0.06%)</title><rect x="64.7972%" y="565" width="0.0574%" height="15" fill="rgb(227,153,50)" fg:x="50812" fg:w="45"/><text x="65.0472%" y="575.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (45 samples, 0.06%)</title><rect x="64.7972%" y="549" width="0.0574%" height="15" fill="rgb(249,228,3)" fg:x="50812" fg:w="45"/><text x="65.0472%" y="559.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (45 samples, 0.06%)</title><rect x="64.7972%" y="533" width="0.0574%" height="15" fill="rgb(219,164,43)" fg:x="50812" fg:w="45"/><text x="65.0472%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (45 samples, 0.06%)</title><rect x="64.7972%" y="517" width="0.0574%" height="15" fill="rgb(216,45,41)" fg:x="50812" fg:w="45"/><text x="65.0472%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (45 samples, 0.06%)</title><rect x="64.7972%" y="501" width="0.0574%" height="15" fill="rgb(210,226,51)" fg:x="50812" fg:w="45"/><text x="65.0472%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (45 samples, 0.06%)</title><rect x="64.7972%" y="485" width="0.0574%" height="15" fill="rgb(209,117,49)" fg:x="50812" fg:w="45"/><text x="65.0472%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (35 samples, 0.04%)</title><rect x="64.8099%" y="469" width="0.0446%" height="15" fill="rgb(206,196,24)" fg:x="50822" fg:w="35"/><text x="65.0599%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (35 samples, 0.04%)</title><rect x="64.8099%" y="453" width="0.0446%" height="15" fill="rgb(253,218,3)" fg:x="50822" fg:w="35"/><text x="65.0599%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (35 samples, 0.04%)</title><rect x="64.8099%" y="437" width="0.0446%" height="15" fill="rgb(252,166,2)" fg:x="50822" fg:w="35"/><text x="65.0599%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (35 samples, 0.04%)</title><rect x="64.8099%" y="421" width="0.0446%" height="15" fill="rgb(236,218,26)" fg:x="50822" fg:w="35"/><text x="65.0599%" y="431.50"></text></g><g><title>iralloct (10 samples, 0.01%)</title><rect x="64.8813%" y="117" width="0.0128%" height="15" fill="rgb(254,84,19)" fg:x="50878" fg:w="10"/><text x="65.1313%" y="127.50"></text></g><g><title>_rjem_je_arena_ralloc (10 samples, 0.01%)</title><rect x="64.8813%" y="101" width="0.0128%" height="15" fill="rgb(219,137,29)" fg:x="50878" fg:w="10"/><text x="65.1313%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.03%)</title><rect x="64.8724%" y="261" width="0.0281%" height="15" fill="rgb(227,47,52)" fg:x="50871" fg:w="22"/><text x="65.1224%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.03%)</title><rect x="64.8724%" y="245" width="0.0281%" height="15" fill="rgb(229,167,24)" fg:x="50871" fg:w="22"/><text x="65.1224%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.03%)</title><rect x="64.8737%" y="229" width="0.0268%" height="15" fill="rgb(233,164,1)" fg:x="50872" fg:w="21"/><text x="65.1237%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.02%)</title><rect x="64.8788%" y="213" width="0.0217%" height="15" fill="rgb(218,88,48)" fg:x="50876" fg:w="17"/><text x="65.1288%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="64.8788%" y="197" width="0.0217%" height="15" fill="rgb(226,214,24)" fg:x="50876" fg:w="17"/><text x="65.1288%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.02%)</title><rect x="64.8801%" y="181" width="0.0204%" height="15" fill="rgb(233,29,12)" fg:x="50877" fg:w="16"/><text x="65.1301%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.02%)</title><rect x="64.8801%" y="165" width="0.0204%" height="15" fill="rgb(219,120,34)" fg:x="50877" fg:w="16"/><text x="65.1301%" y="175.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.02%)</title><rect x="64.8801%" y="149" width="0.0204%" height="15" fill="rgb(226,78,44)" fg:x="50877" fg:w="16"/><text x="65.1301%" y="159.50"></text></g><g><title>rallocx (15 samples, 0.02%)</title><rect x="64.8813%" y="133" width="0.0191%" height="15" fill="rgb(240,15,48)" fg:x="50878" fg:w="15"/><text x="65.1313%" y="143.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (34 samples, 0.04%)</title><rect x="64.8724%" y="437" width="0.0434%" height="15" fill="rgb(253,176,7)" fg:x="50871" fg:w="34"/><text x="65.1224%" y="447.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (34 samples, 0.04%)</title><rect x="64.8724%" y="421" width="0.0434%" height="15" fill="rgb(206,166,28)" fg:x="50871" fg:w="34"/><text x="65.1224%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (34 samples, 0.04%)</title><rect x="64.8724%" y="405" width="0.0434%" height="15" fill="rgb(241,53,51)" fg:x="50871" fg:w="34"/><text x="65.1224%" y="415.50"></text></g><g><title> 32]&gt;::serialize (34 samples, 0.04%)</title><rect x="64.8724%" y="389" width="0.0434%" height="15" fill="rgb(249,112,30)" fg:x="50871" fg:w="34"/><text x="65.1224%" y="399.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (34 samples, 0.04%)</title><rect x="64.8724%" y="373" width="0.0434%" height="15" fill="rgb(217,85,30)" fg:x="50871" fg:w="34"/><text x="65.1224%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (34 samples, 0.04%)</title><rect x="64.8724%" y="357" width="0.0434%" height="15" fill="rgb(233,49,7)" fg:x="50871" fg:w="34"/><text x="65.1224%" y="367.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (34 samples, 0.04%)</title><rect x="64.8724%" y="341" width="0.0434%" height="15" fill="rgb(234,109,9)" fg:x="50871" fg:w="34"/><text x="65.1224%" y="351.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (34 samples, 0.04%)</title><rect x="64.8724%" y="325" width="0.0434%" height="15" fill="rgb(253,95,22)" fg:x="50871" fg:w="34"/><text x="65.1224%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.04%)</title><rect x="64.8724%" y="309" width="0.0434%" height="15" fill="rgb(233,176,25)" fg:x="50871" fg:w="34"/><text x="65.1224%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.04%)</title><rect x="64.8724%" y="293" width="0.0434%" height="15" fill="rgb(236,33,39)" fg:x="50871" fg:w="34"/><text x="65.1224%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 0.04%)</title><rect x="64.8724%" y="277" width="0.0434%" height="15" fill="rgb(223,226,42)" fg:x="50871" fg:w="34"/><text x="65.1224%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="64.9005%" y="261" width="0.0153%" height="15" fill="rgb(216,99,33)" fg:x="50893" fg:w="12"/><text x="65.1505%" y="271.50"></text></g><g><title>bcs::ser::to_bytes (109 samples, 0.14%)</title><rect x="64.7793%" y="741" width="0.1390%" height="15" fill="rgb(235,84,23)" fg:x="50798" fg:w="109"/><text x="65.0293%" y="751.50"></text></g><g><title>bcs::ser::serialize_into (109 samples, 0.14%)</title><rect x="64.7793%" y="725" width="0.1390%" height="15" fill="rgb(232,2,27)" fg:x="50798" fg:w="109"/><text x="65.0293%" y="735.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (109 samples, 0.14%)</title><rect x="64.7793%" y="709" width="0.1390%" height="15" fill="rgb(241,23,22)" fg:x="50798" fg:w="109"/><text x="65.0293%" y="719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (109 samples, 0.14%)</title><rect x="64.7793%" y="693" width="0.1390%" height="15" fill="rgb(211,73,27)" fg:x="50798" fg:w="109"/><text x="65.0293%" y="703.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (104 samples, 0.13%)</title><rect x="64.7857%" y="677" width="0.1326%" height="15" fill="rgb(235,109,49)" fg:x="50803" fg:w="104"/><text x="65.0357%" y="687.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (101 samples, 0.13%)</title><rect x="64.7895%" y="661" width="0.1288%" height="15" fill="rgb(230,99,29)" fg:x="50806" fg:w="101"/><text x="65.0395%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (45 samples, 0.06%)</title><rect x="64.8609%" y="645" width="0.0574%" height="15" fill="rgb(245,199,7)" fg:x="50862" fg:w="45"/><text x="65.1109%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (45 samples, 0.06%)</title><rect x="64.8609%" y="629" width="0.0574%" height="15" fill="rgb(217,179,10)" fg:x="50862" fg:w="45"/><text x="65.1109%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (45 samples, 0.06%)</title><rect x="64.8609%" y="613" width="0.0574%" height="15" fill="rgb(254,99,47)" fg:x="50862" fg:w="45"/><text x="65.1109%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (45 samples, 0.06%)</title><rect x="64.8609%" y="597" width="0.0574%" height="15" fill="rgb(251,121,7)" fg:x="50862" fg:w="45"/><text x="65.1109%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (45 samples, 0.06%)</title><rect x="64.8609%" y="581" width="0.0574%" height="15" fill="rgb(250,177,26)" fg:x="50862" fg:w="45"/><text x="65.1109%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (45 samples, 0.06%)</title><rect x="64.8609%" y="565" width="0.0574%" height="15" fill="rgb(232,88,15)" fg:x="50862" fg:w="45"/><text x="65.1109%" y="575.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (45 samples, 0.06%)</title><rect x="64.8609%" y="549" width="0.0574%" height="15" fill="rgb(251,54,54)" fg:x="50862" fg:w="45"/><text x="65.1109%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (45 samples, 0.06%)</title><rect x="64.8609%" y="533" width="0.0574%" height="15" fill="rgb(208,177,15)" fg:x="50862" fg:w="45"/><text x="65.1109%" y="543.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (45 samples, 0.06%)</title><rect x="64.8609%" y="517" width="0.0574%" height="15" fill="rgb(205,97,32)" fg:x="50862" fg:w="45"/><text x="65.1109%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (39 samples, 0.05%)</title><rect x="64.8686%" y="501" width="0.0497%" height="15" fill="rgb(217,192,13)" fg:x="50868" fg:w="39"/><text x="65.1186%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (39 samples, 0.05%)</title><rect x="64.8686%" y="485" width="0.0497%" height="15" fill="rgb(215,163,41)" fg:x="50868" fg:w="39"/><text x="65.1186%" y="495.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (39 samples, 0.05%)</title><rect x="64.8686%" y="469" width="0.0497%" height="15" fill="rgb(246,83,29)" fg:x="50868" fg:w="39"/><text x="65.1186%" y="479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (36 samples, 0.05%)</title><rect x="64.8724%" y="453" width="0.0459%" height="15" fill="rgb(219,2,45)" fg:x="50871" fg:w="36"/><text x="65.1224%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (10 samples, 0.01%)</title><rect x="64.9183%" y="709" width="0.0128%" height="15" fill="rgb(242,215,33)" fg:x="50907" fg:w="10"/><text x="65.1683%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="64.9183%" y="693" width="0.0128%" height="15" fill="rgb(217,1,6)" fg:x="50907" fg:w="10"/><text x="65.1683%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (10 samples, 0.01%)</title><rect x="64.9183%" y="677" width="0.0128%" height="15" fill="rgb(207,85,52)" fg:x="50907" fg:w="10"/><text x="65.1683%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (10 samples, 0.01%)</title><rect x="64.9183%" y="661" width="0.0128%" height="15" fill="rgb(231,171,19)" fg:x="50907" fg:w="10"/><text x="65.1683%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (10 samples, 0.01%)</title><rect x="64.9183%" y="645" width="0.0128%" height="15" fill="rgb(207,128,4)" fg:x="50907" fg:w="10"/><text x="65.1683%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (10 samples, 0.01%)</title><rect x="64.9183%" y="629" width="0.0128%" height="15" fill="rgb(219,208,4)" fg:x="50907" fg:w="10"/><text x="65.1683%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (10 samples, 0.01%)</title><rect x="64.9183%" y="613" width="0.0128%" height="15" fill="rgb(235,161,42)" fg:x="50907" fg:w="10"/><text x="65.1683%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (10 samples, 0.01%)</title><rect x="64.9183%" y="597" width="0.0128%" height="15" fill="rgb(247,218,18)" fg:x="50907" fg:w="10"/><text x="65.1683%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="64.9183%" y="581" width="0.0128%" height="15" fill="rgb(232,114,51)" fg:x="50907" fg:w="10"/><text x="65.1683%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="64.9183%" y="565" width="0.0128%" height="15" fill="rgb(222,95,3)" fg:x="50907" fg:w="10"/><text x="65.1683%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="64.9183%" y="549" width="0.0128%" height="15" fill="rgb(240,65,29)" fg:x="50907" fg:w="10"/><text x="65.1683%" y="559.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (130 samples, 0.17%)</title><rect x="64.7755%" y="773" width="0.1658%" height="15" fill="rgb(249,209,20)" fg:x="50795" fg:w="130"/><text x="65.0255%" y="783.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (129 samples, 0.16%)</title><rect x="64.7768%" y="757" width="0.1645%" height="15" fill="rgb(241,48,37)" fg:x="50796" fg:w="129"/><text x="65.0268%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (18 samples, 0.02%)</title><rect x="64.9183%" y="741" width="0.0230%" height="15" fill="rgb(230,140,42)" fg:x="50907" fg:w="18"/><text x="65.1683%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (18 samples, 0.02%)</title><rect x="64.9183%" y="725" width="0.0230%" height="15" fill="rgb(230,176,45)" fg:x="50907" fg:w="18"/><text x="65.1683%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (8 samples, 0.01%)</title><rect x="64.9311%" y="709" width="0.0102%" height="15" fill="rgb(245,112,21)" fg:x="50917" fg:w="8"/><text x="65.1811%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (8 samples, 0.01%)</title><rect x="64.9311%" y="693" width="0.0102%" height="15" fill="rgb(207,183,35)" fg:x="50917" fg:w="8"/><text x="65.1811%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="64.9311%" y="677" width="0.0102%" height="15" fill="rgb(227,44,33)" fg:x="50917" fg:w="8"/><text x="65.1811%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="64.9311%" y="661" width="0.0102%" height="15" fill="rgb(246,120,21)" fg:x="50917" fg:w="8"/><text x="65.1811%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="64.9311%" y="645" width="0.0102%" height="15" fill="rgb(235,57,52)" fg:x="50917" fg:w="8"/><text x="65.1811%" y="655.50"></text></g><g><title>aptos_vm::create_access_path (132 samples, 0.17%)</title><rect x="64.7755%" y="789" width="0.1683%" height="15" fill="rgb(238,84,10)" fg:x="50795" fg:w="132"/><text x="65.0255%" y="799.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (14 samples, 0.02%)</title><rect x="64.9553%" y="725" width="0.0179%" height="15" fill="rgb(251,200,32)" fg:x="50936" fg:w="14"/><text x="65.2053%" y="735.50"></text></g><g><title>&lt;aptos_storage_interface::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (14 samples, 0.02%)</title><rect x="64.9553%" y="709" width="0.0179%" height="15" fill="rgb(247,159,13)" fg:x="50936" fg:w="14"/><text x="65.2053%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.02%)</title><rect x="64.9566%" y="693" width="0.0166%" height="15" fill="rgb(238,64,4)" fg:x="50937" fg:w="13"/><text x="65.2066%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (13 samples, 0.02%)</title><rect x="64.9566%" y="677" width="0.0166%" height="15" fill="rgb(221,131,51)" fg:x="50937" fg:w="13"/><text x="65.2066%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.02%)</title><rect x="64.9566%" y="661" width="0.0166%" height="15" fill="rgb(242,5,29)" fg:x="50937" fg:w="13"/><text x="65.2066%" y="671.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (25 samples, 0.03%)</title><rect x="64.9438%" y="773" width="0.0319%" height="15" fill="rgb(214,130,32)" fg:x="50927" fg:w="25"/><text x="65.1938%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (16 samples, 0.02%)</title><rect x="64.9553%" y="757" width="0.0204%" height="15" fill="rgb(244,210,16)" fg:x="50936" fg:w="16"/><text x="65.2053%" y="767.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (16 samples, 0.02%)</title><rect x="64.9553%" y="741" width="0.0204%" height="15" fill="rgb(234,48,26)" fg:x="50936" fg:w="16"/><text x="65.2053%" y="751.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (28 samples, 0.04%)</title><rect x="64.9438%" y="789" width="0.0357%" height="15" fill="rgb(231,82,38)" fg:x="50927" fg:w="28"/><text x="65.1938%" y="799.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (177 samples, 0.23%)</title><rect x="64.7564%" y="805" width="0.2257%" height="15" fill="rgb(254,128,41)" fg:x="50780" fg:w="177"/><text x="65.0064%" y="815.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="64.9821%" y="805" width="0.0102%" height="15" fill="rgb(212,73,49)" fg:x="50957" fg:w="8"/><text x="65.2321%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (21 samples, 0.03%)</title><rect x="64.9923%" y="805" width="0.0268%" height="15" fill="rgb(205,62,54)" fg:x="50965" fg:w="21"/><text x="65.2423%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (21 samples, 0.03%)</title><rect x="64.9923%" y="789" width="0.0268%" height="15" fill="rgb(228,0,8)" fg:x="50965" fg:w="21"/><text x="65.2423%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (21 samples, 0.03%)</title><rect x="64.9923%" y="773" width="0.0268%" height="15" fill="rgb(251,28,17)" fg:x="50965" fg:w="21"/><text x="65.2423%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (21 samples, 0.03%)</title><rect x="64.9923%" y="757" width="0.0268%" height="15" fill="rgb(238,105,27)" fg:x="50965" fg:w="21"/><text x="65.2423%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (21 samples, 0.03%)</title><rect x="64.9923%" y="741" width="0.0268%" height="15" fill="rgb(237,216,33)" fg:x="50965" fg:w="21"/><text x="65.2423%" y="751.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (21 samples, 0.03%)</title><rect x="64.9923%" y="725" width="0.0268%" height="15" fill="rgb(229,228,25)" fg:x="50965" fg:w="21"/><text x="65.2423%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (21 samples, 0.03%)</title><rect x="65.0191%" y="805" width="0.0268%" height="15" fill="rgb(233,75,23)" fg:x="50986" fg:w="21"/><text x="65.2691%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20 samples, 0.03%)</title><rect x="65.0203%" y="789" width="0.0255%" height="15" fill="rgb(231,207,16)" fg:x="50987" fg:w="20"/><text x="65.2703%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (20 samples, 0.03%)</title><rect x="65.0203%" y="773" width="0.0255%" height="15" fill="rgb(231,191,45)" fg:x="50987" fg:w="20"/><text x="65.2703%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (20 samples, 0.03%)</title><rect x="65.0203%" y="757" width="0.0255%" height="15" fill="rgb(224,133,17)" fg:x="50987" fg:w="20"/><text x="65.2703%" y="767.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (20 samples, 0.03%)</title><rect x="65.0203%" y="741" width="0.0255%" height="15" fill="rgb(209,178,27)" fg:x="50987" fg:w="20"/><text x="65.2703%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (8 samples, 0.01%)</title><rect x="65.0356%" y="725" width="0.0102%" height="15" fill="rgb(218,37,11)" fg:x="50999" fg:w="8"/><text x="65.2856%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (8 samples, 0.01%)</title><rect x="65.0356%" y="709" width="0.0102%" height="15" fill="rgb(251,226,25)" fg:x="50999" fg:w="8"/><text x="65.2856%" y="719.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (8 samples, 0.01%)</title><rect x="65.0356%" y="693" width="0.0102%" height="15" fill="rgb(209,222,27)" fg:x="50999" fg:w="8"/><text x="65.2856%" y="703.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.01%)</title><rect x="65.0356%" y="677" width="0.0102%" height="15" fill="rgb(238,22,21)" fg:x="50999" fg:w="8"/><text x="65.2856%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.01%)</title><rect x="65.0356%" y="661" width="0.0102%" height="15" fill="rgb(233,161,25)" fg:x="50999" fg:w="8"/><text x="65.2856%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (8 samples, 0.01%)</title><rect x="65.0356%" y="645" width="0.0102%" height="15" fill="rgb(226,122,53)" fg:x="50999" fg:w="8"/><text x="65.2856%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (10 samples, 0.01%)</title><rect x="65.0458%" y="789" width="0.0128%" height="15" fill="rgb(220,123,17)" fg:x="51007" fg:w="10"/><text x="65.2958%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (15 samples, 0.02%)</title><rect x="65.0458%" y="805" width="0.0191%" height="15" fill="rgb(230,224,35)" fg:x="51007" fg:w="15"/><text x="65.2958%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (9 samples, 0.01%)</title><rect x="65.0650%" y="773" width="0.0115%" height="15" fill="rgb(246,83,8)" fg:x="51022" fg:w="9"/><text x="65.3150%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (16 samples, 0.02%)</title><rect x="65.0650%" y="805" width="0.0204%" height="15" fill="rgb(230,214,17)" fg:x="51022" fg:w="16"/><text x="65.3150%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (16 samples, 0.02%)</title><rect x="65.0650%" y="789" width="0.0204%" height="15" fill="rgb(222,97,18)" fg:x="51022" fg:w="16"/><text x="65.3150%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (28 samples, 0.04%)</title><rect x="65.0879%" y="789" width="0.0357%" height="15" fill="rgb(206,79,1)" fg:x="51040" fg:w="28"/><text x="65.3379%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (28 samples, 0.04%)</title><rect x="65.0879%" y="773" width="0.0357%" height="15" fill="rgb(214,121,34)" fg:x="51040" fg:w="28"/><text x="65.3379%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (28 samples, 0.04%)</title><rect x="65.0879%" y="757" width="0.0357%" height="15" fill="rgb(249,199,46)" fg:x="51040" fg:w="28"/><text x="65.3379%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (28 samples, 0.04%)</title><rect x="65.0879%" y="741" width="0.0357%" height="15" fill="rgb(214,222,46)" fg:x="51040" fg:w="28"/><text x="65.3379%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (28 samples, 0.04%)</title><rect x="65.0879%" y="725" width="0.0357%" height="15" fill="rgb(248,168,30)" fg:x="51040" fg:w="28"/><text x="65.3379%" y="735.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (28 samples, 0.04%)</title><rect x="65.0879%" y="709" width="0.0357%" height="15" fill="rgb(226,14,28)" fg:x="51040" fg:w="28"/><text x="65.3379%" y="719.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (29 samples, 0.04%)</title><rect x="65.0879%" y="805" width="0.0370%" height="15" fill="rgb(253,123,1)" fg:x="51040" fg:w="29"/><text x="65.3379%" y="815.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="65.1555%" y="485" width="0.0204%" height="15" fill="rgb(225,24,42)" fg:x="51093" fg:w="16"/><text x="65.4055%" y="495.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="65.1606%" y="469" width="0.0153%" height="15" fill="rgb(216,161,37)" fg:x="51097" fg:w="12"/><text x="65.4106%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="65.1606%" y="453" width="0.0153%" height="15" fill="rgb(251,164,26)" fg:x="51097" fg:w="12"/><text x="65.4106%" y="463.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (30 samples, 0.04%)</title><rect x="65.1479%" y="581" width="0.0383%" height="15" fill="rgb(219,177,3)" fg:x="51087" fg:w="30"/><text x="65.3979%" y="591.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (24 samples, 0.03%)</title><rect x="65.1555%" y="565" width="0.0306%" height="15" fill="rgb(222,65,0)" fg:x="51093" fg:w="24"/><text x="65.4055%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.03%)</title><rect x="65.1555%" y="549" width="0.0306%" height="15" fill="rgb(223,69,54)" fg:x="51093" fg:w="24"/><text x="65.4055%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.03%)</title><rect x="65.1555%" y="533" width="0.0306%" height="15" fill="rgb(235,30,27)" fg:x="51093" fg:w="24"/><text x="65.4055%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.03%)</title><rect x="65.1555%" y="517" width="0.0306%" height="15" fill="rgb(220,183,50)" fg:x="51093" fg:w="24"/><text x="65.4055%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.03%)</title><rect x="65.1555%" y="501" width="0.0306%" height="15" fill="rgb(248,198,15)" fg:x="51093" fg:w="24"/><text x="65.4055%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="65.1759%" y="485" width="0.0102%" height="15" fill="rgb(222,211,4)" fg:x="51109" fg:w="8"/><text x="65.4259%" y="495.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (60 samples, 0.08%)</title><rect x="65.1300%" y="677" width="0.0765%" height="15" fill="rgb(214,102,34)" fg:x="51073" fg:w="60"/><text x="65.3800%" y="687.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (60 samples, 0.08%)</title><rect x="65.1300%" y="661" width="0.0765%" height="15" fill="rgb(245,92,5)" fg:x="51073" fg:w="60"/><text x="65.3800%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (46 samples, 0.06%)</title><rect x="65.1479%" y="645" width="0.0587%" height="15" fill="rgb(252,72,51)" fg:x="51087" fg:w="46"/><text x="65.3979%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (46 samples, 0.06%)</title><rect x="65.1479%" y="629" width="0.0587%" height="15" fill="rgb(252,208,19)" fg:x="51087" fg:w="46"/><text x="65.3979%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (46 samples, 0.06%)</title><rect x="65.1479%" y="613" width="0.0587%" height="15" fill="rgb(211,69,7)" fg:x="51087" fg:w="46"/><text x="65.3979%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (46 samples, 0.06%)</title><rect x="65.1479%" y="597" width="0.0587%" height="15" fill="rgb(211,27,16)" fg:x="51087" fg:w="46"/><text x="65.3979%" y="607.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (10 samples, 0.01%)</title><rect x="65.1938%" y="581" width="0.0128%" height="15" fill="rgb(219,216,14)" fg:x="51123" fg:w="10"/><text x="65.4438%" y="591.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (75 samples, 0.10%)</title><rect x="65.1287%" y="757" width="0.0956%" height="15" fill="rgb(219,71,8)" fg:x="51072" fg:w="75"/><text x="65.3787%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (74 samples, 0.09%)</title><rect x="65.1300%" y="741" width="0.0944%" height="15" fill="rgb(223,170,53)" fg:x="51073" fg:w="74"/><text x="65.3800%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (74 samples, 0.09%)</title><rect x="65.1300%" y="725" width="0.0944%" height="15" fill="rgb(246,21,26)" fg:x="51073" fg:w="74"/><text x="65.3800%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (74 samples, 0.09%)</title><rect x="65.1300%" y="709" width="0.0944%" height="15" fill="rgb(248,20,46)" fg:x="51073" fg:w="74"/><text x="65.3800%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (74 samples, 0.09%)</title><rect x="65.1300%" y="693" width="0.0944%" height="15" fill="rgb(252,94,11)" fg:x="51073" fg:w="74"/><text x="65.3800%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (8 samples, 0.01%)</title><rect x="65.2142%" y="677" width="0.0102%" height="15" fill="rgb(236,163,8)" fg:x="51139" fg:w="8"/><text x="65.4642%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="65.2333%" y="661" width="0.0115%" height="15" fill="rgb(217,221,45)" fg:x="51154" fg:w="9"/><text x="65.4833%" y="671.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.01%)</title><rect x="65.2333%" y="645" width="0.0115%" height="15" fill="rgb(238,38,17)" fg:x="51154" fg:w="9"/><text x="65.4833%" y="655.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (95 samples, 0.12%)</title><rect x="65.1249%" y="805" width="0.1211%" height="15" fill="rgb(242,210,23)" fg:x="51069" fg:w="95"/><text x="65.3749%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (95 samples, 0.12%)</title><rect x="65.1249%" y="789" width="0.1211%" height="15" fill="rgb(250,86,53)" fg:x="51069" fg:w="95"/><text x="65.3749%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (92 samples, 0.12%)</title><rect x="65.1287%" y="773" width="0.1173%" height="15" fill="rgb(223,168,25)" fg:x="51072" fg:w="92"/><text x="65.3787%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (17 samples, 0.02%)</title><rect x="65.2244%" y="757" width="0.0217%" height="15" fill="rgb(251,189,4)" fg:x="51147" fg:w="17"/><text x="65.4744%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (17 samples, 0.02%)</title><rect x="65.2244%" y="741" width="0.0217%" height="15" fill="rgb(245,19,28)" fg:x="51147" fg:w="17"/><text x="65.4744%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.02%)</title><rect x="65.2244%" y="725" width="0.0217%" height="15" fill="rgb(207,10,34)" fg:x="51147" fg:w="17"/><text x="65.4744%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.01%)</title><rect x="65.2333%" y="709" width="0.0128%" height="15" fill="rgb(235,153,31)" fg:x="51154" fg:w="10"/><text x="65.4833%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.01%)</title><rect x="65.2333%" y="693" width="0.0128%" height="15" fill="rgb(228,72,37)" fg:x="51154" fg:w="10"/><text x="65.4833%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (10 samples, 0.01%)</title><rect x="65.2333%" y="677" width="0.0128%" height="15" fill="rgb(215,15,16)" fg:x="51154" fg:w="10"/><text x="65.4833%" y="687.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="65.2843%" y="677" width="0.0102%" height="15" fill="rgb(250,119,29)" fg:x="51194" fg:w="8"/><text x="65.5343%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="65.2843%" y="661" width="0.0102%" height="15" fill="rgb(214,59,1)" fg:x="51194" fg:w="8"/><text x="65.5343%" y="671.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (8 samples, 0.01%)</title><rect x="65.2843%" y="645" width="0.0102%" height="15" fill="rgb(223,109,25)" fg:x="51194" fg:w="8"/><text x="65.5343%" y="655.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="65.2843%" y="629" width="0.0102%" height="15" fill="rgb(230,198,22)" fg:x="51194" fg:w="8"/><text x="65.5343%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="65.2843%" y="741" width="0.0153%" height="15" fill="rgb(245,184,46)" fg:x="51194" fg:w="12"/><text x="65.5343%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.02%)</title><rect x="65.2843%" y="725" width="0.0153%" height="15" fill="rgb(253,73,16)" fg:x="51194" fg:w="12"/><text x="65.5343%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.02%)</title><rect x="65.2843%" y="709" width="0.0153%" height="15" fill="rgb(206,94,45)" fg:x="51194" fg:w="12"/><text x="65.5343%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.02%)</title><rect x="65.2843%" y="693" width="0.0153%" height="15" fill="rgb(236,83,27)" fg:x="51194" fg:w="12"/><text x="65.5343%" y="703.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (39 samples, 0.05%)</title><rect x="65.2524%" y="757" width="0.0497%" height="15" fill="rgb(220,196,8)" fg:x="51169" fg:w="39"/><text x="65.5024%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.02%)</title><rect x="65.3022%" y="709" width="0.0166%" height="15" fill="rgb(254,185,14)" fg:x="51208" fg:w="13"/><text x="65.5522%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.02%)</title><rect x="65.3022%" y="693" width="0.0166%" height="15" fill="rgb(226,50,22)" fg:x="51208" fg:w="13"/><text x="65.5522%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (60 samples, 0.08%)</title><rect x="65.2461%" y="805" width="0.0765%" height="15" fill="rgb(253,147,0)" fg:x="51164" fg:w="60"/><text x="65.4961%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (60 samples, 0.08%)</title><rect x="65.2461%" y="789" width="0.0765%" height="15" fill="rgb(252,46,33)" fg:x="51164" fg:w="60"/><text x="65.4961%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (55 samples, 0.07%)</title><rect x="65.2524%" y="773" width="0.0701%" height="15" fill="rgb(242,22,54)" fg:x="51169" fg:w="55"/><text x="65.5024%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16 samples, 0.02%)</title><rect x="65.3022%" y="757" width="0.0204%" height="15" fill="rgb(223,178,32)" fg:x="51208" fg:w="16"/><text x="65.5522%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (16 samples, 0.02%)</title><rect x="65.3022%" y="741" width="0.0204%" height="15" fill="rgb(214,106,53)" fg:x="51208" fg:w="16"/><text x="65.5522%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.02%)</title><rect x="65.3022%" y="725" width="0.0204%" height="15" fill="rgb(232,65,50)" fg:x="51208" fg:w="16"/><text x="65.5522%" y="735.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (12 samples, 0.02%)</title><rect x="65.3264%" y="677" width="0.0153%" height="15" fill="rgb(231,110,28)" fg:x="51227" fg:w="12"/><text x="65.5764%" y="687.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (12 samples, 0.02%)</title><rect x="65.3264%" y="661" width="0.0153%" height="15" fill="rgb(216,71,40)" fg:x="51227" fg:w="12"/><text x="65.5764%" y="671.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (12 samples, 0.02%)</title><rect x="65.3264%" y="645" width="0.0153%" height="15" fill="rgb(229,89,53)" fg:x="51227" fg:w="12"/><text x="65.5764%" y="655.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (10 samples, 0.01%)</title><rect x="65.3289%" y="629" width="0.0128%" height="15" fill="rgb(210,124,14)" fg:x="51229" fg:w="10"/><text x="65.5789%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (10 samples, 0.01%)</title><rect x="65.3289%" y="613" width="0.0128%" height="15" fill="rgb(236,213,6)" fg:x="51229" fg:w="10"/><text x="65.5789%" y="623.50"></text></g><g><title> 32]&gt;::deserialize (10 samples, 0.01%)</title><rect x="65.3289%" y="597" width="0.0128%" height="15" fill="rgb(228,41,5)" fg:x="51229" fg:w="10"/><text x="65.5789%" y="607.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (10 samples, 0.01%)</title><rect x="65.3289%" y="581" width="0.0128%" height="15" fill="rgb(221,167,25)" fg:x="51229" fg:w="10"/><text x="65.5789%" y="591.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (10 samples, 0.01%)</title><rect x="65.3289%" y="565" width="0.0128%" height="15" fill="rgb(228,144,37)" fg:x="51229" fg:w="10"/><text x="65.5789%" y="575.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (10 samples, 0.01%)</title><rect x="65.3289%" y="549" width="0.0128%" height="15" fill="rgb(227,189,38)" fg:x="51229" fg:w="10"/><text x="65.5789%" y="559.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (36 samples, 0.05%)</title><rect x="65.3570%" y="437" width="0.0459%" height="15" fill="rgb(218,8,2)" fg:x="51251" fg:w="36"/><text x="65.6070%" y="447.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (36 samples, 0.05%)</title><rect x="65.3570%" y="421" width="0.0459%" height="15" fill="rgb(209,61,28)" fg:x="51251" fg:w="36"/><text x="65.6070%" y="431.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (36 samples, 0.05%)</title><rect x="65.3570%" y="405" width="0.0459%" height="15" fill="rgb(233,140,39)" fg:x="51251" fg:w="36"/><text x="65.6070%" y="415.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (35 samples, 0.04%)</title><rect x="65.3583%" y="389" width="0.0446%" height="15" fill="rgb(251,66,48)" fg:x="51252" fg:w="35"/><text x="65.6083%" y="399.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (31 samples, 0.04%)</title><rect x="65.3634%" y="373" width="0.0395%" height="15" fill="rgb(210,44,45)" fg:x="51256" fg:w="31"/><text x="65.6134%" y="383.50"></text></g><g><title> 32]&gt;::deserialize (31 samples, 0.04%)</title><rect x="65.3634%" y="357" width="0.0395%" height="15" fill="rgb(214,136,46)" fg:x="51256" fg:w="31"/><text x="65.6134%" y="367.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (31 samples, 0.04%)</title><rect x="65.3634%" y="341" width="0.0395%" height="15" fill="rgb(207,130,50)" fg:x="51256" fg:w="31"/><text x="65.6134%" y="351.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (31 samples, 0.04%)</title><rect x="65.3634%" y="325" width="0.0395%" height="15" fill="rgb(228,102,49)" fg:x="51256" fg:w="31"/><text x="65.6134%" y="335.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (31 samples, 0.04%)</title><rect x="65.3634%" y="309" width="0.0395%" height="15" fill="rgb(253,55,1)" fg:x="51256" fg:w="31"/><text x="65.6134%" y="319.50"></text></g><g><title>serde::de::SeqAccess::next_element (20 samples, 0.03%)</title><rect x="65.3774%" y="293" width="0.0255%" height="15" fill="rgb(238,222,9)" fg:x="51267" fg:w="20"/><text x="65.6274%" y="303.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (20 samples, 0.03%)</title><rect x="65.3774%" y="277" width="0.0255%" height="15" fill="rgb(246,99,6)" fg:x="51267" fg:w="20"/><text x="65.6274%" y="287.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.02%)</title><rect x="65.3876%" y="261" width="0.0153%" height="15" fill="rgb(219,110,26)" fg:x="51275" fg:w="12"/><text x="65.6376%" y="271.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (12 samples, 0.02%)</title><rect x="65.3876%" y="245" width="0.0153%" height="15" fill="rgb(239,160,33)" fg:x="51275" fg:w="12"/><text x="65.6376%" y="255.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (12 samples, 0.02%)</title><rect x="65.3876%" y="229" width="0.0153%" height="15" fill="rgb(220,202,23)" fg:x="51275" fg:w="12"/><text x="65.6376%" y="239.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (42 samples, 0.05%)</title><rect x="65.3506%" y="469" width="0.0536%" height="15" fill="rgb(208,80,26)" fg:x="51246" fg:w="42"/><text x="65.6006%" y="479.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (42 samples, 0.05%)</title><rect x="65.3506%" y="453" width="0.0536%" height="15" fill="rgb(243,85,7)" fg:x="51246" fg:w="42"/><text x="65.6006%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (20 samples, 0.03%)</title><rect x="65.4042%" y="469" width="0.0255%" height="15" fill="rgb(228,77,47)" fg:x="51288" fg:w="20"/><text x="65.6542%" y="479.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (65 samples, 0.08%)</title><rect x="65.3506%" y="517" width="0.0829%" height="15" fill="rgb(212,226,8)" fg:x="51246" fg:w="65"/><text x="65.6006%" y="527.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (65 samples, 0.08%)</title><rect x="65.3506%" y="501" width="0.0829%" height="15" fill="rgb(241,120,54)" fg:x="51246" fg:w="65"/><text x="65.6006%" y="511.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (65 samples, 0.08%)</title><rect x="65.3506%" y="485" width="0.0829%" height="15" fill="rgb(226,80,16)" fg:x="51246" fg:w="65"/><text x="65.6006%" y="495.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (68 samples, 0.09%)</title><rect x="65.3494%" y="549" width="0.0867%" height="15" fill="rgb(240,76,13)" fg:x="51245" fg:w="68"/><text x="65.5994%" y="559.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (68 samples, 0.09%)</title><rect x="65.3494%" y="533" width="0.0867%" height="15" fill="rgb(252,74,8)" fg:x="51245" fg:w="68"/><text x="65.5994%" y="543.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (74 samples, 0.09%)</title><rect x="65.3494%" y="581" width="0.0944%" height="15" fill="rgb(244,155,2)" fg:x="51245" fg:w="74"/><text x="65.5994%" y="591.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (74 samples, 0.09%)</title><rect x="65.3494%" y="565" width="0.0944%" height="15" fill="rgb(215,81,35)" fg:x="51245" fg:w="74"/><text x="65.5994%" y="575.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (84 samples, 0.11%)</title><rect x="65.3494%" y="597" width="0.1071%" height="15" fill="rgb(206,55,2)" fg:x="51245" fg:w="84"/><text x="65.5994%" y="607.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="65.4437%" y="581" width="0.0128%" height="15" fill="rgb(231,2,34)" fg:x="51319" fg:w="10"/><text x="65.6937%" y="591.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (93 samples, 0.12%)</title><rect x="65.3494%" y="613" width="0.1186%" height="15" fill="rgb(242,176,48)" fg:x="51245" fg:w="93"/><text x="65.5994%" y="623.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (121 samples, 0.15%)</title><rect x="65.3494%" y="629" width="0.1543%" height="15" fill="rgb(249,31,36)" fg:x="51245" fg:w="121"/><text x="65.5994%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (28 samples, 0.04%)</title><rect x="65.4679%" y="613" width="0.0357%" height="15" fill="rgb(205,18,17)" fg:x="51338" fg:w="28"/><text x="65.7179%" y="623.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (132 samples, 0.17%)</title><rect x="65.3417%" y="661" width="0.1683%" height="15" fill="rgb(254,130,5)" fg:x="51239" fg:w="132"/><text x="65.5917%" y="671.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (126 samples, 0.16%)</title><rect x="65.3494%" y="645" width="0.1607%" height="15" fill="rgb(229,42,45)" fg:x="51245" fg:w="126"/><text x="65.5994%" y="655.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (134 samples, 0.17%)</title><rect x="65.3417%" y="677" width="0.1709%" height="15" fill="rgb(245,95,25)" fg:x="51239" fg:w="134"/><text x="65.5917%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (154 samples, 0.20%)</title><rect x="65.3264%" y="693" width="0.1964%" height="15" fill="rgb(249,193,38)" fg:x="51227" fg:w="154"/><text x="65.5764%" y="703.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (183 samples, 0.23%)</title><rect x="65.3264%" y="709" width="0.2334%" height="15" fill="rgb(241,140,43)" fg:x="51227" fg:w="183"/><text x="65.5764%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (29 samples, 0.04%)</title><rect x="65.5228%" y="693" width="0.0370%" height="15" fill="rgb(245,78,48)" fg:x="51381" fg:w="29"/><text x="65.7728%" y="703.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (190 samples, 0.24%)</title><rect x="65.3264%" y="741" width="0.2423%" height="15" fill="rgb(214,92,39)" fg:x="51227" fg:w="190"/><text x="65.5764%" y="751.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (190 samples, 0.24%)</title><rect x="65.3264%" y="725" width="0.2423%" height="15" fill="rgb(211,189,14)" fg:x="51227" fg:w="190"/><text x="65.5764%" y="735.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (193 samples, 0.25%)</title><rect x="65.3264%" y="757" width="0.2461%" height="15" fill="rgb(218,7,24)" fg:x="51227" fg:w="193"/><text x="65.5764%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (196 samples, 0.25%)</title><rect x="65.3251%" y="773" width="0.2499%" height="15" fill="rgb(224,200,49)" fg:x="51226" fg:w="196"/><text x="65.5751%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (207 samples, 0.26%)</title><rect x="65.3251%" y="805" width="0.2640%" height="15" fill="rgb(218,210,14)" fg:x="51226" fg:w="207"/><text x="65.5751%" y="815.50"></text></g><g><title>bcs::de::from_bytes_seed (207 samples, 0.26%)</title><rect x="65.3251%" y="789" width="0.2640%" height="15" fill="rgb(234,142,31)" fg:x="51226" fg:w="207"/><text x="65.5751%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (11 samples, 0.01%)</title><rect x="65.5751%" y="773" width="0.0140%" height="15" fill="rgb(227,165,2)" fg:x="51422" fg:w="11"/><text x="65.8251%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (688 samples, 0.88%)</title><rect x="64.7156%" y="837" width="0.8774%" height="15" fill="rgb(232,44,46)" fg:x="50748" fg:w="688"/><text x="64.9656%" y="847.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (656 samples, 0.84%)</title><rect x="64.7564%" y="821" width="0.8366%" height="15" fill="rgb(236,149,47)" fg:x="50780" fg:w="656"/><text x="65.0064%" y="831.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (9 samples, 0.01%)</title><rect x="65.5929%" y="837" width="0.0115%" height="15" fill="rgb(227,45,31)" fg:x="51436" fg:w="9"/><text x="65.8429%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.01%)</title><rect x="65.5929%" y="821" width="0.0115%" height="15" fill="rgb(240,176,51)" fg:x="51436" fg:w="9"/><text x="65.8429%" y="831.50"></text></g><g><title>core::ptr::write (9 samples, 0.01%)</title><rect x="65.5929%" y="805" width="0.0115%" height="15" fill="rgb(249,146,41)" fg:x="51436" fg:w="9"/><text x="65.8429%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (713 samples, 0.91%)</title><rect x="64.7066%" y="853" width="0.9092%" height="15" fill="rgb(213,208,4)" fg:x="50741" fg:w="713"/><text x="64.9566%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::borrow_global (9 samples, 0.01%)</title><rect x="65.6044%" y="837" width="0.0115%" height="15" fill="rgb(245,84,36)" fg:x="51445" fg:w="9"/><text x="65.8544%" y="847.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (8 samples, 0.01%)</title><rect x="65.6159%" y="789" width="0.0102%" height="15" fill="rgb(254,84,18)" fg:x="51454" fg:w="8"/><text x="65.8659%" y="799.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (8 samples, 0.01%)</title><rect x="65.6159%" y="773" width="0.0102%" height="15" fill="rgb(225,38,54)" fg:x="51454" fg:w="8"/><text x="65.8659%" y="783.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (8 samples, 0.01%)</title><rect x="65.6159%" y="757" width="0.0102%" height="15" fill="rgb(246,50,30)" fg:x="51454" fg:w="8"/><text x="65.8659%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::GlobalValue::view::Wrapper as move_vm_types::views::ValueView&gt;::visit (8 samples, 0.01%)</title><rect x="65.6159%" y="741" width="0.0102%" height="15" fill="rgb(246,148,9)" fg:x="51454" fg:w="8"/><text x="65.8659%" y="751.50"></text></g><g><title>&lt;aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size::Visitor as move_vm_types::views::ValueVisitor&gt;::visit_struct (8 samples, 0.01%)</title><rect x="65.6159%" y="725" width="0.0102%" height="15" fill="rgb(223,75,4)" fg:x="51454" fg:w="8"/><text x="65.8659%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (12 samples, 0.02%)</title><rect x="65.6261%" y="741" width="0.0153%" height="15" fill="rgb(239,148,41)" fg:x="51462" fg:w="12"/><text x="65.8761%" y="751.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (29 samples, 0.04%)</title><rect x="65.6159%" y="805" width="0.0370%" height="15" fill="rgb(205,195,3)" fg:x="51454" fg:w="29"/><text x="65.8659%" y="815.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (21 samples, 0.03%)</title><rect x="65.6261%" y="789" width="0.0268%" height="15" fill="rgb(254,161,1)" fg:x="51462" fg:w="21"/><text x="65.8761%" y="799.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (21 samples, 0.03%)</title><rect x="65.6261%" y="773" width="0.0268%" height="15" fill="rgb(211,229,8)" fg:x="51462" fg:w="21"/><text x="65.8761%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::GlobalValue::view::Wrapper as move_vm_types::views::ValueView&gt;::visit (21 samples, 0.03%)</title><rect x="65.6261%" y="757" width="0.0268%" height="15" fill="rgb(220,97,9)" fg:x="51462" fg:w="21"/><text x="65.8761%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (9 samples, 0.01%)</title><rect x="65.6414%" y="741" width="0.0115%" height="15" fill="rgb(240,218,8)" fg:x="51474" fg:w="9"/><text x="65.8914%" y="751.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_load_resource (37 samples, 0.05%)</title><rect x="65.6159%" y="821" width="0.0472%" height="15" fill="rgb(250,44,0)" fg:x="51454" fg:w="37"/><text x="65.8659%" y="831.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="65.6720%" y="709" width="0.0255%" height="15" fill="rgb(236,41,53)" fg:x="51498" fg:w="20"/><text x="65.9220%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="65.6809%" y="693" width="0.0166%" height="15" fill="rgb(218,227,13)" fg:x="51505" fg:w="13"/><text x="65.9309%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26 samples, 0.03%)</title><rect x="65.6720%" y="773" width="0.0332%" height="15" fill="rgb(217,94,32)" fg:x="51498" fg:w="26"/><text x="65.9220%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 0.03%)</title><rect x="65.6720%" y="757" width="0.0332%" height="15" fill="rgb(213,217,12)" fg:x="51498" fg:w="26"/><text x="65.9220%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.03%)</title><rect x="65.6720%" y="741" width="0.0332%" height="15" fill="rgb(229,13,46)" fg:x="51498" fg:w="26"/><text x="65.9220%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 0.03%)</title><rect x="65.6720%" y="725" width="0.0332%" height="15" fill="rgb(243,139,5)" fg:x="51498" fg:w="26"/><text x="65.9220%" y="735.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="65.6720%" y="789" width="0.0344%" height="15" fill="rgb(249,38,45)" fg:x="51498" fg:w="27"/><text x="65.9220%" y="799.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (9 samples, 0.01%)</title><rect x="65.7064%" y="677" width="0.0115%" height="15" fill="rgb(216,70,11)" fg:x="51525" fg:w="9"/><text x="65.9564%" y="687.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (9 samples, 0.01%)</title><rect x="65.7064%" y="661" width="0.0115%" height="15" fill="rgb(253,101,25)" fg:x="51525" fg:w="9"/><text x="65.9564%" y="671.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (9 samples, 0.01%)</title><rect x="65.7064%" y="645" width="0.0115%" height="15" fill="rgb(207,197,30)" fg:x="51525" fg:w="9"/><text x="65.9564%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.01%)</title><rect x="65.7064%" y="629" width="0.0115%" height="15" fill="rgb(238,87,13)" fg:x="51525" fg:w="9"/><text x="65.9564%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.01%)</title><rect x="65.7064%" y="613" width="0.0115%" height="15" fill="rgb(215,155,8)" fg:x="51525" fg:w="9"/><text x="65.9564%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.01%)</title><rect x="65.7064%" y="597" width="0.0115%" height="15" fill="rgb(239,166,38)" fg:x="51525" fg:w="9"/><text x="65.9564%" y="607.50"></text></g><g><title>arena_malloc (12 samples, 0.02%)</title><rect x="65.7498%" y="277" width="0.0153%" height="15" fill="rgb(240,194,35)" fg:x="51559" fg:w="12"/><text x="65.9998%" y="287.50"></text></g><g><title>tcache_alloc_small (12 samples, 0.02%)</title><rect x="65.7498%" y="261" width="0.0153%" height="15" fill="rgb(219,10,44)" fg:x="51559" fg:w="12"/><text x="65.9998%" y="271.50"></text></g><g><title>cache_bin_alloc_easy (12 samples, 0.02%)</title><rect x="65.7498%" y="245" width="0.0153%" height="15" fill="rgb(251,220,35)" fg:x="51559" fg:w="12"/><text x="65.9998%" y="255.50"></text></g><g><title>iralloct (21 samples, 0.03%)</title><rect x="65.7408%" y="325" width="0.0268%" height="15" fill="rgb(218,117,13)" fg:x="51552" fg:w="21"/><text x="65.9908%" y="335.50"></text></g><g><title>_rjem_je_arena_ralloc (21 samples, 0.03%)</title><rect x="65.7408%" y="309" width="0.0268%" height="15" fill="rgb(221,213,40)" fg:x="51552" fg:w="21"/><text x="65.9908%" y="319.50"></text></g><g><title>arena_ralloc_move_helper (14 samples, 0.02%)</title><rect x="65.7498%" y="293" width="0.0179%" height="15" fill="rgb(251,224,35)" fg:x="51559" fg:w="14"/><text x="65.9998%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (36 samples, 0.05%)</title><rect x="65.7332%" y="405" width="0.0459%" height="15" fill="rgb(241,33,39)" fg:x="51546" fg:w="36"/><text x="65.9832%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (33 samples, 0.04%)</title><rect x="65.7370%" y="389" width="0.0421%" height="15" fill="rgb(222,74,17)" fg:x="51549" fg:w="33"/><text x="65.9870%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (33 samples, 0.04%)</title><rect x="65.7370%" y="373" width="0.0421%" height="15" fill="rgb(225,103,0)" fg:x="51549" fg:w="33"/><text x="65.9870%" y="383.50"></text></g><g><title>alloc::alloc::realloc (33 samples, 0.04%)</title><rect x="65.7370%" y="357" width="0.0421%" height="15" fill="rgb(240,0,12)" fg:x="51549" fg:w="33"/><text x="65.9870%" y="367.50"></text></g><g><title>rallocx (30 samples, 0.04%)</title><rect x="65.7408%" y="341" width="0.0383%" height="15" fill="rgb(233,213,37)" fg:x="51552" fg:w="30"/><text x="65.9908%" y="351.50"></text></g><g><title>rtree_szind_slab_read (9 samples, 0.01%)</title><rect x="65.7676%" y="325" width="0.0115%" height="15" fill="rgb(225,84,52)" fg:x="51573" fg:w="9"/><text x="66.0176%" y="335.50"></text></g><g><title>rtree_leaf_elm_bits_read (9 samples, 0.01%)</title><rect x="65.7676%" y="309" width="0.0115%" height="15" fill="rgb(247,160,51)" fg:x="51573" fg:w="9"/><text x="66.0176%" y="319.50"></text></g><g><title>atomic_load_p (9 samples, 0.01%)</title><rect x="65.7676%" y="293" width="0.0115%" height="15" fill="rgb(244,60,51)" fg:x="51573" fg:w="9"/><text x="66.0176%" y="303.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (45 samples, 0.06%)</title><rect x="65.7230%" y="645" width="0.0574%" height="15" fill="rgb(233,114,7)" fg:x="51538" fg:w="45"/><text x="65.9730%" y="655.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (45 samples, 0.06%)</title><rect x="65.7230%" y="629" width="0.0574%" height="15" fill="rgb(246,136,16)" fg:x="51538" fg:w="45"/><text x="65.9730%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (44 samples, 0.06%)</title><rect x="65.7243%" y="613" width="0.0561%" height="15" fill="rgb(243,114,45)" fg:x="51539" fg:w="44"/><text x="65.9743%" y="623.50"></text></g><g><title> 32]&gt;::serialize (44 samples, 0.06%)</title><rect x="65.7243%" y="597" width="0.0561%" height="15" fill="rgb(247,183,43)" fg:x="51539" fg:w="44"/><text x="65.9743%" y="607.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (38 samples, 0.05%)</title><rect x="65.7319%" y="581" width="0.0485%" height="15" fill="rgb(251,210,42)" fg:x="51545" fg:w="38"/><text x="65.9819%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (38 samples, 0.05%)</title><rect x="65.7319%" y="565" width="0.0485%" height="15" fill="rgb(221,88,35)" fg:x="51545" fg:w="38"/><text x="65.9819%" y="575.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (38 samples, 0.05%)</title><rect x="65.7319%" y="549" width="0.0485%" height="15" fill="rgb(242,21,20)" fg:x="51545" fg:w="38"/><text x="65.9819%" y="559.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (38 samples, 0.05%)</title><rect x="65.7319%" y="533" width="0.0485%" height="15" fill="rgb(233,226,36)" fg:x="51545" fg:w="38"/><text x="65.9819%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (38 samples, 0.05%)</title><rect x="65.7319%" y="517" width="0.0485%" height="15" fill="rgb(243,189,34)" fg:x="51545" fg:w="38"/><text x="65.9819%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (38 samples, 0.05%)</title><rect x="65.7319%" y="501" width="0.0485%" height="15" fill="rgb(207,145,50)" fg:x="51545" fg:w="38"/><text x="65.9819%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (38 samples, 0.05%)</title><rect x="65.7319%" y="485" width="0.0485%" height="15" fill="rgb(242,1,50)" fg:x="51545" fg:w="38"/><text x="65.9819%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (38 samples, 0.05%)</title><rect x="65.7319%" y="469" width="0.0485%" height="15" fill="rgb(231,65,32)" fg:x="51545" fg:w="38"/><text x="65.9819%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (38 samples, 0.05%)</title><rect x="65.7319%" y="453" width="0.0485%" height="15" fill="rgb(208,68,49)" fg:x="51545" fg:w="38"/><text x="65.9819%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.05%)</title><rect x="65.7332%" y="437" width="0.0472%" height="15" fill="rgb(253,54,49)" fg:x="51546" fg:w="37"/><text x="65.9832%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (37 samples, 0.05%)</title><rect x="65.7332%" y="421" width="0.0472%" height="15" fill="rgb(245,186,24)" fg:x="51546" fg:w="37"/><text x="65.9832%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (17 samples, 0.02%)</title><rect x="65.7919%" y="261" width="0.0217%" height="15" fill="rgb(209,2,41)" fg:x="51592" fg:w="17"/><text x="66.0419%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (17 samples, 0.02%)</title><rect x="65.7919%" y="245" width="0.0217%" height="15" fill="rgb(242,208,54)" fg:x="51592" fg:w="17"/><text x="66.0419%" y="255.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (25 samples, 0.03%)</title><rect x="65.7919%" y="437" width="0.0319%" height="15" fill="rgb(225,9,51)" fg:x="51592" fg:w="25"/><text x="66.0419%" y="447.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (25 samples, 0.03%)</title><rect x="65.7919%" y="421" width="0.0319%" height="15" fill="rgb(207,207,25)" fg:x="51592" fg:w="25"/><text x="66.0419%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (25 samples, 0.03%)</title><rect x="65.7919%" y="405" width="0.0319%" height="15" fill="rgb(253,96,18)" fg:x="51592" fg:w="25"/><text x="66.0419%" y="415.50"></text></g><g><title> 32]&gt;::serialize (25 samples, 0.03%)</title><rect x="65.7919%" y="389" width="0.0319%" height="15" fill="rgb(252,215,20)" fg:x="51592" fg:w="25"/><text x="66.0419%" y="399.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (25 samples, 0.03%)</title><rect x="65.7919%" y="373" width="0.0319%" height="15" fill="rgb(245,227,26)" fg:x="51592" fg:w="25"/><text x="66.0419%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (25 samples, 0.03%)</title><rect x="65.7919%" y="357" width="0.0319%" height="15" fill="rgb(241,208,0)" fg:x="51592" fg:w="25"/><text x="66.0419%" y="367.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (25 samples, 0.03%)</title><rect x="65.7919%" y="341" width="0.0319%" height="15" fill="rgb(224,130,10)" fg:x="51592" fg:w="25"/><text x="66.0419%" y="351.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (25 samples, 0.03%)</title><rect x="65.7919%" y="325" width="0.0319%" height="15" fill="rgb(237,29,0)" fg:x="51592" fg:w="25"/><text x="66.0419%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (25 samples, 0.03%)</title><rect x="65.7919%" y="309" width="0.0319%" height="15" fill="rgb(219,27,41)" fg:x="51592" fg:w="25"/><text x="66.0419%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (25 samples, 0.03%)</title><rect x="65.7919%" y="293" width="0.0319%" height="15" fill="rgb(245,101,19)" fg:x="51592" fg:w="25"/><text x="66.0419%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (25 samples, 0.03%)</title><rect x="65.7919%" y="277" width="0.0319%" height="15" fill="rgb(243,44,37)" fg:x="51592" fg:w="25"/><text x="66.0419%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="65.8135%" y="261" width="0.0102%" height="15" fill="rgb(228,213,43)" fg:x="51609" fg:w="8"/><text x="66.0635%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="65.8135%" y="245" width="0.0102%" height="15" fill="rgb(219,163,21)" fg:x="51609" fg:w="8"/><text x="66.0635%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.01%)</title><rect x="65.8135%" y="229" width="0.0102%" height="15" fill="rgb(234,86,24)" fg:x="51609" fg:w="8"/><text x="66.0635%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.01%)</title><rect x="65.8135%" y="213" width="0.0102%" height="15" fill="rgb(225,10,24)" fg:x="51609" fg:w="8"/><text x="66.0635%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="65.8135%" y="197" width="0.0102%" height="15" fill="rgb(218,109,7)" fg:x="51609" fg:w="8"/><text x="66.0635%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.01%)</title><rect x="65.8135%" y="181" width="0.0102%" height="15" fill="rgb(210,20,26)" fg:x="51609" fg:w="8"/><text x="66.0635%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.01%)</title><rect x="65.8135%" y="165" width="0.0102%" height="15" fill="rgb(216,18,1)" fg:x="51609" fg:w="8"/><text x="66.0635%" y="175.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.01%)</title><rect x="65.8135%" y="149" width="0.0102%" height="15" fill="rgb(206,163,23)" fg:x="51609" fg:w="8"/><text x="66.0635%" y="159.50"></text></g><g><title>rallocx (8 samples, 0.01%)</title><rect x="65.8135%" y="133" width="0.0102%" height="15" fill="rgb(229,150,31)" fg:x="51609" fg:w="8"/><text x="66.0635%" y="143.50"></text></g><g><title>bcs::ser::to_bytes (99 samples, 0.13%)</title><rect x="65.7064%" y="741" width="0.1262%" height="15" fill="rgb(231,10,5)" fg:x="51525" fg:w="99"/><text x="65.9564%" y="751.50"></text></g><g><title>bcs::ser::serialize_into (99 samples, 0.13%)</title><rect x="65.7064%" y="725" width="0.1262%" height="15" fill="rgb(250,40,50)" fg:x="51525" fg:w="99"/><text x="65.9564%" y="735.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (99 samples, 0.13%)</title><rect x="65.7064%" y="709" width="0.1262%" height="15" fill="rgb(217,119,7)" fg:x="51525" fg:w="99"/><text x="65.9564%" y="719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (99 samples, 0.13%)</title><rect x="65.7064%" y="693" width="0.1262%" height="15" fill="rgb(245,214,40)" fg:x="51525" fg:w="99"/><text x="65.9564%" y="703.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (90 samples, 0.11%)</title><rect x="65.7179%" y="677" width="0.1148%" height="15" fill="rgb(216,187,1)" fg:x="51534" fg:w="90"/><text x="65.9679%" y="687.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (86 samples, 0.11%)</title><rect x="65.7230%" y="661" width="0.1097%" height="15" fill="rgb(237,146,21)" fg:x="51538" fg:w="86"/><text x="65.9730%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (38 samples, 0.05%)</title><rect x="65.7842%" y="645" width="0.0485%" height="15" fill="rgb(210,174,47)" fg:x="51586" fg:w="38"/><text x="66.0342%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (38 samples, 0.05%)</title><rect x="65.7842%" y="629" width="0.0485%" height="15" fill="rgb(218,111,39)" fg:x="51586" fg:w="38"/><text x="66.0342%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (38 samples, 0.05%)</title><rect x="65.7842%" y="613" width="0.0485%" height="15" fill="rgb(224,95,19)" fg:x="51586" fg:w="38"/><text x="66.0342%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (38 samples, 0.05%)</title><rect x="65.7842%" y="597" width="0.0485%" height="15" fill="rgb(234,15,38)" fg:x="51586" fg:w="38"/><text x="66.0342%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (38 samples, 0.05%)</title><rect x="65.7842%" y="581" width="0.0485%" height="15" fill="rgb(246,56,12)" fg:x="51586" fg:w="38"/><text x="66.0342%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (38 samples, 0.05%)</title><rect x="65.7842%" y="565" width="0.0485%" height="15" fill="rgb(247,16,17)" fg:x="51586" fg:w="38"/><text x="66.0342%" y="575.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (38 samples, 0.05%)</title><rect x="65.7842%" y="549" width="0.0485%" height="15" fill="rgb(215,151,11)" fg:x="51586" fg:w="38"/><text x="66.0342%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (38 samples, 0.05%)</title><rect x="65.7842%" y="533" width="0.0485%" height="15" fill="rgb(225,16,24)" fg:x="51586" fg:w="38"/><text x="66.0342%" y="543.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (38 samples, 0.05%)</title><rect x="65.7842%" y="517" width="0.0485%" height="15" fill="rgb(217,117,5)" fg:x="51586" fg:w="38"/><text x="66.0342%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (38 samples, 0.05%)</title><rect x="65.7842%" y="501" width="0.0485%" height="15" fill="rgb(246,187,53)" fg:x="51586" fg:w="38"/><text x="66.0342%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (34 samples, 0.04%)</title><rect x="65.7893%" y="485" width="0.0434%" height="15" fill="rgb(241,71,40)" fg:x="51590" fg:w="34"/><text x="66.0393%" y="495.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (34 samples, 0.04%)</title><rect x="65.7893%" y="469" width="0.0434%" height="15" fill="rgb(231,67,39)" fg:x="51590" fg:w="34"/><text x="66.0393%" y="479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (32 samples, 0.04%)</title><rect x="65.7919%" y="453" width="0.0408%" height="15" fill="rgb(222,120,24)" fg:x="51592" fg:w="32"/><text x="66.0419%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (9 samples, 0.01%)</title><rect x="65.8327%" y="709" width="0.0115%" height="15" fill="rgb(248,3,3)" fg:x="51624" fg:w="9"/><text x="66.0827%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="65.8327%" y="693" width="0.0115%" height="15" fill="rgb(228,218,5)" fg:x="51624" fg:w="9"/><text x="66.0827%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (9 samples, 0.01%)</title><rect x="65.8327%" y="677" width="0.0115%" height="15" fill="rgb(212,202,43)" fg:x="51624" fg:w="9"/><text x="66.0827%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (11 samples, 0.01%)</title><rect x="65.8327%" y="741" width="0.0140%" height="15" fill="rgb(235,183,2)" fg:x="51624" fg:w="11"/><text x="66.0827%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (11 samples, 0.01%)</title><rect x="65.8327%" y="725" width="0.0140%" height="15" fill="rgb(230,165,10)" fg:x="51624" fg:w="11"/><text x="66.0827%" y="735.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (113 samples, 0.14%)</title><rect x="65.7064%" y="773" width="0.1441%" height="15" fill="rgb(219,54,40)" fg:x="51525" fg:w="113"/><text x="65.9564%" y="783.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (113 samples, 0.14%)</title><rect x="65.7064%" y="757" width="0.1441%" height="15" fill="rgb(244,73,9)" fg:x="51525" fg:w="113"/><text x="65.9564%" y="767.50"></text></g><g><title>aptos_vm::create_access_path (114 samples, 0.15%)</title><rect x="65.7064%" y="789" width="0.1454%" height="15" fill="rgb(212,32,45)" fg:x="51525" fg:w="114"/><text x="65.9564%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (10 samples, 0.01%)</title><rect x="65.8518%" y="757" width="0.0128%" height="15" fill="rgb(205,58,31)" fg:x="51639" fg:w="10"/><text x="66.1018%" y="767.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (14 samples, 0.02%)</title><rect x="65.8518%" y="773" width="0.0179%" height="15" fill="rgb(250,120,43)" fg:x="51639" fg:w="14"/><text x="66.1018%" y="783.50"></text></g><g><title>aptos_vm::data_cache::StorageAdapter&lt;S&gt;::get (15 samples, 0.02%)</title><rect x="65.8518%" y="789" width="0.0191%" height="15" fill="rgb(235,13,10)" fg:x="51639" fg:w="15"/><text x="66.1018%" y="799.50"></text></g><g><title>&lt;aptos_vm::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (164 samples, 0.21%)</title><rect x="65.6631%" y="805" width="0.2091%" height="15" fill="rgb(232,219,31)" fg:x="51491" fg:w="164"/><text x="65.9131%" y="815.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="65.8722%" y="805" width="0.0115%" height="15" fill="rgb(218,157,51)" fg:x="51655" fg:w="9"/><text x="66.1222%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="65.8722%" y="789" width="0.0115%" height="15" fill="rgb(211,91,52)" fg:x="51655" fg:w="9"/><text x="66.1222%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (8 samples, 0.01%)</title><rect x="65.8862%" y="805" width="0.0102%" height="15" fill="rgb(240,173,1)" fg:x="51666" fg:w="8"/><text x="66.1362%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (8 samples, 0.01%)</title><rect x="65.8862%" y="789" width="0.0102%" height="15" fill="rgb(248,20,47)" fg:x="51666" fg:w="8"/><text x="66.1362%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.01%)</title><rect x="65.8862%" y="773" width="0.0102%" height="15" fill="rgb(217,221,40)" fg:x="51666" fg:w="8"/><text x="66.1362%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.01%)</title><rect x="65.8862%" y="757" width="0.0102%" height="15" fill="rgb(226,149,51)" fg:x="51666" fg:w="8"/><text x="66.1362%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.01%)</title><rect x="65.8862%" y="741" width="0.0102%" height="15" fill="rgb(252,193,7)" fg:x="51666" fg:w="8"/><text x="66.1362%" y="751.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (8 samples, 0.01%)</title><rect x="65.8862%" y="725" width="0.0102%" height="15" fill="rgb(205,123,0)" fg:x="51666" fg:w="8"/><text x="66.1362%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (17 samples, 0.02%)</title><rect x="65.8964%" y="805" width="0.0217%" height="15" fill="rgb(233,173,25)" fg:x="51674" fg:w="17"/><text x="66.1464%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (17 samples, 0.02%)</title><rect x="65.8964%" y="789" width="0.0217%" height="15" fill="rgb(216,63,32)" fg:x="51674" fg:w="17"/><text x="66.1464%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (17 samples, 0.02%)</title><rect x="65.8964%" y="773" width="0.0217%" height="15" fill="rgb(209,56,45)" fg:x="51674" fg:w="17"/><text x="66.1464%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17 samples, 0.02%)</title><rect x="65.8964%" y="757" width="0.0217%" height="15" fill="rgb(226,111,49)" fg:x="51674" fg:w="17"/><text x="66.1464%" y="767.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (17 samples, 0.02%)</title><rect x="65.8964%" y="741" width="0.0217%" height="15" fill="rgb(244,181,21)" fg:x="51674" fg:w="17"/><text x="66.1464%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (14 samples, 0.02%)</title><rect x="65.9181%" y="789" width="0.0179%" height="15" fill="rgb(222,126,15)" fg:x="51691" fg:w="14"/><text x="66.1681%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.01%)</title><rect x="65.9258%" y="773" width="0.0102%" height="15" fill="rgb(222,95,17)" fg:x="51697" fg:w="8"/><text x="66.1758%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.01%)</title><rect x="65.9258%" y="757" width="0.0102%" height="15" fill="rgb(254,46,5)" fg:x="51697" fg:w="8"/><text x="66.1758%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.01%)</title><rect x="65.9258%" y="741" width="0.0102%" height="15" fill="rgb(236,216,35)" fg:x="51697" fg:w="8"/><text x="66.1758%" y="751.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (8 samples, 0.01%)</title><rect x="65.9258%" y="725" width="0.0102%" height="15" fill="rgb(217,187,26)" fg:x="51697" fg:w="8"/><text x="66.1758%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (20 samples, 0.03%)</title><rect x="65.9181%" y="805" width="0.0255%" height="15" fill="rgb(207,192,25)" fg:x="51691" fg:w="20"/><text x="66.1681%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="65.9462%" y="757" width="0.0179%" height="15" fill="rgb(253,135,27)" fg:x="51713" fg:w="14"/><text x="66.1962%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (14 samples, 0.02%)</title><rect x="65.9462%" y="741" width="0.0179%" height="15" fill="rgb(211,122,29)" fg:x="51713" fg:w="14"/><text x="66.1962%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (12 samples, 0.02%)</title><rect x="65.9487%" y="725" width="0.0153%" height="15" fill="rgb(233,162,40)" fg:x="51715" fg:w="12"/><text x="66.1987%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (12 samples, 0.02%)</title><rect x="65.9487%" y="709" width="0.0153%" height="15" fill="rgb(222,184,47)" fg:x="51715" fg:w="12"/><text x="66.1987%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (11 samples, 0.01%)</title><rect x="65.9500%" y="693" width="0.0140%" height="15" fill="rgb(249,99,23)" fg:x="51716" fg:w="11"/><text x="66.2000%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (8 samples, 0.01%)</title><rect x="65.9538%" y="677" width="0.0102%" height="15" fill="rgb(214,60,12)" fg:x="51719" fg:w="8"/><text x="66.2038%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (8 samples, 0.01%)</title><rect x="65.9538%" y="661" width="0.0102%" height="15" fill="rgb(250,229,36)" fg:x="51719" fg:w="8"/><text x="66.2038%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="65.9538%" y="645" width="0.0102%" height="15" fill="rgb(232,195,10)" fg:x="51719" fg:w="8"/><text x="66.2038%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="65.9538%" y="629" width="0.0102%" height="15" fill="rgb(205,213,31)" fg:x="51719" fg:w="8"/><text x="66.2038%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="65.9538%" y="613" width="0.0102%" height="15" fill="rgb(237,43,8)" fg:x="51719" fg:w="8"/><text x="66.2038%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (15 samples, 0.02%)</title><rect x="65.9462%" y="773" width="0.0191%" height="15" fill="rgb(216,208,3)" fg:x="51713" fg:w="15"/><text x="66.1962%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (26 samples, 0.03%)</title><rect x="65.9436%" y="805" width="0.0332%" height="15" fill="rgb(228,179,44)" fg:x="51711" fg:w="26"/><text x="66.1936%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (26 samples, 0.03%)</title><rect x="65.9436%" y="789" width="0.0332%" height="15" fill="rgb(230,192,27)" fg:x="51711" fg:w="26"/><text x="66.1936%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (9 samples, 0.01%)</title><rect x="65.9653%" y="773" width="0.0115%" height="15" fill="rgb(251,30,38)" fg:x="51728" fg:w="9"/><text x="66.2153%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (9 samples, 0.01%)</title><rect x="65.9653%" y="757" width="0.0115%" height="15" fill="rgb(246,55,52)" fg:x="51728" fg:w="9"/><text x="66.2153%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="65.9653%" y="741" width="0.0115%" height="15" fill="rgb(249,79,26)" fg:x="51728" fg:w="9"/><text x="66.2153%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="65.9653%" y="725" width="0.0115%" height="15" fill="rgb(220,202,16)" fg:x="51728" fg:w="9"/><text x="66.2153%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="65.9653%" y="709" width="0.0115%" height="15" fill="rgb(250,170,23)" fg:x="51728" fg:w="9"/><text x="66.2153%" y="719.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (20 samples, 0.03%)</title><rect x="65.9768%" y="805" width="0.0255%" height="15" fill="rgb(230,7,37)" fg:x="51737" fg:w="20"/><text x="66.2268%" y="815.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="66.0316%" y="485" width="0.0230%" height="15" fill="rgb(213,71,1)" fg:x="51780" fg:w="18"/><text x="66.2816%" y="495.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="66.0354%" y="469" width="0.0191%" height="15" fill="rgb(227,87,39)" fg:x="51783" fg:w="15"/><text x="66.2854%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="66.0354%" y="453" width="0.0191%" height="15" fill="rgb(210,41,29)" fg:x="51783" fg:w="15"/><text x="66.2854%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.02%)</title><rect x="66.0354%" y="437" width="0.0191%" height="15" fill="rgb(206,191,31)" fg:x="51783" fg:w="15"/><text x="66.2854%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.02%)</title><rect x="66.0354%" y="421" width="0.0191%" height="15" fill="rgb(247,75,54)" fg:x="51783" fg:w="15"/><text x="66.2854%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.02%)</title><rect x="66.0354%" y="405" width="0.0191%" height="15" fill="rgb(208,54,50)" fg:x="51783" fg:w="15"/><text x="66.2854%" y="415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (9 samples, 0.01%)</title><rect x="66.0431%" y="389" width="0.0115%" height="15" fill="rgb(214,90,37)" fg:x="51789" fg:w="9"/><text x="66.2931%" y="399.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (35 samples, 0.04%)</title><rect x="66.0214%" y="581" width="0.0446%" height="15" fill="rgb(220,132,6)" fg:x="51772" fg:w="35"/><text x="66.2714%" y="591.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (28 samples, 0.04%)</title><rect x="66.0303%" y="565" width="0.0357%" height="15" fill="rgb(213,167,7)" fg:x="51779" fg:w="28"/><text x="66.2803%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="66.0316%" y="549" width="0.0344%" height="15" fill="rgb(243,36,27)" fg:x="51780" fg:w="27"/><text x="66.2816%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.03%)</title><rect x="66.0316%" y="533" width="0.0344%" height="15" fill="rgb(235,147,12)" fg:x="51780" fg:w="27"/><text x="66.2816%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.03%)</title><rect x="66.0316%" y="517" width="0.0344%" height="15" fill="rgb(212,198,44)" fg:x="51780" fg:w="27"/><text x="66.2816%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.03%)</title><rect x="66.0316%" y="501" width="0.0344%" height="15" fill="rgb(218,68,50)" fg:x="51780" fg:w="27"/><text x="66.2816%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="66.0546%" y="485" width="0.0115%" height="15" fill="rgb(224,79,48)" fg:x="51798" fg:w="9"/><text x="66.3046%" y="495.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (55 samples, 0.07%)</title><rect x="66.0099%" y="677" width="0.0701%" height="15" fill="rgb(213,191,50)" fg:x="51763" fg:w="55"/><text x="66.2599%" y="687.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (55 samples, 0.07%)</title><rect x="66.0099%" y="661" width="0.0701%" height="15" fill="rgb(254,146,10)" fg:x="51763" fg:w="55"/><text x="66.2599%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (46 samples, 0.06%)</title><rect x="66.0214%" y="645" width="0.0587%" height="15" fill="rgb(215,175,11)" fg:x="51772" fg:w="46"/><text x="66.2714%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (46 samples, 0.06%)</title><rect x="66.0214%" y="629" width="0.0587%" height="15" fill="rgb(207,49,7)" fg:x="51772" fg:w="46"/><text x="66.2714%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (46 samples, 0.06%)</title><rect x="66.0214%" y="613" width="0.0587%" height="15" fill="rgb(234,144,29)" fg:x="51772" fg:w="46"/><text x="66.2714%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (46 samples, 0.06%)</title><rect x="66.0214%" y="597" width="0.0587%" height="15" fill="rgb(213,222,48)" fg:x="51772" fg:w="46"/><text x="66.2714%" y="607.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (10 samples, 0.01%)</title><rect x="66.0673%" y="581" width="0.0128%" height="15" fill="rgb(222,8,6)" fg:x="51808" fg:w="10"/><text x="66.3173%" y="591.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (68 samples, 0.09%)</title><rect x="66.0074%" y="757" width="0.0867%" height="15" fill="rgb(221,114,49)" fg:x="51761" fg:w="68"/><text x="66.2574%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (66 samples, 0.08%)</title><rect x="66.0099%" y="741" width="0.0842%" height="15" fill="rgb(250,140,42)" fg:x="51763" fg:w="66"/><text x="66.2599%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (66 samples, 0.08%)</title><rect x="66.0099%" y="725" width="0.0842%" height="15" fill="rgb(250,150,27)" fg:x="51763" fg:w="66"/><text x="66.2599%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (66 samples, 0.08%)</title><rect x="66.0099%" y="709" width="0.0842%" height="15" fill="rgb(252,159,3)" fg:x="51763" fg:w="66"/><text x="66.2599%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (66 samples, 0.08%)</title><rect x="66.0099%" y="693" width="0.0842%" height="15" fill="rgb(241,182,3)" fg:x="51763" fg:w="66"/><text x="66.2599%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.01%)</title><rect x="66.1017%" y="709" width="0.0102%" height="15" fill="rgb(236,3,9)" fg:x="51835" fg:w="8"/><text x="66.3517%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.01%)</title><rect x="66.1017%" y="693" width="0.0102%" height="15" fill="rgb(223,227,51)" fg:x="51835" fg:w="8"/><text x="66.3517%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (88 samples, 0.11%)</title><rect x="66.0023%" y="805" width="0.1122%" height="15" fill="rgb(232,133,30)" fg:x="51757" fg:w="88"/><text x="66.2523%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (88 samples, 0.11%)</title><rect x="66.0023%" y="789" width="0.1122%" height="15" fill="rgb(209,93,27)" fg:x="51757" fg:w="88"/><text x="66.2523%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (84 samples, 0.11%)</title><rect x="66.0074%" y="773" width="0.1071%" height="15" fill="rgb(208,108,34)" fg:x="51761" fg:w="84"/><text x="66.2574%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.01%)</title><rect x="66.1017%" y="757" width="0.0128%" height="15" fill="rgb(215,189,13)" fg:x="51835" fg:w="10"/><text x="66.3517%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.01%)</title><rect x="66.1017%" y="741" width="0.0128%" height="15" fill="rgb(206,88,23)" fg:x="51835" fg:w="10"/><text x="66.3517%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.01%)</title><rect x="66.1017%" y="725" width="0.0128%" height="15" fill="rgb(240,173,0)" fg:x="51835" fg:w="10"/><text x="66.3517%" y="735.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="66.1183%" y="677" width="0.0179%" height="15" fill="rgb(223,106,52)" fg:x="51848" fg:w="14"/><text x="66.3683%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="66.1183%" y="741" width="0.0204%" height="15" fill="rgb(206,130,16)" fg:x="51848" fg:w="16"/><text x="66.3683%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.02%)</title><rect x="66.1183%" y="725" width="0.0204%" height="15" fill="rgb(220,54,25)" fg:x="51848" fg:w="16"/><text x="66.3683%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.02%)</title><rect x="66.1183%" y="709" width="0.0204%" height="15" fill="rgb(210,4,38)" fg:x="51848" fg:w="16"/><text x="66.3683%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.02%)</title><rect x="66.1183%" y="693" width="0.0204%" height="15" fill="rgb(238,94,39)" fg:x="51848" fg:w="16"/><text x="66.3683%" y="703.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="66.1183%" y="757" width="0.0242%" height="15" fill="rgb(234,124,34)" fg:x="51848" fg:w="19"/><text x="66.3683%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (53 samples, 0.07%)</title><rect x="66.1145%" y="805" width="0.0676%" height="15" fill="rgb(221,91,40)" fg:x="51845" fg:w="53"/><text x="66.3645%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (53 samples, 0.07%)</title><rect x="66.1145%" y="789" width="0.0676%" height="15" fill="rgb(246,53,28)" fg:x="51845" fg:w="53"/><text x="66.3645%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (50 samples, 0.06%)</title><rect x="66.1183%" y="773" width="0.0638%" height="15" fill="rgb(229,109,7)" fg:x="51848" fg:w="50"/><text x="66.3683%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (31 samples, 0.04%)</title><rect x="66.1425%" y="757" width="0.0395%" height="15" fill="rgb(249,117,8)" fg:x="51867" fg:w="31"/><text x="66.3925%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (31 samples, 0.04%)</title><rect x="66.1425%" y="741" width="0.0395%" height="15" fill="rgb(210,181,1)" fg:x="51867" fg:w="31"/><text x="66.3925%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (31 samples, 0.04%)</title><rect x="66.1425%" y="725" width="0.0395%" height="15" fill="rgb(211,66,1)" fg:x="51867" fg:w="31"/><text x="66.3925%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (26 samples, 0.03%)</title><rect x="66.1489%" y="709" width="0.0332%" height="15" fill="rgb(221,90,14)" fg:x="51872" fg:w="26"/><text x="66.3989%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 0.03%)</title><rect x="66.1489%" y="693" width="0.0332%" height="15" fill="rgb(219,222,44)" fg:x="51872" fg:w="26"/><text x="66.3989%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (26 samples, 0.03%)</title><rect x="66.1489%" y="677" width="0.0332%" height="15" fill="rgb(246,34,33)" fg:x="51872" fg:w="26"/><text x="66.3989%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (23 samples, 0.03%)</title><rect x="66.1527%" y="661" width="0.0293%" height="15" fill="rgb(227,135,41)" fg:x="51875" fg:w="23"/><text x="66.4027%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (23 samples, 0.03%)</title><rect x="66.1527%" y="645" width="0.0293%" height="15" fill="rgb(226,15,14)" fg:x="51875" fg:w="23"/><text x="66.4027%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.03%)</title><rect x="66.1527%" y="629" width="0.0293%" height="15" fill="rgb(236,148,47)" fg:x="51875" fg:w="23"/><text x="66.4027%" y="639.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (47 samples, 0.06%)</title><rect x="66.2242%" y="437" width="0.0599%" height="15" fill="rgb(233,162,52)" fg:x="51931" fg:w="47"/><text x="66.4742%" y="447.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (47 samples, 0.06%)</title><rect x="66.2242%" y="421" width="0.0599%" height="15" fill="rgb(244,35,28)" fg:x="51931" fg:w="47"/><text x="66.4742%" y="431.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (47 samples, 0.06%)</title><rect x="66.2242%" y="405" width="0.0599%" height="15" fill="rgb(205,121,10)" fg:x="51931" fg:w="47"/><text x="66.4742%" y="415.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (47 samples, 0.06%)</title><rect x="66.2242%" y="389" width="0.0599%" height="15" fill="rgb(250,58,18)" fg:x="51931" fg:w="47"/><text x="66.4742%" y="399.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (40 samples, 0.05%)</title><rect x="66.2331%" y="373" width="0.0510%" height="15" fill="rgb(216,37,13)" fg:x="51938" fg:w="40"/><text x="66.4831%" y="383.50"></text></g><g><title> 32]&gt;::deserialize (40 samples, 0.05%)</title><rect x="66.2331%" y="357" width="0.0510%" height="15" fill="rgb(221,215,42)" fg:x="51938" fg:w="40"/><text x="66.4831%" y="367.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (40 samples, 0.05%)</title><rect x="66.2331%" y="341" width="0.0510%" height="15" fill="rgb(217,214,19)" fg:x="51938" fg:w="40"/><text x="66.4831%" y="351.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (40 samples, 0.05%)</title><rect x="66.2331%" y="325" width="0.0510%" height="15" fill="rgb(233,139,13)" fg:x="51938" fg:w="40"/><text x="66.4831%" y="335.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (40 samples, 0.05%)</title><rect x="66.2331%" y="309" width="0.0510%" height="15" fill="rgb(247,168,23)" fg:x="51938" fg:w="40"/><text x="66.4831%" y="319.50"></text></g><g><title>serde::de::SeqAccess::next_element (30 samples, 0.04%)</title><rect x="66.2458%" y="293" width="0.0383%" height="15" fill="rgb(207,202,1)" fg:x="51948" fg:w="30"/><text x="66.4958%" y="303.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (30 samples, 0.04%)</title><rect x="66.2458%" y="277" width="0.0383%" height="15" fill="rgb(220,155,48)" fg:x="51948" fg:w="30"/><text x="66.4958%" y="287.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (30 samples, 0.04%)</title><rect x="66.2458%" y="261" width="0.0383%" height="15" fill="rgb(250,43,26)" fg:x="51948" fg:w="30"/><text x="66.4958%" y="271.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (30 samples, 0.04%)</title><rect x="66.2458%" y="245" width="0.0383%" height="15" fill="rgb(212,190,23)" fg:x="51948" fg:w="30"/><text x="66.4958%" y="255.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (30 samples, 0.04%)</title><rect x="66.2458%" y="229" width="0.0383%" height="15" fill="rgb(216,39,24)" fg:x="51948" fg:w="30"/><text x="66.4958%" y="239.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (10 samples, 0.01%)</title><rect x="66.2713%" y="213" width="0.0128%" height="15" fill="rgb(252,113,16)" fg:x="51968" fg:w="10"/><text x="66.5213%" y="223.50"></text></g><g><title>bcs::de::Deserializer::next (10 samples, 0.01%)</title><rect x="66.2713%" y="197" width="0.0128%" height="15" fill="rgb(208,113,19)" fg:x="51968" fg:w="10"/><text x="66.5213%" y="207.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.01%)</title><rect x="66.2713%" y="181" width="0.0128%" height="15" fill="rgb(234,107,25)" fg:x="51968" fg:w="10"/><text x="66.5213%" y="191.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.01%)</title><rect x="66.2713%" y="165" width="0.0128%" height="15" fill="rgb(234,217,51)" fg:x="51968" fg:w="10"/><text x="66.5213%" y="175.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="66.2713%" y="149" width="0.0128%" height="15" fill="rgb(251,29,42)" fg:x="51968" fg:w="10"/><text x="66.5213%" y="159.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="66.2713%" y="133" width="0.0128%" height="15" fill="rgb(221,62,51)" fg:x="51968" fg:w="10"/><text x="66.5213%" y="143.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (10 samples, 0.01%)</title><rect x="66.2713%" y="117" width="0.0128%" height="15" fill="rgb(240,192,43)" fg:x="51968" fg:w="10"/><text x="66.5213%" y="127.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (52 samples, 0.07%)</title><rect x="66.2203%" y="469" width="0.0663%" height="15" fill="rgb(224,157,47)" fg:x="51928" fg:w="52"/><text x="66.4703%" y="479.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (52 samples, 0.07%)</title><rect x="66.2203%" y="453" width="0.0663%" height="15" fill="rgb(226,84,45)" fg:x="51928" fg:w="52"/><text x="66.4703%" y="463.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (77 samples, 0.10%)</title><rect x="66.1936%" y="501" width="0.0982%" height="15" fill="rgb(208,207,23)" fg:x="51907" fg:w="77"/><text x="66.4436%" y="511.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (76 samples, 0.10%)</title><rect x="66.1948%" y="485" width="0.0969%" height="15" fill="rgb(253,34,51)" fg:x="51908" fg:w="76"/><text x="66.4448%" y="495.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (79 samples, 0.10%)</title><rect x="66.1936%" y="517" width="0.1007%" height="15" fill="rgb(227,26,34)" fg:x="51907" fg:w="79"/><text x="66.4436%" y="527.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (82 samples, 0.10%)</title><rect x="66.1936%" y="533" width="0.1046%" height="15" fill="rgb(245,75,19)" fg:x="51907" fg:w="82"/><text x="66.4436%" y="543.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (99 samples, 0.13%)</title><rect x="66.1936%" y="549" width="0.1262%" height="15" fill="rgb(250,191,31)" fg:x="51907" fg:w="99"/><text x="66.4436%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (17 samples, 0.02%)</title><rect x="66.2981%" y="533" width="0.0217%" height="15" fill="rgb(224,11,50)" fg:x="51989" fg:w="17"/><text x="66.5481%" y="543.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (102 samples, 0.13%)</title><rect x="66.1936%" y="581" width="0.1301%" height="15" fill="rgb(231,171,7)" fg:x="51907" fg:w="102"/><text x="66.4436%" y="591.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (102 samples, 0.13%)</title><rect x="66.1936%" y="565" width="0.1301%" height="15" fill="rgb(252,214,10)" fg:x="51907" fg:w="102"/><text x="66.4436%" y="575.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (103 samples, 0.13%)</title><rect x="66.1936%" y="597" width="0.1313%" height="15" fill="rgb(249,45,46)" fg:x="51907" fg:w="103"/><text x="66.4436%" y="607.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (116 samples, 0.15%)</title><rect x="66.1936%" y="613" width="0.1479%" height="15" fill="rgb(240,173,7)" fg:x="51907" fg:w="116"/><text x="66.4436%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (10 samples, 0.01%)</title><rect x="66.3287%" y="597" width="0.0128%" height="15" fill="rgb(235,214,13)" fg:x="52013" fg:w="10"/><text x="66.5787%" y="607.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (10 samples, 0.01%)</title><rect x="66.3287%" y="581" width="0.0128%" height="15" fill="rgb(245,156,8)" fg:x="52013" fg:w="10"/><text x="66.5787%" y="591.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (138 samples, 0.18%)</title><rect x="66.1936%" y="629" width="0.1760%" height="15" fill="rgb(235,46,12)" fg:x="51907" fg:w="138"/><text x="66.4436%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (22 samples, 0.03%)</title><rect x="66.3415%" y="613" width="0.0281%" height="15" fill="rgb(221,81,14)" fg:x="52023" fg:w="22"/><text x="66.5915%" y="623.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (142 samples, 0.18%)</title><rect x="66.1936%" y="661" width="0.1811%" height="15" fill="rgb(238,207,9)" fg:x="51907" fg:w="142"/><text x="66.4436%" y="671.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (142 samples, 0.18%)</title><rect x="66.1936%" y="645" width="0.1811%" height="15" fill="rgb(224,129,35)" fg:x="51907" fg:w="142"/><text x="66.4436%" y="655.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (143 samples, 0.18%)</title><rect x="66.1936%" y="677" width="0.1824%" height="15" fill="rgb(243,218,34)" fg:x="51907" fg:w="143"/><text x="66.4436%" y="687.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (10 samples, 0.01%)</title><rect x="66.3759%" y="677" width="0.0128%" height="15" fill="rgb(220,166,13)" fg:x="52050" fg:w="10"/><text x="66.6259%" y="687.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (10 samples, 0.01%)</title><rect x="66.3759%" y="661" width="0.0128%" height="15" fill="rgb(227,167,49)" fg:x="52050" fg:w="10"/><text x="66.6259%" y="671.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (158 samples, 0.20%)</title><rect x="66.1936%" y="709" width="0.2015%" height="15" fill="rgb(234,142,12)" fg:x="51907" fg:w="158"/><text x="66.4436%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (158 samples, 0.20%)</title><rect x="66.1936%" y="693" width="0.2015%" height="15" fill="rgb(207,100,48)" fg:x="51907" fg:w="158"/><text x="66.4436%" y="703.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (175 samples, 0.22%)</title><rect x="66.1936%" y="741" width="0.2232%" height="15" fill="rgb(210,25,14)" fg:x="51907" fg:w="175"/><text x="66.4436%" y="751.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (175 samples, 0.22%)</title><rect x="66.1936%" y="725" width="0.2232%" height="15" fill="rgb(246,116,27)" fg:x="51907" fg:w="175"/><text x="66.4436%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.02%)</title><rect x="66.3950%" y="709" width="0.0217%" height="15" fill="rgb(214,193,42)" fg:x="52065" fg:w="17"/><text x="66.6450%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (186 samples, 0.24%)</title><rect x="66.1821%" y="805" width="0.2372%" height="15" fill="rgb(214,122,8)" fg:x="51898" fg:w="186"/><text x="66.4321%" y="815.50"></text></g><g><title>bcs::de::from_bytes_seed (186 samples, 0.24%)</title><rect x="66.1821%" y="789" width="0.2372%" height="15" fill="rgb(244,173,18)" fg:x="51898" fg:w="186"/><text x="66.4321%" y="799.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (180 samples, 0.23%)</title><rect x="66.1897%" y="773" width="0.2295%" height="15" fill="rgb(232,68,19)" fg:x="51904" fg:w="180"/><text x="66.4397%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (177 samples, 0.23%)</title><rect x="66.1936%" y="757" width="0.2257%" height="15" fill="rgb(236,224,1)" fg:x="51907" fg:w="177"/><text x="66.4436%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (632 samples, 0.81%)</title><rect x="65.6159%" y="853" width="0.8059%" height="15" fill="rgb(240,11,8)" fg:x="51454" fg:w="632"/><text x="65.8659%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (632 samples, 0.81%)</title><rect x="65.6159%" y="837" width="0.8059%" height="15" fill="rgb(244,159,20)" fg:x="51454" fg:w="632"/><text x="65.8659%" y="847.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (595 samples, 0.76%)</title><rect x="65.6631%" y="821" width="0.7588%" height="15" fill="rgb(240,223,54)" fg:x="51491" fg:w="595"/><text x="65.9131%" y="831.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::check_balance (1,162 samples, 1.48%)</title><rect x="66.4218%" y="853" width="1.4818%" height="15" fill="rgb(237,146,5)" fg:x="52086" fg:w="1162"/><text x="66.6718%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (703 samples, 0.90%)</title><rect x="67.9049%" y="853" width="0.8965%" height="15" fill="rgb(218,221,32)" fg:x="53249" fg:w="703"/><text x="68.1549%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (703 samples, 0.90%)</title><rect x="67.9049%" y="837" width="0.8965%" height="15" fill="rgb(244,96,26)" fg:x="53249" fg:w="703"/><text x="68.1549%" y="847.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;bool&gt;&gt;::cast (155 samples, 0.20%)</title><rect x="71.8760%" y="821" width="0.1977%" height="15" fill="rgb(245,184,37)" fg:x="56363" fg:w="155"/><text x="72.1260%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (69 samples, 0.09%)</title><rect x="71.9857%" y="805" width="0.0880%" height="15" fill="rgb(248,91,47)" fg:x="56449" fg:w="69"/><text x="72.2357%" y="815.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::Reference&gt;&gt;::cast (403 samples, 0.51%)</title><rect x="72.0813%" y="821" width="0.5139%" height="15" fill="rgb(243,199,8)" fg:x="56524" fg:w="403"/><text x="72.3313%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (65 samples, 0.08%)</title><rect x="72.6029%" y="821" width="0.0829%" height="15" fill="rgb(249,12,15)" fg:x="56933" fg:w="65"/><text x="72.8529%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::ContainerRef&gt;&gt;::cast (31 samples, 0.04%)</title><rect x="72.6462%" y="805" width="0.0395%" height="15" fill="rgb(245,97,12)" fg:x="56967" fg:w="31"/><text x="72.8962%" y="815.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::VectorRef&gt;&gt;::cast (328 samples, 0.42%)</title><rect x="72.6858%" y="821" width="0.4183%" height="15" fill="rgb(244,61,1)" fg:x="56998" fg:w="328"/><text x="72.9358%" y="831.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (3,448 samples, 4.40%)</title><rect x="68.8014%" y="853" width="4.3970%" height="15" fill="rgb(222,194,10)" fg:x="53952" fg:w="3448"/><text x="69.0514%" y="863.50">move_..</text></g><g><title>move_vm_types::values::values_impl::Value::value_as (3,448 samples, 4.40%)</title><rect x="68.8014%" y="837" width="4.3970%" height="15" fill="rgb(226,178,8)" fg:x="53952" fg:w="3448"/><text x="69.0514%" y="847.50">move_..</text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;u64&gt;&gt;::cast (74 samples, 0.09%)</title><rect x="73.1040%" y="821" width="0.0944%" height="15" fill="rgb(241,32,34)" fg:x="57326" fg:w="74"/><text x="73.3540%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (25 samples, 0.03%)</title><rect x="73.1665%" y="805" width="0.0319%" height="15" fill="rgb(254,26,6)" fg:x="57375" fg:w="25"/><text x="73.4165%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::popn (9 samples, 0.01%)</title><rect x="73.1984%" y="853" width="0.0115%" height="15" fill="rgb(249,71,11)" fg:x="57400" fg:w="9"/><text x="73.4484%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::split_off (9 samples, 0.01%)</title><rect x="73.1984%" y="837" width="0.0115%" height="15" fill="rgb(232,170,27)" fg:x="57400" fg:w="9"/><text x="73.4484%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13 samples, 0.02%)</title><rect x="73.2099%" y="821" width="0.0166%" height="15" fill="rgb(214,223,17)" fg:x="57409" fg:w="13"/><text x="73.4599%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.01%)</title><rect x="73.2163%" y="805" width="0.0102%" height="15" fill="rgb(250,18,15)" fg:x="57414" fg:w="8"/><text x="73.4663%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="73.2163%" y="789" width="0.0102%" height="15" fill="rgb(212,153,51)" fg:x="57414" fg:w="8"/><text x="73.4663%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (2,774 samples, 3.54%)</title><rect x="73.2099%" y="853" width="3.5375%" height="15" fill="rgb(219,194,12)" fg:x="57409" fg:w="2774"/><text x="73.4599%" y="863.50">mov..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,774 samples, 3.54%)</title><rect x="73.2099%" y="837" width="3.5375%" height="15" fill="rgb(212,58,17)" fg:x="57409" fg:w="2774"/><text x="73.4599%" y="847.50">all..</text></g><g><title>core::ptr::write (2,761 samples, 3.52%)</title><rect x="73.2265%" y="821" width="3.5209%" height="15" fill="rgb(254,5,10)" fg:x="57422" fg:w="2761"/><text x="73.4765%" y="831.50">cor..</text></g><g><title>move_vm_runtime::loader::Resolver::constant_at (13 samples, 0.02%)</title><rect x="76.7487%" y="853" width="0.0166%" height="15" fill="rgb(246,91,7)" fg:x="60184" fg:w="13"/><text x="76.9987%" y="863.50"></text></g><g><title>move_binary_format::access::ModuleAccess::constant_at (13 samples, 0.02%)</title><rect x="76.7487%" y="837" width="0.0166%" height="15" fill="rgb(218,108,49)" fg:x="60184" fg:w="13"/><text x="76.9987%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_count (9 samples, 0.01%)</title><rect x="76.7652%" y="853" width="0.0115%" height="15" fill="rgb(238,123,20)" fg:x="60197" fg:w="9"/><text x="77.0152%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Module::field_count (9 samples, 0.01%)</title><rect x="76.7652%" y="837" width="0.0115%" height="15" fill="rgb(231,69,23)" fg:x="60197" fg:w="9"/><text x="77.0152%" y="847.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.02%)</title><rect x="76.8022%" y="741" width="0.0191%" height="15" fill="rgb(230,209,3)" fg:x="60226" fg:w="15"/><text x="77.0522%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="76.8214%" y="597" width="0.0153%" height="15" fill="rgb(231,19,0)" fg:x="60241" fg:w="12"/><text x="77.0714%" y="607.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.02%)</title><rect x="76.8214%" y="581" width="0.0153%" height="15" fill="rgb(226,192,25)" fg:x="60241" fg:w="12"/><text x="77.0714%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (20 samples, 0.03%)</title><rect x="76.8214%" y="709" width="0.0255%" height="15" fill="rgb(223,175,53)" fg:x="60241" fg:w="20"/><text x="77.0714%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (20 samples, 0.03%)</title><rect x="76.8214%" y="693" width="0.0255%" height="15" fill="rgb(248,35,51)" fg:x="60241" fg:w="20"/><text x="77.0714%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.03%)</title><rect x="76.8214%" y="677" width="0.0255%" height="15" fill="rgb(230,37,26)" fg:x="60241" fg:w="20"/><text x="77.0714%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (20 samples, 0.03%)</title><rect x="76.8214%" y="661" width="0.0255%" height="15" fill="rgb(206,120,22)" fg:x="60241" fg:w="20"/><text x="77.0714%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.03%)</title><rect x="76.8214%" y="645" width="0.0255%" height="15" fill="rgb(207,165,28)" fg:x="60241" fg:w="20"/><text x="77.0714%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.03%)</title><rect x="76.8214%" y="629" width="0.0255%" height="15" fill="rgb(226,23,46)" fg:x="60241" fg:w="20"/><text x="77.0714%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (20 samples, 0.03%)</title><rect x="76.8214%" y="613" width="0.0255%" height="15" fill="rgb(208,130,44)" fg:x="60241" fg:w="20"/><text x="77.0714%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (8 samples, 0.01%)</title><rect x="76.8367%" y="597" width="0.0102%" height="15" fill="rgb(231,67,8)" fg:x="60253" fg:w="8"/><text x="77.0867%" y="607.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type::{{closure}} (8 samples, 0.01%)</title><rect x="76.8367%" y="581" width="0.0102%" height="15" fill="rgb(205,183,22)" fg:x="60253" fg:w="8"/><text x="77.0867%" y="591.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (8 samples, 0.01%)</title><rect x="76.8367%" y="565" width="0.0102%" height="15" fill="rgb(224,47,9)" fg:x="60253" fg:w="8"/><text x="77.0867%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (15 samples, 0.02%)</title><rect x="76.8469%" y="613" width="0.0191%" height="15" fill="rgb(250,183,49)" fg:x="60261" fg:w="15"/><text x="77.0969%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.02%)</title><rect x="76.8469%" y="597" width="0.0191%" height="15" fill="rgb(220,151,39)" fg:x="60261" fg:w="15"/><text x="77.0969%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="76.8469%" y="709" width="0.0332%" height="15" fill="rgb(220,118,20)" fg:x="60261" fg:w="26"/><text x="77.0969%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (26 samples, 0.03%)</title><rect x="76.8469%" y="693" width="0.0332%" height="15" fill="rgb(231,65,51)" fg:x="60261" fg:w="26"/><text x="77.0969%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.03%)</title><rect x="76.8469%" y="677" width="0.0332%" height="15" fill="rgb(253,125,37)" fg:x="60261" fg:w="26"/><text x="77.0969%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.03%)</title><rect x="76.8469%" y="661" width="0.0332%" height="15" fill="rgb(232,102,6)" fg:x="60261" fg:w="26"/><text x="77.0969%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.03%)</title><rect x="76.8469%" y="645" width="0.0332%" height="15" fill="rgb(251,105,13)" fg:x="60261" fg:w="26"/><text x="77.0969%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (26 samples, 0.03%)</title><rect x="76.8469%" y="629" width="0.0332%" height="15" fill="rgb(222,179,29)" fg:x="60261" fg:w="26"/><text x="77.0969%" y="639.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (11 samples, 0.01%)</title><rect x="76.8660%" y="613" width="0.0140%" height="15" fill="rgb(229,180,53)" fg:x="60276" fg:w="11"/><text x="77.1160%" y="623.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (10 samples, 0.01%)</title><rect x="76.8673%" y="597" width="0.0128%" height="15" fill="rgb(238,104,13)" fg:x="60277" fg:w="10"/><text x="77.1173%" y="607.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (10 samples, 0.01%)</title><rect x="76.8673%" y="581" width="0.0128%" height="15" fill="rgb(210,130,5)" fg:x="60277" fg:w="10"/><text x="77.1173%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (67 samples, 0.09%)</title><rect x="76.8022%" y="837" width="0.0854%" height="15" fill="rgb(233,87,49)" fg:x="60226" fg:w="67"/><text x="77.0522%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (67 samples, 0.09%)</title><rect x="76.8022%" y="821" width="0.0854%" height="15" fill="rgb(243,34,9)" fg:x="60226" fg:w="67"/><text x="77.0522%" y="831.50"></text></g><g><title>core::iter::adapters::try_process (67 samples, 0.09%)</title><rect x="76.8022%" y="805" width="0.0854%" height="15" fill="rgb(235,225,10)" fg:x="60226" fg:w="67"/><text x="77.0522%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (67 samples, 0.09%)</title><rect x="76.8022%" y="789" width="0.0854%" height="15" fill="rgb(212,0,30)" fg:x="60226" fg:w="67"/><text x="77.0522%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (67 samples, 0.09%)</title><rect x="76.8022%" y="773" width="0.0854%" height="15" fill="rgb(211,177,0)" fg:x="60226" fg:w="67"/><text x="77.0522%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (67 samples, 0.09%)</title><rect x="76.8022%" y="757" width="0.0854%" height="15" fill="rgb(225,220,11)" fg:x="60226" fg:w="67"/><text x="77.0522%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (52 samples, 0.07%)</title><rect x="76.8214%" y="741" width="0.0663%" height="15" fill="rgb(215,10,13)" fg:x="60241" fg:w="52"/><text x="77.0714%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (52 samples, 0.07%)</title><rect x="76.8214%" y="725" width="0.0663%" height="15" fill="rgb(240,177,14)" fg:x="60241" fg:w="52"/><text x="77.0714%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.02%)</title><rect x="76.8877%" y="821" width="0.0204%" height="15" fill="rgb(243,7,39)" fg:x="60293" fg:w="16"/><text x="77.1377%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="76.8877%" y="805" width="0.0204%" height="15" fill="rgb(212,99,0)" fg:x="60293" fg:w="16"/><text x="77.1377%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="76.8877%" y="789" width="0.0204%" height="15" fill="rgb(225,162,48)" fg:x="60293" fg:w="16"/><text x="77.1377%" y="799.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="76.8877%" y="773" width="0.0204%" height="15" fill="rgb(246,16,25)" fg:x="60293" fg:w="16"/><text x="77.1377%" y="783.50"></text></g><g><title>mallocx (12 samples, 0.02%)</title><rect x="76.8928%" y="757" width="0.0153%" height="15" fill="rgb(220,150,2)" fg:x="60297" fg:w="12"/><text x="77.1428%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (35 samples, 0.04%)</title><rect x="76.9081%" y="821" width="0.0446%" height="15" fill="rgb(237,113,11)" fg:x="60309" fg:w="35"/><text x="77.1581%" y="831.50"></text></g><g><title>core::ptr::read (35 samples, 0.04%)</title><rect x="76.9081%" y="805" width="0.0446%" height="15" fill="rgb(236,70,20)" fg:x="60309" fg:w="35"/><text x="77.1581%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (150 samples, 0.19%)</title><rect x="76.8022%" y="853" width="0.1913%" height="15" fill="rgb(234,94,7)" fg:x="60226" fg:w="150"/><text x="77.0522%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (83 samples, 0.11%)</title><rect x="76.8877%" y="837" width="0.1058%" height="15" fill="rgb(250,221,0)" fg:x="60293" fg:w="83"/><text x="77.1377%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (32 samples, 0.04%)</title><rect x="76.9527%" y="821" width="0.0408%" height="15" fill="rgb(245,149,46)" fg:x="60344" fg:w="32"/><text x="77.2027%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (32 samples, 0.04%)</title><rect x="76.9527%" y="805" width="0.0408%" height="15" fill="rgb(215,37,27)" fg:x="60344" fg:w="32"/><text x="77.2027%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.04%)</title><rect x="76.9527%" y="789" width="0.0408%" height="15" fill="rgb(232,65,3)" fg:x="60344" fg:w="32"/><text x="77.2027%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (32 samples, 0.04%)</title><rect x="76.9527%" y="773" width="0.0408%" height="15" fill="rgb(214,2,16)" fg:x="60344" fg:w="32"/><text x="77.2027%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.04%)</title><rect x="76.9527%" y="757" width="0.0408%" height="15" fill="rgb(227,131,50)" fg:x="60344" fg:w="32"/><text x="77.2027%" y="767.50"></text></g><g><title>sdallocx (22 samples, 0.03%)</title><rect x="76.9655%" y="741" width="0.0281%" height="15" fill="rgb(247,131,45)" fg:x="60354" fg:w="22"/><text x="77.2155%" y="751.50"></text></g><g><title>isfree (22 samples, 0.03%)</title><rect x="76.9655%" y="725" width="0.0281%" height="15" fill="rgb(215,97,47)" fg:x="60354" fg:w="22"/><text x="77.2155%" y="735.50"></text></g><g><title>isdalloct (22 samples, 0.03%)</title><rect x="76.9655%" y="709" width="0.0281%" height="15" fill="rgb(233,143,12)" fg:x="60354" fg:w="22"/><text x="77.2155%" y="719.50"></text></g><g><title>arena_sdalloc (22 samples, 0.03%)</title><rect x="76.9655%" y="693" width="0.0281%" height="15" fill="rgb(222,57,17)" fg:x="60354" fg:w="22"/><text x="77.2155%" y="703.50"></text></g><g><title>tcache_dalloc_small (21 samples, 0.03%)</title><rect x="76.9667%" y="677" width="0.0268%" height="15" fill="rgb(214,119,38)" fg:x="60355" fg:w="21"/><text x="77.2167%" y="687.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (42 samples, 0.05%)</title><rect x="76.9935%" y="837" width="0.0536%" height="15" fill="rgb(217,28,47)" fg:x="60376" fg:w="42"/><text x="77.2435%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_single_type (133 samples, 0.17%)</title><rect x="76.9935%" y="853" width="0.1696%" height="15" fill="rgb(231,14,52)" fg:x="60376" fg:w="133"/><text x="77.2435%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Resolver::single_type_at (91 samples, 0.12%)</title><rect x="77.0471%" y="837" width="0.1160%" height="15" fill="rgb(220,158,18)" fg:x="60418" fg:w="91"/><text x="77.2971%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Module::single_type_at (91 samples, 0.12%)</title><rect x="77.0471%" y="821" width="0.1160%" height="15" fill="rgb(222,143,46)" fg:x="60418" fg:w="91"/><text x="77.2971%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (91 samples, 0.12%)</title><rect x="77.0471%" y="805" width="0.1160%" height="15" fill="rgb(227,165,5)" fg:x="60418" fg:w="91"/><text x="77.2971%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (91 samples, 0.12%)</title><rect x="77.0471%" y="789" width="0.1160%" height="15" fill="rgb(216,222,49)" fg:x="60418" fg:w="91"/><text x="77.2971%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (91 samples, 0.12%)</title><rect x="77.0471%" y="773" width="0.1160%" height="15" fill="rgb(238,73,39)" fg:x="60418" fg:w="91"/><text x="77.2971%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (91 samples, 0.12%)</title><rect x="77.0471%" y="757" width="0.1160%" height="15" fill="rgb(252,115,9)" fg:x="60418" fg:w="91"/><text x="77.2971%" y="767.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureIndex as core::cmp::Ord&gt;::cmp (91 samples, 0.12%)</title><rect x="77.0471%" y="741" width="0.1160%" height="15" fill="rgb(238,202,4)" fg:x="60418" fg:w="91"/><text x="77.2971%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u16&gt;::cmp (91 samples, 0.12%)</title><rect x="77.0471%" y="725" width="0.1160%" height="15" fill="rgb(252,153,44)" fg:x="60418" fg:w="91"/><text x="77.2971%" y="735.50"></text></g><g><title>move_vm_runtime::tracing::trace (1,494 samples, 1.91%)</title><rect x="77.1631%" y="853" width="1.9052%" height="15" fill="rgb(235,128,27)" fg:x="60509" fg:w="1494"/><text x="77.4131%" y="863.50">m..</text></g><g><title>move_vm_types::values::values_impl::Locals::borrow_loc (247 samples, 0.31%)</title><rect x="79.0785%" y="853" width="0.3150%" height="15" fill="rgb(221,121,47)" fg:x="62011" fg:w="247"/><text x="79.3285%" y="863.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (1,969 samples, 2.51%)</title><rect x="79.4126%" y="837" width="2.5109%" height="15" fill="rgb(247,211,47)" fg:x="62273" fg:w="1969"/><text x="79.6626%" y="847.50">co..</text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (1,969 samples, 2.51%)</title><rect x="79.4126%" y="821" width="2.5109%" height="15" fill="rgb(252,47,49)" fg:x="62273" fg:w="1969"/><text x="79.6626%" y="831.50">co..</text></g><g><title>core::cell::BorrowRef::new (1,969 samples, 2.51%)</title><rect x="79.4126%" y="805" width="2.5109%" height="15" fill="rgb(219,119,53)" fg:x="62273" fg:w="1969"/><text x="79.6626%" y="815.50">co..</text></g><g><title>core::cell::Cell&lt;T&gt;::get (1,969 samples, 2.51%)</title><rect x="79.4126%" y="789" width="2.5109%" height="15" fill="rgb(243,165,53)" fg:x="62273" fg:w="1969"/><text x="79.6626%" y="799.50">co..</text></g><g><title>move_vm_types::values::values_impl::Locals::copy_loc (2,671 samples, 3.41%)</title><rect x="79.3935%" y="853" width="3.4061%" height="15" fill="rgb(230,12,35)" fg:x="62258" fg:w="2671"/><text x="79.6435%" y="863.50">mov..</text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (687 samples, 0.88%)</title><rect x="81.9236%" y="837" width="0.8761%" height="15" fill="rgb(239,57,49)" fg:x="64242" fg:w="687"/><text x="82.1736%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::move_loc (1,266 samples, 1.61%)</title><rect x="82.7996%" y="853" width="1.6144%" height="15" fill="rgb(231,154,7)" fg:x="64929" fg:w="1266"/><text x="83.0496%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (977 samples, 1.25%)</title><rect x="83.1682%" y="837" width="1.2459%" height="15" fill="rgb(248,81,34)" fg:x="65218" fg:w="977"/><text x="83.4182%" y="847.50"></text></g><g><title>core::mem::replace (977 samples, 1.25%)</title><rect x="83.1682%" y="821" width="1.2459%" height="15" fill="rgb(247,9,5)" fg:x="65218" fg:w="977"/><text x="83.4182%" y="831.50"></text></g><g><title>core::ptr::write (977 samples, 1.25%)</title><rect x="83.1682%" y="805" width="1.2459%" height="15" fill="rgb(228,172,27)" fg:x="65218" fg:w="977"/><text x="83.4182%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (146 samples, 0.19%)</title><rect x="84.4141%" y="837" width="0.1862%" height="15" fill="rgb(230,57,44)" fg:x="66195" fg:w="146"/><text x="84.6641%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (741 samples, 0.94%)</title><rect x="84.4141%" y="853" width="0.9449%" height="15" fill="rgb(249,35,22)" fg:x="66195" fg:w="741"/><text x="84.6641%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (595 samples, 0.76%)</title><rect x="84.6003%" y="837" width="0.7588%" height="15" fill="rgb(250,137,27)" fg:x="66341" fg:w="595"/><text x="84.8503%" y="847.50"></text></g><g><title>core::mem::replace (595 samples, 0.76%)</title><rect x="84.6003%" y="821" width="0.7588%" height="15" fill="rgb(251,57,31)" fg:x="66341" fg:w="595"/><text x="84.8503%" y="831.50"></text></g><g><title>core::ptr::write (595 samples, 0.76%)</title><rect x="84.6003%" y="805" width="0.7588%" height="15" fill="rgb(238,60,0)" fg:x="66341" fg:w="595"/><text x="84.8503%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::IndexedRef&gt; (379 samples, 0.48%)</title><rect x="85.3680%" y="805" width="0.4833%" height="15" fill="rgb(242,185,39)" fg:x="66943" fg:w="379"/><text x="85.6180%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ContainerRef&gt; (379 samples, 0.48%)</title><rect x="85.3680%" y="789" width="0.4833%" height="15" fill="rgb(240,63,43)" fg:x="66943" fg:w="379"/><text x="85.6180%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (44 samples, 0.06%)</title><rect x="85.7952%" y="773" width="0.0561%" height="15" fill="rgb(236,155,6)" fg:x="67278" fg:w="44"/><text x="86.0452%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (44 samples, 0.06%)</title><rect x="85.7952%" y="757" width="0.0561%" height="15" fill="rgb(215,11,29)" fg:x="67278" fg:w="44"/><text x="86.0452%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (411 samples, 0.52%)</title><rect x="85.3590%" y="853" width="0.5241%" height="15" fill="rgb(228,180,48)" fg:x="66936" fg:w="411"/><text x="85.6090%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (411 samples, 0.52%)</title><rect x="85.3590%" y="837" width="0.5241%" height="15" fill="rgb(241,102,12)" fg:x="66936" fg:w="411"/><text x="85.6090%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (404 samples, 0.52%)</title><rect x="85.3680%" y="821" width="0.5152%" height="15" fill="rgb(246,213,4)" fg:x="66943" fg:w="404"/><text x="85.6180%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (25 samples, 0.03%)</title><rect x="85.8513%" y="805" width="0.0319%" height="15" fill="rgb(218,134,35)" fg:x="67322" fg:w="25"/><text x="86.1013%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::write_ref (22 samples, 0.03%)</title><rect x="85.8832%" y="853" width="0.0281%" height="15" fill="rgb(251,117,35)" fg:x="67347" fg:w="22"/><text x="86.1332%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::write_ref (22 samples, 0.03%)</title><rect x="85.8832%" y="837" width="0.0281%" height="15" fill="rgb(206,156,45)" fg:x="67347" fg:w="22"/><text x="86.1332%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (39 samples, 0.05%)</title><rect x="85.9252%" y="837" width="0.0497%" height="15" fill="rgb(218,52,27)" fg:x="67380" fg:w="39"/><text x="86.1752%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::Container::len (14 samples, 0.02%)</title><rect x="86.0464%" y="821" width="0.0179%" height="15" fill="rgb(238,83,36)" fg:x="67475" fg:w="14"/><text x="86.2964%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (119 samples, 0.15%)</title><rect x="85.9252%" y="853" width="0.1518%" height="15" fill="rgb(218,53,43)" fg:x="67380" fg:w="119"/><text x="86.1752%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (80 samples, 0.10%)</title><rect x="85.9750%" y="837" width="0.1020%" height="15" fill="rgb(239,54,39)" fg:x="67419" fg:w="80"/><text x="86.2250%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::copy_value (10 samples, 0.01%)</title><rect x="86.0642%" y="821" width="0.0128%" height="15" fill="rgb(212,198,13)" fg:x="67489" fg:w="10"/><text x="86.3142%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::Value::constant_sig_token_to_layout (14 samples, 0.02%)</title><rect x="86.0795%" y="837" width="0.0179%" height="15" fill="rgb(234,54,46)" fg:x="67501" fg:w="14"/><text x="86.3295%" y="847.50"></text></g><g><title>bcs::de::Deserializer::parse_bool (9 samples, 0.01%)</title><rect x="86.2160%" y="565" width="0.0115%" height="15" fill="rgb(217,120,7)" fg:x="67608" fg:w="9"/><text x="86.4660%" y="575.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (89 samples, 0.11%)</title><rect x="86.1382%" y="741" width="0.1135%" height="15" fill="rgb(246,39,15)" fg:x="67547" fg:w="89"/><text x="86.3882%" y="751.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (89 samples, 0.11%)</title><rect x="86.1382%" y="725" width="0.1135%" height="15" fill="rgb(242,143,31)" fg:x="67547" fg:w="89"/><text x="86.3882%" y="735.50"></text></g><g><title> 32]&gt;::deserialize (89 samples, 0.11%)</title><rect x="86.1382%" y="709" width="0.1135%" height="15" fill="rgb(252,60,24)" fg:x="67547" fg:w="89"/><text x="86.3882%" y="719.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (89 samples, 0.11%)</title><rect x="86.1382%" y="693" width="0.1135%" height="15" fill="rgb(249,220,7)" fg:x="67547" fg:w="89"/><text x="86.3882%" y="703.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (89 samples, 0.11%)</title><rect x="86.1382%" y="677" width="0.1135%" height="15" fill="rgb(236,67,13)" fg:x="67547" fg:w="89"/><text x="86.3882%" y="687.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (89 samples, 0.11%)</title><rect x="86.1382%" y="661" width="0.1135%" height="15" fill="rgb(210,62,39)" fg:x="67547" fg:w="89"/><text x="86.3882%" y="671.50"></text></g><g><title>serde::de::SeqAccess::next_element (55 samples, 0.07%)</title><rect x="86.1816%" y="645" width="0.0701%" height="15" fill="rgb(219,122,53)" fg:x="67581" fg:w="55"/><text x="86.4316%" y="655.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (55 samples, 0.07%)</title><rect x="86.1816%" y="629" width="0.0701%" height="15" fill="rgb(218,87,25)" fg:x="67581" fg:w="55"/><text x="86.4316%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (28 samples, 0.04%)</title><rect x="86.2160%" y="613" width="0.0357%" height="15" fill="rgb(234,179,48)" fg:x="67608" fg:w="28"/><text x="86.4660%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (28 samples, 0.04%)</title><rect x="86.2160%" y="597" width="0.0357%" height="15" fill="rgb(248,90,0)" fg:x="67608" fg:w="28"/><text x="86.4660%" y="607.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (28 samples, 0.04%)</title><rect x="86.2160%" y="581" width="0.0357%" height="15" fill="rgb(207,228,37)" fg:x="67608" fg:w="28"/><text x="86.4660%" y="591.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (19 samples, 0.02%)</title><rect x="86.2275%" y="565" width="0.0242%" height="15" fill="rgb(235,214,15)" fg:x="67617" fg:w="19"/><text x="86.4775%" y="575.50"></text></g><g><title>bcs::de::Deserializer::next (14 samples, 0.02%)</title><rect x="86.2339%" y="549" width="0.0179%" height="15" fill="rgb(210,144,39)" fg:x="67622" fg:w="14"/><text x="86.4839%" y="559.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (98 samples, 0.12%)</title><rect x="86.1280%" y="789" width="0.1250%" height="15" fill="rgb(222,67,41)" fg:x="67539" fg:w="98"/><text x="86.3780%" y="799.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (98 samples, 0.12%)</title><rect x="86.1280%" y="773" width="0.1250%" height="15" fill="rgb(205,35,37)" fg:x="67539" fg:w="98"/><text x="86.3780%" y="783.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (98 samples, 0.12%)</title><rect x="86.1280%" y="757" width="0.1250%" height="15" fill="rgb(216,125,40)" fg:x="67539" fg:w="98"/><text x="86.3780%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (127 samples, 0.16%)</title><rect x="86.1000%" y="805" width="0.1620%" height="15" fill="rgb(228,227,20)" fg:x="67517" fg:w="127"/><text x="86.3500%" y="815.50"></text></g><g><title>bcs::de::from_bytes_seed (169 samples, 0.22%)</title><rect x="86.1000%" y="821" width="0.2155%" height="15" fill="rgb(242,173,45)" fg:x="67517" fg:w="169"/><text x="86.3500%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (42 samples, 0.05%)</title><rect x="86.2619%" y="805" width="0.0536%" height="15" fill="rgb(215,79,24)" fg:x="67644" fg:w="42"/><text x="86.5119%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (206 samples, 0.26%)</title><rect x="86.0770%" y="853" width="0.2627%" height="15" fill="rgb(238,164,38)" fg:x="67499" fg:w="206"/><text x="86.3270%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (190 samples, 0.24%)</title><rect x="86.0974%" y="837" width="0.2423%" height="15" fill="rgb(245,196,38)" fg:x="67515" fg:w="190"/><text x="86.3474%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (19 samples, 0.02%)</title><rect x="86.3155%" y="821" width="0.0242%" height="15" fill="rgb(231,217,29)" fg:x="67686" fg:w="19"/><text x="86.5655%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (16 samples, 0.02%)</title><rect x="86.3448%" y="853" width="0.0204%" height="15" fill="rgb(245,6,4)" fg:x="67709" fg:w="16"/><text x="86.5948%" y="863.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (16 samples, 0.02%)</title><rect x="86.3448%" y="837" width="0.0204%" height="15" fill="rgb(214,76,49)" fg:x="67709" fg:w="16"/><text x="86.5948%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (16 samples, 0.02%)</title><rect x="86.3448%" y="821" width="0.0204%" height="15" fill="rgb(205,96,12)" fg:x="67709" fg:w="16"/><text x="86.5948%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.02%)</title><rect x="86.3448%" y="805" width="0.0204%" height="15" fill="rgb(243,131,4)" fg:x="67709" fg:w="16"/><text x="86.5948%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="86.3448%" y="789" width="0.0204%" height="15" fill="rgb(214,114,4)" fg:x="67709" fg:w="16"/><text x="86.5948%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="86.3448%" y="773" width="0.0204%" height="15" fill="rgb(234,215,15)" fg:x="67709" fg:w="16"/><text x="86.5948%" y="783.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="86.3448%" y="757" width="0.0204%" height="15" fill="rgb(250,216,45)" fg:x="67709" fg:w="16"/><text x="86.5948%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (514 samples, 0.66%)</title><rect x="86.3652%" y="837" width="0.6555%" height="15" fill="rgb(236,128,4)" fg:x="67725" fg:w="514"/><text x="86.6152%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::Container::len (46 samples, 0.06%)</title><rect x="87.0207%" y="837" width="0.0587%" height="15" fill="rgb(234,50,33)" fg:x="68239" fg:w="46"/><text x="87.2707%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::Container::len (17 samples, 0.02%)</title><rect x="87.2502%" y="821" width="0.0217%" height="15" fill="rgb(253,131,37)" fg:x="68419" fg:w="17"/><text x="87.5002%" y="831.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (17 samples, 0.02%)</title><rect x="87.2502%" y="805" width="0.0217%" height="15" fill="rgb(218,55,27)" fg:x="68419" fg:w="17"/><text x="87.5002%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (208 samples, 0.27%)</title><rect x="87.0793%" y="837" width="0.2652%" height="15" fill="rgb(241,220,28)" fg:x="68285" fg:w="208"/><text x="87.3293%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::copy_value (57 samples, 0.07%)</title><rect x="87.2719%" y="821" width="0.0727%" height="15" fill="rgb(241,90,48)" fg:x="68436" fg:w="57"/><text x="87.5219%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_by_ref (57 samples, 0.07%)</title><rect x="87.2719%" y="805" width="0.0727%" height="15" fill="rgb(216,43,37)" fg:x="68436" fg:w="57"/><text x="87.5219%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::VectorRef::borrow_elem (823 samples, 1.05%)</title><rect x="86.3652%" y="853" width="1.0495%" height="15" fill="rgb(207,173,9)" fg:x="67725" fg:w="823"/><text x="86.6152%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::check_elem_layout (55 samples, 0.07%)</title><rect x="87.3446%" y="837" width="0.0701%" height="15" fill="rgb(240,126,30)" fg:x="68493" fg:w="55"/><text x="87.5946%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::VectorRef::push_back (13 samples, 0.02%)</title><rect x="87.4224%" y="853" width="0.0166%" height="15" fill="rgb(228,178,53)" fg:x="68554" fg:w="13"/><text x="87.6724%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (54,699 samples, 69.75%)</title><rect x="17.6977%" y="885" width="69.7540%" height="15" fill="rgb(217,33,4)" fg:x="13878" fg:w="54699"/><text x="17.9477%" y="895.50">move_vm_runtime::interpreter::Frame::execute_code</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (54,699 samples, 69.75%)</title><rect x="17.6977%" y="869" width="69.7540%" height="15" fill="rgb(206,124,34)" fg:x="13878" fg:w="54699"/><text x="17.9477%" y="879.50">move_vm_runtime::interpreter::Frame::execute_code_impl</text></g><g><title>sdallocx (10 samples, 0.01%)</title><rect x="87.4389%" y="853" width="0.0128%" height="15" fill="rgb(208,122,53)" fg:x="68567" fg:w="10"/><text x="87.6889%" y="863.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (165 samples, 0.21%)</title><rect x="87.8151%" y="741" width="0.2104%" height="15" fill="rgb(215,202,26)" fg:x="68862" fg:w="165"/><text x="88.0651%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (165 samples, 0.21%)</title><rect x="87.8151%" y="725" width="0.2104%" height="15" fill="rgb(232,198,31)" fg:x="68862" fg:w="165"/><text x="88.0651%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (165 samples, 0.21%)</title><rect x="87.8151%" y="709" width="0.2104%" height="15" fill="rgb(222,23,35)" fg:x="68862" fg:w="165"/><text x="88.0651%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (165 samples, 0.21%)</title><rect x="87.8151%" y="693" width="0.2104%" height="15" fill="rgb(242,27,53)" fg:x="68862" fg:w="165"/><text x="88.0651%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (165 samples, 0.21%)</title><rect x="87.8151%" y="677" width="0.2104%" height="15" fill="rgb(210,216,42)" fg:x="68862" fg:w="165"/><text x="88.0651%" y="687.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (686 samples, 0.87%)</title><rect x="87.4517%" y="885" width="0.8748%" height="15" fill="rgb(234,39,38)" fg:x="68577" fg:w="686"/><text x="87.7017%" y="895.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (671 samples, 0.86%)</title><rect x="87.4708%" y="869" width="0.8557%" height="15" fill="rgb(235,126,54)" fg:x="68592" fg:w="671"/><text x="87.7208%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (671 samples, 0.86%)</title><rect x="87.4708%" y="853" width="0.8557%" height="15" fill="rgb(235,150,33)" fg:x="68592" fg:w="671"/><text x="87.7208%" y="863.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (403 samples, 0.51%)</title><rect x="87.8126%" y="837" width="0.5139%" height="15" fill="rgb(249,49,53)" fg:x="68860" fg:w="403"/><text x="88.0626%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (403 samples, 0.51%)</title><rect x="87.8126%" y="821" width="0.5139%" height="15" fill="rgb(238,60,50)" fg:x="68860" fg:w="403"/><text x="88.0626%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (403 samples, 0.51%)</title><rect x="87.8126%" y="805" width="0.5139%" height="15" fill="rgb(210,5,2)" fg:x="68860" fg:w="403"/><text x="88.0626%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (403 samples, 0.51%)</title><rect x="87.8126%" y="789" width="0.5139%" height="15" fill="rgb(214,207,24)" fg:x="68860" fg:w="403"/><text x="88.0626%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (403 samples, 0.51%)</title><rect x="87.8126%" y="773" width="0.5139%" height="15" fill="rgb(228,173,2)" fg:x="68860" fg:w="403"/><text x="88.0626%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (401 samples, 0.51%)</title><rect x="87.8151%" y="757" width="0.5114%" height="15" fill="rgb(244,26,8)" fg:x="68862" fg:w="401"/><text x="88.0651%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (236 samples, 0.30%)</title><rect x="88.0256%" y="741" width="0.3010%" height="15" fill="rgb(249,153,35)" fg:x="69027" fg:w="236"/><text x="88.2756%" y="751.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (236 samples, 0.30%)</title><rect x="88.0256%" y="725" width="0.3010%" height="15" fill="rgb(221,215,40)" fg:x="69027" fg:w="236"/><text x="88.2756%" y="735.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (234 samples, 0.30%)</title><rect x="88.0281%" y="709" width="0.2984%" height="15" fill="rgb(238,106,35)" fg:x="69029" fg:w="234"/><text x="88.2781%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (234 samples, 0.30%)</title><rect x="88.0281%" y="693" width="0.2984%" height="15" fill="rgb(207,195,21)" fg:x="69029" fg:w="234"/><text x="88.2781%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (234 samples, 0.30%)</title><rect x="88.0281%" y="677" width="0.2984%" height="15" fill="rgb(205,43,29)" fg:x="69029" fg:w="234"/><text x="88.2781%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (234 samples, 0.30%)</title><rect x="88.0281%" y="661" width="0.2984%" height="15" fill="rgb(236,35,21)" fg:x="69029" fg:w="234"/><text x="88.2781%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (234 samples, 0.30%)</title><rect x="88.0281%" y="645" width="0.2984%" height="15" fill="rgb(244,74,8)" fg:x="69029" fg:w="234"/><text x="88.2781%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (234 samples, 0.30%)</title><rect x="88.0281%" y="629" width="0.2984%" height="15" fill="rgb(241,229,7)" fg:x="69029" fg:w="234"/><text x="88.2781%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (234 samples, 0.30%)</title><rect x="88.0281%" y="613" width="0.2984%" height="15" fill="rgb(212,223,25)" fg:x="69029" fg:w="234"/><text x="88.2781%" y="623.50"></text></g><g><title>core::hash::sip::u8to64_le (234 samples, 0.30%)</title><rect x="88.0281%" y="597" width="0.2984%" height="15" fill="rgb(234,58,53)" fg:x="69029" fg:w="234"/><text x="88.2781%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (234 samples, 0.30%)</title><rect x="88.0281%" y="581" width="0.2984%" height="15" fill="rgb(244,36,1)" fg:x="69029" fg:w="234"/><text x="88.2781%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (13 samples, 0.02%)</title><rect x="88.3393%" y="789" width="0.0166%" height="15" fill="rgb(222,40,54)" fg:x="69273" fg:w="13"/><text x="88.5893%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.03%)</title><rect x="88.3329%" y="853" width="0.0293%" height="15" fill="rgb(210,207,39)" fg:x="69268" fg:w="23"/><text x="88.5829%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.03%)</title><rect x="88.3329%" y="837" width="0.0293%" height="15" fill="rgb(234,52,14)" fg:x="69268" fg:w="23"/><text x="88.5829%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.03%)</title><rect x="88.3329%" y="821" width="0.0293%" height="15" fill="rgb(239,108,46)" fg:x="69268" fg:w="23"/><text x="88.5829%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.03%)</title><rect x="88.3329%" y="805" width="0.0293%" height="15" fill="rgb(252,223,5)" fg:x="69268" fg:w="23"/><text x="88.5829%" y="815.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (11 samples, 0.01%)</title><rect x="88.5050%" y="789" width="0.0140%" height="15" fill="rgb(227,181,11)" fg:x="69403" fg:w="11"/><text x="88.7550%" y="799.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (11 samples, 0.01%)</title><rect x="88.5050%" y="773" width="0.0140%" height="15" fill="rgb(248,126,40)" fg:x="69403" fg:w="11"/><text x="88.7550%" y="783.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (11 samples, 0.01%)</title><rect x="88.5050%" y="757" width="0.0140%" height="15" fill="rgb(243,1,18)" fg:x="69403" fg:w="11"/><text x="88.7550%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (11 samples, 0.01%)</title><rect x="88.5050%" y="741" width="0.0140%" height="15" fill="rgb(214,145,23)" fg:x="69403" fg:w="11"/><text x="88.7550%" y="751.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (11 samples, 0.01%)</title><rect x="88.5050%" y="725" width="0.0140%" height="15" fill="rgb(241,218,11)" fg:x="69403" fg:w="11"/><text x="88.7550%" y="735.50"></text></g><g><title>&lt;aptos_gas::misc::AbstractValueSizeVisitor as move_vm_types::views::ValueVisitor&gt;::visit_struct (12 samples, 0.02%)</title><rect x="88.5191%" y="709" width="0.0153%" height="15" fill="rgb(214,219,24)" fg:x="69414" fg:w="12"/><text x="88.7691%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (16 samples, 0.02%)</title><rect x="88.5191%" y="725" width="0.0204%" height="15" fill="rgb(235,32,7)" fg:x="69414" fg:w="16"/><text x="88.7691%" y="735.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function (140 samples, 0.18%)</title><rect x="88.3622%" y="853" width="0.1785%" height="15" fill="rgb(227,121,28)" fg:x="69291" fg:w="140"/><text x="88.6122%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.04%)</title><rect x="88.5050%" y="837" width="0.0357%" height="15" fill="rgb(216,129,49)" fg:x="69403" fg:w="28"/><text x="88.7550%" y="847.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function::{{closure}} (28 samples, 0.04%)</title><rect x="88.5050%" y="821" width="0.0357%" height="15" fill="rgb(207,194,50)" fg:x="69403" fg:w="28"/><text x="88.7550%" y="831.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (28 samples, 0.04%)</title><rect x="88.5050%" y="805" width="0.0357%" height="15" fill="rgb(207,4,18)" fg:x="69403" fg:w="28"/><text x="88.7550%" y="815.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (17 samples, 0.02%)</title><rect x="88.5191%" y="789" width="0.0217%" height="15" fill="rgb(213,50,30)" fg:x="69414" fg:w="17"/><text x="88.7691%" y="799.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (17 samples, 0.02%)</title><rect x="88.5191%" y="773" width="0.0217%" height="15" fill="rgb(208,77,22)" fg:x="69414" fg:w="17"/><text x="88.7691%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (17 samples, 0.02%)</title><rect x="88.5191%" y="757" width="0.0217%" height="15" fill="rgb(244,204,34)" fg:x="69414" fg:w="17"/><text x="88.7691%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (17 samples, 0.02%)</title><rect x="88.5191%" y="741" width="0.0217%" height="15" fill="rgb(230,20,17)" fg:x="69414" fg:w="17"/><text x="88.7691%" y="751.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function_before_execution (12 samples, 0.02%)</title><rect x="88.5408%" y="853" width="0.0153%" height="15" fill="rgb(237,83,15)" fg:x="69431" fg:w="12"/><text x="88.7908%" y="863.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.02%)</title><rect x="88.5408%" y="837" width="0.0153%" height="15" fill="rgb(221,109,25)" fg:x="69431" fg:w="12"/><text x="88.7908%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.02%)</title><rect x="88.5408%" y="821" width="0.0153%" height="15" fill="rgb(205,194,52)" fg:x="69431" fg:w="12"/><text x="88.7908%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.02%)</title><rect x="88.5408%" y="805" width="0.0153%" height="15" fill="rgb(244,173,54)" fg:x="69431" fg:w="12"/><text x="88.7908%" y="815.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function_before_execution::{{closure}} (12 samples, 0.02%)</title><rect x="88.5408%" y="789" width="0.0153%" height="15" fill="rgb(227,181,18)" fg:x="69431" fg:w="12"/><text x="88.7908%" y="799.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (12 samples, 0.02%)</title><rect x="88.5408%" y="773" width="0.0153%" height="15" fill="rgb(238,36,30)" fg:x="69431" fg:w="12"/><text x="88.7908%" y="783.50"></text></g><g><title>__rust_dealloc (10 samples, 0.01%)</title><rect x="88.5586%" y="853" width="0.0128%" height="15" fill="rgb(254,85,0)" fg:x="69445" fg:w="10"/><text x="88.8086%" y="863.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (10 samples, 0.01%)</title><rect x="88.5586%" y="837" width="0.0128%" height="15" fill="rgb(247,63,33)" fg:x="69445" fg:w="10"/><text x="88.8086%" y="847.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_front (14 samples, 0.02%)</title><rect x="88.5739%" y="853" width="0.0179%" height="15" fill="rgb(220,7,54)" fg:x="69457" fg:w="14"/><text x="88.8239%" y="863.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (14 samples, 0.02%)</title><rect x="88.5739%" y="837" width="0.0179%" height="15" fill="rgb(238,227,21)" fg:x="69457" fg:w="14"/><text x="88.8239%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13 samples, 0.02%)</title><rect x="88.5752%" y="821" width="0.0166%" height="15" fill="rgb(237,29,31)" fg:x="69458" fg:w="13"/><text x="88.8252%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.02%)</title><rect x="88.5752%" y="805" width="0.0166%" height="15" fill="rgb(211,21,50)" fg:x="69458" fg:w="13"/><text x="88.8252%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.02%)</title><rect x="88.5752%" y="789" width="0.0166%" height="15" fill="rgb(239,119,2)" fg:x="69458" fg:w="13"/><text x="88.8252%" y="799.50"></text></g><g><title>mallocx (9 samples, 0.01%)</title><rect x="88.5803%" y="773" width="0.0115%" height="15" fill="rgb(250,2,39)" fg:x="69462" fg:w="9"/><text x="88.8303%" y="783.50"></text></g><g><title>imalloc (9 samples, 0.01%)</title><rect x="88.5803%" y="757" width="0.0115%" height="15" fill="rgb(244,46,53)" fg:x="69462" fg:w="9"/><text x="88.8303%" y="767.50"></text></g><g><title>imalloc_body (9 samples, 0.01%)</title><rect x="88.5803%" y="741" width="0.0115%" height="15" fill="rgb(209,21,19)" fg:x="69462" fg:w="9"/><text x="88.8303%" y="751.50"></text></g><g><title>imalloc_no_sample (9 samples, 0.01%)</title><rect x="88.5803%" y="725" width="0.0115%" height="15" fill="rgb(236,145,4)" fg:x="69462" fg:w="9"/><text x="88.8303%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (8 samples, 0.01%)</title><rect x="88.5981%" y="821" width="0.0102%" height="15" fill="rgb(220,133,36)" fg:x="69476" fg:w="8"/><text x="88.8481%" y="831.50"></text></g><g><title>&lt;aptos_gas::misc::AbstractValueSizeVisitor as move_vm_types::views::ValueVisitor&gt;::visit_struct (21 samples, 0.03%)</title><rect x="88.6096%" y="693" width="0.0268%" height="15" fill="rgb(244,18,3)" fg:x="69485" fg:w="21"/><text x="88.8596%" y="703.50"></text></g><g><title>&lt;move_core_types::gas_algebra::GasQuantity&lt;U&gt; as core::ops::arith::AddAssign&gt;::add_assign (21 samples, 0.03%)</title><rect x="88.6096%" y="677" width="0.0268%" height="15" fill="rgb(232,171,48)" fg:x="69485" fg:w="21"/><text x="88.8596%" y="687.50"></text></g><g><title>&lt;move_core_types::gas_algebra::GasQuantity&lt;U&gt; as core::ops::arith::Add&gt;::add (21 samples, 0.03%)</title><rect x="88.6096%" y="661" width="0.0268%" height="15" fill="rgb(223,223,53)" fg:x="69485" fg:w="21"/><text x="88.8596%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (21 samples, 0.03%)</title><rect x="88.6096%" y="645" width="0.0268%" height="15" fill="rgb(246,92,13)" fg:x="69485" fg:w="21"/><text x="88.8596%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (31 samples, 0.04%)</title><rect x="88.6083%" y="821" width="0.0395%" height="15" fill="rgb(229,171,10)" fg:x="69484" fg:w="31"/><text x="88.8583%" y="831.50"></text></g><g><title>aptos_vm::natives::aptos_natives::{{closure}} (31 samples, 0.04%)</title><rect x="88.6083%" y="805" width="0.0395%" height="15" fill="rgb(213,131,26)" fg:x="69484" fg:w="31"/><text x="88.8583%" y="815.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (31 samples, 0.04%)</title><rect x="88.6083%" y="789" width="0.0395%" height="15" fill="rgb(242,87,54)" fg:x="69484" fg:w="31"/><text x="88.8583%" y="799.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (31 samples, 0.04%)</title><rect x="88.6083%" y="773" width="0.0395%" height="15" fill="rgb(237,21,35)" fg:x="69484" fg:w="31"/><text x="88.8583%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (31 samples, 0.04%)</title><rect x="88.6083%" y="757" width="0.0395%" height="15" fill="rgb(253,13,47)" fg:x="69484" fg:w="31"/><text x="88.8583%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (31 samples, 0.04%)</title><rect x="88.6083%" y="741" width="0.0395%" height="15" fill="rgb(215,122,49)" fg:x="69484" fg:w="31"/><text x="88.8583%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (31 samples, 0.04%)</title><rect x="88.6083%" y="725" width="0.0395%" height="15" fill="rgb(209,179,30)" fg:x="69484" fg:w="31"/><text x="88.8583%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (31 samples, 0.04%)</title><rect x="88.6083%" y="709" width="0.0395%" height="15" fill="rgb(235,100,24)" fg:x="69484" fg:w="31"/><text x="88.8583%" y="719.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (9 samples, 0.01%)</title><rect x="88.6364%" y="693" width="0.0115%" height="15" fill="rgb(209,67,24)" fg:x="69506" fg:w="9"/><text x="88.8864%" y="703.50"></text></g><g><title>&lt;aptos_gas::misc::AbstractValueSizeVisitor as move_vm_types::views::ValueVisitor&gt;::visit_u64 (9 samples, 0.01%)</title><rect x="88.6364%" y="677" width="0.0115%" height="15" fill="rgb(206,74,32)" fg:x="69506" fg:w="9"/><text x="88.8864%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.01%)</title><rect x="88.6479%" y="821" width="0.0115%" height="15" fill="rgb(212,45,25)" fg:x="69515" fg:w="9"/><text x="88.8979%" y="831.50"></text></g><g><title>aptos_framework::natives::event::native_write_to_event_store::{{closure}} (9 samples, 0.01%)</title><rect x="88.6479%" y="805" width="0.0115%" height="15" fill="rgb(239,26,3)" fg:x="69515" fg:w="9"/><text x="88.8979%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (9 samples, 0.01%)</title><rect x="88.6479%" y="789" width="0.0115%" height="15" fill="rgb(218,36,15)" fg:x="69515" fg:w="9"/><text x="88.8979%" y="799.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="88.7091%" y="741" width="0.0153%" height="15" fill="rgb(206,108,24)" fg:x="69563" fg:w="12"/><text x="88.9591%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="88.7104%" y="725" width="0.0140%" height="15" fill="rgb(234,204,42)" fg:x="69564" fg:w="11"/><text x="88.9604%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="88.7104%" y="709" width="0.0140%" height="15" fill="rgb(229,2,11)" fg:x="69564" fg:w="11"/><text x="88.9604%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="88.7104%" y="693" width="0.0140%" height="15" fill="rgb(221,20,48)" fg:x="69564" fg:w="11"/><text x="88.9604%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="88.7104%" y="677" width="0.0140%" height="15" fill="rgb(244,164,10)" fg:x="69564" fg:w="11"/><text x="88.9604%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="88.7244%" y="693" width="0.0153%" height="15" fill="rgb(243,229,2)" fg:x="69575" fg:w="12"/><text x="88.9744%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="88.7244%" y="677" width="0.0153%" height="15" fill="rgb(232,131,37)" fg:x="69575" fg:w="12"/><text x="88.9744%" y="687.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::save_event (58 samples, 0.07%)</title><rect x="88.6683%" y="821" width="0.0740%" height="15" fill="rgb(217,156,11)" fg:x="69531" fg:w="58"/><text x="88.9183%" y="831.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::emit_event (55 samples, 0.07%)</title><rect x="88.6721%" y="805" width="0.0701%" height="15" fill="rgb(239,99,48)" fg:x="69534" fg:w="55"/><text x="88.9221%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (50 samples, 0.06%)</title><rect x="88.6785%" y="789" width="0.0638%" height="15" fill="rgb(231,209,9)" fg:x="69539" fg:w="50"/><text x="88.9285%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (50 samples, 0.06%)</title><rect x="88.6785%" y="773" width="0.0638%" height="15" fill="rgb(254,97,27)" fg:x="69539" fg:w="50"/><text x="88.9285%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (46 samples, 0.06%)</title><rect x="88.6836%" y="757" width="0.0587%" height="15" fill="rgb(223,151,38)" fg:x="69543" fg:w="46"/><text x="88.9336%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (14 samples, 0.02%)</title><rect x="88.7244%" y="741" width="0.0179%" height="15" fill="rgb(219,206,35)" fg:x="69575" fg:w="14"/><text x="88.9744%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 0.02%)</title><rect x="88.7244%" y="725" width="0.0179%" height="15" fill="rgb(216,130,31)" fg:x="69575" fg:w="14"/><text x="88.9744%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.02%)</title><rect x="88.7244%" y="709" width="0.0179%" height="15" fill="rgb(251,97,34)" fg:x="69575" fg:w="14"/><text x="88.9744%" y="719.50"></text></g><g><title>aptos_framework::natives::event::make_native_write_to_event_store::{{closure}} (123 samples, 0.16%)</title><rect x="88.5918%" y="853" width="0.1569%" height="15" fill="rgb(246,159,47)" fg:x="69471" fg:w="123"/><text x="88.8418%" y="863.50"></text></g><g><title>aptos_framework::natives::event::native_write_to_event_store (123 samples, 0.16%)</title><rect x="88.5918%" y="837" width="0.1569%" height="15" fill="rgb(232,87,10)" fg:x="69471" fg:w="123"/><text x="88.8418%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (15 samples, 0.02%)</title><rect x="88.8085%" y="533" width="0.0191%" height="15" fill="rgb(249,1,37)" fg:x="69641" fg:w="15"/><text x="89.0585%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (15 samples, 0.02%)</title><rect x="88.8085%" y="517" width="0.0191%" height="15" fill="rgb(239,135,14)" fg:x="69641" fg:w="15"/><text x="89.0585%" y="527.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 0.02%)</title><rect x="88.8085%" y="501" width="0.0191%" height="15" fill="rgb(253,116,46)" fg:x="69641" fg:w="15"/><text x="89.0585%" y="511.50"></text></g><g><title>rallocx (15 samples, 0.02%)</title><rect x="88.8085%" y="485" width="0.0191%" height="15" fill="rgb(222,217,37)" fg:x="69641" fg:w="15"/><text x="89.0585%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 0.03%)</title><rect x="88.8047%" y="549" width="0.0268%" height="15" fill="rgb(252,96,8)" fg:x="69638" fg:w="21"/><text x="89.0547%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (30 samples, 0.04%)</title><rect x="88.8022%" y="693" width="0.0383%" height="15" fill="rgb(254,103,41)" fg:x="69636" fg:w="30"/><text x="89.0522%" y="703.50"></text></g><g><title>alloc::string::String::push_str (30 samples, 0.04%)</title><rect x="88.8022%" y="677" width="0.0383%" height="15" fill="rgb(218,213,19)" fg:x="69636" fg:w="30"/><text x="89.0522%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (30 samples, 0.04%)</title><rect x="88.8022%" y="661" width="0.0383%" height="15" fill="rgb(253,95,21)" fg:x="69636" fg:w="30"/><text x="89.0522%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (30 samples, 0.04%)</title><rect x="88.8022%" y="645" width="0.0383%" height="15" fill="rgb(229,26,28)" fg:x="69636" fg:w="30"/><text x="89.0522%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (30 samples, 0.04%)</title><rect x="88.8022%" y="629" width="0.0383%" height="15" fill="rgb(230,129,16)" fg:x="69636" fg:w="30"/><text x="89.0522%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.04%)</title><rect x="88.8047%" y="613" width="0.0357%" height="15" fill="rgb(236,126,17)" fg:x="69638" fg:w="28"/><text x="89.0547%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.04%)</title><rect x="88.8047%" y="597" width="0.0357%" height="15" fill="rgb(209,33,33)" fg:x="69638" fg:w="28"/><text x="89.0547%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (28 samples, 0.04%)</title><rect x="88.8047%" y="581" width="0.0357%" height="15" fill="rgb(227,85,29)" fg:x="69638" fg:w="28"/><text x="89.0547%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.04%)</title><rect x="88.8047%" y="565" width="0.0357%" height="15" fill="rgb(241,53,46)" fg:x="69638" fg:w="28"/><text x="89.0547%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14 samples, 0.02%)</title><rect x="88.8443%" y="677" width="0.0179%" height="15" fill="rgb(228,167,53)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="687.50"></text></g><g><title>alloc::string::String::push_str (14 samples, 0.02%)</title><rect x="88.8443%" y="661" width="0.0179%" height="15" fill="rgb(238,195,45)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.02%)</title><rect x="88.8443%" y="645" width="0.0179%" height="15" fill="rgb(252,124,45)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.02%)</title><rect x="88.8443%" y="629" width="0.0179%" height="15" fill="rgb(251,38,35)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.02%)</title><rect x="88.8443%" y="613" width="0.0179%" height="15" fill="rgb(227,33,2)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.02%)</title><rect x="88.8443%" y="597" width="0.0179%" height="15" fill="rgb(223,157,46)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.02%)</title><rect x="88.8443%" y="581" width="0.0179%" height="15" fill="rgb(222,78,41)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.02%)</title><rect x="88.8443%" y="565" width="0.0179%" height="15" fill="rgb(248,176,11)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.02%)</title><rect x="88.8443%" y="549" width="0.0179%" height="15" fill="rgb(241,221,18)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.02%)</title><rect x="88.8443%" y="533" width="0.0179%" height="15" fill="rgb(218,85,22)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.02%)</title><rect x="88.8443%" y="517" width="0.0179%" height="15" fill="rgb(222,223,7)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.02%)</title><rect x="88.8443%" y="501" width="0.0179%" height="15" fill="rgb(254,59,39)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="511.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.02%)</title><rect x="88.8443%" y="485" width="0.0179%" height="15" fill="rgb(247,100,27)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="495.50"></text></g><g><title>rallocx (14 samples, 0.02%)</title><rect x="88.8443%" y="469" width="0.0179%" height="15" fill="rgb(237,207,10)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="479.50"></text></g><g><title>iralloct (14 samples, 0.02%)</title><rect x="88.8443%" y="453" width="0.0179%" height="15" fill="rgb(220,121,28)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="463.50"></text></g><g><title>_rjem_je_arena_ralloc (14 samples, 0.02%)</title><rect x="88.8443%" y="437" width="0.0179%" height="15" fill="rgb(213,223,20)" fg:x="69669" fg:w="14"/><text x="89.0943%" y="447.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::fmt::Display&gt;::fmt (14 samples, 0.02%)</title><rect x="88.8621%" y="677" width="0.0179%" height="15" fill="rgb(205,121,27)" fg:x="69683" fg:w="14"/><text x="89.1121%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (13 samples, 0.02%)</title><rect x="88.8634%" y="661" width="0.0166%" height="15" fill="rgb(253,24,53)" fg:x="69684" fg:w="13"/><text x="89.1134%" y="671.50"></text></g><g><title>core::fmt::write (12 samples, 0.02%)</title><rect x="88.8647%" y="645" width="0.0153%" height="15" fill="rgb(224,224,47)" fg:x="69685" fg:w="12"/><text x="89.1147%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (12 samples, 0.02%)</title><rect x="88.8647%" y="629" width="0.0153%" height="15" fill="rgb(250,125,36)" fg:x="69685" fg:w="12"/><text x="89.1147%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (71 samples, 0.09%)</title><rect x="88.7932%" y="725" width="0.0905%" height="15" fill="rgb(240,144,38)" fg:x="69629" fg:w="71"/><text x="89.0432%" y="735.50"></text></g><g><title>core::fmt::write (70 samples, 0.09%)</title><rect x="88.7945%" y="709" width="0.0893%" height="15" fill="rgb(250,15,50)" fg:x="69630" fg:w="70"/><text x="89.0445%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (34 samples, 0.04%)</title><rect x="88.8404%" y="693" width="0.0434%" height="15" fill="rgb(210,24,26)" fg:x="69666" fg:w="34"/><text x="89.0904%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (10 samples, 0.01%)</title><rect x="88.8838%" y="725" width="0.0128%" height="15" fill="rgb(234,53,53)" fg:x="69700" fg:w="10"/><text x="89.1338%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10 samples, 0.01%)</title><rect x="88.8838%" y="709" width="0.0128%" height="15" fill="rgb(208,108,28)" fg:x="69700" fg:w="10"/><text x="89.1338%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 0.01%)</title><rect x="88.8838%" y="693" width="0.0128%" height="15" fill="rgb(227,143,7)" fg:x="69700" fg:w="10"/><text x="89.1338%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="88.8838%" y="677" width="0.0128%" height="15" fill="rgb(238,189,38)" fg:x="69700" fg:w="10"/><text x="89.1338%" y="687.50"></text></g><g><title>alloc::string::String::reserve (9 samples, 0.01%)</title><rect x="88.9220%" y="613" width="0.0115%" height="15" fill="rgb(222,69,15)" fg:x="69730" fg:w="9"/><text x="89.1720%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="88.9220%" y="597" width="0.0115%" height="15" fill="rgb(213,169,7)" fg:x="69730" fg:w="9"/><text x="89.1720%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="88.9220%" y="581" width="0.0115%" height="15" fill="rgb(251,219,4)" fg:x="69730" fg:w="9"/><text x="89.1720%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="88.9220%" y="565" width="0.0115%" height="15" fill="rgb(241,55,40)" fg:x="69730" fg:w="9"/><text x="89.1720%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="88.9220%" y="549" width="0.0115%" height="15" fill="rgb(243,57,30)" fg:x="69730" fg:w="9"/><text x="89.1720%" y="559.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.03%)</title><rect x="88.9348%" y="581" width="0.0281%" height="15" fill="rgb(234,50,30)" fg:x="69740" fg:w="22"/><text x="89.1848%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (22 samples, 0.03%)</title><rect x="88.9348%" y="565" width="0.0281%" height="15" fill="rgb(239,23,42)" fg:x="69740" fg:w="22"/><text x="89.1848%" y="575.50"></text></g><g><title>core::mem::replace (22 samples, 0.03%)</title><rect x="88.9348%" y="549" width="0.0281%" height="15" fill="rgb(217,38,19)" fg:x="69740" fg:w="22"/><text x="89.1848%" y="559.50"></text></g><g><title>core::ptr::read (22 samples, 0.03%)</title><rect x="88.9348%" y="533" width="0.0281%" height="15" fill="rgb(215,179,16)" fg:x="69740" fg:w="22"/><text x="89.1848%" y="543.50"></text></g><g><title>move_core_types::account_address::AccountAddress::short_str_lossless (74 samples, 0.09%)</title><rect x="88.8965%" y="725" width="0.0944%" height="15" fill="rgb(254,21,37)" fg:x="69710" fg:w="74"/><text x="89.1465%" y="735.50"></text></g><g><title>hex::encode (55 samples, 0.07%)</title><rect x="88.9208%" y="709" width="0.0701%" height="15" fill="rgb(219,207,48)" fg:x="69729" fg:w="55"/><text x="89.1708%" y="719.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (55 samples, 0.07%)</title><rect x="88.9208%" y="693" width="0.0701%" height="15" fill="rgb(227,225,41)" fg:x="69729" fg:w="55"/><text x="89.1708%" y="703.50"></text></g><g><title>hex::encode_to_iter (55 samples, 0.07%)</title><rect x="88.9208%" y="677" width="0.0701%" height="15" fill="rgb(223,130,1)" fg:x="69729" fg:w="55"/><text x="89.1708%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (55 samples, 0.07%)</title><rect x="88.9208%" y="661" width="0.0701%" height="15" fill="rgb(249,54,42)" fg:x="69729" fg:w="55"/><text x="89.1708%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (55 samples, 0.07%)</title><rect x="88.9208%" y="645" width="0.0701%" height="15" fill="rgb(248,69,25)" fg:x="69729" fg:w="55"/><text x="89.1708%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (55 samples, 0.07%)</title><rect x="88.9208%" y="629" width="0.0701%" height="15" fill="rgb(234,21,32)" fg:x="69729" fg:w="55"/><text x="89.1708%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (45 samples, 0.06%)</title><rect x="88.9335%" y="613" width="0.0574%" height="15" fill="rgb(252,136,6)" fg:x="69739" fg:w="45"/><text x="89.1835%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (45 samples, 0.06%)</title><rect x="88.9335%" y="597" width="0.0574%" height="15" fill="rgb(245,87,12)" fg:x="69739" fg:w="45"/><text x="89.1835%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (22 samples, 0.03%)</title><rect x="88.9629%" y="581" width="0.0281%" height="15" fill="rgb(208,12,15)" fg:x="69762" fg:w="22"/><text x="89.2129%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (22 samples, 0.03%)</title><rect x="88.9629%" y="565" width="0.0281%" height="15" fill="rgb(250,98,2)" fg:x="69762" fg:w="22"/><text x="89.2129%" y="575.50"></text></g><g><title>alloc::string::String::push (22 samples, 0.03%)</title><rect x="88.9629%" y="549" width="0.0281%" height="15" fill="rgb(205,213,15)" fg:x="69762" fg:w="22"/><text x="89.2129%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.03%)</title><rect x="88.9629%" y="533" width="0.0281%" height="15" fill="rgb(248,192,44)" fg:x="69762" fg:w="22"/><text x="89.2129%" y="543.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (170 samples, 0.22%)</title><rect x="88.7754%" y="821" width="0.2168%" height="15" fill="rgb(221,89,17)" fg:x="69615" fg:w="170"/><text x="89.0254%" y="831.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::fmt::Display&gt;::fmt (167 samples, 0.21%)</title><rect x="88.7792%" y="805" width="0.2130%" height="15" fill="rgb(209,55,3)" fg:x="69618" fg:w="167"/><text x="89.0292%" y="815.50"></text></g><g><title>core::fmt::Formatter::write_fmt (160 samples, 0.20%)</title><rect x="88.7881%" y="789" width="0.2040%" height="15" fill="rgb(247,23,45)" fg:x="69625" fg:w="160"/><text x="89.0381%" y="799.50"></text></g><g><title>core::fmt::write (160 samples, 0.20%)</title><rect x="88.7881%" y="773" width="0.2040%" height="15" fill="rgb(235,152,23)" fg:x="69625" fg:w="160"/><text x="89.0381%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (158 samples, 0.20%)</title><rect x="88.7907%" y="757" width="0.2015%" height="15" fill="rgb(244,63,13)" fg:x="69627" fg:w="158"/><text x="89.0407%" y="767.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::fmt::Display&gt;::fmt (156 samples, 0.20%)</title><rect x="88.7932%" y="741" width="0.1989%" height="15" fill="rgb(227,30,37)" fg:x="69629" fg:w="156"/><text x="89.0432%" y="751.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::type_to_type_tag (60 samples, 0.08%)</title><rect x="89.0432%" y="821" width="0.0765%" height="15" fill="rgb(224,49,42)" fg:x="69825" fg:w="60"/><text x="89.2932%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (56 samples, 0.07%)</title><rect x="89.0483%" y="805" width="0.0714%" height="15" fill="rgb(218,129,5)" fg:x="69829" fg:w="56"/><text x="89.2983%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (56 samples, 0.07%)</title><rect x="89.0483%" y="789" width="0.0714%" height="15" fill="rgb(240,199,54)" fg:x="69829" fg:w="56"/><text x="89.2983%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (48 samples, 0.06%)</title><rect x="89.0585%" y="773" width="0.0612%" height="15" fill="rgb(234,31,13)" fg:x="69837" fg:w="48"/><text x="89.3085%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (42 samples, 0.05%)</title><rect x="89.0661%" y="757" width="0.0536%" height="15" fill="rgb(219,73,54)" fg:x="69843" fg:w="42"/><text x="89.3161%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (42 samples, 0.05%)</title><rect x="89.0661%" y="741" width="0.0536%" height="15" fill="rgb(251,162,10)" fg:x="69843" fg:w="42"/><text x="89.3161%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (42 samples, 0.05%)</title><rect x="89.0661%" y="725" width="0.0536%" height="15" fill="rgb(240,138,47)" fg:x="69843" fg:w="42"/><text x="89.3161%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (42 samples, 0.05%)</title><rect x="89.0661%" y="709" width="0.0536%" height="15" fill="rgb(216,138,26)" fg:x="69843" fg:w="42"/><text x="89.3161%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.01%)</title><rect x="89.1070%" y="693" width="0.0128%" height="15" fill="rgb(243,17,35)" fg:x="69875" fg:w="10"/><text x="89.3570%" y="703.50"></text></g><g><title>move_vm_types::values::values_impl::Struct::pack (9 samples, 0.01%)</title><rect x="89.1197%" y="821" width="0.0115%" height="15" fill="rgb(241,60,18)" fg:x="69885" fg:w="9"/><text x="89.3697%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.01%)</title><rect x="89.1197%" y="805" width="0.0115%" height="15" fill="rgb(234,2,44)" fg:x="69885" fg:w="9"/><text x="89.3697%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="89.1197%" y="789" width="0.0115%" height="15" fill="rgb(225,225,33)" fg:x="69885" fg:w="9"/><text x="89.3697%" y="799.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="89.1197%" y="773" width="0.0115%" height="15" fill="rgb(234,50,31)" fg:x="69885" fg:w="9"/><text x="89.3697%" y="783.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (9 samples, 0.01%)</title><rect x="89.1197%" y="757" width="0.0115%" height="15" fill="rgb(249,6,25)" fg:x="69885" fg:w="9"/><text x="89.3697%" y="767.50"></text></g><g><title>aptos_framework::natives::type_info::make_native_type_name::{{closure}} (310 samples, 0.40%)</title><rect x="88.7486%" y="853" width="0.3953%" height="15" fill="rgb(241,5,17)" fg:x="69594" fg:w="310"/><text x="88.9986%" y="863.50"></text></g><g><title>aptos_framework::natives::type_info::native_type_name (310 samples, 0.40%)</title><rect x="88.7486%" y="837" width="0.3953%" height="15" fill="rgb(207,116,10)" fg:x="69594" fg:w="310"/><text x="88.9986%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::Value::vector_u8 (8 samples, 0.01%)</title><rect x="89.1337%" y="821" width="0.0102%" height="15" fill="rgb(222,128,18)" fg:x="69896" fg:w="8"/><text x="89.3837%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.01%)</title><rect x="89.1337%" y="805" width="0.0102%" height="15" fill="rgb(229,109,25)" fg:x="69896" fg:w="8"/><text x="89.3837%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="89.1337%" y="789" width="0.0102%" height="15" fill="rgb(222,102,25)" fg:x="69896" fg:w="8"/><text x="89.3837%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="89.1337%" y="773" width="0.0102%" height="15" fill="rgb(239,211,5)" fg:x="69896" fg:w="8"/><text x="89.3837%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (24 samples, 0.03%)</title><rect x="89.1503%" y="853" width="0.0306%" height="15" fill="rgb(223,136,26)" fg:x="69909" fg:w="24"/><text x="89.4003%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (12 samples, 0.02%)</title><rect x="89.2166%" y="821" width="0.0153%" height="15" fill="rgb(227,30,15)" fg:x="69961" fg:w="12"/><text x="89.4666%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (8 samples, 0.01%)</title><rect x="89.2217%" y="805" width="0.0102%" height="15" fill="rgb(247,76,4)" fg:x="69965" fg:w="8"/><text x="89.4717%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (8 samples, 0.01%)</title><rect x="89.2217%" y="789" width="0.0102%" height="15" fill="rgb(245,38,48)" fg:x="69965" fg:w="8"/><text x="89.4717%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="89.2217%" y="773" width="0.0102%" height="15" fill="rgb(210,220,14)" fg:x="69965" fg:w="8"/><text x="89.4717%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (8 samples, 0.01%)</title><rect x="89.2217%" y="757" width="0.0102%" height="15" fill="rgb(224,60,51)" fg:x="69965" fg:w="8"/><text x="89.4717%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (9 samples, 0.01%)</title><rect x="89.2447%" y="693" width="0.0115%" height="15" fill="rgb(212,133,49)" fg:x="69983" fg:w="9"/><text x="89.4947%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="89.2434%" y="805" width="0.0153%" height="15" fill="rgb(231,39,22)" fg:x="69982" fg:w="12"/><text x="89.4934%" y="815.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="89.2434%" y="789" width="0.0153%" height="15" fill="rgb(236,173,22)" fg:x="69982" fg:w="12"/><text x="89.4934%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="89.2434%" y="773" width="0.0153%" height="15" fill="rgb(210,70,0)" fg:x="69982" fg:w="12"/><text x="89.4934%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="89.2434%" y="757" width="0.0153%" height="15" fill="rgb(215,170,11)" fg:x="69982" fg:w="12"/><text x="89.4934%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (12 samples, 0.02%)</title><rect x="89.2434%" y="741" width="0.0153%" height="15" fill="rgb(220,154,28)" fg:x="69982" fg:w="12"/><text x="89.4934%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="89.2434%" y="725" width="0.0153%" height="15" fill="rgb(240,160,41)" fg:x="69982" fg:w="12"/><text x="89.4934%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (12 samples, 0.02%)</title><rect x="89.2434%" y="709" width="0.0153%" height="15" fill="rgb(243,215,41)" fg:x="69982" fg:w="12"/><text x="89.4934%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (23 samples, 0.03%)</title><rect x="89.2345%" y="821" width="0.0293%" height="15" fill="rgb(214,208,31)" fg:x="69975" fg:w="23"/><text x="89.4845%" y="831.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="89.2753%" y="661" width="0.0217%" height="15" fill="rgb(247,57,22)" fg:x="70007" fg:w="17"/><text x="89.5253%" y="671.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="89.2791%" y="645" width="0.0179%" height="15" fill="rgb(228,73,52)" fg:x="70010" fg:w="14"/><text x="89.5291%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="89.2791%" y="629" width="0.0179%" height="15" fill="rgb(252,60,9)" fg:x="70010" fg:w="14"/><text x="89.5291%" y="639.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (25 samples, 0.03%)</title><rect x="89.2753%" y="741" width="0.0319%" height="15" fill="rgb(233,9,51)" fg:x="70007" fg:w="25"/><text x="89.5253%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.03%)</title><rect x="89.2753%" y="725" width="0.0319%" height="15" fill="rgb(223,67,14)" fg:x="70007" fg:w="25"/><text x="89.5253%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.03%)</title><rect x="89.2753%" y="709" width="0.0319%" height="15" fill="rgb(222,86,2)" fg:x="70007" fg:w="25"/><text x="89.5253%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.03%)</title><rect x="89.2753%" y="693" width="0.0319%" height="15" fill="rgb(243,58,54)" fg:x="70007" fg:w="25"/><text x="89.5253%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.03%)</title><rect x="89.2753%" y="677" width="0.0319%" height="15" fill="rgb(210,200,39)" fg:x="70007" fg:w="25"/><text x="89.5253%" y="687.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::type_to_type_layout (53 samples, 0.07%)</title><rect x="89.2651%" y="821" width="0.0676%" height="15" fill="rgb(238,135,9)" fg:x="69999" fg:w="53"/><text x="89.5151%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Resolver::type_to_type_layout (50 samples, 0.06%)</title><rect x="89.2689%" y="805" width="0.0638%" height="15" fill="rgb(232,179,7)" fg:x="70002" fg:w="50"/><text x="89.5189%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (50 samples, 0.06%)</title><rect x="89.2689%" y="789" width="0.0638%" height="15" fill="rgb(245,65,41)" fg:x="70002" fg:w="50"/><text x="89.5189%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (50 samples, 0.06%)</title><rect x="89.2689%" y="773" width="0.0638%" height="15" fill="rgb(227,43,8)" fg:x="70002" fg:w="50"/><text x="89.5189%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (45 samples, 0.06%)</title><rect x="89.2753%" y="757" width="0.0574%" height="15" fill="rgb(235,91,14)" fg:x="70007" fg:w="45"/><text x="89.5253%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (20 samples, 0.03%)</title><rect x="89.3072%" y="741" width="0.0255%" height="15" fill="rgb(235,219,31)" fg:x="70032" fg:w="20"/><text x="89.5572%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (20 samples, 0.03%)</title><rect x="89.3072%" y="725" width="0.0255%" height="15" fill="rgb(227,121,25)" fg:x="70032" fg:w="20"/><text x="89.5572%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.03%)</title><rect x="89.3072%" y="709" width="0.0255%" height="15" fill="rgb(254,129,24)" fg:x="70032" fg:w="20"/><text x="89.5572%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.02%)</title><rect x="89.3161%" y="693" width="0.0166%" height="15" fill="rgb(226,144,49)" fg:x="70039" fg:w="13"/><text x="89.5661%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.02%)</title><rect x="89.3161%" y="677" width="0.0166%" height="15" fill="rgb(214,187,32)" fg:x="70039" fg:w="13"/><text x="89.5661%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (13 samples, 0.02%)</title><rect x="89.3161%" y="661" width="0.0166%" height="15" fill="rgb(243,129,46)" fg:x="70039" fg:w="13"/><text x="89.5661%" y="671.50"></text></g><g><title>hashbrown::raw::h2 (13 samples, 0.02%)</title><rect x="89.3161%" y="645" width="0.0166%" height="15" fill="rgb(221,185,35)" fg:x="70039" fg:w="13"/><text x="89.5661%" y="655.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (15 samples, 0.02%)</title><rect x="89.3633%" y="453" width="0.0191%" height="15" fill="rgb(205,0,32)" fg:x="70076" fg:w="15"/><text x="89.6133%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.02%)</title><rect x="89.3633%" y="437" width="0.0191%" height="15" fill="rgb(229,179,12)" fg:x="70076" fg:w="15"/><text x="89.6133%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="89.3913%" y="325" width="0.0140%" height="15" fill="rgb(252,107,19)" fg:x="70098" fg:w="11"/><text x="89.6413%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (11 samples, 0.01%)</title><rect x="89.3913%" y="309" width="0.0140%" height="15" fill="rgb(220,95,27)" fg:x="70098" fg:w="11"/><text x="89.6413%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="89.3913%" y="293" width="0.0140%" height="15" fill="rgb(240,113,40)" fg:x="70098" fg:w="11"/><text x="89.6413%" y="303.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (11 samples, 0.01%)</title><rect x="89.3913%" y="277" width="0.0140%" height="15" fill="rgb(208,4,43)" fg:x="70098" fg:w="11"/><text x="89.6413%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.06%)</title><rect x="89.3505%" y="613" width="0.0574%" height="15" fill="rgb(247,189,30)" fg:x="70066" fg:w="45"/><text x="89.6005%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (45 samples, 0.06%)</title><rect x="89.3505%" y="597" width="0.0574%" height="15" fill="rgb(231,157,17)" fg:x="70066" fg:w="45"/><text x="89.6005%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (45 samples, 0.06%)</title><rect x="89.3505%" y="581" width="0.0574%" height="15" fill="rgb(224,139,6)" fg:x="70066" fg:w="45"/><text x="89.6005%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (45 samples, 0.06%)</title><rect x="89.3505%" y="565" width="0.0574%" height="15" fill="rgb(223,83,16)" fg:x="70066" fg:w="45"/><text x="89.6005%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (45 samples, 0.06%)</title><rect x="89.3505%" y="549" width="0.0574%" height="15" fill="rgb(232,211,20)" fg:x="70066" fg:w="45"/><text x="89.6005%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (45 samples, 0.06%)</title><rect x="89.3505%" y="533" width="0.0574%" height="15" fill="rgb(225,203,35)" fg:x="70066" fg:w="45"/><text x="89.6005%" y="543.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value::{{closure}}::{{closure}} (44 samples, 0.06%)</title><rect x="89.3518%" y="517" width="0.0561%" height="15" fill="rgb(215,211,44)" fg:x="70067" fg:w="44"/><text x="89.6018%" y="527.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (44 samples, 0.06%)</title><rect x="89.3518%" y="501" width="0.0561%" height="15" fill="rgb(248,213,26)" fg:x="70067" fg:w="44"/><text x="89.6018%" y="511.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value (35 samples, 0.04%)</title><rect x="89.3633%" y="485" width="0.0446%" height="15" fill="rgb(214,23,52)" fg:x="70076" fg:w="35"/><text x="89.6133%" y="495.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value::{{closure}} (35 samples, 0.04%)</title><rect x="89.3633%" y="469" width="0.0446%" height="15" fill="rgb(225,173,50)" fg:x="70076" fg:w="35"/><text x="89.6133%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.03%)</title><rect x="89.3824%" y="453" width="0.0255%" height="15" fill="rgb(206,150,22)" fg:x="70091" fg:w="20"/><text x="89.6324%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="89.3824%" y="437" width="0.0255%" height="15" fill="rgb(239,64,23)" fg:x="70091" fg:w="20"/><text x="89.6324%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 0.03%)</title><rect x="89.3824%" y="421" width="0.0255%" height="15" fill="rgb(242,50,38)" fg:x="70091" fg:w="20"/><text x="89.6324%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (20 samples, 0.03%)</title><rect x="89.3824%" y="405" width="0.0255%" height="15" fill="rgb(217,91,15)" fg:x="70091" fg:w="20"/><text x="89.6324%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.03%)</title><rect x="89.3824%" y="389" width="0.0255%" height="15" fill="rgb(230,172,6)" fg:x="70091" fg:w="20"/><text x="89.6324%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="89.3824%" y="373" width="0.0255%" height="15" fill="rgb(221,98,26)" fg:x="70091" fg:w="20"/><text x="89.6324%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="89.3824%" y="357" width="0.0255%" height="15" fill="rgb(227,210,45)" fg:x="70091" fg:w="20"/><text x="89.6324%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="89.3824%" y="341" width="0.0255%" height="15" fill="rgb(206,8,30)" fg:x="70091" fg:w="20"/><text x="89.6324%" y="351.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (61 samples, 0.08%)</title><rect x="89.3327%" y="821" width="0.0778%" height="15" fill="rgb(241,219,17)" fg:x="70052" fg:w="61"/><text x="89.5827%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (61 samples, 0.08%)</title><rect x="89.3327%" y="805" width="0.0778%" height="15" fill="rgb(247,121,29)" fg:x="70052" fg:w="61"/><text x="89.5827%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::read_ref (61 samples, 0.08%)</title><rect x="89.3327%" y="789" width="0.0778%" height="15" fill="rgb(219,169,49)" fg:x="70052" fg:w="61"/><text x="89.5827%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value (61 samples, 0.08%)</title><rect x="89.3327%" y="773" width="0.0778%" height="15" fill="rgb(253,49,49)" fg:x="70052" fg:w="61"/><text x="89.5827%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value::{{closure}} (54 samples, 0.07%)</title><rect x="89.3416%" y="757" width="0.0689%" height="15" fill="rgb(217,178,3)" fg:x="70059" fg:w="54"/><text x="89.5916%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (54 samples, 0.07%)</title><rect x="89.3416%" y="741" width="0.0689%" height="15" fill="rgb(234,73,37)" fg:x="70059" fg:w="54"/><text x="89.5916%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (54 samples, 0.07%)</title><rect x="89.3416%" y="725" width="0.0689%" height="15" fill="rgb(250,98,22)" fg:x="70059" fg:w="54"/><text x="89.5916%" y="735.50"></text></g><g><title>core::iter::adapters::try_process (54 samples, 0.07%)</title><rect x="89.3416%" y="709" width="0.0689%" height="15" fill="rgb(220,108,37)" fg:x="70059" fg:w="54"/><text x="89.5916%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (52 samples, 0.07%)</title><rect x="89.3441%" y="693" width="0.0663%" height="15" fill="rgb(225,168,10)" fg:x="70061" fg:w="52"/><text x="89.5941%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (52 samples, 0.07%)</title><rect x="89.3441%" y="677" width="0.0663%" height="15" fill="rgb(247,215,21)" fg:x="70061" fg:w="52"/><text x="89.5941%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (52 samples, 0.07%)</title><rect x="89.3441%" y="661" width="0.0663%" height="15" fill="rgb(253,189,31)" fg:x="70061" fg:w="52"/><text x="89.5941%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (52 samples, 0.07%)</title><rect x="89.3441%" y="645" width="0.0663%" height="15" fill="rgb(241,54,22)" fg:x="70061" fg:w="52"/><text x="89.5941%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (52 samples, 0.07%)</title><rect x="89.3441%" y="629" width="0.0663%" height="15" fill="rgb(211,87,4)" fg:x="70061" fg:w="52"/><text x="89.5941%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (15 samples, 0.02%)</title><rect x="89.4551%" y="453" width="0.0191%" height="15" fill="rgb(245,112,24)" fg:x="70148" fg:w="15"/><text x="89.7051%" y="463.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (74 samples, 0.09%)</title><rect x="89.4245%" y="741" width="0.0944%" height="15" fill="rgb(235,190,41)" fg:x="70124" fg:w="74"/><text x="89.6745%" y="751.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (74 samples, 0.09%)</title><rect x="89.4245%" y="725" width="0.0944%" height="15" fill="rgb(214,89,8)" fg:x="70124" fg:w="74"/><text x="89.6745%" y="735.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (65 samples, 0.08%)</title><rect x="89.4360%" y="709" width="0.0829%" height="15" fill="rgb(249,155,35)" fg:x="70133" fg:w="65"/><text x="89.6860%" y="719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (65 samples, 0.08%)</title><rect x="89.4360%" y="693" width="0.0829%" height="15" fill="rgb(249,88,26)" fg:x="70133" fg:w="65"/><text x="89.6860%" y="703.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (62 samples, 0.08%)</title><rect x="89.4398%" y="677" width="0.0791%" height="15" fill="rgb(232,56,8)" fg:x="70136" fg:w="62"/><text x="89.6898%" y="687.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (52 samples, 0.07%)</title><rect x="89.4525%" y="661" width="0.0663%" height="15" fill="rgb(240,95,3)" fg:x="70146" fg:w="52"/><text x="89.7025%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (50 samples, 0.06%)</title><rect x="89.4551%" y="645" width="0.0638%" height="15" fill="rgb(222,44,28)" fg:x="70148" fg:w="50"/><text x="89.7051%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (50 samples, 0.06%)</title><rect x="89.4551%" y="629" width="0.0638%" height="15" fill="rgb(234,16,30)" fg:x="70148" fg:w="50"/><text x="89.7051%" y="639.50"></text></g><g><title> 32]&gt;::serialize (50 samples, 0.06%)</title><rect x="89.4551%" y="613" width="0.0638%" height="15" fill="rgb(223,26,17)" fg:x="70148" fg:w="50"/><text x="89.7051%" y="623.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (50 samples, 0.06%)</title><rect x="89.4551%" y="597" width="0.0638%" height="15" fill="rgb(239,187,47)" fg:x="70148" fg:w="50"/><text x="89.7051%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (50 samples, 0.06%)</title><rect x="89.4551%" y="581" width="0.0638%" height="15" fill="rgb(247,102,50)" fg:x="70148" fg:w="50"/><text x="89.7051%" y="591.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (50 samples, 0.06%)</title><rect x="89.4551%" y="565" width="0.0638%" height="15" fill="rgb(231,216,22)" fg:x="70148" fg:w="50"/><text x="89.7051%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (50 samples, 0.06%)</title><rect x="89.4551%" y="549" width="0.0638%" height="15" fill="rgb(216,201,26)" fg:x="70148" fg:w="50"/><text x="89.7051%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (50 samples, 0.06%)</title><rect x="89.4551%" y="533" width="0.0638%" height="15" fill="rgb(214,186,23)" fg:x="70148" fg:w="50"/><text x="89.7051%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (50 samples, 0.06%)</title><rect x="89.4551%" y="517" width="0.0638%" height="15" fill="rgb(235,184,4)" fg:x="70148" fg:w="50"/><text x="89.7051%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (50 samples, 0.06%)</title><rect x="89.4551%" y="501" width="0.0638%" height="15" fill="rgb(244,46,17)" fg:x="70148" fg:w="50"/><text x="89.7051%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (50 samples, 0.06%)</title><rect x="89.4551%" y="485" width="0.0638%" height="15" fill="rgb(248,74,46)" fg:x="70148" fg:w="50"/><text x="89.7051%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (50 samples, 0.06%)</title><rect x="89.4551%" y="469" width="0.0638%" height="15" fill="rgb(243,79,5)" fg:x="70148" fg:w="50"/><text x="89.7051%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (35 samples, 0.04%)</title><rect x="89.4742%" y="453" width="0.0446%" height="15" fill="rgb(213,148,1)" fg:x="70163" fg:w="35"/><text x="89.7242%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (33 samples, 0.04%)</title><rect x="89.4768%" y="437" width="0.0421%" height="15" fill="rgb(221,30,0)" fg:x="70165" fg:w="33"/><text x="89.7268%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (33 samples, 0.04%)</title><rect x="89.4768%" y="421" width="0.0421%" height="15" fill="rgb(207,85,29)" fg:x="70165" fg:w="33"/><text x="89.7268%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (33 samples, 0.04%)</title><rect x="89.4768%" y="405" width="0.0421%" height="15" fill="rgb(239,31,46)" fg:x="70165" fg:w="33"/><text x="89.7268%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (33 samples, 0.04%)</title><rect x="89.4768%" y="389" width="0.0421%" height="15" fill="rgb(219,6,1)" fg:x="70165" fg:w="33"/><text x="89.7268%" y="399.50"></text></g><g><title>alloc::alloc::realloc (33 samples, 0.04%)</title><rect x="89.4768%" y="373" width="0.0421%" height="15" fill="rgb(229,90,29)" fg:x="70165" fg:w="33"/><text x="89.7268%" y="383.50"></text></g><g><title>rallocx (28 samples, 0.04%)</title><rect x="89.4831%" y="357" width="0.0357%" height="15" fill="rgb(242,201,42)" fg:x="70170" fg:w="28"/><text x="89.7331%" y="367.50"></text></g><g><title>iralloct (28 samples, 0.04%)</title><rect x="89.4831%" y="341" width="0.0357%" height="15" fill="rgb(243,80,54)" fg:x="70170" fg:w="28"/><text x="89.7331%" y="351.50"></text></g><g><title>_rjem_je_arena_ralloc (13 samples, 0.02%)</title><rect x="89.5023%" y="325" width="0.0166%" height="15" fill="rgb(223,166,15)" fg:x="70185" fg:w="13"/><text x="89.7523%" y="335.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (88 samples, 0.11%)</title><rect x="89.4117%" y="821" width="0.1122%" height="15" fill="rgb(238,78,27)" fg:x="70114" fg:w="88"/><text x="89.6617%" y="831.50"></text></g><g><title>bcs::ser::to_bytes (85 samples, 0.11%)</title><rect x="89.4156%" y="805" width="0.1084%" height="15" fill="rgb(235,28,43)" fg:x="70117" fg:w="85"/><text x="89.6656%" y="815.50"></text></g><g><title>bcs::ser::serialize_into (85 samples, 0.11%)</title><rect x="89.4156%" y="789" width="0.1084%" height="15" fill="rgb(240,210,28)" fg:x="70117" fg:w="85"/><text x="89.6656%" y="799.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (85 samples, 0.11%)</title><rect x="89.4156%" y="773" width="0.1084%" height="15" fill="rgb(253,6,46)" fg:x="70117" fg:w="85"/><text x="89.6656%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (79 samples, 0.10%)</title><rect x="89.4232%" y="757" width="0.1007%" height="15" fill="rgb(250,159,47)" fg:x="70123" fg:w="79"/><text x="89.6732%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::Value::vector_u8 (13 samples, 0.02%)</title><rect x="89.5240%" y="821" width="0.0166%" height="15" fill="rgb(216,139,2)" fg:x="70202" fg:w="13"/><text x="89.7740%" y="831.50"></text></g><g><title>move_stdlib::natives::bcs::make_native_to_bytes::{{closure}} (295 samples, 0.38%)</title><rect x="89.1860%" y="853" width="0.3762%" height="15" fill="rgb(221,124,44)" fg:x="69937" fg:w="295"/><text x="89.4360%" y="863.50"></text></g><g><title>move_stdlib::natives::bcs::native_to_bytes (295 samples, 0.38%)</title><rect x="89.1860%" y="837" width="0.3762%" height="15" fill="rgb(205,37,22)" fg:x="69937" fg:w="295"/><text x="89.4360%" y="847.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (10 samples, 0.01%)</title><rect x="89.5495%" y="821" width="0.0128%" height="15" fill="rgb(250,55,8)" fg:x="70222" fg:w="10"/><text x="89.7995%" y="831.50"></text></g><g><title>move_stdlib::natives::signer::make_native_borrow_address::{{closure}} (27 samples, 0.03%)</title><rect x="89.5622%" y="853" width="0.0344%" height="15" fill="rgb(215,83,48)" fg:x="70232" fg:w="27"/><text x="89.8122%" y="863.50"></text></g><g><title>move_stdlib::natives::signer::native_borrow_address (14 samples, 0.02%)</title><rect x="89.5788%" y="837" width="0.0179%" height="15" fill="rgb(253,2,32)" fg:x="70245" fg:w="14"/><text x="89.8288%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Function::get_native (17 samples, 0.02%)</title><rect x="89.6132%" y="853" width="0.0217%" height="15" fill="rgb(236,67,28)" fg:x="70272" fg:w="17"/><text x="89.8632%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (17 samples, 0.02%)</title><rect x="89.6132%" y="837" width="0.0217%" height="15" fill="rgb(252,55,15)" fg:x="70272" fg:w="17"/><text x="89.8632%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.02%)</title><rect x="89.6132%" y="821" width="0.0217%" height="15" fill="rgb(243,173,17)" fg:x="70272" fg:w="17"/><text x="89.8632%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.02%)</title><rect x="89.7152%" y="821" width="0.0153%" height="15" fill="rgb(215,212,13)" fg:x="70352" fg:w="12"/><text x="89.9652%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.02%)</title><rect x="89.7152%" y="805" width="0.0153%" height="15" fill="rgb(253,176,6)" fg:x="70352" fg:w="12"/><text x="89.9652%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="89.7191%" y="789" width="0.0115%" height="15" fill="rgb(236,105,26)" fg:x="70355" fg:w="9"/><text x="89.9691%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="89.7191%" y="773" width="0.0115%" height="15" fill="rgb(239,226,32)" fg:x="70355" fg:w="9"/><text x="89.9691%" y="783.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="89.7191%" y="757" width="0.0115%" height="15" fill="rgb(236,104,51)" fg:x="70355" fg:w="9"/><text x="89.9691%" y="767.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (36 samples, 0.05%)</title><rect x="89.7305%" y="821" width="0.0459%" height="15" fill="rgb(220,172,33)" fg:x="70364" fg:w="36"/><text x="89.9805%" y="831.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (112 samples, 0.14%)</title><rect x="89.6400%" y="853" width="0.1428%" height="15" fill="rgb(224,182,25)" fg:x="70293" fg:w="112"/><text x="89.8900%" y="863.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (111 samples, 0.14%)</title><rect x="89.6413%" y="837" width="0.1416%" height="15" fill="rgb(236,184,24)" fg:x="70294" fg:w="111"/><text x="89.8913%" y="847.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (1,165 samples, 1.49%)</title><rect x="88.3265%" y="885" width="1.4856%" height="15" fill="rgb(241,221,14)" fg:x="69263" fg:w="1165"/><text x="88.5765%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (1,165 samples, 1.49%)</title><rect x="88.3265%" y="869" width="1.4856%" height="15" fill="rgb(227,146,5)" fg:x="69263" fg:w="1165"/><text x="88.5765%" y="879.50"></text></g><g><title>sdallocx (23 samples, 0.03%)</title><rect x="89.7828%" y="853" width="0.0293%" height="15" fill="rgb(214,15,23)" fg:x="70405" fg:w="23"/><text x="90.0328%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::check_friend_or_private_call (14 samples, 0.02%)</title><rect x="89.8122%" y="885" width="0.0179%" height="15" fill="rgb(233,157,31)" fg:x="70428" fg:w="14"/><text x="90.0622%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.02%)</title><rect x="89.8122%" y="869" width="0.0179%" height="15" fill="rgb(211,27,52)" fg:x="70428" fg:w="14"/><text x="90.0622%" y="879.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (14 samples, 0.02%)</title><rect x="89.8122%" y="853" width="0.0179%" height="15" fill="rgb(212,223,15)" fg:x="70428" fg:w="14"/><text x="90.0622%" y="863.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[U (14 samples, 0.02%)</title><rect x="89.8122%" y="837" width="0.0179%" height="15" fill="rgb(254,211,0)" fg:x="70428" fg:w="14"/><text x="90.0622%" y="847.50"></text></g><g><title> N]&gt; for [T (14 samples, 0.02%)</title><rect x="89.8122%" y="821" width="0.0179%" height="15" fill="rgb(205,43,38)" fg:x="70428" fg:w="14"/><text x="90.0622%" y="831.50"></text></g><g><title> N]&gt;::eq (14 samples, 0.02%)</title><rect x="89.8122%" y="805" width="0.0179%" height="15" fill="rgb(242,206,46)" fg:x="70428" fg:w="14"/><text x="90.0622%" y="815.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (14 samples, 0.02%)</title><rect x="89.8122%" y="789" width="0.0179%" height="15" fill="rgb(220,221,12)" fg:x="70428" fg:w="14"/><text x="90.0622%" y="799.50"></text></g><g><title>__rust_dealloc (13 samples, 0.02%)</title><rect x="89.8300%" y="869" width="0.0166%" height="15" fill="rgb(217,156,35)" fg:x="70442" fg:w="13"/><text x="90.0800%" y="879.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (9 samples, 0.01%)</title><rect x="89.8351%" y="853" width="0.0115%" height="15" fill="rgb(207,181,49)" fg:x="70446" fg:w="9"/><text x="90.0851%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (27 samples, 0.03%)</title><rect x="89.8938%" y="837" width="0.0344%" height="15" fill="rgb(235,103,47)" fg:x="70492" fg:w="27"/><text x="90.1438%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (11 samples, 0.01%)</title><rect x="89.9142%" y="821" width="0.0140%" height="15" fill="rgb(222,63,28)" fg:x="70508" fg:w="11"/><text x="90.1642%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="89.9142%" y="805" width="0.0140%" height="15" fill="rgb(244,137,21)" fg:x="70508" fg:w="11"/><text x="90.1642%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (11 samples, 0.01%)</title><rect x="89.9142%" y="789" width="0.0140%" height="15" fill="rgb(228,35,27)" fg:x="70508" fg:w="11"/><text x="90.1642%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (90 samples, 0.11%)</title><rect x="89.8491%" y="869" width="0.1148%" height="15" fill="rgb(226,191,41)" fg:x="70457" fg:w="90"/><text x="90.0991%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (57 samples, 0.07%)</title><rect x="89.8912%" y="853" width="0.0727%" height="15" fill="rgb(210,154,3)" fg:x="70490" fg:w="57"/><text x="90.1412%" y="863.50"></text></g><g><title>sdallocx (28 samples, 0.04%)</title><rect x="89.9282%" y="837" width="0.0357%" height="15" fill="rgb(216,60,49)" fg:x="70519" fg:w="28"/><text x="90.1782%" y="847.50"></text></g><g><title>isfree (28 samples, 0.04%)</title><rect x="89.9282%" y="821" width="0.0357%" height="15" fill="rgb(226,17,20)" fg:x="70519" fg:w="28"/><text x="90.1782%" y="831.50"></text></g><g><title>isdalloct (28 samples, 0.04%)</title><rect x="89.9282%" y="805" width="0.0357%" height="15" fill="rgb(206,115,35)" fg:x="70519" fg:w="28"/><text x="90.1782%" y="815.50"></text></g><g><title>arena_sdalloc (28 samples, 0.04%)</title><rect x="89.9282%" y="789" width="0.0357%" height="15" fill="rgb(227,88,1)" fg:x="70519" fg:w="28"/><text x="90.1782%" y="799.50"></text></g><g><title>tcache_dalloc_small (28 samples, 0.04%)</title><rect x="89.9282%" y="773" width="0.0357%" height="15" fill="rgb(230,222,24)" fg:x="70519" fg:w="28"/><text x="90.1782%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (23 samples, 0.03%)</title><rect x="89.9639%" y="869" width="0.0293%" height="15" fill="rgb(214,124,32)" fg:x="70547" fg:w="23"/><text x="90.2139%" y="879.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (8 samples, 0.01%)</title><rect x="90.0366%" y="757" width="0.0102%" height="15" fill="rgb(240,41,36)" fg:x="70604" fg:w="8"/><text x="90.2866%" y="767.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="90.0366%" y="741" width="0.0102%" height="15" fill="rgb(221,17,52)" fg:x="70604" fg:w="8"/><text x="90.2866%" y="751.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (64 samples, 0.08%)</title><rect x="89.9932%" y="789" width="0.0816%" height="15" fill="rgb(252,70,16)" fg:x="70570" fg:w="64"/><text x="90.2432%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.04%)</title><rect x="90.0366%" y="773" width="0.0383%" height="15" fill="rgb(250,177,4)" fg:x="70604" fg:w="30"/><text x="90.2866%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (22 samples, 0.03%)</title><rect x="90.0468%" y="757" width="0.0281%" height="15" fill="rgb(240,188,47)" fg:x="70612" fg:w="22"/><text x="90.2968%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (22 samples, 0.03%)</title><rect x="90.0468%" y="741" width="0.0281%" height="15" fill="rgb(215,92,12)" fg:x="70612" fg:w="22"/><text x="90.2968%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.03%)</title><rect x="90.0468%" y="725" width="0.0281%" height="15" fill="rgb(242,110,29)" fg:x="70612" fg:w="22"/><text x="90.2968%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.03%)</title><rect x="90.0468%" y="709" width="0.0281%" height="15" fill="rgb(208,211,26)" fg:x="70612" fg:w="22"/><text x="90.2968%" y="719.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.03%)</title><rect x="90.0468%" y="693" width="0.0281%" height="15" fill="rgb(244,147,6)" fg:x="70612" fg:w="22"/><text x="90.2968%" y="703.50"></text></g><g><title>mallocx (17 samples, 0.02%)</title><rect x="90.0532%" y="677" width="0.0217%" height="15" fill="rgb(211,130,42)" fg:x="70617" fg:w="17"/><text x="90.3032%" y="687.50"></text></g><g><title>imalloc (17 samples, 0.02%)</title><rect x="90.0532%" y="661" width="0.0217%" height="15" fill="rgb(220,63,1)" fg:x="70617" fg:w="17"/><text x="90.3032%" y="671.50"></text></g><g><title>imalloc_body (17 samples, 0.02%)</title><rect x="90.0532%" y="645" width="0.0217%" height="15" fill="rgb(241,212,30)" fg:x="70617" fg:w="17"/><text x="90.3032%" y="655.50"></text></g><g><title>imalloc_no_sample (17 samples, 0.02%)</title><rect x="90.0532%" y="629" width="0.0217%" height="15" fill="rgb(233,153,17)" fg:x="70617" fg:w="17"/><text x="90.3032%" y="639.50"></text></g><g><title>iallocztm (17 samples, 0.02%)</title><rect x="90.0532%" y="613" width="0.0217%" height="15" fill="rgb(236,3,10)" fg:x="70617" fg:w="17"/><text x="90.3032%" y="623.50"></text></g><g><title>arena_malloc (17 samples, 0.02%)</title><rect x="90.0532%" y="597" width="0.0217%" height="15" fill="rgb(232,41,21)" fg:x="70617" fg:w="17"/><text x="90.3032%" y="607.50"></text></g><g><title>tcache_alloc_small (16 samples, 0.02%)</title><rect x="90.0545%" y="581" width="0.0204%" height="15" fill="rgb(206,63,51)" fg:x="70618" fg:w="16"/><text x="90.3045%" y="591.50"></text></g><g><title>cache_bin_alloc_easy (16 samples, 0.02%)</title><rect x="90.0545%" y="565" width="0.0204%" height="15" fill="rgb(250,214,3)" fg:x="70618" fg:w="16"/><text x="90.3045%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.02%)</title><rect x="90.0749%" y="789" width="0.0204%" height="15" fill="rgb(254,89,27)" fg:x="70634" fg:w="16"/><text x="90.3249%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.02%)</title><rect x="90.0749%" y="773" width="0.0204%" height="15" fill="rgb(249,41,14)" fg:x="70634" fg:w="16"/><text x="90.3249%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (16 samples, 0.02%)</title><rect x="90.0749%" y="757" width="0.0204%" height="15" fill="rgb(221,196,51)" fg:x="70634" fg:w="16"/><text x="90.3249%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="90.0749%" y="741" width="0.0204%" height="15" fill="rgb(214,116,26)" fg:x="70634" fg:w="16"/><text x="90.3249%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="90.0749%" y="725" width="0.0204%" height="15" fill="rgb(236,67,7)" fg:x="70634" fg:w="16"/><text x="90.3249%" y="735.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="90.0749%" y="709" width="0.0204%" height="15" fill="rgb(253,179,32)" fg:x="70634" fg:w="16"/><text x="90.3249%" y="719.50"></text></g><g><title>mallocx (12 samples, 0.02%)</title><rect x="90.0800%" y="693" width="0.0153%" height="15" fill="rgb(218,33,15)" fg:x="70638" fg:w="12"/><text x="90.3300%" y="703.50"></text></g><g><title>imalloc (12 samples, 0.02%)</title><rect x="90.0800%" y="677" width="0.0153%" height="15" fill="rgb(217,202,41)" fg:x="70638" fg:w="12"/><text x="90.3300%" y="687.50"></text></g><g><title>imalloc_body (12 samples, 0.02%)</title><rect x="90.0800%" y="661" width="0.0153%" height="15" fill="rgb(234,133,5)" fg:x="70638" fg:w="12"/><text x="90.3300%" y="671.50"></text></g><g><title>imalloc_no_sample (12 samples, 0.02%)</title><rect x="90.0800%" y="645" width="0.0153%" height="15" fill="rgb(240,47,40)" fg:x="70638" fg:w="12"/><text x="90.3300%" y="655.50"></text></g><g><title>iallocztm (12 samples, 0.02%)</title><rect x="90.0800%" y="629" width="0.0153%" height="15" fill="rgb(234,166,26)" fg:x="70638" fg:w="12"/><text x="90.3300%" y="639.50"></text></g><g><title>arena_malloc (12 samples, 0.02%)</title><rect x="90.0800%" y="613" width="0.0153%" height="15" fill="rgb(244,125,51)" fg:x="70638" fg:w="12"/><text x="90.3300%" y="623.50"></text></g><g><title>tcache_alloc_small (12 samples, 0.02%)</title><rect x="90.0800%" y="597" width="0.0153%" height="15" fill="rgb(229,171,11)" fg:x="70638" fg:w="12"/><text x="90.3300%" y="607.50"></text></g><g><title>cache_bin_alloc_easy (12 samples, 0.02%)</title><rect x="90.0800%" y="581" width="0.0153%" height="15" fill="rgb(224,38,45)" fg:x="70638" fg:w="12"/><text x="90.3300%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (130 samples, 0.17%)</title><rect x="89.9932%" y="853" width="0.1658%" height="15" fill="rgb(237,27,7)" fg:x="70570" fg:w="130"/><text x="90.2432%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (130 samples, 0.17%)</title><rect x="89.9932%" y="837" width="0.1658%" height="15" fill="rgb(216,52,7)" fg:x="70570" fg:w="130"/><text x="90.2432%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (130 samples, 0.17%)</title><rect x="89.9932%" y="821" width="0.1658%" height="15" fill="rgb(243,11,11)" fg:x="70570" fg:w="130"/><text x="90.2432%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (130 samples, 0.17%)</title><rect x="89.9932%" y="805" width="0.1658%" height="15" fill="rgb(253,167,20)" fg:x="70570" fg:w="130"/><text x="90.2432%" y="815.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (50 samples, 0.06%)</title><rect x="90.0953%" y="789" width="0.0638%" height="15" fill="rgb(215,207,5)" fg:x="70650" fg:w="50"/><text x="90.3453%" y="799.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (25 samples, 0.03%)</title><rect x="90.1590%" y="757" width="0.0319%" height="15" fill="rgb(252,127,31)" fg:x="70700" fg:w="25"/><text x="90.4090%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (10 samples, 0.01%)</title><rect x="90.2891%" y="549" width="0.0128%" height="15" fill="rgb(209,106,27)" fg:x="70802" fg:w="10"/><text x="90.5391%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.01%)</title><rect x="90.2891%" y="533" width="0.0128%" height="15" fill="rgb(214,220,18)" fg:x="70802" fg:w="10"/><text x="90.5391%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="90.2904%" y="517" width="0.0115%" height="15" fill="rgb(237,89,12)" fg:x="70803" fg:w="9"/><text x="90.5404%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="90.2904%" y="501" width="0.0115%" height="15" fill="rgb(209,167,36)" fg:x="70803" fg:w="9"/><text x="90.5404%" y="511.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="90.2904%" y="485" width="0.0115%" height="15" fill="rgb(243,45,22)" fg:x="70803" fg:w="9"/><text x="90.5404%" y="495.50"></text></g><g><title>mallocx (8 samples, 0.01%)</title><rect x="90.2916%" y="469" width="0.0102%" height="15" fill="rgb(239,2,46)" fg:x="70804" fg:w="8"/><text x="90.5416%" y="479.50"></text></g><g><title>imalloc (8 samples, 0.01%)</title><rect x="90.2916%" y="453" width="0.0102%" height="15" fill="rgb(241,101,0)" fg:x="70804" fg:w="8"/><text x="90.5416%" y="463.50"></text></g><g><title>imalloc_body (8 samples, 0.01%)</title><rect x="90.2916%" y="437" width="0.0102%" height="15" fill="rgb(244,34,31)" fg:x="70804" fg:w="8"/><text x="90.5416%" y="447.50"></text></g><g><title>imalloc_no_sample (8 samples, 0.01%)</title><rect x="90.2916%" y="421" width="0.0102%" height="15" fill="rgb(248,23,22)" fg:x="70804" fg:w="8"/><text x="90.5416%" y="431.50"></text></g><g><title>iallocztm (8 samples, 0.01%)</title><rect x="90.2916%" y="405" width="0.0102%" height="15" fill="rgb(218,27,48)" fg:x="70804" fg:w="8"/><text x="90.5416%" y="415.50"></text></g><g><title>arena_malloc (8 samples, 0.01%)</title><rect x="90.2916%" y="389" width="0.0102%" height="15" fill="rgb(232,78,1)" fg:x="70804" fg:w="8"/><text x="90.5416%" y="399.50"></text></g><g><title>tcache_alloc_small (8 samples, 0.01%)</title><rect x="90.2916%" y="373" width="0.0102%" height="15" fill="rgb(233,169,12)" fg:x="70804" fg:w="8"/><text x="90.5416%" y="383.50"></text></g><g><title>cache_bin_alloc_easy (8 samples, 0.01%)</title><rect x="90.2916%" y="357" width="0.0102%" height="15" fill="rgb(225,222,54)" fg:x="70804" fg:w="8"/><text x="90.5416%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="90.3018%" y="501" width="0.0128%" height="15" fill="rgb(245,126,29)" fg:x="70812" fg:w="10"/><text x="90.5518%" y="511.50"></text></g><g><title>mallocx (8 samples, 0.01%)</title><rect x="90.3044%" y="485" width="0.0102%" height="15" fill="rgb(241,63,48)" fg:x="70814" fg:w="8"/><text x="90.5544%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.02%)</title><rect x="90.3018%" y="549" width="0.0166%" height="15" fill="rgb(235,126,38)" fg:x="70812" fg:w="13"/><text x="90.5518%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13 samples, 0.02%)</title><rect x="90.3018%" y="533" width="0.0166%" height="15" fill="rgb(232,96,49)" fg:x="70812" fg:w="13"/><text x="90.5518%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.02%)</title><rect x="90.3018%" y="517" width="0.0166%" height="15" fill="rgb(211,146,40)" fg:x="70812" fg:w="13"/><text x="90.5518%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (71 samples, 0.09%)</title><rect x="90.3184%" y="533" width="0.0905%" height="15" fill="rgb(247,93,44)" fg:x="70825" fg:w="71"/><text x="90.5684%" y="543.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (10 samples, 0.01%)</title><rect x="90.4102%" y="533" width="0.0128%" height="15" fill="rgb(251,41,49)" fg:x="70897" fg:w="10"/><text x="90.6602%" y="543.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (10 samples, 0.01%)</title><rect x="90.4102%" y="517" width="0.0128%" height="15" fill="rgb(218,155,12)" fg:x="70897" fg:w="10"/><text x="90.6602%" y="527.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (10 samples, 0.01%)</title><rect x="90.4102%" y="501" width="0.0128%" height="15" fill="rgb(221,161,30)" fg:x="70897" fg:w="10"/><text x="90.6602%" y="511.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (10 samples, 0.01%)</title><rect x="90.4102%" y="485" width="0.0128%" height="15" fill="rgb(221,179,11)" fg:x="70897" fg:w="10"/><text x="90.6602%" y="495.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (86 samples, 0.11%)</title><rect x="90.3184%" y="549" width="0.1097%" height="15" fill="rgb(224,170,48)" fg:x="70825" fg:w="86"/><text x="90.5684%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (114 samples, 0.15%)</title><rect x="90.2891%" y="693" width="0.1454%" height="15" fill="rgb(223,117,5)" fg:x="70802" fg:w="114"/><text x="90.5391%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (114 samples, 0.15%)</title><rect x="90.2891%" y="677" width="0.1454%" height="15" fill="rgb(209,52,20)" fg:x="70802" fg:w="114"/><text x="90.5391%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (114 samples, 0.15%)</title><rect x="90.2891%" y="661" width="0.1454%" height="15" fill="rgb(209,19,41)" fg:x="70802" fg:w="114"/><text x="90.5391%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (114 samples, 0.15%)</title><rect x="90.2891%" y="645" width="0.1454%" height="15" fill="rgb(210,177,12)" fg:x="70802" fg:w="114"/><text x="90.5391%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (114 samples, 0.15%)</title><rect x="90.2891%" y="629" width="0.1454%" height="15" fill="rgb(211,159,37)" fg:x="70802" fg:w="114"/><text x="90.5391%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (114 samples, 0.15%)</title><rect x="90.2891%" y="613" width="0.1454%" height="15" fill="rgb(209,20,2)" fg:x="70802" fg:w="114"/><text x="90.5391%" y="623.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (114 samples, 0.15%)</title><rect x="90.2891%" y="597" width="0.1454%" height="15" fill="rgb(244,3,46)" fg:x="70802" fg:w="114"/><text x="90.5391%" y="607.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (114 samples, 0.15%)</title><rect x="90.2891%" y="581" width="0.1454%" height="15" fill="rgb(220,94,38)" fg:x="70802" fg:w="114"/><text x="90.5391%" y="591.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (114 samples, 0.15%)</title><rect x="90.2891%" y="565" width="0.1454%" height="15" fill="rgb(253,14,31)" fg:x="70802" fg:w="114"/><text x="90.5391%" y="575.50"></text></g><g><title>arena_ralloc_move_helper (11 samples, 0.01%)</title><rect x="90.4625%" y="517" width="0.0140%" height="15" fill="rgb(234,176,13)" fg:x="70938" fg:w="11"/><text x="90.7125%" y="527.50"></text></g><g><title>ipalloct (11 samples, 0.01%)</title><rect x="90.4625%" y="501" width="0.0140%" height="15" fill="rgb(218,62,25)" fg:x="70938" fg:w="11"/><text x="90.7125%" y="511.50"></text></g><g><title>ipallocztm (11 samples, 0.01%)</title><rect x="90.4625%" y="485" width="0.0140%" height="15" fill="rgb(216,124,40)" fg:x="70938" fg:w="11"/><text x="90.7125%" y="495.50"></text></g><g><title>_rjem_je_arena_palloc (11 samples, 0.01%)</title><rect x="90.4625%" y="469" width="0.0140%" height="15" fill="rgb(228,170,12)" fg:x="70938" fg:w="11"/><text x="90.7125%" y="479.50"></text></g><g><title>_rjem_je_arena_palloc (11 samples, 0.01%)</title><rect x="90.4625%" y="453" width="0.0140%" height="15" fill="rgb(231,226,5)" fg:x="70938" fg:w="11"/><text x="90.7125%" y="463.50"></text></g><g><title>arena_malloc (11 samples, 0.01%)</title><rect x="90.4625%" y="437" width="0.0140%" height="15" fill="rgb(237,122,22)" fg:x="70938" fg:w="11"/><text x="90.7125%" y="447.50"></text></g><g><title>tcache_alloc_small (11 samples, 0.01%)</title><rect x="90.4625%" y="421" width="0.0140%" height="15" fill="rgb(209,185,25)" fg:x="70938" fg:w="11"/><text x="90.7125%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (225 samples, 0.29%)</title><rect x="90.1909%" y="725" width="0.2869%" height="15" fill="rgb(228,200,32)" fg:x="70725" fg:w="225"/><text x="90.4409%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (225 samples, 0.29%)</title><rect x="90.1909%" y="709" width="0.2869%" height="15" fill="rgb(217,140,10)" fg:x="70725" fg:w="225"/><text x="90.4409%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (34 samples, 0.04%)</title><rect x="90.4345%" y="693" width="0.0434%" height="15" fill="rgb(253,17,24)" fg:x="70916" fg:w="34"/><text x="90.6845%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (34 samples, 0.04%)</title><rect x="90.4345%" y="677" width="0.0434%" height="15" fill="rgb(212,61,6)" fg:x="70916" fg:w="34"/><text x="90.6845%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 0.04%)</title><rect x="90.4345%" y="661" width="0.0434%" height="15" fill="rgb(205,14,25)" fg:x="70916" fg:w="34"/><text x="90.6845%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34 samples, 0.04%)</title><rect x="90.4345%" y="645" width="0.0434%" height="15" fill="rgb(232,69,41)" fg:x="70916" fg:w="34"/><text x="90.6845%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (30 samples, 0.04%)</title><rect x="90.4396%" y="629" width="0.0383%" height="15" fill="rgb(241,106,47)" fg:x="70920" fg:w="30"/><text x="90.6896%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (30 samples, 0.04%)</title><rect x="90.4396%" y="613" width="0.0383%" height="15" fill="rgb(210,213,53)" fg:x="70920" fg:w="30"/><text x="90.6896%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (30 samples, 0.04%)</title><rect x="90.4396%" y="597" width="0.0383%" height="15" fill="rgb(253,175,27)" fg:x="70920" fg:w="30"/><text x="90.6896%" y="607.50"></text></g><g><title>alloc::alloc::realloc (30 samples, 0.04%)</title><rect x="90.4396%" y="581" width="0.0383%" height="15" fill="rgb(211,171,24)" fg:x="70920" fg:w="30"/><text x="90.6896%" y="591.50"></text></g><g><title>rallocx (26 samples, 0.03%)</title><rect x="90.4447%" y="565" width="0.0332%" height="15" fill="rgb(229,80,7)" fg:x="70924" fg:w="26"/><text x="90.6947%" y="575.50"></text></g><g><title>iralloct (12 samples, 0.02%)</title><rect x="90.4625%" y="549" width="0.0153%" height="15" fill="rgb(212,46,39)" fg:x="70938" fg:w="12"/><text x="90.7125%" y="559.50"></text></g><g><title>_rjem_je_arena_ralloc (12 samples, 0.02%)</title><rect x="90.4625%" y="533" width="0.0153%" height="15" fill="rgb(240,80,45)" fg:x="70938" fg:w="12"/><text x="90.7125%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (144 samples, 0.18%)</title><rect x="90.4778%" y="629" width="0.1836%" height="15" fill="rgb(253,177,40)" fg:x="70950" fg:w="144"/><text x="90.7278%" y="639.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (144 samples, 0.18%)</title><rect x="90.4778%" y="613" width="0.1836%" height="15" fill="rgb(249,200,15)" fg:x="70950" fg:w="144"/><text x="90.7278%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="90.8068%" y="565" width="0.0140%" height="15" fill="rgb(217,78,26)" fg:x="71208" fg:w="11"/><text x="91.0568%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11 samples, 0.01%)</title><rect x="90.8068%" y="549" width="0.0140%" height="15" fill="rgb(254,151,32)" fg:x="71208" fg:w="11"/><text x="91.0568%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="90.8081%" y="533" width="0.0128%" height="15" fill="rgb(226,165,27)" fg:x="71209" fg:w="10"/><text x="91.0581%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="90.8081%" y="517" width="0.0128%" height="15" fill="rgb(250,206,4)" fg:x="71209" fg:w="10"/><text x="91.0581%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (292 samples, 0.37%)</title><rect x="90.4778%" y="725" width="0.3724%" height="15" fill="rgb(231,229,27)" fg:x="70950" fg:w="292"/><text x="90.7278%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (292 samples, 0.37%)</title><rect x="90.4778%" y="709" width="0.3724%" height="15" fill="rgb(239,217,8)" fg:x="70950" fg:w="292"/><text x="90.7278%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (292 samples, 0.37%)</title><rect x="90.4778%" y="693" width="0.3724%" height="15" fill="rgb(225,204,27)" fg:x="70950" fg:w="292"/><text x="90.7278%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (292 samples, 0.37%)</title><rect x="90.4778%" y="677" width="0.3724%" height="15" fill="rgb(230,56,32)" fg:x="70950" fg:w="292"/><text x="90.7278%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (292 samples, 0.37%)</title><rect x="90.4778%" y="661" width="0.3724%" height="15" fill="rgb(222,56,27)" fg:x="70950" fg:w="292"/><text x="90.7278%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (292 samples, 0.37%)</title><rect x="90.4778%" y="645" width="0.3724%" height="15" fill="rgb(253,108,27)" fg:x="70950" fg:w="292"/><text x="90.7278%" y="655.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (148 samples, 0.19%)</title><rect x="90.6615%" y="629" width="0.1887%" height="15" fill="rgb(212,87,36)" fg:x="71094" fg:w="148"/><text x="90.9115%" y="639.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (144 samples, 0.18%)</title><rect x="90.6666%" y="613" width="0.1836%" height="15" fill="rgb(247,82,36)" fg:x="71098" fg:w="144"/><text x="90.9166%" y="623.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (142 samples, 0.18%)</title><rect x="90.6691%" y="597" width="0.1811%" height="15" fill="rgb(222,143,9)" fg:x="71100" fg:w="142"/><text x="90.9191%" y="607.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (34 samples, 0.04%)</title><rect x="90.8068%" y="581" width="0.0434%" height="15" fill="rgb(238,162,48)" fg:x="71208" fg:w="34"/><text x="91.0568%" y="591.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (23 samples, 0.03%)</title><rect x="90.8209%" y="565" width="0.0293%" height="15" fill="rgb(221,59,43)" fg:x="71219" fg:w="23"/><text x="91.0709%" y="575.50"></text></g><g><title>__rust_alloc (9 samples, 0.01%)</title><rect x="90.8553%" y="613" width="0.0115%" height="15" fill="rgb(205,166,41)" fg:x="71246" fg:w="9"/><text x="91.1053%" y="623.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (697 samples, 0.89%)</title><rect x="89.9932%" y="869" width="0.8888%" height="15" fill="rgb(241,186,40)" fg:x="70570" fg:w="697"/><text x="90.2432%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (567 samples, 0.72%)</title><rect x="90.1590%" y="853" width="0.7231%" height="15" fill="rgb(216,119,35)" fg:x="70700" fg:w="567"/><text x="90.4090%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (567 samples, 0.72%)</title><rect x="90.1590%" y="837" width="0.7231%" height="15" fill="rgb(208,68,38)" fg:x="70700" fg:w="567"/><text x="90.4090%" y="847.50"></text></g><g><title>core::iter::adapters::try_process (567 samples, 0.72%)</title><rect x="90.1590%" y="821" width="0.7231%" height="15" fill="rgb(217,113,1)" fg:x="70700" fg:w="567"/><text x="90.4090%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (567 samples, 0.72%)</title><rect x="90.1590%" y="805" width="0.7231%" height="15" fill="rgb(242,153,3)" fg:x="70700" fg:w="567"/><text x="90.4090%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (567 samples, 0.72%)</title><rect x="90.1590%" y="789" width="0.7231%" height="15" fill="rgb(229,76,35)" fg:x="70700" fg:w="567"/><text x="90.4090%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (567 samples, 0.72%)</title><rect x="90.1590%" y="773" width="0.7231%" height="15" fill="rgb(229,125,34)" fg:x="70700" fg:w="567"/><text x="90.4090%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (542 samples, 0.69%)</title><rect x="90.1909%" y="757" width="0.6912%" height="15" fill="rgb(238,179,36)" fg:x="70725" fg:w="542"/><text x="90.4409%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (542 samples, 0.69%)</title><rect x="90.1909%" y="741" width="0.6912%" height="15" fill="rgb(244,183,19)" fg:x="70725" fg:w="542"/><text x="90.4409%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (25 samples, 0.03%)</title><rect x="90.8502%" y="725" width="0.0319%" height="15" fill="rgb(216,85,49)" fg:x="71242" fg:w="25"/><text x="91.1002%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.03%)</title><rect x="90.8502%" y="709" width="0.0319%" height="15" fill="rgb(208,161,47)" fg:x="71242" fg:w="25"/><text x="91.1002%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.03%)</title><rect x="90.8502%" y="693" width="0.0319%" height="15" fill="rgb(233,210,18)" fg:x="71242" fg:w="25"/><text x="91.1002%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (25 samples, 0.03%)</title><rect x="90.8502%" y="677" width="0.0319%" height="15" fill="rgb(205,104,42)" fg:x="71242" fg:w="25"/><text x="91.1002%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.03%)</title><rect x="90.8502%" y="661" width="0.0319%" height="15" fill="rgb(248,90,43)" fg:x="71242" fg:w="25"/><text x="91.1002%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.03%)</title><rect x="90.8502%" y="645" width="0.0319%" height="15" fill="rgb(206,198,11)" fg:x="71242" fg:w="25"/><text x="91.1002%" y="655.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.03%)</title><rect x="90.8502%" y="629" width="0.0319%" height="15" fill="rgb(239,165,27)" fg:x="71242" fg:w="25"/><text x="91.1002%" y="639.50"></text></g><g><title>mallocx (12 samples, 0.02%)</title><rect x="90.8668%" y="613" width="0.0153%" height="15" fill="rgb(246,44,32)" fg:x="71255" fg:w="12"/><text x="91.1168%" y="623.50"></text></g><g><title>imalloc (12 samples, 0.02%)</title><rect x="90.8668%" y="597" width="0.0153%" height="15" fill="rgb(252,65,42)" fg:x="71255" fg:w="12"/><text x="91.1168%" y="607.50"></text></g><g><title>imalloc_body (12 samples, 0.02%)</title><rect x="90.8668%" y="581" width="0.0153%" height="15" fill="rgb(246,197,18)" fg:x="71255" fg:w="12"/><text x="91.1168%" y="591.50"></text></g><g><title>imalloc_no_sample (12 samples, 0.02%)</title><rect x="90.8668%" y="565" width="0.0153%" height="15" fill="rgb(216,192,4)" fg:x="71255" fg:w="12"/><text x="91.1168%" y="575.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (87 samples, 0.11%)</title><rect x="90.8821%" y="869" width="0.1109%" height="15" fill="rgb(208,117,10)" fg:x="71267" fg:w="87"/><text x="91.1321%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (87 samples, 0.11%)</title><rect x="90.8821%" y="853" width="0.1109%" height="15" fill="rgb(240,61,47)" fg:x="71267" fg:w="87"/><text x="91.1321%" y="863.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (68 samples, 0.09%)</title><rect x="90.9943%" y="869" width="0.0867%" height="15" fill="rgb(228,178,21)" fg:x="71355" fg:w="68"/><text x="91.2443%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (64 samples, 0.08%)</title><rect x="90.9994%" y="853" width="0.0816%" height="15" fill="rgb(219,96,54)" fg:x="71359" fg:w="64"/><text x="91.2494%" y="863.50"></text></g><g><title>core::cmp::PartialEq::ne (64 samples, 0.08%)</title><rect x="90.9994%" y="837" width="0.0816%" height="15" fill="rgb(250,177,24)" fg:x="71359" fg:w="64"/><text x="91.2494%" y="847.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (60 samples, 0.08%)</title><rect x="91.0045%" y="821" width="0.0765%" height="15" fill="rgb(242,154,46)" fg:x="71363" fg:w="60"/><text x="91.2545%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.02%)</title><rect x="91.2085%" y="837" width="0.0153%" height="15" fill="rgb(226,176,29)" fg:x="71523" fg:w="12"/><text x="91.4585%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.02%)</title><rect x="91.2085%" y="821" width="0.0153%" height="15" fill="rgb(226,29,2)" fg:x="71523" fg:w="12"/><text x="91.4585%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="91.2085%" y="805" width="0.0153%" height="15" fill="rgb(237,104,14)" fg:x="71523" fg:w="12"/><text x="91.4585%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="91.2085%" y="789" width="0.0153%" height="15" fill="rgb(245,207,31)" fg:x="71523" fg:w="12"/><text x="91.4585%" y="799.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="91.2085%" y="773" width="0.0153%" height="15" fill="rgb(229,211,45)" fg:x="71523" fg:w="12"/><text x="91.4585%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (16 samples, 0.02%)</title><rect x="91.2264%" y="805" width="0.0204%" height="15" fill="rgb(229,113,15)" fg:x="71537" fg:w="16"/><text x="91.4764%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="91.2264%" y="789" width="0.0204%" height="15" fill="rgb(237,147,15)" fg:x="71537" fg:w="16"/><text x="91.4764%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.02%)</title><rect x="91.2315%" y="773" width="0.0153%" height="15" fill="rgb(244,120,12)" fg:x="71541" fg:w="12"/><text x="91.4815%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (69 samples, 0.09%)</title><rect x="91.2264%" y="821" width="0.0880%" height="15" fill="rgb(205,120,12)" fg:x="71537" fg:w="69"/><text x="91.4764%" y="831.50"></text></g><g><title>core::ptr::write (53 samples, 0.07%)</title><rect x="91.2468%" y="805" width="0.0676%" height="15" fill="rgb(231,26,45)" fg:x="71553" fg:w="53"/><text x="91.4968%" y="815.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (31 samples, 0.04%)</title><rect x="91.3144%" y="821" width="0.0395%" height="15" fill="rgb(246,98,1)" fg:x="71606" fg:w="31"/><text x="91.5644%" y="831.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (101 samples, 0.13%)</title><rect x="91.2264%" y="837" width="0.1288%" height="15" fill="rgb(207,68,45)" fg:x="71537" fg:w="101"/><text x="91.4764%" y="847.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (217 samples, 0.28%)</title><rect x="91.0810%" y="869" width="0.2767%" height="15" fill="rgb(231,27,38)" fg:x="71423" fg:w="217"/><text x="91.3310%" y="879.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (215 samples, 0.27%)</title><rect x="91.0836%" y="853" width="0.2742%" height="15" fill="rgb(214,223,3)" fg:x="71425" fg:w="215"/><text x="91.3336%" y="863.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (13 samples, 0.02%)</title><rect x="91.4253%" y="853" width="0.0166%" height="15" fill="rgb(228,195,46)" fg:x="71693" fg:w="13"/><text x="91.6753%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.02%)</title><rect x="91.4253%" y="837" width="0.0166%" height="15" fill="rgb(231,100,42)" fg:x="71693" fg:w="13"/><text x="91.6753%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.02%)</title><rect x="91.4253%" y="821" width="0.0166%" height="15" fill="rgb(236,53,4)" fg:x="71693" fg:w="13"/><text x="91.6753%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.02%)</title><rect x="91.4253%" y="805" width="0.0166%" height="15" fill="rgb(230,152,12)" fg:x="71693" fg:w="13"/><text x="91.6753%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.02%)</title><rect x="91.4253%" y="789" width="0.0166%" height="15" fill="rgb(226,101,19)" fg:x="71693" fg:w="13"/><text x="91.6753%" y="799.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.02%)</title><rect x="91.4253%" y="773" width="0.0166%" height="15" fill="rgb(250,149,32)" fg:x="71693" fg:w="13"/><text x="91.6753%" y="783.50"></text></g><g><title>__rust_alloc (16 samples, 0.02%)</title><rect x="91.4508%" y="677" width="0.0204%" height="15" fill="rgb(232,178,12)" fg:x="71713" fg:w="16"/><text x="91.7008%" y="687.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.02%)</title><rect x="91.4508%" y="661" width="0.0204%" height="15" fill="rgb(246,151,17)" fg:x="71713" fg:w="16"/><text x="91.7008%" y="671.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (144 samples, 0.18%)</title><rect x="91.3577%" y="869" width="0.1836%" height="15" fill="rgb(252,17,51)" fg:x="71640" fg:w="144"/><text x="91.6077%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (78 samples, 0.10%)</title><rect x="91.4419%" y="853" width="0.0995%" height="15" fill="rgb(250,207,23)" fg:x="71706" fg:w="78"/><text x="91.6919%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (78 samples, 0.10%)</title><rect x="91.4419%" y="837" width="0.0995%" height="15" fill="rgb(205,27,5)" fg:x="71706" fg:w="78"/><text x="91.6919%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (78 samples, 0.10%)</title><rect x="91.4419%" y="821" width="0.0995%" height="15" fill="rgb(224,32,19)" fg:x="71706" fg:w="78"/><text x="91.6919%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (78 samples, 0.10%)</title><rect x="91.4419%" y="805" width="0.0995%" height="15" fill="rgb(247,214,40)" fg:x="71706" fg:w="78"/><text x="91.6919%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (78 samples, 0.10%)</title><rect x="91.4419%" y="789" width="0.0995%" height="15" fill="rgb(239,199,17)" fg:x="71706" fg:w="78"/><text x="91.6919%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (78 samples, 0.10%)</title><rect x="91.4419%" y="773" width="0.0995%" height="15" fill="rgb(251,159,9)" fg:x="71706" fg:w="78"/><text x="91.6919%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (78 samples, 0.10%)</title><rect x="91.4419%" y="757" width="0.0995%" height="15" fill="rgb(225,78,32)" fg:x="71706" fg:w="78"/><text x="91.6919%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (78 samples, 0.10%)</title><rect x="91.4419%" y="741" width="0.0995%" height="15" fill="rgb(206,97,47)" fg:x="71706" fg:w="78"/><text x="91.6919%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (78 samples, 0.10%)</title><rect x="91.4419%" y="725" width="0.0995%" height="15" fill="rgb(227,107,4)" fg:x="71706" fg:w="78"/><text x="91.6919%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (78 samples, 0.10%)</title><rect x="91.4419%" y="709" width="0.0995%" height="15" fill="rgb(241,146,50)" fg:x="71706" fg:w="78"/><text x="91.6919%" y="719.50"></text></g><g><title>alloc::alloc::alloc (78 samples, 0.10%)</title><rect x="91.4419%" y="693" width="0.0995%" height="15" fill="rgb(232,92,30)" fg:x="71706" fg:w="78"/><text x="91.6919%" y="703.50"></text></g><g><title>mallocx (55 samples, 0.07%)</title><rect x="91.4712%" y="677" width="0.0701%" height="15" fill="rgb(222,0,40)" fg:x="71729" fg:w="55"/><text x="91.7212%" y="687.50"></text></g><g><title>imalloc (55 samples, 0.07%)</title><rect x="91.4712%" y="661" width="0.0701%" height="15" fill="rgb(219,54,33)" fg:x="71729" fg:w="55"/><text x="91.7212%" y="671.50"></text></g><g><title>imalloc_body (55 samples, 0.07%)</title><rect x="91.4712%" y="645" width="0.0701%" height="15" fill="rgb(226,209,28)" fg:x="71729" fg:w="55"/><text x="91.7212%" y="655.50"></text></g><g><title>imalloc_no_sample (55 samples, 0.07%)</title><rect x="91.4712%" y="629" width="0.0701%" height="15" fill="rgb(254,205,35)" fg:x="71729" fg:w="55"/><text x="91.7212%" y="639.50"></text></g><g><title>iallocztm (55 samples, 0.07%)</title><rect x="91.4712%" y="613" width="0.0701%" height="15" fill="rgb(230,159,3)" fg:x="71729" fg:w="55"/><text x="91.7212%" y="623.50"></text></g><g><title>arena_malloc (55 samples, 0.07%)</title><rect x="91.4712%" y="597" width="0.0701%" height="15" fill="rgb(232,190,24)" fg:x="71729" fg:w="55"/><text x="91.7212%" y="607.50"></text></g><g><title>tcache_alloc_small (55 samples, 0.07%)</title><rect x="91.4712%" y="581" width="0.0701%" height="15" fill="rgb(217,227,44)" fg:x="71729" fg:w="55"/><text x="91.7212%" y="591.50"></text></g><g><title>sz_index2size (55 samples, 0.07%)</title><rect x="91.4712%" y="565" width="0.0701%" height="15" fill="rgb(236,211,1)" fg:x="71729" fg:w="55"/><text x="91.7212%" y="575.50"></text></g><g><title>sz_index2size_lookup (55 samples, 0.07%)</title><rect x="91.4712%" y="549" width="0.0701%" height="15" fill="rgb(250,127,46)" fg:x="71729" fg:w="55"/><text x="91.7212%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="91.5414%" y="853" width="0.0153%" height="15" fill="rgb(229,213,6)" fg:x="71784" fg:w="12"/><text x="91.7914%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (56 samples, 0.07%)</title><rect x="91.5414%" y="869" width="0.0714%" height="15" fill="rgb(237,15,36)" fg:x="71784" fg:w="56"/><text x="91.7914%" y="879.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (44 samples, 0.06%)</title><rect x="91.5567%" y="853" width="0.0561%" height="15" fill="rgb(213,131,41)" fg:x="71796" fg:w="44"/><text x="91.8067%" y="863.50"></text></g><g><title>core::mem::replace (44 samples, 0.06%)</title><rect x="91.5567%" y="837" width="0.0561%" height="15" fill="rgb(225,82,44)" fg:x="71796" fg:w="44"/><text x="91.8067%" y="847.50"></text></g><g><title>core::ptr::write (44 samples, 0.06%)</title><rect x="91.5567%" y="821" width="0.0561%" height="15" fill="rgb(249,42,11)" fg:x="71796" fg:w="44"/><text x="91.8067%" y="831.50"></text></g><g><title>inallocx (37 samples, 0.05%)</title><rect x="91.6128%" y="853" width="0.0472%" height="15" fill="rgb(253,11,29)" fg:x="71840" fg:w="37"/><text x="91.8628%" y="863.50"></text></g><g><title>sz_s2u (37 samples, 0.05%)</title><rect x="91.6128%" y="837" width="0.0472%" height="15" fill="rgb(206,8,54)" fg:x="71840" fg:w="37"/><text x="91.8628%" y="847.50"></text></g><g><title>sz_s2u_lookup (37 samples, 0.05%)</title><rect x="91.6128%" y="821" width="0.0472%" height="15" fill="rgb(222,186,2)" fg:x="71840" fg:w="37"/><text x="91.8628%" y="831.50"></text></g><g><title>sz_size2index_lookup (37 samples, 0.05%)</title><rect x="91.6128%" y="805" width="0.0472%" height="15" fill="rgb(221,206,53)" fg:x="71840" fg:w="37"/><text x="91.8628%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (1,436 samples, 1.83%)</title><rect x="89.8300%" y="885" width="1.8312%" height="15" fill="rgb(230,150,21)" fg:x="70442" fg:w="1436"/><text x="90.0800%" y="895.50">m..</text></g><g><title>sdallocx (38 samples, 0.05%)</title><rect x="91.6128%" y="869" width="0.0485%" height="15" fill="rgb(253,202,10)" fg:x="71840" fg:w="38"/><text x="91.8628%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="91.6676%" y="709" width="0.0217%" height="15" fill="rgb(238,109,40)" fg:x="71883" fg:w="17"/><text x="91.9176%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (17 samples, 0.02%)</title><rect x="91.6676%" y="693" width="0.0217%" height="15" fill="rgb(247,120,22)" fg:x="71883" fg:w="17"/><text x="91.9176%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.02%)</title><rect x="91.6676%" y="677" width="0.0217%" height="15" fill="rgb(207,43,30)" fg:x="71883" fg:w="17"/><text x="91.9176%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.02%)</title><rect x="91.6676%" y="661" width="0.0217%" height="15" fill="rgb(213,211,24)" fg:x="71883" fg:w="17"/><text x="91.9176%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.02%)</title><rect x="91.6676%" y="645" width="0.0217%" height="15" fill="rgb(239,73,39)" fg:x="71883" fg:w="17"/><text x="91.9176%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (17 samples, 0.02%)</title><rect x="91.6676%" y="629" width="0.0217%" height="15" fill="rgb(245,182,19)" fg:x="71883" fg:w="17"/><text x="91.9176%" y="639.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (10 samples, 0.01%)</title><rect x="91.6765%" y="613" width="0.0128%" height="15" fill="rgb(247,143,26)" fg:x="71890" fg:w="10"/><text x="91.9265%" y="623.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (9 samples, 0.01%)</title><rect x="91.6778%" y="597" width="0.0115%" height="15" fill="rgb(228,191,23)" fg:x="71891" fg:w="9"/><text x="91.9278%" y="607.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (9 samples, 0.01%)</title><rect x="91.6778%" y="581" width="0.0115%" height="15" fill="rgb(253,165,31)" fg:x="71891" fg:w="9"/><text x="91.9278%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (23 samples, 0.03%)</title><rect x="91.6651%" y="741" width="0.0293%" height="15" fill="rgb(234,138,20)" fg:x="71881" fg:w="23"/><text x="91.9151%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (23 samples, 0.03%)</title><rect x="91.6651%" y="725" width="0.0293%" height="15" fill="rgb(218,191,29)" fg:x="71881" fg:w="23"/><text x="91.9151%" y="735.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (28 samples, 0.04%)</title><rect x="91.6612%" y="885" width="0.0357%" height="15" fill="rgb(221,157,19)" fg:x="71878" fg:w="28"/><text x="91.9112%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (27 samples, 0.03%)</title><rect x="91.6625%" y="869" width="0.0344%" height="15" fill="rgb(237,26,42)" fg:x="71879" fg:w="27"/><text x="91.9125%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (27 samples, 0.03%)</title><rect x="91.6625%" y="853" width="0.0344%" height="15" fill="rgb(220,163,24)" fg:x="71879" fg:w="27"/><text x="91.9125%" y="863.50"></text></g><g><title>core::iter::adapters::try_process (27 samples, 0.03%)</title><rect x="91.6625%" y="837" width="0.0344%" height="15" fill="rgb(242,115,20)" fg:x="71879" fg:w="27"/><text x="91.9125%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (27 samples, 0.03%)</title><rect x="91.6625%" y="821" width="0.0344%" height="15" fill="rgb(210,206,9)" fg:x="71879" fg:w="27"/><text x="91.9125%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (27 samples, 0.03%)</title><rect x="91.6625%" y="805" width="0.0344%" height="15" fill="rgb(208,71,17)" fg:x="71879" fg:w="27"/><text x="91.9125%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (27 samples, 0.03%)</title><rect x="91.6625%" y="789" width="0.0344%" height="15" fill="rgb(233,7,5)" fg:x="71879" fg:w="27"/><text x="91.9125%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.03%)</title><rect x="91.6651%" y="773" width="0.0319%" height="15" fill="rgb(207,92,33)" fg:x="71881" fg:w="25"/><text x="91.9151%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (25 samples, 0.03%)</title><rect x="91.6651%" y="757" width="0.0319%" height="15" fill="rgb(218,87,9)" fg:x="71881" fg:w="25"/><text x="91.9151%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::last_n (22 samples, 0.03%)</title><rect x="91.6970%" y="885" width="0.0281%" height="15" fill="rgb(219,47,37)" fg:x="71906" fg:w="22"/><text x="91.9470%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::popn (20 samples, 0.03%)</title><rect x="91.7250%" y="885" width="0.0255%" height="15" fill="rgb(221,152,34)" fg:x="71928" fg:w="20"/><text x="91.9750%" y="895.50"></text></g><g><title>move_vm_runtime::loader::Loader::function_at (151 samples, 0.19%)</title><rect x="91.7505%" y="885" width="0.1926%" height="15" fill="rgb(235,176,21)" fg:x="71948" fg:w="151"/><text x="92.0005%" y="895.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (151 samples, 0.19%)</title><rect x="91.7505%" y="869" width="0.1926%" height="15" fill="rgb(232,212,21)" fg:x="71948" fg:w="151"/><text x="92.0005%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (151 samples, 0.19%)</title><rect x="91.7505%" y="853" width="0.1926%" height="15" fill="rgb(245,82,39)" fg:x="71948" fg:w="151"/><text x="92.0005%" y="863.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (151 samples, 0.19%)</title><rect x="91.7505%" y="837" width="0.1926%" height="15" fill="rgb(241,52,51)" fg:x="71948" fg:w="151"/><text x="92.0005%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (151 samples, 0.19%)</title><rect x="91.7505%" y="821" width="0.1926%" height="15" fill="rgb(219,91,24)" fg:x="71948" fg:w="151"/><text x="92.0005%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (151 samples, 0.19%)</title><rect x="91.7505%" y="805" width="0.1926%" height="15" fill="rgb(241,142,12)" fg:x="71948" fg:w="151"/><text x="92.0005%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Resolver::function_from_handle (23 samples, 0.03%)</title><rect x="91.9431%" y="885" width="0.0293%" height="15" fill="rgb(230,27,9)" fg:x="72099" fg:w="23"/><text x="92.1931%" y="895.50"></text></g><g><title>move_vm_runtime::loader::Resolver::function_from_instantiation (8 samples, 0.01%)</title><rect x="91.9724%" y="885" width="0.0102%" height="15" fill="rgb(249,181,32)" fg:x="72122" fg:w="8"/><text x="92.2224%" y="895.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (126 samples, 0.16%)</title><rect x="91.9826%" y="869" width="0.1607%" height="15" fill="rgb(230,107,3)" fg:x="72130" fg:w="126"/><text x="92.2326%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (126 samples, 0.16%)</title><rect x="91.9826%" y="853" width="0.1607%" height="15" fill="rgb(246,204,14)" fg:x="72130" fg:w="126"/><text x="92.2326%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.04%)</title><rect x="92.1433%" y="821" width="0.0395%" height="15" fill="rgb(213,192,47)" fg:x="72256" fg:w="31"/><text x="92.3933%" y="831.50"></text></g><g><title>mallocx (22 samples, 0.03%)</title><rect x="92.1548%" y="805" width="0.0281%" height="15" fill="rgb(240,44,36)" fg:x="72265" fg:w="22"/><text x="92.4048%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (41 samples, 0.05%)</title><rect x="92.1433%" y="869" width="0.0523%" height="15" fill="rgb(244,209,38)" fg:x="72256" fg:w="41"/><text x="92.3933%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (41 samples, 0.05%)</title><rect x="92.1433%" y="853" width="0.0523%" height="15" fill="rgb(219,34,37)" fg:x="72256" fg:w="41"/><text x="92.3933%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (41 samples, 0.05%)</title><rect x="92.1433%" y="837" width="0.0523%" height="15" fill="rgb(210,28,6)" fg:x="72256" fg:w="41"/><text x="92.3933%" y="847.50"></text></g><g><title>core::alloc::layout::Layout::array (10 samples, 0.01%)</title><rect x="92.1828%" y="821" width="0.0128%" height="15" fill="rgb(244,110,52)" fg:x="72287" fg:w="10"/><text x="92.4328%" y="831.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (10 samples, 0.01%)</title><rect x="92.1828%" y="805" width="0.0128%" height="15" fill="rgb(254,124,47)" fg:x="72287" fg:w="10"/><text x="92.4328%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_function (299 samples, 0.38%)</title><rect x="91.9826%" y="885" width="0.3813%" height="15" fill="rgb(254,110,13)" fg:x="72130" fg:w="299"/><text x="92.2326%" y="895.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (132 samples, 0.17%)</title><rect x="92.1956%" y="869" width="0.1683%" height="15" fill="rgb(252,57,21)" fg:x="72297" fg:w="132"/><text x="92.4456%" y="879.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (130 samples, 0.17%)</title><rect x="92.1981%" y="853" width="0.1658%" height="15" fill="rgb(242,60,45)" fg:x="72299" fg:w="130"/><text x="92.4481%" y="863.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (33 samples, 0.04%)</title><rect x="92.3218%" y="837" width="0.0421%" height="15" fill="rgb(234,49,30)" fg:x="72396" fg:w="33"/><text x="92.5718%" y="847.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (33 samples, 0.04%)</title><rect x="92.3218%" y="821" width="0.0421%" height="15" fill="rgb(218,98,6)" fg:x="72396" fg:w="33"/><text x="92.5718%" y="831.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (32 samples, 0.04%)</title><rect x="92.3231%" y="805" width="0.0408%" height="15" fill="rgb(220,174,29)" fg:x="72397" fg:w="32"/><text x="92.5731%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (56 samples, 0.07%)</title><rect x="92.3639%" y="869" width="0.0714%" height="15" fill="rgb(236,163,23)" fg:x="72429" fg:w="56"/><text x="92.6139%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.01%)</title><rect x="92.4404%" y="805" width="0.0128%" height="15" fill="rgb(242,114,45)" fg:x="72489" fg:w="10"/><text x="92.6904%" y="815.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.01%)</title><rect x="92.4404%" y="789" width="0.0128%" height="15" fill="rgb(232,10,53)" fg:x="72489" fg:w="10"/><text x="92.6904%" y="799.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.01%)</title><rect x="92.4404%" y="773" width="0.0128%" height="15" fill="rgb(245,108,29)" fg:x="72489" fg:w="10"/><text x="92.6904%" y="783.50"></text></g><g><title>rallocx (9 samples, 0.01%)</title><rect x="92.4417%" y="757" width="0.0115%" height="15" fill="rgb(240,89,53)" fg:x="72490" fg:w="9"/><text x="92.6917%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.04%)</title><rect x="92.4353%" y="821" width="0.0395%" height="15" fill="rgb(226,60,45)" fg:x="72485" fg:w="31"/><text x="92.6853%" y="831.50"></text></g><g><title>mallocx (14 samples, 0.02%)</title><rect x="92.4570%" y="805" width="0.0179%" height="15" fill="rgb(230,41,44)" fg:x="72502" fg:w="14"/><text x="92.7070%" y="815.50"></text></g><g><title>imalloc (14 samples, 0.02%)</title><rect x="92.4570%" y="789" width="0.0179%" height="15" fill="rgb(230,26,20)" fg:x="72502" fg:w="14"/><text x="92.7070%" y="799.50"></text></g><g><title>imalloc_body (14 samples, 0.02%)</title><rect x="92.4570%" y="773" width="0.0179%" height="15" fill="rgb(237,170,32)" fg:x="72502" fg:w="14"/><text x="92.7070%" y="783.50"></text></g><g><title>sz_index2size (13 samples, 0.02%)</title><rect x="92.4583%" y="757" width="0.0166%" height="15" fill="rgb(212,35,42)" fg:x="72503" fg:w="13"/><text x="92.7083%" y="767.50"></text></g><g><title>sz_index2size_lookup (13 samples, 0.02%)</title><rect x="92.4583%" y="741" width="0.0166%" height="15" fill="rgb(227,31,34)" fg:x="72503" fg:w="13"/><text x="92.7083%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (91 samples, 0.12%)</title><rect x="92.3639%" y="885" width="0.1160%" height="15" fill="rgb(216,19,18)" fg:x="72429" fg:w="91"/><text x="92.6139%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (35 samples, 0.04%)</title><rect x="92.4353%" y="869" width="0.0446%" height="15" fill="rgb(211,133,42)" fg:x="72485" fg:w="35"/><text x="92.6853%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (35 samples, 0.04%)</title><rect x="92.4353%" y="853" width="0.0446%" height="15" fill="rgb(244,66,13)" fg:x="72485" fg:w="35"/><text x="92.6853%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (35 samples, 0.04%)</title><rect x="92.4353%" y="837" width="0.0446%" height="15" fill="rgb(218,185,50)" fg:x="72485" fg:w="35"/><text x="92.6853%" y="847.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (59,523 samples, 75.91%)</title><rect x="16.6609%" y="917" width="75.9057%" height="15" fill="rgb(219,149,13)" fg:x="13065" fg:w="59523"/><text x="16.9109%" y="927.50">move_vm_runtime::interpreter::Interpreter::entrypoint</text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (59,523 samples, 75.91%)</title><rect x="16.6609%" y="901" width="75.9057%" height="15" fill="rgb(221,125,0)" fg:x="13065" fg:w="59523"/><text x="16.9109%" y="911.50">move_vm_runtime::interpreter::Interpreter::execute_main</text></g><g><title>sdallocx (63 samples, 0.08%)</title><rect x="92.4863%" y="885" width="0.0803%" height="15" fill="rgb(247,126,27)" fg:x="72525" fg:w="63"/><text x="92.7363%" y="895.50"></text></g><g><title>isfree (63 samples, 0.08%)</title><rect x="92.4863%" y="869" width="0.0803%" height="15" fill="rgb(250,138,30)" fg:x="72525" fg:w="63"/><text x="92.7363%" y="879.50"></text></g><g><title>isdalloct (63 samples, 0.08%)</title><rect x="92.4863%" y="853" width="0.0803%" height="15" fill="rgb(230,151,9)" fg:x="72525" fg:w="63"/><text x="92.7363%" y="863.50"></text></g><g><title>arena_sdalloc (63 samples, 0.08%)</title><rect x="92.4863%" y="837" width="0.0803%" height="15" fill="rgb(233,80,38)" fg:x="72525" fg:w="63"/><text x="92.7363%" y="847.50"></text></g><g><title>tcache_dalloc_small (63 samples, 0.08%)</title><rect x="92.4863%" y="821" width="0.0803%" height="15" fill="rgb(232,68,43)" fg:x="72525" fg:w="63"/><text x="92.7363%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (22 samples, 0.03%)</title><rect x="92.5743%" y="645" width="0.0281%" height="15" fill="rgb(254,5,50)" fg:x="72594" fg:w="22"/><text x="92.8243%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (22 samples, 0.03%)</title><rect x="92.5743%" y="629" width="0.0281%" height="15" fill="rgb(225,45,5)" fg:x="72594" fg:w="22"/><text x="92.8243%" y="639.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (22 samples, 0.03%)</title><rect x="92.5743%" y="613" width="0.0281%" height="15" fill="rgb(239,22,3)" fg:x="72594" fg:w="22"/><text x="92.8243%" y="623.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (22 samples, 0.03%)</title><rect x="92.5743%" y="597" width="0.0281%" height="15" fill="rgb(243,129,0)" fg:x="72594" fg:w="22"/><text x="92.8243%" y="607.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (17 samples, 0.02%)</title><rect x="92.5807%" y="581" width="0.0217%" height="15" fill="rgb(223,164,0)" fg:x="72599" fg:w="17"/><text x="92.8307%" y="591.50"></text></g><g><title>bcs::de::from_bytes_seed (17 samples, 0.02%)</title><rect x="92.5807%" y="565" width="0.0217%" height="15" fill="rgb(221,46,29)" fg:x="72599" fg:w="17"/><text x="92.8307%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.04%)</title><rect x="92.5743%" y="693" width="0.0395%" height="15" fill="rgb(205,97,47)" fg:x="72594" fg:w="31"/><text x="92.8243%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.04%)</title><rect x="92.5743%" y="677" width="0.0395%" height="15" fill="rgb(249,14,8)" fg:x="72594" fg:w="31"/><text x="92.8243%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (31 samples, 0.04%)</title><rect x="92.5743%" y="661" width="0.0395%" height="15" fill="rgb(216,77,3)" fg:x="72594" fg:w="31"/><text x="92.8243%" y="671.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="92.6024%" y="645" width="0.0115%" height="15" fill="rgb(206,168,54)" fg:x="72616" fg:w="9"/><text x="92.8524%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.05%)</title><rect x="92.5743%" y="741" width="0.0485%" height="15" fill="rgb(236,3,41)" fg:x="72594" fg:w="38"/><text x="92.8243%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (38 samples, 0.05%)</title><rect x="92.5743%" y="725" width="0.0485%" height="15" fill="rgb(231,132,24)" fg:x="72594" fg:w="38"/><text x="92.8243%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (38 samples, 0.05%)</title><rect x="92.5743%" y="709" width="0.0485%" height="15" fill="rgb(227,221,40)" fg:x="72594" fg:w="38"/><text x="92.8243%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (39 samples, 0.05%)</title><rect x="92.5743%" y="773" width="0.0497%" height="15" fill="rgb(233,151,11)" fg:x="72594" fg:w="39"/><text x="92.8243%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (39 samples, 0.05%)</title><rect x="92.5743%" y="757" width="0.0497%" height="15" fill="rgb(247,81,35)" fg:x="72594" fg:w="39"/><text x="92.8243%" y="767.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (8 samples, 0.01%)</title><rect x="92.6291%" y="565" width="0.0102%" height="15" fill="rgb(243,128,48)" fg:x="72637" fg:w="8"/><text x="92.8791%" y="575.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (8 samples, 0.01%)</title><rect x="92.6291%" y="549" width="0.0102%" height="15" fill="rgb(253,16,10)" fg:x="72637" fg:w="8"/><text x="92.8791%" y="559.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (8 samples, 0.01%)</title><rect x="92.6291%" y="533" width="0.0102%" height="15" fill="rgb(228,67,27)" fg:x="72637" fg:w="8"/><text x="92.8791%" y="543.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (8 samples, 0.01%)</title><rect x="92.6291%" y="517" width="0.0102%" height="15" fill="rgb(231,105,25)" fg:x="72637" fg:w="8"/><text x="92.8791%" y="527.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (14 samples, 0.02%)</title><rect x="92.6253%" y="629" width="0.0179%" height="15" fill="rgb(213,166,47)" fg:x="72634" fg:w="14"/><text x="92.8753%" y="639.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (14 samples, 0.02%)</title><rect x="92.6253%" y="613" width="0.0179%" height="15" fill="rgb(209,27,10)" fg:x="72634" fg:w="14"/><text x="92.8753%" y="623.50"></text></g><g><title>bcs::de::from_bytes_seed (13 samples, 0.02%)</title><rect x="92.6266%" y="597" width="0.0166%" height="15" fill="rgb(241,44,30)" fg:x="72635" fg:w="13"/><text x="92.8766%" y="607.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 0.02%)</title><rect x="92.6266%" y="581" width="0.0166%" height="15" fill="rgb(223,216,15)" fg:x="72635" fg:w="13"/><text x="92.8766%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="92.6240%" y="773" width="0.0230%" height="15" fill="rgb(227,14,7)" fg:x="72633" fg:w="18"/><text x="92.8740%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (18 samples, 0.02%)</title><rect x="92.6240%" y="757" width="0.0230%" height="15" fill="rgb(237,14,5)" fg:x="72633" fg:w="18"/><text x="92.8740%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.02%)</title><rect x="92.6240%" y="741" width="0.0230%" height="15" fill="rgb(232,14,36)" fg:x="72633" fg:w="18"/><text x="92.8740%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.02%)</title><rect x="92.6240%" y="725" width="0.0230%" height="15" fill="rgb(234,0,38)" fg:x="72633" fg:w="18"/><text x="92.8740%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.02%)</title><rect x="92.6240%" y="709" width="0.0230%" height="15" fill="rgb(207,170,14)" fg:x="72633" fg:w="18"/><text x="92.8740%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.02%)</title><rect x="92.6240%" y="693" width="0.0230%" height="15" fill="rgb(252,45,13)" fg:x="72633" fg:w="18"/><text x="92.8740%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (18 samples, 0.02%)</title><rect x="92.6240%" y="677" width="0.0230%" height="15" fill="rgb(213,142,7)" fg:x="72633" fg:w="18"/><text x="92.8740%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (18 samples, 0.02%)</title><rect x="92.6240%" y="661" width="0.0230%" height="15" fill="rgb(216,157,23)" fg:x="72633" fg:w="18"/><text x="92.8740%" y="671.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (18 samples, 0.02%)</title><rect x="92.6240%" y="645" width="0.0230%" height="15" fill="rgb(212,145,33)" fg:x="72633" fg:w="18"/><text x="92.8740%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (60 samples, 0.08%)</title><rect x="92.5718%" y="901" width="0.0765%" height="15" fill="rgb(233,26,13)" fg:x="72592" fg:w="60"/><text x="92.8218%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (60 samples, 0.08%)</title><rect x="92.5718%" y="885" width="0.0765%" height="15" fill="rgb(219,196,19)" fg:x="72592" fg:w="60"/><text x="92.8218%" y="895.50"></text></g><g><title>core::iter::adapters::try_process (60 samples, 0.08%)</title><rect x="92.5718%" y="869" width="0.0765%" height="15" fill="rgb(246,56,21)" fg:x="72592" fg:w="60"/><text x="92.8218%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (60 samples, 0.08%)</title><rect x="92.5718%" y="853" width="0.0765%" height="15" fill="rgb(222,28,53)" fg:x="72592" fg:w="60"/><text x="92.8218%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (60 samples, 0.08%)</title><rect x="92.5718%" y="837" width="0.0765%" height="15" fill="rgb(224,5,27)" fg:x="72592" fg:w="60"/><text x="92.8218%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (60 samples, 0.08%)</title><rect x="92.5718%" y="821" width="0.0765%" height="15" fill="rgb(220,153,33)" fg:x="72592" fg:w="60"/><text x="92.8218%" y="831.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (58 samples, 0.07%)</title><rect x="92.5743%" y="805" width="0.0740%" height="15" fill="rgb(226,58,19)" fg:x="72594" fg:w="58"/><text x="92.8243%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (58 samples, 0.07%)</title><rect x="92.5743%" y="789" width="0.0740%" height="15" fill="rgb(239,112,23)" fg:x="72594" fg:w="58"/><text x="92.8243%" y="799.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args (66 samples, 0.08%)</title><rect x="92.5667%" y="917" width="0.0842%" height="15" fill="rgb(251,213,20)" fg:x="72588" fg:w="66"/><text x="92.8167%" y="927.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_entry_function (59,729 samples, 76.17%)</title><rect x="16.4964%" y="965" width="76.1684%" height="15" fill="rgb(215,181,21)" fg:x="12936" fg:w="59729"/><text x="16.7464%" y="975.50">move_vm_runtime::session::Session&lt;S&gt;::execute_entry_function</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (59,729 samples, 76.17%)</title><rect x="16.4964%" y="949" width="76.1684%" height="15" fill="rgb(240,8,35)" fg:x="12936" fg:w="59729"/><text x="16.7464%" y="959.50">move_vm_runtime::runtime::VMRuntime::execute_function</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (59,640 samples, 76.05%)</title><rect x="16.6099%" y="933" width="76.0549%" height="15" fill="rgb(232,203,3)" fg:x="13025" fg:w="59640"/><text x="16.8599%" y="943.50">move_vm_runtime::runtime::VMRuntime::execute_function_impl</text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (11 samples, 0.01%)</title><rect x="92.6508%" y="917" width="0.0140%" height="15" fill="rgb(214,202,43)" fg:x="72654" fg:w="11"/><text x="92.9008%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.01%)</title><rect x="92.6534%" y="901" width="0.0115%" height="15" fill="rgb(254,35,11)" fg:x="72656" fg:w="9"/><text x="92.9034%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="92.6534%" y="885" width="0.0115%" height="15" fill="rgb(239,173,13)" fg:x="72656" fg:w="9"/><text x="92.9034%" y="895.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.01%)</title><rect x="92.6534%" y="869" width="0.0115%" height="15" fill="rgb(220,141,0)" fg:x="72656" fg:w="9"/><text x="92.9034%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (9 samples, 0.01%)</title><rect x="92.6534%" y="853" width="0.0115%" height="15" fill="rgb(210,98,12)" fg:x="72656" fg:w="9"/><text x="92.9034%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.01%)</title><rect x="92.6534%" y="837" width="0.0115%" height="15" fill="rgb(254,153,22)" fg:x="72656" fg:w="9"/><text x="92.9034%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="92.6534%" y="821" width="0.0115%" height="15" fill="rgb(247,223,17)" fg:x="72656" fg:w="9"/><text x="92.9034%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="92.6534%" y="805" width="0.0115%" height="15" fill="rgb(246,56,7)" fg:x="72656" fg:w="9"/><text x="92.9034%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (12 samples, 0.02%)</title><rect x="92.6916%" y="645" width="0.0153%" height="15" fill="rgb(240,226,12)" fg:x="72686" fg:w="12"/><text x="92.9416%" y="655.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (12 samples, 0.02%)</title><rect x="92.6916%" y="629" width="0.0153%" height="15" fill="rgb(205,87,46)" fg:x="72686" fg:w="12"/><text x="92.9416%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.03%)</title><rect x="92.6853%" y="805" width="0.0319%" height="15" fill="rgb(245,214,51)" fg:x="72681" fg:w="25"/><text x="92.9353%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (25 samples, 0.03%)</title><rect x="92.6853%" y="789" width="0.0319%" height="15" fill="rgb(223,172,33)" fg:x="72681" fg:w="25"/><text x="92.9353%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.03%)</title><rect x="92.6853%" y="773" width="0.0319%" height="15" fill="rgb(227,203,34)" fg:x="72681" fg:w="25"/><text x="92.9353%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (25 samples, 0.03%)</title><rect x="92.6853%" y="757" width="0.0319%" height="15" fill="rgb(248,143,44)" fg:x="72681" fg:w="25"/><text x="92.9353%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.03%)</title><rect x="92.6853%" y="741" width="0.0319%" height="15" fill="rgb(226,162,5)" fg:x="72681" fg:w="25"/><text x="92.9353%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.03%)</title><rect x="92.6853%" y="725" width="0.0319%" height="15" fill="rgb(211,143,1)" fg:x="72681" fg:w="25"/><text x="92.9353%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 0.03%)</title><rect x="92.6853%" y="709" width="0.0319%" height="15" fill="rgb(224,96,15)" fg:x="72681" fg:w="25"/><text x="92.9353%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (25 samples, 0.03%)</title><rect x="92.6853%" y="693" width="0.0319%" height="15" fill="rgb(222,4,38)" fg:x="72681" fg:w="25"/><text x="92.9353%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (25 samples, 0.03%)</title><rect x="92.6853%" y="677" width="0.0319%" height="15" fill="rgb(253,228,15)" fg:x="72681" fg:w="25"/><text x="92.9353%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_type (25 samples, 0.03%)</title><rect x="92.6853%" y="661" width="0.0319%" height="15" fill="rgb(242,194,12)" fg:x="72681" fg:w="25"/><text x="92.9353%" y="671.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_struct_by_name (8 samples, 0.01%)</title><rect x="92.7069%" y="645" width="0.0102%" height="15" fill="rgb(214,177,31)" fg:x="72698" fg:w="8"/><text x="92.9569%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (9 samples, 0.01%)</title><rect x="92.7248%" y="677" width="0.0115%" height="15" fill="rgb(226,58,51)" fg:x="72712" fg:w="9"/><text x="92.9748%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (9 samples, 0.01%)</title><rect x="92.7248%" y="661" width="0.0115%" height="15" fill="rgb(250,119,16)" fg:x="72712" fg:w="9"/><text x="92.9748%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (9 samples, 0.01%)</title><rect x="92.7248%" y="645" width="0.0115%" height="15" fill="rgb(223,128,53)" fg:x="72712" fg:w="9"/><text x="92.9748%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="92.7248%" y="629" width="0.0115%" height="15" fill="rgb(251,199,15)" fg:x="72712" fg:w="9"/><text x="92.9748%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="92.7248%" y="613" width="0.0115%" height="15" fill="rgb(235,168,42)" fg:x="72712" fg:w="9"/><text x="92.9748%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="92.7248%" y="597" width="0.0115%" height="15" fill="rgb(250,210,17)" fg:x="72712" fg:w="9"/><text x="92.9748%" y="607.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (10 samples, 0.01%)</title><rect x="92.7363%" y="677" width="0.0128%" height="15" fill="rgb(226,36,41)" fg:x="72721" fg:w="10"/><text x="92.9863%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (9 samples, 0.01%)</title><rect x="92.7375%" y="661" width="0.0115%" height="15" fill="rgb(225,87,10)" fg:x="72722" fg:w="9"/><text x="92.9875%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_type (30 samples, 0.04%)</title><rect x="92.7235%" y="693" width="0.0383%" height="15" fill="rgb(228,83,9)" fg:x="72711" fg:w="30"/><text x="92.9735%" y="703.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_struct_by_name (10 samples, 0.01%)</title><rect x="92.7490%" y="677" width="0.0128%" height="15" fill="rgb(225,16,36)" fg:x="72731" fg:w="10"/><text x="92.9990%" y="687.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (8 samples, 0.01%)</title><rect x="92.7516%" y="661" width="0.0102%" height="15" fill="rgb(242,198,13)" fg:x="72733" fg:w="8"/><text x="93.0016%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.01%)</title><rect x="92.7516%" y="645" width="0.0102%" height="15" fill="rgb(239,25,51)" fg:x="72733" fg:w="8"/><text x="93.0016%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.01%)</title><rect x="92.7516%" y="629" width="0.0102%" height="15" fill="rgb(239,28,37)" fg:x="72733" fg:w="8"/><text x="93.0016%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.01%)</title><rect x="92.7516%" y="613" width="0.0102%" height="15" fill="rgb(234,70,17)" fg:x="72733" fg:w="8"/><text x="93.0016%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.05%)</title><rect x="92.7171%" y="805" width="0.0548%" height="15" fill="rgb(231,215,53)" fg:x="72706" fg:w="43"/><text x="92.9671%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (43 samples, 0.05%)</title><rect x="92.7171%" y="789" width="0.0548%" height="15" fill="rgb(218,140,42)" fg:x="72706" fg:w="43"/><text x="92.9671%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (43 samples, 0.05%)</title><rect x="92.7171%" y="773" width="0.0548%" height="15" fill="rgb(233,227,45)" fg:x="72706" fg:w="43"/><text x="92.9671%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (43 samples, 0.05%)</title><rect x="92.7171%" y="757" width="0.0548%" height="15" fill="rgb(225,189,21)" fg:x="72706" fg:w="43"/><text x="92.9671%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (43 samples, 0.05%)</title><rect x="92.7171%" y="741" width="0.0548%" height="15" fill="rgb(237,176,54)" fg:x="72706" fg:w="43"/><text x="92.9671%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (43 samples, 0.05%)</title><rect x="92.7171%" y="725" width="0.0548%" height="15" fill="rgb(215,131,46)" fg:x="72706" fg:w="43"/><text x="92.9671%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (42 samples, 0.05%)</title><rect x="92.7184%" y="709" width="0.0536%" height="15" fill="rgb(218,95,20)" fg:x="72707" fg:w="42"/><text x="92.9684%" y="719.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type (8 samples, 0.01%)</title><rect x="92.7618%" y="693" width="0.0102%" height="15" fill="rgb(208,198,12)" fg:x="72741" fg:w="8"/><text x="93.0118%" y="703.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (8 samples, 0.01%)</title><rect x="92.7618%" y="677" width="0.0102%" height="15" fill="rgb(239,107,50)" fg:x="72741" fg:w="8"/><text x="93.0118%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (75 samples, 0.10%)</title><rect x="92.6814%" y="933" width="0.0956%" height="15" fill="rgb(240,217,37)" fg:x="72678" fg:w="75"/><text x="92.9314%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (75 samples, 0.10%)</title><rect x="92.6814%" y="917" width="0.0956%" height="15" fill="rgb(242,197,49)" fg:x="72678" fg:w="75"/><text x="92.9314%" y="927.50"></text></g><g><title>core::iter::adapters::try_process (75 samples, 0.10%)</title><rect x="92.6814%" y="901" width="0.0956%" height="15" fill="rgb(219,171,17)" fg:x="72678" fg:w="75"/><text x="92.9314%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (74 samples, 0.09%)</title><rect x="92.6827%" y="885" width="0.0944%" height="15" fill="rgb(209,81,40)" fg:x="72679" fg:w="74"/><text x="92.9327%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (74 samples, 0.09%)</title><rect x="92.6827%" y="869" width="0.0944%" height="15" fill="rgb(237,156,30)" fg:x="72679" fg:w="74"/><text x="92.9327%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (74 samples, 0.09%)</title><rect x="92.6827%" y="853" width="0.0944%" height="15" fill="rgb(212,127,16)" fg:x="72679" fg:w="74"/><text x="92.9327%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (74 samples, 0.09%)</title><rect x="92.6827%" y="837" width="0.0944%" height="15" fill="rgb(226,66,32)" fg:x="72679" fg:w="74"/><text x="92.9327%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (74 samples, 0.09%)</title><rect x="92.6827%" y="821" width="0.0944%" height="15" fill="rgb(245,22,46)" fg:x="72679" fg:w="74"/><text x="92.9327%" y="831.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (18 samples, 0.02%)</title><rect x="92.8102%" y="709" width="0.0230%" height="15" fill="rgb(210,112,21)" fg:x="72779" fg:w="18"/><text x="93.0602%" y="719.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (18 samples, 0.02%)</title><rect x="92.8102%" y="693" width="0.0230%" height="15" fill="rgb(207,118,39)" fg:x="72779" fg:w="18"/><text x="93.0602%" y="703.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (15 samples, 0.02%)</title><rect x="92.8141%" y="677" width="0.0191%" height="15" fill="rgb(205,206,35)" fg:x="72782" fg:w="15"/><text x="93.0641%" y="687.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (15 samples, 0.02%)</title><rect x="92.8141%" y="661" width="0.0191%" height="15" fill="rgb(222,120,2)" fg:x="72782" fg:w="15"/><text x="93.0641%" y="671.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (25 samples, 0.03%)</title><rect x="92.8064%" y="725" width="0.0319%" height="15" fill="rgb(205,38,18)" fg:x="72776" fg:w="25"/><text x="93.0564%" y="735.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (34 samples, 0.04%)</title><rect x="92.8000%" y="741" width="0.0434%" height="15" fill="rgb(226,61,2)" fg:x="72771" fg:w="34"/><text x="93.0500%" y="751.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (35 samples, 0.04%)</title><rect x="92.8000%" y="773" width="0.0446%" height="15" fill="rgb(242,161,23)" fg:x="72771" fg:w="35"/><text x="93.0500%" y="783.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (35 samples, 0.04%)</title><rect x="92.8000%" y="757" width="0.0446%" height="15" fill="rgb(213,13,52)" fg:x="72771" fg:w="35"/><text x="93.0500%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (44 samples, 0.06%)</title><rect x="92.7898%" y="837" width="0.0561%" height="15" fill="rgb(246,209,47)" fg:x="72763" fg:w="44"/><text x="93.0398%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (43 samples, 0.05%)</title><rect x="92.7911%" y="821" width="0.0548%" height="15" fill="rgb(214,41,3)" fg:x="72764" fg:w="43"/><text x="93.0411%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (43 samples, 0.05%)</title><rect x="92.7911%" y="805" width="0.0548%" height="15" fill="rgb(236,119,38)" fg:x="72764" fg:w="43"/><text x="93.0411%" y="815.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (37 samples, 0.05%)</title><rect x="92.7988%" y="789" width="0.0472%" height="15" fill="rgb(218,50,11)" fg:x="72770" fg:w="37"/><text x="93.0488%" y="799.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (10 samples, 0.01%)</title><rect x="92.8638%" y="725" width="0.0128%" height="15" fill="rgb(228,38,11)" fg:x="72821" fg:w="10"/><text x="93.1138%" y="735.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (9 samples, 0.01%)</title><rect x="92.8651%" y="709" width="0.0115%" height="15" fill="rgb(212,13,9)" fg:x="72822" fg:w="9"/><text x="93.1151%" y="719.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (9 samples, 0.01%)</title><rect x="92.8651%" y="693" width="0.0115%" height="15" fill="rgb(208,211,9)" fg:x="72822" fg:w="9"/><text x="93.1151%" y="703.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (11 samples, 0.01%)</title><rect x="92.8638%" y="741" width="0.0140%" height="15" fill="rgb(239,39,32)" fg:x="72821" fg:w="11"/><text x="93.1138%" y="751.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (16 samples, 0.02%)</title><rect x="92.8587%" y="757" width="0.0204%" height="15" fill="rgb(254,179,26)" fg:x="72817" fg:w="16"/><text x="93.1087%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (31 samples, 0.04%)</title><rect x="92.8459%" y="837" width="0.0395%" height="15" fill="rgb(249,165,28)" fg:x="72807" fg:w="31"/><text x="93.0959%" y="847.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (24 samples, 0.03%)</title><rect x="92.8549%" y="821" width="0.0306%" height="15" fill="rgb(225,59,50)" fg:x="72814" fg:w="24"/><text x="93.1049%" y="831.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (24 samples, 0.03%)</title><rect x="92.8549%" y="805" width="0.0306%" height="15" fill="rgb(209,122,5)" fg:x="72814" fg:w="24"/><text x="93.1049%" y="815.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (24 samples, 0.03%)</title><rect x="92.8549%" y="789" width="0.0306%" height="15" fill="rgb(214,65,34)" fg:x="72814" fg:w="24"/><text x="93.1049%" y="799.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (24 samples, 0.03%)</title><rect x="92.8549%" y="773" width="0.0306%" height="15" fill="rgb(249,183,32)" fg:x="72814" fg:w="24"/><text x="93.1049%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (78 samples, 0.10%)</title><rect x="92.7873%" y="869" width="0.0995%" height="15" fill="rgb(218,122,24)" fg:x="72761" fg:w="78"/><text x="93.0373%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (76 samples, 0.10%)</title><rect x="92.7898%" y="853" width="0.0969%" height="15" fill="rgb(224,109,18)" fg:x="72763" fg:w="76"/><text x="93.0398%" y="863.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (9 samples, 0.01%)</title><rect x="92.8969%" y="757" width="0.0115%" height="15" fill="rgb(210,68,50)" fg:x="72847" fg:w="9"/><text x="93.1469%" y="767.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (11 samples, 0.01%)</title><rect x="92.8969%" y="773" width="0.0140%" height="15" fill="rgb(212,184,34)" fg:x="72847" fg:w="11"/><text x="93.1469%" y="783.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (14 samples, 0.02%)</title><rect x="92.8957%" y="789" width="0.0179%" height="15" fill="rgb(238,105,48)" fg:x="72846" fg:w="14"/><text x="93.1457%" y="799.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (19 samples, 0.02%)</title><rect x="92.8944%" y="837" width="0.0242%" height="15" fill="rgb(222,134,54)" fg:x="72845" fg:w="19"/><text x="93.1444%" y="847.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (19 samples, 0.02%)</title><rect x="92.8944%" y="821" width="0.0242%" height="15" fill="rgb(246,24,43)" fg:x="72845" fg:w="19"/><text x="93.1444%" y="831.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (19 samples, 0.02%)</title><rect x="92.8944%" y="805" width="0.0242%" height="15" fill="rgb(227,169,22)" fg:x="72845" fg:w="19"/><text x="93.1444%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (27 samples, 0.03%)</title><rect x="92.8867%" y="869" width="0.0344%" height="15" fill="rgb(253,152,4)" fg:x="72839" fg:w="27"/><text x="93.1367%" y="879.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (24 samples, 0.03%)</title><rect x="92.8906%" y="853" width="0.0306%" height="15" fill="rgb(219,158,36)" fg:x="72842" fg:w="24"/><text x="93.1406%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (111 samples, 0.14%)</title><rect x="92.7873%" y="901" width="0.1416%" height="15" fill="rgb(251,128,40)" fg:x="72761" fg:w="111"/><text x="93.0373%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (111 samples, 0.14%)</title><rect x="92.7873%" y="885" width="0.1416%" height="15" fill="rgb(254,101,39)" fg:x="72761" fg:w="111"/><text x="93.0373%" y="895.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (126 samples, 0.16%)</title><rect x="92.7771%" y="933" width="0.1607%" height="15" fill="rgb(221,168,40)" fg:x="72753" fg:w="126"/><text x="93.0271%" y="943.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (120 samples, 0.15%)</title><rect x="92.7847%" y="917" width="0.1530%" height="15" fill="rgb(221,14,27)" fg:x="72759" fg:w="120"/><text x="93.0347%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (8 samples, 0.01%)</title><rect x="92.9441%" y="917" width="0.0102%" height="15" fill="rgb(207,36,43)" fg:x="72884" fg:w="8"/><text x="93.1941%" y="927.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name::{{closure}} (8 samples, 0.01%)</title><rect x="92.9441%" y="901" width="0.0102%" height="15" fill="rgb(240,172,53)" fg:x="72884" fg:w="8"/><text x="93.1941%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.01%)</title><rect x="92.9441%" y="885" width="0.0102%" height="15" fill="rgb(241,138,43)" fg:x="72884" fg:w="8"/><text x="93.1941%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.01%)</title><rect x="92.9441%" y="869" width="0.0102%" height="15" fill="rgb(227,78,19)" fg:x="72884" fg:w="8"/><text x="93.1941%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.01%)</title><rect x="92.9441%" y="853" width="0.0102%" height="15" fill="rgb(215,127,44)" fg:x="72884" fg:w="8"/><text x="93.1941%" y="863.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function (67,169 samples, 85.66%)</title><rect x="7.2994%" y="981" width="85.6562%" height="15" fill="rgb(227,13,10)" fg:x="5724" fg:w="67169"/><text x="7.5494%" y="991.50">aptos_vm::aptos_vm::AptosVM::execute_script_or_entry_function</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::load_function (228 samples, 0.29%)</title><rect x="92.6649%" y="965" width="0.2908%" height="15" fill="rgb(249,177,6)" fg:x="72665" fg:w="228"/><text x="92.9149%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (226 samples, 0.29%)</title><rect x="92.6674%" y="949" width="0.2882%" height="15" fill="rgb(215,154,26)" fg:x="72667" fg:w="226"/><text x="92.9174%" y="959.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (9 samples, 0.01%)</title><rect x="92.9441%" y="933" width="0.0115%" height="15" fill="rgb(250,168,20)" fg:x="72884" fg:w="9"/><text x="93.1941%" y="943.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (51 samples, 0.07%)</title><rect x="92.9760%" y="917" width="0.0650%" height="15" fill="rgb(222,53,38)" fg:x="72909" fg:w="51"/><text x="93.2260%" y="927.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (50 samples, 0.06%)</title><rect x="92.9773%" y="901" width="0.0638%" height="15" fill="rgb(245,154,5)" fg:x="72910" fg:w="50"/><text x="93.2273%" y="911.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (47 samples, 0.06%)</title><rect x="92.9811%" y="885" width="0.0599%" height="15" fill="rgb(214,89,50)" fg:x="72913" fg:w="47"/><text x="93.2311%" y="895.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (47 samples, 0.06%)</title><rect x="92.9811%" y="869" width="0.0599%" height="15" fill="rgb(232,73,14)" fg:x="72913" fg:w="47"/><text x="93.2311%" y="879.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (47 samples, 0.06%)</title><rect x="92.9811%" y="853" width="0.0599%" height="15" fill="rgb(230,101,20)" fg:x="72913" fg:w="47"/><text x="93.2311%" y="863.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (47 samples, 0.06%)</title><rect x="92.9811%" y="837" width="0.0599%" height="15" fill="rgb(208,56,28)" fg:x="72913" fg:w="47"/><text x="93.2311%" y="847.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (47 samples, 0.06%)</title><rect x="92.9811%" y="821" width="0.0599%" height="15" fill="rgb(247,205,22)" fg:x="72913" fg:w="47"/><text x="93.2311%" y="831.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (47 samples, 0.06%)</title><rect x="92.9811%" y="805" width="0.0599%" height="15" fill="rgb(252,109,51)" fg:x="72913" fg:w="47"/><text x="93.2311%" y="815.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (46 samples, 0.06%)</title><rect x="92.9824%" y="789" width="0.0587%" height="15" fill="rgb(220,40,24)" fg:x="72914" fg:w="46"/><text x="93.2324%" y="799.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::update (8 samples, 0.01%)</title><rect x="93.0525%" y="709" width="0.0102%" height="15" fill="rgb(251,108,7)" fg:x="72969" fg:w="8"/><text x="93.3025%" y="719.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (21 samples, 0.03%)</title><rect x="93.0462%" y="853" width="0.0268%" height="15" fill="rgb(238,102,51)" fg:x="72964" fg:w="21"/><text x="93.2962%" y="863.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 0.03%)</title><rect x="93.0462%" y="837" width="0.0268%" height="15" fill="rgb(219,149,34)" fg:x="72964" fg:w="21"/><text x="93.2962%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (21 samples, 0.03%)</title><rect x="93.0462%" y="821" width="0.0268%" height="15" fill="rgb(239,70,0)" fg:x="72964" fg:w="21"/><text x="93.2962%" y="831.50"></text></g><g><title> 32]&gt;::serialize (21 samples, 0.03%)</title><rect x="93.0462%" y="805" width="0.0268%" height="15" fill="rgb(246,214,23)" fg:x="72964" fg:w="21"/><text x="93.2962%" y="815.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (21 samples, 0.03%)</title><rect x="93.0462%" y="789" width="0.0268%" height="15" fill="rgb(239,221,51)" fg:x="72964" fg:w="21"/><text x="93.2962%" y="799.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (21 samples, 0.03%)</title><rect x="93.0462%" y="773" width="0.0268%" height="15" fill="rgb(254,62,14)" fg:x="72964" fg:w="21"/><text x="93.2962%" y="783.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (21 samples, 0.03%)</title><rect x="93.0462%" y="757" width="0.0268%" height="15" fill="rgb(253,57,33)" fg:x="72964" fg:w="21"/><text x="93.2962%" y="767.50"></text></g><g><title>std::io::Write::write_all (21 samples, 0.03%)</title><rect x="93.0462%" y="741" width="0.0268%" height="15" fill="rgb(229,34,6)" fg:x="72964" fg:w="21"/><text x="93.2962%" y="751.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionIdHasher as std::io::Write&gt;::write (21 samples, 0.03%)</title><rect x="93.0462%" y="725" width="0.0268%" height="15" fill="rgb(235,191,23)" fg:x="72964" fg:w="21"/><text x="93.2962%" y="735.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (8 samples, 0.01%)</title><rect x="93.0627%" y="709" width="0.0102%" height="15" fill="rgb(217,207,27)" fg:x="72977" fg:w="8"/><text x="93.3127%" y="719.50"></text></g><g><title>tiny_keccak::Buffer::xorin (8 samples, 0.01%)</title><rect x="93.0627%" y="693" width="0.0102%" height="15" fill="rgb(232,41,44)" fg:x="72977" fg:w="8"/><text x="93.3127%" y="703.50"></text></g><g><title>tiny_keccak::Buffer::execute (8 samples, 0.01%)</title><rect x="93.0627%" y="677" width="0.0102%" height="15" fill="rgb(221,188,19)" fg:x="72977" fg:w="8"/><text x="93.3127%" y="687.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (8 samples, 0.01%)</title><rect x="93.0627%" y="661" width="0.0102%" height="15" fill="rgb(245,180,45)" fg:x="72977" fg:w="8"/><text x="93.3127%" y="671.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::as_uuid (82 samples, 0.10%)</title><rect x="92.9747%" y="949" width="0.1046%" height="15" fill="rgb(250,220,42)" fg:x="72908" fg:w="82"/><text x="93.2247%" y="959.50"></text></g><g><title>&lt;aptos_vm::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (81 samples, 0.10%)</title><rect x="92.9760%" y="933" width="0.1033%" height="15" fill="rgb(234,16,34)" fg:x="72909" fg:w="81"/><text x="93.2260%" y="943.50"></text></g><g><title>bcs::ser::serialize_into (30 samples, 0.04%)</title><rect x="93.0410%" y="917" width="0.0383%" height="15" fill="rgb(233,217,23)" fg:x="72960" fg:w="30"/><text x="93.2910%" y="927.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (30 samples, 0.04%)</title><rect x="93.0410%" y="901" width="0.0383%" height="15" fill="rgb(209,22,46)" fg:x="72960" fg:w="30"/><text x="93.2910%" y="911.50"></text></g><g><title>aptos_vm::move_vm_ext::session::_::&lt;impl serde::ser::Serialize for aptos_vm::move_vm_ext::session::SessionId&gt;::serialize (30 samples, 0.04%)</title><rect x="93.0410%" y="885" width="0.0383%" height="15" fill="rgb(213,101,18)" fg:x="72960" fg:w="30"/><text x="93.2910%" y="895.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (26 samples, 0.03%)</title><rect x="93.0462%" y="869" width="0.0332%" height="15" fill="rgb(215,179,52)" fg:x="72964" fg:w="26"/><text x="93.2962%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.01%)</title><rect x="93.1112%" y="901" width="0.0128%" height="15" fill="rgb(223,50,25)" fg:x="73015" fg:w="10"/><text x="93.3612%" y="911.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.01%)</title><rect x="93.1112%" y="885" width="0.0128%" height="15" fill="rgb(224,51,44)" fg:x="73015" fg:w="10"/><text x="93.3612%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="93.1239%" y="885" width="0.0128%" height="15" fill="rgb(224,13,54)" fg:x="73025" fg:w="10"/><text x="93.3739%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.01%)</title><rect x="93.1239%" y="869" width="0.0128%" height="15" fill="rgb(219,58,47)" fg:x="73025" fg:w="10"/><text x="93.3739%" y="879.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::new_session (144 samples, 0.18%)</title><rect x="92.9658%" y="981" width="0.1836%" height="15" fill="rgb(246,124,34)" fg:x="72901" fg:w="144"/><text x="93.2158%" y="991.50"></text></g><g><title>aptos_vm::move_vm_ext::vm::MoveVmExt::new_session (144 samples, 0.18%)</title><rect x="92.9658%" y="965" width="0.1836%" height="15" fill="rgb(245,109,25)" fg:x="72901" fg:w="144"/><text x="93.2158%" y="975.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (51 samples, 0.07%)</title><rect x="93.0844%" y="949" width="0.0650%" height="15" fill="rgb(235,48,23)" fg:x="72994" fg:w="51"/><text x="93.3344%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (37 samples, 0.05%)</title><rect x="93.1023%" y="933" width="0.0472%" height="15" fill="rgb(229,203,36)" fg:x="73008" fg:w="37"/><text x="93.3523%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (37 samples, 0.05%)</title><rect x="93.1023%" y="917" width="0.0472%" height="15" fill="rgb(234,180,9)" fg:x="73008" fg:w="37"/><text x="93.3523%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (20 samples, 0.03%)</title><rect x="93.1239%" y="901" width="0.0255%" height="15" fill="rgb(228,98,45)" fg:x="73025" fg:w="20"/><text x="93.3739%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (10 samples, 0.01%)</title><rect x="93.1367%" y="885" width="0.0128%" height="15" fill="rgb(240,24,36)" fg:x="73035" fg:w="10"/><text x="93.3867%" y="895.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (17 samples, 0.02%)</title><rect x="93.1520%" y="789" width="0.0217%" height="15" fill="rgb(227,154,19)" fg:x="73047" fg:w="17"/><text x="93.4020%" y="799.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="93.1520%" y="773" width="0.0217%" height="15" fill="rgb(231,2,48)" fg:x="73047" fg:w="17"/><text x="93.4020%" y="783.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="93.1520%" y="821" width="0.0242%" height="15" fill="rgb(219,216,0)" fg:x="73047" fg:w="19"/><text x="93.4020%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="93.1520%" y="805" width="0.0242%" height="15" fill="rgb(251,88,0)" fg:x="73047" fg:w="19"/><text x="93.4020%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.03%)</title><rect x="93.1507%" y="885" width="0.0306%" height="15" fill="rgb(242,45,45)" fg:x="73046" fg:w="24"/><text x="93.4007%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.03%)</title><rect x="93.1507%" y="869" width="0.0306%" height="15" fill="rgb(218,149,45)" fg:x="73046" fg:w="24"/><text x="93.4007%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.03%)</title><rect x="93.1507%" y="853" width="0.0306%" height="15" fill="rgb(247,194,10)" fg:x="73046" fg:w="24"/><text x="93.4007%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.03%)</title><rect x="93.1507%" y="837" width="0.0306%" height="15" fill="rgb(234,33,37)" fg:x="73046" fg:w="24"/><text x="93.4007%" y="847.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="93.1507%" y="917" width="0.0344%" height="15" fill="rgb(218,61,13)" fg:x="73046" fg:w="27"/><text x="93.4007%" y="927.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="93.1507%" y="901" width="0.0344%" height="15" fill="rgb(210,80,52)" fg:x="73046" fg:w="27"/><text x="93.4007%" y="911.50"></text></g><g><title>&lt;aptos_types::transaction::SignatureCheckedTransaction as core::clone::Clone&gt;::clone (46 samples, 0.06%)</title><rect x="93.1507%" y="965" width="0.0587%" height="15" fill="rgb(218,203,27)" fg:x="73046" fg:w="46"/><text x="93.4007%" y="975.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (46 samples, 0.06%)</title><rect x="93.1507%" y="949" width="0.0587%" height="15" fill="rgb(209,126,33)" fg:x="73046" fg:w="46"/><text x="93.4007%" y="959.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (46 samples, 0.06%)</title><rect x="93.1507%" y="933" width="0.0587%" height="15" fill="rgb(234,173,41)" fg:x="73046" fg:w="46"/><text x="93.4007%" y="943.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (19 samples, 0.02%)</title><rect x="93.1852%" y="917" width="0.0242%" height="15" fill="rgb(228,166,9)" fg:x="73073" fg:w="19"/><text x="93.4352%" y="927.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::authenticator (8 samples, 0.01%)</title><rect x="93.2209%" y="949" width="0.0102%" height="15" fill="rgb(208,124,43)" fg:x="73101" fg:w="8"/><text x="93.4709%" y="959.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (8 samples, 0.01%)</title><rect x="93.2489%" y="741" width="0.0102%" height="15" fill="rgb(212,154,38)" fg:x="73123" fg:w="8"/><text x="93.4989%" y="751.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.01%)</title><rect x="93.2489%" y="725" width="0.0102%" height="15" fill="rgb(246,179,35)" fg:x="73123" fg:w="8"/><text x="93.4989%" y="735.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (8 samples, 0.01%)</title><rect x="93.2489%" y="709" width="0.0102%" height="15" fill="rgb(251,3,50)" fg:x="73123" fg:w="8"/><text x="93.4989%" y="719.50"></text></g><g><title> 32]&gt;::serialize (8 samples, 0.01%)</title><rect x="93.2489%" y="693" width="0.0102%" height="15" fill="rgb(219,96,8)" fg:x="73123" fg:w="8"/><text x="93.4989%" y="703.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (8 samples, 0.01%)</title><rect x="93.2489%" y="677" width="0.0102%" height="15" fill="rgb(251,216,33)" fg:x="73123" fg:w="8"/><text x="93.4989%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (8 samples, 0.01%)</title><rect x="93.2489%" y="661" width="0.0102%" height="15" fill="rgb(243,145,29)" fg:x="73123" fg:w="8"/><text x="93.4989%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (8 samples, 0.01%)</title><rect x="93.2489%" y="645" width="0.0102%" height="15" fill="rgb(210,75,20)" fg:x="73123" fg:w="8"/><text x="93.4989%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.01%)</title><rect x="93.2489%" y="629" width="0.0102%" height="15" fill="rgb(235,56,8)" fg:x="73123" fg:w="8"/><text x="93.4989%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.01%)</title><rect x="93.2489%" y="613" width="0.0102%" height="15" fill="rgb(226,175,49)" fg:x="73123" fg:w="8"/><text x="93.4989%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="93.2489%" y="597" width="0.0102%" height="15" fill="rgb(242,204,23)" fg:x="73123" fg:w="8"/><text x="93.4989%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.01%)</title><rect x="93.2489%" y="581" width="0.0102%" height="15" fill="rgb(225,104,24)" fg:x="73123" fg:w="8"/><text x="93.4989%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="93.2489%" y="565" width="0.0102%" height="15" fill="rgb(253,34,1)" fg:x="73123" fg:w="8"/><text x="93.4989%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="93.2489%" y="549" width="0.0102%" height="15" fill="rgb(233,199,23)" fg:x="73123" fg:w="8"/><text x="93.4989%" y="559.50"></text></g><g><title>aptos_types::transaction::script::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::script::EntryFunction&gt;::serialize (21 samples, 0.03%)</title><rect x="93.2591%" y="709" width="0.0268%" height="15" fill="rgb(247,7,51)" fg:x="73131" fg:w="21"/><text x="93.5091%" y="719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 0.03%)</title><rect x="93.2604%" y="693" width="0.0255%" height="15" fill="rgb(214,146,12)" fg:x="73132" fg:w="20"/><text x="93.5104%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (14 samples, 0.02%)</title><rect x="93.2680%" y="677" width="0.0179%" height="15" fill="rgb(234,181,43)" fg:x="73138" fg:w="14"/><text x="93.5180%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (14 samples, 0.02%)</title><rect x="93.2680%" y="661" width="0.0179%" height="15" fill="rgb(239,148,6)" fg:x="73138" fg:w="14"/><text x="93.5180%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (13 samples, 0.02%)</title><rect x="93.2693%" y="645" width="0.0166%" height="15" fill="rgb(206,151,17)" fg:x="73139" fg:w="13"/><text x="93.5193%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.02%)</title><rect x="93.2693%" y="629" width="0.0166%" height="15" fill="rgb(213,215,10)" fg:x="73139" fg:w="13"/><text x="93.5193%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (13 samples, 0.02%)</title><rect x="93.2693%" y="613" width="0.0166%" height="15" fill="rgb(215,220,44)" fg:x="73139" fg:w="13"/><text x="93.5193%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (13 samples, 0.02%)</title><rect x="93.2693%" y="597" width="0.0166%" height="15" fill="rgb(245,205,37)" fg:x="73139" fg:w="13"/><text x="93.5193%" y="607.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (13 samples, 0.02%)</title><rect x="93.2693%" y="581" width="0.0166%" height="15" fill="rgb(245,130,43)" fg:x="73139" fg:w="13"/><text x="93.5193%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.02%)</title><rect x="93.2693%" y="565" width="0.0166%" height="15" fill="rgb(231,227,38)" fg:x="73139" fg:w="13"/><text x="93.5193%" y="575.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (13 samples, 0.02%)</title><rect x="93.2693%" y="549" width="0.0166%" height="15" fill="rgb(233,185,4)" fg:x="73139" fg:w="13"/><text x="93.5193%" y="559.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (13 samples, 0.02%)</title><rect x="93.2693%" y="533" width="0.0166%" height="15" fill="rgb(224,154,43)" fg:x="73139" fg:w="13"/><text x="93.5193%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (13 samples, 0.02%)</title><rect x="93.2693%" y="517" width="0.0166%" height="15" fill="rgb(235,156,15)" fg:x="73139" fg:w="13"/><text x="93.5193%" y="527.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (9 samples, 0.01%)</title><rect x="93.2744%" y="501" width="0.0115%" height="15" fill="rgb(211,55,43)" fg:x="73143" fg:w="9"/><text x="93.5244%" y="511.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.01%)</title><rect x="93.2744%" y="485" width="0.0115%" height="15" fill="rgb(247,149,40)" fg:x="73143" fg:w="9"/><text x="93.5244%" y="495.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (8 samples, 0.01%)</title><rect x="93.2757%" y="469" width="0.0102%" height="15" fill="rgb(232,171,16)" fg:x="73144" fg:w="8"/><text x="93.5257%" y="479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.01%)</title><rect x="93.2757%" y="453" width="0.0102%" height="15" fill="rgb(215,117,49)" fg:x="73144" fg:w="8"/><text x="93.5257%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (8 samples, 0.01%)</title><rect x="93.2757%" y="437" width="0.0102%" height="15" fill="rgb(246,194,11)" fg:x="73144" fg:w="8"/><text x="93.5257%" y="447.50"></text></g><g><title> 32]&gt;::serialize (8 samples, 0.01%)</title><rect x="93.2757%" y="421" width="0.0102%" height="15" fill="rgb(242,101,44)" fg:x="73144" fg:w="8"/><text x="93.5257%" y="431.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (8 samples, 0.01%)</title><rect x="93.2757%" y="405" width="0.0102%" height="15" fill="rgb(226,174,6)" fg:x="73144" fg:w="8"/><text x="93.5257%" y="415.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (23 samples, 0.03%)</title><rect x="93.2591%" y="741" width="0.0293%" height="15" fill="rgb(213,150,20)" fg:x="73131" fg:w="23"/><text x="93.5091%" y="751.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (23 samples, 0.03%)</title><rect x="93.2591%" y="725" width="0.0293%" height="15" fill="rgb(222,124,42)" fg:x="73131" fg:w="23"/><text x="93.5091%" y="735.50"></text></g><g><title>bcs::ser::to_bytes (39 samples, 0.05%)</title><rect x="93.2413%" y="805" width="0.0497%" height="15" fill="rgb(250,19,47)" fg:x="73117" fg:w="39"/><text x="93.4913%" y="815.50"></text></g><g><title>bcs::ser::serialize_into (39 samples, 0.05%)</title><rect x="93.2413%" y="789" width="0.0497%" height="15" fill="rgb(241,217,19)" fg:x="73117" fg:w="39"/><text x="93.4913%" y="799.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (39 samples, 0.05%)</title><rect x="93.2413%" y="773" width="0.0497%" height="15" fill="rgb(207,210,34)" fg:x="73117" fg:w="39"/><text x="93.4913%" y="783.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (39 samples, 0.05%)</title><rect x="93.2413%" y="757" width="0.0497%" height="15" fill="rgb(244,45,4)" fg:x="73117" fg:w="39"/><text x="93.4913%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (43 samples, 0.05%)</title><rect x="93.2374%" y="869" width="0.0548%" height="15" fill="rgb(252,134,50)" fg:x="73114" fg:w="43"/><text x="93.4874%" y="879.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (43 samples, 0.05%)</title><rect x="93.2374%" y="853" width="0.0548%" height="15" fill="rgb(238,74,2)" fg:x="73114" fg:w="43"/><text x="93.4874%" y="863.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (40 samples, 0.05%)</title><rect x="93.2413%" y="837" width="0.0510%" height="15" fill="rgb(226,58,46)" fg:x="73117" fg:w="40"/><text x="93.4913%" y="847.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::raw_txn_bytes_len::{{closure}} (40 samples, 0.05%)</title><rect x="93.2413%" y="821" width="0.0510%" height="15" fill="rgb(232,83,35)" fg:x="73117" fg:w="40"/><text x="93.4913%" y="831.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::raw_txn_bytes_len (49 samples, 0.06%)</title><rect x="93.2311%" y="949" width="0.0625%" height="15" fill="rgb(212,148,47)" fg:x="73109" fg:w="49"/><text x="93.4811%" y="959.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (49 samples, 0.06%)</title><rect x="93.2311%" y="933" width="0.0625%" height="15" fill="rgb(235,29,1)" fg:x="73109" fg:w="49"/><text x="93.4811%" y="943.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (49 samples, 0.06%)</title><rect x="93.2311%" y="917" width="0.0625%" height="15" fill="rgb(247,55,37)" fg:x="73109" fg:w="49"/><text x="93.4811%" y="927.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (47 samples, 0.06%)</title><rect x="93.2336%" y="901" width="0.0599%" height="15" fill="rgb(222,48,3)" fg:x="73111" fg:w="47"/><text x="93.4836%" y="911.50"></text></g><g><title>once_cell::imp::initialize_or_wait (47 samples, 0.06%)</title><rect x="93.2336%" y="885" width="0.0599%" height="15" fill="rgb(234,21,33)" fg:x="73111" fg:w="47"/><text x="93.4836%" y="895.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key_preimage (10 samples, 0.01%)</title><rect x="93.2935%" y="933" width="0.0128%" height="15" fill="rgb(247,178,53)" fg:x="73158" fg:w="10"/><text x="93.5435%" y="943.50"></text></g><g><title>aptos_crypto::hash::HashValue::from_keccak (60 samples, 0.08%)</title><rect x="93.3178%" y="901" width="0.0765%" height="15" fill="rgb(225,75,7)" fg:x="73177" fg:w="60"/><text x="93.5678%" y="911.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (60 samples, 0.08%)</title><rect x="93.3178%" y="885" width="0.0765%" height="15" fill="rgb(219,199,7)" fg:x="73177" fg:w="60"/><text x="93.5678%" y="895.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (60 samples, 0.08%)</title><rect x="93.3178%" y="869" width="0.0765%" height="15" fill="rgb(209,93,42)" fg:x="73177" fg:w="60"/><text x="93.5678%" y="879.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (60 samples, 0.08%)</title><rect x="93.3178%" y="853" width="0.0765%" height="15" fill="rgb(240,175,17)" fg:x="73177" fg:w="60"/><text x="93.5678%" y="863.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (59 samples, 0.08%)</title><rect x="93.3191%" y="837" width="0.0752%" height="15" fill="rgb(232,106,7)" fg:x="73178" fg:w="59"/><text x="93.5691%" y="847.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (59 samples, 0.08%)</title><rect x="93.3191%" y="821" width="0.0752%" height="15" fill="rgb(242,106,43)" fg:x="73178" fg:w="59"/><text x="93.5691%" y="831.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (59 samples, 0.08%)</title><rect x="93.3191%" y="805" width="0.0752%" height="15" fill="rgb(242,61,37)" fg:x="73178" fg:w="59"/><text x="93.5691%" y="815.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (58 samples, 0.07%)</title><rect x="93.3203%" y="789" width="0.0740%" height="15" fill="rgb(205,72,10)" fg:x="73179" fg:w="58"/><text x="93.5703%" y="799.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key (81 samples, 0.10%)</title><rect x="93.2935%" y="949" width="0.1033%" height="15" fill="rgb(214,184,36)" fg:x="73158" fg:w="81"/><text x="93.5435%" y="959.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::from_preimage (71 samples, 0.09%)</title><rect x="93.3063%" y="933" width="0.0905%" height="15" fill="rgb(206,107,18)" fg:x="73168" fg:w="71"/><text x="93.5563%" y="943.50"></text></g><g><title>aptos_crypto::hash::HashValue::sha3_256_of (68 samples, 0.09%)</title><rect x="93.3101%" y="917" width="0.0867%" height="15" fill="rgb(210,75,5)" fg:x="73171" fg:w="68"/><text x="93.5601%" y="927.50"></text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::new (158 samples, 0.20%)</title><rect x="93.2094%" y="965" width="0.2015%" height="15" fill="rgb(205,3,19)" fg:x="73092" fg:w="158"/><text x="93.4594%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (9 samples, 0.01%)</title><rect x="93.4211%" y="901" width="0.0115%" height="15" fill="rgb(207,181,42)" fg:x="73258" fg:w="9"/><text x="93.6711%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="93.4211%" y="885" width="0.0115%" height="15" fill="rgb(229,179,43)" fg:x="73258" fg:w="9"/><text x="93.6711%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (9 samples, 0.01%)</title><rect x="93.4211%" y="869" width="0.0115%" height="15" fill="rgb(246,95,30)" fg:x="73258" fg:w="9"/><text x="93.6711%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (9 samples, 0.01%)</title><rect x="93.4211%" y="853" width="0.0115%" height="15" fill="rgb(234,144,45)" fg:x="73258" fg:w="9"/><text x="93.6711%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (18 samples, 0.02%)</title><rect x="93.4109%" y="949" width="0.0230%" height="15" fill="rgb(250,54,25)" fg:x="73250" fg:w="18"/><text x="93.6609%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (18 samples, 0.02%)</title><rect x="93.4109%" y="933" width="0.0230%" height="15" fill="rgb(215,195,40)" fg:x="73250" fg:w="18"/><text x="93.6609%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (18 samples, 0.02%)</title><rect x="93.4109%" y="917" width="0.0230%" height="15" fill="rgb(233,188,42)" fg:x="73250" fg:w="18"/><text x="93.6609%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (20 samples, 0.03%)</title><rect x="93.4109%" y="965" width="0.0255%" height="15" fill="rgb(247,227,35)" fg:x="73250" fg:w="20"/><text x="93.6609%" y="975.50"></text></g><g><title>aptos_vm::move_vm_ext::session::SessionId::txn (229 samples, 0.29%)</title><rect x="93.1494%" y="981" width="0.2920%" height="15" fill="rgb(249,124,27)" fg:x="73045" fg:w="229"/><text x="93.3994%" y="991.50"></text></g><g><title>aptos_types::transaction::authenticator::AccountAuthenticator::authentication_key (32 samples, 0.04%)</title><rect x="93.4415%" y="965" width="0.0408%" height="15" fill="rgb(219,207,25)" fg:x="73274" fg:w="32"/><text x="93.6915%" y="975.50"></text></g><g><title>aptos_types::transaction::authenticator::AuthenticationKey::from_preimage (24 samples, 0.03%)</title><rect x="93.4517%" y="949" width="0.0306%" height="15" fill="rgb(241,216,47)" fg:x="73282" fg:w="24"/><text x="93.7017%" y="959.50"></text></g><g><title>aptos_crypto::hash::HashValue::sha3_256_of (24 samples, 0.03%)</title><rect x="93.4517%" y="933" width="0.0306%" height="15" fill="rgb(233,82,50)" fg:x="73282" fg:w="24"/><text x="93.7017%" y="943.50"></text></g><g><title>aptos_crypto::hash::HashValue::from_keccak (24 samples, 0.03%)</title><rect x="93.4517%" y="917" width="0.0306%" height="15" fill="rgb(232,63,2)" fg:x="73282" fg:w="24"/><text x="93.7017%" y="927.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (24 samples, 0.03%)</title><rect x="93.4517%" y="901" width="0.0306%" height="15" fill="rgb(236,184,28)" fg:x="73282" fg:w="24"/><text x="93.7017%" y="911.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (24 samples, 0.03%)</title><rect x="93.4517%" y="885" width="0.0306%" height="15" fill="rgb(254,63,27)" fg:x="73282" fg:w="24"/><text x="93.7017%" y="895.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (24 samples, 0.03%)</title><rect x="93.4517%" y="869" width="0.0306%" height="15" fill="rgb(253,106,28)" fg:x="73282" fg:w="24"/><text x="93.7017%" y="879.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (24 samples, 0.03%)</title><rect x="93.4517%" y="853" width="0.0306%" height="15" fill="rgb(225,141,39)" fg:x="73282" fg:w="24"/><text x="93.7017%" y="863.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (24 samples, 0.03%)</title><rect x="93.4517%" y="837" width="0.0306%" height="15" fill="rgb(222,157,20)" fg:x="73282" fg:w="24"/><text x="93.7017%" y="847.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (24 samples, 0.03%)</title><rect x="93.4517%" y="821" width="0.0306%" height="15" fill="rgb(210,190,9)" fg:x="73282" fg:w="24"/><text x="93.7017%" y="831.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (23 samples, 0.03%)</title><rect x="93.4530%" y="805" width="0.0293%" height="15" fill="rgb(242,167,7)" fg:x="73283" fg:w="23"/><text x="93.7030%" y="815.50"></text></g><g><title>aptos_vm::transaction_metadata::TransactionMetadata::new (35 samples, 0.04%)</title><rect x="93.4415%" y="981" width="0.0446%" height="15" fill="rgb(227,82,41)" fg:x="73274" fg:w="35"/><text x="93.6915%" y="991.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.01%)</title><rect x="93.4950%" y="725" width="0.0102%" height="15" fill="rgb(222,131,13)" fg:x="73316" fg:w="8"/><text x="93.7450%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (15 samples, 0.02%)</title><rect x="93.5193%" y="533" width="0.0191%" height="15" fill="rgb(221,98,26)" fg:x="73335" fg:w="15"/><text x="93.7693%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (11 samples, 0.01%)</title><rect x="93.5244%" y="517" width="0.0140%" height="15" fill="rgb(251,63,52)" fg:x="73339" fg:w="11"/><text x="93.7744%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (11 samples, 0.01%)</title><rect x="93.5244%" y="501" width="0.0140%" height="15" fill="rgb(246,25,43)" fg:x="73339" fg:w="11"/><text x="93.7744%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="93.5244%" y="485" width="0.0140%" height="15" fill="rgb(247,167,15)" fg:x="73339" fg:w="11"/><text x="93.7744%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (11 samples, 0.01%)</title><rect x="93.5244%" y="469" width="0.0140%" height="15" fill="rgb(240,104,42)" fg:x="73339" fg:w="11"/><text x="93.7744%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (22 samples, 0.03%)</title><rect x="93.5129%" y="613" width="0.0281%" height="15" fill="rgb(224,54,6)" fg:x="73330" fg:w="22"/><text x="93.7629%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (18 samples, 0.02%)</title><rect x="93.5180%" y="597" width="0.0230%" height="15" fill="rgb(244,108,35)" fg:x="73334" fg:w="18"/><text x="93.7680%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (18 samples, 0.02%)</title><rect x="93.5180%" y="581" width="0.0230%" height="15" fill="rgb(216,154,2)" fg:x="73334" fg:w="18"/><text x="93.7680%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="93.5180%" y="565" width="0.0230%" height="15" fill="rgb(222,8,47)" fg:x="73334" fg:w="18"/><text x="93.7680%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (18 samples, 0.02%)</title><rect x="93.5180%" y="549" width="0.0230%" height="15" fill="rgb(252,93,1)" fg:x="73334" fg:w="18"/><text x="93.7680%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="93.5129%" y="645" width="0.0319%" height="15" fill="rgb(223,226,51)" fg:x="73330" fg:w="25"/><text x="93.7629%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (25 samples, 0.03%)</title><rect x="93.5129%" y="629" width="0.0319%" height="15" fill="rgb(206,147,9)" fg:x="73330" fg:w="25"/><text x="93.7629%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (28 samples, 0.04%)</title><rect x="93.5129%" y="677" width="0.0357%" height="15" fill="rgb(248,180,41)" fg:x="73330" fg:w="28"/><text x="93.7629%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (28 samples, 0.04%)</title><rect x="93.5129%" y="661" width="0.0357%" height="15" fill="rgb(209,47,50)" fg:x="73330" fg:w="28"/><text x="93.7629%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (8 samples, 0.01%)</title><rect x="93.5779%" y="277" width="0.0102%" height="15" fill="rgb(243,65,31)" fg:x="73381" fg:w="8"/><text x="93.8279%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="93.5715%" y="389" width="0.0242%" height="15" fill="rgb(228,128,1)" fg:x="73376" fg:w="19"/><text x="93.8215%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="93.5715%" y="373" width="0.0242%" height="15" fill="rgb(231,192,16)" fg:x="73376" fg:w="19"/><text x="93.8215%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="93.5715%" y="357" width="0.0242%" height="15" fill="rgb(224,26,40)" fg:x="73376" fg:w="19"/><text x="93.8215%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="93.5715%" y="341" width="0.0242%" height="15" fill="rgb(214,192,17)" fg:x="73376" fg:w="19"/><text x="93.8215%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (19 samples, 0.02%)</title><rect x="93.5715%" y="325" width="0.0242%" height="15" fill="rgb(225,147,18)" fg:x="73376" fg:w="19"/><text x="93.8215%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="93.5715%" y="309" width="0.0242%" height="15" fill="rgb(205,35,11)" fg:x="73376" fg:w="19"/><text x="93.8215%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (14 samples, 0.02%)</title><rect x="93.5779%" y="293" width="0.0179%" height="15" fill="rgb(242,40,42)" fg:x="73381" fg:w="14"/><text x="93.8279%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (28 samples, 0.04%)</title><rect x="93.5690%" y="405" width="0.0357%" height="15" fill="rgb(250,170,13)" fg:x="73374" fg:w="28"/><text x="93.8190%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (30 samples, 0.04%)</title><rect x="93.5677%" y="517" width="0.0383%" height="15" fill="rgb(240,161,28)" fg:x="73373" fg:w="30"/><text x="93.8177%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.04%)</title><rect x="93.5677%" y="501" width="0.0383%" height="15" fill="rgb(245,179,12)" fg:x="73373" fg:w="30"/><text x="93.8177%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (30 samples, 0.04%)</title><rect x="93.5677%" y="485" width="0.0383%" height="15" fill="rgb(250,92,32)" fg:x="73373" fg:w="30"/><text x="93.8177%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (30 samples, 0.04%)</title><rect x="93.5677%" y="469" width="0.0383%" height="15" fill="rgb(233,10,40)" fg:x="73373" fg:w="30"/><text x="93.8177%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (30 samples, 0.04%)</title><rect x="93.5677%" y="453" width="0.0383%" height="15" fill="rgb(217,98,1)" fg:x="73373" fg:w="30"/><text x="93.8177%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.04%)</title><rect x="93.5677%" y="437" width="0.0383%" height="15" fill="rgb(238,202,7)" fg:x="73373" fg:w="30"/><text x="93.8177%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (30 samples, 0.04%)</title><rect x="93.5677%" y="421" width="0.0383%" height="15" fill="rgb(222,91,3)" fg:x="73373" fg:w="30"/><text x="93.8177%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (49 samples, 0.06%)</title><rect x="93.5562%" y="533" width="0.0625%" height="15" fill="rgb(211,170,49)" fg:x="73364" fg:w="49"/><text x="93.8062%" y="543.50"></text></g><g><title>sdallocx (10 samples, 0.01%)</title><rect x="93.6060%" y="517" width="0.0128%" height="15" fill="rgb(253,139,18)" fg:x="73403" fg:w="10"/><text x="93.8560%" y="527.50"></text></g><g><title>isfree (10 samples, 0.01%)</title><rect x="93.6060%" y="501" width="0.0128%" height="15" fill="rgb(222,4,43)" fg:x="73403" fg:w="10"/><text x="93.8560%" y="511.50"></text></g><g><title>isdalloct (10 samples, 0.01%)</title><rect x="93.6060%" y="485" width="0.0128%" height="15" fill="rgb(207,205,12)" fg:x="73403" fg:w="10"/><text x="93.8560%" y="495.50"></text></g><g><title>arena_sdalloc (10 samples, 0.01%)</title><rect x="93.6060%" y="469" width="0.0128%" height="15" fill="rgb(216,159,46)" fg:x="73403" fg:w="10"/><text x="93.8560%" y="479.50"></text></g><g><title>sz_size2index (10 samples, 0.01%)</title><rect x="93.6060%" y="453" width="0.0128%" height="15" fill="rgb(236,115,1)" fg:x="73403" fg:w="10"/><text x="93.8560%" y="463.50"></text></g><g><title>sz_size2index_lookup (10 samples, 0.01%)</title><rect x="93.6060%" y="437" width="0.0128%" height="15" fill="rgb(251,35,33)" fg:x="73403" fg:w="10"/><text x="93.8560%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.08%)</title><rect x="93.5537%" y="565" width="0.0803%" height="15" fill="rgb(248,62,51)" fg:x="73362" fg:w="63"/><text x="93.8037%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (63 samples, 0.08%)</title><rect x="93.5537%" y="549" width="0.0803%" height="15" fill="rgb(254,180,19)" fg:x="73362" fg:w="63"/><text x="93.8037%" y="559.50"></text></g><g><title>sdallocx (8 samples, 0.01%)</title><rect x="93.6238%" y="533" width="0.0102%" height="15" fill="rgb(217,100,32)" fg:x="73417" fg:w="8"/><text x="93.8738%" y="543.50"></text></g><g><title>isfree (8 samples, 0.01%)</title><rect x="93.6238%" y="517" width="0.0102%" height="15" fill="rgb(224,71,22)" fg:x="73417" fg:w="8"/><text x="93.8738%" y="527.50"></text></g><g><title>isdalloct (8 samples, 0.01%)</title><rect x="93.6238%" y="501" width="0.0102%" height="15" fill="rgb(251,185,33)" fg:x="73417" fg:w="8"/><text x="93.8738%" y="511.50"></text></g><g><title>arena_sdalloc (8 samples, 0.01%)</title><rect x="93.6238%" y="485" width="0.0102%" height="15" fill="rgb(209,75,48)" fg:x="73417" fg:w="8"/><text x="93.8738%" y="495.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.01%)</title><rect x="93.6238%" y="469" width="0.0102%" height="15" fill="rgb(253,190,16)" fg:x="73417" fg:w="8"/><text x="93.8738%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValue&gt; (67 samples, 0.09%)</title><rect x="93.5499%" y="677" width="0.0854%" height="15" fill="rgb(226,140,1)" fg:x="73359" fg:w="67"/><text x="93.7999%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValueImpl&gt; (67 samples, 0.09%)</title><rect x="93.5499%" y="661" width="0.0854%" height="15" fill="rgb(206,75,30)" fg:x="73359" fg:w="67"/><text x="93.7999%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (67 samples, 0.09%)</title><rect x="93.5499%" y="645" width="0.0854%" height="15" fill="rgb(231,208,37)" fg:x="73359" fg:w="67"/><text x="93.7999%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.09%)</title><rect x="93.5499%" y="629" width="0.0854%" height="15" fill="rgb(238,136,40)" fg:x="73359" fg:w="67"/><text x="93.7999%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (64 samples, 0.08%)</title><rect x="93.5537%" y="613" width="0.0816%" height="15" fill="rgb(247,137,17)" fg:x="73362" fg:w="64"/><text x="93.8037%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (64 samples, 0.08%)</title><rect x="93.5537%" y="597" width="0.0816%" height="15" fill="rgb(240,60,40)" fg:x="73362" fg:w="64"/><text x="93.8037%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (64 samples, 0.08%)</title><rect x="93.5537%" y="581" width="0.0816%" height="15" fill="rgb(236,68,50)" fg:x="73362" fg:w="64"/><text x="93.8037%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (104 samples, 0.13%)</title><rect x="93.5091%" y="693" width="0.1326%" height="15" fill="rgb(230,42,12)" fg:x="73327" fg:w="104"/><text x="93.7591%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (132 samples, 0.17%)</title><rect x="93.4861%" y="933" width="0.1683%" height="15" fill="rgb(219,16,16)" fg:x="73309" fg:w="132"/><text x="93.7361%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (132 samples, 0.17%)</title><rect x="93.4861%" y="917" width="0.1683%" height="15" fill="rgb(220,38,35)" fg:x="73309" fg:w="132"/><text x="93.7361%" y="927.50"></text></g><g><title>core::mem::drop (132 samples, 0.17%)</title><rect x="93.4861%" y="901" width="0.1683%" height="15" fill="rgb(228,33,1)" fg:x="73309" fg:w="132"/><text x="93.7361%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (132 samples, 0.17%)</title><rect x="93.4861%" y="885" width="0.1683%" height="15" fill="rgb(241,46,31)" fg:x="73309" fg:w="132"/><text x="93.7361%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (130 samples, 0.17%)</title><rect x="93.4887%" y="869" width="0.1658%" height="15" fill="rgb(232,58,20)" fg:x="73311" fg:w="130"/><text x="93.7387%" y="879.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (128 samples, 0.16%)</title><rect x="93.4912%" y="853" width="0.1632%" height="15" fill="rgb(206,228,53)" fg:x="73313" fg:w="128"/><text x="93.7412%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (128 samples, 0.16%)</title><rect x="93.4912%" y="837" width="0.1632%" height="15" fill="rgb(206,88,33)" fg:x="73313" fg:w="128"/><text x="93.7412%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (128 samples, 0.16%)</title><rect x="93.4912%" y="821" width="0.1632%" height="15" fill="rgb(238,69,7)" fg:x="73313" fg:w="128"/><text x="93.7412%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (126 samples, 0.16%)</title><rect x="93.4938%" y="805" width="0.1607%" height="15" fill="rgb(250,21,46)" fg:x="73315" fg:w="126"/><text x="93.7438%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (126 samples, 0.16%)</title><rect x="93.4938%" y="789" width="0.1607%" height="15" fill="rgb(215,212,21)" fg:x="73315" fg:w="126"/><text x="93.7438%" y="799.50"></text></g><g><title>core::mem::drop (125 samples, 0.16%)</title><rect x="93.4950%" y="773" width="0.1594%" height="15" fill="rgb(211,35,12)" fg:x="73316" fg:w="125"/><text x="93.7450%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (125 samples, 0.16%)</title><rect x="93.4950%" y="757" width="0.1594%" height="15" fill="rgb(231,184,16)" fg:x="73316" fg:w="125"/><text x="93.7450%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (125 samples, 0.16%)</title><rect x="93.4950%" y="741" width="0.1594%" height="15" fill="rgb(242,140,15)" fg:x="73316" fg:w="125"/><text x="93.7450%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (117 samples, 0.15%)</title><rect x="93.5052%" y="725" width="0.1492%" height="15" fill="rgb(220,37,14)" fg:x="73324" fg:w="117"/><text x="93.7552%" y="735.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (117 samples, 0.15%)</title><rect x="93.5052%" y="709" width="0.1492%" height="15" fill="rgb(223,146,22)" fg:x="73324" fg:w="117"/><text x="93.7552%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::session::SessionExt&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_storage_interface::state_view::DbStateView&gt;&gt;&gt; (133 samples, 0.17%)</title><rect x="93.4861%" y="981" width="0.1696%" height="15" fill="rgb(216,132,15)" fg:x="73309" fg:w="133"/><text x="93.7361%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_storage_interface::state_view::DbStateView&gt;&gt;&gt; (133 samples, 0.17%)</title><rect x="93.4861%" y="965" width="0.1696%" height="15" fill="rgb(248,83,5)" fg:x="73309" fg:w="133"/><text x="93.7361%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_vm::data_cache::StorageAdapter&lt;aptos_storage_interface::state_view::DbStateView&gt;&gt;&gt; (133 samples, 0.17%)</title><rect x="93.4861%" y="949" width="0.1696%" height="15" fill="rgb(231,206,48)" fg:x="73309" fg:w="133"/><text x="93.7361%" y="959.50"></text></g><g><title>prometheus::histogram::Histogram::observe (11 samples, 0.01%)</title><rect x="93.6608%" y="981" width="0.0140%" height="15" fill="rgb(253,185,37)" fg:x="73446" fg:w="11"/><text x="93.9108%" y="991.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (11 samples, 0.01%)</title><rect x="93.6608%" y="965" width="0.0140%" height="15" fill="rgb(208,21,44)" fg:x="73446" fg:w="11"/><text x="93.9108%" y="975.50"></text></g><g><title>prometheus::histogram::ShardAndCount::inc (11 samples, 0.01%)</title><rect x="93.6608%" y="949" width="0.0140%" height="15" fill="rgb(236,125,4)" fg:x="73446" fg:w="11"/><text x="93.9108%" y="959.50"></text></g><g><title>prometheus::histogram::ShardAndCount::inc_by (11 samples, 0.01%)</title><rect x="93.6608%" y="933" width="0.0140%" height="15" fill="rgb(226,134,25)" fg:x="73446" fg:w="11"/><text x="93.9108%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (11 samples, 0.01%)</title><rect x="93.6608%" y="917" width="0.0140%" height="15" fill="rgb(250,201,12)" fg:x="73446" fg:w="11"/><text x="93.9108%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.01%)</title><rect x="93.6608%" y="901" width="0.0140%" height="15" fill="rgb(225,92,18)" fg:x="73446" fg:w="11"/><text x="93.9108%" y="911.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::execute_user_transaction (70,522 samples, 89.93%)</title><rect x="3.7441%" y="997" width="89.9320%" height="15" fill="rgb(227,35,22)" fg:x="2936" fg:w="70522"/><text x="3.9941%" y="1007.50">aptos_vm::aptos_vm::AptosVM::execute_user_transaction</text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (9 samples, 0.01%)</title><rect x="93.6761%" y="997" width="0.0115%" height="15" fill="rgb(214,180,52)" fg:x="73458" fg:w="9"/><text x="93.9261%" y="1007.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="93.6761%" y="981" width="0.0115%" height="15" fill="rgb(233,55,38)" fg:x="73458" fg:w="9"/><text x="93.9261%" y="991.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction (70,899 samples, 90.41%)</title><rect x="3.2927%" y="1013" width="90.4128%" height="15" fill="rgb(249,171,43)" fg:x="2582" fg:w="70899"/><text x="3.5427%" y="1023.50">&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::execute_single_transaction</text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (12 samples, 0.02%)</title><rect x="93.6901%" y="997" width="0.0153%" height="15" fill="rgb(239,87,2)" fg:x="73469" fg:w="12"/><text x="93.9401%" y="1007.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (12 samples, 0.02%)</title><rect x="93.6901%" y="981" width="0.0153%" height="15" fill="rgb(248,141,5)" fg:x="73469" fg:w="12"/><text x="93.9401%" y="991.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (12 samples, 0.02%)</title><rect x="93.6901%" y="965" width="0.0153%" height="15" fill="rgb(238,33,42)" fg:x="73469" fg:w="12"/><text x="93.9401%" y="975.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (11 samples, 0.01%)</title><rect x="93.7207%" y="965" width="0.0140%" height="15" fill="rgb(231,57,19)" fg:x="73493" fg:w="11"/><text x="93.9707%" y="975.50"></text></g><g><title>aptos_aggregator::delta_change_set::DeltaOp::try_into_write_op (22 samples, 0.03%)</title><rect x="93.7207%" y="981" width="0.0281%" height="15" fill="rgb(214,78,53)" fg:x="73493" fg:w="22"/><text x="93.9707%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (11 samples, 0.01%)</title><rect x="93.7348%" y="965" width="0.0140%" height="15" fill="rgb(206,132,29)" fg:x="73504" fg:w="11"/><text x="93.9848%" y="975.50"></text></g><g><title>aptos_aggregator::delta_change_set::DeltaOp::try_into_write_op::{{closure}} (11 samples, 0.01%)</title><rect x="93.7348%" y="949" width="0.0140%" height="15" fill="rgb(248,174,31)" fg:x="73504" fg:w="11"/><text x="93.9848%" y="959.50"></text></g><g><title>alloc::collections::btree::append::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (10 samples, 0.01%)</title><rect x="93.7526%" y="917" width="0.0128%" height="15" fill="rgb(221,87,13)" fg:x="73518" fg:w="10"/><text x="94.0026%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::dedup_sorted_iter::DedupSortedIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp,alloc::vec::into_iter::IntoIter&lt;(aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp)&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="93.7539%" y="901" width="0.0115%" height="15" fill="rgb(223,197,17)" fg:x="73519" fg:w="9"/><text x="94.0039%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::peekable::Peekable&lt;alloc::vec::into_iter::IntoIter&lt;(aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp)&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="93.7539%" y="885" width="0.0115%" height="15" fill="rgb(220,144,50)" fg:x="73519" fg:w="9"/><text x="94.0039%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp)&gt;&gt; (9 samples, 0.01%)</title><rect x="93.7539%" y="869" width="0.0115%" height="15" fill="rgb(244,201,11)" fg:x="73519" fg:w="9"/><text x="94.0039%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="93.7539%" y="853" width="0.0115%" height="15" fill="rgb(249,81,34)" fg:x="73519" fg:w="9"/><text x="94.0039%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp),alloc::alloc::Global&gt;&gt; (9 samples, 0.01%)</title><rect x="93.7539%" y="837" width="0.0115%" height="15" fill="rgb(205,161,12)" fg:x="73519" fg:w="9"/><text x="94.0039%" y="847.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="93.7539%" y="821" width="0.0115%" height="15" fill="rgb(252,139,50)" fg:x="73519" fg:w="9"/><text x="94.0039%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp)&gt;&gt; (9 samples, 0.01%)</title><rect x="93.7539%" y="805" width="0.0115%" height="15" fill="rgb(205,169,14)" fg:x="73519" fg:w="9"/><text x="94.0039%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="93.7539%" y="789" width="0.0115%" height="15" fill="rgb(248,198,33)" fg:x="73519" fg:w="9"/><text x="94.0039%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::bulk_build_from_sorted_iter (14 samples, 0.02%)</title><rect x="93.7488%" y="933" width="0.0179%" height="15" fill="rgb(236,23,21)" fg:x="73515" fg:w="14"/><text x="93.9988%" y="943.50"></text></g><g><title>aptos_aggregator::delta_change_set::DeltaChangeSet::try_into_write_set_mut (46 samples, 0.06%)</title><rect x="93.7118%" y="997" width="0.0587%" height="15" fill="rgb(231,13,38)" fg:x="73486" fg:w="46"/><text x="93.9618%" y="1007.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::new (17 samples, 0.02%)</title><rect x="93.7488%" y="981" width="0.0217%" height="15" fill="rgb(239,139,21)" fg:x="73515" fg:w="17"/><text x="93.9988%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.02%)</title><rect x="93.7488%" y="965" width="0.0217%" height="15" fill="rgb(222,164,45)" fg:x="73515" fg:w="17"/><text x="93.9988%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="93.7488%" y="949" width="0.0217%" height="15" fill="rgb(230,52,27)" fg:x="73515" fg:w="17"/><text x="93.9988%" y="959.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (70,974 samples, 90.51%)</title><rect x="3.2927%" y="1029" width="90.5084%" height="15" fill="rgb(227,143,42)" fg:x="2582" fg:w="70974"/><text x="3.5427%" y="1039.50">&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction</text></g><g><title>aptos_aggregator::transaction::TransactionOutputExt::into_transaction_output (73 samples, 0.09%)</title><rect x="93.7080%" y="1013" width="0.0931%" height="15" fill="rgb(249,127,1)" fg:x="73483" fg:w="73"/><text x="93.9580%" y="1023.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (24 samples, 0.03%)</title><rect x="93.7705%" y="997" width="0.0306%" height="15" fill="rgb(243,107,26)" fg:x="73532" fg:w="24"/><text x="94.0205%" y="1007.50"></text></g><g><title>aptos_aggregator::transaction::TransactionOutputExt::into_transaction_output::{{closure}} (24 samples, 0.03%)</title><rect x="93.7705%" y="981" width="0.0306%" height="15" fill="rgb(225,7,45)" fg:x="73532" fg:w="24"/><text x="94.0205%" y="991.50"></text></g><g><title>aptos_aggregator::transaction::TransactionOutputExt::merge_delta_writes (20 samples, 0.03%)</title><rect x="93.7756%" y="965" width="0.0255%" height="15" fill="rgb(241,88,38)" fg:x="73536" fg:w="20"/><text x="94.0256%" y="975.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::squash (18 samples, 0.02%)</title><rect x="93.7781%" y="949" width="0.0230%" height="15" fill="rgb(226,121,9)" fg:x="73538" fg:w="18"/><text x="94.0281%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (8 samples, 0.01%)</title><rect x="93.7909%" y="933" width="0.0102%" height="15" fill="rgb(253,60,29)" fg:x="73548" fg:w="8"/><text x="94.0409%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="93.7909%" y="917" width="0.0102%" height="15" fill="rgb(244,181,39)" fg:x="73548" fg:w="8"/><text x="94.0409%" y="927.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (12 samples, 0.02%)</title><rect x="93.8100%" y="709" width="0.0153%" height="15" fill="rgb(252,203,31)" fg:x="73563" fg:w="12"/><text x="94.0600%" y="719.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (12 samples, 0.02%)</title><rect x="93.8100%" y="693" width="0.0153%" height="15" fill="rgb(224,120,8)" fg:x="73563" fg:w="12"/><text x="94.0600%" y="703.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (10 samples, 0.01%)</title><rect x="93.8126%" y="677" width="0.0128%" height="15" fill="rgb(205,171,54)" fg:x="73565" fg:w="10"/><text x="94.0626%" y="687.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (10 samples, 0.01%)</title><rect x="93.8126%" y="661" width="0.0128%" height="15" fill="rgb(235,89,11)" fg:x="73565" fg:w="10"/><text x="94.0626%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (23 samples, 0.03%)</title><rect x="93.8011%" y="853" width="0.0293%" height="15" fill="rgb(212,180,28)" fg:x="73556" fg:w="23"/><text x="94.0511%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (23 samples, 0.03%)</title><rect x="93.8011%" y="837" width="0.0293%" height="15" fill="rgb(247,84,49)" fg:x="73556" fg:w="23"/><text x="94.0511%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (23 samples, 0.03%)</title><rect x="93.8011%" y="821" width="0.0293%" height="15" fill="rgb(236,187,52)" fg:x="73556" fg:w="23"/><text x="94.0511%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (22 samples, 0.03%)</title><rect x="93.8024%" y="805" width="0.0281%" height="15" fill="rgb(227,24,15)" fg:x="73557" fg:w="22"/><text x="94.0524%" y="815.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (20 samples, 0.03%)</title><rect x="93.8049%" y="789" width="0.0255%" height="15" fill="rgb(227,211,13)" fg:x="73559" fg:w="20"/><text x="94.0549%" y="799.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (20 samples, 0.03%)</title><rect x="93.8049%" y="773" width="0.0255%" height="15" fill="rgb(245,52,14)" fg:x="73559" fg:w="20"/><text x="94.0549%" y="783.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (20 samples, 0.03%)</title><rect x="93.8049%" y="757" width="0.0255%" height="15" fill="rgb(225,185,13)" fg:x="73559" fg:w="20"/><text x="94.0549%" y="767.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (20 samples, 0.03%)</title><rect x="93.8049%" y="741" width="0.0255%" height="15" fill="rgb(217,160,29)" fg:x="73559" fg:w="20"/><text x="94.0549%" y="751.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (19 samples, 0.02%)</title><rect x="93.8062%" y="725" width="0.0242%" height="15" fill="rgb(216,115,53)" fg:x="73560" fg:w="19"/><text x="94.0562%" y="735.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (13 samples, 0.02%)</title><rect x="93.8432%" y="757" width="0.0166%" height="15" fill="rgb(236,99,5)" fg:x="73589" fg:w="13"/><text x="94.0932%" y="767.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (13 samples, 0.02%)</title><rect x="93.8432%" y="741" width="0.0166%" height="15" fill="rgb(222,60,38)" fg:x="73589" fg:w="13"/><text x="94.0932%" y="751.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (19 samples, 0.02%)</title><rect x="93.8368%" y="789" width="0.0242%" height="15" fill="rgb(212,82,22)" fg:x="73584" fg:w="19"/><text x="94.0868%" y="799.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (19 samples, 0.02%)</title><rect x="93.8368%" y="773" width="0.0242%" height="15" fill="rgb(214,48,28)" fg:x="73584" fg:w="19"/><text x="94.0868%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (17 samples, 0.02%)</title><rect x="93.8687%" y="709" width="0.0217%" height="15" fill="rgb(245,196,50)" fg:x="73609" fg:w="17"/><text x="94.1187%" y="719.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (9 samples, 0.01%)</title><rect x="93.8789%" y="693" width="0.0115%" height="15" fill="rgb(225,159,46)" fg:x="73617" fg:w="9"/><text x="94.1289%" y="703.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (8 samples, 0.01%)</title><rect x="93.8802%" y="677" width="0.0102%" height="15" fill="rgb(207,195,48)" fg:x="73618" fg:w="8"/><text x="94.1302%" y="687.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (8 samples, 0.01%)</title><rect x="93.8802%" y="661" width="0.0102%" height="15" fill="rgb(240,73,3)" fg:x="73618" fg:w="8"/><text x="94.1302%" y="671.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (8 samples, 0.01%)</title><rect x="93.8802%" y="645" width="0.0102%" height="15" fill="rgb(245,57,23)" fg:x="73618" fg:w="8"/><text x="94.1302%" y="655.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (23 samples, 0.03%)</title><rect x="93.8649%" y="741" width="0.0293%" height="15" fill="rgb(240,75,18)" fg:x="73606" fg:w="23"/><text x="94.1149%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (22 samples, 0.03%)</title><rect x="93.8661%" y="725" width="0.0281%" height="15" fill="rgb(238,168,12)" fg:x="73607" fg:w="22"/><text x="94.1161%" y="735.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (9 samples, 0.01%)</title><rect x="93.9146%" y="629" width="0.0115%" height="15" fill="rgb(226,20,40)" fg:x="73645" fg:w="9"/><text x="94.1646%" y="639.50"></text></g><g><title>move_bytecode_verifier::locals_safety::verify (10 samples, 0.01%)</title><rect x="93.9146%" y="645" width="0.0128%" height="15" fill="rgb(224,130,35)" fg:x="73645" fg:w="10"/><text x="94.1646%" y="655.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (26 samples, 0.03%)</title><rect x="93.9273%" y="645" width="0.0332%" height="15" fill="rgb(225,63,41)" fg:x="73655" fg:w="26"/><text x="94.1773%" y="655.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (26 samples, 0.03%)</title><rect x="93.9273%" y="629" width="0.0332%" height="15" fill="rgb(219,3,3)" fg:x="73655" fg:w="26"/><text x="94.1773%" y="639.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (21 samples, 0.03%)</title><rect x="93.9337%" y="613" width="0.0268%" height="15" fill="rgb(218,157,4)" fg:x="73660" fg:w="21"/><text x="94.1837%" y="623.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (21 samples, 0.03%)</title><rect x="93.9337%" y="597" width="0.0268%" height="15" fill="rgb(232,76,36)" fg:x="73660" fg:w="21"/><text x="94.1837%" y="607.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (12 samples, 0.02%)</title><rect x="93.9452%" y="581" width="0.0153%" height="15" fill="rgb(247,36,0)" fg:x="73669" fg:w="12"/><text x="94.1952%" y="591.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (43 samples, 0.05%)</title><rect x="93.9146%" y="661" width="0.0548%" height="15" fill="rgb(205,2,34)" fg:x="73645" fg:w="43"/><text x="94.1646%" y="671.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (54 samples, 0.07%)</title><rect x="93.9069%" y="709" width="0.0689%" height="15" fill="rgb(239,136,13)" fg:x="73639" fg:w="54"/><text x="94.1569%" y="719.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (54 samples, 0.07%)</title><rect x="93.9069%" y="693" width="0.0689%" height="15" fill="rgb(253,122,12)" fg:x="73639" fg:w="54"/><text x="94.1569%" y="703.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (54 samples, 0.07%)</title><rect x="93.9069%" y="677" width="0.0689%" height="15" fill="rgb(222,174,7)" fg:x="73639" fg:w="54"/><text x="94.1569%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (66 samples, 0.08%)</title><rect x="93.8942%" y="741" width="0.0842%" height="15" fill="rgb(208,191,42)" fg:x="73629" fg:w="66"/><text x="94.1442%" y="751.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (58 samples, 0.07%)</title><rect x="93.9044%" y="725" width="0.0740%" height="15" fill="rgb(237,212,15)" fg:x="73637" fg:w="58"/><text x="94.1544%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (96 samples, 0.12%)</title><rect x="93.8610%" y="773" width="0.1224%" height="15" fill="rgb(215,65,20)" fg:x="73603" fg:w="96"/><text x="94.1110%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (93 samples, 0.12%)</title><rect x="93.8649%" y="757" width="0.1186%" height="15" fill="rgb(232,103,11)" fg:x="73606" fg:w="93"/><text x="94.1149%" y="767.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (13 samples, 0.02%)</title><rect x="94.0000%" y="677" width="0.0166%" height="15" fill="rgb(235,148,18)" fg:x="73712" fg:w="13"/><text x="94.2500%" y="687.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (13 samples, 0.02%)</title><rect x="94.0000%" y="661" width="0.0166%" height="15" fill="rgb(240,173,7)" fg:x="73712" fg:w="13"/><text x="94.2500%" y="671.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (11 samples, 0.01%)</title><rect x="94.0026%" y="645" width="0.0140%" height="15" fill="rgb(228,182,25)" fg:x="73714" fg:w="11"/><text x="94.2526%" y="655.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (9 samples, 0.01%)</title><rect x="94.0051%" y="629" width="0.0115%" height="15" fill="rgb(247,3,52)" fg:x="73716" fg:w="9"/><text x="94.2551%" y="639.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (18 samples, 0.02%)</title><rect x="93.9988%" y="693" width="0.0230%" height="15" fill="rgb(226,155,8)" fg:x="73711" fg:w="18"/><text x="94.2488%" y="703.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (22 samples, 0.03%)</title><rect x="93.9975%" y="741" width="0.0281%" height="15" fill="rgb(243,195,38)" fg:x="73710" fg:w="22"/><text x="94.2475%" y="751.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (22 samples, 0.03%)</title><rect x="93.9975%" y="725" width="0.0281%" height="15" fill="rgb(254,181,33)" fg:x="73710" fg:w="22"/><text x="94.2475%" y="735.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (22 samples, 0.03%)</title><rect x="93.9975%" y="709" width="0.0281%" height="15" fill="rgb(232,98,23)" fg:x="73710" fg:w="22"/><text x="94.2475%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (37 samples, 0.05%)</title><rect x="93.9834%" y="773" width="0.0472%" height="15" fill="rgb(205,23,10)" fg:x="73699" fg:w="37"/><text x="94.2334%" y="783.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (29 samples, 0.04%)</title><rect x="93.9936%" y="757" width="0.0370%" height="15" fill="rgb(212,124,38)" fg:x="73707" fg:w="29"/><text x="94.2436%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (157 samples, 0.20%)</title><rect x="93.8368%" y="805" width="0.2002%" height="15" fill="rgb(228,207,2)" fg:x="73584" fg:w="157"/><text x="94.0868%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (138 samples, 0.18%)</title><rect x="93.8610%" y="789" width="0.1760%" height="15" fill="rgb(215,120,22)" fg:x="73603" fg:w="138"/><text x="94.1110%" y="799.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (14 samples, 0.02%)</title><rect x="94.0995%" y="645" width="0.0179%" height="15" fill="rgb(251,172,33)" fg:x="73790" fg:w="14"/><text x="94.3495%" y="655.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (24 samples, 0.03%)</title><rect x="94.0880%" y="661" width="0.0306%" height="15" fill="rgb(250,83,2)" fg:x="73781" fg:w="24"/><text x="94.3380%" y="671.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (34 samples, 0.04%)</title><rect x="94.0778%" y="693" width="0.0434%" height="15" fill="rgb(210,132,53)" fg:x="73773" fg:w="34"/><text x="94.3278%" y="703.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (26 samples, 0.03%)</title><rect x="94.0880%" y="677" width="0.0332%" height="15" fill="rgb(221,208,36)" fg:x="73781" fg:w="26"/><text x="94.3380%" y="687.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (35 samples, 0.04%)</title><rect x="94.0778%" y="709" width="0.0446%" height="15" fill="rgb(205,192,46)" fg:x="73773" fg:w="35"/><text x="94.3278%" y="719.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (48 samples, 0.06%)</title><rect x="94.0727%" y="725" width="0.0612%" height="15" fill="rgb(223,163,14)" fg:x="73769" fg:w="48"/><text x="94.3227%" y="735.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (61 samples, 0.08%)</title><rect x="94.0651%" y="773" width="0.0778%" height="15" fill="rgb(218,41,28)" fg:x="73763" fg:w="61"/><text x="94.3151%" y="783.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (61 samples, 0.08%)</title><rect x="94.0651%" y="757" width="0.0778%" height="15" fill="rgb(235,104,10)" fg:x="73763" fg:w="61"/><text x="94.3151%" y="767.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (61 samples, 0.08%)</title><rect x="94.0651%" y="741" width="0.0778%" height="15" fill="rgb(246,17,4)" fg:x="73763" fg:w="61"/><text x="94.3151%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (90 samples, 0.11%)</title><rect x="94.0370%" y="805" width="0.1148%" height="15" fill="rgb(240,7,16)" fg:x="73741" fg:w="90"/><text x="94.2870%" y="815.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (80 samples, 0.10%)</title><rect x="94.0498%" y="789" width="0.1020%" height="15" fill="rgb(213,160,23)" fg:x="73751" fg:w="80"/><text x="94.2998%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (262 samples, 0.33%)</title><rect x="93.8304%" y="837" width="0.3341%" height="15" fill="rgb(251,179,49)" fg:x="73579" fg:w="262"/><text x="94.0804%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (257 samples, 0.33%)</title><rect x="93.8368%" y="821" width="0.3277%" height="15" fill="rgb(247,198,10)" fg:x="73584" fg:w="257"/><text x="94.0868%" y="831.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (10 samples, 0.01%)</title><rect x="94.1518%" y="805" width="0.0128%" height="15" fill="rgb(220,65,29)" fg:x="73831" fg:w="10"/><text x="94.4018%" y="815.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (11 samples, 0.01%)</title><rect x="94.1735%" y="741" width="0.0140%" height="15" fill="rgb(237,171,28)" fg:x="73848" fg:w="11"/><text x="94.4235%" y="751.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (11 samples, 0.01%)</title><rect x="94.1735%" y="725" width="0.0140%" height="15" fill="rgb(228,44,26)" fg:x="73848" fg:w="11"/><text x="94.4235%" y="735.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (8 samples, 0.01%)</title><rect x="94.1773%" y="709" width="0.0102%" height="15" fill="rgb(216,210,27)" fg:x="73851" fg:w="8"/><text x="94.4273%" y="719.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (8 samples, 0.01%)</title><rect x="94.1773%" y="693" width="0.0102%" height="15" fill="rgb(252,10,17)" fg:x="73851" fg:w="8"/><text x="94.4273%" y="703.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (12 samples, 0.02%)</title><rect x="94.1735%" y="757" width="0.0153%" height="15" fill="rgb(214,172,30)" fg:x="73848" fg:w="12"/><text x="94.4235%" y="767.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (15 samples, 0.02%)</title><rect x="94.1722%" y="805" width="0.0191%" height="15" fill="rgb(253,130,48)" fg:x="73847" fg:w="15"/><text x="94.4222%" y="815.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (15 samples, 0.02%)</title><rect x="94.1722%" y="789" width="0.0191%" height="15" fill="rgb(226,99,43)" fg:x="73847" fg:w="15"/><text x="94.4222%" y="799.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (15 samples, 0.02%)</title><rect x="94.1722%" y="773" width="0.0191%" height="15" fill="rgb(239,111,26)" fg:x="73847" fg:w="15"/><text x="94.4222%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (23 samples, 0.03%)</title><rect x="94.1645%" y="837" width="0.0293%" height="15" fill="rgb(240,27,53)" fg:x="73841" fg:w="23"/><text x="94.4145%" y="847.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (17 samples, 0.02%)</title><rect x="94.1722%" y="821" width="0.0217%" height="15" fill="rgb(254,163,12)" fg:x="73847" fg:w="17"/><text x="94.4222%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (309 samples, 0.39%)</title><rect x="93.8011%" y="885" width="0.3940%" height="15" fill="rgb(225,51,48)" fg:x="73556" fg:w="309"/><text x="94.0511%" y="895.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (309 samples, 0.39%)</title><rect x="93.8011%" y="869" width="0.3940%" height="15" fill="rgb(205,19,32)" fg:x="73556" fg:w="309"/><text x="94.0511%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (286 samples, 0.36%)</title><rect x="93.8304%" y="853" width="0.3647%" height="15" fill="rgb(218,119,26)" fg:x="73579" fg:w="286"/><text x="94.0804%" y="863.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (12 samples, 0.02%)</title><rect x="94.1951%" y="853" width="0.0153%" height="15" fill="rgb(231,173,33)" fg:x="73865" fg:w="12"/><text x="94.4451%" y="863.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (12 samples, 0.02%)</title><rect x="94.1951%" y="837" width="0.0153%" height="15" fill="rgb(241,100,29)" fg:x="73865" fg:w="12"/><text x="94.4451%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (13 samples, 0.02%)</title><rect x="94.2143%" y="805" width="0.0166%" height="15" fill="rgb(250,194,34)" fg:x="73880" fg:w="13"/><text x="94.4643%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (12 samples, 0.02%)</title><rect x="94.2155%" y="789" width="0.0153%" height="15" fill="rgb(215,23,50)" fg:x="73881" fg:w="12"/><text x="94.4655%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (10 samples, 0.01%)</title><rect x="94.2181%" y="773" width="0.0128%" height="15" fill="rgb(206,49,37)" fg:x="73883" fg:w="10"/><text x="94.4681%" y="783.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (9 samples, 0.01%)</title><rect x="94.2194%" y="757" width="0.0115%" height="15" fill="rgb(247,39,21)" fg:x="73884" fg:w="9"/><text x="94.4694%" y="767.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (8 samples, 0.01%)</title><rect x="94.2385%" y="741" width="0.0102%" height="15" fill="rgb(209,220,15)" fg:x="73899" fg:w="8"/><text x="94.4885%" y="751.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (9 samples, 0.01%)</title><rect x="94.2385%" y="773" width="0.0115%" height="15" fill="rgb(206,41,33)" fg:x="73899" fg:w="9"/><text x="94.4885%" y="783.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (9 samples, 0.01%)</title><rect x="94.2385%" y="757" width="0.0115%" height="15" fill="rgb(221,225,45)" fg:x="73899" fg:w="9"/><text x="94.4885%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (16 samples, 0.02%)</title><rect x="94.2308%" y="805" width="0.0204%" height="15" fill="rgb(216,27,18)" fg:x="73893" fg:w="16"/><text x="94.4808%" y="815.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (13 samples, 0.02%)</title><rect x="94.2347%" y="789" width="0.0166%" height="15" fill="rgb(250,193,34)" fg:x="73896" fg:w="13"/><text x="94.4847%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (35 samples, 0.04%)</title><rect x="94.2104%" y="837" width="0.0446%" height="15" fill="rgb(227,215,20)" fg:x="73877" fg:w="35"/><text x="94.4604%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (32 samples, 0.04%)</title><rect x="94.2143%" y="821" width="0.0408%" height="15" fill="rgb(242,211,27)" fg:x="73880" fg:w="32"/><text x="94.4643%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (11 samples, 0.01%)</title><rect x="94.2551%" y="837" width="0.0140%" height="15" fill="rgb(229,190,30)" fg:x="73912" fg:w="11"/><text x="94.5051%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (59 samples, 0.08%)</title><rect x="94.1951%" y="869" width="0.0752%" height="15" fill="rgb(253,31,29)" fg:x="73865" fg:w="59"/><text x="94.4451%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (47 samples, 0.06%)</title><rect x="94.2104%" y="853" width="0.0599%" height="15" fill="rgb(229,177,52)" fg:x="73877" fg:w="47"/><text x="94.4604%" y="863.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (9 samples, 0.01%)</title><rect x="94.2729%" y="853" width="0.0115%" height="15" fill="rgb(226,88,8)" fg:x="73926" fg:w="9"/><text x="94.5229%" y="863.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (18 samples, 0.02%)</title><rect x="94.2946%" y="773" width="0.0230%" height="15" fill="rgb(214,55,27)" fg:x="73943" fg:w="18"/><text x="94.5446%" y="783.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (18 samples, 0.02%)</title><rect x="94.2946%" y="757" width="0.0230%" height="15" fill="rgb(233,202,5)" fg:x="73943" fg:w="18"/><text x="94.5446%" y="767.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (11 samples, 0.01%)</title><rect x="94.3035%" y="741" width="0.0140%" height="15" fill="rgb(251,49,30)" fg:x="73950" fg:w="11"/><text x="94.5535%" y="751.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (9 samples, 0.01%)</title><rect x="94.3061%" y="725" width="0.0115%" height="15" fill="rgb(235,18,52)" fg:x="73952" fg:w="9"/><text x="94.5561%" y="735.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (26 samples, 0.03%)</title><rect x="94.2933%" y="789" width="0.0332%" height="15" fill="rgb(250,111,51)" fg:x="73942" fg:w="26"/><text x="94.5433%" y="799.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (36 samples, 0.05%)</title><rect x="94.2870%" y="837" width="0.0459%" height="15" fill="rgb(218,13,25)" fg:x="73937" fg:w="36"/><text x="94.5370%" y="847.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (36 samples, 0.05%)</title><rect x="94.2870%" y="821" width="0.0459%" height="15" fill="rgb(248,96,7)" fg:x="73937" fg:w="36"/><text x="94.5370%" y="831.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (36 samples, 0.05%)</title><rect x="94.2870%" y="805" width="0.0459%" height="15" fill="rgb(217,31,15)" fg:x="73937" fg:w="36"/><text x="94.5370%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (56 samples, 0.07%)</title><rect x="94.2704%" y="869" width="0.0714%" height="15" fill="rgb(228,59,49)" fg:x="73924" fg:w="56"/><text x="94.5204%" y="879.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (45 samples, 0.06%)</title><rect x="94.2844%" y="853" width="0.0574%" height="15" fill="rgb(210,152,38)" fg:x="73935" fg:w="45"/><text x="94.5344%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (426 samples, 0.54%)</title><rect x="93.8011%" y="917" width="0.5432%" height="15" fill="rgb(206,71,11)" fg:x="73556" fg:w="426"/><text x="94.0511%" y="927.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (426 samples, 0.54%)</title><rect x="93.8011%" y="901" width="0.5432%" height="15" fill="rgb(244,199,5)" fg:x="73556" fg:w="426"/><text x="94.0511%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (117 samples, 0.15%)</title><rect x="94.1951%" y="885" width="0.1492%" height="15" fill="rgb(253,49,1)" fg:x="73865" fg:w="117"/><text x="94.4451%" y="895.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (8 samples, 0.01%)</title><rect x="94.3609%" y="709" width="0.0102%" height="15" fill="rgb(225,206,40)" fg:x="73995" fg:w="8"/><text x="94.6109%" y="719.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (8 samples, 0.01%)</title><rect x="94.3609%" y="693" width="0.0102%" height="15" fill="rgb(243,116,47)" fg:x="73995" fg:w="8"/><text x="94.6109%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (16 samples, 0.02%)</title><rect x="94.3520%" y="837" width="0.0204%" height="15" fill="rgb(219,225,16)" fg:x="73988" fg:w="16"/><text x="94.6020%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (15 samples, 0.02%)</title><rect x="94.3533%" y="821" width="0.0191%" height="15" fill="rgb(233,29,47)" fg:x="73989" fg:w="15"/><text x="94.6033%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (15 samples, 0.02%)</title><rect x="94.3533%" y="805" width="0.0191%" height="15" fill="rgb(250,179,18)" fg:x="73989" fg:w="15"/><text x="94.6033%" y="815.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (14 samples, 0.02%)</title><rect x="94.3545%" y="789" width="0.0179%" height="15" fill="rgb(215,176,6)" fg:x="73990" fg:w="14"/><text x="94.6045%" y="799.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (13 samples, 0.02%)</title><rect x="94.3558%" y="773" width="0.0166%" height="15" fill="rgb(214,117,39)" fg:x="73991" fg:w="13"/><text x="94.6058%" y="783.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (13 samples, 0.02%)</title><rect x="94.3558%" y="757" width="0.0166%" height="15" fill="rgb(247,183,36)" fg:x="73991" fg:w="13"/><text x="94.6058%" y="767.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (13 samples, 0.02%)</title><rect x="94.3558%" y="741" width="0.0166%" height="15" fill="rgb(237,200,3)" fg:x="73991" fg:w="13"/><text x="94.6058%" y="751.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (11 samples, 0.01%)</title><rect x="94.3584%" y="725" width="0.0140%" height="15" fill="rgb(212,220,24)" fg:x="73993" fg:w="11"/><text x="94.6084%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (29 samples, 0.04%)</title><rect x="94.3469%" y="869" width="0.0370%" height="15" fill="rgb(245,216,20)" fg:x="73984" fg:w="29"/><text x="94.5969%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (26 samples, 0.03%)</title><rect x="94.3507%" y="853" width="0.0332%" height="15" fill="rgb(219,124,7)" fg:x="73987" fg:w="26"/><text x="94.6007%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (9 samples, 0.01%)</title><rect x="94.3724%" y="837" width="0.0115%" height="15" fill="rgb(227,167,8)" fg:x="74004" fg:w="9"/><text x="94.6224%" y="847.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (11 samples, 0.01%)</title><rect x="94.3915%" y="837" width="0.0140%" height="15" fill="rgb(241,37,2)" fg:x="74019" fg:w="11"/><text x="94.6415%" y="847.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (11 samples, 0.01%)</title><rect x="94.3915%" y="821" width="0.0140%" height="15" fill="rgb(238,134,33)" fg:x="74019" fg:w="11"/><text x="94.6415%" y="831.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (11 samples, 0.01%)</title><rect x="94.3915%" y="805" width="0.0140%" height="15" fill="rgb(248,48,27)" fg:x="74019" fg:w="11"/><text x="94.6415%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (18 samples, 0.02%)</title><rect x="94.3839%" y="869" width="0.0230%" height="15" fill="rgb(212,14,16)" fg:x="74013" fg:w="18"/><text x="94.6339%" y="879.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (12 samples, 0.02%)</title><rect x="94.3915%" y="853" width="0.0153%" height="15" fill="rgb(217,205,37)" fg:x="74019" fg:w="12"/><text x="94.6415%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (53 samples, 0.07%)</title><rect x="94.3443%" y="901" width="0.0676%" height="15" fill="rgb(233,185,47)" fg:x="73982" fg:w="53"/><text x="94.5943%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (52 samples, 0.07%)</title><rect x="94.3456%" y="885" width="0.0663%" height="15" fill="rgb(244,88,8)" fg:x="73983" fg:w="52"/><text x="94.5956%" y="895.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (9 samples, 0.01%)</title><rect x="94.4234%" y="805" width="0.0115%" height="15" fill="rgb(213,0,20)" fg:x="74044" fg:w="9"/><text x="94.6734%" y="815.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (9 samples, 0.01%)</title><rect x="94.4234%" y="789" width="0.0115%" height="15" fill="rgb(238,159,36)" fg:x="74044" fg:w="9"/><text x="94.6734%" y="799.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (13 samples, 0.02%)</title><rect x="94.4196%" y="821" width="0.0166%" height="15" fill="rgb(253,173,17)" fg:x="74041" fg:w="13"/><text x="94.6696%" y="831.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (15 samples, 0.02%)</title><rect x="94.4183%" y="869" width="0.0191%" height="15" fill="rgb(221,23,28)" fg:x="74040" fg:w="15"/><text x="94.6683%" y="879.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (15 samples, 0.02%)</title><rect x="94.4183%" y="853" width="0.0191%" height="15" fill="rgb(218,113,15)" fg:x="74040" fg:w="15"/><text x="94.6683%" y="863.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (15 samples, 0.02%)</title><rect x="94.4183%" y="837" width="0.0191%" height="15" fill="rgb(233,58,3)" fg:x="74040" fg:w="15"/><text x="94.6683%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (25 samples, 0.03%)</title><rect x="94.4119%" y="901" width="0.0319%" height="15" fill="rgb(250,46,35)" fg:x="74035" fg:w="25"/><text x="94.6619%" y="911.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (22 samples, 0.03%)</title><rect x="94.4158%" y="885" width="0.0281%" height="15" fill="rgb(210,169,11)" fg:x="74038" fg:w="22"/><text x="94.6658%" y="895.50"></text></g><g><title>aptos_vm::aptos_vm::AptosVM::load_module (506 samples, 0.65%)</title><rect x="93.8011%" y="1013" width="0.6453%" height="15" fill="rgb(246,88,19)" fg:x="73556" fg:w="506"/><text x="94.0511%" y="1023.50"></text></g><g><title>aptos_vm::aptos_vm_impl::AptosVMImpl::load_module (506 samples, 0.65%)</title><rect x="93.8011%" y="997" width="0.6453%" height="15" fill="rgb(206,81,49)" fg:x="73556" fg:w="506"/><text x="94.0511%" y="1007.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (506 samples, 0.65%)</title><rect x="93.8011%" y="981" width="0.6453%" height="15" fill="rgb(232,144,18)" fg:x="73556" fg:w="506"/><text x="94.0511%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (506 samples, 0.65%)</title><rect x="93.8011%" y="965" width="0.6453%" height="15" fill="rgb(235,2,27)" fg:x="73556" fg:w="506"/><text x="94.0511%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (506 samples, 0.65%)</title><rect x="93.8011%" y="949" width="0.6453%" height="15" fill="rgb(239,157,39)" fg:x="73556" fg:w="506"/><text x="94.0511%" y="959.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (506 samples, 0.65%)</title><rect x="93.8011%" y="933" width="0.6453%" height="15" fill="rgb(220,11,17)" fg:x="73556" fg:w="506"/><text x="94.0511%" y="943.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (80 samples, 0.10%)</title><rect x="94.3443%" y="917" width="0.1020%" height="15" fill="rgb(243,94,50)" fg:x="73982" fg:w="80"/><text x="94.5943%" y="927.50"></text></g><g><title>&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (511 samples, 0.65%)</title><rect x="93.8011%" y="1029" width="0.6516%" height="15" fill="rgb(218,22,0)" fg:x="73556" fg:w="511"/><text x="94.0511%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.02%)</title><rect x="94.4527%" y="997" width="0.0179%" height="15" fill="rgb(249,70,21)" fg:x="74067" fg:w="14"/><text x="94.7027%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.02%)</title><rect x="94.4527%" y="981" width="0.0179%" height="15" fill="rgb(245,111,46)" fg:x="74067" fg:w="14"/><text x="94.7027%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.02%)</title><rect x="94.4527%" y="965" width="0.0179%" height="15" fill="rgb(244,183,12)" fg:x="74067" fg:w="14"/><text x="94.7027%" y="975.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::Ord&gt;::cmp (14 samples, 0.02%)</title><rect x="94.4527%" y="949" width="0.0179%" height="15" fill="rgb(207,117,0)" fg:x="74067" fg:w="14"/><text x="94.7027%" y="959.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::cmp::Ord&gt;::cmp (14 samples, 0.02%)</title><rect x="94.4527%" y="933" width="0.0179%" height="15" fill="rgb(206,20,43)" fg:x="74067" fg:w="14"/><text x="94.7027%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (14 samples, 0.02%)</title><rect x="94.4527%" y="917" width="0.0179%" height="15" fill="rgb(221,104,11)" fg:x="74067" fg:w="14"/><text x="94.7027%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (14 samples, 0.02%)</title><rect x="94.4527%" y="901" width="0.0179%" height="15" fill="rgb(254,36,50)" fg:x="74067" fg:w="14"/><text x="94.7027%" y="911.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (14 samples, 0.02%)</title><rect x="94.4527%" y="885" width="0.0179%" height="15" fill="rgb(252,17,15)" fg:x="74067" fg:w="14"/><text x="94.7027%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (14 samples, 0.02%)</title><rect x="94.4527%" y="869" width="0.0179%" height="15" fill="rgb(219,129,43)" fg:x="74067" fg:w="14"/><text x="94.7027%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (17 samples, 0.02%)</title><rect x="94.4527%" y="1029" width="0.0217%" height="15" fill="rgb(205,34,45)" fg:x="74067" fg:w="17"/><text x="94.7027%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (17 samples, 0.02%)</title><rect x="94.4527%" y="1013" width="0.0217%" height="15" fill="rgb(251,201,32)" fg:x="74067" fg:w="17"/><text x="94.7027%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.01%)</title><rect x="94.4744%" y="1029" width="0.0102%" height="15" fill="rgb(205,56,0)" fg:x="74084" fg:w="8"/><text x="94.7244%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.01%)</title><rect x="94.4744%" y="1013" width="0.0102%" height="15" fill="rgb(211,193,27)" fg:x="74084" fg:w="8"/><text x="94.7244%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="94.4846%" y="821" width="0.0153%" height="15" fill="rgb(231,100,42)" fg:x="74092" fg:w="12"/><text x="94.7346%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="94.4846%" y="805" width="0.0153%" height="15" fill="rgb(245,85,27)" fg:x="74092" fg:w="12"/><text x="94.7346%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;]&gt; (12 samples, 0.02%)</title><rect x="94.4846%" y="789" width="0.0153%" height="15" fill="rgb(241,76,24)" fg:x="74092" fg:w="12"/><text x="94.7346%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (12 samples, 0.02%)</title><rect x="94.4846%" y="773" width="0.0153%" height="15" fill="rgb(249,157,15)" fg:x="74092" fg:w="12"/><text x="94.7346%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="94.4846%" y="757" width="0.0153%" height="15" fill="rgb(222,218,25)" fg:x="74092" fg:w="12"/><text x="94.7346%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (12 samples, 0.02%)</title><rect x="94.4846%" y="741" width="0.0153%" height="15" fill="rgb(252,156,52)" fg:x="74092" fg:w="12"/><text x="94.7346%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Function&gt; (12 samples, 0.02%)</title><rect x="94.4846%" y="725" width="0.0153%" height="15" fill="rgb(211,185,7)" fg:x="74092" fg:w="12"/><text x="94.7346%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (8 samples, 0.01%)</title><rect x="94.4897%" y="709" width="0.0102%" height="15" fill="rgb(234,108,24)" fg:x="74096" fg:w="8"/><text x="94.7397%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (8 samples, 0.01%)</title><rect x="94.4897%" y="693" width="0.0102%" height="15" fill="rgb(227,218,2)" fg:x="74096" fg:w="8"/><text x="94.7397%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.01%)</title><rect x="94.5012%" y="661" width="0.0115%" height="15" fill="rgb(224,0,36)" fg:x="74105" fg:w="9"/><text x="94.7512%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CompiledModule&gt; (9 samples, 0.01%)</title><rect x="94.5012%" y="645" width="0.0115%" height="15" fill="rgb(233,201,10)" fg:x="74105" fg:w="9"/><text x="94.7512%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_binary_format::file_format::CompiledModule&gt;&gt; (10 samples, 0.01%)</title><rect x="94.5012%" y="693" width="0.0128%" height="15" fill="rgb(252,209,14)" fg:x="74105" fg:w="10"/><text x="94.7512%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="94.5012%" y="677" width="0.0128%" height="15" fill="rgb(205,93,49)" fg:x="74105" fg:w="10"/><text x="94.7512%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (17 samples, 0.02%)</title><rect x="94.5012%" y="725" width="0.0217%" height="15" fill="rgb(234,116,45)" fg:x="74105" fg:w="17"/><text x="94.7512%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Module&gt; (17 samples, 0.02%)</title><rect x="94.5012%" y="709" width="0.0217%" height="15" fill="rgb(248,89,35)" fg:x="74105" fg:w="17"/><text x="94.7512%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (32 samples, 0.04%)</title><rect x="94.4846%" y="869" width="0.0408%" height="15" fill="rgb(233,167,45)" fg:x="74092" fg:w="32"/><text x="94.7346%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;move_vm_runtime::loader::ModuleCache&gt;&gt; (32 samples, 0.04%)</title><rect x="94.4846%" y="853" width="0.0408%" height="15" fill="rgb(248,228,14)" fg:x="74092" fg:w="32"/><text x="94.7346%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::ModuleCache&gt; (32 samples, 0.04%)</title><rect x="94.4846%" y="837" width="0.0408%" height="15" fill="rgb(246,91,14)" fg:x="74092" fg:w="32"/><text x="94.7346%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryCache&lt;move_core_types::language_storage::ModuleId,move_vm_runtime::loader::Module&gt;&gt; (19 samples, 0.02%)</title><rect x="94.5012%" y="821" width="0.0242%" height="15" fill="rgb(227,142,5)" fg:x="74105" fg:w="19"/><text x="94.7512%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="94.5012%" y="805" width="0.0242%" height="15" fill="rgb(221,63,33)" fg:x="74105" fg:w="19"/><text x="94.7512%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="94.5012%" y="789" width="0.0242%" height="15" fill="rgb(233,49,0)" fg:x="74105" fg:w="19"/><text x="94.7512%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;]&gt; (19 samples, 0.02%)</title><rect x="94.5012%" y="773" width="0.0242%" height="15" fill="rgb(251,115,38)" fg:x="74105" fg:w="19"/><text x="94.7512%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (19 samples, 0.02%)</title><rect x="94.5012%" y="757" width="0.0242%" height="15" fill="rgb(231,214,32)" fg:x="74105" fg:w="19"/><text x="94.7512%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="94.5012%" y="741" width="0.0242%" height="15" fill="rgb(248,73,46)" fg:x="74105" fg:w="19"/><text x="94.7512%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::block_executor::vm_wrapper::AptosExecutorTask&lt;&amp;aptos_storage_interface::cached_state_view::CachedStateView&gt;&gt; (34 samples, 0.04%)</title><rect x="94.4846%" y="1029" width="0.0434%" height="15" fill="rgb(237,156,4)" fg:x="74092" fg:w="34"/><text x="94.7346%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::aptos_vm::AptosVM&gt; (34 samples, 0.04%)</title><rect x="94.4846%" y="1013" width="0.0434%" height="15" fill="rgb(227,132,2)" fg:x="74092" fg:w="34"/><text x="94.7346%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::aptos_vm_impl::AptosVMImpl&gt; (34 samples, 0.04%)</title><rect x="94.4846%" y="997" width="0.0434%" height="15" fill="rgb(248,161,9)" fg:x="74092" fg:w="34"/><text x="94.7346%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_vm::move_vm_ext::vm::MoveVmExt&gt;&gt; (34 samples, 0.04%)</title><rect x="94.4846%" y="981" width="0.0434%" height="15" fill="rgb(238,77,38)" fg:x="74092" fg:w="34"/><text x="94.7346%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.04%)</title><rect x="94.4846%" y="965" width="0.0434%" height="15" fill="rgb(222,166,40)" fg:x="74092" fg:w="34"/><text x="94.7346%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (34 samples, 0.04%)</title><rect x="94.4846%" y="949" width="0.0434%" height="15" fill="rgb(214,168,45)" fg:x="74092" fg:w="34"/><text x="94.7346%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::move_vm_ext::vm::MoveVmExt&gt; (34 samples, 0.04%)</title><rect x="94.4846%" y="933" width="0.0434%" height="15" fill="rgb(226,64,37)" fg:x="74092" fg:w="34"/><text x="94.7346%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::move_vm::MoveVM&gt; (34 samples, 0.04%)</title><rect x="94.4846%" y="917" width="0.0434%" height="15" fill="rgb(232,210,43)" fg:x="74092" fg:w="34"/><text x="94.7346%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::runtime::VMRuntime&gt; (34 samples, 0.04%)</title><rect x="94.4846%" y="901" width="0.0434%" height="15" fill="rgb(214,76,33)" fg:x="74092" fg:w="34"/><text x="94.7346%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Loader&gt; (34 samples, 0.04%)</title><rect x="94.4846%" y="885" width="0.0434%" height="15" fill="rgb(210,78,5)" fg:x="74092" fg:w="34"/><text x="94.7346%" y="895.50"></text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_sequential (71,597 samples, 91.30%)</title><rect x="3.2429%" y="1045" width="91.3029%" height="15" fill="rgb(211,107,37)" fg:x="2543" fg:w="71597"/><text x="3.4929%" y="1055.50">aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_sequential</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;aptos_types::write_set::WriteOp&gt;&gt; (14 samples, 0.02%)</title><rect x="94.5280%" y="1029" width="0.0179%" height="15" fill="rgb(249,67,16)" fg:x="74126" fg:w="14"/><text x="94.7780%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (14 samples, 0.02%)</title><rect x="94.5280%" y="1013" width="0.0179%" height="15" fill="rgb(222,114,31)" fg:x="74126" fg:w="14"/><text x="94.7780%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.02%)</title><rect x="94.5280%" y="997" width="0.0179%" height="15" fill="rgb(242,118,19)" fg:x="74126" fg:w="14"/><text x="94.7780%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.02%)</title><rect x="94.5280%" y="981" width="0.0179%" height="15" fill="rgb(223,115,1)" fg:x="74126" fg:w="14"/><text x="94.7780%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="94.5280%" y="965" width="0.0179%" height="15" fill="rgb(241,182,54)" fg:x="74126" fg:w="14"/><text x="94.7780%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.02%)</title><rect x="94.5280%" y="949" width="0.0179%" height="15" fill="rgb(244,166,36)" fg:x="74126" fg:w="14"/><text x="94.7780%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.02%)</title><rect x="94.5280%" y="933" width="0.0179%" height="15" fill="rgb(241,52,43)" fg:x="74126" fg:w="14"/><text x="94.7780%" y="943.50"></text></g><g><title>aptos_api::executor::src::components::chunk_output::ChunkOutput::execute_block (71,599 samples, 91.31%)</title><rect x="3.2429%" y="1093" width="91.3055%" height="15" fill="rgb(236,82,9)" fg:x="2543" fg:w="71599"/><text x="3.4929%" y="1103.50">aptos_api::executor::src::components::chunk_output::ChunkOutput::execute_block</text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::VMExecutor&gt;::execute_block (71,599 samples, 91.31%)</title><rect x="3.2429%" y="1077" width="91.3055%" height="15" fill="rgb(241,119,0)" fg:x="2543" fg:w="71599"/><text x="3.4929%" y="1087.50">&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::VMExecutor&gt;::execute_block</text></g><g><title>aptos_vm::block_executor::BlockAptosVM::execute_block (71,599 samples, 91.31%)</title><rect x="3.2429%" y="1061" width="91.3055%" height="15" fill="rgb(221,19,22)" fg:x="2543" fg:w="71599"/><text x="3.4929%" y="1071.50">aptos_vm::block_executor::BlockAptosVM::execute_block</text></g><g><title>aptos_api::executor::src::components::chunk_output::ChunkOutput::by_transaction_execution (71,621 samples, 91.33%)</title><rect x="3.2161%" y="1109" width="91.3335%" height="15" fill="rgb(254,144,35)" fg:x="2522" fg:w="71621"/><text x="3.4661%" y="1119.50">aptos_api::executor::src::components::chunk_output::ChunkOutput::by_transaction_execution</text></g><g><title>&lt;aptos_api::executor::src::block_executor::BlockExecutor&lt;V&gt; as aptos_executor_types::BlockExecutorTrait&gt;::execute_block (72,814 samples, 92.85%)</title><rect x="1.7037%" y="1141" width="92.8549%" height="15" fill="rgb(246,132,30)" fg:x="1336" fg:w="72814"/><text x="1.9537%" y="1151.50">&lt;aptos_api::executor::src::block_executor::BlockExecutor&lt;V&gt; as aptos_executor_types::BlockExecutorTrait&gt;::execute_block</text></g><g><title>aptos_api::executor::src::block_executor::BlockExecutorInner&lt;V&gt;::execute_block (72,814 samples, 92.85%)</title><rect x="1.7037%" y="1125" width="92.8549%" height="15" fill="rgb(234,69,28)" fg:x="1336" fg:w="72814"/><text x="1.9537%" y="1135.50">aptos_api::executor::src::block_executor::BlockExecutorInner&lt;V&gt;::execute_block</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="94.5586%" y="933" width="0.0102%" height="15" fill="rgb(219,106,47)" fg:x="74150" fg:w="8"/><text x="94.8086%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="94.5586%" y="917" width="0.0102%" height="15" fill="rgb(218,79,24)" fg:x="74150" fg:w="8"/><text x="94.8086%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="94.5586%" y="901" width="0.0102%" height="15" fill="rgb(225,26,21)" fg:x="74150" fg:w="8"/><text x="94.8086%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="94.5586%" y="885" width="0.0102%" height="15" fill="rgb(217,68,49)" fg:x="74150" fg:w="8"/><text x="94.8086%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="94.5586%" y="869" width="0.0102%" height="15" fill="rgb(220,204,28)" fg:x="74150" fg:w="8"/><text x="94.8086%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="94.5586%" y="853" width="0.0102%" height="15" fill="rgb(237,208,43)" fg:x="74150" fg:w="8"/><text x="94.8086%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.01%)</title><rect x="94.5586%" y="837" width="0.0102%" height="15" fill="rgb(213,97,42)" fg:x="74150" fg:w="8"/><text x="94.8086%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="94.5586%" y="821" width="0.0102%" height="15" fill="rgb(238,96,52)" fg:x="74150" fg:w="8"/><text x="94.8086%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="94.5586%" y="805" width="0.0102%" height="15" fill="rgb(228,14,13)" fg:x="74150" fg:w="8"/><text x="94.8086%" y="815.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="94.5586%" y="789" width="0.0102%" height="15" fill="rgb(219,123,13)" fg:x="74150" fg:w="8"/><text x="94.8086%" y="799.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (10 samples, 0.01%)</title><rect x="94.5688%" y="901" width="0.0128%" height="15" fill="rgb(216,144,17)" fg:x="74158" fg:w="10"/><text x="94.8188%" y="911.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="94.5688%" y="885" width="0.0128%" height="15" fill="rgb(230,228,29)" fg:x="74158" fg:w="10"/><text x="94.8188%" y="895.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="94.5688%" y="933" width="0.0179%" height="15" fill="rgb(233,18,5)" fg:x="74158" fg:w="14"/><text x="94.8188%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="94.5688%" y="917" width="0.0179%" height="15" fill="rgb(233,197,12)" fg:x="74158" fg:w="14"/><text x="94.8188%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.03%)</title><rect x="94.5586%" y="997" width="0.0306%" height="15" fill="rgb(234,140,29)" fg:x="74150" fg:w="24"/><text x="94.8086%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.03%)</title><rect x="94.5586%" y="981" width="0.0306%" height="15" fill="rgb(233,113,19)" fg:x="74150" fg:w="24"/><text x="94.8086%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.03%)</title><rect x="94.5586%" y="965" width="0.0306%" height="15" fill="rgb(246,209,13)" fg:x="74150" fg:w="24"/><text x="94.8086%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.03%)</title><rect x="94.5586%" y="949" width="0.0306%" height="15" fill="rgb(242,79,54)" fg:x="74150" fg:w="24"/><text x="94.8086%" y="959.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (30 samples, 0.04%)</title><rect x="94.5586%" y="1029" width="0.0383%" height="15" fill="rgb(219,73,16)" fg:x="74150" fg:w="30"/><text x="94.8086%" y="1039.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (30 samples, 0.04%)</title><rect x="94.5586%" y="1013" width="0.0383%" height="15" fill="rgb(224,52,10)" fg:x="74150" fg:w="30"/><text x="94.8086%" y="1023.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as core::clone::Clone&gt;::clone (34 samples, 0.04%)</title><rect x="94.5586%" y="1077" width="0.0434%" height="15" fill="rgb(237,179,5)" fg:x="74150" fg:w="34"/><text x="94.8086%" y="1087.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (34 samples, 0.04%)</title><rect x="94.5586%" y="1061" width="0.0434%" height="15" fill="rgb(231,20,6)" fg:x="74150" fg:w="34"/><text x="94.8086%" y="1071.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (34 samples, 0.04%)</title><rect x="94.5586%" y="1045" width="0.0434%" height="15" fill="rgb(253,171,45)" fg:x="74150" fg:w="34"/><text x="94.8086%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (35 samples, 0.04%)</title><rect x="94.5586%" y="1141" width="0.0446%" height="15" fill="rgb(230,75,49)" fg:x="74150" fg:w="35"/><text x="94.8086%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35 samples, 0.04%)</title><rect x="94.5586%" y="1125" width="0.0446%" height="15" fill="rgb(216,83,46)" fg:x="74150" fg:w="35"/><text x="94.8086%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (35 samples, 0.04%)</title><rect x="94.5586%" y="1109" width="0.0446%" height="15" fill="rgb(236,56,9)" fg:x="74150" fg:w="35"/><text x="94.8086%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35 samples, 0.04%)</title><rect x="94.5586%" y="1093" width="0.0446%" height="15" fill="rgb(215,28,34)" fg:x="74150" fg:w="35"/><text x="94.8086%" y="1103.50"></text></g><g><title>__rust_dealloc (12 samples, 0.02%)</title><rect x="94.6147%" y="661" width="0.0153%" height="15" fill="rgb(230,222,20)" fg:x="74194" fg:w="12"/><text x="94.8647%" y="671.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (8 samples, 0.01%)</title><rect x="94.6198%" y="645" width="0.0102%" height="15" fill="rgb(235,209,51)" fg:x="74198" fg:w="8"/><text x="94.8698%" y="655.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (27 samples, 0.03%)</title><rect x="94.6708%" y="565" width="0.0344%" height="15" fill="rgb(235,167,1)" fg:x="74238" fg:w="27"/><text x="94.9208%" y="575.50"></text></g><g><title>arena_dalloc_bin_locked_impl (27 samples, 0.03%)</title><rect x="94.6708%" y="549" width="0.0344%" height="15" fill="rgb(248,220,0)" fg:x="74238" fg:w="27"/><text x="94.9208%" y="559.50"></text></g><g><title>arena_slab_reg_dalloc (22 samples, 0.03%)</title><rect x="94.6772%" y="533" width="0.0281%" height="15" fill="rgb(239,0,18)" fg:x="74243" fg:w="22"/><text x="94.9272%" y="543.50"></text></g><g><title>arena_slab_regind (22 samples, 0.03%)</title><rect x="94.6772%" y="517" width="0.0281%" height="15" fill="rgb(229,179,11)" fg:x="74243" fg:w="22"/><text x="94.9272%" y="527.50"></text></g><g><title>div_compute (22 samples, 0.03%)</title><rect x="94.6772%" y="501" width="0.0281%" height="15" fill="rgb(226,116,53)" fg:x="74243" fg:w="22"/><text x="94.9272%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (129 samples, 0.16%)</title><rect x="94.6083%" y="789" width="0.1645%" height="15" fill="rgb(218,1,49)" fg:x="74189" fg:w="129"/><text x="94.8583%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_schemadb::WriteOp]&gt; (129 samples, 0.16%)</title><rect x="94.6083%" y="773" width="0.1645%" height="15" fill="rgb(208,184,47)" fg:x="74189" fg:w="129"/><text x="94.8583%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_schemadb::WriteOp&gt; (127 samples, 0.16%)</title><rect x="94.6109%" y="757" width="0.1620%" height="15" fill="rgb(238,174,3)" fg:x="74191" fg:w="127"/><text x="94.8609%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (127 samples, 0.16%)</title><rect x="94.6109%" y="741" width="0.1620%" height="15" fill="rgb(247,188,6)" fg:x="74191" fg:w="127"/><text x="94.8609%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (127 samples, 0.16%)</title><rect x="94.6109%" y="725" width="0.1620%" height="15" fill="rgb(211,165,46)" fg:x="74191" fg:w="127"/><text x="94.8609%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (127 samples, 0.16%)</title><rect x="94.6109%" y="709" width="0.1620%" height="15" fill="rgb(222,190,10)" fg:x="74191" fg:w="127"/><text x="94.8609%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (127 samples, 0.16%)</title><rect x="94.6109%" y="693" width="0.1620%" height="15" fill="rgb(206,185,3)" fg:x="74191" fg:w="127"/><text x="94.8609%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (127 samples, 0.16%)</title><rect x="94.6109%" y="677" width="0.1620%" height="15" fill="rgb(244,125,37)" fg:x="74191" fg:w="127"/><text x="94.8609%" y="687.50"></text></g><g><title>sdallocx (111 samples, 0.14%)</title><rect x="94.6313%" y="661" width="0.1416%" height="15" fill="rgb(211,43,7)" fg:x="74207" fg:w="111"/><text x="94.8813%" y="671.50"></text></g><g><title>isfree (111 samples, 0.14%)</title><rect x="94.6313%" y="645" width="0.1416%" height="15" fill="rgb(250,41,42)" fg:x="74207" fg:w="111"/><text x="94.8813%" y="655.50"></text></g><g><title>isdalloct (111 samples, 0.14%)</title><rect x="94.6313%" y="629" width="0.1416%" height="15" fill="rgb(254,54,42)" fg:x="74207" fg:w="111"/><text x="94.8813%" y="639.50"></text></g><g><title>arena_sdalloc (111 samples, 0.14%)</title><rect x="94.6313%" y="613" width="0.1416%" height="15" fill="rgb(213,71,43)" fg:x="74207" fg:w="111"/><text x="94.8813%" y="623.50"></text></g><g><title>tcache_dalloc_small (111 samples, 0.14%)</title><rect x="94.6313%" y="597" width="0.1416%" height="15" fill="rgb(249,3,44)" fg:x="74207" fg:w="111"/><text x="94.8813%" y="607.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (80 samples, 0.10%)</title><rect x="94.6708%" y="581" width="0.1020%" height="15" fill="rgb(229,80,41)" fg:x="74238" fg:w="80"/><text x="94.9208%" y="591.50"></text></g><g><title>extent_arena_get (52 samples, 0.07%)</title><rect x="94.7065%" y="565" width="0.0663%" height="15" fill="rgb(231,25,28)" fg:x="74266" fg:w="52"/><text x="94.9565%" y="575.50"></text></g><g><title>atomic_load_p (52 samples, 0.07%)</title><rect x="94.7065%" y="549" width="0.0663%" height="15" fill="rgb(208,79,48)" fg:x="74266" fg:w="52"/><text x="94.9565%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_schemadb::SchemaBatch&gt; (130 samples, 0.17%)</title><rect x="94.6083%" y="1013" width="0.1658%" height="15" fill="rgb(207,196,38)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_infallible::mutex::Mutex&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt;&gt;&gt; (130 samples, 0.17%)</title><rect x="94.6083%" y="997" width="0.1658%" height="15" fill="rgb(228,105,49)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt;&gt;&gt; (130 samples, 0.17%)</title><rect x="94.6083%" y="981" width="0.1658%" height="15" fill="rgb(237,99,15)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt;&gt;&gt; (130 samples, 0.17%)</title><rect x="94.6083%" y="965" width="0.1658%" height="15" fill="rgb(224,207,46)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt;&gt; (130 samples, 0.17%)</title><rect x="94.6083%" y="949" width="0.1658%" height="15" fill="rgb(249,117,50)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;,std::hash::random::RandomState&gt;&gt; (130 samples, 0.17%)</title><rect x="94.6083%" y="933" width="0.1658%" height="15" fill="rgb(248,17,13)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;)&gt;&gt; (130 samples, 0.17%)</title><rect x="94.6083%" y="917" width="0.1658%" height="15" fill="rgb(228,187,36)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (130 samples, 0.17%)</title><rect x="94.6083%" y="901" width="0.1658%" height="15" fill="rgb(234,132,20)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (130 samples, 0.17%)</title><rect x="94.6083%" y="885" width="0.1658%" height="15" fill="rgb(209,170,46)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (130 samples, 0.17%)</title><rect x="94.6083%" y="869" width="0.1658%" height="15" fill="rgb(237,23,19)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="879.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (130 samples, 0.17%)</title><rect x="94.6083%" y="853" width="0.1658%" height="15" fill="rgb(227,21,26)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (130 samples, 0.17%)</title><rect x="94.6083%" y="837" width="0.1658%" height="15" fill="rgb(222,220,48)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;)&gt; (130 samples, 0.17%)</title><rect x="94.6083%" y="821" width="0.1658%" height="15" fill="rgb(214,9,16)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt; (130 samples, 0.17%)</title><rect x="94.6083%" y="805" width="0.1658%" height="15" fill="rgb(209,73,30)" fg:x="74189" fg:w="130"/><text x="94.8583%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::Histogram&gt; (13 samples, 0.02%)</title><rect x="94.7741%" y="1013" width="0.0166%" height="15" fill="rgb(207,20,33)" fg:x="74319" fg:w="13"/><text x="95.0241%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;prometheus::histogram::HistogramCore&gt;&gt; (13 samples, 0.02%)</title><rect x="94.7741%" y="997" width="0.0166%" height="15" fill="rgb(219,153,12)" fg:x="74319" fg:w="13"/><text x="95.0241%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="94.7741%" y="981" width="0.0166%" height="15" fill="rgb(235,97,25)" fg:x="74319" fg:w="13"/><text x="95.0241%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.02%)</title><rect x="94.7741%" y="965" width="0.0166%" height="15" fill="rgb(244,30,34)" fg:x="74319" fg:w="13"/><text x="95.0241%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.02%)</title><rect x="94.7741%" y="949" width="0.0166%" height="15" fill="rgb(214,106,45)" fg:x="74319" fg:w="13"/><text x="95.0241%" y="959.50"></text></g><g><title>prometheus::histogram::Histogram::observe (19 samples, 0.02%)</title><rect x="94.7907%" y="1013" width="0.0242%" height="15" fill="rgb(226,41,9)" fg:x="74332" fg:w="19"/><text x="95.0407%" y="1023.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (19 samples, 0.02%)</title><rect x="94.7907%" y="997" width="0.0242%" height="15" fill="rgb(253,139,29)" fg:x="74332" fg:w="19"/><text x="95.0407%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="94.7907%" y="981" width="0.0242%" height="15" fill="rgb(213,205,39)" fg:x="74332" fg:w="19"/><text x="95.0407%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (19 samples, 0.02%)</title><rect x="94.7907%" y="965" width="0.0242%" height="15" fill="rgb(209,27,10)" fg:x="74332" fg:w="19"/><text x="95.0407%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.02%)</title><rect x="94.7907%" y="949" width="0.0242%" height="15" fill="rgb(249,142,16)" fg:x="74332" fg:w="19"/><text x="95.0407%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 0.02%)</title><rect x="94.7907%" y="933" width="0.0242%" height="15" fill="rgb(242,65,12)" fg:x="74332" fg:w="19"/><text x="95.0407%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (19 samples, 0.02%)</title><rect x="94.7907%" y="917" width="0.0242%" height="15" fill="rgb(232,48,10)" fg:x="74332" fg:w="19"/><text x="95.0407%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (19 samples, 0.02%)</title><rect x="94.7907%" y="901" width="0.0242%" height="15" fill="rgb(253,67,19)" fg:x="74332" fg:w="19"/><text x="95.0407%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (19 samples, 0.02%)</title><rect x="94.7907%" y="885" width="0.0242%" height="15" fill="rgb(227,93,29)" fg:x="74332" fg:w="19"/><text x="95.0407%" y="895.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe::{{closure}} (19 samples, 0.02%)</title><rect x="94.7907%" y="869" width="0.0242%" height="15" fill="rgb(226,189,53)" fg:x="74332" fg:w="19"/><text x="95.0407%" y="879.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (99 samples, 0.13%)</title><rect x="94.8149%" y="1013" width="0.1262%" height="15" fill="rgb(223,224,1)" fg:x="74351" fg:w="99"/><text x="95.0649%" y="1023.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (99 samples, 0.13%)</title><rect x="94.8149%" y="997" width="0.1262%" height="15" fill="rgb(221,84,32)" fg:x="74351" fg:w="99"/><text x="95.0649%" y="1007.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (99 samples, 0.13%)</title><rect x="94.8149%" y="981" width="0.1262%" height="15" fill="rgb(214,189,28)" fg:x="74351" fg:w="99"/><text x="95.0649%" y="991.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::hash_label_values (99 samples, 0.13%)</title><rect x="94.8149%" y="965" width="0.1262%" height="15" fill="rgb(234,7,52)" fg:x="74351" fg:w="99"/><text x="95.0649%" y="975.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (99 samples, 0.13%)</title><rect x="94.8149%" y="949" width="0.1262%" height="15" fill="rgb(249,73,31)" fg:x="74351" fg:w="99"/><text x="95.0649%" y="959.50"></text></g><g><title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long, rocksdb::DBImpl::LogFileNumberSize&amp;) (440 samples, 0.56%)</title><rect x="94.9411%" y="949" width="0.5611%" height="15" fill="rgb(253,153,41)" fg:x="74450" fg:w="440"/><text x="95.1911%" y="959.50"></text></g><g><title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*, rocksdb::Env::IOPriority, rocksdb::DBImpl::LogFileNumberSize&amp;) (440 samples, 0.56%)</title><rect x="94.9411%" y="933" width="0.5611%" height="15" fill="rgb(249,52,34)" fg:x="74450" fg:w="440"/><text x="95.1911%" y="943.50"></text></g><g><title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;, rocksdb::Env::IOPriority) (440 samples, 0.56%)</title><rect x="94.9411%" y="917" width="0.5611%" height="15" fill="rgb(236,177,47)" fg:x="74450" fg:w="440"/><text x="95.1911%" y="927.50"></text></g><g><title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long, rocksdb::Env::IOPriority) (440 samples, 0.56%)</title><rect x="94.9411%" y="901" width="0.5611%" height="15" fill="rgb(252,185,45)" fg:x="74450" fg:w="440"/><text x="95.1911%" y="911.50"></text></g><g><title>rocksdb::crc32c::Value(char const*, unsigned long) (433 samples, 0.55%)</title><rect x="94.9501%" y="885" width="0.5522%" height="15" fill="rgb(251,15,30)" fg:x="74457" fg:w="433"/><text x="95.2001%" y="895.50"></text></g><g><title>ExtendImpl&lt;rocksdb::crc32c::Slow_CRC32&gt; (433 samples, 0.55%)</title><rect x="94.9501%" y="869" width="0.5522%" height="15" fill="rgb(233,31,4)" fg:x="74457" fg:w="433"/><text x="95.2001%" y="879.50"></text></g><g><title>Slow_CRC32 (433 samples, 0.55%)</title><rect x="94.9501%" y="853" width="0.5522%" height="15" fill="rgb(254,44,24)" fg:x="74457" fg:w="433"/><text x="95.2001%" y="863.50"></text></g><g><title>CheckMemtableFull (18 samples, 0.02%)</title><rect x="95.6310%" y="869" width="0.0230%" height="15" fill="rgb(218,54,1)" fg:x="74991" fg:w="18"/><text x="95.8810%" y="879.50"></text></g><g><title>rocksdb::MemTable::ShouldScheduleFlush() const (13 samples, 0.02%)</title><rect x="95.6374%" y="853" width="0.0166%" height="15" fill="rgb(243,209,39)" fg:x="74996" fg:w="13"/><text x="95.8874%" y="863.50"></text></g><g><title>std::atomic&lt;rocksdb::MemTable::FlushStateEnum&gt;::load(std::memory_order) const (13 samples, 0.02%)</title><rect x="95.6374%" y="837" width="0.0166%" height="15" fill="rgb(206,75,33)" fg:x="74996" fg:w="13"/><text x="95.8874%" y="847.50"></text></g><g><title>SeekToColumnFamily (31 samples, 0.04%)</title><rect x="95.6540%" y="869" width="0.0395%" height="15" fill="rgb(223,108,18)" fg:x="75009" fg:w="31"/><text x="95.9040%" y="879.50"></text></g><g><title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (16 samples, 0.02%)</title><rect x="95.6731%" y="853" width="0.0204%" height="15" fill="rgb(244,89,31)" fg:x="75024" fg:w="16"/><text x="95.9231%" y="863.50"></text></g><g><title>rocksdb::ColumnFamilySet::GetColumnFamily(unsigned int) const (13 samples, 0.02%)</title><rect x="95.6770%" y="837" width="0.0166%" height="15" fill="rgb(222,167,27)" fg:x="75027" fg:w="13"/><text x="95.9270%" y="847.50"></text></g><g><title>std::unordered_map&lt;unsigned int, rocksdb::ColumnFamilyData*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt; &gt; &gt;::find(unsigned int const&amp;) const (13 samples, 0.02%)</title><rect x="95.6770%" y="821" width="0.0166%" height="15" fill="rgb(247,41,16)" fg:x="75027" fg:w="13"/><text x="95.9270%" y="831.50"></text></g><g><title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find(unsigned int const&amp;) const (13 samples, 0.02%)</title><rect x="95.6770%" y="805" width="0.0166%" height="15" fill="rgb(233,168,40)" fg:x="75027" fg:w="13"/><text x="95.9270%" y="815.50"></text></g><g><title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node(unsigned long, unsigned int const&amp;, unsigned long) const (13 samples, 0.02%)</title><rect x="95.6770%" y="789" width="0.0166%" height="15" fill="rgb(205,211,8)" fg:x="75027" fg:w="13"/><text x="95.9270%" y="799.50"></text></g><g><title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node(unsigned long, unsigned int const&amp;, unsigned long) const (13 samples, 0.02%)</title><rect x="95.6770%" y="773" width="0.0166%" height="15" fill="rgb(238,105,11)" fg:x="75027" fg:w="13"/><text x="95.9270%" y="783.50"></text></g><g><title>std::__detail::_Hashtable_base&lt;unsigned int, std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals(unsigned int const&amp;, unsigned long, std::__detail::_Hash_node_value&lt;std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt;, false&gt; const&amp;) const (13 samples, 0.02%)</title><rect x="95.6770%" y="757" width="0.0166%" height="15" fill="rgb(223,142,52)" fg:x="75027" fg:w="13"/><text x="95.9270%" y="767.50"></text></g><g><title>std::equal_to&lt;unsigned int&gt;::operator()(unsigned int const&amp;, unsigned int const&amp;) const (13 samples, 0.02%)</title><rect x="95.6770%" y="741" width="0.0166%" height="15" fill="rgb(238,51,33)" fg:x="75027" fg:w="13"/><text x="95.9270%" y="751.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::AllocateNode(unsigned long, int) (26 samples, 0.03%)</title><rect x="95.7127%" y="821" width="0.0332%" height="15" fill="rgb(231,188,43)" fg:x="75055" fg:w="26"/><text x="95.9627%" y="831.50"></text></g><g><title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (23 samples, 0.03%)</title><rect x="95.7165%" y="805" width="0.0293%" height="15" fill="rgb(216,92,17)" fg:x="75058" fg:w="23"/><text x="95.9665%" y="815.50"></text></g><g><title>char* rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1}&gt;(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1} const&amp;) (23 samples, 0.03%)</title><rect x="95.7165%" y="789" width="0.0293%" height="15" fill="rgb(228,2,40)" fg:x="75058" fg:w="23"/><text x="95.9665%" y="799.50"></text></g><g><title>std::unique_lock&lt;rocksdb::SpinMutex&gt;::try_lock() (18 samples, 0.02%)</title><rect x="95.7229%" y="773" width="0.0230%" height="15" fill="rgb(226,73,15)" fg:x="75063" fg:w="18"/><text x="95.9729%" y="783.50"></text></g><g><title>rocksdb::SpinMutex::try_lock() (18 samples, 0.02%)</title><rect x="95.7229%" y="757" width="0.0230%" height="15" fill="rgb(227,66,46)" fg:x="75063" fg:w="18"/><text x="95.9729%" y="767.50"></text></g><g><title>std::atomic&lt;bool&gt;::compare_exchange_weak(bool&amp;, bool, std::memory_order, std::memory_order) (18 samples, 0.02%)</title><rect x="95.7229%" y="741" width="0.0230%" height="15" fill="rgb(209,71,6)" fg:x="75063" fg:w="18"/><text x="95.9729%" y="751.50"></text></g><g><title>std::__atomic_base&lt;bool&gt;::compare_exchange_weak(bool&amp;, bool, std::memory_order, std::memory_order) (18 samples, 0.02%)</title><rect x="95.7229%" y="725" width="0.0230%" height="15" fill="rgb(246,100,25)" fg:x="75063" fg:w="18"/><text x="95.9729%" y="735.50"></text></g><g><title>Allocate (45 samples, 0.06%)</title><rect x="95.6974%" y="853" width="0.0574%" height="15" fill="rgb(248,185,27)" fg:x="75043" fg:w="45"/><text x="95.9474%" y="863.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::AllocateKey(unsigned long) (33 samples, 0.04%)</title><rect x="95.7127%" y="837" width="0.0421%" height="15" fill="rgb(225,118,47)" fg:x="75055" fg:w="33"/><text x="95.9627%" y="847.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice(char const*) (21 samples, 0.03%)</title><rect x="95.8427%" y="805" width="0.0268%" height="15" fill="rgb(220,185,44)" fg:x="75157" fg:w="21"/><text x="96.0927%" y="815.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::KeyIsAfterNode(rocksdb::Slice const&amp;, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*) const (37 samples, 0.05%)</title><rect x="95.8300%" y="837" width="0.0472%" height="15" fill="rgb(227,95,24)" fg:x="75147" fg:w="37"/><text x="96.0800%" y="847.50"></text></g><g><title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (27 samples, 0.03%)</title><rect x="95.8427%" y="821" width="0.0344%" height="15" fill="rgb(252,84,24)" fg:x="75157" fg:w="27"/><text x="96.0927%" y="831.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice(char const*) (9 samples, 0.01%)</title><rect x="96.2126%" y="773" width="0.0115%" height="15" fill="rgb(240,34,44)" fg:x="75447" fg:w="9"/><text x="96.4626%" y="783.50"></text></g><g><title>rocksdb::GetVarint32Ptr(char const*, char const*, unsigned int*) (9 samples, 0.01%)</title><rect x="96.2126%" y="757" width="0.0115%" height="15" fill="rgb(209,72,54)" fg:x="75447" fg:w="9"/><text x="96.4626%" y="767.50"></text></g><g><title>rocksdb::GetVarint32PtrFallback(char const*, char const*, unsigned int*) (9 samples, 0.01%)</title><rect x="96.2126%" y="741" width="0.0115%" height="15" fill="rgb(226,19,45)" fg:x="75447" fg:w="9"/><text x="96.4626%" y="751.50"></text></g><g><title>Compare (34 samples, 0.04%)</title><rect x="96.4357%" y="741" width="0.0434%" height="15" fill="rgb(246,7,45)" fg:x="75622" fg:w="34"/><text x="96.6857%" y="751.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::RecomputeSpliceLevels(rocksdb::Slice const&amp;, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, int) (494 samples, 0.63%)</title><rect x="95.8772%" y="837" width="0.6300%" height="15" fill="rgb(225,45,2)" fg:x="75184" fg:w="494"/><text x="96.1272%" y="847.50"></text></g><g><title>void rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindSpliceForLevel&lt;true&gt;(rocksdb::Slice const&amp;, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*, int, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node**, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node**) (494 samples, 0.63%)</title><rect x="95.8772%" y="821" width="0.6300%" height="15" fill="rgb(221,80,29)" fg:x="75184" fg:w="494"/><text x="96.1272%" y="831.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::KeyIsAfterNode(rocksdb::Slice const&amp;, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*) const (249 samples, 0.32%)</title><rect x="96.1896%" y="805" width="0.3175%" height="15" fill="rgb(228,11,19)" fg:x="75429" fg:w="249"/><text x="96.4396%" y="815.50"></text></g><g><title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (231 samples, 0.29%)</title><rect x="96.2126%" y="789" width="0.2946%" height="15" fill="rgb(243,17,21)" fg:x="75447" fg:w="231"/><text x="96.4626%" y="799.50"></text></g><g><title>rocksdb::InternalKeyComparator::CompareKeySeq(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (222 samples, 0.28%)</title><rect x="96.2240%" y="773" width="0.2831%" height="15" fill="rgb(243,88,8)" fg:x="75456" fg:w="222"/><text x="96.4740%" y="783.50"></text></g><g><title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (85 samples, 0.11%)</title><rect x="96.3987%" y="757" width="0.1084%" height="15" fill="rgb(214,17,9)" fg:x="75593" fg:w="85"/><text x="96.6487%" y="767.50"></text></g><g><title>__tls_init (22 samples, 0.03%)</title><rect x="96.4791%" y="741" width="0.0281%" height="15" fill="rgb(232,169,15)" fg:x="75656" fg:w="22"/><text x="96.7291%" y="751.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice(char const*) (18 samples, 0.02%)</title><rect x="96.5071%" y="821" width="0.0230%" height="15" fill="rgb(232,86,53)" fg:x="75678" fg:w="18"/><text x="96.7571%" y="831.50"></text></g><g><title>rocksdb::GetVarint32Ptr(char const*, char const*, unsigned int*) (18 samples, 0.02%)</title><rect x="96.5071%" y="805" width="0.0230%" height="15" fill="rgb(222,100,4)" fg:x="75678" fg:w="18"/><text x="96.7571%" y="815.50"></text></g><g><title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (614 samples, 0.78%)</title><rect x="95.7573%" y="853" width="0.7830%" height="15" fill="rgb(253,151,38)" fg:x="75090" fg:w="614"/><text x="96.0073%" y="863.50"></text></g><g><title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (26 samples, 0.03%)</title><rect x="96.5071%" y="837" width="0.0332%" height="15" fill="rgb(238,215,29)" fg:x="75678" fg:w="26"/><text x="96.7571%" y="847.50"></text></g><g><title>rocksdb::InternalKeyComparator::CompareKeySeq(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 0.01%)</title><rect x="96.5301%" y="821" width="0.0102%" height="15" fill="rgb(205,128,53)" fg:x="75696" fg:w="8"/><text x="96.7801%" y="831.50"></text></g><g><title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 0.01%)</title><rect x="96.5301%" y="805" width="0.0102%" height="15" fill="rgb(248,183,14)" fg:x="75696" fg:w="8"/><text x="96.7801%" y="815.50"></text></g><g><title>rocksdb::MemTable::UpdateFlushState() (24 samples, 0.03%)</title><rect x="96.5454%" y="853" width="0.0306%" height="15" fill="rgb(244,172,35)" fg:x="75708" fg:w="24"/><text x="96.7954%" y="863.50"></text></g><g><title>rocksdb::MemTable::ShouldFlushNow() (24 samples, 0.03%)</title><rect x="96.5454%" y="837" width="0.0306%" height="15" fill="rgb(234,93,19)" fg:x="75708" fg:w="24"/><text x="96.7954%" y="847.50"></text></g><g><title>PutCF (836 samples, 1.07%)</title><rect x="95.5533%" y="901" width="1.0661%" height="15" fill="rgb(227,109,7)" fg:x="74930" fg:w="836"/><text x="95.8033%" y="911.50"></text></g><g><title>PutCFImpl (815 samples, 1.04%)</title><rect x="95.5800%" y="885" width="1.0393%" height="15" fill="rgb(233,136,54)" fg:x="74951" fg:w="815"/><text x="95.8300%" y="895.50"></text></g><g><title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS&lt;unsigned long&gt; const*, bool, rocksdb::MemTablePostProcessInfo*, void**) (723 samples, 0.92%)</title><rect x="95.6974%" y="869" width="0.9220%" height="15" fill="rgb(233,19,40)" fg:x="75043" fg:w="723"/><text x="95.9474%" y="879.50"></text></g><g><title>rocksdb::Slice::size() const (32 samples, 0.04%)</title><rect x="96.5785%" y="853" width="0.0408%" height="15" fill="rgb(247,41,18)" fg:x="75734" fg:w="32"/><text x="96.8285%" y="863.50"></text></g><g><title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (71 samples, 0.09%)</title><rect x="96.6194%" y="901" width="0.0905%" height="15" fill="rgb(220,34,34)" fg:x="75766" fg:w="71"/><text x="96.8694%" y="911.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice(rocksdb::Slice*, rocksdb::Slice*) (44 samples, 0.06%)</title><rect x="96.6538%" y="885" width="0.0561%" height="15" fill="rgb(222,135,32)" fg:x="75793" fg:w="44"/><text x="96.9038%" y="895.50"></text></g><g><title>rocksdb::GetVarint32(rocksdb::Slice*, unsigned int*) (44 samples, 0.06%)</title><rect x="96.6538%" y="869" width="0.0561%" height="15" fill="rgb(214,80,19)" fg:x="75793" fg:w="44"/><text x="96.9038%" y="879.50"></text></g><g><title>rocksdb::GetVarint32Ptr(char const*, char const*, unsigned int*) (44 samples, 0.06%)</title><rect x="96.6538%" y="853" width="0.0561%" height="15" fill="rgb(234,54,46)" fg:x="75793" fg:w="44"/><text x="96.9038%" y="863.50"></text></g><g><title>rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write_opt (1,397 samples, 1.78%)</title><rect x="94.9411%" y="1013" width="1.7815%" height="15" fill="rgb(251,48,23)" fg:x="74450" fg:w="1397"/><text x="95.1911%" y="1023.50">r..</text></g><g><title>rocksdb_write (1,397 samples, 1.78%)</title><rect x="94.9411%" y="997" width="1.7815%" height="15" fill="rgb(254,109,52)" fg:x="74450" fg:w="1397"/><text x="95.1911%" y="1007.50">r..</text></g><g><title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1,397 samples, 1.78%)</title><rect x="94.9411%" y="981" width="1.7815%" height="15" fill="rgb(240,186,19)" fg:x="74450" fg:w="1397"/><text x="95.1911%" y="991.50">r..</text></g><g><title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*) (1,397 samples, 1.78%)</title><rect x="94.9411%" y="965" width="1.7815%" height="15" fill="rgb(246,187,17)" fg:x="74450" fg:w="1397"/><text x="95.1911%" y="975.50">r..</text></g><g><title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (957 samples, 1.22%)</title><rect x="95.5023%" y="949" width="1.2204%" height="15" fill="rgb(212,21,5)" fg:x="74890" fg:w="957"/><text x="95.7523%" y="959.50"></text></g><g><title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (957 samples, 1.22%)</title><rect x="95.5023%" y="933" width="1.2204%" height="15" fill="rgb(225,185,18)" fg:x="74890" fg:w="957"/><text x="95.7523%" y="943.50"></text></g><g><title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch*::Handler, unsigned long, unsigned long) (957 samples, 1.22%)</title><rect x="95.5023%" y="917" width="1.2204%" height="15" fill="rgb(245,114,17)" fg:x="74890" fg:w="957"/><text x="95.7523%" y="927.50"></text></g><g><title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (10 samples, 0.01%)</title><rect x="96.7099%" y="901" width="0.0128%" height="15" fill="rgb(223,164,24)" fg:x="75837" fg:w="10"/><text x="96.9599%" y="911.50"></text></g><g><title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (9 samples, 0.01%)</title><rect x="96.7864%" y="949" width="0.0115%" height="15" fill="rgb(211,228,3)" fg:x="75897" fg:w="9"/><text x="97.0364%" y="959.50"></text></g><g><title>rocksdb::WriteBatchInternal::GetColumnFamilyIdAndTimestampSize(rocksdb::WriteBatch*, rocksdb::ColumnFamilyHandle*) (42 samples, 0.05%)</title><rect x="96.7584%" y="965" width="0.0536%" height="15" fill="rgb(223,16,38)" fg:x="75875" fg:w="42"/><text x="97.0084%" y="975.50"></text></g><g><title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (11 samples, 0.01%)</title><rect x="96.7979%" y="949" width="0.0140%" height="15" fill="rgb(207,31,54)" fg:x="75906" fg:w="11"/><text x="97.0479%" y="959.50"></text></g><g><title>rocksdb::LocalSavePoint::LocalSavePoint(rocksdb::WriteBatch*) (9 samples, 0.01%)</title><rect x="96.8196%" y="949" width="0.0115%" height="15" fill="rgb(220,39,11)" fg:x="75923" fg:w="9"/><text x="97.0696%" y="959.50"></text></g><g><title>rocksdb::PutVarint32(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, unsigned int) (23 samples, 0.03%)</title><rect x="96.8310%" y="933" width="0.0293%" height="15" fill="rgb(235,185,0)" fg:x="75932" fg:w="23"/><text x="97.0810%" y="943.50"></text></g><g><title>rocksdb::PutLengthPrefixedSlice(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice const&amp;) (61 samples, 0.08%)</title><rect x="96.8310%" y="949" width="0.0778%" height="15" fill="rgb(249,39,18)" fg:x="75932" fg:w="61"/><text x="97.0810%" y="959.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append(char const*, unsigned long) (38 samples, 0.05%)</title><rect x="96.8604%" y="933" width="0.0485%" height="15" fill="rgb(240,110,33)" fg:x="75955" fg:w="38"/><text x="97.1104%" y="943.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) (38 samples, 0.05%)</title><rect x="96.8604%" y="917" width="0.0485%" height="15" fill="rgb(210,92,42)" fg:x="75955" fg:w="38"/><text x="97.1104%" y="927.50"></text></g><g><title>aptos_db::AptosDB::commit (1,810 samples, 2.31%)</title><rect x="94.6070%" y="1045" width="2.3082%" height="15" fill="rgb(218,215,28)" fg:x="74188" fg:w="1810"/><text x="94.8570%" y="1055.50">a..</text></g><g><title>aptos_schemadb::DB::write_schemas (1,810 samples, 2.31%)</title><rect x="94.6070%" y="1029" width="2.3082%" height="15" fill="rgb(238,215,36)" fg:x="74188" fg:w="1810"/><text x="94.8570%" y="1039.50">a..</text></g><g><title>rocksdb::write_batch::WriteBatchWithTransaction&lt;_&gt;::put_cf (151 samples, 0.19%)</title><rect x="96.7226%" y="1013" width="0.1926%" height="15" fill="rgb(220,31,10)" fg:x="75847" fg:w="151"/><text x="96.9726%" y="1023.50"></text></g><g><title>rocksdb_writebatch_put_cf (147 samples, 0.19%)</title><rect x="96.7278%" y="997" width="0.1875%" height="15" fill="rgb(212,93,14)" fg:x="75851" fg:w="147"/><text x="96.9778%" y="1007.50"></text></g><g><title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (141 samples, 0.18%)</title><rect x="96.7354%" y="981" width="0.1798%" height="15" fill="rgb(254,207,2)" fg:x="75857" fg:w="141"/><text x="96.9854%" y="991.50"></text></g><g><title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (81 samples, 0.10%)</title><rect x="96.8119%" y="965" width="0.1033%" height="15" fill="rgb(205,57,44)" fg:x="75917" fg:w="81"/><text x="97.0619%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (56 samples, 0.07%)</title><rect x="96.9152%" y="789" width="0.0714%" height="15" fill="rgb(226,151,19)" fg:x="75998" fg:w="56"/><text x="97.1652%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (56 samples, 0.07%)</title><rect x="96.9152%" y="773" width="0.0714%" height="15" fill="rgb(230,72,30)" fg:x="75998" fg:w="56"/><text x="97.1652%" y="783.50"></text></g><g><title>core::clone::Clone::clone (56 samples, 0.07%)</title><rect x="96.9152%" y="757" width="0.0714%" height="15" fill="rgb(244,0,8)" fg:x="75998" fg:w="56"/><text x="97.1652%" y="767.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (56 samples, 0.07%)</title><rect x="96.9152%" y="741" width="0.0714%" height="15" fill="rgb(230,192,6)" fg:x="75998" fg:w="56"/><text x="97.1652%" y="751.50"></text></g><g><title>aptos_db::test_helper::gen_snapshot_version::{{closure}} (60 samples, 0.08%)</title><rect x="96.9152%" y="853" width="0.0765%" height="15" fill="rgb(233,207,13)" fg:x="75998" fg:w="60"/><text x="97.1652%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (60 samples, 0.08%)</title><rect x="96.9152%" y="837" width="0.0765%" height="15" fill="rgb(206,227,7)" fg:x="75998" fg:w="60"/><text x="97.1652%" y="847.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (60 samples, 0.08%)</title><rect x="96.9152%" y="821" width="0.0765%" height="15" fill="rgb(213,217,25)" fg:x="75998" fg:w="60"/><text x="97.1652%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (60 samples, 0.08%)</title><rect x="96.9152%" y="805" width="0.0765%" height="15" fill="rgb(249,75,4)" fg:x="75998" fg:w="60"/><text x="97.1652%" y="815.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="97.0121%" y="645" width="0.0102%" height="15" fill="rgb(225,114,18)" fg:x="76074" fg:w="8"/><text x="97.2621%" y="655.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="97.0121%" y="629" width="0.0102%" height="15" fill="rgb(211,162,40)" fg:x="76074" fg:w="8"/><text x="97.2621%" y="639.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (8 samples, 0.01%)</title><rect x="97.0121%" y="613" width="0.0102%" height="15" fill="rgb(206,49,29)" fg:x="76074" fg:w="8"/><text x="97.2621%" y="623.50"></text></g><g><title> N]&gt;::hash (8 samples, 0.01%)</title><rect x="97.0121%" y="597" width="0.0102%" height="15" fill="rgb(244,8,6)" fg:x="76074" fg:w="8"/><text x="97.2621%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (8 samples, 0.01%)</title><rect x="97.0121%" y="581" width="0.0102%" height="15" fill="rgb(231,194,28)" fg:x="76074" fg:w="8"/><text x="97.2621%" y="591.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (8 samples, 0.01%)</title><rect x="97.0121%" y="565" width="0.0102%" height="15" fill="rgb(210,69,5)" fg:x="76074" fg:w="8"/><text x="97.2621%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (8 samples, 0.01%)</title><rect x="97.0121%" y="549" width="0.0102%" height="15" fill="rgb(216,186,12)" fg:x="76074" fg:w="8"/><text x="97.2621%" y="559.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="97.0121%" y="533" width="0.0102%" height="15" fill="rgb(238,61,15)" fg:x="76074" fg:w="8"/><text x="97.2621%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="97.0121%" y="517" width="0.0102%" height="15" fill="rgb(226,104,1)" fg:x="76074" fg:w="8"/><text x="97.2621%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="97.0121%" y="501" width="0.0102%" height="15" fill="rgb(229,128,15)" fg:x="76074" fg:w="8"/><text x="97.2621%" y="511.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="97.0109%" y="661" width="0.0140%" height="15" fill="rgb(247,110,15)" fg:x="76073" fg:w="11"/><text x="97.2609%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (28 samples, 0.04%)</title><rect x="97.0058%" y="709" width="0.0357%" height="15" fill="rgb(210,74,48)" fg:x="76069" fg:w="28"/><text x="97.2558%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (28 samples, 0.04%)</title><rect x="97.0058%" y="693" width="0.0357%" height="15" fill="rgb(246,121,10)" fg:x="76069" fg:w="28"/><text x="97.2558%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (24 samples, 0.03%)</title><rect x="97.0109%" y="677" width="0.0306%" height="15" fill="rgb(214,156,37)" fg:x="76073" fg:w="24"/><text x="97.2609%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="97.0249%" y="661" width="0.0166%" height="15" fill="rgb(214,210,34)" fg:x="76084" fg:w="13"/><text x="97.2749%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.02%)</title><rect x="97.0249%" y="645" width="0.0166%" height="15" fill="rgb(237,93,35)" fg:x="76084" fg:w="13"/><text x="97.2749%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (55 samples, 0.07%)</title><rect x="96.9930%" y="773" width="0.0701%" height="15" fill="rgb(206,36,8)" fg:x="76059" fg:w="55"/><text x="97.2430%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (55 samples, 0.07%)</title><rect x="96.9930%" y="757" width="0.0701%" height="15" fill="rgb(208,151,12)" fg:x="76059" fg:w="55"/><text x="97.2430%" y="767.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (55 samples, 0.07%)</title><rect x="96.9930%" y="741" width="0.0701%" height="15" fill="rgb(225,133,52)" fg:x="76059" fg:w="55"/><text x="97.2430%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (51 samples, 0.07%)</title><rect x="96.9981%" y="725" width="0.0650%" height="15" fill="rgb(231,71,53)" fg:x="76063" fg:w="51"/><text x="97.2481%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (17 samples, 0.02%)</title><rect x="97.0415%" y="709" width="0.0217%" height="15" fill="rgb(243,76,21)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (17 samples, 0.02%)</title><rect x="97.0415%" y="693" width="0.0217%" height="15" fill="rgb(252,144,3)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::{{closure}} (17 samples, 0.02%)</title><rect x="97.0415%" y="677" width="0.0217%" height="15" fill="rgb(231,199,10)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="687.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (17 samples, 0.02%)</title><rect x="97.0415%" y="661" width="0.0217%" height="15" fill="rgb(215,18,11)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="671.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (17 samples, 0.02%)</title><rect x="97.0415%" y="645" width="0.0217%" height="15" fill="rgb(241,65,24)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.02%)</title><rect x="97.0415%" y="629" width="0.0217%" height="15" fill="rgb(251,192,38)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="639.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="97.0415%" y="613" width="0.0217%" height="15" fill="rgb(205,9,35)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.02%)</title><rect x="97.0415%" y="597" width="0.0217%" height="15" fill="rgb(229,225,49)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="607.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="97.0415%" y="581" width="0.0217%" height="15" fill="rgb(207,125,39)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="591.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="97.0415%" y="565" width="0.0217%" height="15" fill="rgb(222,78,19)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="575.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[U (17 samples, 0.02%)</title><rect x="97.0415%" y="549" width="0.0217%" height="15" fill="rgb(248,207,20)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="559.50"></text></g><g><title> N]&gt; for [T (17 samples, 0.02%)</title><rect x="97.0415%" y="533" width="0.0217%" height="15" fill="rgb(205,103,49)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="543.50"></text></g><g><title> N]&gt;::eq (17 samples, 0.02%)</title><rect x="97.0415%" y="517" width="0.0217%" height="15" fill="rgb(216,42,28)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="527.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (17 samples, 0.02%)</title><rect x="97.0415%" y="501" width="0.0217%" height="15" fill="rgb(213,205,53)" fg:x="76097" fg:w="17"/><text x="97.2915%" y="511.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_storage_interface::DbWriter&gt;::save_transactions (1,929 samples, 2.46%)</title><rect x="94.6045%" y="1093" width="2.4599%" height="15" fill="rgb(239,140,53)" fg:x="74186" fg:w="1929"/><text x="94.8545%" y="1103.50">&lt;a..</text></g><g><title>aptos_db::gauged_api (1,929 samples, 2.46%)</title><rect x="94.6045%" y="1077" width="2.4599%" height="15" fill="rgb(248,95,9)" fg:x="74186" fg:w="1929"/><text x="94.8545%" y="1087.50">ap..</text></g><g><title>&lt;aptos_db::AptosDB as aptos_storage_interface::DbWriter&gt;::save_transactions::{{closure}} (1,929 samples, 2.46%)</title><rect x="94.6045%" y="1061" width="2.4599%" height="15" fill="rgb(254,58,47)" fg:x="74186" fg:w="1929"/><text x="94.8545%" y="1071.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (117 samples, 0.15%)</title><rect x="96.9152%" y="1045" width="0.1492%" height="15" fill="rgb(234,227,14)" fg:x="75998" fg:w="117"/><text x="97.1652%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (117 samples, 0.15%)</title><rect x="96.9152%" y="1029" width="0.1492%" height="15" fill="rgb(205,192,45)" fg:x="75998" fg:w="117"/><text x="97.1652%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (117 samples, 0.15%)</title><rect x="96.9152%" y="1013" width="0.1492%" height="15" fill="rgb(253,187,31)" fg:x="75998" fg:w="117"/><text x="97.1652%" y="1023.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (117 samples, 0.15%)</title><rect x="96.9152%" y="997" width="0.1492%" height="15" fill="rgb(222,6,32)" fg:x="75998" fg:w="117"/><text x="97.1652%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (117 samples, 0.15%)</title><rect x="96.9152%" y="981" width="0.1492%" height="15" fill="rgb(249,190,19)" fg:x="75998" fg:w="117"/><text x="97.1652%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (117 samples, 0.15%)</title><rect x="96.9152%" y="965" width="0.1492%" height="15" fill="rgb(251,28,20)" fg:x="75998" fg:w="117"/><text x="97.1652%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (117 samples, 0.15%)</title><rect x="96.9152%" y="949" width="0.1492%" height="15" fill="rgb(210,223,40)" fg:x="75998" fg:w="117"/><text x="97.1652%" y="959.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (117 samples, 0.15%)</title><rect x="96.9152%" y="933" width="0.1492%" height="15" fill="rgb(216,137,22)" fg:x="75998" fg:w="117"/><text x="97.1652%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (117 samples, 0.15%)</title><rect x="96.9152%" y="917" width="0.1492%" height="15" fill="rgb(247,39,34)" fg:x="75998" fg:w="117"/><text x="97.1652%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (117 samples, 0.15%)</title><rect x="96.9152%" y="901" width="0.1492%" height="15" fill="rgb(239,43,50)" fg:x="75998" fg:w="117"/><text x="97.1652%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (117 samples, 0.15%)</title><rect x="96.9152%" y="885" width="0.1492%" height="15" fill="rgb(241,212,9)" fg:x="75998" fg:w="117"/><text x="97.1652%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (117 samples, 0.15%)</title><rect x="96.9152%" y="869" width="0.1492%" height="15" fill="rgb(205,8,2)" fg:x="75998" fg:w="117"/><text x="97.1652%" y="879.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (57 samples, 0.07%)</title><rect x="96.9917%" y="853" width="0.0727%" height="15" fill="rgb(217,173,54)" fg:x="76058" fg:w="57"/><text x="97.2417%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (57 samples, 0.07%)</title><rect x="96.9917%" y="837" width="0.0727%" height="15" fill="rgb(208,149,52)" fg:x="76058" fg:w="57"/><text x="97.2417%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (57 samples, 0.07%)</title><rect x="96.9917%" y="821" width="0.0727%" height="15" fill="rgb(239,99,40)" fg:x="76058" fg:w="57"/><text x="97.2417%" y="831.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (57 samples, 0.07%)</title><rect x="96.9917%" y="805" width="0.0727%" height="15" fill="rgb(233,214,26)" fg:x="76058" fg:w="57"/><text x="97.2417%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (57 samples, 0.07%)</title><rect x="96.9917%" y="789" width="0.0727%" height="15" fill="rgb(231,225,37)" fg:x="76058" fg:w="57"/><text x="97.2417%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="97.1052%" y="421" width="0.0102%" height="15" fill="rgb(252,55,35)" fg:x="76147" fg:w="8"/><text x="97.3552%" y="431.50"></text></g><g><title>iallocztm (8 samples, 0.01%)</title><rect x="97.1307%" y="133" width="0.0102%" height="15" fill="rgb(239,43,18)" fg:x="76167" fg:w="8"/><text x="97.3807%" y="143.50"></text></g><g><title>arena_malloc (8 samples, 0.01%)</title><rect x="97.1307%" y="117" width="0.0102%" height="15" fill="rgb(251,125,49)" fg:x="76167" fg:w="8"/><text x="97.3807%" y="127.50"></text></g><g><title>tcache_alloc_small (8 samples, 0.01%)</title><rect x="97.1307%" y="101" width="0.0102%" height="15" fill="rgb(212,83,54)" fg:x="76167" fg:w="8"/><text x="97.3807%" y="111.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (8 samples, 0.01%)</title><rect x="97.1307%" y="85" width="0.0102%" height="15" fill="rgb(250,75,6)" fg:x="76167" fg:w="8"/><text x="97.3807%" y="95.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (8 samples, 0.01%)</title><rect x="97.1307%" y="69" width="0.0102%" height="15" fill="rgb(252,36,40)" fg:x="76167" fg:w="8"/><text x="97.3807%" y="79.50"></text></g><g><title>arena_slab_reg_alloc (8 samples, 0.01%)</title><rect x="97.1307%" y="53" width="0.0102%" height="15" fill="rgb(230,91,51)" fg:x="76167" fg:w="8"/><text x="97.3807%" y="63.50"></text></g><g><title>bitmap_sfu (8 samples, 0.01%)</title><rect x="97.1307%" y="37" width="0.0102%" height="15" fill="rgb(212,92,28)" fg:x="76167" fg:w="8"/><text x="97.3807%" y="47.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (12 samples, 0.02%)</title><rect x="97.1307%" y="277" width="0.0153%" height="15" fill="rgb(227,13,22)" fg:x="76167" fg:w="12"/><text x="97.3807%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (12 samples, 0.02%)</title><rect x="97.1307%" y="261" width="0.0153%" height="15" fill="rgb(239,204,32)" fg:x="76167" fg:w="12"/><text x="97.3807%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="97.1307%" y="245" width="0.0153%" height="15" fill="rgb(228,49,41)" fg:x="76167" fg:w="12"/><text x="97.3807%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="97.1307%" y="229" width="0.0153%" height="15" fill="rgb(206,95,6)" fg:x="76167" fg:w="12"/><text x="97.3807%" y="239.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="97.1307%" y="213" width="0.0153%" height="15" fill="rgb(251,20,14)" fg:x="76167" fg:w="12"/><text x="97.3807%" y="223.50"></text></g><g><title>mallocx (12 samples, 0.02%)</title><rect x="97.1307%" y="197" width="0.0153%" height="15" fill="rgb(214,99,28)" fg:x="76167" fg:w="12"/><text x="97.3807%" y="207.50"></text></g><g><title>imalloc (12 samples, 0.02%)</title><rect x="97.1307%" y="181" width="0.0153%" height="15" fill="rgb(239,122,54)" fg:x="76167" fg:w="12"/><text x="97.3807%" y="191.50"></text></g><g><title>imalloc_body (12 samples, 0.02%)</title><rect x="97.1307%" y="165" width="0.0153%" height="15" fill="rgb(218,217,46)" fg:x="76167" fg:w="12"/><text x="97.3807%" y="175.50"></text></g><g><title>imalloc_no_sample (12 samples, 0.02%)</title><rect x="97.1307%" y="149" width="0.0153%" height="15" fill="rgb(249,106,28)" fg:x="76167" fg:w="12"/><text x="97.3807%" y="159.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (25 samples, 0.03%)</title><rect x="97.1154%" y="389" width="0.0319%" height="15" fill="rgb(250,158,18)" fg:x="76155" fg:w="25"/><text x="97.3654%" y="399.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (25 samples, 0.03%)</title><rect x="97.1154%" y="373" width="0.0319%" height="15" fill="rgb(226,137,29)" fg:x="76155" fg:w="25"/><text x="97.3654%" y="383.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="97.1307%" y="357" width="0.0166%" height="15" fill="rgb(210,188,1)" fg:x="76167" fg:w="13"/><text x="97.3807%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="97.1307%" y="341" width="0.0166%" height="15" fill="rgb(227,84,42)" fg:x="76167" fg:w="13"/><text x="97.3807%" y="351.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.02%)</title><rect x="97.1307%" y="325" width="0.0166%" height="15" fill="rgb(222,147,48)" fg:x="76167" fg:w="13"/><text x="97.3807%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (13 samples, 0.02%)</title><rect x="97.1307%" y="309" width="0.0166%" height="15" fill="rgb(241,150,43)" fg:x="76167" fg:w="13"/><text x="97.3807%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (13 samples, 0.02%)</title><rect x="97.1307%" y="293" width="0.0166%" height="15" fill="rgb(206,139,52)" fg:x="76167" fg:w="13"/><text x="97.3807%" y="303.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (30 samples, 0.04%)</title><rect x="97.1154%" y="421" width="0.0383%" height="15" fill="rgb(230,63,14)" fg:x="76155" fg:w="30"/><text x="97.3654%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.04%)</title><rect x="97.1154%" y="405" width="0.0383%" height="15" fill="rgb(247,8,20)" fg:x="76155" fg:w="30"/><text x="97.3654%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41 samples, 0.05%)</title><rect x="97.1052%" y="485" width="0.0523%" height="15" fill="rgb(213,115,4)" fg:x="76147" fg:w="41"/><text x="97.3552%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41 samples, 0.05%)</title><rect x="97.1052%" y="469" width="0.0523%" height="15" fill="rgb(241,79,49)" fg:x="76147" fg:w="41"/><text x="97.3552%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (41 samples, 0.05%)</title><rect x="97.1052%" y="453" width="0.0523%" height="15" fill="rgb(222,42,35)" fg:x="76147" fg:w="41"/><text x="97.3552%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41 samples, 0.05%)</title><rect x="97.1052%" y="437" width="0.0523%" height="15" fill="rgb(247,59,23)" fg:x="76147" fg:w="41"/><text x="97.3552%" y="447.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as core::clone::Clone&gt;::clone (67 samples, 0.09%)</title><rect x="97.0823%" y="565" width="0.0854%" height="15" fill="rgb(247,93,18)" fg:x="76129" fg:w="67"/><text x="97.3323%" y="575.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (67 samples, 0.09%)</title><rect x="97.0823%" y="549" width="0.0854%" height="15" fill="rgb(249,107,47)" fg:x="76129" fg:w="67"/><text x="97.3323%" y="559.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (67 samples, 0.09%)</title><rect x="97.0823%" y="533" width="0.0854%" height="15" fill="rgb(219,27,1)" fg:x="76129" fg:w="67"/><text x="97.3323%" y="543.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (49 samples, 0.06%)</title><rect x="97.1052%" y="517" width="0.0625%" height="15" fill="rgb(217,82,32)" fg:x="76147" fg:w="49"/><text x="97.3552%" y="527.50"></text></g><g><title>&lt;aptos_types::transaction::script::EntryFunction as core::clone::Clone&gt;::clone (49 samples, 0.06%)</title><rect x="97.1052%" y="501" width="0.0625%" height="15" fill="rgb(250,129,47)" fg:x="76147" fg:w="49"/><text x="97.3552%" y="511.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="97.1677%" y="485" width="0.0191%" height="15" fill="rgb(253,88,35)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="495.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="97.1677%" y="469" width="0.0191%" height="15" fill="rgb(245,221,14)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="97.1677%" y="453" width="0.0191%" height="15" fill="rgb(217,119,54)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.02%)</title><rect x="97.1677%" y="437" width="0.0191%" height="15" fill="rgb(247,128,31)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.02%)</title><rect x="97.1677%" y="421" width="0.0191%" height="15" fill="rgb(211,99,22)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.02%)</title><rect x="97.1677%" y="405" width="0.0191%" height="15" fill="rgb(212,20,17)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="97.1677%" y="389" width="0.0191%" height="15" fill="rgb(209,159,29)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="97.1677%" y="373" width="0.0191%" height="15" fill="rgb(222,177,53)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (15 samples, 0.02%)</title><rect x="97.1677%" y="357" width="0.0191%" height="15" fill="rgb(234,46,43)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.02%)</title><rect x="97.1677%" y="341" width="0.0191%" height="15" fill="rgb(208,108,14)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.02%)</title><rect x="97.1677%" y="325" width="0.0191%" height="15" fill="rgb(226,78,53)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="335.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.02%)</title><rect x="97.1677%" y="309" width="0.0191%" height="15" fill="rgb(230,20,41)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="319.50"></text></g><g><title>mallocx (15 samples, 0.02%)</title><rect x="97.1677%" y="293" width="0.0191%" height="15" fill="rgb(213,195,35)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="303.50"></text></g><g><title>imalloc (15 samples, 0.02%)</title><rect x="97.1677%" y="277" width="0.0191%" height="15" fill="rgb(242,62,36)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="287.50"></text></g><g><title>imalloc_body (15 samples, 0.02%)</title><rect x="97.1677%" y="261" width="0.0191%" height="15" fill="rgb(222,210,37)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="271.50"></text></g><g><title>imalloc_no_sample (15 samples, 0.02%)</title><rect x="97.1677%" y="245" width="0.0191%" height="15" fill="rgb(232,107,19)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="255.50"></text></g><g><title>iallocztm (15 samples, 0.02%)</title><rect x="97.1677%" y="229" width="0.0191%" height="15" fill="rgb(235,85,17)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="239.50"></text></g><g><title>arena_malloc (15 samples, 0.02%)</title><rect x="97.1677%" y="213" width="0.0191%" height="15" fill="rgb(219,195,31)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="223.50"></text></g><g><title>tcache_alloc_small (15 samples, 0.02%)</title><rect x="97.1677%" y="197" width="0.0191%" height="15" fill="rgb(231,183,30)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="207.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (15 samples, 0.02%)</title><rect x="97.1677%" y="181" width="0.0191%" height="15" fill="rgb(212,0,11)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="191.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (15 samples, 0.02%)</title><rect x="97.1677%" y="165" width="0.0191%" height="15" fill="rgb(249,53,54)" fg:x="76196" fg:w="15"/><text x="97.4177%" y="175.50"></text></g><g><title>arena_slab_reg_alloc (13 samples, 0.02%)</title><rect x="97.1703%" y="149" width="0.0166%" height="15" fill="rgb(211,118,13)" fg:x="76198" fg:w="13"/><text x="97.4203%" y="159.50"></text></g><g><title>bitmap_sfu (13 samples, 0.02%)</title><rect x="97.1703%" y="133" width="0.0166%" height="15" fill="rgb(237,42,9)" fg:x="76198" fg:w="13"/><text x="97.4203%" y="143.50"></text></g><g><title>__rust_alloc (8 samples, 0.01%)</title><rect x="97.1868%" y="309" width="0.0102%" height="15" fill="rgb(227,68,32)" fg:x="76211" fg:w="8"/><text x="97.4368%" y="319.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="97.1868%" y="485" width="0.0230%" height="15" fill="rgb(238,10,7)" fg:x="76211" fg:w="18"/><text x="97.4368%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="97.1868%" y="469" width="0.0230%" height="15" fill="rgb(224,42,12)" fg:x="76211" fg:w="18"/><text x="97.4368%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="97.1868%" y="453" width="0.0230%" height="15" fill="rgb(252,190,5)" fg:x="76211" fg:w="18"/><text x="97.4368%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="97.1868%" y="437" width="0.0230%" height="15" fill="rgb(220,214,39)" fg:x="76211" fg:w="18"/><text x="97.4368%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="97.1868%" y="421" width="0.0230%" height="15" fill="rgb(247,98,4)" fg:x="76211" fg:w="18"/><text x="97.4368%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="97.1868%" y="405" width="0.0230%" height="15" fill="rgb(211,60,12)" fg:x="76211" fg:w="18"/><text x="97.4368%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="97.1868%" y="389" width="0.0230%" height="15" fill="rgb(224,42,10)" fg:x="76211" fg:w="18"/><text x="97.4368%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (18 samples, 0.02%)</title><rect x="97.1868%" y="373" width="0.0230%" height="15" fill="rgb(217,167,4)" fg:x="76211" fg:w="18"/><text x="97.4368%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="97.1868%" y="357" width="0.0230%" height="15" fill="rgb(253,18,17)" fg:x="76211" fg:w="18"/><text x="97.4368%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="97.1868%" y="341" width="0.0230%" height="15" fill="rgb(249,186,44)" fg:x="76211" fg:w="18"/><text x="97.4368%" y="351.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="97.1868%" y="325" width="0.0230%" height="15" fill="rgb(254,124,54)" fg:x="76211" fg:w="18"/><text x="97.4368%" y="335.50"></text></g><g><title>mallocx (10 samples, 0.01%)</title><rect x="97.1970%" y="309" width="0.0128%" height="15" fill="rgb(220,124,39)" fg:x="76219" fg:w="10"/><text x="97.4470%" y="319.50"></text></g><g><title>imalloc (10 samples, 0.01%)</title><rect x="97.1970%" y="293" width="0.0128%" height="15" fill="rgb(225,96,46)" fg:x="76219" fg:w="10"/><text x="97.4470%" y="303.50"></text></g><g><title>imalloc_body (10 samples, 0.01%)</title><rect x="97.1970%" y="277" width="0.0128%" height="15" fill="rgb(221,106,12)" fg:x="76219" fg:w="10"/><text x="97.4470%" y="287.50"></text></g><g><title>imalloc_no_sample (10 samples, 0.01%)</title><rect x="97.1970%" y="261" width="0.0128%" height="15" fill="rgb(227,133,23)" fg:x="76219" fg:w="10"/><text x="97.4470%" y="271.50"></text></g><g><title>iallocztm (10 samples, 0.01%)</title><rect x="97.1970%" y="245" width="0.0128%" height="15" fill="rgb(216,44,52)" fg:x="76219" fg:w="10"/><text x="97.4470%" y="255.50"></text></g><g><title>arena_malloc (10 samples, 0.01%)</title><rect x="97.1970%" y="229" width="0.0128%" height="15" fill="rgb(239,149,7)" fg:x="76219" fg:w="10"/><text x="97.4470%" y="239.50"></text></g><g><title>tcache_alloc_small (10 samples, 0.01%)</title><rect x="97.1970%" y="213" width="0.0128%" height="15" fill="rgb(211,157,31)" fg:x="76219" fg:w="10"/><text x="97.4470%" y="223.50"></text></g><g><title>cache_bin_alloc_easy (9 samples, 0.01%)</title><rect x="97.1983%" y="197" width="0.0115%" height="15" fill="rgb(206,215,22)" fg:x="76220" fg:w="9"/><text x="97.4483%" y="207.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (18 samples, 0.02%)</title><rect x="97.2098%" y="485" width="0.0230%" height="15" fill="rgb(208,113,15)" fg:x="76229" fg:w="18"/><text x="97.4598%" y="495.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as core::clone::Clone&gt;::clone (52 samples, 0.07%)</title><rect x="97.1677%" y="565" width="0.0663%" height="15" fill="rgb(207,189,15)" fg:x="76196" fg:w="52"/><text x="97.4177%" y="575.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetV0 as core::clone::Clone&gt;::clone (52 samples, 0.07%)</title><rect x="97.1677%" y="549" width="0.0663%" height="15" fill="rgb(231,115,4)" fg:x="76196" fg:w="52"/><text x="97.4177%" y="559.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetMut as core::clone::Clone&gt;::clone (52 samples, 0.07%)</title><rect x="97.1677%" y="533" width="0.0663%" height="15" fill="rgb(253,117,2)" fg:x="76196" fg:w="52"/><text x="97.4177%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.07%)</title><rect x="97.1677%" y="517" width="0.0663%" height="15" fill="rgb(248,48,24)" fg:x="76196" fg:w="52"/><text x="97.4177%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (52 samples, 0.07%)</title><rect x="97.1677%" y="501" width="0.0663%" height="15" fill="rgb(241,28,46)" fg:x="76196" fg:w="52"/><text x="97.4177%" y="511.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (62 samples, 0.08%)</title><rect x="97.2340%" y="469" width="0.0791%" height="15" fill="rgb(216,165,52)" fg:x="76248" fg:w="62"/><text x="97.4840%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (70 samples, 0.09%)</title><rect x="97.2340%" y="517" width="0.0893%" height="15" fill="rgb(220,222,34)" fg:x="76248" fg:w="70"/><text x="97.4840%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (70 samples, 0.09%)</title><rect x="97.2340%" y="501" width="0.0893%" height="15" fill="rgb(247,222,49)" fg:x="76248" fg:w="70"/><text x="97.4840%" y="511.50"></text></g><g><title>core::clone::Clone::clone (70 samples, 0.09%)</title><rect x="97.2340%" y="485" width="0.0893%" height="15" fill="rgb(240,10,31)" fg:x="76248" fg:w="70"/><text x="97.4840%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="97.3131%" y="469" width="0.0102%" height="15" fill="rgb(221,199,35)" fg:x="76310" fg:w="8"/><text x="97.5631%" y="479.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValue as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="97.3131%" y="453" width="0.0102%" height="15" fill="rgb(230,223,11)" fg:x="76310" fg:w="8"/><text x="97.5631%" y="463.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="97.3131%" y="437" width="0.0102%" height="15" fill="rgb(218,82,45)" fg:x="76310" fg:w="8"/><text x="97.5631%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="97.3131%" y="421" width="0.0102%" height="15" fill="rgb(233,213,33)" fg:x="76310" fg:w="8"/><text x="97.5631%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.01%)</title><rect x="97.3131%" y="405" width="0.0102%" height="15" fill="rgb(210,143,52)" fg:x="76310" fg:w="8"/><text x="97.5631%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.01%)</title><rect x="97.3131%" y="389" width="0.0102%" height="15" fill="rgb(206,95,4)" fg:x="76310" fg:w="8"/><text x="97.5631%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.01%)</title><rect x="97.3131%" y="373" width="0.0102%" height="15" fill="rgb(246,164,46)" fg:x="76310" fg:w="8"/><text x="97.5631%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="97.3131%" y="357" width="0.0102%" height="15" fill="rgb(213,210,47)" fg:x="76310" fg:w="8"/><text x="97.5631%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="97.3131%" y="341" width="0.0102%" height="15" fill="rgb(210,12,38)" fg:x="76310" fg:w="8"/><text x="97.5631%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.01%)</title><rect x="97.3131%" y="325" width="0.0102%" height="15" fill="rgb(252,192,54)" fg:x="76310" fg:w="8"/><text x="97.5631%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="97.3131%" y="309" width="0.0102%" height="15" fill="rgb(242,92,6)" fg:x="76310" fg:w="8"/><text x="97.5631%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="97.3131%" y="293" width="0.0102%" height="15" fill="rgb(253,154,15)" fg:x="76310" fg:w="8"/><text x="97.5631%" y="303.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="97.3131%" y="277" width="0.0102%" height="15" fill="rgb(209,20,43)" fg:x="76310" fg:w="8"/><text x="97.5631%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (73 samples, 0.09%)</title><rect x="97.2340%" y="565" width="0.0931%" height="15" fill="rgb(232,28,49)" fg:x="76248" fg:w="73"/><text x="97.4840%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (73 samples, 0.09%)</title><rect x="97.2340%" y="549" width="0.0931%" height="15" fill="rgb(248,131,53)" fg:x="76248" fg:w="73"/><text x="97.4840%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (73 samples, 0.09%)</title><rect x="97.2340%" y="533" width="0.0931%" height="15" fill="rgb(214,16,30)" fg:x="76248" fg:w="73"/><text x="97.4840%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="97.3271%" y="469" width="0.0179%" height="15" fill="rgb(245,16,0)" fg:x="76321" fg:w="14"/><text x="97.5771%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.02%)</title><rect x="97.3271%" y="453" width="0.0179%" height="15" fill="rgb(245,17,35)" fg:x="76321" fg:w="14"/><text x="97.5771%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.02%)</title><rect x="97.3271%" y="437" width="0.0179%" height="15" fill="rgb(249,27,53)" fg:x="76321" fg:w="14"/><text x="97.5771%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.02%)</title><rect x="97.3271%" y="421" width="0.0179%" height="15" fill="rgb(214,73,24)" fg:x="76321" fg:w="14"/><text x="97.5771%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="97.3271%" y="405" width="0.0179%" height="15" fill="rgb(223,84,37)" fg:x="76321" fg:w="14"/><text x="97.5771%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="97.3271%" y="389" width="0.0179%" height="15" fill="rgb(210,109,28)" fg:x="76321" fg:w="14"/><text x="97.5771%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (14 samples, 0.02%)</title><rect x="97.3271%" y="373" width="0.0179%" height="15" fill="rgb(208,186,6)" fg:x="76321" fg:w="14"/><text x="97.5771%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.02%)</title><rect x="97.3271%" y="357" width="0.0179%" height="15" fill="rgb(235,201,30)" fg:x="76321" fg:w="14"/><text x="97.5771%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="97.3271%" y="341" width="0.0179%" height="15" fill="rgb(216,198,48)" fg:x="76321" fg:w="14"/><text x="97.5771%" y="351.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.02%)</title><rect x="97.3271%" y="325" width="0.0179%" height="15" fill="rgb(254,186,25)" fg:x="76321" fg:w="14"/><text x="97.5771%" y="335.50"></text></g><g><title>mallocx (14 samples, 0.02%)</title><rect x="97.3271%" y="309" width="0.0179%" height="15" fill="rgb(227,87,5)" fg:x="76321" fg:w="14"/><text x="97.5771%" y="319.50"></text></g><g><title>imalloc (14 samples, 0.02%)</title><rect x="97.3271%" y="293" width="0.0179%" height="15" fill="rgb(236,205,25)" fg:x="76321" fg:w="14"/><text x="97.5771%" y="303.50"></text></g><g><title>imalloc_body (14 samples, 0.02%)</title><rect x="97.3271%" y="277" width="0.0179%" height="15" fill="rgb(229,99,32)" fg:x="76321" fg:w="14"/><text x="97.5771%" y="287.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (14 samples, 0.02%)</title><rect x="97.3488%" y="309" width="0.0179%" height="15" fill="rgb(231,177,31)" fg:x="76338" fg:w="14"/><text x="97.5988%" y="319.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="97.3488%" y="293" width="0.0179%" height="15" fill="rgb(246,15,2)" fg:x="76338" fg:w="14"/><text x="97.5988%" y="303.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="97.3564%" y="277" width="0.0102%" height="15" fill="rgb(207,39,15)" fg:x="76344" fg:w="8"/><text x="97.6064%" y="287.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="97.3564%" y="261" width="0.0102%" height="15" fill="rgb(207,44,9)" fg:x="76344" fg:w="8"/><text x="97.6064%" y="271.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.01%)</title><rect x="97.3564%" y="245" width="0.0102%" height="15" fill="rgb(225,224,33)" fg:x="76344" fg:w="8"/><text x="97.6064%" y="255.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (8 samples, 0.01%)</title><rect x="97.3564%" y="229" width="0.0102%" height="15" fill="rgb(252,151,3)" fg:x="76344" fg:w="8"/><text x="97.6064%" y="239.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (8 samples, 0.01%)</title><rect x="97.3564%" y="213" width="0.0102%" height="15" fill="rgb(211,140,13)" fg:x="76344" fg:w="8"/><text x="97.6064%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (8 samples, 0.01%)</title><rect x="97.3564%" y="197" width="0.0102%" height="15" fill="rgb(239,225,17)" fg:x="76344" fg:w="8"/><text x="97.6064%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.01%)</title><rect x="97.3564%" y="181" width="0.0102%" height="15" fill="rgb(223,170,52)" fg:x="76344" fg:w="8"/><text x="97.6064%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="97.3564%" y="165" width="0.0102%" height="15" fill="rgb(212,64,21)" fg:x="76344" fg:w="8"/><text x="97.6064%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="97.3564%" y="149" width="0.0102%" height="15" fill="rgb(236,126,48)" fg:x="76344" fg:w="8"/><text x="97.6064%" y="159.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="97.3564%" y="133" width="0.0102%" height="15" fill="rgb(209,135,11)" fg:x="76344" fg:w="8"/><text x="97.6064%" y="143.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="97.3488%" y="341" width="0.0230%" height="15" fill="rgb(228,126,40)" fg:x="76338" fg:w="18"/><text x="97.5988%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="97.3488%" y="325" width="0.0230%" height="15" fill="rgb(205,196,36)" fg:x="76338" fg:w="18"/><text x="97.5988%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="97.3488%" y="405" width="0.0242%" height="15" fill="rgb(243,160,33)" fg:x="76338" fg:w="19"/><text x="97.5988%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="97.3488%" y="389" width="0.0242%" height="15" fill="rgb(210,84,20)" fg:x="76338" fg:w="19"/><text x="97.5988%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="97.3488%" y="373" width="0.0242%" height="15" fill="rgb(228,213,30)" fg:x="76338" fg:w="19"/><text x="97.5988%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="97.3488%" y="357" width="0.0242%" height="15" fill="rgb(252,33,45)" fg:x="76338" fg:w="19"/><text x="97.5988%" y="367.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (10 samples, 0.01%)</title><rect x="97.3794%" y="133" width="0.0128%" height="15" fill="rgb(254,227,20)" fg:x="76362" fg:w="10"/><text x="97.6294%" y="143.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (10 samples, 0.01%)</title><rect x="97.3794%" y="117" width="0.0128%" height="15" fill="rgb(228,192,2)" fg:x="76362" fg:w="10"/><text x="97.6294%" y="127.50"></text></g><g><title>arena_slab_reg_alloc (10 samples, 0.01%)</title><rect x="97.3794%" y="101" width="0.0128%" height="15" fill="rgb(233,32,8)" fg:x="76362" fg:w="10"/><text x="97.6294%" y="111.50"></text></g><g><title>bitmap_sfu (10 samples, 0.01%)</title><rect x="97.3794%" y="85" width="0.0128%" height="15" fill="rgb(220,146,47)" fg:x="76362" fg:w="10"/><text x="97.6294%" y="95.50"></text></g><g><title>bitmap_set (10 samples, 0.01%)</title><rect x="97.3794%" y="69" width="0.0128%" height="15" fill="rgb(246,194,1)" fg:x="76362" fg:w="10"/><text x="97.6294%" y="79.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (43 samples, 0.05%)</title><rect x="97.3450%" y="437" width="0.0548%" height="15" fill="rgb(218,203,9)" fg:x="76335" fg:w="43"/><text x="97.5950%" y="447.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (43 samples, 0.05%)</title><rect x="97.3450%" y="421" width="0.0548%" height="15" fill="rgb(237,97,14)" fg:x="76335" fg:w="43"/><text x="97.5950%" y="431.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (21 samples, 0.03%)</title><rect x="97.3730%" y="405" width="0.0268%" height="15" fill="rgb(239,76,15)" fg:x="76357" fg:w="21"/><text x="97.6230%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="97.3743%" y="389" width="0.0255%" height="15" fill="rgb(222,53,45)" fg:x="76358" fg:w="20"/><text x="97.6243%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.03%)</title><rect x="97.3743%" y="373" width="0.0255%" height="15" fill="rgb(237,88,5)" fg:x="76358" fg:w="20"/><text x="97.6243%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (20 samples, 0.03%)</title><rect x="97.3743%" y="357" width="0.0255%" height="15" fill="rgb(218,223,35)" fg:x="76358" fg:w="20"/><text x="97.6243%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (20 samples, 0.03%)</title><rect x="97.3743%" y="341" width="0.0255%" height="15" fill="rgb(243,229,38)" fg:x="76358" fg:w="20"/><text x="97.6243%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (20 samples, 0.03%)</title><rect x="97.3743%" y="325" width="0.0255%" height="15" fill="rgb(240,75,41)" fg:x="76358" fg:w="20"/><text x="97.6243%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (20 samples, 0.03%)</title><rect x="97.3743%" y="309" width="0.0255%" height="15" fill="rgb(209,110,37)" fg:x="76358" fg:w="20"/><text x="97.6243%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="97.3794%" y="293" width="0.0204%" height="15" fill="rgb(221,130,46)" fg:x="76362" fg:w="16"/><text x="97.6294%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="97.3794%" y="277" width="0.0204%" height="15" fill="rgb(237,160,20)" fg:x="76362" fg:w="16"/><text x="97.6294%" y="287.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="97.3794%" y="261" width="0.0204%" height="15" fill="rgb(234,126,24)" fg:x="76362" fg:w="16"/><text x="97.6294%" y="271.50"></text></g><g><title>mallocx (16 samples, 0.02%)</title><rect x="97.3794%" y="245" width="0.0204%" height="15" fill="rgb(207,177,9)" fg:x="76362" fg:w="16"/><text x="97.6294%" y="255.50"></text></g><g><title>imalloc (16 samples, 0.02%)</title><rect x="97.3794%" y="229" width="0.0204%" height="15" fill="rgb(231,191,33)" fg:x="76362" fg:w="16"/><text x="97.6294%" y="239.50"></text></g><g><title>imalloc_body (16 samples, 0.02%)</title><rect x="97.3794%" y="213" width="0.0204%" height="15" fill="rgb(207,42,1)" fg:x="76362" fg:w="16"/><text x="97.6294%" y="223.50"></text></g><g><title>imalloc_no_sample (16 samples, 0.02%)</title><rect x="97.3794%" y="197" width="0.0204%" height="15" fill="rgb(218,34,50)" fg:x="76362" fg:w="16"/><text x="97.6294%" y="207.50"></text></g><g><title>iallocztm (16 samples, 0.02%)</title><rect x="97.3794%" y="181" width="0.0204%" height="15" fill="rgb(254,126,39)" fg:x="76362" fg:w="16"/><text x="97.6294%" y="191.50"></text></g><g><title>arena_malloc (16 samples, 0.02%)</title><rect x="97.3794%" y="165" width="0.0204%" height="15" fill="rgb(251,17,26)" fg:x="76362" fg:w="16"/><text x="97.6294%" y="175.50"></text></g><g><title>tcache_alloc_small (16 samples, 0.02%)</title><rect x="97.3794%" y="149" width="0.0204%" height="15" fill="rgb(252,215,34)" fg:x="76362" fg:w="16"/><text x="97.6294%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (269 samples, 0.34%)</title><rect x="97.0644%" y="677" width="0.3430%" height="15" fill="rgb(217,120,44)" fg:x="76115" fg:w="269"/><text x="97.3144%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (269 samples, 0.34%)</title><rect x="97.0644%" y="661" width="0.3430%" height="15" fill="rgb(211,31,11)" fg:x="76115" fg:w="269"/><text x="97.3144%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (269 samples, 0.34%)</title><rect x="97.0644%" y="645" width="0.3430%" height="15" fill="rgb(222,69,51)" fg:x="76115" fg:w="269"/><text x="97.3144%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (268 samples, 0.34%)</title><rect x="97.0657%" y="629" width="0.3418%" height="15" fill="rgb(215,229,42)" fg:x="76116" fg:w="268"/><text x="97.3157%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (255 samples, 0.33%)</title><rect x="97.0823%" y="613" width="0.3252%" height="15" fill="rgb(212,102,15)" fg:x="76129" fg:w="255"/><text x="97.3323%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (255 samples, 0.33%)</title><rect x="97.0823%" y="597" width="0.3252%" height="15" fill="rgb(205,179,41)" fg:x="76129" fg:w="255"/><text x="97.3323%" y="607.50"></text></g><g><title>aptos_executor_types::executed_chunk::ExecutedChunk::transactions_to_commit::{{closure}} (255 samples, 0.33%)</title><rect x="97.0823%" y="581" width="0.3252%" height="15" fill="rgb(219,148,46)" fg:x="76129" fg:w="255"/><text x="97.3323%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (63 samples, 0.08%)</title><rect x="97.3271%" y="565" width="0.0803%" height="15" fill="rgb(243,40,19)" fg:x="76321" fg:w="63"/><text x="97.5771%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (63 samples, 0.08%)</title><rect x="97.3271%" y="549" width="0.0803%" height="15" fill="rgb(208,206,34)" fg:x="76321" fg:w="63"/><text x="97.5771%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (63 samples, 0.08%)</title><rect x="97.3271%" y="533" width="0.0803%" height="15" fill="rgb(244,184,38)" fg:x="76321" fg:w="63"/><text x="97.5771%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (63 samples, 0.08%)</title><rect x="97.3271%" y="517" width="0.0803%" height="15" fill="rgb(244,151,47)" fg:x="76321" fg:w="63"/><text x="97.5771%" y="527.50"></text></g><g><title>&lt;aptos_types::contract_event::ContractEvent as core::clone::Clone&gt;::clone (63 samples, 0.08%)</title><rect x="97.3271%" y="501" width="0.0803%" height="15" fill="rgb(236,134,42)" fg:x="76321" fg:w="63"/><text x="97.5771%" y="511.50"></text></g><g><title>&lt;aptos_types::contract_event::ContractEventV0 as core::clone::Clone&gt;::clone (63 samples, 0.08%)</title><rect x="97.3271%" y="485" width="0.0803%" height="15" fill="rgb(233,93,22)" fg:x="76321" fg:w="63"/><text x="97.5771%" y="495.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (49 samples, 0.06%)</title><rect x="97.3450%" y="469" width="0.0625%" height="15" fill="rgb(211,202,10)" fg:x="76335" fg:w="49"/><text x="97.5950%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (49 samples, 0.06%)</title><rect x="97.3450%" y="453" width="0.0625%" height="15" fill="rgb(240,63,8)" fg:x="76335" fg:w="49"/><text x="97.5950%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (270 samples, 0.34%)</title><rect x="97.0644%" y="1093" width="0.3443%" height="15" fill="rgb(214,9,4)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (270 samples, 0.34%)</title><rect x="97.0644%" y="1077" width="0.3443%" height="15" fill="rgb(243,66,45)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="1087.50"></text></g><g><title>core::iter::adapters::try_process (270 samples, 0.34%)</title><rect x="97.0644%" y="1061" width="0.3443%" height="15" fill="rgb(220,50,42)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (270 samples, 0.34%)</title><rect x="97.0644%" y="1045" width="0.3443%" height="15" fill="rgb(220,134,27)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (270 samples, 0.34%)</title><rect x="97.0644%" y="1029" width="0.3443%" height="15" fill="rgb(246,151,50)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (270 samples, 0.34%)</title><rect x="97.0644%" y="1013" width="0.3443%" height="15" fill="rgb(238,216,27)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="1023.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (270 samples, 0.34%)</title><rect x="97.0644%" y="997" width="0.3443%" height="15" fill="rgb(250,92,11)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (270 samples, 0.34%)</title><rect x="97.0644%" y="981" width="0.3443%" height="15" fill="rgb(248,183,6)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (270 samples, 0.34%)</title><rect x="97.0644%" y="965" width="0.3443%" height="15" fill="rgb(211,204,50)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (270 samples, 0.34%)</title><rect x="97.0644%" y="949" width="0.3443%" height="15" fill="rgb(252,55,47)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (270 samples, 0.34%)</title><rect x="97.0644%" y="933" width="0.3443%" height="15" fill="rgb(240,198,32)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (270 samples, 0.34%)</title><rect x="97.0644%" y="917" width="0.3443%" height="15" fill="rgb(224,203,19)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="927.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (270 samples, 0.34%)</title><rect x="97.0644%" y="901" width="0.3443%" height="15" fill="rgb(205,27,16)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (270 samples, 0.34%)</title><rect x="97.0644%" y="885" width="0.3443%" height="15" fill="rgb(224,226,17)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="895.50"></text></g><g><title>aptos_api::executor::src::block_executor::BlockExecutorInner&lt;V&gt;::commit_blocks_ext::{{closure}} (270 samples, 0.34%)</title><rect x="97.0644%" y="869" width="0.3443%" height="15" fill="rgb(205,216,54)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="879.50"></text></g><g><title>aptos_executor_types::executed_chunk::ExecutedChunk::transactions_to_commit (270 samples, 0.34%)</title><rect x="97.0644%" y="853" width="0.3443%" height="15" fill="rgb(248,168,46)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (270 samples, 0.34%)</title><rect x="97.0644%" y="837" width="0.3443%" height="15" fill="rgb(226,111,45)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (270 samples, 0.34%)</title><rect x="97.0644%" y="821" width="0.3443%" height="15" fill="rgb(231,15,9)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="831.50"></text></g><g><title>core::iter::adapters::try_process (270 samples, 0.34%)</title><rect x="97.0644%" y="805" width="0.3443%" height="15" fill="rgb(243,168,3)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (270 samples, 0.34%)</title><rect x="97.0644%" y="789" width="0.3443%" height="15" fill="rgb(221,220,54)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (270 samples, 0.34%)</title><rect x="97.0644%" y="773" width="0.3443%" height="15" fill="rgb(232,174,38)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (270 samples, 0.34%)</title><rect x="97.0644%" y="757" width="0.3443%" height="15" fill="rgb(205,14,38)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (270 samples, 0.34%)</title><rect x="97.0644%" y="741" width="0.3443%" height="15" fill="rgb(234,89,19)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (270 samples, 0.34%)</title><rect x="97.0644%" y="725" width="0.3443%" height="15" fill="rgb(216,68,51)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (270 samples, 0.34%)</title><rect x="97.0644%" y="709" width="0.3443%" height="15" fill="rgb(213,49,2)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (270 samples, 0.34%)</title><rect x="97.0644%" y="693" width="0.3443%" height="15" fill="rgb(242,146,30)" fg:x="76115" fg:w="270"/><text x="97.3144%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (12 samples, 0.02%)</title><rect x="97.4317%" y="757" width="0.0153%" height="15" fill="rgb(224,188,11)" fg:x="76403" fg:w="12"/><text x="97.6817%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (9 samples, 0.01%)</title><rect x="97.4355%" y="741" width="0.0115%" height="15" fill="rgb(213,159,11)" fg:x="76406" fg:w="9"/><text x="97.6855%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (9 samples, 0.01%)</title><rect x="97.4355%" y="725" width="0.0115%" height="15" fill="rgb(229,13,31)" fg:x="76406" fg:w="9"/><text x="97.6855%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (15 samples, 0.02%)</title><rect x="97.4317%" y="805" width="0.0191%" height="15" fill="rgb(209,103,11)" fg:x="76403" fg:w="15"/><text x="97.6817%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="97.4317%" y="789" width="0.0191%" height="15" fill="rgb(206,3,4)" fg:x="76403" fg:w="15"/><text x="97.6817%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (15 samples, 0.02%)</title><rect x="97.4317%" y="773" width="0.0191%" height="15" fill="rgb(252,10,49)" fg:x="76403" fg:w="15"/><text x="97.6817%" y="783.50"></text></g><g><title>sz_size2index (13 samples, 0.02%)</title><rect x="97.4546%" y="661" width="0.0166%" height="15" fill="rgb(217,160,32)" fg:x="76421" fg:w="13"/><text x="97.7046%" y="671.50"></text></g><g><title>sz_size2index_lookup (13 samples, 0.02%)</title><rect x="97.4546%" y="645" width="0.0166%" height="15" fill="rgb(249,196,0)" fg:x="76421" fg:w="13"/><text x="97.7046%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (34 samples, 0.04%)</title><rect x="97.4291%" y="821" width="0.0434%" height="15" fill="rgb(213,17,48)" fg:x="76401" fg:w="34"/><text x="97.6791%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (17 samples, 0.02%)</title><rect x="97.4508%" y="805" width="0.0217%" height="15" fill="rgb(206,42,46)" fg:x="76418" fg:w="17"/><text x="97.7008%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (17 samples, 0.02%)</title><rect x="97.4508%" y="789" width="0.0217%" height="15" fill="rgb(212,105,24)" fg:x="76418" fg:w="17"/><text x="97.7008%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="97.4508%" y="773" width="0.0217%" height="15" fill="rgb(243,216,30)" fg:x="76418" fg:w="17"/><text x="97.7008%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="97.4508%" y="757" width="0.0217%" height="15" fill="rgb(207,121,3)" fg:x="76418" fg:w="17"/><text x="97.7008%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="97.4508%" y="741" width="0.0217%" height="15" fill="rgb(249,78,0)" fg:x="76418" fg:w="17"/><text x="97.7008%" y="751.50"></text></g><g><title>sdallocx (14 samples, 0.02%)</title><rect x="97.4546%" y="725" width="0.0179%" height="15" fill="rgb(244,151,32)" fg:x="76421" fg:w="14"/><text x="97.7046%" y="735.50"></text></g><g><title>isfree (14 samples, 0.02%)</title><rect x="97.4546%" y="709" width="0.0179%" height="15" fill="rgb(228,63,25)" fg:x="76421" fg:w="14"/><text x="97.7046%" y="719.50"></text></g><g><title>isdalloct (14 samples, 0.02%)</title><rect x="97.4546%" y="693" width="0.0179%" height="15" fill="rgb(231,158,23)" fg:x="76421" fg:w="14"/><text x="97.7046%" y="703.50"></text></g><g><title>arena_sdalloc (14 samples, 0.02%)</title><rect x="97.4546%" y="677" width="0.0179%" height="15" fill="rgb(248,107,23)" fg:x="76421" fg:w="14"/><text x="97.7046%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (40 samples, 0.05%)</title><rect x="97.4240%" y="853" width="0.0510%" height="15" fill="rgb(215,168,21)" fg:x="76397" fg:w="40"/><text x="97.6740%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (37 samples, 0.05%)</title><rect x="97.4279%" y="837" width="0.0472%" height="15" fill="rgb(227,83,22)" fg:x="76400" fg:w="37"/><text x="97.6779%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::contract_event::ContractEvent&gt;&gt; (49 samples, 0.06%)</title><rect x="97.4177%" y="933" width="0.0625%" height="15" fill="rgb(217,118,43)" fg:x="76392" fg:w="49"/><text x="97.6677%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.06%)</title><rect x="97.4177%" y="917" width="0.0625%" height="15" fill="rgb(229,220,41)" fg:x="76392" fg:w="49"/><text x="97.6677%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::contract_event::ContractEvent]&gt; (49 samples, 0.06%)</title><rect x="97.4177%" y="901" width="0.0625%" height="15" fill="rgb(254,146,46)" fg:x="76392" fg:w="49"/><text x="97.6677%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::contract_event::ContractEvent&gt; (49 samples, 0.06%)</title><rect x="97.4177%" y="885" width="0.0625%" height="15" fill="rgb(233,208,31)" fg:x="76392" fg:w="49"/><text x="97.6677%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::contract_event::ContractEventV0&gt; (49 samples, 0.06%)</title><rect x="97.4177%" y="869" width="0.0625%" height="15" fill="rgb(222,162,7)" fg:x="76392" fg:w="49"/><text x="97.6677%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (35 samples, 0.04%)</title><rect x="97.4801%" y="933" width="0.0446%" height="15" fill="rgb(230,117,45)" fg:x="76441" fg:w="35"/><text x="97.7301%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (35 samples, 0.04%)</title><rect x="97.4801%" y="917" width="0.0446%" height="15" fill="rgb(239,163,6)" fg:x="76441" fg:w="35"/><text x="97.7301%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (35 samples, 0.04%)</title><rect x="97.4801%" y="901" width="0.0446%" height="15" fill="rgb(246,130,17)" fg:x="76441" fg:w="35"/><text x="97.7301%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (35 samples, 0.04%)</title><rect x="97.4801%" y="885" width="0.0446%" height="15" fill="rgb(216,84,5)" fg:x="76441" fg:w="35"/><text x="97.7301%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.04%)</title><rect x="97.4801%" y="869" width="0.0446%" height="15" fill="rgb(230,200,21)" fg:x="76441" fg:w="35"/><text x="97.7301%" y="879.50"></text></g><g><title>core::mem::drop (35 samples, 0.04%)</title><rect x="97.4801%" y="853" width="0.0446%" height="15" fill="rgb(224,2,8)" fg:x="76441" fg:w="35"/><text x="97.7301%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (35 samples, 0.04%)</title><rect x="97.4801%" y="837" width="0.0446%" height="15" fill="rgb(238,178,10)" fg:x="76441" fg:w="35"/><text x="97.7301%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.04%)</title><rect x="97.4801%" y="821" width="0.0446%" height="15" fill="rgb(242,153,24)" fg:x="76441" fg:w="35"/><text x="97.7301%" y="831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (31 samples, 0.04%)</title><rect x="97.4852%" y="805" width="0.0395%" height="15" fill="rgb(242,32,48)" fg:x="76445" fg:w="31"/><text x="97.7352%" y="815.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (31 samples, 0.04%)</title><rect x="97.4852%" y="789" width="0.0395%" height="15" fill="rgb(227,36,0)" fg:x="76445" fg:w="31"/><text x="97.7352%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (24 samples, 0.03%)</title><rect x="97.4942%" y="773" width="0.0306%" height="15" fill="rgb(251,33,35)" fg:x="76452" fg:w="24"/><text x="97.7442%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (16 samples, 0.02%)</title><rect x="97.5044%" y="757" width="0.0204%" height="15" fill="rgb(232,168,51)" fg:x="76460" fg:w="16"/><text x="97.7544%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16 samples, 0.02%)</title><rect x="97.5044%" y="741" width="0.0204%" height="15" fill="rgb(228,56,10)" fg:x="76460" fg:w="16"/><text x="97.7544%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="97.5044%" y="725" width="0.0204%" height="15" fill="rgb(231,10,26)" fg:x="76460" fg:w="16"/><text x="97.7544%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="97.5044%" y="709" width="0.0204%" height="15" fill="rgb(226,202,12)" fg:x="76460" fg:w="16"/><text x="97.7544%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="97.5044%" y="693" width="0.0204%" height="15" fill="rgb(251,49,21)" fg:x="76460" fg:w="16"/><text x="97.7544%" y="703.50"></text></g><g><title>sdallocx (16 samples, 0.02%)</title><rect x="97.5044%" y="677" width="0.0204%" height="15" fill="rgb(206,228,28)" fg:x="76460" fg:w="16"/><text x="97.7544%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (19 samples, 0.02%)</title><rect x="97.5248%" y="789" width="0.0242%" height="15" fill="rgb(205,198,31)" fg:x="76476" fg:w="19"/><text x="97.7748%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="97.5248%" y="773" width="0.0242%" height="15" fill="rgb(213,69,1)" fg:x="76476" fg:w="19"/><text x="97.7748%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="97.5248%" y="757" width="0.0242%" height="15" fill="rgb(209,177,9)" fg:x="76476" fg:w="19"/><text x="97.7748%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="97.5248%" y="741" width="0.0242%" height="15" fill="rgb(227,119,30)" fg:x="76476" fg:w="19"/><text x="97.7748%" y="751.50"></text></g><g><title>sdallocx (19 samples, 0.02%)</title><rect x="97.5248%" y="725" width="0.0242%" height="15" fill="rgb(234,106,41)" fg:x="76476" fg:w="19"/><text x="97.7748%" y="735.50"></text></g><g><title>isfree (19 samples, 0.02%)</title><rect x="97.5248%" y="709" width="0.0242%" height="15" fill="rgb(244,103,47)" fg:x="76476" fg:w="19"/><text x="97.7748%" y="719.50"></text></g><g><title>isdalloct (19 samples, 0.02%)</title><rect x="97.5248%" y="693" width="0.0242%" height="15" fill="rgb(212,211,25)" fg:x="76476" fg:w="19"/><text x="97.7748%" y="703.50"></text></g><g><title>arena_sdalloc (19 samples, 0.02%)</title><rect x="97.5248%" y="677" width="0.0242%" height="15" fill="rgb(208,63,53)" fg:x="76476" fg:w="19"/><text x="97.7748%" y="687.50"></text></g><g><title>tcache_dalloc_small (19 samples, 0.02%)</title><rect x="97.5248%" y="661" width="0.0242%" height="15" fill="rgb(213,176,21)" fg:x="76476" fg:w="19"/><text x="97.7748%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (25 samples, 0.03%)</title><rect x="97.5248%" y="837" width="0.0319%" height="15" fill="rgb(243,124,12)" fg:x="76476" fg:w="25"/><text x="97.7748%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (25 samples, 0.03%)</title><rect x="97.5248%" y="821" width="0.0319%" height="15" fill="rgb(239,2,35)" fg:x="76476" fg:w="25"/><text x="97.7748%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;(aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;)&gt; (25 samples, 0.03%)</title><rect x="97.5248%" y="805" width="0.0319%" height="15" fill="rgb(253,169,22)" fg:x="76476" fg:w="25"/><text x="97.7748%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.10%)</title><rect x="97.5248%" y="885" width="0.1007%" height="15" fill="rgb(254,51,12)" fg:x="76476" fg:w="79"/><text x="97.7748%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (79 samples, 0.10%)</title><rect x="97.5248%" y="869" width="0.1007%" height="15" fill="rgb(244,17,47)" fg:x="76476" fg:w="79"/><text x="97.7748%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (79 samples, 0.10%)</title><rect x="97.5248%" y="853" width="0.1007%" height="15" fill="rgb(251,45,46)" fg:x="76476" fg:w="79"/><text x="97.7748%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (54 samples, 0.07%)</title><rect x="97.5567%" y="837" width="0.0689%" height="15" fill="rgb(223,87,43)" fg:x="76501" fg:w="54"/><text x="97.8067%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (54 samples, 0.07%)</title><rect x="97.5567%" y="821" width="0.0689%" height="15" fill="rgb(230,132,31)" fg:x="76501" fg:w="54"/><text x="97.8067%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (54 samples, 0.07%)</title><rect x="97.5567%" y="805" width="0.0689%" height="15" fill="rgb(206,99,1)" fg:x="76501" fg:w="54"/><text x="97.8067%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (54 samples, 0.07%)</title><rect x="97.5567%" y="789" width="0.0689%" height="15" fill="rgb(227,110,25)" fg:x="76501" fg:w="54"/><text x="97.8067%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt;&gt; (81 samples, 0.10%)</title><rect x="97.5248%" y="933" width="0.1033%" height="15" fill="rgb(217,182,7)" fg:x="76476" fg:w="81"/><text x="97.7748%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;,std::hash::random::RandomState&gt;&gt; (81 samples, 0.10%)</title><rect x="97.5248%" y="917" width="0.1033%" height="15" fill="rgb(250,176,4)" fg:x="76476" fg:w="81"/><text x="97.7748%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;)&gt;&gt; (81 samples, 0.10%)</title><rect x="97.5248%" y="901" width="0.1033%" height="15" fill="rgb(244,98,30)" fg:x="76476" fg:w="81"/><text x="97.7748%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_executor_types::TransactionData&gt; (175 samples, 0.22%)</title><rect x="97.4087%" y="949" width="0.2232%" height="15" fill="rgb(228,150,42)" fg:x="76385" fg:w="175"/><text x="97.6587%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (12 samples, 0.02%)</title><rect x="97.6370%" y="869" width="0.0153%" height="15" fill="rgb(231,91,46)" fg:x="76564" fg:w="12"/><text x="97.8870%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="97.6370%" y="853" width="0.0153%" height="15" fill="rgb(252,161,32)" fg:x="76564" fg:w="12"/><text x="97.8870%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (12 samples, 0.02%)</title><rect x="97.6370%" y="837" width="0.0153%" height="15" fill="rgb(236,69,41)" fg:x="76564" fg:w="12"/><text x="97.8870%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (12 samples, 0.02%)</title><rect x="97.6370%" y="821" width="0.0153%" height="15" fill="rgb(212,160,3)" fg:x="76564" fg:w="12"/><text x="97.8870%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (9 samples, 0.01%)</title><rect x="97.6408%" y="805" width="0.0115%" height="15" fill="rgb(216,5,50)" fg:x="76567" fg:w="9"/><text x="97.8908%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::Transaction&gt; (18 samples, 0.02%)</title><rect x="97.6319%" y="949" width="0.0230%" height="15" fill="rgb(241,138,25)" fg:x="76560" fg:w="18"/><text x="97.8819%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (18 samples, 0.02%)</title><rect x="97.6319%" y="933" width="0.0230%" height="15" fill="rgb(239,42,18)" fg:x="76560" fg:w="18"/><text x="97.8819%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (18 samples, 0.02%)</title><rect x="97.6319%" y="917" width="0.0230%" height="15" fill="rgb(239,40,7)" fg:x="76560" fg:w="18"/><text x="97.8819%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (18 samples, 0.02%)</title><rect x="97.6319%" y="901" width="0.0230%" height="15" fill="rgb(239,11,31)" fg:x="76560" fg:w="18"/><text x="97.8819%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (18 samples, 0.02%)</title><rect x="97.6319%" y="885" width="0.0230%" height="15" fill="rgb(224,77,40)" fg:x="76560" fg:w="18"/><text x="97.8819%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(aptos_types::transaction::Transaction,aptos_executor_types::TransactionData)&gt;&gt; (194 samples, 0.25%)</title><rect x="97.4087%" y="1013" width="0.2474%" height="15" fill="rgb(226,15,5)" fg:x="76385" fg:w="194"/><text x="97.6587%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 0.25%)</title><rect x="97.4087%" y="997" width="0.2474%" height="15" fill="rgb(254,188,5)" fg:x="76385" fg:w="194"/><text x="97.6587%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(aptos_types::transaction::Transaction,aptos_executor_types::TransactionData)]&gt; (194 samples, 0.25%)</title><rect x="97.4087%" y="981" width="0.2474%" height="15" fill="rgb(241,148,52)" fg:x="76385" fg:w="194"/><text x="97.6587%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;(aptos_types::transaction::Transaction,aptos_executor_types::TransactionData)&gt; (194 samples, 0.25%)</title><rect x="97.4087%" y="965" width="0.2474%" height="15" fill="rgb(251,48,36)" fg:x="76385" fg:w="194"/><text x="97.6587%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_api::executor::src::components::block_tree::Block&gt;&gt; (195 samples, 0.25%)</title><rect x="97.4087%" y="1093" width="0.2487%" height="15" fill="rgb(243,83,13)" fg:x="76385" fg:w="195"/><text x="97.6587%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (195 samples, 0.25%)</title><rect x="97.4087%" y="1077" width="0.2487%" height="15" fill="rgb(210,105,0)" fg:x="76385" fg:w="195"/><text x="97.6587%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (195 samples, 0.25%)</title><rect x="97.4087%" y="1061" width="0.2487%" height="15" fill="rgb(239,60,36)" fg:x="76385" fg:w="195"/><text x="97.6587%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_api::executor::src::components::block_tree::Block&gt; (195 samples, 0.25%)</title><rect x="97.4087%" y="1045" width="0.2487%" height="15" fill="rgb(210,20,0)" fg:x="76385" fg:w="195"/><text x="97.6587%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_executor_types::executed_chunk::ExecutedChunk&gt; (195 samples, 0.25%)</title><rect x="97.4087%" y="1029" width="0.2487%" height="15" fill="rgb(244,26,53)" fg:x="76385" fg:w="195"/><text x="97.6587%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (8 samples, 0.01%)</title><rect x="97.6714%" y="869" width="0.0102%" height="15" fill="rgb(240,100,49)" fg:x="76591" fg:w="8"/><text x="97.9214%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (14 samples, 0.02%)</title><rect x="97.6701%" y="917" width="0.0179%" height="15" fill="rgb(250,46,45)" fg:x="76590" fg:w="14"/><text x="97.9201%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="97.6701%" y="901" width="0.0179%" height="15" fill="rgb(220,181,29)" fg:x="76590" fg:w="14"/><text x="97.9201%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (14 samples, 0.02%)</title><rect x="97.6701%" y="885" width="0.0179%" height="15" fill="rgb(213,137,33)" fg:x="76590" fg:w="14"/><text x="97.9201%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (22 samples, 0.03%)</title><rect x="97.6676%" y="933" width="0.0281%" height="15" fill="rgb(213,27,48)" fg:x="76588" fg:w="22"/><text x="97.9176%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (23 samples, 0.03%)</title><rect x="97.6676%" y="965" width="0.0293%" height="15" fill="rgb(245,180,39)" fg:x="76588" fg:w="23"/><text x="97.9176%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (23 samples, 0.03%)</title><rect x="97.6676%" y="949" width="0.0293%" height="15" fill="rgb(212,158,42)" fg:x="76588" fg:w="23"/><text x="97.9176%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::contract_event::ContractEvent&gt;&gt; (34 samples, 0.04%)</title><rect x="97.6587%" y="1045" width="0.0434%" height="15" fill="rgb(228,193,18)" fg:x="76581" fg:w="34"/><text x="97.9087%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.04%)</title><rect x="97.6587%" y="1029" width="0.0434%" height="15" fill="rgb(245,172,29)" fg:x="76581" fg:w="34"/><text x="97.9087%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::contract_event::ContractEvent]&gt; (34 samples, 0.04%)</title><rect x="97.6587%" y="1013" width="0.0434%" height="15" fill="rgb(207,98,24)" fg:x="76581" fg:w="34"/><text x="97.9087%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::contract_event::ContractEvent&gt; (34 samples, 0.04%)</title><rect x="97.6587%" y="997" width="0.0434%" height="15" fill="rgb(249,92,26)" fg:x="76581" fg:w="34"/><text x="97.9087%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::contract_event::ContractEventV0&gt; (34 samples, 0.04%)</title><rect x="97.6587%" y="981" width="0.0434%" height="15" fill="rgb(217,176,26)" fg:x="76581" fg:w="34"/><text x="97.9087%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="97.7046%" y="869" width="0.0102%" height="15" fill="rgb(221,8,39)" fg:x="76617" fg:w="8"/><text x="97.9546%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="97.7046%" y="853" width="0.0102%" height="15" fill="rgb(208,90,18)" fg:x="76617" fg:w="8"/><text x="97.9546%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="97.7046%" y="837" width="0.0102%" height="15" fill="rgb(207,202,30)" fg:x="76617" fg:w="8"/><text x="97.9546%" y="847.50"></text></g><g><title>sdallocx (8 samples, 0.01%)</title><rect x="97.7046%" y="821" width="0.0102%" height="15" fill="rgb(231,124,22)" fg:x="76617" fg:w="8"/><text x="97.9546%" y="831.50"></text></g><g><title>isfree (8 samples, 0.01%)</title><rect x="97.7046%" y="805" width="0.0102%" height="15" fill="rgb(206,15,5)" fg:x="76617" fg:w="8"/><text x="97.9546%" y="815.50"></text></g><g><title>isdalloct (8 samples, 0.01%)</title><rect x="97.7046%" y="789" width="0.0102%" height="15" fill="rgb(239,16,52)" fg:x="76617" fg:w="8"/><text x="97.9546%" y="799.50"></text></g><g><title>arena_sdalloc (8 samples, 0.01%)</title><rect x="97.7046%" y="773" width="0.0102%" height="15" fill="rgb(245,213,29)" fg:x="76617" fg:w="8"/><text x="97.9546%" y="783.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.01%)</title><rect x="97.7046%" y="757" width="0.0102%" height="15" fill="rgb(213,203,36)" fg:x="76617" fg:w="8"/><text x="97.9546%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (11 samples, 0.01%)</title><rect x="97.7020%" y="949" width="0.0140%" height="15" fill="rgb(209,55,18)" fg:x="76615" fg:w="11"/><text x="97.9520%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="97.7020%" y="933" width="0.0140%" height="15" fill="rgb(207,133,49)" fg:x="76615" fg:w="11"/><text x="97.9520%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (11 samples, 0.01%)</title><rect x="97.7020%" y="917" width="0.0140%" height="15" fill="rgb(240,33,46)" fg:x="76615" fg:w="11"/><text x="97.9520%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (11 samples, 0.01%)</title><rect x="97.7020%" y="901" width="0.0140%" height="15" fill="rgb(212,35,2)" fg:x="76615" fg:w="11"/><text x="97.9520%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (9 samples, 0.01%)</title><rect x="97.7046%" y="885" width="0.0115%" height="15" fill="rgb(231,119,28)" fg:x="76617" fg:w="9"/><text x="97.9546%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::Transaction&gt; (12 samples, 0.02%)</title><rect x="97.7020%" y="1029" width="0.0153%" height="15" fill="rgb(252,178,7)" fg:x="76615" fg:w="12"/><text x="97.9520%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (12 samples, 0.02%)</title><rect x="97.7020%" y="1013" width="0.0153%" height="15" fill="rgb(251,91,4)" fg:x="76615" fg:w="12"/><text x="97.9520%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (12 samples, 0.02%)</title><rect x="97.7020%" y="997" width="0.0153%" height="15" fill="rgb(233,122,19)" fg:x="76615" fg:w="12"/><text x="97.9520%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (12 samples, 0.02%)</title><rect x="97.7020%" y="981" width="0.0153%" height="15" fill="rgb(231,208,46)" fg:x="76615" fg:w="12"/><text x="97.9520%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (12 samples, 0.02%)</title><rect x="97.7020%" y="965" width="0.0153%" height="15" fill="rgb(243,15,41)" fg:x="76615" fg:w="12"/><text x="97.9520%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (10 samples, 0.01%)</title><rect x="97.7441%" y="869" width="0.0128%" height="15" fill="rgb(210,32,43)" fg:x="76648" fg:w="10"/><text x="97.9941%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="97.7441%" y="853" width="0.0128%" height="15" fill="rgb(222,177,15)" fg:x="76648" fg:w="10"/><text x="97.9941%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="97.7441%" y="837" width="0.0128%" height="15" fill="rgb(244,121,34)" fg:x="76648" fg:w="10"/><text x="97.9941%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="97.7441%" y="821" width="0.0128%" height="15" fill="rgb(234,138,4)" fg:x="76648" fg:w="10"/><text x="97.9941%" y="831.50"></text></g><g><title>sdallocx (8 samples, 0.01%)</title><rect x="97.7467%" y="805" width="0.0102%" height="15" fill="rgb(240,97,48)" fg:x="76650" fg:w="8"/><text x="97.9967%" y="815.50"></text></g><g><title>isfree (8 samples, 0.01%)</title><rect x="97.7467%" y="789" width="0.0102%" height="15" fill="rgb(237,65,54)" fg:x="76650" fg:w="8"/><text x="97.9967%" y="799.50"></text></g><g><title>isdalloct (8 samples, 0.01%)</title><rect x="97.7467%" y="773" width="0.0102%" height="15" fill="rgb(214,25,24)" fg:x="76650" fg:w="8"/><text x="97.9967%" y="783.50"></text></g><g><title>arena_sdalloc (8 samples, 0.01%)</title><rect x="97.7467%" y="757" width="0.0102%" height="15" fill="rgb(213,5,3)" fg:x="76650" fg:w="8"/><text x="97.9967%" y="767.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.01%)</title><rect x="97.7467%" y="741" width="0.0102%" height="15" fill="rgb(219,81,29)" fg:x="76650" fg:w="8"/><text x="97.9967%" y="751.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (8 samples, 0.01%)</title><rect x="97.7467%" y="725" width="0.0102%" height="15" fill="rgb(220,43,48)" fg:x="76650" fg:w="8"/><text x="97.9967%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (48 samples, 0.06%)</title><rect x="97.7173%" y="1029" width="0.0612%" height="15" fill="rgb(239,157,2)" fg:x="76627" fg:w="48"/><text x="97.9673%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (48 samples, 0.06%)</title><rect x="97.7173%" y="1013" width="0.0612%" height="15" fill="rgb(213,104,43)" fg:x="76627" fg:w="48"/><text x="97.9673%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (48 samples, 0.06%)</title><rect x="97.7173%" y="997" width="0.0612%" height="15" fill="rgb(237,84,9)" fg:x="76627" fg:w="48"/><text x="97.9673%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (48 samples, 0.06%)</title><rect x="97.7173%" y="981" width="0.0612%" height="15" fill="rgb(252,6,33)" fg:x="76627" fg:w="48"/><text x="97.9673%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.06%)</title><rect x="97.7173%" y="965" width="0.0612%" height="15" fill="rgb(251,172,22)" fg:x="76627" fg:w="48"/><text x="97.9673%" y="975.50"></text></g><g><title>core::mem::drop (48 samples, 0.06%)</title><rect x="97.7173%" y="949" width="0.0612%" height="15" fill="rgb(244,91,53)" fg:x="76627" fg:w="48"/><text x="97.9673%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (48 samples, 0.06%)</title><rect x="97.7173%" y="933" width="0.0612%" height="15" fill="rgb(219,29,30)" fg:x="76627" fg:w="48"/><text x="97.9673%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.06%)</title><rect x="97.7173%" y="917" width="0.0612%" height="15" fill="rgb(213,3,15)" fg:x="76627" fg:w="48"/><text x="97.9673%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (27 samples, 0.03%)</title><rect x="97.7441%" y="901" width="0.0344%" height="15" fill="rgb(208,25,28)" fg:x="76648" fg:w="27"/><text x="97.9941%" y="911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (27 samples, 0.03%)</title><rect x="97.7441%" y="885" width="0.0344%" height="15" fill="rgb(252,144,25)" fg:x="76648" fg:w="27"/><text x="97.9941%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (17 samples, 0.02%)</title><rect x="97.7569%" y="869" width="0.0217%" height="15" fill="rgb(226,220,25)" fg:x="76658" fg:w="17"/><text x="98.0069%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="97.7569%" y="853" width="0.0217%" height="15" fill="rgb(212,131,28)" fg:x="76658" fg:w="17"/><text x="98.0069%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="97.7569%" y="837" width="0.0217%" height="15" fill="rgb(219,143,52)" fg:x="76658" fg:w="17"/><text x="98.0069%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="97.7569%" y="821" width="0.0217%" height="15" fill="rgb(215,56,7)" fg:x="76658" fg:w="17"/><text x="98.0069%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="97.7569%" y="805" width="0.0217%" height="15" fill="rgb(239,59,51)" fg:x="76658" fg:w="17"/><text x="98.0069%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="97.7569%" y="789" width="0.0217%" height="15" fill="rgb(209,215,4)" fg:x="76658" fg:w="17"/><text x="98.0069%" y="799.50"></text></g><g><title>sdallocx (15 samples, 0.02%)</title><rect x="97.7594%" y="773" width="0.0191%" height="15" fill="rgb(221,118,39)" fg:x="76660" fg:w="15"/><text x="98.0094%" y="783.50"></text></g><g><title>isfree (15 samples, 0.02%)</title><rect x="97.7594%" y="757" width="0.0191%" height="15" fill="rgb(236,6,44)" fg:x="76660" fg:w="15"/><text x="98.0094%" y="767.50"></text></g><g><title>isdalloct (15 samples, 0.02%)</title><rect x="97.7594%" y="741" width="0.0191%" height="15" fill="rgb(216,122,9)" fg:x="76660" fg:w="15"/><text x="98.0094%" y="751.50"></text></g><g><title>arena_sdalloc (15 samples, 0.02%)</title><rect x="97.7594%" y="725" width="0.0191%" height="15" fill="rgb(244,134,42)" fg:x="76660" fg:w="15"/><text x="98.0094%" y="735.50"></text></g><g><title>tcache_dalloc_small (15 samples, 0.02%)</title><rect x="97.7594%" y="709" width="0.0191%" height="15" fill="rgb(209,189,35)" fg:x="76660" fg:w="15"/><text x="98.0094%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (36 samples, 0.05%)</title><rect x="97.7785%" y="885" width="0.0459%" height="15" fill="rgb(250,47,36)" fg:x="76675" fg:w="36"/><text x="98.0285%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.05%)</title><rect x="97.7785%" y="869" width="0.0459%" height="15" fill="rgb(252,112,4)" fg:x="76675" fg:w="36"/><text x="98.0285%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.07%)</title><rect x="97.7785%" y="981" width="0.0714%" height="15" fill="rgb(221,79,51)" fg:x="76675" fg:w="56"/><text x="98.0285%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (56 samples, 0.07%)</title><rect x="97.7785%" y="965" width="0.0714%" height="15" fill="rgb(232,65,53)" fg:x="76675" fg:w="56"/><text x="98.0285%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (56 samples, 0.07%)</title><rect x="97.7785%" y="949" width="0.0714%" height="15" fill="rgb(211,37,7)" fg:x="76675" fg:w="56"/><text x="98.0285%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (56 samples, 0.07%)</title><rect x="97.7785%" y="933" width="0.0714%" height="15" fill="rgb(234,221,18)" fg:x="76675" fg:w="56"/><text x="98.0285%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (56 samples, 0.07%)</title><rect x="97.7785%" y="917" width="0.0714%" height="15" fill="rgb(220,158,26)" fg:x="76675" fg:w="56"/><text x="98.0285%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;(aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;)&gt; (56 samples, 0.07%)</title><rect x="97.7785%" y="901" width="0.0714%" height="15" fill="rgb(220,70,6)" fg:x="76675" fg:w="56"/><text x="98.0285%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt; (20 samples, 0.03%)</title><rect x="97.8245%" y="885" width="0.0255%" height="15" fill="rgb(250,39,48)" fg:x="76711" fg:w="20"/><text x="98.0745%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValue&gt; (20 samples, 0.03%)</title><rect x="97.8245%" y="869" width="0.0255%" height="15" fill="rgb(206,40,27)" fg:x="76711" fg:w="20"/><text x="98.0745%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValueInner&gt; (20 samples, 0.03%)</title><rect x="97.8245%" y="853" width="0.0255%" height="15" fill="rgb(247,80,36)" fg:x="76711" fg:w="20"/><text x="98.0745%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20 samples, 0.03%)</title><rect x="97.8245%" y="837" width="0.0255%" height="15" fill="rgb(222,9,20)" fg:x="76711" fg:w="20"/><text x="98.0745%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.03%)</title><rect x="97.8245%" y="821" width="0.0255%" height="15" fill="rgb(217,26,45)" fg:x="76711" fg:w="20"/><text x="98.0745%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.03%)</title><rect x="97.8245%" y="805" width="0.0255%" height="15" fill="rgb(221,67,14)" fg:x="76711" fg:w="20"/><text x="98.0745%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.03%)</title><rect x="97.8245%" y="789" width="0.0255%" height="15" fill="rgb(248,100,24)" fg:x="76711" fg:w="20"/><text x="98.0745%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.03%)</title><rect x="97.8245%" y="773" width="0.0255%" height="15" fill="rgb(230,187,16)" fg:x="76711" fg:w="20"/><text x="98.0745%" y="783.50"></text></g><g><title>sdallocx (20 samples, 0.03%)</title><rect x="97.8245%" y="757" width="0.0255%" height="15" fill="rgb(205,108,13)" fg:x="76711" fg:w="20"/><text x="98.0745%" y="767.50"></text></g><g><title>isfree (20 samples, 0.03%)</title><rect x="97.8245%" y="741" width="0.0255%" height="15" fill="rgb(235,71,51)" fg:x="76711" fg:w="20"/><text x="98.0745%" y="751.50"></text></g><g><title>isdalloct (20 samples, 0.03%)</title><rect x="97.8245%" y="725" width="0.0255%" height="15" fill="rgb(251,172,48)" fg:x="76711" fg:w="20"/><text x="98.0745%" y="735.50"></text></g><g><title>arena_sdalloc (20 samples, 0.03%)</title><rect x="97.8245%" y="709" width="0.0255%" height="15" fill="rgb(240,96,49)" fg:x="76711" fg:w="20"/><text x="98.0745%" y="719.50"></text></g><g><title>tcache_dalloc_small (20 samples, 0.03%)</title><rect x="97.8245%" y="693" width="0.0255%" height="15" fill="rgb(235,46,36)" fg:x="76711" fg:w="20"/><text x="98.0745%" y="703.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (10 samples, 0.01%)</title><rect x="97.8372%" y="677" width="0.0128%" height="15" fill="rgb(244,3,49)" fg:x="76721" fg:w="10"/><text x="98.0872%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionToCommit&gt; (120 samples, 0.15%)</title><rect x="97.7020%" y="1045" width="0.1530%" height="15" fill="rgb(206,78,54)" fg:x="76615" fg:w="120"/><text x="97.9520%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt;&gt; (60 samples, 0.08%)</title><rect x="97.7785%" y="1029" width="0.0765%" height="15" fill="rgb(208,85,42)" fg:x="76675" fg:w="60"/><text x="98.0285%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;,std::hash::random::RandomState&gt;&gt; (60 samples, 0.08%)</title><rect x="97.7785%" y="1013" width="0.0765%" height="15" fill="rgb(219,196,21)" fg:x="76675" fg:w="60"/><text x="98.0285%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;)&gt;&gt; (60 samples, 0.08%)</title><rect x="97.7785%" y="997" width="0.0765%" height="15" fill="rgb(238,19,9)" fg:x="76675" fg:w="60"/><text x="98.0285%" y="1007.50"></text></g><g><title>api-14 (76,736 samples, 97.86%)</title><rect x="0.0000%" y="3189" width="97.8563%" height="15" fill="rgb(206,86,13)" fg:x="0" fg:w="76736"/><text x="0.2500%" y="3199.50">api-14</text></g><g><title>__GI___clone3 (76,729 samples, 97.85%)</title><rect x="0.0089%" y="3173" width="97.8474%" height="15" fill="rgb(214,123,40)" fg:x="7" fg:w="76729"/><text x="0.2589%" y="3183.50">__GI___clone3</text></g><g><title>start_thread (76,729 samples, 97.85%)</title><rect x="0.0089%" y="3157" width="97.8474%" height="15" fill="rgb(243,53,5)" fg:x="7" fg:w="76729"/><text x="0.2589%" y="3167.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (76,729 samples, 97.85%)</title><rect x="0.0089%" y="3141" width="97.8474%" height="15" fill="rgb(254,186,31)" fg:x="7" fg:w="76729"/><text x="0.2589%" y="3151.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (76,729 samples, 97.85%)</title><rect x="0.0089%" y="3125" width="97.8474%" height="15" fill="rgb(221,216,25)" fg:x="7" fg:w="76729"/><text x="0.2589%" y="3135.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (76,729 samples, 97.85%)</title><rect x="0.0089%" y="3109" width="97.8474%" height="15" fill="rgb(248,107,42)" fg:x="7" fg:w="76729"/><text x="0.2589%" y="3119.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (76,729 samples, 97.85%)</title><rect x="0.0089%" y="3093" width="97.8474%" height="15" fill="rgb(221,85,43)" fg:x="7" fg:w="76729"/><text x="0.2589%" y="3103.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (76,729 samples, 97.85%)</title><rect x="0.0089%" y="3077" width="97.8474%" height="15" fill="rgb(225,34,24)" fg:x="7" fg:w="76729"/><text x="0.2589%" y="3087.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (76,729 samples, 97.85%)</title><rect x="0.0089%" y="3061" width="97.8474%" height="15" fill="rgb(211,119,1)" fg:x="7" fg:w="76729"/><text x="0.2589%" y="3071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (76,729 samples, 97.85%)</title><rect x="0.0089%" y="3045" width="97.8474%" height="15" fill="rgb(254,216,46)" fg:x="7" fg:w="76729"/><text x="0.2589%" y="3055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (76,729 samples, 97.85%)</title><rect x="0.0089%" y="3029" width="97.8474%" height="15" fill="rgb(238,11,38)" fg:x="7" fg:w="76729"/><text x="0.2589%" y="3039.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (76,729 samples, 97.85%)</title><rect x="0.0089%" y="3013" width="97.8474%" height="15" fill="rgb(233,50,15)" fg:x="7" fg:w="76729"/><text x="0.2589%" y="3023.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (76,729 samples, 97.85%)</title><rect x="0.0089%" y="2997" width="97.8474%" height="15" fill="rgb(217,181,29)" fg:x="7" fg:w="76729"/><text x="0.2589%" y="3007.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (76,729 samples, 97.85%)</title><rect x="0.0089%" y="2981" width="97.8474%" height="15" fill="rgb(214,56,3)" fg:x="7" fg:w="76729"/><text x="0.2589%" y="2991.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2965" width="96.1526%" height="15" fill="rgb(230,69,45)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2975.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2949" width="96.1526%" height="15" fill="rgb(224,201,50)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2959.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2933" width="96.1526%" height="15" fill="rgb(217,228,18)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2943.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2917" width="96.1526%" height="15" fill="rgb(239,33,44)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2927.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2901" width="96.1526%" height="15" fill="rgb(248,210,23)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2911.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2885" width="96.1526%" height="15" fill="rgb(253,135,8)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2895.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2869" width="96.1526%" height="15" fill="rgb(217,98,21)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2879.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2853" width="96.1526%" height="15" fill="rgb(253,130,21)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2863.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2837" width="96.1526%" height="15" fill="rgb(207,81,54)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2821" width="96.1526%" height="15" fill="rgb(232,48,33)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2805" width="96.1526%" height="15" fill="rgb(211,9,35)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2815.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2789" width="96.1526%" height="15" fill="rgb(205,152,21)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2799.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2773" width="96.1526%" height="15" fill="rgb(249,21,27)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2783.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2757" width="96.1526%" height="15" fill="rgb(252,29,24)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2767.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2741" width="96.1526%" height="15" fill="rgb(230,130,50)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2751.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2725" width="96.1526%" height="15" fill="rgb(239,144,14)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2735.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2709" width="96.1526%" height="15" fill="rgb(227,111,50)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2719.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2693" width="96.1526%" height="15" fill="rgb(254,84,20)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2703.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2677" width="96.1526%" height="15" fill="rgb(232,90,48)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2687.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2661" width="96.1526%" height="15" fill="rgb(253,63,47)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2671.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2645" width="96.1526%" height="15" fill="rgb(251,146,35)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2655.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2629" width="96.1526%" height="15" fill="rgb(229,192,35)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2639.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2613" width="96.1526%" height="15" fill="rgb(225,68,9)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2623.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::coop::budget (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2597" width="96.1526%" height="15" fill="rgb(214,97,34)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2607.50">tokio::coop::budget</text></g><g><title>tokio::coop::with_budget (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2581" width="96.1526%" height="15" fill="rgb(253,31,26)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2591.50">tokio::coop::with_budget</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2565" width="96.1526%" height="15" fill="rgb(225,151,47)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2575.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2549" width="96.1526%" height="15" fill="rgb(206,185,9)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2559.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::coop::with_budget::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2533" width="96.1526%" height="15" fill="rgb(249,65,17)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2543.50">tokio::coop::with_budget::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2517" width="96.1526%" height="15" fill="rgb(220,110,10)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2527.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2501" width="96.1526%" height="15" fill="rgb(222,198,49)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2511.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2485" width="96.1526%" height="15" fill="rgb(239,81,13)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2495.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2469" width="96.1526%" height="15" fill="rgb(216,128,11)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2479.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2453" width="96.1526%" height="15" fill="rgb(247,156,8)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2463.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2437" width="96.1526%" height="15" fill="rgb(219,173,1)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2447.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2421" width="96.1526%" height="15" fill="rgb(227,42,24)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2431.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2405" width="96.1526%" height="15" fill="rgb(253,219,50)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2415.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2389" width="96.1526%" height="15" fill="rgb(215,191,54)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2399.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2373" width="96.1526%" height="15" fill="rgb(238,83,12)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2383.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2357" width="96.1526%" height="15" fill="rgb(205,124,9)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2367.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2341" width="96.1526%" height="15" fill="rgb(253,174,7)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2351.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2325" width="96.1526%" height="15" fill="rgb(206,134,49)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2335.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2309" width="96.1526%" height="15" fill="rgb(221,89,20)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2319.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::{{closure}}::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2293" width="96.1526%" height="15" fill="rgb(240,205,13)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2303.50">poem::server::Server&lt;L,A&gt;::run_with_graceful_shutdown::{{closure}}::{{closure}}</text></g><g><title>poem::server::serve_connection::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2277" width="96.1526%" height="15" fill="rgb(237,174,32)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2287.50">poem::server::serve_connection::{{closure}}</text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2261" width="96.1526%" height="15" fill="rgb(226,12,15)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2271.50">&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;hyper::server::conn::ProtoServer&lt;T,B,S,E&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2245" width="96.1526%" height="15" fill="rgb(245,160,52)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2255.50">&lt;hyper::server::conn::ProtoServer&lt;T,B,S,E&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2229" width="96.1526%" height="15" fill="rgb(253,80,21)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2239.50">&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2213" width="96.1526%" height="15" fill="rgb(231,225,22)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2223.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2197" width="96.1526%" height="15" fill="rgb(253,185,12)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2207.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2181" width="96.1526%" height="15" fill="rgb(234,197,21)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2191.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2165" width="96.1526%" height="15" fill="rgb(210,47,30)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2175.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write</text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2149" width="96.1526%" height="15" fill="rgb(246,139,27)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2159.50">&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg</text></g><g><title>poem::server::serve_connection::{{closure}}::{{closure}}::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2133" width="96.1526%" height="15" fill="rgb(226,130,16)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2143.50">poem::server::serve_connection::{{closure}}::{{closure}}::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2117" width="96.1526%" height="15" fill="rgb(237,208,20)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2127.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2101" width="96.1526%" height="15" fill="rgb(245,186,28)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2111.50">poem::endpoint::endpoint::Endpoint::get_response::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2085" width="96.1526%" height="15" fill="rgb(238,105,39)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2095.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2069" width="96.1526%" height="15" fill="rgb(253,228,11)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2079.50">&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2053" width="96.1526%" height="15" fill="rgb(224,136,38)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2063.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2037" width="96.1526%" height="15" fill="rgb(211,3,25)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2047.50">&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2021" width="96.1526%" height="15" fill="rgb(238,66,34)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2031.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::around::Around&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="2005" width="96.1526%" height="15" fill="rgb(223,188,11)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="2015.50">&lt;poem::endpoint::around::Around&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>aptos_api::log::middleware_log::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1989" width="96.1526%" height="15" fill="rgb(221,10,35)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1999.50">aptos_api::log::middleware_log::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1973" width="96.1526%" height="15" fill="rgb(223,18,44)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1983.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>poem::endpoint::endpoint::Endpoint::get_response::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1957" width="96.1526%" height="15" fill="rgb(220,97,41)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1967.50">poem::endpoint::endpoint::Endpoint::get_response::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1941" width="96.1526%" height="15" fill="rgb(206,95,45)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1951.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1925" width="96.1526%" height="15" fill="rgb(209,96,13)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1935.50">&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1909" width="96.1526%" height="15" fill="rgb(237,39,34)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1919.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::catch_all_error::CatchAllError&lt;E,F,R&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1893" width="96.1526%" height="15" fill="rgb(213,49,47)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1903.50">&lt;poem::endpoint::catch_all_error::CatchAllError&lt;E,F,R&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1877" width="96.1526%" height="15" fill="rgb(205,107,27)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1887.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;aptos_api::check_size::PostSizeLimitEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1861" width="96.1526%" height="15" fill="rgb(212,142,9)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1871.50">&lt;aptos_api::check_size::PostSizeLimitEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1845" width="96.1526%" height="15" fill="rgb(226,182,0)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1855.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::middleware::cors::CorsEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1829" width="96.1526%" height="15" fill="rgb(231,3,53)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1839.50">&lt;poem::middleware::cors::CorsEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1813" width="96.1526%" height="15" fill="rgb(246,111,28)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1823.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1797" width="96.1526%" height="15" fill="rgb(254,183,7)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1807.50">&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1781" width="96.1526%" height="15" fill="rgb(247,177,28)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1791.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1765" width="96.1526%" height="15" fill="rgb(244,43,1)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1775.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1749" width="96.1526%" height="15" fill="rgb(207,2,35)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1759.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1733" width="96.1526%" height="15" fill="rgb(213,83,22)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1743.50">&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1717" width="96.1526%" height="15" fill="rgb(246,212,13)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1727.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1701" width="96.1526%" height="15" fill="rgb(213,127,46)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1711.50">&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1685" width="96.1526%" height="15" fill="rgb(219,215,39)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1695.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1669" width="96.1526%" height="15" fill="rgb(227,99,17)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1679.50">&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1653" width="96.1526%" height="15" fill="rgb(208,155,18)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1663.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1637" width="96.1526%" height="15" fill="rgb(223,204,38)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1647.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1621" width="96.1526%" height="15" fill="rgb(212,114,21)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1631.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1605" width="96.1526%" height="15" fill="rgb(250,74,13)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1615.50">&lt;poem::route::router::Route::internal_nest::Nest&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1589" width="96.1526%" height="15" fill="rgb(234,7,1)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1599.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1573" width="96.1526%" height="15" fill="rgb(207,138,31)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1583.50">&lt;alloc::sync::Arc&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1557" width="96.1526%" height="15" fill="rgb(215,186,42)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1567.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1541" width="96.1526%" height="15" fill="rgb(229,205,49)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1551.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1525" width="96.1526%" height="15" fill="rgb(216,156,32)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1535.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1509" width="96.1526%" height="15" fill="rgb(238,7,21)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1519.50">&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1493" width="96.1526%" height="15" fill="rgb(249,190,22)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1503.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1477" width="96.1526%" height="15" fill="rgb(253,51,31)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1487.50">&lt;poem::endpoint::before::Before&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1461" width="96.1526%" height="15" fill="rgb(237,90,54)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1471.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1445" width="96.1526%" height="15" fill="rgb(250,214,33)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1455.50">&lt;poem::middleware::cookie_jar_manager::CookieJarManagerEndpoint&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1429" width="96.1526%" height="15" fill="rgb(237,10,49)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1439.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1413" width="96.1526%" height="15" fill="rgb(241,56,36)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1423.50">&lt;poem::route::router::Route as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1397" width="96.1526%" height="15" fill="rgb(227,164,12)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1407.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1381" width="96.1526%" height="15" fill="rgb(249,149,35)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1391.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1365" width="96.1526%" height="15" fill="rgb(238,227,50)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1375.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1349" width="96.1526%" height="15" fill="rgb(235,102,45)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1359.50">&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1333" width="96.1526%" height="15" fill="rgb(211,10,38)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1343.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::route::router_method::RouteMethod as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1317" width="96.1526%" height="15" fill="rgb(219,77,48)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1327.50">&lt;poem::route::router_method::RouteMethod as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1301" width="96.1526%" height="15" fill="rgb(246,6,15)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1311.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1285" width="96.1526%" height="15" fill="rgb(207,220,2)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1295.50">&lt;alloc::boxed::Box&lt;T&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1269" width="96.1526%" height="15" fill="rgb(242,48,14)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1279.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1253" width="96.1526%" height="15" fill="rgb(218,19,27)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1263.50">&lt;poem::endpoint::map_to_response::MapToResponse&lt;E&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1237" width="96.1526%" height="15" fill="rgb(228,0,35)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1247.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::after::After&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1221" width="96.1526%" height="15" fill="rgb(244,142,54)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1231.50">&lt;poem::endpoint::after::After&lt;E,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1205" width="96.1526%" height="15" fill="rgb(243,217,40)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1215.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1189" width="96.1526%" height="15" fill="rgb(207,114,16)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1199.50">&lt;poem::endpoint::endpoint::AsyncFnEndpoint&lt;T,F&gt; as poem::endpoint::endpoint::Endpoint&gt;::call::{{closure}}</text></g><g><title>&lt;aptos_api::transactions::TransactionsApi as poem_openapi::base::OpenApi&gt;::add_routes::{{closure}}::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1173" width="96.1526%" height="15" fill="rgb(224,33,25)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1183.50">&lt;aptos_api::transactions::TransactionsApi as poem_openapi::base::OpenApi&gt;::add_routes::{{closure}}::{{closure}}</text></g><g><title>aptos_api::transactions::TransactionsApi::stress_test_move::{{closure}} (75,400 samples, 96.15%)</title><rect x="1.7037%" y="1157" width="96.1526%" height="15" fill="rgb(230,93,54)" fg:x="1336" fg:w="75400"/><text x="1.9537%" y="1167.50">aptos_api::transactions::TransactionsApi::stress_test_move::{{closure}}</text></g><g><title>aptos_executor_types::BlockExecutorTrait::commit_blocks (2,550 samples, 3.25%)</title><rect x="94.6045%" y="1141" width="3.2518%" height="15" fill="rgb(224,56,24)" fg:x="74186" fg:w="2550"/><text x="94.8545%" y="1151.50">apt..</text></g><g><title>&lt;aptos_api::executor::src::block_executor::BlockExecutor&lt;V&gt; as aptos_executor_types::BlockExecutorTrait&gt;::commit_blocks_ext (2,550 samples, 3.25%)</title><rect x="94.6045%" y="1125" width="3.2518%" height="15" fill="rgb(235,189,50)" fg:x="74186" fg:w="2550"/><text x="94.8545%" y="1135.50">&lt;ap..</text></g><g><title>aptos_api::executor::src::block_executor::BlockExecutorInner&lt;V&gt;::commit_blocks_ext (2,550 samples, 3.25%)</title><rect x="94.6045%" y="1109" width="3.2518%" height="15" fill="rgb(242,173,8)" fg:x="74186" fg:w="2550"/><text x="94.8545%" y="1119.50">apt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::transaction::TransactionToCommit&gt;&gt; (156 samples, 0.20%)</title><rect x="97.6574%" y="1093" width="0.1989%" height="15" fill="rgb(209,206,10)" fg:x="76580" fg:w="156"/><text x="97.9074%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (156 samples, 0.20%)</title><rect x="97.6574%" y="1077" width="0.1989%" height="15" fill="rgb(213,182,44)" fg:x="76580" fg:w="156"/><text x="97.9074%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::transaction::TransactionToCommit]&gt; (156 samples, 0.20%)</title><rect x="97.6574%" y="1061" width="0.1989%" height="15" fill="rgb(243,51,15)" fg:x="76580" fg:w="156"/><text x="97.9074%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (13 samples, 0.02%)</title><rect x="97.8563%" y="2885" width="0.0166%" height="15" fill="rgb(241,13,14)" fg:x="76736" fg:w="13"/><text x="98.1063%" y="2895.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (13 samples, 0.02%)</title><rect x="97.8563%" y="2869" width="0.0166%" height="15" fill="rgb(239,147,24)" fg:x="76736" fg:w="13"/><text x="98.1063%" y="2879.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (13 samples, 0.02%)</title><rect x="97.8563%" y="2853" width="0.0166%" height="15" fill="rgb(223,129,16)" fg:x="76736" fg:w="13"/><text x="98.1063%" y="2863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (13 samples, 0.02%)</title><rect x="97.8563%" y="2837" width="0.0166%" height="15" fill="rgb(209,169,13)" fg:x="76736" fg:w="13"/><text x="98.1063%" y="2847.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.02%)</title><rect x="97.8563%" y="2821" width="0.0166%" height="15" fill="rgb(235,159,41)" fg:x="76736" fg:w="13"/><text x="98.1063%" y="2831.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.02%)</title><rect x="97.8563%" y="2805" width="0.0166%" height="15" fill="rgb(223,219,48)" fg:x="76736" fg:w="13"/><text x="98.1063%" y="2815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.02%)</title><rect x="97.8563%" y="2789" width="0.0166%" height="15" fill="rgb(236,80,13)" fg:x="76736" fg:w="13"/><text x="98.1063%" y="2799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.01%)</title><rect x="97.8614%" y="2773" width="0.0115%" height="15" fill="rgb(213,5,6)" fg:x="76740" fg:w="9"/><text x="98.1114%" y="2783.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (9 samples, 0.01%)</title><rect x="97.8614%" y="2757" width="0.0115%" height="15" fill="rgb(205,59,21)" fg:x="76740" fg:w="9"/><text x="98.1114%" y="2767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (9 samples, 0.01%)</title><rect x="97.8614%" y="2741" width="0.0115%" height="15" fill="rgb(247,137,35)" fg:x="76740" fg:w="9"/><text x="98.1114%" y="2751.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (9 samples, 0.01%)</title><rect x="97.8614%" y="2725" width="0.0115%" height="15" fill="rgb(242,208,28)" fg:x="76740" fg:w="9"/><text x="98.1114%" y="2735.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (8 samples, 0.01%)</title><rect x="97.8627%" y="2709" width="0.0102%" height="15" fill="rgb(245,62,25)" fg:x="76741" fg:w="8"/><text x="98.1127%" y="2719.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (10 samples, 0.01%)</title><rect x="97.8729%" y="2693" width="0.0128%" height="15" fill="rgb(233,99,54)" fg:x="76749" fg:w="10"/><text x="98.1229%" y="2703.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (10 samples, 0.01%)</title><rect x="97.8729%" y="2677" width="0.0128%" height="15" fill="rgb(213,10,37)" fg:x="76749" fg:w="10"/><text x="98.1229%" y="2687.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.01%)</title><rect x="97.8729%" y="2661" width="0.0128%" height="15" fill="rgb(235,143,30)" fg:x="76749" fg:w="10"/><text x="98.1229%" y="2671.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (10 samples, 0.01%)</title><rect x="97.8729%" y="2645" width="0.0128%" height="15" fill="rgb(250,146,33)" fg:x="76749" fg:w="10"/><text x="98.1229%" y="2655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="97.8729%" y="2629" width="0.0128%" height="15" fill="rgb(226,198,42)" fg:x="76749" fg:w="10"/><text x="98.1229%" y="2639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.01%)</title><rect x="97.8729%" y="2613" width="0.0128%" height="15" fill="rgb(222,55,6)" fg:x="76749" fg:w="10"/><text x="98.1229%" y="2623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 0.01%)</title><rect x="97.8729%" y="2597" width="0.0128%" height="15" fill="rgb(213,224,31)" fg:x="76749" fg:w="10"/><text x="98.1229%" y="2607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (10 samples, 0.01%)</title><rect x="97.8729%" y="2581" width="0.0128%" height="15" fill="rgb(226,103,35)" fg:x="76749" fg:w="10"/><text x="98.1229%" y="2591.50"></text></g><g><title>aptos_api::executor::src::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (10 samples, 0.01%)</title><rect x="97.8729%" y="2565" width="0.0128%" height="15" fill="rgb(205,66,45)" fg:x="76749" fg:w="10"/><text x="98.1229%" y="2575.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.01%)</title><rect x="97.8920%" y="2421" width="0.0115%" height="15" fill="rgb(226,51,42)" fg:x="76764" fg:w="9"/><text x="98.1420%" y="2431.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.01%)</title><rect x="97.8920%" y="2405" width="0.0115%" height="15" fill="rgb(206,69,1)" fg:x="76764" fg:w="9"/><text x="98.1420%" y="2415.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="97.8920%" y="2389" width="0.0115%" height="15" fill="rgb(213,228,47)" fg:x="76764" fg:w="9"/><text x="98.1420%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="97.8920%" y="2373" width="0.0115%" height="15" fill="rgb(224,204,18)" fg:x="76764" fg:w="9"/><text x="98.1420%" y="2383.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="97.8933%" y="2357" width="0.0102%" height="15" fill="rgb(253,187,47)" fg:x="76765" fg:w="8"/><text x="98.1433%" y="2367.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="97.8933%" y="2341" width="0.0102%" height="15" fill="rgb(232,61,2)" fg:x="76765" fg:w="8"/><text x="98.1433%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="97.8933%" y="2325" width="0.0102%" height="15" fill="rgb(213,132,35)" fg:x="76765" fg:w="8"/><text x="98.1433%" y="2335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (17 samples, 0.02%)</title><rect x="97.8895%" y="2533" width="0.0217%" height="15" fill="rgb(247,33,21)" fg:x="76762" fg:w="17"/><text x="98.1395%" y="2543.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (17 samples, 0.02%)</title><rect x="97.8895%" y="2517" width="0.0217%" height="15" fill="rgb(233,71,46)" fg:x="76762" fg:w="17"/><text x="98.1395%" y="2527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="97.8895%" y="2501" width="0.0217%" height="15" fill="rgb(222,173,43)" fg:x="76762" fg:w="17"/><text x="98.1395%" y="2511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="97.8895%" y="2485" width="0.0217%" height="15" fill="rgb(249,218,47)" fg:x="76762" fg:w="17"/><text x="98.1395%" y="2495.50"></text></g><g><title>rayon_core::join::join_context (15 samples, 0.02%)</title><rect x="97.8920%" y="2469" width="0.0191%" height="15" fill="rgb(254,185,48)" fg:x="76764" fg:w="15"/><text x="98.1420%" y="2479.50"></text></g><g><title>rayon_core::registry::in_worker (15 samples, 0.02%)</title><rect x="97.8920%" y="2453" width="0.0191%" height="15" fill="rgb(252,165,50)" fg:x="76764" fg:w="15"/><text x="98.1420%" y="2463.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.02%)</title><rect x="97.8920%" y="2437" width="0.0191%" height="15" fill="rgb(206,219,6)" fg:x="76764" fg:w="15"/><text x="98.1420%" y="2447.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (13 samples, 0.02%)</title><rect x="97.9112%" y="2533" width="0.0166%" height="15" fill="rgb(212,212,45)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (13 samples, 0.02%)</title><rect x="97.9112%" y="2517" width="0.0166%" height="15" fill="rgb(221,31,9)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (13 samples, 0.02%)</title><rect x="97.9112%" y="2501" width="0.0166%" height="15" fill="rgb(234,198,39)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2511.50"></text></g><g><title>rayon_core::job::JobRef::execute (13 samples, 0.02%)</title><rect x="97.9112%" y="2485" width="0.0166%" height="15" fill="rgb(252,145,46)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2495.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (13 samples, 0.02%)</title><rect x="97.9112%" y="2469" width="0.0166%" height="15" fill="rgb(237,149,0)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2479.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.02%)</title><rect x="97.9112%" y="2453" width="0.0166%" height="15" fill="rgb(229,65,5)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2463.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="97.9112%" y="2437" width="0.0166%" height="15" fill="rgb(235,60,36)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2447.50"></text></g><g><title>std::panicking::try (13 samples, 0.02%)</title><rect x="97.9112%" y="2421" width="0.0166%" height="15" fill="rgb(222,47,18)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2431.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="97.9112%" y="2405" width="0.0166%" height="15" fill="rgb(235,114,22)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2415.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.02%)</title><rect x="97.9112%" y="2389" width="0.0166%" height="15" fill="rgb(209,167,11)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2399.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (13 samples, 0.02%)</title><rect x="97.9112%" y="2373" width="0.0166%" height="15" fill="rgb(251,73,18)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2383.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (13 samples, 0.02%)</title><rect x="97.9112%" y="2357" width="0.0166%" height="15" fill="rgb(217,60,17)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.02%)</title><rect x="97.9112%" y="2341" width="0.0166%" height="15" fill="rgb(224,36,37)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="97.9112%" y="2325" width="0.0166%" height="15" fill="rgb(211,21,32)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2335.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="97.9112%" y="2309" width="0.0166%" height="15" fill="rgb(231,55,48)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2319.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="97.9112%" y="2293" width="0.0166%" height="15" fill="rgb(227,42,18)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2303.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="97.9112%" y="2277" width="0.0166%" height="15" fill="rgb(217,2,27)" fg:x="76779" fg:w="13"/><text x="98.1612%" y="2287.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="97.9163%" y="2261" width="0.0115%" height="15" fill="rgb(251,138,23)" fg:x="76783" fg:w="9"/><text x="98.1663%" y="2271.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="97.9163%" y="2245" width="0.0115%" height="15" fill="rgb(226,184,11)" fg:x="76783" fg:w="9"/><text x="98.1663%" y="2255.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="97.9163%" y="2229" width="0.0115%" height="15" fill="rgb(242,142,12)" fg:x="76783" fg:w="9"/><text x="98.1663%" y="2239.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="97.9163%" y="2213" width="0.0115%" height="15" fill="rgb(234,187,18)" fg:x="76783" fg:w="9"/><text x="98.1663%" y="2223.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="97.9163%" y="2197" width="0.0115%" height="15" fill="rgb(237,44,42)" fg:x="76783" fg:w="9"/><text x="98.1663%" y="2207.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.01%)</title><rect x="97.9163%" y="2181" width="0.0115%" height="15" fill="rgb(211,90,23)" fg:x="76783" fg:w="9"/><text x="98.1663%" y="2191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="97.9163%" y="2165" width="0.0115%" height="15" fill="rgb(207,81,18)" fg:x="76783" fg:w="9"/><text x="98.1663%" y="2175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="97.9163%" y="2149" width="0.0115%" height="15" fill="rgb(222,107,28)" fg:x="76783" fg:w="9"/><text x="98.1663%" y="2159.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="97.9175%" y="2133" width="0.0102%" height="15" fill="rgb(237,83,52)" fg:x="76784" fg:w="8"/><text x="98.1675%" y="2143.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="97.9175%" y="2117" width="0.0102%" height="15" fill="rgb(208,67,11)" fg:x="76784" fg:w="8"/><text x="98.1675%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="97.9175%" y="2101" width="0.0102%" height="15" fill="rgb(249,157,49)" fg:x="76784" fg:w="8"/><text x="98.1675%" y="2111.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.01%)</title><rect x="97.9277%" y="2357" width="0.0128%" height="15" fill="rgb(243,200,1)" fg:x="76792" fg:w="10"/><text x="98.1777%" y="2367.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.01%)</title><rect x="97.9277%" y="2341" width="0.0128%" height="15" fill="rgb(225,162,37)" fg:x="76792" fg:w="10"/><text x="98.1777%" y="2351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.01%)</title><rect x="97.9277%" y="2325" width="0.0128%" height="15" fill="rgb(242,92,13)" fg:x="76792" fg:w="10"/><text x="98.1777%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="97.9277%" y="2309" width="0.0128%" height="15" fill="rgb(220,43,36)" fg:x="76792" fg:w="10"/><text x="98.1777%" y="2319.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.01%)</title><rect x="97.9277%" y="2293" width="0.0128%" height="15" fill="rgb(213,165,48)" fg:x="76792" fg:w="10"/><text x="98.1777%" y="2303.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.01%)</title><rect x="97.9277%" y="2277" width="0.0128%" height="15" fill="rgb(227,200,9)" fg:x="76792" fg:w="10"/><text x="98.1777%" y="2287.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.01%)</title><rect x="97.9277%" y="2261" width="0.0128%" height="15" fill="rgb(221,222,28)" fg:x="76792" fg:w="10"/><text x="98.1777%" y="2271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (45 samples, 0.06%)</title><rect x="97.8869%" y="2645" width="0.0574%" height="15" fill="rgb(223,142,26)" fg:x="76760" fg:w="45"/><text x="98.1369%" y="2655.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (45 samples, 0.06%)</title><rect x="97.8869%" y="2629" width="0.0574%" height="15" fill="rgb(243,46,9)" fg:x="76760" fg:w="45"/><text x="98.1369%" y="2639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (45 samples, 0.06%)</title><rect x="97.8869%" y="2613" width="0.0574%" height="15" fill="rgb(250,56,11)" fg:x="76760" fg:w="45"/><text x="98.1369%" y="2623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (45 samples, 0.06%)</title><rect x="97.8869%" y="2597" width="0.0574%" height="15" fill="rgb(229,113,5)" fg:x="76760" fg:w="45"/><text x="98.1369%" y="2607.50"></text></g><g><title>rayon_core::join::join_context (43 samples, 0.05%)</title><rect x="97.8895%" y="2581" width="0.0548%" height="15" fill="rgb(244,108,28)" fg:x="76762" fg:w="43"/><text x="98.1395%" y="2591.50"></text></g><g><title>rayon_core::registry::in_worker (43 samples, 0.05%)</title><rect x="97.8895%" y="2565" width="0.0548%" height="15" fill="rgb(242,119,50)" fg:x="76762" fg:w="43"/><text x="98.1395%" y="2575.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (43 samples, 0.05%)</title><rect x="97.8895%" y="2549" width="0.0548%" height="15" fill="rgb(224,164,23)" fg:x="76762" fg:w="43"/><text x="98.1395%" y="2559.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.02%)</title><rect x="97.9277%" y="2533" width="0.0166%" height="15" fill="rgb(214,227,44)" fg:x="76792" fg:w="13"/><text x="98.1777%" y="2543.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="97.9277%" y="2517" width="0.0166%" height="15" fill="rgb(238,202,4)" fg:x="76792" fg:w="13"/><text x="98.1777%" y="2527.50"></text></g><g><title>std::panicking::try (13 samples, 0.02%)</title><rect x="97.9277%" y="2501" width="0.0166%" height="15" fill="rgb(213,190,30)" fg:x="76792" fg:w="13"/><text x="98.1777%" y="2511.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="97.9277%" y="2485" width="0.0166%" height="15" fill="rgb(239,15,2)" fg:x="76792" fg:w="13"/><text x="98.1777%" y="2495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.02%)</title><rect x="97.9277%" y="2469" width="0.0166%" height="15" fill="rgb(249,229,4)" fg:x="76792" fg:w="13"/><text x="98.1777%" y="2479.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (13 samples, 0.02%)</title><rect x="97.9277%" y="2453" width="0.0166%" height="15" fill="rgb(239,75,44)" fg:x="76792" fg:w="13"/><text x="98.1777%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.02%)</title><rect x="97.9277%" y="2437" width="0.0166%" height="15" fill="rgb(251,206,23)" fg:x="76792" fg:w="13"/><text x="98.1777%" y="2447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="97.9277%" y="2421" width="0.0166%" height="15" fill="rgb(215,208,0)" fg:x="76792" fg:w="13"/><text x="98.1777%" y="2431.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="97.9277%" y="2405" width="0.0166%" height="15" fill="rgb(230,75,50)" fg:x="76792" fg:w="13"/><text x="98.1777%" y="2415.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="97.9277%" y="2389" width="0.0166%" height="15" fill="rgb(246,180,39)" fg:x="76792" fg:w="13"/><text x="98.1777%" y="2399.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="97.9277%" y="2373" width="0.0166%" height="15" fill="rgb(249,175,24)" fg:x="76792" fg:w="13"/><text x="98.1777%" y="2383.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (16 samples, 0.02%)</title><rect x="97.9545%" y="2373" width="0.0204%" height="15" fill="rgb(247,176,22)" fg:x="76813" fg:w="16"/><text x="98.2045%" y="2383.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (16 samples, 0.02%)</title><rect x="97.9545%" y="2357" width="0.0204%" height="15" fill="rgb(241,100,24)" fg:x="76813" fg:w="16"/><text x="98.2045%" y="2367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.02%)</title><rect x="97.9545%" y="2341" width="0.0204%" height="15" fill="rgb(233,4,35)" fg:x="76813" fg:w="16"/><text x="98.2045%" y="2351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="97.9545%" y="2325" width="0.0204%" height="15" fill="rgb(211,164,46)" fg:x="76813" fg:w="16"/><text x="98.2045%" y="2335.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="97.9584%" y="2309" width="0.0166%" height="15" fill="rgb(242,99,53)" fg:x="76816" fg:w="13"/><text x="98.2084%" y="2319.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="97.9584%" y="2293" width="0.0166%" height="15" fill="rgb(243,45,33)" fg:x="76816" fg:w="13"/><text x="98.2084%" y="2303.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="97.9584%" y="2277" width="0.0166%" height="15" fill="rgb(217,55,21)" fg:x="76816" fg:w="13"/><text x="98.2084%" y="2287.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (21 samples, 0.03%)</title><rect x="97.9749%" y="2341" width="0.0268%" height="15" fill="rgb(245,145,46)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2351.50"></text></g><g><title>rayon_core::job::JobRef::execute (21 samples, 0.03%)</title><rect x="97.9749%" y="2325" width="0.0268%" height="15" fill="rgb(215,112,45)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2335.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (21 samples, 0.03%)</title><rect x="97.9749%" y="2309" width="0.0268%" height="15" fill="rgb(228,104,16)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2319.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (21 samples, 0.03%)</title><rect x="97.9749%" y="2293" width="0.0268%" height="15" fill="rgb(239,186,38)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2303.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 0.03%)</title><rect x="97.9749%" y="2277" width="0.0268%" height="15" fill="rgb(228,38,35)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2287.50"></text></g><g><title>std::panicking::try (21 samples, 0.03%)</title><rect x="97.9749%" y="2261" width="0.0268%" height="15" fill="rgb(251,42,40)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2271.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 0.03%)</title><rect x="97.9749%" y="2245" width="0.0268%" height="15" fill="rgb(210,51,19)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2255.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21 samples, 0.03%)</title><rect x="97.9749%" y="2229" width="0.0268%" height="15" fill="rgb(236,94,42)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2239.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (21 samples, 0.03%)</title><rect x="97.9749%" y="2213" width="0.0268%" height="15" fill="rgb(239,167,16)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2223.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (21 samples, 0.03%)</title><rect x="97.9749%" y="2197" width="0.0268%" height="15" fill="rgb(252,175,31)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (21 samples, 0.03%)</title><rect x="97.9749%" y="2181" width="0.0268%" height="15" fill="rgb(206,166,30)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.03%)</title><rect x="97.9749%" y="2165" width="0.0268%" height="15" fill="rgb(206,209,37)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2175.50"></text></g><g><title>rayon_core::join::join_context (21 samples, 0.03%)</title><rect x="97.9749%" y="2149" width="0.0268%" height="15" fill="rgb(226,91,4)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2159.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.03%)</title><rect x="97.9749%" y="2133" width="0.0268%" height="15" fill="rgb(222,167,0)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2143.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21 samples, 0.03%)</title><rect x="97.9749%" y="2117" width="0.0268%" height="15" fill="rgb(211,70,14)" fg:x="76829" fg:w="21"/><text x="98.2249%" y="2127.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.01%)</title><rect x="97.9890%" y="2101" width="0.0128%" height="15" fill="rgb(214,84,42)" fg:x="76840" fg:w="10"/><text x="98.2390%" y="2111.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="97.9890%" y="2085" width="0.0128%" height="15" fill="rgb(235,157,37)" fg:x="76840" fg:w="10"/><text x="98.2390%" y="2095.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="97.9890%" y="2069" width="0.0128%" height="15" fill="rgb(225,13,6)" fg:x="76840" fg:w="10"/><text x="98.2390%" y="2079.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="97.9890%" y="2053" width="0.0128%" height="15" fill="rgb(205,202,1)" fg:x="76840" fg:w="10"/><text x="98.2390%" y="2063.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="97.9890%" y="2037" width="0.0128%" height="15" fill="rgb(232,195,26)" fg:x="76840" fg:w="10"/><text x="98.2390%" y="2047.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.01%)</title><rect x="97.9890%" y="2021" width="0.0128%" height="15" fill="rgb(208,102,26)" fg:x="76840" fg:w="10"/><text x="98.2390%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.01%)</title><rect x="97.9890%" y="2005" width="0.0128%" height="15" fill="rgb(215,41,39)" fg:x="76840" fg:w="10"/><text x="98.2390%" y="2015.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="97.9890%" y="1989" width="0.0128%" height="15" fill="rgb(247,139,11)" fg:x="76840" fg:w="10"/><text x="98.2390%" y="1999.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.01%)</title><rect x="97.9890%" y="1973" width="0.0128%" height="15" fill="rgb(243,99,6)" fg:x="76840" fg:w="10"/><text x="98.2390%" y="1983.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.01%)</title><rect x="97.9890%" y="1957" width="0.0128%" height="15" fill="rgb(230,168,48)" fg:x="76840" fg:w="10"/><text x="98.2390%" y="1967.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.01%)</title><rect x="97.9890%" y="1941" width="0.0128%" height="15" fill="rgb(238,227,13)" fg:x="76840" fg:w="10"/><text x="98.2390%" y="1951.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (22 samples, 0.03%)</title><rect x="97.9749%" y="2373" width="0.0281%" height="15" fill="rgb(209,109,13)" fg:x="76829" fg:w="22"/><text x="98.2249%" y="2383.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (22 samples, 0.03%)</title><rect x="97.9749%" y="2357" width="0.0281%" height="15" fill="rgb(228,195,1)" fg:x="76829" fg:w="22"/><text x="98.2249%" y="2367.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.01%)</title><rect x="98.0081%" y="2197" width="0.0128%" height="15" fill="rgb(230,218,0)" fg:x="76855" fg:w="10"/><text x="98.2581%" y="2207.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.01%)</title><rect x="98.0081%" y="2181" width="0.0128%" height="15" fill="rgb(206,1,45)" fg:x="76855" fg:w="10"/><text x="98.2581%" y="2191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.01%)</title><rect x="98.0081%" y="2165" width="0.0128%" height="15" fill="rgb(209,124,26)" fg:x="76855" fg:w="10"/><text x="98.2581%" y="2175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="98.0081%" y="2149" width="0.0128%" height="15" fill="rgb(220,59,8)" fg:x="76855" fg:w="10"/><text x="98.2581%" y="2159.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="98.0106%" y="2133" width="0.0102%" height="15" fill="rgb(251,41,37)" fg:x="76857" fg:w="8"/><text x="98.2606%" y="2143.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="98.0106%" y="2117" width="0.0102%" height="15" fill="rgb(239,152,21)" fg:x="76857" fg:w="8"/><text x="98.2606%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="98.0106%" y="2101" width="0.0102%" height="15" fill="rgb(226,32,1)" fg:x="76857" fg:w="8"/><text x="98.2606%" y="2111.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (83 samples, 0.11%)</title><rect x="97.9443%" y="2645" width="0.1058%" height="15" fill="rgb(230,154,36)" fg:x="76805" fg:w="83"/><text x="98.1943%" y="2655.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (83 samples, 0.11%)</title><rect x="97.9443%" y="2629" width="0.1058%" height="15" fill="rgb(208,228,43)" fg:x="76805" fg:w="83"/><text x="98.1943%" y="2639.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (82 samples, 0.10%)</title><rect x="97.9456%" y="2613" width="0.1046%" height="15" fill="rgb(214,203,3)" fg:x="76806" fg:w="82"/><text x="98.1956%" y="2623.50"></text></g><g><title>rayon_core::job::JobRef::execute (82 samples, 0.10%)</title><rect x="97.9456%" y="2597" width="0.1046%" height="15" fill="rgb(207,149,29)" fg:x="76806" fg:w="82"/><text x="98.1956%" y="2607.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (82 samples, 0.10%)</title><rect x="97.9456%" y="2581" width="0.1046%" height="15" fill="rgb(250,105,7)" fg:x="76806" fg:w="82"/><text x="98.1956%" y="2591.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (82 samples, 0.10%)</title><rect x="97.9456%" y="2565" width="0.1046%" height="15" fill="rgb(232,222,16)" fg:x="76806" fg:w="82"/><text x="98.1956%" y="2575.50"></text></g><g><title>std::panic::catch_unwind (82 samples, 0.10%)</title><rect x="97.9456%" y="2549" width="0.1046%" height="15" fill="rgb(209,32,24)" fg:x="76806" fg:w="82"/><text x="98.1956%" y="2559.50"></text></g><g><title>std::panicking::try (82 samples, 0.10%)</title><rect x="97.9456%" y="2533" width="0.1046%" height="15" fill="rgb(225,13,6)" fg:x="76806" fg:w="82"/><text x="98.1956%" y="2543.50"></text></g><g><title>std::panicking::try::do_call (82 samples, 0.10%)</title><rect x="97.9456%" y="2517" width="0.1046%" height="15" fill="rgb(245,226,26)" fg:x="76806" fg:w="82"/><text x="98.1956%" y="2527.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (82 samples, 0.10%)</title><rect x="97.9456%" y="2501" width="0.1046%" height="15" fill="rgb(229,178,27)" fg:x="76806" fg:w="82"/><text x="98.1956%" y="2511.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (82 samples, 0.10%)</title><rect x="97.9456%" y="2485" width="0.1046%" height="15" fill="rgb(205,227,28)" fg:x="76806" fg:w="82"/><text x="98.1956%" y="2495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (82 samples, 0.10%)</title><rect x="97.9456%" y="2469" width="0.1046%" height="15" fill="rgb(210,191,45)" fg:x="76806" fg:w="82"/><text x="98.1956%" y="2479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (82 samples, 0.10%)</title><rect x="97.9456%" y="2453" width="0.1046%" height="15" fill="rgb(206,124,16)" fg:x="76806" fg:w="82"/><text x="98.1956%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (82 samples, 0.10%)</title><rect x="97.9456%" y="2437" width="0.1046%" height="15" fill="rgb(210,162,0)" fg:x="76806" fg:w="82"/><text x="98.1956%" y="2447.50"></text></g><g><title>rayon_core::join::join_context (75 samples, 0.10%)</title><rect x="97.9545%" y="2421" width="0.0956%" height="15" fill="rgb(211,54,38)" fg:x="76813" fg:w="75"/><text x="98.2045%" y="2431.50"></text></g><g><title>rayon_core::registry::in_worker (75 samples, 0.10%)</title><rect x="97.9545%" y="2405" width="0.0956%" height="15" fill="rgb(248,192,3)" fg:x="76813" fg:w="75"/><text x="98.2045%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (75 samples, 0.10%)</title><rect x="97.9545%" y="2389" width="0.0956%" height="15" fill="rgb(233,187,18)" fg:x="76813" fg:w="75"/><text x="98.2045%" y="2399.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (37 samples, 0.05%)</title><rect x="98.0030%" y="2373" width="0.0472%" height="15" fill="rgb(237,208,14)" fg:x="76851" fg:w="37"/><text x="98.2530%" y="2383.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 0.05%)</title><rect x="98.0030%" y="2357" width="0.0472%" height="15" fill="rgb(212,77,1)" fg:x="76851" fg:w="37"/><text x="98.2530%" y="2367.50"></text></g><g><title>std::panicking::try (37 samples, 0.05%)</title><rect x="98.0030%" y="2341" width="0.0472%" height="15" fill="rgb(210,163,22)" fg:x="76851" fg:w="37"/><text x="98.2530%" y="2351.50"></text></g><g><title>std::panicking::try::do_call (37 samples, 0.05%)</title><rect x="98.0030%" y="2325" width="0.0472%" height="15" fill="rgb(250,58,28)" fg:x="76851" fg:w="37"/><text x="98.2530%" y="2335.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (37 samples, 0.05%)</title><rect x="98.0030%" y="2309" width="0.0472%" height="15" fill="rgb(254,28,41)" fg:x="76851" fg:w="37"/><text x="98.2530%" y="2319.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (37 samples, 0.05%)</title><rect x="98.0030%" y="2293" width="0.0472%" height="15" fill="rgb(237,162,36)" fg:x="76851" fg:w="37"/><text x="98.2530%" y="2303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (37 samples, 0.05%)</title><rect x="98.0030%" y="2277" width="0.0472%" height="15" fill="rgb(232,56,6)" fg:x="76851" fg:w="37"/><text x="98.2530%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.05%)</title><rect x="98.0030%" y="2261" width="0.0472%" height="15" fill="rgb(216,127,42)" fg:x="76851" fg:w="37"/><text x="98.2530%" y="2271.50"></text></g><g><title>rayon_core::join::join_context (33 samples, 0.04%)</title><rect x="98.0081%" y="2245" width="0.0421%" height="15" fill="rgb(241,69,15)" fg:x="76855" fg:w="33"/><text x="98.2581%" y="2255.50"></text></g><g><title>rayon_core::registry::in_worker (33 samples, 0.04%)</title><rect x="98.0081%" y="2229" width="0.0421%" height="15" fill="rgb(227,180,19)" fg:x="76855" fg:w="33"/><text x="98.2581%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (33 samples, 0.04%)</title><rect x="98.0081%" y="2213" width="0.0421%" height="15" fill="rgb(231,188,29)" fg:x="76855" fg:w="33"/><text x="98.2581%" y="2223.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (16 samples, 0.02%)</title><rect x="98.0298%" y="2197" width="0.0204%" height="15" fill="rgb(224,176,27)" fg:x="76872" fg:w="16"/><text x="98.2798%" y="2207.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.02%)</title><rect x="98.0298%" y="2181" width="0.0204%" height="15" fill="rgb(249,214,19)" fg:x="76872" fg:w="16"/><text x="98.2798%" y="2191.50"></text></g><g><title>std::panicking::try (16 samples, 0.02%)</title><rect x="98.0298%" y="2165" width="0.0204%" height="15" fill="rgb(240,0,4)" fg:x="76872" fg:w="16"/><text x="98.2798%" y="2175.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.02%)</title><rect x="98.0298%" y="2149" width="0.0204%" height="15" fill="rgb(233,28,41)" fg:x="76872" fg:w="16"/><text x="98.2798%" y="2159.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.02%)</title><rect x="98.0298%" y="2133" width="0.0204%" height="15" fill="rgb(220,90,51)" fg:x="76872" fg:w="16"/><text x="98.2798%" y="2143.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (16 samples, 0.02%)</title><rect x="98.0298%" y="2117" width="0.0204%" height="15" fill="rgb(250,52,22)" fg:x="76872" fg:w="16"/><text x="98.2798%" y="2127.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.02%)</title><rect x="98.0298%" y="2101" width="0.0204%" height="15" fill="rgb(231,152,36)" fg:x="76872" fg:w="16"/><text x="98.2798%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="98.0298%" y="2085" width="0.0204%" height="15" fill="rgb(250,218,4)" fg:x="76872" fg:w="16"/><text x="98.2798%" y="2095.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="98.0336%" y="2069" width="0.0166%" height="15" fill="rgb(210,38,21)" fg:x="76875" fg:w="13"/><text x="98.2836%" y="2079.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="98.0336%" y="2053" width="0.0166%" height="15" fill="rgb(230,75,13)" fg:x="76875" fg:w="13"/><text x="98.2836%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="98.0336%" y="2037" width="0.0166%" height="15" fill="rgb(250,68,53)" fg:x="76875" fg:w="13"/><text x="98.2836%" y="2047.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (8 samples, 0.01%)</title><rect x="98.0502%" y="2517" width="0.0102%" height="15" fill="rgb(250,210,16)" fg:x="76888" fg:w="8"/><text x="98.3002%" y="2527.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (8 samples, 0.01%)</title><rect x="98.0502%" y="2501" width="0.0102%" height="15" fill="rgb(240,132,5)" fg:x="76888" fg:w="8"/><text x="98.3002%" y="2511.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8 samples, 0.01%)</title><rect x="98.0502%" y="2485" width="0.0102%" height="15" fill="rgb(222,148,48)" fg:x="76888" fg:w="8"/><text x="98.3002%" y="2495.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (8 samples, 0.01%)</title><rect x="98.0502%" y="2469" width="0.0102%" height="15" fill="rgb(247,181,24)" fg:x="76888" fg:w="8"/><text x="98.3002%" y="2479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="98.0502%" y="2453" width="0.0102%" height="15" fill="rgb(239,5,31)" fg:x="76888" fg:w="8"/><text x="98.3002%" y="2463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.01%)</title><rect x="98.0502%" y="2437" width="0.0102%" height="15" fill="rgb(241,152,38)" fg:x="76888" fg:w="8"/><text x="98.3002%" y="2447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.01%)</title><rect x="98.0502%" y="2421" width="0.0102%" height="15" fill="rgb(246,200,37)" fg:x="76888" fg:w="8"/><text x="98.3002%" y="2431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8 samples, 0.01%)</title><rect x="98.0502%" y="2405" width="0.0102%" height="15" fill="rgb(243,210,26)" fg:x="76888" fg:w="8"/><text x="98.3002%" y="2415.50"></text></g><g><title>aptos_api::executor::src::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (8 samples, 0.01%)</title><rect x="98.0502%" y="2389" width="0.0102%" height="15" fill="rgb(222,22,22)" fg:x="76888" fg:w="8"/><text x="98.3002%" y="2399.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (8 samples, 0.01%)</title><rect x="98.0604%" y="2405" width="0.0102%" height="15" fill="rgb(208,129,28)" fg:x="76896" fg:w="8"/><text x="98.3104%" y="2415.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (8 samples, 0.01%)</title><rect x="98.0604%" y="2389" width="0.0102%" height="15" fill="rgb(254,169,28)" fg:x="76896" fg:w="8"/><text x="98.3104%" y="2399.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8 samples, 0.01%)</title><rect x="98.0604%" y="2373" width="0.0102%" height="15" fill="rgb(225,45,17)" fg:x="76896" fg:w="8"/><text x="98.3104%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (8 samples, 0.01%)</title><rect x="98.0604%" y="2357" width="0.0102%" height="15" fill="rgb(232,199,2)" fg:x="76896" fg:w="8"/><text x="98.3104%" y="2367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="98.0604%" y="2341" width="0.0102%" height="15" fill="rgb(235,33,40)" fg:x="76896" fg:w="8"/><text x="98.3104%" y="2351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.01%)</title><rect x="98.0604%" y="2325" width="0.0102%" height="15" fill="rgb(237,89,50)" fg:x="76896" fg:w="8"/><text x="98.3104%" y="2335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.01%)</title><rect x="98.0604%" y="2309" width="0.0102%" height="15" fill="rgb(238,126,5)" fg:x="76896" fg:w="8"/><text x="98.3104%" y="2319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8 samples, 0.01%)</title><rect x="98.0604%" y="2293" width="0.0102%" height="15" fill="rgb(247,214,42)" fg:x="76896" fg:w="8"/><text x="98.3104%" y="2303.50"></text></g><g><title>aptos_api::executor::src::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (8 samples, 0.01%)</title><rect x="98.0604%" y="2277" width="0.0102%" height="15" fill="rgb(238,60,45)" fg:x="76896" fg:w="8"/><text x="98.3104%" y="2287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (20 samples, 0.03%)</title><rect x="98.0706%" y="2357" width="0.0255%" height="15" fill="rgb(225,69,44)" fg:x="76904" fg:w="20"/><text x="98.3206%" y="2367.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (20 samples, 0.03%)</title><rect x="98.0706%" y="2341" width="0.0255%" height="15" fill="rgb(241,13,44)" fg:x="76904" fg:w="20"/><text x="98.3206%" y="2351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (20 samples, 0.03%)</title><rect x="98.0706%" y="2325" width="0.0255%" height="15" fill="rgb(227,121,22)" fg:x="76904" fg:w="20"/><text x="98.3206%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.03%)</title><rect x="98.0706%" y="2309" width="0.0255%" height="15" fill="rgb(231,160,23)" fg:x="76904" fg:w="20"/><text x="98.3206%" y="2319.50"></text></g><g><title>rayon_core::join::join_context (20 samples, 0.03%)</title><rect x="98.0706%" y="2293" width="0.0255%" height="15" fill="rgb(250,179,43)" fg:x="76904" fg:w="20"/><text x="98.3206%" y="2303.50"></text></g><g><title>rayon_core::registry::in_worker (20 samples, 0.03%)</title><rect x="98.0706%" y="2277" width="0.0255%" height="15" fill="rgb(233,54,46)" fg:x="76904" fg:w="20"/><text x="98.3206%" y="2287.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (20 samples, 0.03%)</title><rect x="98.0706%" y="2261" width="0.0255%" height="15" fill="rgb(247,120,42)" fg:x="76904" fg:w="20"/><text x="98.3206%" y="2271.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="98.0859%" y="2245" width="0.0102%" height="15" fill="rgb(221,219,12)" fg:x="76916" fg:w="8"/><text x="98.3359%" y="2255.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="98.0859%" y="2229" width="0.0102%" height="15" fill="rgb(211,126,8)" fg:x="76916" fg:w="8"/><text x="98.3359%" y="2239.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="98.0859%" y="2213" width="0.0102%" height="15" fill="rgb(218,154,33)" fg:x="76916" fg:w="8"/><text x="98.3359%" y="2223.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="98.0859%" y="2197" width="0.0102%" height="15" fill="rgb(212,199,16)" fg:x="76916" fg:w="8"/><text x="98.3359%" y="2207.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="98.0859%" y="2181" width="0.0102%" height="15" fill="rgb(236,215,46)" fg:x="76916" fg:w="8"/><text x="98.3359%" y="2191.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.01%)</title><rect x="98.0859%" y="2165" width="0.0102%" height="15" fill="rgb(232,32,22)" fg:x="76916" fg:w="8"/><text x="98.3359%" y="2175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="98.0859%" y="2149" width="0.0102%" height="15" fill="rgb(234,79,15)" fg:x="76916" fg:w="8"/><text x="98.3359%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="98.0859%" y="2133" width="0.0102%" height="15" fill="rgb(235,187,47)" fg:x="76916" fg:w="8"/><text x="98.3359%" y="2143.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (8 samples, 0.01%)</title><rect x="98.0961%" y="2357" width="0.0102%" height="15" fill="rgb(244,69,37)" fg:x="76924" fg:w="8"/><text x="98.3461%" y="2367.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (8 samples, 0.01%)</title><rect x="98.0961%" y="2341" width="0.0102%" height="15" fill="rgb(249,140,25)" fg:x="76924" fg:w="8"/><text x="98.3461%" y="2351.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.01%)</title><rect x="98.1114%" y="2181" width="0.0115%" height="15" fill="rgb(213,69,8)" fg:x="76936" fg:w="9"/><text x="98.3614%" y="2191.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.01%)</title><rect x="98.1114%" y="2165" width="0.0115%" height="15" fill="rgb(220,136,2)" fg:x="76936" fg:w="9"/><text x="98.3614%" y="2175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="98.1114%" y="2149" width="0.0115%" height="15" fill="rgb(237,50,36)" fg:x="76936" fg:w="9"/><text x="98.3614%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.1114%" y="2133" width="0.0115%" height="15" fill="rgb(226,18,11)" fg:x="76936" fg:w="9"/><text x="98.3614%" y="2143.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="98.1127%" y="2117" width="0.0102%" height="15" fill="rgb(243,156,2)" fg:x="76937" fg:w="8"/><text x="98.3627%" y="2127.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="98.1127%" y="2101" width="0.0102%" height="15" fill="rgb(218,8,34)" fg:x="76937" fg:w="8"/><text x="98.3627%" y="2111.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="98.1127%" y="2085" width="0.0102%" height="15" fill="rgb(250,94,35)" fg:x="76937" fg:w="8"/><text x="98.3627%" y="2095.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (59 samples, 0.08%)</title><rect x="98.0604%" y="2469" width="0.0752%" height="15" fill="rgb(229,127,21)" fg:x="76896" fg:w="59"/><text x="98.3104%" y="2479.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (59 samples, 0.08%)</title><rect x="98.0604%" y="2453" width="0.0752%" height="15" fill="rgb(234,49,5)" fg:x="76896" fg:w="59"/><text x="98.3104%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (59 samples, 0.08%)</title><rect x="98.0604%" y="2437" width="0.0752%" height="15" fill="rgb(248,12,16)" fg:x="76896" fg:w="59"/><text x="98.3104%" y="2447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (59 samples, 0.08%)</title><rect x="98.0604%" y="2421" width="0.0752%" height="15" fill="rgb(208,220,31)" fg:x="76896" fg:w="59"/><text x="98.3104%" y="2431.50"></text></g><g><title>rayon_core::join::join_context (51 samples, 0.07%)</title><rect x="98.0706%" y="2405" width="0.0650%" height="15" fill="rgb(243,184,0)" fg:x="76904" fg:w="51"/><text x="98.3206%" y="2415.50"></text></g><g><title>rayon_core::registry::in_worker (51 samples, 0.07%)</title><rect x="98.0706%" y="2389" width="0.0650%" height="15" fill="rgb(217,38,21)" fg:x="76904" fg:w="51"/><text x="98.3206%" y="2399.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (51 samples, 0.07%)</title><rect x="98.0706%" y="2373" width="0.0650%" height="15" fill="rgb(239,120,45)" fg:x="76904" fg:w="51"/><text x="98.3206%" y="2383.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (23 samples, 0.03%)</title><rect x="98.1063%" y="2357" width="0.0293%" height="15" fill="rgb(235,33,2)" fg:x="76932" fg:w="23"/><text x="98.3563%" y="2367.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.03%)</title><rect x="98.1063%" y="2341" width="0.0293%" height="15" fill="rgb(249,161,5)" fg:x="76932" fg:w="23"/><text x="98.3563%" y="2351.50"></text></g><g><title>std::panicking::try (23 samples, 0.03%)</title><rect x="98.1063%" y="2325" width="0.0293%" height="15" fill="rgb(250,165,48)" fg:x="76932" fg:w="23"/><text x="98.3563%" y="2335.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.03%)</title><rect x="98.1063%" y="2309" width="0.0293%" height="15" fill="rgb(221,23,45)" fg:x="76932" fg:w="23"/><text x="98.3563%" y="2319.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.03%)</title><rect x="98.1063%" y="2293" width="0.0293%" height="15" fill="rgb(217,108,46)" fg:x="76932" fg:w="23"/><text x="98.3563%" y="2303.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (23 samples, 0.03%)</title><rect x="98.1063%" y="2277" width="0.0293%" height="15" fill="rgb(254,26,35)" fg:x="76932" fg:w="23"/><text x="98.3563%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (23 samples, 0.03%)</title><rect x="98.1063%" y="2261" width="0.0293%" height="15" fill="rgb(218,223,28)" fg:x="76932" fg:w="23"/><text x="98.3563%" y="2271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="98.1063%" y="2245" width="0.0293%" height="15" fill="rgb(242,27,47)" fg:x="76932" fg:w="23"/><text x="98.3563%" y="2255.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.02%)</title><rect x="98.1114%" y="2229" width="0.0242%" height="15" fill="rgb(218,39,35)" fg:x="76936" fg:w="19"/><text x="98.3614%" y="2239.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.02%)</title><rect x="98.1114%" y="2213" width="0.0242%" height="15" fill="rgb(232,127,16)" fg:x="76936" fg:w="19"/><text x="98.3614%" y="2223.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.02%)</title><rect x="98.1114%" y="2197" width="0.0242%" height="15" fill="rgb(231,219,51)" fg:x="76936" fg:w="19"/><text x="98.3614%" y="2207.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="98.1241%" y="2181" width="0.0115%" height="15" fill="rgb(217,220,46)" fg:x="76946" fg:w="9"/><text x="98.3741%" y="2191.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="98.1241%" y="2165" width="0.0115%" height="15" fill="rgb(230,75,1)" fg:x="76946" fg:w="9"/><text x="98.3741%" y="2175.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="98.1241%" y="2149" width="0.0115%" height="15" fill="rgb(218,2,8)" fg:x="76946" fg:w="9"/><text x="98.3741%" y="2159.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="98.1241%" y="2133" width="0.0115%" height="15" fill="rgb(206,111,30)" fg:x="76946" fg:w="9"/><text x="98.3741%" y="2143.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="98.1241%" y="2117" width="0.0115%" height="15" fill="rgb(209,135,6)" fg:x="76946" fg:w="9"/><text x="98.3741%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.01%)</title><rect x="98.1241%" y="2101" width="0.0115%" height="15" fill="rgb(205,169,10)" fg:x="76946" fg:w="9"/><text x="98.3741%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="98.1241%" y="2085" width="0.0115%" height="15" fill="rgb(212,204,38)" fg:x="76946" fg:w="9"/><text x="98.3741%" y="2095.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.1241%" y="2069" width="0.0115%" height="15" fill="rgb(205,199,14)" fg:x="76946" fg:w="9"/><text x="98.3741%" y="2079.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (14 samples, 0.02%)</title><rect x="98.1445%" y="2197" width="0.0179%" height="15" fill="rgb(212,4,6)" fg:x="76962" fg:w="14"/><text x="98.3945%" y="2207.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (14 samples, 0.02%)</title><rect x="98.1445%" y="2181" width="0.0179%" height="15" fill="rgb(250,15,10)" fg:x="76962" fg:w="14"/><text x="98.3945%" y="2191.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (13 samples, 0.02%)</title><rect x="98.1458%" y="2165" width="0.0166%" height="15" fill="rgb(212,49,51)" fg:x="76963" fg:w="13"/><text x="98.3958%" y="2175.50"></text></g><g><title>rayon_core::job::JobRef::execute (13 samples, 0.02%)</title><rect x="98.1458%" y="2149" width="0.0166%" height="15" fill="rgb(235,21,9)" fg:x="76963" fg:w="13"/><text x="98.3958%" y="2159.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (13 samples, 0.02%)</title><rect x="98.1458%" y="2133" width="0.0166%" height="15" fill="rgb(251,31,32)" fg:x="76963" fg:w="13"/><text x="98.3958%" y="2143.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.02%)</title><rect x="98.1458%" y="2117" width="0.0166%" height="15" fill="rgb(246,23,9)" fg:x="76963" fg:w="13"/><text x="98.3958%" y="2127.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="98.1458%" y="2101" width="0.0166%" height="15" fill="rgb(225,216,14)" fg:x="76963" fg:w="13"/><text x="98.3958%" y="2111.50"></text></g><g><title>std::panicking::try (13 samples, 0.02%)</title><rect x="98.1458%" y="2085" width="0.0166%" height="15" fill="rgb(215,200,26)" fg:x="76963" fg:w="13"/><text x="98.3958%" y="2095.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="98.1458%" y="2069" width="0.0166%" height="15" fill="rgb(237,130,47)" fg:x="76963" fg:w="13"/><text x="98.3958%" y="2079.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.02%)</title><rect x="98.1458%" y="2053" width="0.0166%" height="15" fill="rgb(247,74,14)" fg:x="76963" fg:w="13"/><text x="98.3958%" y="2063.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (13 samples, 0.02%)</title><rect x="98.1458%" y="2037" width="0.0166%" height="15" fill="rgb(254,97,46)" fg:x="76963" fg:w="13"/><text x="98.3958%" y="2047.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (13 samples, 0.02%)</title><rect x="98.1458%" y="2021" width="0.0166%" height="15" fill="rgb(234,191,1)" fg:x="76963" fg:w="13"/><text x="98.3958%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.02%)</title><rect x="98.1458%" y="2005" width="0.0166%" height="15" fill="rgb(215,165,14)" fg:x="76963" fg:w="13"/><text x="98.3958%" y="2015.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="98.1458%" y="1989" width="0.0166%" height="15" fill="rgb(230,182,6)" fg:x="76963" fg:w="13"/><text x="98.3958%" y="1999.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.02%)</title><rect x="98.1471%" y="1973" width="0.0153%" height="15" fill="rgb(210,127,39)" fg:x="76964" fg:w="12"/><text x="98.3971%" y="1983.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.02%)</title><rect x="98.1471%" y="1957" width="0.0153%" height="15" fill="rgb(223,212,51)" fg:x="76964" fg:w="12"/><text x="98.3971%" y="1967.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.02%)</title><rect x="98.1471%" y="1941" width="0.0153%" height="15" fill="rgb(226,176,43)" fg:x="76964" fg:w="12"/><text x="98.3971%" y="1951.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (32 samples, 0.04%)</title><rect x="98.1356%" y="2469" width="0.0408%" height="15" fill="rgb(222,155,4)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2479.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (32 samples, 0.04%)</title><rect x="98.1356%" y="2453" width="0.0408%" height="15" fill="rgb(215,149,7)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2463.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (32 samples, 0.04%)</title><rect x="98.1356%" y="2437" width="0.0408%" height="15" fill="rgb(252,199,23)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2447.50"></text></g><g><title>rayon_core::job::JobRef::execute (32 samples, 0.04%)</title><rect x="98.1356%" y="2421" width="0.0408%" height="15" fill="rgb(245,52,29)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2431.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (32 samples, 0.04%)</title><rect x="98.1356%" y="2405" width="0.0408%" height="15" fill="rgb(221,228,19)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2415.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (32 samples, 0.04%)</title><rect x="98.1356%" y="2389" width="0.0408%" height="15" fill="rgb(253,101,6)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2399.50"></text></g><g><title>std::panic::catch_unwind (32 samples, 0.04%)</title><rect x="98.1356%" y="2373" width="0.0408%" height="15" fill="rgb(211,130,8)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2383.50"></text></g><g><title>std::panicking::try (32 samples, 0.04%)</title><rect x="98.1356%" y="2357" width="0.0408%" height="15" fill="rgb(238,37,53)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2367.50"></text></g><g><title>std::panicking::try::do_call (32 samples, 0.04%)</title><rect x="98.1356%" y="2341" width="0.0408%" height="15" fill="rgb(235,145,5)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2351.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (32 samples, 0.04%)</title><rect x="98.1356%" y="2325" width="0.0408%" height="15" fill="rgb(244,12,43)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2335.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (32 samples, 0.04%)</title><rect x="98.1356%" y="2309" width="0.0408%" height="15" fill="rgb(246,195,24)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2319.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (32 samples, 0.04%)</title><rect x="98.1356%" y="2293" width="0.0408%" height="15" fill="rgb(235,163,6)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (32 samples, 0.04%)</title><rect x="98.1356%" y="2277" width="0.0408%" height="15" fill="rgb(236,218,17)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.04%)</title><rect x="98.1356%" y="2261" width="0.0408%" height="15" fill="rgb(235,12,38)" fg:x="76955" fg:w="32"/><text x="98.3856%" y="2271.50"></text></g><g><title>rayon_core::join::join_context (30 samples, 0.04%)</title><rect x="98.1382%" y="2245" width="0.0383%" height="15" fill="rgb(225,195,33)" fg:x="76957" fg:w="30"/><text x="98.3882%" y="2255.50"></text></g><g><title>rayon_core::registry::in_worker (30 samples, 0.04%)</title><rect x="98.1382%" y="2229" width="0.0383%" height="15" fill="rgb(238,54,35)" fg:x="76957" fg:w="30"/><text x="98.3882%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (30 samples, 0.04%)</title><rect x="98.1382%" y="2213" width="0.0383%" height="15" fill="rgb(238,33,7)" fg:x="76957" fg:w="30"/><text x="98.3882%" y="2223.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="98.1624%" y="2197" width="0.0140%" height="15" fill="rgb(245,5,14)" fg:x="76976" fg:w="11"/><text x="98.4124%" y="2207.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="98.1624%" y="2181" width="0.0140%" height="15" fill="rgb(251,95,31)" fg:x="76976" fg:w="11"/><text x="98.4124%" y="2191.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="98.1624%" y="2165" width="0.0140%" height="15" fill="rgb(222,15,46)" fg:x="76976" fg:w="11"/><text x="98.4124%" y="2175.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="98.1624%" y="2149" width="0.0140%" height="15" fill="rgb(226,182,24)" fg:x="76976" fg:w="11"/><text x="98.4124%" y="2159.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="98.1624%" y="2133" width="0.0140%" height="15" fill="rgb(229,105,41)" fg:x="76976" fg:w="11"/><text x="98.4124%" y="2143.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.01%)</title><rect x="98.1624%" y="2117" width="0.0140%" height="15" fill="rgb(216,99,53)" fg:x="76976" fg:w="11"/><text x="98.4124%" y="2127.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="98.1624%" y="2101" width="0.0140%" height="15" fill="rgb(253,26,20)" fg:x="76976" fg:w="11"/><text x="98.4124%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.1624%" y="2085" width="0.0140%" height="15" fill="rgb(249,155,28)" fg:x="76976" fg:w="11"/><text x="98.4124%" y="2095.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.01%)</title><rect x="98.1637%" y="2069" width="0.0128%" height="15" fill="rgb(241,221,2)" fg:x="76977" fg:w="10"/><text x="98.4137%" y="2079.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.01%)</title><rect x="98.1637%" y="2053" width="0.0128%" height="15" fill="rgb(219,124,6)" fg:x="76977" fg:w="10"/><text x="98.4137%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.01%)</title><rect x="98.1637%" y="2037" width="0.0128%" height="15" fill="rgb(233,37,6)" fg:x="76977" fg:w="10"/><text x="98.4137%" y="2047.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (9 samples, 0.01%)</title><rect x="98.1764%" y="2341" width="0.0115%" height="15" fill="rgb(238,20,14)" fg:x="76987" fg:w="9"/><text x="98.4264%" y="2351.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (9 samples, 0.01%)</title><rect x="98.1764%" y="2325" width="0.0115%" height="15" fill="rgb(232,106,27)" fg:x="76987" fg:w="9"/><text x="98.4264%" y="2335.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.01%)</title><rect x="98.1764%" y="2309" width="0.0115%" height="15" fill="rgb(246,157,24)" fg:x="76987" fg:w="9"/><text x="98.4264%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (9 samples, 0.01%)</title><rect x="98.1764%" y="2293" width="0.0115%" height="15" fill="rgb(214,153,10)" fg:x="76987" fg:w="9"/><text x="98.4264%" y="2303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="98.1764%" y="2277" width="0.0115%" height="15" fill="rgb(212,94,6)" fg:x="76987" fg:w="9"/><text x="98.4264%" y="2287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.01%)</title><rect x="98.1764%" y="2261" width="0.0115%" height="15" fill="rgb(254,25,27)" fg:x="76987" fg:w="9"/><text x="98.4264%" y="2271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (9 samples, 0.01%)</title><rect x="98.1764%" y="2245" width="0.0115%" height="15" fill="rgb(250,43,52)" fg:x="76987" fg:w="9"/><text x="98.4264%" y="2255.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (9 samples, 0.01%)</title><rect x="98.1764%" y="2229" width="0.0115%" height="15" fill="rgb(221,226,40)" fg:x="76987" fg:w="9"/><text x="98.4264%" y="2239.50"></text></g><g><title>aptos_api::executor::src::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (9 samples, 0.01%)</title><rect x="98.1764%" y="2213" width="0.0115%" height="15" fill="rgb(235,162,34)" fg:x="76987" fg:w="9"/><text x="98.4264%" y="2223.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (12 samples, 0.02%)</title><rect x="98.1955%" y="2181" width="0.0153%" height="15" fill="rgb(239,24,26)" fg:x="77002" fg:w="12"/><text x="98.4455%" y="2191.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (12 samples, 0.02%)</title><rect x="98.1955%" y="2165" width="0.0153%" height="15" fill="rgb(244,226,11)" fg:x="77002" fg:w="12"/><text x="98.4455%" y="2175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.02%)</title><rect x="98.1955%" y="2149" width="0.0153%" height="15" fill="rgb(225,23,10)" fg:x="77002" fg:w="12"/><text x="98.4455%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.02%)</title><rect x="98.1955%" y="2133" width="0.0153%" height="15" fill="rgb(249,125,6)" fg:x="77002" fg:w="12"/><text x="98.4455%" y="2143.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="98.1968%" y="2117" width="0.0140%" height="15" fill="rgb(246,212,12)" fg:x="77003" fg:w="11"/><text x="98.4468%" y="2127.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="98.1968%" y="2101" width="0.0140%" height="15" fill="rgb(230,43,32)" fg:x="77003" fg:w="11"/><text x="98.4468%" y="2111.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="98.1968%" y="2085" width="0.0140%" height="15" fill="rgb(210,95,23)" fg:x="77003" fg:w="11"/><text x="98.4468%" y="2095.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.01%)</title><rect x="98.2236%" y="2005" width="0.0102%" height="15" fill="rgb(229,103,33)" fg:x="77024" fg:w="8"/><text x="98.4736%" y="2015.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.01%)</title><rect x="98.2236%" y="1989" width="0.0102%" height="15" fill="rgb(222,104,27)" fg:x="77024" fg:w="8"/><text x="98.4736%" y="1999.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="98.2236%" y="1973" width="0.0102%" height="15" fill="rgb(239,221,23)" fg:x="77024" fg:w="8"/><text x="98.4736%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="98.2236%" y="1957" width="0.0102%" height="15" fill="rgb(222,98,21)" fg:x="77024" fg:w="8"/><text x="98.4736%" y="1967.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (47 samples, 0.06%)</title><rect x="98.1879%" y="2293" width="0.0599%" height="15" fill="rgb(231,101,20)" fg:x="76996" fg:w="47"/><text x="98.4379%" y="2303.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (47 samples, 0.06%)</title><rect x="98.1879%" y="2277" width="0.0599%" height="15" fill="rgb(215,150,22)" fg:x="76996" fg:w="47"/><text x="98.4379%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (47 samples, 0.06%)</title><rect x="98.1879%" y="2261" width="0.0599%" height="15" fill="rgb(248,3,34)" fg:x="76996" fg:w="47"/><text x="98.4379%" y="2271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.06%)</title><rect x="98.1879%" y="2245" width="0.0599%" height="15" fill="rgb(220,141,21)" fg:x="76996" fg:w="47"/><text x="98.4379%" y="2255.50"></text></g><g><title>rayon_core::join::join_context (41 samples, 0.05%)</title><rect x="98.1955%" y="2229" width="0.0523%" height="15" fill="rgb(223,41,48)" fg:x="77002" fg:w="41"/><text x="98.4455%" y="2239.50"></text></g><g><title>rayon_core::registry::in_worker (41 samples, 0.05%)</title><rect x="98.1955%" y="2213" width="0.0523%" height="15" fill="rgb(247,12,5)" fg:x="77002" fg:w="41"/><text x="98.4455%" y="2223.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (41 samples, 0.05%)</title><rect x="98.1955%" y="2197" width="0.0523%" height="15" fill="rgb(206,173,10)" fg:x="77002" fg:w="41"/><text x="98.4455%" y="2207.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (23 samples, 0.03%)</title><rect x="98.2185%" y="2181" width="0.0293%" height="15" fill="rgb(233,214,37)" fg:x="77020" fg:w="23"/><text x="98.4685%" y="2191.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.03%)</title><rect x="98.2185%" y="2165" width="0.0293%" height="15" fill="rgb(238,86,43)" fg:x="77020" fg:w="23"/><text x="98.4685%" y="2175.50"></text></g><g><title>std::panicking::try (23 samples, 0.03%)</title><rect x="98.2185%" y="2149" width="0.0293%" height="15" fill="rgb(212,182,8)" fg:x="77020" fg:w="23"/><text x="98.4685%" y="2159.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.03%)</title><rect x="98.2185%" y="2133" width="0.0293%" height="15" fill="rgb(240,91,47)" fg:x="77020" fg:w="23"/><text x="98.4685%" y="2143.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.03%)</title><rect x="98.2185%" y="2117" width="0.0293%" height="15" fill="rgb(209,138,26)" fg:x="77020" fg:w="23"/><text x="98.4685%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (23 samples, 0.03%)</title><rect x="98.2185%" y="2101" width="0.0293%" height="15" fill="rgb(231,163,20)" fg:x="77020" fg:w="23"/><text x="98.4685%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (23 samples, 0.03%)</title><rect x="98.2185%" y="2085" width="0.0293%" height="15" fill="rgb(214,91,54)" fg:x="77020" fg:w="23"/><text x="98.4685%" y="2095.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="98.2185%" y="2069" width="0.0293%" height="15" fill="rgb(230,32,17)" fg:x="77020" fg:w="23"/><text x="98.4685%" y="2079.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.02%)</title><rect x="98.2236%" y="2053" width="0.0242%" height="15" fill="rgb(231,34,34)" fg:x="77024" fg:w="19"/><text x="98.4736%" y="2063.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.02%)</title><rect x="98.2236%" y="2037" width="0.0242%" height="15" fill="rgb(224,228,27)" fg:x="77024" fg:w="19"/><text x="98.4736%" y="2047.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.02%)</title><rect x="98.2236%" y="2021" width="0.0242%" height="15" fill="rgb(219,35,40)" fg:x="77024" fg:w="19"/><text x="98.4736%" y="2031.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="98.2338%" y="2005" width="0.0140%" height="15" fill="rgb(234,42,8)" fg:x="77032" fg:w="11"/><text x="98.4838%" y="2015.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="98.2338%" y="1989" width="0.0140%" height="15" fill="rgb(226,75,22)" fg:x="77032" fg:w="11"/><text x="98.4838%" y="1999.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="98.2338%" y="1973" width="0.0140%" height="15" fill="rgb(242,203,28)" fg:x="77032" fg:w="11"/><text x="98.4838%" y="1983.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="98.2338%" y="1957" width="0.0140%" height="15" fill="rgb(221,3,9)" fg:x="77032" fg:w="11"/><text x="98.4838%" y="1967.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="98.2338%" y="1941" width="0.0140%" height="15" fill="rgb(214,34,31)" fg:x="77032" fg:w="11"/><text x="98.4838%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.01%)</title><rect x="98.2338%" y="1925" width="0.0140%" height="15" fill="rgb(252,119,15)" fg:x="77032" fg:w="11"/><text x="98.4838%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="98.2338%" y="1909" width="0.0140%" height="15" fill="rgb(244,224,31)" fg:x="77032" fg:w="11"/><text x="98.4838%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.2338%" y="1893" width="0.0140%" height="15" fill="rgb(215,8,51)" fg:x="77032" fg:w="11"/><text x="98.4838%" y="1903.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="98.2338%" y="1877" width="0.0140%" height="15" fill="rgb(207,24,1)" fg:x="77032" fg:w="11"/><text x="98.4838%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="98.2338%" y="1861" width="0.0140%" height="15" fill="rgb(245,90,0)" fg:x="77032" fg:w="11"/><text x="98.4838%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="98.2338%" y="1845" width="0.0140%" height="15" fill="rgb(246,43,48)" fg:x="77032" fg:w="11"/><text x="98.4838%" y="1855.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (22 samples, 0.03%)</title><rect x="98.2478%" y="2293" width="0.0281%" height="15" fill="rgb(252,218,10)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2303.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (22 samples, 0.03%)</title><rect x="98.2478%" y="2277" width="0.0281%" height="15" fill="rgb(231,24,35)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2287.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (22 samples, 0.03%)</title><rect x="98.2478%" y="2261" width="0.0281%" height="15" fill="rgb(225,66,19)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2271.50"></text></g><g><title>rayon_core::job::JobRef::execute (22 samples, 0.03%)</title><rect x="98.2478%" y="2245" width="0.0281%" height="15" fill="rgb(214,96,51)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2255.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (22 samples, 0.03%)</title><rect x="98.2478%" y="2229" width="0.0281%" height="15" fill="rgb(251,151,47)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2239.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (22 samples, 0.03%)</title><rect x="98.2478%" y="2213" width="0.0281%" height="15" fill="rgb(236,79,14)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2223.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.03%)</title><rect x="98.2478%" y="2197" width="0.0281%" height="15" fill="rgb(210,205,11)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2207.50"></text></g><g><title>std::panicking::try (22 samples, 0.03%)</title><rect x="98.2478%" y="2181" width="0.0281%" height="15" fill="rgb(233,142,53)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2191.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.03%)</title><rect x="98.2478%" y="2165" width="0.0281%" height="15" fill="rgb(212,116,48)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2175.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.03%)</title><rect x="98.2478%" y="2149" width="0.0281%" height="15" fill="rgb(234,55,33)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2159.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (22 samples, 0.03%)</title><rect x="98.2478%" y="2133" width="0.0281%" height="15" fill="rgb(253,92,27)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2143.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (22 samples, 0.03%)</title><rect x="98.2478%" y="2117" width="0.0281%" height="15" fill="rgb(220,7,35)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2127.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (22 samples, 0.03%)</title><rect x="98.2478%" y="2101" width="0.0281%" height="15" fill="rgb(246,124,6)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="98.2478%" y="2085" width="0.0281%" height="15" fill="rgb(212,111,51)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2095.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.03%)</title><rect x="98.2478%" y="2069" width="0.0281%" height="15" fill="rgb(253,116,7)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2079.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.03%)</title><rect x="98.2478%" y="2053" width="0.0281%" height="15" fill="rgb(213,145,18)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.03%)</title><rect x="98.2478%" y="2037" width="0.0281%" height="15" fill="rgb(219,149,7)" fg:x="77043" fg:w="22"/><text x="98.4978%" y="2047.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (16 samples, 0.02%)</title><rect x="98.2555%" y="2021" width="0.0204%" height="15" fill="rgb(225,156,20)" fg:x="77049" fg:w="16"/><text x="98.5055%" y="2031.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.02%)</title><rect x="98.2555%" y="2005" width="0.0204%" height="15" fill="rgb(211,98,19)" fg:x="77049" fg:w="16"/><text x="98.5055%" y="2015.50"></text></g><g><title>std::panicking::try (16 samples, 0.02%)</title><rect x="98.2555%" y="1989" width="0.0204%" height="15" fill="rgb(231,192,31)" fg:x="77049" fg:w="16"/><text x="98.5055%" y="1999.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.02%)</title><rect x="98.2555%" y="1973" width="0.0204%" height="15" fill="rgb(249,95,19)" fg:x="77049" fg:w="16"/><text x="98.5055%" y="1983.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.02%)</title><rect x="98.2555%" y="1957" width="0.0204%" height="15" fill="rgb(247,101,36)" fg:x="77049" fg:w="16"/><text x="98.5055%" y="1967.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (16 samples, 0.02%)</title><rect x="98.2555%" y="1941" width="0.0204%" height="15" fill="rgb(221,45,43)" fg:x="77049" fg:w="16"/><text x="98.5055%" y="1951.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.02%)</title><rect x="98.2555%" y="1925" width="0.0204%" height="15" fill="rgb(220,42,1)" fg:x="77049" fg:w="16"/><text x="98.5055%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="98.2555%" y="1909" width="0.0204%" height="15" fill="rgb(236,19,24)" fg:x="77049" fg:w="16"/><text x="98.5055%" y="1919.50"></text></g><g><title>rayon_core::join::join_context (15 samples, 0.02%)</title><rect x="98.2568%" y="1893" width="0.0191%" height="15" fill="rgb(225,192,6)" fg:x="77050" fg:w="15"/><text x="98.5068%" y="1903.50"></text></g><g><title>rayon_core::registry::in_worker (15 samples, 0.02%)</title><rect x="98.2568%" y="1877" width="0.0191%" height="15" fill="rgb(242,30,19)" fg:x="77050" fg:w="15"/><text x="98.5068%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.02%)</title><rect x="98.2568%" y="1861" width="0.0191%" height="15" fill="rgb(240,36,6)" fg:x="77050" fg:w="15"/><text x="98.5068%" y="1871.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="98.2657%" y="1845" width="0.0102%" height="15" fill="rgb(246,40,28)" fg:x="77057" fg:w="8"/><text x="98.5157%" y="1855.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="98.2657%" y="1829" width="0.0102%" height="15" fill="rgb(225,155,33)" fg:x="77057" fg:w="8"/><text x="98.5157%" y="1839.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="98.2657%" y="1813" width="0.0102%" height="15" fill="rgb(240,65,18)" fg:x="77057" fg:w="8"/><text x="98.5157%" y="1823.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="98.2657%" y="1797" width="0.0102%" height="15" fill="rgb(217,0,48)" fg:x="77057" fg:w="8"/><text x="98.5157%" y="1807.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="98.2657%" y="1781" width="0.0102%" height="15" fill="rgb(217,80,15)" fg:x="77057" fg:w="8"/><text x="98.5157%" y="1791.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.01%)</title><rect x="98.2657%" y="1765" width="0.0102%" height="15" fill="rgb(253,43,51)" fg:x="77057" fg:w="8"/><text x="98.5157%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="98.2657%" y="1749" width="0.0102%" height="15" fill="rgb(246,60,4)" fg:x="77057" fg:w="8"/><text x="98.5157%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="98.2657%" y="1733" width="0.0102%" height="15" fill="rgb(230,40,54)" fg:x="77057" fg:w="8"/><text x="98.5157%" y="1743.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (14 samples, 0.02%)</title><rect x="98.2848%" y="2005" width="0.0179%" height="15" fill="rgb(208,20,44)" fg:x="77072" fg:w="14"/><text x="98.5348%" y="2015.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (14 samples, 0.02%)</title><rect x="98.2848%" y="1989" width="0.0179%" height="15" fill="rgb(230,22,22)" fg:x="77072" fg:w="14"/><text x="98.5348%" y="1999.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.02%)</title><rect x="98.2848%" y="1973" width="0.0179%" height="15" fill="rgb(207,57,4)" fg:x="77072" fg:w="14"/><text x="98.5348%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="98.2848%" y="1957" width="0.0179%" height="15" fill="rgb(242,130,33)" fg:x="77072" fg:w="14"/><text x="98.5348%" y="1967.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.01%)</title><rect x="98.2899%" y="1941" width="0.0128%" height="15" fill="rgb(218,66,43)" fg:x="77076" fg:w="10"/><text x="98.5399%" y="1951.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.01%)</title><rect x="98.2899%" y="1925" width="0.0128%" height="15" fill="rgb(236,105,16)" fg:x="77076" fg:w="10"/><text x="98.5399%" y="1935.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.01%)</title><rect x="98.2899%" y="1909" width="0.0128%" height="15" fill="rgb(230,46,15)" fg:x="77076" fg:w="10"/><text x="98.5399%" y="1919.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (29 samples, 0.04%)</title><rect x="98.2784%" y="2117" width="0.0370%" height="15" fill="rgb(251,172,40)" fg:x="77067" fg:w="29"/><text x="98.5284%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (29 samples, 0.04%)</title><rect x="98.2784%" y="2101" width="0.0370%" height="15" fill="rgb(225,217,32)" fg:x="77067" fg:w="29"/><text x="98.5284%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (29 samples, 0.04%)</title><rect x="98.2784%" y="2085" width="0.0370%" height="15" fill="rgb(243,10,29)" fg:x="77067" fg:w="29"/><text x="98.5284%" y="2095.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.04%)</title><rect x="98.2784%" y="2069" width="0.0370%" height="15" fill="rgb(207,102,10)" fg:x="77067" fg:w="29"/><text x="98.5284%" y="2079.50"></text></g><g><title>rayon_core::join::join_context (24 samples, 0.03%)</title><rect x="98.2848%" y="2053" width="0.0306%" height="15" fill="rgb(241,125,5)" fg:x="77072" fg:w="24"/><text x="98.5348%" y="2063.50"></text></g><g><title>rayon_core::registry::in_worker (24 samples, 0.03%)</title><rect x="98.2848%" y="2037" width="0.0306%" height="15" fill="rgb(230,125,29)" fg:x="77072" fg:w="24"/><text x="98.5348%" y="2047.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (24 samples, 0.03%)</title><rect x="98.2848%" y="2021" width="0.0306%" height="15" fill="rgb(223,65,44)" fg:x="77072" fg:w="24"/><text x="98.5348%" y="2031.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="98.3052%" y="2005" width="0.0102%" height="15" fill="rgb(224,188,28)" fg:x="77088" fg:w="8"/><text x="98.5552%" y="2015.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="98.3052%" y="1989" width="0.0102%" height="15" fill="rgb(254,197,27)" fg:x="77088" fg:w="8"/><text x="98.5552%" y="1999.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="98.3052%" y="1973" width="0.0102%" height="15" fill="rgb(220,200,25)" fg:x="77088" fg:w="8"/><text x="98.5552%" y="1983.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="98.3052%" y="1957" width="0.0102%" height="15" fill="rgb(239,225,54)" fg:x="77088" fg:w="8"/><text x="98.5552%" y="1967.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="98.3052%" y="1941" width="0.0102%" height="15" fill="rgb(211,59,40)" fg:x="77088" fg:w="8"/><text x="98.5552%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.01%)</title><rect x="98.3052%" y="1925" width="0.0102%" height="15" fill="rgb(213,176,46)" fg:x="77088" fg:w="8"/><text x="98.5552%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="98.3052%" y="1909" width="0.0102%" height="15" fill="rgb(226,99,4)" fg:x="77088" fg:w="8"/><text x="98.5552%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="98.3052%" y="1893" width="0.0102%" height="15" fill="rgb(239,203,43)" fg:x="77088" fg:w="8"/><text x="98.5552%" y="1903.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="98.3052%" y="1877" width="0.0102%" height="15" fill="rgb(246,1,45)" fg:x="77088" fg:w="8"/><text x="98.5552%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="98.3052%" y="1861" width="0.0102%" height="15" fill="rgb(231,42,52)" fg:x="77088" fg:w="8"/><text x="98.5552%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="98.3052%" y="1845" width="0.0102%" height="15" fill="rgb(240,13,50)" fg:x="77088" fg:w="8"/><text x="98.5552%" y="1855.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (19 samples, 0.02%)</title><rect x="98.3269%" y="1941" width="0.0242%" height="15" fill="rgb(225,81,14)" fg:x="77105" fg:w="19"/><text x="98.5769%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (19 samples, 0.02%)</title><rect x="98.3269%" y="1925" width="0.0242%" height="15" fill="rgb(216,182,23)" fg:x="77105" fg:w="19"/><text x="98.5769%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.02%)</title><rect x="98.3269%" y="1909" width="0.0242%" height="15" fill="rgb(233,137,19)" fg:x="77105" fg:w="19"/><text x="98.5769%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="98.3269%" y="1893" width="0.0242%" height="15" fill="rgb(242,61,46)" fg:x="77105" fg:w="19"/><text x="98.5769%" y="1903.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="98.3294%" y="1877" width="0.0217%" height="15" fill="rgb(221,168,51)" fg:x="77107" fg:w="17"/><text x="98.5794%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="98.3294%" y="1861" width="0.0217%" height="15" fill="rgb(238,48,15)" fg:x="77107" fg:w="17"/><text x="98.5794%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="98.3294%" y="1845" width="0.0217%" height="15" fill="rgb(216,13,16)" fg:x="77107" fg:w="17"/><text x="98.5794%" y="1855.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="98.3396%" y="1829" width="0.0115%" height="15" fill="rgb(223,185,34)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1839.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="98.3396%" y="1813" width="0.0115%" height="15" fill="rgb(228,94,42)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1823.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="98.3396%" y="1797" width="0.0115%" height="15" fill="rgb(218,166,43)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1807.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="98.3396%" y="1781" width="0.0115%" height="15" fill="rgb(232,30,50)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1791.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="98.3396%" y="1765" width="0.0115%" height="15" fill="rgb(245,206,45)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.01%)</title><rect x="98.3396%" y="1749" width="0.0115%" height="15" fill="rgb(220,56,22)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="98.3396%" y="1733" width="0.0115%" height="15" fill="rgb(239,129,38)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.3396%" y="1717" width="0.0115%" height="15" fill="rgb(207,68,41)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1727.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (9 samples, 0.01%)</title><rect x="98.3396%" y="1701" width="0.0115%" height="15" fill="rgb(221,21,7)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1711.50"></text></g><g><title>&lt;rayon::iter::flat_map_iter::FlatMapIterFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.01%)</title><rect x="98.3396%" y="1685" width="0.0115%" height="15" fill="rgb(240,33,25)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1695.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.01%)</title><rect x="98.3396%" y="1669" width="0.0115%" height="15" fill="rgb(242,119,10)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1679.50"></text></g><g><title>&lt;rayon::iter::while_some::WhileSomeFolder&lt;C&gt; as rayon::iter::plumbing::Folder&lt;core::option::Option&lt;T&gt;&gt;&gt;::consume_iter (9 samples, 0.01%)</title><rect x="98.3396%" y="1653" width="0.0115%" height="15" fill="rgb(214,149,40)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1663.50"></text></g><g><title>&lt;rayon::iter::noop::NoopConsumer as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.01%)</title><rect x="98.3396%" y="1637" width="0.0115%" height="15" fill="rgb(228,25,36)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.01%)</title><rect x="98.3396%" y="1621" width="0.0115%" height="15" fill="rgb(222,59,15)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="98.3396%" y="1605" width="0.0115%" height="15" fill="rgb(218,170,0)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="98.3396%" y="1589" width="0.0115%" height="15" fill="rgb(232,173,23)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="98.3396%" y="1573" width="0.0115%" height="15" fill="rgb(218,116,1)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="98.3396%" y="1557" width="0.0115%" height="15" fill="rgb(207,34,4)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="98.3396%" y="1541" width="0.0115%" height="15" fill="rgb(229,54,52)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="98.3396%" y="1525" width="0.0115%" height="15" fill="rgb(211,86,23)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1535.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (9 samples, 0.01%)</title><rect x="98.3396%" y="1509" width="0.0115%" height="15" fill="rgb(254,153,34)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="98.3396%" y="1493" width="0.0115%" height="15" fill="rgb(219,220,14)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (9 samples, 0.01%)</title><rect x="98.3396%" y="1477" width="0.0115%" height="15" fill="rgb(247,8,26)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="98.3396%" y="1461" width="0.0115%" height="15" fill="rgb(213,129,42)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.01%)</title><rect x="98.3396%" y="1445" width="0.0115%" height="15" fill="rgb(225,95,41)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1455.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (9 samples, 0.01%)</title><rect x="98.3396%" y="1429" width="0.0115%" height="15" fill="rgb(215,134,24)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1439.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::{{closure}} (9 samples, 0.01%)</title><rect x="98.3396%" y="1413" width="0.0115%" height="15" fill="rgb(235,23,54)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (9 samples, 0.01%)</title><rect x="98.3396%" y="1397" width="0.0115%" height="15" fill="rgb(229,96,31)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.01%)</title><rect x="98.3396%" y="1381" width="0.0115%" height="15" fill="rgb(206,111,12)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.01%)</title><rect x="98.3396%" y="1365" width="0.0115%" height="15" fill="rgb(222,177,8)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1375.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (9 samples, 0.01%)</title><rect x="98.3396%" y="1349" width="0.0115%" height="15" fill="rgb(251,36,52)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1359.50"></text></g><g><title>aptos_db::state_store::StateStore::put_value_sets::{{closure}}::{{closure}} (9 samples, 0.01%)</title><rect x="98.3396%" y="1333" width="0.0115%" height="15" fill="rgb(216,182,29)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1343.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (9 samples, 0.01%)</title><rect x="98.3396%" y="1317" width="0.0115%" height="15" fill="rgb(241,145,50)" fg:x="77115" fg:w="9"/><text x="98.5896%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (9 samples, 0.01%)</title><rect x="98.3511%" y="1941" width="0.0115%" height="15" fill="rgb(231,71,35)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1951.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (9 samples, 0.01%)</title><rect x="98.3511%" y="1925" width="0.0115%" height="15" fill="rgb(218,22,17)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1935.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (9 samples, 0.01%)</title><rect x="98.3511%" y="1909" width="0.0115%" height="15" fill="rgb(225,227,6)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1919.50"></text></g><g><title>rayon_core::job::JobRef::execute (9 samples, 0.01%)</title><rect x="98.3511%" y="1893" width="0.0115%" height="15" fill="rgb(224,204,17)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1903.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9 samples, 0.01%)</title><rect x="98.3511%" y="1877" width="0.0115%" height="15" fill="rgb(227,61,28)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1887.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="98.3511%" y="1861" width="0.0115%" height="15" fill="rgb(242,148,23)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1871.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="98.3511%" y="1845" width="0.0115%" height="15" fill="rgb(237,105,33)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1855.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="98.3511%" y="1829" width="0.0115%" height="15" fill="rgb(238,218,40)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1839.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="98.3511%" y="1813" width="0.0115%" height="15" fill="rgb(209,126,11)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1823.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="98.3511%" y="1797" width="0.0115%" height="15" fill="rgb(245,90,11)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1807.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (9 samples, 0.01%)</title><rect x="98.3511%" y="1781" width="0.0115%" height="15" fill="rgb(211,195,10)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1791.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.01%)</title><rect x="98.3511%" y="1765" width="0.0115%" height="15" fill="rgb(231,45,45)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="98.3511%" y="1749" width="0.0115%" height="15" fill="rgb(246,100,43)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.3511%" y="1733" width="0.0115%" height="15" fill="rgb(241,193,8)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1743.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="98.3511%" y="1717" width="0.0115%" height="15" fill="rgb(208,76,19)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1727.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="98.3511%" y="1701" width="0.0115%" height="15" fill="rgb(223,69,40)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="98.3511%" y="1685" width="0.0115%" height="15" fill="rgb(207,120,39)" fg:x="77124" fg:w="9"/><text x="98.6011%" y="1695.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (402 samples, 0.51%)</title><rect x="97.8729%" y="2741" width="0.5126%" height="15" fill="rgb(212,209,28)" fg:x="76749" fg:w="402"/><text x="98.1229%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (402 samples, 0.51%)</title><rect x="97.8729%" y="2725" width="0.5126%" height="15" fill="rgb(246,82,29)" fg:x="76749" fg:w="402"/><text x="98.1229%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (402 samples, 0.51%)</title><rect x="97.8729%" y="2709" width="0.5126%" height="15" fill="rgb(239,6,40)" fg:x="76749" fg:w="402"/><text x="98.1229%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (392 samples, 0.50%)</title><rect x="97.8857%" y="2693" width="0.4999%" height="15" fill="rgb(228,181,35)" fg:x="76759" fg:w="392"/><text x="98.1357%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (392 samples, 0.50%)</title><rect x="97.8857%" y="2677" width="0.4999%" height="15" fill="rgb(238,151,2)" fg:x="76759" fg:w="392"/><text x="98.1357%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (392 samples, 0.50%)</title><rect x="97.8857%" y="2661" width="0.4999%" height="15" fill="rgb(236,94,18)" fg:x="76759" fg:w="392"/><text x="98.1357%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (263 samples, 0.34%)</title><rect x="98.0502%" y="2645" width="0.3354%" height="15" fill="rgb(208,38,14)" fg:x="76888" fg:w="263"/><text x="98.3002%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (263 samples, 0.34%)</title><rect x="98.0502%" y="2629" width="0.3354%" height="15" fill="rgb(234,215,27)" fg:x="76888" fg:w="263"/><text x="98.3002%" y="2639.50"></text></g><g><title>std::panicking::try (263 samples, 0.34%)</title><rect x="98.0502%" y="2613" width="0.3354%" height="15" fill="rgb(254,211,53)" fg:x="76888" fg:w="263"/><text x="98.3002%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (263 samples, 0.34%)</title><rect x="98.0502%" y="2597" width="0.3354%" height="15" fill="rgb(216,175,11)" fg:x="76888" fg:w="263"/><text x="98.3002%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (263 samples, 0.34%)</title><rect x="98.0502%" y="2581" width="0.3354%" height="15" fill="rgb(246,179,26)" fg:x="76888" fg:w="263"/><text x="98.3002%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (263 samples, 0.34%)</title><rect x="98.0502%" y="2565" width="0.3354%" height="15" fill="rgb(249,19,52)" fg:x="76888" fg:w="263"/><text x="98.3002%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (263 samples, 0.34%)</title><rect x="98.0502%" y="2549" width="0.3354%" height="15" fill="rgb(230,42,52)" fg:x="76888" fg:w="263"/><text x="98.3002%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (263 samples, 0.34%)</title><rect x="98.0502%" y="2533" width="0.3354%" height="15" fill="rgb(221,171,0)" fg:x="76888" fg:w="263"/><text x="98.3002%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (255 samples, 0.33%)</title><rect x="98.0604%" y="2517" width="0.3252%" height="15" fill="rgb(222,177,40)" fg:x="76896" fg:w="255"/><text x="98.3104%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (255 samples, 0.33%)</title><rect x="98.0604%" y="2501" width="0.3252%" height="15" fill="rgb(247,34,16)" fg:x="76896" fg:w="255"/><text x="98.3104%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (255 samples, 0.33%)</title><rect x="98.0604%" y="2485" width="0.3252%" height="15" fill="rgb(213,217,37)" fg:x="76896" fg:w="255"/><text x="98.3104%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (164 samples, 0.21%)</title><rect x="98.1764%" y="2469" width="0.2091%" height="15" fill="rgb(231,189,24)" fg:x="76987" fg:w="164"/><text x="98.4264%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (164 samples, 0.21%)</title><rect x="98.1764%" y="2453" width="0.2091%" height="15" fill="rgb(214,22,9)" fg:x="76987" fg:w="164"/><text x="98.4264%" y="2463.50"></text></g><g><title>std::panicking::try (164 samples, 0.21%)</title><rect x="98.1764%" y="2437" width="0.2091%" height="15" fill="rgb(212,70,22)" fg:x="76987" fg:w="164"/><text x="98.4264%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (164 samples, 0.21%)</title><rect x="98.1764%" y="2421" width="0.2091%" height="15" fill="rgb(249,64,51)" fg:x="76987" fg:w="164"/><text x="98.4264%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (164 samples, 0.21%)</title><rect x="98.1764%" y="2405" width="0.2091%" height="15" fill="rgb(249,148,20)" fg:x="76987" fg:w="164"/><text x="98.4264%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (164 samples, 0.21%)</title><rect x="98.1764%" y="2389" width="0.2091%" height="15" fill="rgb(246,46,48)" fg:x="76987" fg:w="164"/><text x="98.4264%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (164 samples, 0.21%)</title><rect x="98.1764%" y="2373" width="0.2091%" height="15" fill="rgb(217,34,48)" fg:x="76987" fg:w="164"/><text x="98.4264%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (164 samples, 0.21%)</title><rect x="98.1764%" y="2357" width="0.2091%" height="15" fill="rgb(222,45,26)" fg:x="76987" fg:w="164"/><text x="98.4264%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (155 samples, 0.20%)</title><rect x="98.1879%" y="2341" width="0.1977%" height="15" fill="rgb(230,201,36)" fg:x="76996" fg:w="155"/><text x="98.4379%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (155 samples, 0.20%)</title><rect x="98.1879%" y="2325" width="0.1977%" height="15" fill="rgb(217,30,43)" fg:x="76996" fg:w="155"/><text x="98.4379%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (155 samples, 0.20%)</title><rect x="98.1879%" y="2309" width="0.1977%" height="15" fill="rgb(230,197,40)" fg:x="76996" fg:w="155"/><text x="98.4379%" y="2319.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (86 samples, 0.11%)</title><rect x="98.2759%" y="2293" width="0.1097%" height="15" fill="rgb(239,181,18)" fg:x="77065" fg:w="86"/><text x="98.5259%" y="2303.50"></text></g><g><title>std::panic::catch_unwind (86 samples, 0.11%)</title><rect x="98.2759%" y="2277" width="0.1097%" height="15" fill="rgb(222,60,39)" fg:x="77065" fg:w="86"/><text x="98.5259%" y="2287.50"></text></g><g><title>std::panicking::try (86 samples, 0.11%)</title><rect x="98.2759%" y="2261" width="0.1097%" height="15" fill="rgb(210,60,22)" fg:x="77065" fg:w="86"/><text x="98.5259%" y="2271.50"></text></g><g><title>std::panicking::try::do_call (86 samples, 0.11%)</title><rect x="98.2759%" y="2245" width="0.1097%" height="15" fill="rgb(239,213,48)" fg:x="77065" fg:w="86"/><text x="98.5259%" y="2255.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (86 samples, 0.11%)</title><rect x="98.2759%" y="2229" width="0.1097%" height="15" fill="rgb(253,214,23)" fg:x="77065" fg:w="86"/><text x="98.5259%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (86 samples, 0.11%)</title><rect x="98.2759%" y="2213" width="0.1097%" height="15" fill="rgb(211,98,45)" fg:x="77065" fg:w="86"/><text x="98.5259%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (86 samples, 0.11%)</title><rect x="98.2759%" y="2197" width="0.1097%" height="15" fill="rgb(239,130,44)" fg:x="77065" fg:w="86"/><text x="98.5259%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (86 samples, 0.11%)</title><rect x="98.2759%" y="2181" width="0.1097%" height="15" fill="rgb(222,181,35)" fg:x="77065" fg:w="86"/><text x="98.5259%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (84 samples, 0.11%)</title><rect x="98.2784%" y="2165" width="0.1071%" height="15" fill="rgb(219,219,49)" fg:x="77067" fg:w="84"/><text x="98.5284%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (84 samples, 0.11%)</title><rect x="98.2784%" y="2149" width="0.1071%" height="15" fill="rgb(227,161,51)" fg:x="77067" fg:w="84"/><text x="98.5284%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (84 samples, 0.11%)</title><rect x="98.2784%" y="2133" width="0.1071%" height="15" fill="rgb(239,112,27)" fg:x="77067" fg:w="84"/><text x="98.5284%" y="2143.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (50 samples, 0.06%)</title><rect x="98.3218%" y="2117" width="0.0638%" height="15" fill="rgb(248,122,18)" fg:x="77101" fg:w="50"/><text x="98.5718%" y="2127.50"></text></g><g><title>std::panic::catch_unwind (50 samples, 0.06%)</title><rect x="98.3218%" y="2101" width="0.0638%" height="15" fill="rgb(245,130,23)" fg:x="77101" fg:w="50"/><text x="98.5718%" y="2111.50"></text></g><g><title>std::panicking::try (50 samples, 0.06%)</title><rect x="98.3218%" y="2085" width="0.0638%" height="15" fill="rgb(211,225,28)" fg:x="77101" fg:w="50"/><text x="98.5718%" y="2095.50"></text></g><g><title>std::panicking::try::do_call (50 samples, 0.06%)</title><rect x="98.3218%" y="2069" width="0.0638%" height="15" fill="rgb(242,105,44)" fg:x="77101" fg:w="50"/><text x="98.5718%" y="2079.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50 samples, 0.06%)</title><rect x="98.3218%" y="2053" width="0.0638%" height="15" fill="rgb(216,183,46)" fg:x="77101" fg:w="50"/><text x="98.5718%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (50 samples, 0.06%)</title><rect x="98.3218%" y="2037" width="0.0638%" height="15" fill="rgb(227,112,9)" fg:x="77101" fg:w="50"/><text x="98.5718%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (50 samples, 0.06%)</title><rect x="98.3218%" y="2021" width="0.0638%" height="15" fill="rgb(244,21,0)" fg:x="77101" fg:w="50"/><text x="98.5718%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (50 samples, 0.06%)</title><rect x="98.3218%" y="2005" width="0.0638%" height="15" fill="rgb(236,185,14)" fg:x="77101" fg:w="50"/><text x="98.5718%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (46 samples, 0.06%)</title><rect x="98.3269%" y="1989" width="0.0587%" height="15" fill="rgb(236,170,30)" fg:x="77105" fg:w="46"/><text x="98.5769%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (46 samples, 0.06%)</title><rect x="98.3269%" y="1973" width="0.0587%" height="15" fill="rgb(209,198,51)" fg:x="77105" fg:w="46"/><text x="98.5769%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (46 samples, 0.06%)</title><rect x="98.3269%" y="1957" width="0.0587%" height="15" fill="rgb(205,171,26)" fg:x="77105" fg:w="46"/><text x="98.5769%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.02%)</title><rect x="98.3626%" y="1941" width="0.0230%" height="15" fill="rgb(246,41,49)" fg:x="77133" fg:w="18"/><text x="98.6126%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="98.3626%" y="1925" width="0.0230%" height="15" fill="rgb(240,229,12)" fg:x="77133" fg:w="18"/><text x="98.6126%" y="1935.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="98.3626%" y="1909" width="0.0230%" height="15" fill="rgb(212,8,54)" fg:x="77133" fg:w="18"/><text x="98.6126%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="98.3626%" y="1893" width="0.0230%" height="15" fill="rgb(230,114,13)" fg:x="77133" fg:w="18"/><text x="98.6126%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="98.3626%" y="1877" width="0.0230%" height="15" fill="rgb(229,130,28)" fg:x="77133" fg:w="18"/><text x="98.6126%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (18 samples, 0.02%)</title><rect x="98.3626%" y="1861" width="0.0230%" height="15" fill="rgb(206,139,15)" fg:x="77133" fg:w="18"/><text x="98.6126%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.02%)</title><rect x="98.3626%" y="1845" width="0.0230%" height="15" fill="rgb(241,188,35)" fg:x="77133" fg:w="18"/><text x="98.6126%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="98.3626%" y="1829" width="0.0230%" height="15" fill="rgb(208,224,26)" fg:x="77133" fg:w="18"/><text x="98.6126%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.02%)</title><rect x="98.3677%" y="1813" width="0.0179%" height="15" fill="rgb(251,131,28)" fg:x="77137" fg:w="14"/><text x="98.6177%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.02%)</title><rect x="98.3677%" y="1797" width="0.0179%" height="15" fill="rgb(208,153,1)" fg:x="77137" fg:w="14"/><text x="98.6177%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.02%)</title><rect x="98.3677%" y="1781" width="0.0179%" height="15" fill="rgb(234,33,36)" fg:x="77137" fg:w="14"/><text x="98.6177%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="2613" width="0.0204%" height="15" fill="rgb(246,42,29)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="98.3856%" y="2597" width="0.0204%" height="15" fill="rgb(251,114,16)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2607.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.02%)</title><rect x="98.3856%" y="2581" width="0.0204%" height="15" fill="rgb(233,13,38)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2591.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.02%)</title><rect x="98.3856%" y="2565" width="0.0204%" height="15" fill="rgb(247,120,19)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2575.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="2549" width="0.0204%" height="15" fill="rgb(205,11,16)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2559.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (16 samples, 0.02%)</title><rect x="98.3856%" y="2533" width="0.0204%" height="15" fill="rgb(228,185,19)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2543.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.02%)</title><rect x="98.3856%" y="2517" width="0.0204%" height="15" fill="rgb(239,88,52)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2527.50"></text></g><g><title>std::panicking::try (16 samples, 0.02%)</title><rect x="98.3856%" y="2501" width="0.0204%" height="15" fill="rgb(219,23,1)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2511.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.02%)</title><rect x="98.3856%" y="2485" width="0.0204%" height="15" fill="rgb(253,177,16)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.02%)</title><rect x="98.3856%" y="2469" width="0.0204%" height="15" fill="rgb(225,150,40)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2479.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="2453" width="0.0204%" height="15" fill="rgb(208,108,30)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="2437" width="0.0204%" height="15" fill="rgb(214,122,4)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="98.3856%" y="2421" width="0.0204%" height="15" fill="rgb(229,74,37)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2431.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.02%)</title><rect x="98.3856%" y="2405" width="0.0204%" height="15" fill="rgb(233,61,41)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2415.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.02%)</title><rect x="98.3856%" y="2389" width="0.0204%" height="15" fill="rgb(238,191,5)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2399.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="2373" width="0.0204%" height="15" fill="rgb(233,78,24)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2383.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (16 samples, 0.02%)</title><rect x="98.3856%" y="2357" width="0.0204%" height="15" fill="rgb(211,142,8)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2367.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.02%)</title><rect x="98.3856%" y="2341" width="0.0204%" height="15" fill="rgb(253,38,53)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2351.50"></text></g><g><title>std::panicking::try (16 samples, 0.02%)</title><rect x="98.3856%" y="2325" width="0.0204%" height="15" fill="rgb(234,63,51)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2335.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.02%)</title><rect x="98.3856%" y="2309" width="0.0204%" height="15" fill="rgb(205,23,31)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2319.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.02%)</title><rect x="98.3856%" y="2293" width="0.0204%" height="15" fill="rgb(210,184,50)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2303.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="2277" width="0.0204%" height="15" fill="rgb(222,112,26)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="2261" width="0.0204%" height="15" fill="rgb(250,98,18)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="98.3856%" y="2245" width="0.0204%" height="15" fill="rgb(250,34,12)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2255.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.02%)</title><rect x="98.3856%" y="2229" width="0.0204%" height="15" fill="rgb(236,141,30)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2239.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.02%)</title><rect x="98.3856%" y="2213" width="0.0204%" height="15" fill="rgb(246,134,38)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2223.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="2197" width="0.0204%" height="15" fill="rgb(240,114,4)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2207.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (16 samples, 0.02%)</title><rect x="98.3856%" y="2181" width="0.0204%" height="15" fill="rgb(243,113,39)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2191.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.02%)</title><rect x="98.3856%" y="2165" width="0.0204%" height="15" fill="rgb(239,215,4)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2175.50"></text></g><g><title>std::panicking::try (16 samples, 0.02%)</title><rect x="98.3856%" y="2149" width="0.0204%" height="15" fill="rgb(236,229,45)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2159.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.02%)</title><rect x="98.3856%" y="2133" width="0.0204%" height="15" fill="rgb(242,2,6)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2143.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.02%)</title><rect x="98.3856%" y="2117" width="0.0204%" height="15" fill="rgb(239,108,21)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="2101" width="0.0204%" height="15" fill="rgb(215,168,34)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="2085" width="0.0204%" height="15" fill="rgb(238,31,17)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2095.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="98.3856%" y="2069" width="0.0204%" height="15" fill="rgb(220,133,11)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2079.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.02%)</title><rect x="98.3856%" y="2053" width="0.0204%" height="15" fill="rgb(212,158,23)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2063.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.02%)</title><rect x="98.3856%" y="2037" width="0.0204%" height="15" fill="rgb(223,172,7)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2047.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="2021" width="0.0204%" height="15" fill="rgb(244,3,52)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2031.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (16 samples, 0.02%)</title><rect x="98.3856%" y="2005" width="0.0204%" height="15" fill="rgb(207,69,27)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="2015.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.02%)</title><rect x="98.3856%" y="1989" width="0.0204%" height="15" fill="rgb(213,136,45)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="1999.50"></text></g><g><title>std::panicking::try (16 samples, 0.02%)</title><rect x="98.3856%" y="1973" width="0.0204%" height="15" fill="rgb(218,79,17)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="1983.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.02%)</title><rect x="98.3856%" y="1957" width="0.0204%" height="15" fill="rgb(216,106,36)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="1967.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.02%)</title><rect x="98.3856%" y="1941" width="0.0204%" height="15" fill="rgb(251,27,45)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="1925" width="0.0204%" height="15" fill="rgb(232,21,34)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="1909" width="0.0204%" height="15" fill="rgb(249,191,16)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="98.3856%" y="1893" width="0.0204%" height="15" fill="rgb(224,88,20)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="1903.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.02%)</title><rect x="98.3856%" y="1877" width="0.0204%" height="15" fill="rgb(237,93,27)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.02%)</title><rect x="98.3856%" y="1861" width="0.0204%" height="15" fill="rgb(226,198,48)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.02%)</title><rect x="98.3856%" y="1845" width="0.0204%" height="15" fill="rgb(207,162,53)" fg:x="77151" fg:w="16"/><text x="98.6356%" y="1855.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="98.3958%" y="1829" width="0.0102%" height="15" fill="rgb(207,169,9)" fg:x="77159" fg:w="8"/><text x="98.6458%" y="1839.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="98.3958%" y="1813" width="0.0102%" height="15" fill="rgb(224,166,46)" fg:x="77159" fg:w="8"/><text x="98.6458%" y="1823.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="98.3958%" y="1797" width="0.0102%" height="15" fill="rgb(233,26,6)" fg:x="77159" fg:w="8"/><text x="98.6458%" y="1807.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="98.3958%" y="1781" width="0.0102%" height="15" fill="rgb(218,106,45)" fg:x="77159" fg:w="8"/><text x="98.6458%" y="1791.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="98.3958%" y="1765" width="0.0102%" height="15" fill="rgb(240,217,4)" fg:x="77159" fg:w="8"/><text x="98.6458%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.01%)</title><rect x="98.3958%" y="1749" width="0.0102%" height="15" fill="rgb(246,171,10)" fg:x="77159" fg:w="8"/><text x="98.6458%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="98.3958%" y="1733" width="0.0102%" height="15" fill="rgb(223,197,30)" fg:x="77159" fg:w="8"/><text x="98.6458%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="98.3958%" y="1717" width="0.0102%" height="15" fill="rgb(207,92,16)" fg:x="77159" fg:w="8"/><text x="98.6458%" y="1727.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="98.3958%" y="1701" width="0.0102%" height="15" fill="rgb(211,6,44)" fg:x="77159" fg:w="8"/><text x="98.6458%" y="1711.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="98.3958%" y="1685" width="0.0102%" height="15" fill="rgb(219,139,2)" fg:x="77159" fg:w="8"/><text x="98.6458%" y="1695.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="98.3958%" y="1669" width="0.0102%" height="15" fill="rgb(224,103,21)" fg:x="77159" fg:w="8"/><text x="98.6458%" y="1679.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (432 samples, 0.55%)</title><rect x="97.8563%" y="2965" width="0.5509%" height="15" fill="rgb(254,110,48)" fg:x="76736" fg:w="432"/><text x="98.1063%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (432 samples, 0.55%)</title><rect x="97.8563%" y="2949" width="0.5509%" height="15" fill="rgb(212,88,19)" fg:x="76736" fg:w="432"/><text x="98.1063%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (432 samples, 0.55%)</title><rect x="97.8563%" y="2933" width="0.5509%" height="15" fill="rgb(248,103,6)" fg:x="76736" fg:w="432"/><text x="98.1063%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (432 samples, 0.55%)</title><rect x="97.8563%" y="2917" width="0.5509%" height="15" fill="rgb(214,53,46)" fg:x="76736" fg:w="432"/><text x="98.1063%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (432 samples, 0.55%)</title><rect x="97.8563%" y="2901" width="0.5509%" height="15" fill="rgb(236,190,24)" fg:x="76736" fg:w="432"/><text x="98.1063%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (419 samples, 0.53%)</title><rect x="97.8729%" y="2885" width="0.5343%" height="15" fill="rgb(254,58,28)" fg:x="76749" fg:w="419"/><text x="98.1229%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (419 samples, 0.53%)</title><rect x="97.8729%" y="2869" width="0.5343%" height="15" fill="rgb(243,63,27)" fg:x="76749" fg:w="419"/><text x="98.1229%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (419 samples, 0.53%)</title><rect x="97.8729%" y="2853" width="0.5343%" height="15" fill="rgb(206,81,20)" fg:x="76749" fg:w="419"/><text x="98.1229%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (419 samples, 0.53%)</title><rect x="97.8729%" y="2837" width="0.5343%" height="15" fill="rgb(252,69,51)" fg:x="76749" fg:w="419"/><text x="98.1229%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (419 samples, 0.53%)</title><rect x="97.8729%" y="2821" width="0.5343%" height="15" fill="rgb(222,213,4)" fg:x="76749" fg:w="419"/><text x="98.1229%" y="2831.50"></text></g><g><title>std::panicking::try (419 samples, 0.53%)</title><rect x="97.8729%" y="2805" width="0.5343%" height="15" fill="rgb(226,198,12)" fg:x="76749" fg:w="419"/><text x="98.1229%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (419 samples, 0.53%)</title><rect x="97.8729%" y="2789" width="0.5343%" height="15" fill="rgb(248,115,11)" fg:x="76749" fg:w="419"/><text x="98.1229%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (419 samples, 0.53%)</title><rect x="97.8729%" y="2773" width="0.5343%" height="15" fill="rgb(221,148,54)" fg:x="76749" fg:w="419"/><text x="98.1229%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (419 samples, 0.53%)</title><rect x="97.8729%" y="2757" width="0.5343%" height="15" fill="rgb(214,209,51)" fg:x="76749" fg:w="419"/><text x="98.1229%" y="2767.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (17 samples, 0.02%)</title><rect x="98.3856%" y="2741" width="0.0217%" height="15" fill="rgb(249,116,53)" fg:x="77151" fg:w="17"/><text x="98.6356%" y="2751.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="98.3856%" y="2725" width="0.0217%" height="15" fill="rgb(248,170,1)" fg:x="77151" fg:w="17"/><text x="98.6356%" y="2735.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="98.3856%" y="2709" width="0.0217%" height="15" fill="rgb(244,105,10)" fg:x="77151" fg:w="17"/><text x="98.6356%" y="2719.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="98.3856%" y="2693" width="0.0217%" height="15" fill="rgb(229,100,5)" fg:x="77151" fg:w="17"/><text x="98.6356%" y="2703.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="98.3856%" y="2677" width="0.0217%" height="15" fill="rgb(233,221,39)" fg:x="77151" fg:w="17"/><text x="98.6356%" y="2687.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="98.3856%" y="2661" width="0.0217%" height="15" fill="rgb(233,88,21)" fg:x="77151" fg:w="17"/><text x="98.6356%" y="2671.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="98.3856%" y="2645" width="0.0217%" height="15" fill="rgb(206,13,0)" fg:x="77151" fg:w="17"/><text x="98.6356%" y="2655.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.02%)</title><rect x="98.3856%" y="2629" width="0.0217%" height="15" fill="rgb(242,15,35)" fg:x="77151" fg:w="17"/><text x="98.6356%" y="2639.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (8 samples, 0.01%)</title><rect x="98.4123%" y="2885" width="0.0102%" height="15" fill="rgb(247,142,41)" fg:x="77172" fg:w="8"/><text x="98.6623%" y="2895.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.01%)</title><rect x="98.4123%" y="2869" width="0.0102%" height="15" fill="rgb(245,51,29)" fg:x="77172" fg:w="8"/><text x="98.6623%" y="2879.50"></text></g><g><title>&lt;aptos_logger::aptos_logger::FileWriter as aptos_logger::aptos_logger::Writer&gt;::write (13 samples, 0.02%)</title><rect x="98.4085%" y="2933" width="0.0166%" height="15" fill="rgb(228,209,43)" fg:x="77169" fg:w="13"/><text x="98.6585%" y="2943.50"></text></g><g><title>std::io::Write::write_fmt (13 samples, 0.02%)</title><rect x="98.4085%" y="2917" width="0.0166%" height="15" fill="rgb(233,185,9)" fg:x="77169" fg:w="13"/><text x="98.6585%" y="2927.50"></text></g><g><title>core::fmt::write (11 samples, 0.01%)</title><rect x="98.4111%" y="2901" width="0.0140%" height="15" fill="rgb(226,93,0)" fg:x="77171" fg:w="11"/><text x="98.6611%" y="2911.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_recv (9 samples, 0.01%)</title><rect x="98.4251%" y="2869" width="0.0115%" height="15" fill="rgb(245,194,43)" fg:x="77182" fg:w="9"/><text x="98.6751%" y="2879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (9 samples, 0.01%)</title><rect x="98.4251%" y="2853" width="0.0115%" height="15" fill="rgb(211,145,34)" fg:x="77182" fg:w="9"/><text x="98.6751%" y="2863.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.01%)</title><rect x="98.4251%" y="2837" width="0.0115%" height="15" fill="rgb(231,228,28)" fg:x="77182" fg:w="9"/><text x="98.6751%" y="2847.50"></text></g><g><title>&lt;std::sync::mpsc::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="98.4251%" y="2933" width="0.0230%" height="15" fill="rgb(236,149,4)" fg:x="77182" fg:w="18"/><text x="98.6751%" y="2943.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (18 samples, 0.02%)</title><rect x="98.4251%" y="2917" width="0.0230%" height="15" fill="rgb(234,114,38)" fg:x="77182" fg:w="18"/><text x="98.6751%" y="2927.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv (18 samples, 0.02%)</title><rect x="98.4251%" y="2901" width="0.0230%" height="15" fill="rgb(246,132,51)" fg:x="77182" fg:w="18"/><text x="98.6751%" y="2911.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv (18 samples, 0.02%)</title><rect x="98.4251%" y="2885" width="0.0230%" height="15" fill="rgb(251,137,22)" fg:x="77182" fg:w="18"/><text x="98.6751%" y="2895.50"></text></g><g><title>std::sync::mpmc::context::Context::with (9 samples, 0.01%)</title><rect x="98.4366%" y="2869" width="0.0115%" height="15" fill="rgb(243,59,52)" fg:x="77191" fg:w="9"/><text x="98.6866%" y="2879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.01%)</title><rect x="98.4366%" y="2853" width="0.0115%" height="15" fill="rgb(239,56,28)" fg:x="77191" fg:w="9"/><text x="98.6866%" y="2863.50"></text></g><g><title>std::sync::mpmc::context::Context::with::{{closure}} (9 samples, 0.01%)</title><rect x="98.4366%" y="2837" width="0.0115%" height="15" fill="rgb(218,168,27)" fg:x="77191" fg:w="9"/><text x="98.6866%" y="2847.50"></text></g><g><title>std::sync::mpmc::context::Context::with::{{closure}} (9 samples, 0.01%)</title><rect x="98.4366%" y="2821" width="0.0115%" height="15" fill="rgb(232,165,11)" fg:x="77191" fg:w="9"/><text x="98.6866%" y="2831.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv::{{closure}} (9 samples, 0.01%)</title><rect x="98.4366%" y="2805" width="0.0115%" height="15" fill="rgb(253,55,41)" fg:x="77191" fg:w="9"/><text x="98.6866%" y="2815.50"></text></g><g><title>core::fmt::Write::write_fmt (19 samples, 0.02%)</title><rect x="98.4506%" y="2917" width="0.0242%" height="15" fill="rgb(233,206,24)" fg:x="77202" fg:w="19"/><text x="98.7006%" y="2927.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (19 samples, 0.02%)</title><rect x="98.4506%" y="2901" width="0.0242%" height="15" fill="rgb(220,199,8)" fg:x="77202" fg:w="19"/><text x="98.7006%" y="2911.50"></text></g><g><title>core::fmt::write (19 samples, 0.02%)</title><rect x="98.4506%" y="2885" width="0.0242%" height="15" fill="rgb(254,65,26)" fg:x="77202" fg:w="19"/><text x="98.7006%" y="2895.50"></text></g><g><title>core::fmt::rt::Argument::fmt (12 samples, 0.02%)</title><rect x="98.4595%" y="2869" width="0.0153%" height="15" fill="rgb(253,102,23)" fg:x="77209" fg:w="12"/><text x="98.7095%" y="2879.50"></text></g><g><title>aptos_logger::aptos_logger::text_format (22 samples, 0.03%)</title><rect x="98.4480%" y="2933" width="0.0281%" height="15" fill="rgb(231,103,35)" fg:x="77200" fg:w="22"/><text x="98.6980%" y="2943.50"></text></g><g><title>aptos_logger::aptos_logger::AptosDataBuilder::build_logger::{{closure}} (64 samples, 0.08%)</title><rect x="98.4085%" y="2965" width="0.0816%" height="15" fill="rgb(238,26,10)" fg:x="77169" fg:w="64"/><text x="98.6585%" y="2975.50"></text></g><g><title>aptos_logger::aptos_logger::LoggerService::run (64 samples, 0.08%)</title><rect x="98.4085%" y="2949" width="0.0816%" height="15" fill="rgb(234,191,34)" fg:x="77169" fg:w="64"/><text x="98.6585%" y="2959.50"></text></g><g><title>__GI___clone3 (498 samples, 0.64%)</title><rect x="97.8563%" y="3173" width="0.6351%" height="15" fill="rgb(206,210,9)" fg:x="76736" fg:w="498"/><text x="98.1063%" y="3183.50"></text></g><g><title>start_thread (498 samples, 0.64%)</title><rect x="97.8563%" y="3157" width="0.6351%" height="15" fill="rgb(219,155,3)" fg:x="76736" fg:w="498"/><text x="98.1063%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (498 samples, 0.64%)</title><rect x="97.8563%" y="3141" width="0.6351%" height="15" fill="rgb(221,62,52)" fg:x="76736" fg:w="498"/><text x="98.1063%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (498 samples, 0.64%)</title><rect x="97.8563%" y="3125" width="0.6351%" height="15" fill="rgb(215,197,36)" fg:x="76736" fg:w="498"/><text x="98.1063%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (498 samples, 0.64%)</title><rect x="97.8563%" y="3109" width="0.6351%" height="15" fill="rgb(226,222,6)" fg:x="76736" fg:w="498"/><text x="98.1063%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (498 samples, 0.64%)</title><rect x="97.8563%" y="3093" width="0.6351%" height="15" fill="rgb(215,58,28)" fg:x="76736" fg:w="498"/><text x="98.1063%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (498 samples, 0.64%)</title><rect x="97.8563%" y="3077" width="0.6351%" height="15" fill="rgb(212,148,2)" fg:x="76736" fg:w="498"/><text x="98.1063%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (498 samples, 0.64%)</title><rect x="97.8563%" y="3061" width="0.6351%" height="15" fill="rgb(208,21,42)" fg:x="76736" fg:w="498"/><text x="98.1063%" y="3071.50"></text></g><g><title>std::panicking::try (498 samples, 0.64%)</title><rect x="97.8563%" y="3045" width="0.6351%" height="15" fill="rgb(209,107,26)" fg:x="76736" fg:w="498"/><text x="98.1063%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (498 samples, 0.64%)</title><rect x="97.8563%" y="3029" width="0.6351%" height="15" fill="rgb(254,60,47)" fg:x="76736" fg:w="498"/><text x="98.1063%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (498 samples, 0.64%)</title><rect x="97.8563%" y="3013" width="0.6351%" height="15" fill="rgb(207,226,45)" fg:x="76736" fg:w="498"/><text x="98.1063%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (498 samples, 0.64%)</title><rect x="97.8563%" y="2997" width="0.6351%" height="15" fill="rgb(223,124,22)" fg:x="76736" fg:w="498"/><text x="98.1063%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (498 samples, 0.64%)</title><rect x="97.8563%" y="2981" width="0.6351%" height="15" fill="rgb(240,162,13)" fg:x="76736" fg:w="498"/><text x="98.1063%" y="2991.50"></text></g><g><title>aptos (499 samples, 0.64%)</title><rect x="97.8563%" y="3189" width="0.6363%" height="15" fill="rgb(244,199,31)" fg:x="76736" fg:w="499"/><text x="98.1063%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (9 samples, 0.01%)</title><rect x="98.5399%" y="2549" width="0.0115%" height="15" fill="rgb(207,92,16)" fg:x="77272" fg:w="9"/><text x="98.7899%" y="2559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="98.5399%" y="2533" width="0.0115%" height="15" fill="rgb(215,31,19)" fg:x="77272" fg:w="9"/><text x="98.7899%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (9 samples, 0.01%)</title><rect x="98.5399%" y="2517" width="0.0115%" height="15" fill="rgb(245,118,14)" fg:x="77272" fg:w="9"/><text x="98.7899%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_vm::adapter_common::PreprocessedTransaction&gt; (25 samples, 0.03%)</title><rect x="98.5271%" y="2661" width="0.0319%" height="15" fill="rgb(248,12,46)" fg:x="77262" fg:w="25"/><text x="98.7771%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aptos_types::transaction::SignatureCheckedTransaction&gt;&gt; (23 samples, 0.03%)</title><rect x="98.5297%" y="2645" width="0.0293%" height="15" fill="rgb(209,119,0)" fg:x="77264" fg:w="23"/><text x="98.7797%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignatureCheckedTransaction&gt; (23 samples, 0.03%)</title><rect x="98.5297%" y="2629" width="0.0293%" height="15" fill="rgb(254,51,44)" fg:x="77264" fg:w="23"/><text x="98.7797%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::SignedTransaction&gt; (23 samples, 0.03%)</title><rect x="98.5297%" y="2613" width="0.0293%" height="15" fill="rgb(253,182,35)" fg:x="77264" fg:w="23"/><text x="98.7797%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::RawTransaction&gt; (23 samples, 0.03%)</title><rect x="98.5297%" y="2597" width="0.0293%" height="15" fill="rgb(205,198,39)" fg:x="77264" fg:w="23"/><text x="98.7797%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionPayload&gt; (23 samples, 0.03%)</title><rect x="98.5297%" y="2581" width="0.0293%" height="15" fill="rgb(251,175,48)" fg:x="77264" fg:w="23"/><text x="98.7797%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::script::EntryFunction&gt; (17 samples, 0.02%)</title><rect x="98.5373%" y="2565" width="0.0217%" height="15" fill="rgb(239,38,17)" fg:x="77270" fg:w="17"/><text x="98.7873%" y="2575.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (29 samples, 0.04%)</title><rect x="98.5271%" y="2853" width="0.0370%" height="15" fill="rgb(212,101,8)" fg:x="77262" fg:w="29"/><text x="98.7771%" y="2863.50"></text></g><g><title>rayon_core::spawn::spawn_job::{{closure}} (29 samples, 0.04%)</title><rect x="98.5271%" y="2837" width="0.0370%" height="15" fill="rgb(228,35,17)" fg:x="77262" fg:w="29"/><text x="98.7771%" y="2847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (29 samples, 0.04%)</title><rect x="98.5271%" y="2821" width="0.0370%" height="15" fill="rgb(214,95,8)" fg:x="77262" fg:w="29"/><text x="98.7771%" y="2831.50"></text></g><g><title>std::panic::catch_unwind (29 samples, 0.04%)</title><rect x="98.5271%" y="2805" width="0.0370%" height="15" fill="rgb(210,176,35)" fg:x="77262" fg:w="29"/><text x="98.7771%" y="2815.50"></text></g><g><title>std::panicking::try (29 samples, 0.04%)</title><rect x="98.5271%" y="2789" width="0.0370%" height="15" fill="rgb(226,4,3)" fg:x="77262" fg:w="29"/><text x="98.7771%" y="2799.50"></text></g><g><title>std::panicking::try::do_call (29 samples, 0.04%)</title><rect x="98.5271%" y="2773" width="0.0370%" height="15" fill="rgb(232,133,14)" fg:x="77262" fg:w="29"/><text x="98.7771%" y="2783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29 samples, 0.04%)</title><rect x="98.5271%" y="2757" width="0.0370%" height="15" fill="rgb(250,191,8)" fg:x="77262" fg:w="29"/><text x="98.7771%" y="2767.50"></text></g><g><title>aptos_vm::block_executor::BlockAptosVM::execute_block::{{closure}} (29 samples, 0.04%)</title><rect x="98.5271%" y="2741" width="0.0370%" height="15" fill="rgb(213,12,45)" fg:x="77262" fg:w="29"/><text x="98.7771%" y="2751.50"></text></g><g><title>core::mem::drop (29 samples, 0.04%)</title><rect x="98.5271%" y="2725" width="0.0370%" height="15" fill="rgb(233,78,26)" fg:x="77262" fg:w="29"/><text x="98.7771%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_vm::adapter_common::PreprocessedTransaction&gt;&gt; (29 samples, 0.04%)</title><rect x="98.5271%" y="2709" width="0.0370%" height="15" fill="rgb(245,222,11)" fg:x="77262" fg:w="29"/><text x="98.7771%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.04%)</title><rect x="98.5271%" y="2693" width="0.0370%" height="15" fill="rgb(216,174,12)" fg:x="77262" fg:w="29"/><text x="98.7771%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_vm::adapter_common::PreprocessedTransaction]&gt; (29 samples, 0.04%)</title><rect x="98.5271%" y="2677" width="0.0370%" height="15" fill="rgb(213,15,9)" fg:x="77262" fg:w="29"/><text x="98.7771%" y="2687.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (15 samples, 0.02%)</title><rect x="98.5832%" y="1301" width="0.0191%" height="15" fill="rgb(238,103,32)" fg:x="77306" fg:w="15"/><text x="98.8332%" y="1311.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (15 samples, 0.02%)</title><rect x="98.5832%" y="1285" width="0.0191%" height="15" fill="rgb(245,85,15)" fg:x="77306" fg:w="15"/><text x="98.8332%" y="1295.50"></text></g><g><title>par_exec_0 (70 samples, 0.09%)</title><rect x="98.5271%" y="3189" width="0.0893%" height="15" fill="rgb(254,204,5)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="3199.50"></text></g><g><title>__GI___clone3 (70 samples, 0.09%)</title><rect x="98.5271%" y="3173" width="0.0893%" height="15" fill="rgb(231,178,15)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="3183.50"></text></g><g><title>start_thread (70 samples, 0.09%)</title><rect x="98.5271%" y="3157" width="0.0893%" height="15" fill="rgb(248,151,3)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (70 samples, 0.09%)</title><rect x="98.5271%" y="3141" width="0.0893%" height="15" fill="rgb(250,139,13)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (70 samples, 0.09%)</title><rect x="98.5271%" y="3125" width="0.0893%" height="15" fill="rgb(243,107,53)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (70 samples, 0.09%)</title><rect x="98.5271%" y="3109" width="0.0893%" height="15" fill="rgb(232,81,15)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (70 samples, 0.09%)</title><rect x="98.5271%" y="3093" width="0.0893%" height="15" fill="rgb(225,187,48)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (70 samples, 0.09%)</title><rect x="98.5271%" y="3077" width="0.0893%" height="15" fill="rgb(205,116,12)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (70 samples, 0.09%)</title><rect x="98.5271%" y="3061" width="0.0893%" height="15" fill="rgb(220,222,31)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="3071.50"></text></g><g><title>std::panicking::try (70 samples, 0.09%)</title><rect x="98.5271%" y="3045" width="0.0893%" height="15" fill="rgb(233,187,49)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (70 samples, 0.09%)</title><rect x="98.5271%" y="3029" width="0.0893%" height="15" fill="rgb(211,168,53)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (70 samples, 0.09%)</title><rect x="98.5271%" y="3013" width="0.0893%" height="15" fill="rgb(206,160,16)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (70 samples, 0.09%)</title><rect x="98.5271%" y="2997" width="0.0893%" height="15" fill="rgb(254,164,13)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (70 samples, 0.09%)</title><rect x="98.5271%" y="2981" width="0.0893%" height="15" fill="rgb(229,45,30)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (70 samples, 0.09%)</title><rect x="98.5271%" y="2965" width="0.0893%" height="15" fill="rgb(237,32,10)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (70 samples, 0.09%)</title><rect x="98.5271%" y="2949" width="0.0893%" height="15" fill="rgb(251,20,47)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (70 samples, 0.09%)</title><rect x="98.5271%" y="2933" width="0.0893%" height="15" fill="rgb(251,116,12)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (70 samples, 0.09%)</title><rect x="98.5271%" y="2917" width="0.0893%" height="15" fill="rgb(214,227,27)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (70 samples, 0.09%)</title><rect x="98.5271%" y="2901" width="0.0893%" height="15" fill="rgb(248,10,53)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (70 samples, 0.09%)</title><rect x="98.5271%" y="2885" width="0.0893%" height="15" fill="rgb(221,176,25)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (70 samples, 0.09%)</title><rect x="98.5271%" y="2869" width="0.0893%" height="15" fill="rgb(205,70,46)" fg:x="77262" fg:w="70"/><text x="98.7771%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (41 samples, 0.05%)</title><rect x="98.5641%" y="2853" width="0.0523%" height="15" fill="rgb(217,45,38)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (41 samples, 0.05%)</title><rect x="98.5641%" y="2837" width="0.0523%" height="15" fill="rgb(243,6,54)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (41 samples, 0.05%)</title><rect x="98.5641%" y="2821" width="0.0523%" height="15" fill="rgb(242,76,23)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2831.50"></text></g><g><title>std::panicking::try (41 samples, 0.05%)</title><rect x="98.5641%" y="2805" width="0.0523%" height="15" fill="rgb(239,166,0)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (41 samples, 0.05%)</title><rect x="98.5641%" y="2789" width="0.0523%" height="15" fill="rgb(238,174,32)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (41 samples, 0.05%)</title><rect x="98.5641%" y="2773" width="0.0523%" height="15" fill="rgb(238,124,44)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (41 samples, 0.05%)</title><rect x="98.5641%" y="2757" width="0.0523%" height="15" fill="rgb(206,185,9)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2767.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (41 samples, 0.05%)</title><rect x="98.5641%" y="2741" width="0.0523%" height="15" fill="rgb(215,157,17)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2751.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::{{closure}} (41 samples, 0.05%)</title><rect x="98.5641%" y="2725" width="0.0523%" height="15" fill="rgb(251,17,29)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2735.50"></text></g><g><title>aptos_vm::block_executor::BlockAptosVM::execute_block::{{closure}} (41 samples, 0.05%)</title><rect x="98.5641%" y="2709" width="0.0523%" height="15" fill="rgb(227,113,27)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2719.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (41 samples, 0.05%)</title><rect x="98.5641%" y="2693" width="0.0523%" height="15" fill="rgb(217,226,24)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2703.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (41 samples, 0.05%)</title><rect x="98.5641%" y="2677" width="0.0523%" height="15" fill="rgb(251,99,38)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2687.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (41 samples, 0.05%)</title><rect x="98.5641%" y="2661" width="0.0523%" height="15" fill="rgb(231,147,19)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2671.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (41 samples, 0.05%)</title><rect x="98.5641%" y="2645" width="0.0523%" height="15" fill="rgb(230,86,8)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2655.50"></text></g><g><title>rayon::iter::collect::special_extend (41 samples, 0.05%)</title><rect x="98.5641%" y="2629" width="0.0523%" height="15" fill="rgb(237,159,39)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2639.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (41 samples, 0.05%)</title><rect x="98.5641%" y="2613" width="0.0523%" height="15" fill="rgb(247,179,47)" fg:x="77291" fg:w="41"/><text x="98.8141%" y="2623.50"></text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="2597" width="0.0510%" height="15" fill="rgb(253,152,26)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2607.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (40 samples, 0.05%)</title><rect x="98.5654%" y="2581" width="0.0510%" height="15" fill="rgb(222,211,15)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2591.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (40 samples, 0.05%)</title><rect x="98.5654%" y="2565" width="0.0510%" height="15" fill="rgb(236,193,6)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge (40 samples, 0.05%)</title><rect x="98.5654%" y="2549" width="0.0510%" height="15" fill="rgb(226,206,10)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2559.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (40 samples, 0.05%)</title><rect x="98.5654%" y="2533" width="0.0510%" height="15" fill="rgb(213,125,22)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2543.50"></text></g><g><title>&lt;rayon::vec::Drain&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (40 samples, 0.05%)</title><rect x="98.5654%" y="2517" width="0.0510%" height="15" fill="rgb(221,66,28)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2527.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (40 samples, 0.05%)</title><rect x="98.5654%" y="2501" width="0.0510%" height="15" fill="rgb(222,84,53)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (40 samples, 0.05%)</title><rect x="98.5654%" y="2485" width="0.0510%" height="15" fill="rgb(243,50,15)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.05%)</title><rect x="98.5654%" y="2469" width="0.0510%" height="15" fill="rgb(208,184,23)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2479.50"></text></g><g><title>rayon_core::join::join_context (40 samples, 0.05%)</title><rect x="98.5654%" y="2453" width="0.0510%" height="15" fill="rgb(221,83,2)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2463.50"></text></g><g><title>rayon_core::registry::in_worker (40 samples, 0.05%)</title><rect x="98.5654%" y="2437" width="0.0510%" height="15" fill="rgb(236,53,24)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2447.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="2421" width="0.0510%" height="15" fill="rgb(244,171,29)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2431.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (40 samples, 0.05%)</title><rect x="98.5654%" y="2405" width="0.0510%" height="15" fill="rgb(205,19,11)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2415.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 0.05%)</title><rect x="98.5654%" y="2389" width="0.0510%" height="15" fill="rgb(207,108,29)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2399.50"></text></g><g><title>std::panicking::try (40 samples, 0.05%)</title><rect x="98.5654%" y="2373" width="0.0510%" height="15" fill="rgb(236,215,43)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2383.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 0.05%)</title><rect x="98.5654%" y="2357" width="0.0510%" height="15" fill="rgb(213,58,35)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2367.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (40 samples, 0.05%)</title><rect x="98.5654%" y="2341" width="0.0510%" height="15" fill="rgb(220,211,46)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="2325" width="0.0510%" height="15" fill="rgb(212,134,16)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="2309" width="0.0510%" height="15" fill="rgb(232,90,44)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.05%)</title><rect x="98.5654%" y="2293" width="0.0510%" height="15" fill="rgb(212,18,36)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (40 samples, 0.05%)</title><rect x="98.5654%" y="2277" width="0.0510%" height="15" fill="rgb(206,112,24)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (40 samples, 0.05%)</title><rect x="98.5654%" y="2261" width="0.0510%" height="15" fill="rgb(238,223,40)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="2245" width="0.0510%" height="15" fill="rgb(226,169,20)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (40 samples, 0.05%)</title><rect x="98.5654%" y="2229" width="0.0510%" height="15" fill="rgb(241,64,52)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 0.05%)</title><rect x="98.5654%" y="2213" width="0.0510%" height="15" fill="rgb(228,120,25)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2223.50"></text></g><g><title>std::panicking::try (40 samples, 0.05%)</title><rect x="98.5654%" y="2197" width="0.0510%" height="15" fill="rgb(234,108,19)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 0.05%)</title><rect x="98.5654%" y="2181" width="0.0510%" height="15" fill="rgb(236,133,29)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (40 samples, 0.05%)</title><rect x="98.5654%" y="2165" width="0.0510%" height="15" fill="rgb(246,174,53)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="2149" width="0.0510%" height="15" fill="rgb(210,105,35)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="2133" width="0.0510%" height="15" fill="rgb(225,27,26)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.05%)</title><rect x="98.5654%" y="2117" width="0.0510%" height="15" fill="rgb(233,2,39)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (40 samples, 0.05%)</title><rect x="98.5654%" y="2101" width="0.0510%" height="15" fill="rgb(219,164,26)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (40 samples, 0.05%)</title><rect x="98.5654%" y="2085" width="0.0510%" height="15" fill="rgb(236,211,5)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="2069" width="0.0510%" height="15" fill="rgb(244,227,23)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (40 samples, 0.05%)</title><rect x="98.5654%" y="2053" width="0.0510%" height="15" fill="rgb(230,184,8)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 0.05%)</title><rect x="98.5654%" y="2037" width="0.0510%" height="15" fill="rgb(217,125,48)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2047.50"></text></g><g><title>std::panicking::try (40 samples, 0.05%)</title><rect x="98.5654%" y="2021" width="0.0510%" height="15" fill="rgb(223,192,47)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 0.05%)</title><rect x="98.5654%" y="2005" width="0.0510%" height="15" fill="rgb(226,119,10)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (40 samples, 0.05%)</title><rect x="98.5654%" y="1989" width="0.0510%" height="15" fill="rgb(221,49,29)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="1973" width="0.0510%" height="15" fill="rgb(217,205,19)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="1957" width="0.0510%" height="15" fill="rgb(242,104,7)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.05%)</title><rect x="98.5654%" y="1941" width="0.0510%" height="15" fill="rgb(209,154,48)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (40 samples, 0.05%)</title><rect x="98.5654%" y="1925" width="0.0510%" height="15" fill="rgb(219,213,46)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (40 samples, 0.05%)</title><rect x="98.5654%" y="1909" width="0.0510%" height="15" fill="rgb(229,105,38)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="1893" width="0.0510%" height="15" fill="rgb(205,151,5)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (40 samples, 0.05%)</title><rect x="98.5654%" y="1877" width="0.0510%" height="15" fill="rgb(248,115,40)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 0.05%)</title><rect x="98.5654%" y="1861" width="0.0510%" height="15" fill="rgb(206,179,2)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1871.50"></text></g><g><title>std::panicking::try (40 samples, 0.05%)</title><rect x="98.5654%" y="1845" width="0.0510%" height="15" fill="rgb(230,103,24)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 0.05%)</title><rect x="98.5654%" y="1829" width="0.0510%" height="15" fill="rgb(218,152,4)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (40 samples, 0.05%)</title><rect x="98.5654%" y="1813" width="0.0510%" height="15" fill="rgb(236,161,54)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="1797" width="0.0510%" height="15" fill="rgb(226,65,17)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="1781" width="0.0510%" height="15" fill="rgb(221,134,44)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.05%)</title><rect x="98.5654%" y="1765" width="0.0510%" height="15" fill="rgb(251,129,4)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (40 samples, 0.05%)</title><rect x="98.5654%" y="1749" width="0.0510%" height="15" fill="rgb(244,32,34)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (40 samples, 0.05%)</title><rect x="98.5654%" y="1733" width="0.0510%" height="15" fill="rgb(251,224,37)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (40 samples, 0.05%)</title><rect x="98.5654%" y="1717" width="0.0510%" height="15" fill="rgb(248,117,31)" fg:x="77292" fg:w="40"/><text x="98.8154%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (36 samples, 0.05%)</title><rect x="98.5705%" y="1701" width="0.0459%" height="15" fill="rgb(222,208,37)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.05%)</title><rect x="98.5705%" y="1685" width="0.0459%" height="15" fill="rgb(234,211,25)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1695.50"></text></g><g><title>std::panicking::try (36 samples, 0.05%)</title><rect x="98.5705%" y="1669" width="0.0459%" height="15" fill="rgb(211,72,6)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.05%)</title><rect x="98.5705%" y="1653" width="0.0459%" height="15" fill="rgb(249,198,38)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (36 samples, 0.05%)</title><rect x="98.5705%" y="1637" width="0.0459%" height="15" fill="rgb(221,86,51)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1647.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (36 samples, 0.05%)</title><rect x="98.5705%" y="1621" width="0.0459%" height="15" fill="rgb(226,178,43)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (36 samples, 0.05%)</title><rect x="98.5705%" y="1605" width="0.0459%" height="15" fill="rgb(215,145,7)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (36 samples, 0.05%)</title><rect x="98.5705%" y="1589" width="0.0459%" height="15" fill="rgb(250,202,36)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1599.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (36 samples, 0.05%)</title><rect x="98.5705%" y="1573" width="0.0459%" height="15" fill="rgb(215,86,13)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1583.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (36 samples, 0.05%)</title><rect x="98.5705%" y="1557" width="0.0459%" height="15" fill="rgb(221,134,12)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (36 samples, 0.05%)</title><rect x="98.5705%" y="1541" width="0.0459%" height="15" fill="rgb(213,82,10)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.05%)</title><rect x="98.5705%" y="1525" width="0.0459%" height="15" fill="rgb(214,142,0)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (36 samples, 0.05%)</title><rect x="98.5705%" y="1509" width="0.0459%" height="15" fill="rgb(205,145,9)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1519.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (36 samples, 0.05%)</title><rect x="98.5705%" y="1493" width="0.0459%" height="15" fill="rgb(244,214,8)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (36 samples, 0.05%)</title><rect x="98.5705%" y="1477" width="0.0459%" height="15" fill="rgb(224,72,51)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1487.50"></text></g><g><title>core::ops::function::Fn::call (36 samples, 0.05%)</title><rect x="98.5705%" y="1461" width="0.0459%" height="15" fill="rgb(233,137,37)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1471.50"></text></g><g><title>aptos_vm::adapter_common::preprocess_transaction (36 samples, 0.05%)</title><rect x="98.5705%" y="1445" width="0.0459%" height="15" fill="rgb(208,71,28)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1455.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::check_signature (36 samples, 0.05%)</title><rect x="98.5705%" y="1429" width="0.0459%" height="15" fill="rgb(226,31,7)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1439.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::check_signature (36 samples, 0.05%)</title><rect x="98.5705%" y="1413" width="0.0459%" height="15" fill="rgb(229,62,18)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1423.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::verify (36 samples, 0.05%)</title><rect x="98.5705%" y="1397" width="0.0459%" height="15" fill="rgb(226,74,28)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1407.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_sigs::Ed25519Signature as aptos_crypto::traits::Signature&gt;::verify (36 samples, 0.05%)</title><rect x="98.5705%" y="1381" width="0.0459%" height="15" fill="rgb(214,170,18)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1391.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_sigs::Ed25519Signature as aptos_crypto::traits::Signature&gt;::verify_arbitrary_msg (36 samples, 0.05%)</title><rect x="98.5705%" y="1365" width="0.0459%" height="15" fill="rgb(227,229,35)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1375.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_strict (36 samples, 0.05%)</title><rect x="98.5705%" y="1349" width="0.0459%" height="15" fill="rgb(225,181,39)" fg:x="77296" fg:w="36"/><text x="98.8205%" y="1359.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (34 samples, 0.04%)</title><rect x="98.5730%" y="1333" width="0.0434%" height="15" fill="rgb(253,124,44)" fg:x="77298" fg:w="34"/><text x="98.8230%" y="1343.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (34 samples, 0.04%)</title><rect x="98.5730%" y="1317" width="0.0434%" height="15" fill="rgb(220,75,18)" fg:x="77298" fg:w="34"/><text x="98.8230%" y="1327.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (11 samples, 0.01%)</title><rect x="98.6023%" y="1301" width="0.0140%" height="15" fill="rgb(239,175,43)" fg:x="77321" fg:w="11"/><text x="98.8523%" y="1311.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (8 samples, 0.01%)</title><rect x="98.6062%" y="1285" width="0.0102%" height="15" fill="rgb(228,112,50)" fg:x="77324" fg:w="8"/><text x="98.8562%" y="1295.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (8 samples, 0.01%)</title><rect x="98.6062%" y="1269" width="0.0102%" height="15" fill="rgb(232,105,36)" fg:x="77324" fg:w="8"/><text x="98.8562%" y="1279.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.01%)</title><rect x="98.6227%" y="2293" width="0.0115%" height="15" fill="rgb(227,137,47)" fg:x="77337" fg:w="9"/><text x="98.8727%" y="2303.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.01%)</title><rect x="98.6227%" y="2277" width="0.0115%" height="15" fill="rgb(217,51,9)" fg:x="77337" fg:w="9"/><text x="98.8727%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="98.6227%" y="2261" width="0.0115%" height="15" fill="rgb(245,117,0)" fg:x="77337" fg:w="9"/><text x="98.8727%" y="2271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.6227%" y="2245" width="0.0115%" height="15" fill="rgb(252,52,30)" fg:x="77337" fg:w="9"/><text x="98.8727%" y="2255.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="98.6227%" y="2229" width="0.0115%" height="15" fill="rgb(227,85,33)" fg:x="77337" fg:w="9"/><text x="98.8727%" y="2239.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="98.6227%" y="2213" width="0.0115%" height="15" fill="rgb(220,157,20)" fg:x="77337" fg:w="9"/><text x="98.8727%" y="2223.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="98.6227%" y="2197" width="0.0115%" height="15" fill="rgb(254,14,34)" fg:x="77337" fg:w="9"/><text x="98.8727%" y="2207.50"></text></g><g><title>par_exec_10 (26 samples, 0.03%)</title><rect x="98.6164%" y="3189" width="0.0332%" height="15" fill="rgb(216,103,41)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="3199.50"></text></g><g><title>__GI___clone3 (26 samples, 0.03%)</title><rect x="98.6164%" y="3173" width="0.0332%" height="15" fill="rgb(245,221,9)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="3183.50"></text></g><g><title>start_thread (26 samples, 0.03%)</title><rect x="98.6164%" y="3157" width="0.0332%" height="15" fill="rgb(254,136,47)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (26 samples, 0.03%)</title><rect x="98.6164%" y="3141" width="0.0332%" height="15" fill="rgb(235,71,46)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.03%)</title><rect x="98.6164%" y="3125" width="0.0332%" height="15" fill="rgb(242,154,29)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.03%)</title><rect x="98.6164%" y="3109" width="0.0332%" height="15" fill="rgb(210,65,31)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (26 samples, 0.03%)</title><rect x="98.6164%" y="3093" width="0.0332%" height="15" fill="rgb(244,9,50)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (26 samples, 0.03%)</title><rect x="98.6164%" y="3077" width="0.0332%" height="15" fill="rgb(215,141,38)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.03%)</title><rect x="98.6164%" y="3061" width="0.0332%" height="15" fill="rgb(241,129,6)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="3071.50"></text></g><g><title>std::panicking::try (26 samples, 0.03%)</title><rect x="98.6164%" y="3045" width="0.0332%" height="15" fill="rgb(253,169,4)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.03%)</title><rect x="98.6164%" y="3029" width="0.0332%" height="15" fill="rgb(237,82,36)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.03%)</title><rect x="98.6164%" y="3013" width="0.0332%" height="15" fill="rgb(209,171,11)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (26 samples, 0.03%)</title><rect x="98.6164%" y="2997" width="0.0332%" height="15" fill="rgb(242,19,22)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26 samples, 0.03%)</title><rect x="98.6164%" y="2981" width="0.0332%" height="15" fill="rgb(251,122,24)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (26 samples, 0.03%)</title><rect x="98.6164%" y="2965" width="0.0332%" height="15" fill="rgb(226,166,42)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (26 samples, 0.03%)</title><rect x="98.6164%" y="2949" width="0.0332%" height="15" fill="rgb(244,101,48)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (26 samples, 0.03%)</title><rect x="98.6164%" y="2933" width="0.0332%" height="15" fill="rgb(227,125,1)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (26 samples, 0.03%)</title><rect x="98.6164%" y="2917" width="0.0332%" height="15" fill="rgb(206,79,43)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (26 samples, 0.03%)</title><rect x="98.6164%" y="2901" width="0.0332%" height="15" fill="rgb(241,109,41)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (26 samples, 0.03%)</title><rect x="98.6164%" y="2885" width="0.0332%" height="15" fill="rgb(219,73,4)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (26 samples, 0.03%)</title><rect x="98.6164%" y="2869" width="0.0332%" height="15" fill="rgb(239,25,41)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (26 samples, 0.03%)</title><rect x="98.6164%" y="2853" width="0.0332%" height="15" fill="rgb(208,88,46)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.03%)</title><rect x="98.6164%" y="2837" width="0.0332%" height="15" fill="rgb(239,184,9)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.03%)</title><rect x="98.6164%" y="2821" width="0.0332%" height="15" fill="rgb(223,114,13)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2831.50"></text></g><g><title>std::panicking::try (26 samples, 0.03%)</title><rect x="98.6164%" y="2805" width="0.0332%" height="15" fill="rgb(214,28,42)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.03%)</title><rect x="98.6164%" y="2789" width="0.0332%" height="15" fill="rgb(252,32,44)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.03%)</title><rect x="98.6164%" y="2773" width="0.0332%" height="15" fill="rgb(231,159,4)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (26 samples, 0.03%)</title><rect x="98.6164%" y="2757" width="0.0332%" height="15" fill="rgb(210,35,26)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (26 samples, 0.03%)</title><rect x="98.6164%" y="2741" width="0.0332%" height="15" fill="rgb(208,190,37)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.03%)</title><rect x="98.6164%" y="2725" width="0.0332%" height="15" fill="rgb(226,148,22)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.03%)</title><rect x="98.6164%" y="2709" width="0.0332%" height="15" fill="rgb(242,153,24)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.03%)</title><rect x="98.6164%" y="2693" width="0.0332%" height="15" fill="rgb(213,133,7)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.03%)</title><rect x="98.6164%" y="2677" width="0.0332%" height="15" fill="rgb(248,206,18)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.03%)</title><rect x="98.6164%" y="2661" width="0.0332%" height="15" fill="rgb(233,157,4)" fg:x="77332" fg:w="26"/><text x="98.8664%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (22 samples, 0.03%)</title><rect x="98.6215%" y="2645" width="0.0281%" height="15" fill="rgb(249,179,32)" fg:x="77336" fg:w="22"/><text x="98.8715%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.03%)</title><rect x="98.6215%" y="2629" width="0.0281%" height="15" fill="rgb(248,69,35)" fg:x="77336" fg:w="22"/><text x="98.8715%" y="2639.50"></text></g><g><title>std::panicking::try (22 samples, 0.03%)</title><rect x="98.6215%" y="2613" width="0.0281%" height="15" fill="rgb(249,158,38)" fg:x="77336" fg:w="22"/><text x="98.8715%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.03%)</title><rect x="98.6215%" y="2597" width="0.0281%" height="15" fill="rgb(223,18,43)" fg:x="77336" fg:w="22"/><text x="98.8715%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.03%)</title><rect x="98.6215%" y="2581" width="0.0281%" height="15" fill="rgb(238,42,45)" fg:x="77336" fg:w="22"/><text x="98.8715%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (22 samples, 0.03%)</title><rect x="98.6215%" y="2565" width="0.0281%" height="15" fill="rgb(219,65,47)" fg:x="77336" fg:w="22"/><text x="98.8715%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (22 samples, 0.03%)</title><rect x="98.6215%" y="2549" width="0.0281%" height="15" fill="rgb(248,153,12)" fg:x="77336" fg:w="22"/><text x="98.8715%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="98.6215%" y="2533" width="0.0281%" height="15" fill="rgb(240,118,4)" fg:x="77336" fg:w="22"/><text x="98.8715%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.03%)</title><rect x="98.6215%" y="2517" width="0.0281%" height="15" fill="rgb(250,96,34)" fg:x="77336" fg:w="22"/><text x="98.8715%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.03%)</title><rect x="98.6215%" y="2501" width="0.0281%" height="15" fill="rgb(221,15,4)" fg:x="77336" fg:w="22"/><text x="98.8715%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.03%)</title><rect x="98.6215%" y="2485" width="0.0281%" height="15" fill="rgb(217,149,33)" fg:x="77336" fg:w="22"/><text x="98.8715%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (21 samples, 0.03%)</title><rect x="98.6227%" y="2469" width="0.0268%" height="15" fill="rgb(213,58,29)" fg:x="77337" fg:w="21"/><text x="98.8727%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 0.03%)</title><rect x="98.6227%" y="2453" width="0.0268%" height="15" fill="rgb(236,218,9)" fg:x="77337" fg:w="21"/><text x="98.8727%" y="2463.50"></text></g><g><title>std::panicking::try (21 samples, 0.03%)</title><rect x="98.6227%" y="2437" width="0.0268%" height="15" fill="rgb(248,40,19)" fg:x="77337" fg:w="21"/><text x="98.8727%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 0.03%)</title><rect x="98.6227%" y="2421" width="0.0268%" height="15" fill="rgb(212,17,6)" fg:x="77337" fg:w="21"/><text x="98.8727%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21 samples, 0.03%)</title><rect x="98.6227%" y="2405" width="0.0268%" height="15" fill="rgb(206,212,20)" fg:x="77337" fg:w="21"/><text x="98.8727%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (21 samples, 0.03%)</title><rect x="98.6227%" y="2389" width="0.0268%" height="15" fill="rgb(229,80,37)" fg:x="77337" fg:w="21"/><text x="98.8727%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (21 samples, 0.03%)</title><rect x="98.6227%" y="2373" width="0.0268%" height="15" fill="rgb(253,8,37)" fg:x="77337" fg:w="21"/><text x="98.8727%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.03%)</title><rect x="98.6227%" y="2357" width="0.0268%" height="15" fill="rgb(215,16,43)" fg:x="77337" fg:w="21"/><text x="98.8727%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (21 samples, 0.03%)</title><rect x="98.6227%" y="2341" width="0.0268%" height="15" fill="rgb(236,219,16)" fg:x="77337" fg:w="21"/><text x="98.8727%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.03%)</title><rect x="98.6227%" y="2325" width="0.0268%" height="15" fill="rgb(251,0,3)" fg:x="77337" fg:w="21"/><text x="98.8727%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21 samples, 0.03%)</title><rect x="98.6227%" y="2309" width="0.0268%" height="15" fill="rgb(207,133,37)" fg:x="77337" fg:w="21"/><text x="98.8727%" y="2319.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="98.6381%" y="2293" width="0.0115%" height="15" fill="rgb(250,143,20)" fg:x="77349" fg:w="9"/><text x="98.8881%" y="2303.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="98.6381%" y="2277" width="0.0115%" height="15" fill="rgb(242,19,50)" fg:x="77349" fg:w="9"/><text x="98.8881%" y="2287.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="98.6381%" y="2261" width="0.0115%" height="15" fill="rgb(206,124,43)" fg:x="77349" fg:w="9"/><text x="98.8881%" y="2271.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="98.6381%" y="2245" width="0.0115%" height="15" fill="rgb(229,4,38)" fg:x="77349" fg:w="9"/><text x="98.8881%" y="2255.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="98.6381%" y="2229" width="0.0115%" height="15" fill="rgb(247,220,45)" fg:x="77349" fg:w="9"/><text x="98.8881%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.01%)</title><rect x="98.6381%" y="2213" width="0.0115%" height="15" fill="rgb(247,195,0)" fg:x="77349" fg:w="9"/><text x="98.8881%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="98.6381%" y="2197" width="0.0115%" height="15" fill="rgb(252,12,19)" fg:x="77349" fg:w="9"/><text x="98.8881%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.6381%" y="2181" width="0.0115%" height="15" fill="rgb(222,49,50)" fg:x="77349" fg:w="9"/><text x="98.8881%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="98.6381%" y="2165" width="0.0115%" height="15" fill="rgb(209,157,28)" fg:x="77349" fg:w="9"/><text x="98.8881%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="98.6381%" y="2149" width="0.0115%" height="15" fill="rgb(238,174,24)" fg:x="77349" fg:w="9"/><text x="98.8881%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="98.6381%" y="2133" width="0.0115%" height="15" fill="rgb(224,17,28)" fg:x="77349" fg:w="9"/><text x="98.8881%" y="2143.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (12 samples, 0.02%)</title><rect x="98.6636%" y="2469" width="0.0153%" height="15" fill="rgb(249,7,29)" fg:x="77369" fg:w="12"/><text x="98.9136%" y="2479.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (12 samples, 0.02%)</title><rect x="98.6636%" y="2453" width="0.0153%" height="15" fill="rgb(243,178,4)" fg:x="77369" fg:w="12"/><text x="98.9136%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.02%)</title><rect x="98.6636%" y="2437" width="0.0153%" height="15" fill="rgb(246,138,35)" fg:x="77369" fg:w="12"/><text x="98.9136%" y="2447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.02%)</title><rect x="98.6636%" y="2421" width="0.0153%" height="15" fill="rgb(251,85,18)" fg:x="77369" fg:w="12"/><text x="98.9136%" y="2431.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="98.6648%" y="2405" width="0.0140%" height="15" fill="rgb(254,55,9)" fg:x="77370" fg:w="11"/><text x="98.9148%" y="2415.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="98.6648%" y="2389" width="0.0140%" height="15" fill="rgb(248,4,50)" fg:x="77370" fg:w="11"/><text x="98.9148%" y="2399.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="98.6648%" y="2373" width="0.0140%" height="15" fill="rgb(215,208,14)" fg:x="77370" fg:w="11"/><text x="98.9148%" y="2383.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (11 samples, 0.01%)</title><rect x="98.6865%" y="2293" width="0.0140%" height="15" fill="rgb(218,37,18)" fg:x="77387" fg:w="11"/><text x="98.9365%" y="2303.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (11 samples, 0.01%)</title><rect x="98.6865%" y="2277" width="0.0140%" height="15" fill="rgb(206,104,13)" fg:x="77387" fg:w="11"/><text x="98.9365%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="98.6865%" y="2261" width="0.0140%" height="15" fill="rgb(248,94,22)" fg:x="77387" fg:w="11"/><text x="98.9365%" y="2271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.6865%" y="2245" width="0.0140%" height="15" fill="rgb(235,42,46)" fg:x="77387" fg:w="11"/><text x="98.9365%" y="2255.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="98.6865%" y="2229" width="0.0140%" height="15" fill="rgb(220,228,48)" fg:x="77387" fg:w="11"/><text x="98.9365%" y="2239.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="98.6865%" y="2213" width="0.0140%" height="15" fill="rgb(216,58,12)" fg:x="77387" fg:w="11"/><text x="98.9365%" y="2223.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="98.6865%" y="2197" width="0.0140%" height="15" fill="rgb(223,97,52)" fg:x="77387" fg:w="11"/><text x="98.9365%" y="2207.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.01%)</title><rect x="98.6878%" y="2181" width="0.0128%" height="15" fill="rgb(208,159,17)" fg:x="77388" fg:w="10"/><text x="98.9378%" y="2191.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="98.6878%" y="2165" width="0.0128%" height="15" fill="rgb(215,172,9)" fg:x="77388" fg:w="10"/><text x="98.9378%" y="2175.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="98.6878%" y="2149" width="0.0128%" height="15" fill="rgb(252,175,30)" fg:x="77388" fg:w="10"/><text x="98.9378%" y="2159.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="98.6878%" y="2133" width="0.0128%" height="15" fill="rgb(209,159,10)" fg:x="77388" fg:w="10"/><text x="98.9378%" y="2143.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="98.6878%" y="2117" width="0.0128%" height="15" fill="rgb(229,73,51)" fg:x="77388" fg:w="10"/><text x="98.9378%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.01%)</title><rect x="98.6878%" y="2101" width="0.0128%" height="15" fill="rgb(208,212,43)" fg:x="77388" fg:w="10"/><text x="98.9378%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.01%)</title><rect x="98.6878%" y="2085" width="0.0128%" height="15" fill="rgb(254,123,53)" fg:x="77388" fg:w="10"/><text x="98.9378%" y="2095.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="98.6878%" y="2069" width="0.0128%" height="15" fill="rgb(254,128,49)" fg:x="77388" fg:w="10"/><text x="98.9378%" y="2079.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.01%)</title><rect x="98.6878%" y="2053" width="0.0128%" height="15" fill="rgb(246,16,16)" fg:x="77388" fg:w="10"/><text x="98.9378%" y="2063.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.01%)</title><rect x="98.6878%" y="2037" width="0.0128%" height="15" fill="rgb(209,200,1)" fg:x="77388" fg:w="10"/><text x="98.9378%" y="2047.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.01%)</title><rect x="98.6878%" y="2021" width="0.0128%" height="15" fill="rgb(235,9,3)" fg:x="77388" fg:w="10"/><text x="98.9378%" y="2031.50"></text></g><g><title>par_exec_11 (54 samples, 0.07%)</title><rect x="98.6495%" y="3189" width="0.0689%" height="15" fill="rgb(233,121,54)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="3199.50"></text></g><g><title>__GI___clone3 (54 samples, 0.07%)</title><rect x="98.6495%" y="3173" width="0.0689%" height="15" fill="rgb(236,80,25)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="3183.50"></text></g><g><title>start_thread (54 samples, 0.07%)</title><rect x="98.6495%" y="3157" width="0.0689%" height="15" fill="rgb(220,44,24)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (54 samples, 0.07%)</title><rect x="98.6495%" y="3141" width="0.0689%" height="15" fill="rgb(236,225,16)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (54 samples, 0.07%)</title><rect x="98.6495%" y="3125" width="0.0689%" height="15" fill="rgb(237,140,0)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (54 samples, 0.07%)</title><rect x="98.6495%" y="3109" width="0.0689%" height="15" fill="rgb(243,225,53)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (54 samples, 0.07%)</title><rect x="98.6495%" y="3093" width="0.0689%" height="15" fill="rgb(240,140,30)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (54 samples, 0.07%)</title><rect x="98.6495%" y="3077" width="0.0689%" height="15" fill="rgb(217,51,16)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (54 samples, 0.07%)</title><rect x="98.6495%" y="3061" width="0.0689%" height="15" fill="rgb(245,75,50)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="3071.50"></text></g><g><title>std::panicking::try (54 samples, 0.07%)</title><rect x="98.6495%" y="3045" width="0.0689%" height="15" fill="rgb(208,174,22)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (54 samples, 0.07%)</title><rect x="98.6495%" y="3029" width="0.0689%" height="15" fill="rgb(219,98,50)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (54 samples, 0.07%)</title><rect x="98.6495%" y="3013" width="0.0689%" height="15" fill="rgb(243,138,3)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (54 samples, 0.07%)</title><rect x="98.6495%" y="2997" width="0.0689%" height="15" fill="rgb(243,132,26)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (54 samples, 0.07%)</title><rect x="98.6495%" y="2981" width="0.0689%" height="15" fill="rgb(250,201,8)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (54 samples, 0.07%)</title><rect x="98.6495%" y="2965" width="0.0689%" height="15" fill="rgb(213,91,26)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (54 samples, 0.07%)</title><rect x="98.6495%" y="2949" width="0.0689%" height="15" fill="rgb(229,117,1)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (54 samples, 0.07%)</title><rect x="98.6495%" y="2933" width="0.0689%" height="15" fill="rgb(229,24,6)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (54 samples, 0.07%)</title><rect x="98.6495%" y="2917" width="0.0689%" height="15" fill="rgb(206,69,11)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (54 samples, 0.07%)</title><rect x="98.6495%" y="2901" width="0.0689%" height="15" fill="rgb(234,111,34)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (54 samples, 0.07%)</title><rect x="98.6495%" y="2885" width="0.0689%" height="15" fill="rgb(213,187,51)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (54 samples, 0.07%)</title><rect x="98.6495%" y="2869" width="0.0689%" height="15" fill="rgb(207,45,11)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (54 samples, 0.07%)</title><rect x="98.6495%" y="2853" width="0.0689%" height="15" fill="rgb(225,151,47)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (54 samples, 0.07%)</title><rect x="98.6495%" y="2837" width="0.0689%" height="15" fill="rgb(211,226,5)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (54 samples, 0.07%)</title><rect x="98.6495%" y="2821" width="0.0689%" height="15" fill="rgb(214,83,52)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2831.50"></text></g><g><title>std::panicking::try (54 samples, 0.07%)</title><rect x="98.6495%" y="2805" width="0.0689%" height="15" fill="rgb(229,49,53)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (54 samples, 0.07%)</title><rect x="98.6495%" y="2789" width="0.0689%" height="15" fill="rgb(246,8,28)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (54 samples, 0.07%)</title><rect x="98.6495%" y="2773" width="0.0689%" height="15" fill="rgb(207,28,41)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (54 samples, 0.07%)</title><rect x="98.6495%" y="2757" width="0.0689%" height="15" fill="rgb(254,22,25)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (54 samples, 0.07%)</title><rect x="98.6495%" y="2741" width="0.0689%" height="15" fill="rgb(209,120,42)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (54 samples, 0.07%)</title><rect x="98.6495%" y="2725" width="0.0689%" height="15" fill="rgb(216,194,18)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (54 samples, 0.07%)</title><rect x="98.6495%" y="2709" width="0.0689%" height="15" fill="rgb(213,70,17)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (54 samples, 0.07%)</title><rect x="98.6495%" y="2693" width="0.0689%" height="15" fill="rgb(228,66,19)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (54 samples, 0.07%)</title><rect x="98.6495%" y="2677" width="0.0689%" height="15" fill="rgb(236,221,54)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (54 samples, 0.07%)</title><rect x="98.6495%" y="2661" width="0.0689%" height="15" fill="rgb(207,175,15)" fg:x="77358" fg:w="54"/><text x="98.8995%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (43 samples, 0.05%)</title><rect x="98.6636%" y="2645" width="0.0548%" height="15" fill="rgb(234,76,8)" fg:x="77369" fg:w="43"/><text x="98.9136%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (43 samples, 0.05%)</title><rect x="98.6636%" y="2629" width="0.0548%" height="15" fill="rgb(243,106,0)" fg:x="77369" fg:w="43"/><text x="98.9136%" y="2639.50"></text></g><g><title>std::panicking::try (43 samples, 0.05%)</title><rect x="98.6636%" y="2613" width="0.0548%" height="15" fill="rgb(208,48,19)" fg:x="77369" fg:w="43"/><text x="98.9136%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (43 samples, 0.05%)</title><rect x="98.6636%" y="2597" width="0.0548%" height="15" fill="rgb(251,50,29)" fg:x="77369" fg:w="43"/><text x="98.9136%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (43 samples, 0.05%)</title><rect x="98.6636%" y="2581" width="0.0548%" height="15" fill="rgb(222,31,49)" fg:x="77369" fg:w="43"/><text x="98.9136%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (43 samples, 0.05%)</title><rect x="98.6636%" y="2565" width="0.0548%" height="15" fill="rgb(232,33,18)" fg:x="77369" fg:w="43"/><text x="98.9136%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (43 samples, 0.05%)</title><rect x="98.6636%" y="2549" width="0.0548%" height="15" fill="rgb(209,1,44)" fg:x="77369" fg:w="43"/><text x="98.9136%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (43 samples, 0.05%)</title><rect x="98.6636%" y="2533" width="0.0548%" height="15" fill="rgb(211,7,1)" fg:x="77369" fg:w="43"/><text x="98.9136%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (43 samples, 0.05%)</title><rect x="98.6636%" y="2517" width="0.0548%" height="15" fill="rgb(224,111,27)" fg:x="77369" fg:w="43"/><text x="98.9136%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (43 samples, 0.05%)</title><rect x="98.6636%" y="2501" width="0.0548%" height="15" fill="rgb(252,195,39)" fg:x="77369" fg:w="43"/><text x="98.9136%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (43 samples, 0.05%)</title><rect x="98.6636%" y="2485" width="0.0548%" height="15" fill="rgb(237,198,5)" fg:x="77369" fg:w="43"/><text x="98.9136%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.03%)</title><rect x="98.6865%" y="2469" width="0.0319%" height="15" fill="rgb(232,148,1)" fg:x="77387" fg:w="25"/><text x="98.9365%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.03%)</title><rect x="98.6865%" y="2453" width="0.0319%" height="15" fill="rgb(249,41,3)" fg:x="77387" fg:w="25"/><text x="98.9365%" y="2463.50"></text></g><g><title>std::panicking::try (25 samples, 0.03%)</title><rect x="98.6865%" y="2437" width="0.0319%" height="15" fill="rgb(215,14,33)" fg:x="77387" fg:w="25"/><text x="98.9365%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.03%)</title><rect x="98.6865%" y="2421" width="0.0319%" height="15" fill="rgb(209,146,24)" fg:x="77387" fg:w="25"/><text x="98.9365%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.03%)</title><rect x="98.6865%" y="2405" width="0.0319%" height="15" fill="rgb(219,51,47)" fg:x="77387" fg:w="25"/><text x="98.9365%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (25 samples, 0.03%)</title><rect x="98.6865%" y="2389" width="0.0319%" height="15" fill="rgb(234,217,40)" fg:x="77387" fg:w="25"/><text x="98.9365%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.03%)</title><rect x="98.6865%" y="2373" width="0.0319%" height="15" fill="rgb(228,34,26)" fg:x="77387" fg:w="25"/><text x="98.9365%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="98.6865%" y="2357" width="0.0319%" height="15" fill="rgb(224,50,29)" fg:x="77387" fg:w="25"/><text x="98.9365%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.03%)</title><rect x="98.6865%" y="2341" width="0.0319%" height="15" fill="rgb(205,79,51)" fg:x="77387" fg:w="25"/><text x="98.9365%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.03%)</title><rect x="98.6865%" y="2325" width="0.0319%" height="15" fill="rgb(218,136,28)" fg:x="77387" fg:w="25"/><text x="98.9365%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.03%)</title><rect x="98.6865%" y="2309" width="0.0319%" height="15" fill="rgb(220,150,10)" fg:x="77387" fg:w="25"/><text x="98.9365%" y="2319.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.02%)</title><rect x="98.7018%" y="2293" width="0.0166%" height="15" fill="rgb(242,158,47)" fg:x="77399" fg:w="13"/><text x="98.9518%" y="2303.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="98.7018%" y="2277" width="0.0166%" height="15" fill="rgb(209,68,0)" fg:x="77399" fg:w="13"/><text x="98.9518%" y="2287.50"></text></g><g><title>std::panicking::try (13 samples, 0.02%)</title><rect x="98.7018%" y="2261" width="0.0166%" height="15" fill="rgb(208,13,41)" fg:x="77399" fg:w="13"/><text x="98.9518%" y="2271.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="98.7018%" y="2245" width="0.0166%" height="15" fill="rgb(226,201,7)" fg:x="77399" fg:w="13"/><text x="98.9518%" y="2255.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.02%)</title><rect x="98.7018%" y="2229" width="0.0166%" height="15" fill="rgb(236,103,26)" fg:x="77399" fg:w="13"/><text x="98.9518%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (13 samples, 0.02%)</title><rect x="98.7018%" y="2213" width="0.0166%" height="15" fill="rgb(243,162,8)" fg:x="77399" fg:w="13"/><text x="98.9518%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.02%)</title><rect x="98.7018%" y="2197" width="0.0166%" height="15" fill="rgb(237,225,11)" fg:x="77399" fg:w="13"/><text x="98.9518%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="98.7018%" y="2181" width="0.0166%" height="15" fill="rgb(247,186,32)" fg:x="77399" fg:w="13"/><text x="98.9518%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="98.7018%" y="2165" width="0.0166%" height="15" fill="rgb(215,26,28)" fg:x="77399" fg:w="13"/><text x="98.9518%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="98.7018%" y="2149" width="0.0166%" height="15" fill="rgb(208,121,6)" fg:x="77399" fg:w="13"/><text x="98.9518%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="98.7018%" y="2133" width="0.0166%" height="15" fill="rgb(225,91,3)" fg:x="77399" fg:w="13"/><text x="98.9518%" y="2143.50"></text></g><g><title>par_exec_12 (22 samples, 0.03%)</title><rect x="98.7184%" y="3189" width="0.0281%" height="15" fill="rgb(246,119,36)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="3199.50"></text></g><g><title>__GI___clone3 (22 samples, 0.03%)</title><rect x="98.7184%" y="3173" width="0.0281%" height="15" fill="rgb(254,173,2)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="3183.50"></text></g><g><title>start_thread (22 samples, 0.03%)</title><rect x="98.7184%" y="3157" width="0.0281%" height="15" fill="rgb(209,87,54)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (22 samples, 0.03%)</title><rect x="98.7184%" y="3141" width="0.0281%" height="15" fill="rgb(223,216,20)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (22 samples, 0.03%)</title><rect x="98.7184%" y="3125" width="0.0281%" height="15" fill="rgb(220,31,8)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (22 samples, 0.03%)</title><rect x="98.7184%" y="3109" width="0.0281%" height="15" fill="rgb(220,185,15)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (22 samples, 0.03%)</title><rect x="98.7184%" y="3093" width="0.0281%" height="15" fill="rgb(247,190,50)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (22 samples, 0.03%)</title><rect x="98.7184%" y="3077" width="0.0281%" height="15" fill="rgb(239,173,47)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.03%)</title><rect x="98.7184%" y="3061" width="0.0281%" height="15" fill="rgb(218,190,42)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="3071.50"></text></g><g><title>std::panicking::try (22 samples, 0.03%)</title><rect x="98.7184%" y="3045" width="0.0281%" height="15" fill="rgb(251,207,16)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.03%)</title><rect x="98.7184%" y="3029" width="0.0281%" height="15" fill="rgb(222,199,47)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.03%)</title><rect x="98.7184%" y="3013" width="0.0281%" height="15" fill="rgb(245,190,7)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (22 samples, 0.03%)</title><rect x="98.7184%" y="2997" width="0.0281%" height="15" fill="rgb(239,85,38)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (22 samples, 0.03%)</title><rect x="98.7184%" y="2981" width="0.0281%" height="15" fill="rgb(229,69,51)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (22 samples, 0.03%)</title><rect x="98.7184%" y="2965" width="0.0281%" height="15" fill="rgb(231,104,51)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (22 samples, 0.03%)</title><rect x="98.7184%" y="2949" width="0.0281%" height="15" fill="rgb(235,49,4)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (22 samples, 0.03%)</title><rect x="98.7184%" y="2933" width="0.0281%" height="15" fill="rgb(246,166,20)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (22 samples, 0.03%)</title><rect x="98.7184%" y="2917" width="0.0281%" height="15" fill="rgb(230,119,37)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (22 samples, 0.03%)</title><rect x="98.7184%" y="2901" width="0.0281%" height="15" fill="rgb(234,77,34)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (22 samples, 0.03%)</title><rect x="98.7184%" y="2885" width="0.0281%" height="15" fill="rgb(211,222,33)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (22 samples, 0.03%)</title><rect x="98.7184%" y="2869" width="0.0281%" height="15" fill="rgb(226,45,42)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (22 samples, 0.03%)</title><rect x="98.7184%" y="2853" width="0.0281%" height="15" fill="rgb(215,174,28)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (22 samples, 0.03%)</title><rect x="98.7184%" y="2837" width="0.0281%" height="15" fill="rgb(254,173,49)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.03%)</title><rect x="98.7184%" y="2821" width="0.0281%" height="15" fill="rgb(229,191,6)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2831.50"></text></g><g><title>std::panicking::try (22 samples, 0.03%)</title><rect x="98.7184%" y="2805" width="0.0281%" height="15" fill="rgb(212,145,22)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.03%)</title><rect x="98.7184%" y="2789" width="0.0281%" height="15" fill="rgb(226,6,51)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.03%)</title><rect x="98.7184%" y="2773" width="0.0281%" height="15" fill="rgb(227,128,8)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (22 samples, 0.03%)</title><rect x="98.7184%" y="2757" width="0.0281%" height="15" fill="rgb(205,24,10)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (22 samples, 0.03%)</title><rect x="98.7184%" y="2741" width="0.0281%" height="15" fill="rgb(217,147,27)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (22 samples, 0.03%)</title><rect x="98.7184%" y="2725" width="0.0281%" height="15" fill="rgb(250,82,42)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="98.7184%" y="2709" width="0.0281%" height="15" fill="rgb(248,93,17)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.03%)</title><rect x="98.7184%" y="2693" width="0.0281%" height="15" fill="rgb(254,212,40)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.03%)</title><rect x="98.7184%" y="2677" width="0.0281%" height="15" fill="rgb(229,209,2)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.03%)</title><rect x="98.7184%" y="2661" width="0.0281%" height="15" fill="rgb(211,50,43)" fg:x="77412" fg:w="22"/><text x="98.9684%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (21 samples, 0.03%)</title><rect x="98.7197%" y="2645" width="0.0268%" height="15" fill="rgb(245,196,29)" fg:x="77413" fg:w="21"/><text x="98.9697%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 0.03%)</title><rect x="98.7197%" y="2629" width="0.0268%" height="15" fill="rgb(216,132,13)" fg:x="77413" fg:w="21"/><text x="98.9697%" y="2639.50"></text></g><g><title>std::panicking::try (21 samples, 0.03%)</title><rect x="98.7197%" y="2613" width="0.0268%" height="15" fill="rgb(251,108,21)" fg:x="77413" fg:w="21"/><text x="98.9697%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 0.03%)</title><rect x="98.7197%" y="2597" width="0.0268%" height="15" fill="rgb(229,174,54)" fg:x="77413" fg:w="21"/><text x="98.9697%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21 samples, 0.03%)</title><rect x="98.7197%" y="2581" width="0.0268%" height="15" fill="rgb(211,175,47)" fg:x="77413" fg:w="21"/><text x="98.9697%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (21 samples, 0.03%)</title><rect x="98.7197%" y="2565" width="0.0268%" height="15" fill="rgb(234,5,37)" fg:x="77413" fg:w="21"/><text x="98.9697%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (21 samples, 0.03%)</title><rect x="98.7197%" y="2549" width="0.0268%" height="15" fill="rgb(244,150,43)" fg:x="77413" fg:w="21"/><text x="98.9697%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.03%)</title><rect x="98.7197%" y="2533" width="0.0268%" height="15" fill="rgb(242,172,38)" fg:x="77413" fg:w="21"/><text x="98.9697%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (21 samples, 0.03%)</title><rect x="98.7197%" y="2517" width="0.0268%" height="15" fill="rgb(205,27,8)" fg:x="77413" fg:w="21"/><text x="98.9697%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.03%)</title><rect x="98.7197%" y="2501" width="0.0268%" height="15" fill="rgb(217,57,3)" fg:x="77413" fg:w="21"/><text x="98.9697%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21 samples, 0.03%)</title><rect x="98.7197%" y="2485" width="0.0268%" height="15" fill="rgb(242,21,38)" fg:x="77413" fg:w="21"/><text x="98.9697%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="98.7248%" y="2469" width="0.0217%" height="15" fill="rgb(209,64,43)" fg:x="77417" fg:w="17"/><text x="98.9748%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="98.7248%" y="2453" width="0.0217%" height="15" fill="rgb(222,2,46)" fg:x="77417" fg:w="17"/><text x="98.9748%" y="2463.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="98.7248%" y="2437" width="0.0217%" height="15" fill="rgb(218,19,44)" fg:x="77417" fg:w="17"/><text x="98.9748%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="98.7248%" y="2421" width="0.0217%" height="15" fill="rgb(240,203,42)" fg:x="77417" fg:w="17"/><text x="98.9748%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="98.7248%" y="2405" width="0.0217%" height="15" fill="rgb(229,23,45)" fg:x="77417" fg:w="17"/><text x="98.9748%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.02%)</title><rect x="98.7248%" y="2389" width="0.0217%" height="15" fill="rgb(205,228,51)" fg:x="77417" fg:w="17"/><text x="98.9748%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="98.7248%" y="2373" width="0.0217%" height="15" fill="rgb(239,36,20)" fg:x="77417" fg:w="17"/><text x="98.9748%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="98.7248%" y="2357" width="0.0217%" height="15" fill="rgb(248,172,27)" fg:x="77417" fg:w="17"/><text x="98.9748%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="98.7248%" y="2341" width="0.0217%" height="15" fill="rgb(244,55,32)" fg:x="77417" fg:w="17"/><text x="98.9748%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="98.7248%" y="2325" width="0.0217%" height="15" fill="rgb(215,97,16)" fg:x="77417" fg:w="17"/><text x="98.9748%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="98.7248%" y="2309" width="0.0217%" height="15" fill="rgb(224,80,29)" fg:x="77417" fg:w="17"/><text x="98.9748%" y="2319.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="98.7362%" y="2293" width="0.0102%" height="15" fill="rgb(216,93,47)" fg:x="77426" fg:w="8"/><text x="98.9862%" y="2303.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="98.7362%" y="2277" width="0.0102%" height="15" fill="rgb(238,159,10)" fg:x="77426" fg:w="8"/><text x="98.9862%" y="2287.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="98.7362%" y="2261" width="0.0102%" height="15" fill="rgb(223,98,29)" fg:x="77426" fg:w="8"/><text x="98.9862%" y="2271.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="98.7362%" y="2245" width="0.0102%" height="15" fill="rgb(210,176,23)" fg:x="77426" fg:w="8"/><text x="98.9862%" y="2255.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="98.7362%" y="2229" width="0.0102%" height="15" fill="rgb(242,162,27)" fg:x="77426" fg:w="8"/><text x="98.9862%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.01%)</title><rect x="98.7362%" y="2213" width="0.0102%" height="15" fill="rgb(245,109,32)" fg:x="77426" fg:w="8"/><text x="98.9862%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="98.7362%" y="2197" width="0.0102%" height="15" fill="rgb(248,87,8)" fg:x="77426" fg:w="8"/><text x="98.9862%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="98.7362%" y="2181" width="0.0102%" height="15" fill="rgb(250,160,50)" fg:x="77426" fg:w="8"/><text x="98.9862%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="98.7362%" y="2165" width="0.0102%" height="15" fill="rgb(246,165,25)" fg:x="77426" fg:w="8"/><text x="98.9862%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="98.7362%" y="2149" width="0.0102%" height="15" fill="rgb(249,219,3)" fg:x="77426" fg:w="8"/><text x="98.9862%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="98.7362%" y="2133" width="0.0102%" height="15" fill="rgb(226,66,5)" fg:x="77426" fg:w="8"/><text x="98.9862%" y="2143.50"></text></g><g><title>par_exec_13 (10 samples, 0.01%)</title><rect x="98.7464%" y="3189" width="0.0128%" height="15" fill="rgb(250,220,43)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="3199.50"></text></g><g><title>__GI___clone3 (10 samples, 0.01%)</title><rect x="98.7464%" y="3173" width="0.0128%" height="15" fill="rgb(225,111,31)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="3183.50"></text></g><g><title>start_thread (10 samples, 0.01%)</title><rect x="98.7464%" y="3157" width="0.0128%" height="15" fill="rgb(248,106,18)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (10 samples, 0.01%)</title><rect x="98.7464%" y="3141" width="0.0128%" height="15" fill="rgb(220,226,45)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="98.7464%" y="3125" width="0.0128%" height="15" fill="rgb(208,58,53)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="98.7464%" y="3109" width="0.0128%" height="15" fill="rgb(209,133,1)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (10 samples, 0.01%)</title><rect x="98.7464%" y="3093" width="0.0128%" height="15" fill="rgb(228,216,27)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (10 samples, 0.01%)</title><rect x="98.7464%" y="3077" width="0.0128%" height="15" fill="rgb(238,155,2)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="98.7464%" y="3061" width="0.0128%" height="15" fill="rgb(244,99,37)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="3071.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="98.7464%" y="3045" width="0.0128%" height="15" fill="rgb(254,32,3)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="98.7464%" y="3029" width="0.0128%" height="15" fill="rgb(234,46,50)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="98.7464%" y="3013" width="0.0128%" height="15" fill="rgb(232,118,51)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (10 samples, 0.01%)</title><rect x="98.7464%" y="2997" width="0.0128%" height="15" fill="rgb(207,24,32)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.01%)</title><rect x="98.7464%" y="2981" width="0.0128%" height="15" fill="rgb(208,107,43)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (10 samples, 0.01%)</title><rect x="98.7464%" y="2965" width="0.0128%" height="15" fill="rgb(231,28,9)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (10 samples, 0.01%)</title><rect x="98.7464%" y="2949" width="0.0128%" height="15" fill="rgb(241,204,15)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (10 samples, 0.01%)</title><rect x="98.7464%" y="2933" width="0.0128%" height="15" fill="rgb(214,54,15)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (10 samples, 0.01%)</title><rect x="98.7464%" y="2917" width="0.0128%" height="15" fill="rgb(230,12,28)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.01%)</title><rect x="98.7464%" y="2901" width="0.0128%" height="15" fill="rgb(221,171,5)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (10 samples, 0.01%)</title><rect x="98.7464%" y="2885" width="0.0128%" height="15" fill="rgb(207,72,25)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (10 samples, 0.01%)</title><rect x="98.7464%" y="2869" width="0.0128%" height="15" fill="rgb(249,79,37)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10 samples, 0.01%)</title><rect x="98.7464%" y="2853" width="0.0128%" height="15" fill="rgb(209,98,49)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.01%)</title><rect x="98.7464%" y="2837" width="0.0128%" height="15" fill="rgb(221,62,13)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="98.7464%" y="2821" width="0.0128%" height="15" fill="rgb(223,39,6)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2831.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="98.7464%" y="2805" width="0.0128%" height="15" fill="rgb(246,163,20)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="98.7464%" y="2789" width="0.0128%" height="15" fill="rgb(211,111,29)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="98.7464%" y="2773" width="0.0128%" height="15" fill="rgb(243,118,5)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (10 samples, 0.01%)</title><rect x="98.7464%" y="2757" width="0.0128%" height="15" fill="rgb(240,144,52)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.01%)</title><rect x="98.7464%" y="2741" width="0.0128%" height="15" fill="rgb(244,158,36)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.01%)</title><rect x="98.7464%" y="2725" width="0.0128%" height="15" fill="rgb(241,109,37)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="98.7464%" y="2709" width="0.0128%" height="15" fill="rgb(213,95,32)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.01%)</title><rect x="98.7464%" y="2693" width="0.0128%" height="15" fill="rgb(252,193,9)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.01%)</title><rect x="98.7464%" y="2677" width="0.0128%" height="15" fill="rgb(225,213,21)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.01%)</title><rect x="98.7464%" y="2661" width="0.0128%" height="15" fill="rgb(220,172,46)" fg:x="77434" fg:w="10"/><text x="98.9964%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="98.7490%" y="2645" width="0.0102%" height="15" fill="rgb(235,75,41)" fg:x="77436" fg:w="8"/><text x="98.9990%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="98.7490%" y="2629" width="0.0102%" height="15" fill="rgb(213,86,9)" fg:x="77436" fg:w="8"/><text x="98.9990%" y="2639.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="98.7490%" y="2613" width="0.0102%" height="15" fill="rgb(238,127,51)" fg:x="77436" fg:w="8"/><text x="98.9990%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="98.7490%" y="2597" width="0.0102%" height="15" fill="rgb(215,2,54)" fg:x="77436" fg:w="8"/><text x="98.9990%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="98.7490%" y="2581" width="0.0102%" height="15" fill="rgb(245,80,6)" fg:x="77436" fg:w="8"/><text x="98.9990%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.01%)</title><rect x="98.7490%" y="2565" width="0.0102%" height="15" fill="rgb(233,106,42)" fg:x="77436" fg:w="8"/><text x="98.9990%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="98.7490%" y="2549" width="0.0102%" height="15" fill="rgb(244,86,38)" fg:x="77436" fg:w="8"/><text x="98.9990%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="98.7490%" y="2533" width="0.0102%" height="15" fill="rgb(242,167,7)" fg:x="77436" fg:w="8"/><text x="98.9990%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="98.7490%" y="2517" width="0.0102%" height="15" fill="rgb(218,216,3)" fg:x="77436" fg:w="8"/><text x="98.9990%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="98.7490%" y="2501" width="0.0102%" height="15" fill="rgb(206,136,36)" fg:x="77436" fg:w="8"/><text x="98.9990%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="98.7490%" y="2485" width="0.0102%" height="15" fill="rgb(206,206,15)" fg:x="77436" fg:w="8"/><text x="98.9990%" y="2495.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (18 samples, 0.02%)</title><rect x="98.7668%" y="2645" width="0.0230%" height="15" fill="rgb(207,163,34)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2655.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (18 samples, 0.02%)</title><rect x="98.7668%" y="2629" width="0.0230%" height="15" fill="rgb(240,127,22)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2639.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (18 samples, 0.02%)</title><rect x="98.7668%" y="2613" width="0.0230%" height="15" fill="rgb(227,49,5)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2623.50"></text></g><g><title>rayon_core::job::JobRef::execute (18 samples, 0.02%)</title><rect x="98.7668%" y="2597" width="0.0230%" height="15" fill="rgb(231,8,6)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2607.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (18 samples, 0.02%)</title><rect x="98.7668%" y="2581" width="0.0230%" height="15" fill="rgb(223,21,24)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2591.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.02%)</title><rect x="98.7668%" y="2565" width="0.0230%" height="15" fill="rgb(244,44,52)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2575.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="98.7668%" y="2549" width="0.0230%" height="15" fill="rgb(207,73,28)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2559.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="98.7668%" y="2533" width="0.0230%" height="15" fill="rgb(234,215,10)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2543.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="98.7668%" y="2517" width="0.0230%" height="15" fill="rgb(236,85,3)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2527.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="98.7668%" y="2501" width="0.0230%" height="15" fill="rgb(236,102,39)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2511.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (18 samples, 0.02%)</title><rect x="98.7668%" y="2485" width="0.0230%" height="15" fill="rgb(243,50,8)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (18 samples, 0.02%)</title><rect x="98.7668%" y="2469" width="0.0230%" height="15" fill="rgb(207,111,4)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.02%)</title><rect x="98.7668%" y="2453" width="0.0230%" height="15" fill="rgb(230,52,42)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="98.7668%" y="2437" width="0.0230%" height="15" fill="rgb(252,178,50)" fg:x="77450" fg:w="18"/><text x="99.0168%" y="2447.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="98.7681%" y="2421" width="0.0217%" height="15" fill="rgb(234,46,35)" fg:x="77451" fg:w="17"/><text x="99.0181%" y="2431.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="98.7681%" y="2405" width="0.0217%" height="15" fill="rgb(228,69,37)" fg:x="77451" fg:w="17"/><text x="99.0181%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="98.7681%" y="2389" width="0.0217%" height="15" fill="rgb(221,21,11)" fg:x="77451" fg:w="17"/><text x="99.0181%" y="2399.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.01%)</title><rect x="98.7898%" y="2245" width="0.0102%" height="15" fill="rgb(223,56,9)" fg:x="77468" fg:w="8"/><text x="99.0398%" y="2255.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.01%)</title><rect x="98.7898%" y="2229" width="0.0102%" height="15" fill="rgb(234,30,19)" fg:x="77468" fg:w="8"/><text x="99.0398%" y="2239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="98.7898%" y="2213" width="0.0102%" height="15" fill="rgb(211,64,54)" fg:x="77468" fg:w="8"/><text x="99.0398%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="98.7898%" y="2197" width="0.0102%" height="15" fill="rgb(250,189,5)" fg:x="77468" fg:w="8"/><text x="99.0398%" y="2207.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="98.7898%" y="2181" width="0.0102%" height="15" fill="rgb(214,180,13)" fg:x="77468" fg:w="8"/><text x="99.0398%" y="2191.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="98.7898%" y="2165" width="0.0102%" height="15" fill="rgb(238,40,40)" fg:x="77468" fg:w="8"/><text x="99.0398%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="98.7898%" y="2149" width="0.0102%" height="15" fill="rgb(214,101,38)" fg:x="77468" fg:w="8"/><text x="99.0398%" y="2159.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.01%)</title><rect x="98.7898%" y="2357" width="0.0115%" height="15" fill="rgb(242,65,53)" fg:x="77468" fg:w="9"/><text x="99.0398%" y="2367.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.01%)</title><rect x="98.7898%" y="2341" width="0.0115%" height="15" fill="rgb(230,22,45)" fg:x="77468" fg:w="9"/><text x="99.0398%" y="2351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="98.7898%" y="2325" width="0.0115%" height="15" fill="rgb(223,77,1)" fg:x="77468" fg:w="9"/><text x="99.0398%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.7898%" y="2309" width="0.0115%" height="15" fill="rgb(227,33,37)" fg:x="77468" fg:w="9"/><text x="99.0398%" y="2319.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="98.7898%" y="2293" width="0.0115%" height="15" fill="rgb(224,148,39)" fg:x="77468" fg:w="9"/><text x="99.0398%" y="2303.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="98.7898%" y="2277" width="0.0115%" height="15" fill="rgb(232,212,39)" fg:x="77468" fg:w="9"/><text x="99.0398%" y="2287.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="98.7898%" y="2261" width="0.0115%" height="15" fill="rgb(251,172,7)" fg:x="77468" fg:w="9"/><text x="99.0398%" y="2271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (15 samples, 0.02%)</title><rect x="98.7898%" y="2469" width="0.0191%" height="15" fill="rgb(219,39,9)" fg:x="77468" fg:w="15"/><text x="99.0398%" y="2479.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (15 samples, 0.02%)</title><rect x="98.7898%" y="2453" width="0.0191%" height="15" fill="rgb(228,118,14)" fg:x="77468" fg:w="15"/><text x="99.0398%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (15 samples, 0.02%)</title><rect x="98.7898%" y="2437" width="0.0191%" height="15" fill="rgb(207,140,10)" fg:x="77468" fg:w="15"/><text x="99.0398%" y="2447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="98.7898%" y="2421" width="0.0191%" height="15" fill="rgb(227,111,53)" fg:x="77468" fg:w="15"/><text x="99.0398%" y="2431.50"></text></g><g><title>rayon_core::join::join_context (15 samples, 0.02%)</title><rect x="98.7898%" y="2405" width="0.0191%" height="15" fill="rgb(216,165,16)" fg:x="77468" fg:w="15"/><text x="99.0398%" y="2415.50"></text></g><g><title>rayon_core::registry::in_worker (15 samples, 0.02%)</title><rect x="98.7898%" y="2389" width="0.0191%" height="15" fill="rgb(226,111,18)" fg:x="77468" fg:w="15"/><text x="99.0398%" y="2399.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.02%)</title><rect x="98.7898%" y="2373" width="0.0191%" height="15" fill="rgb(251,27,17)" fg:x="77468" fg:w="15"/><text x="99.0398%" y="2383.50"></text></g><g><title>par_exec_14 (50 samples, 0.06%)</title><rect x="98.7592%" y="3189" width="0.0638%" height="15" fill="rgb(254,69,9)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="3199.50"></text></g><g><title>__GI___clone3 (50 samples, 0.06%)</title><rect x="98.7592%" y="3173" width="0.0638%" height="15" fill="rgb(234,140,37)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="3183.50"></text></g><g><title>start_thread (50 samples, 0.06%)</title><rect x="98.7592%" y="3157" width="0.0638%" height="15" fill="rgb(220,93,8)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (50 samples, 0.06%)</title><rect x="98.7592%" y="3141" width="0.0638%" height="15" fill="rgb(236,113,3)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50 samples, 0.06%)</title><rect x="98.7592%" y="3125" width="0.0638%" height="15" fill="rgb(234,108,23)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50 samples, 0.06%)</title><rect x="98.7592%" y="3109" width="0.0638%" height="15" fill="rgb(205,114,34)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (50 samples, 0.06%)</title><rect x="98.7592%" y="3093" width="0.0638%" height="15" fill="rgb(236,200,45)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (50 samples, 0.06%)</title><rect x="98.7592%" y="3077" width="0.0638%" height="15" fill="rgb(227,194,29)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (50 samples, 0.06%)</title><rect x="98.7592%" y="3061" width="0.0638%" height="15" fill="rgb(250,76,42)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="3071.50"></text></g><g><title>std::panicking::try (50 samples, 0.06%)</title><rect x="98.7592%" y="3045" width="0.0638%" height="15" fill="rgb(208,128,8)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (50 samples, 0.06%)</title><rect x="98.7592%" y="3029" width="0.0638%" height="15" fill="rgb(229,209,35)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50 samples, 0.06%)</title><rect x="98.7592%" y="3013" width="0.0638%" height="15" fill="rgb(215,39,53)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (50 samples, 0.06%)</title><rect x="98.7592%" y="2997" width="0.0638%" height="15" fill="rgb(219,123,41)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (50 samples, 0.06%)</title><rect x="98.7592%" y="2981" width="0.0638%" height="15" fill="rgb(212,158,18)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (50 samples, 0.06%)</title><rect x="98.7592%" y="2965" width="0.0638%" height="15" fill="rgb(234,196,53)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (50 samples, 0.06%)</title><rect x="98.7592%" y="2949" width="0.0638%" height="15" fill="rgb(210,139,12)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (50 samples, 0.06%)</title><rect x="98.7592%" y="2933" width="0.0638%" height="15" fill="rgb(220,116,54)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (50 samples, 0.06%)</title><rect x="98.7592%" y="2917" width="0.0638%" height="15" fill="rgb(247,103,28)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (50 samples, 0.06%)</title><rect x="98.7592%" y="2901" width="0.0638%" height="15" fill="rgb(253,156,45)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (50 samples, 0.06%)</title><rect x="98.7592%" y="2885" width="0.0638%" height="15" fill="rgb(237,157,52)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (50 samples, 0.06%)</title><rect x="98.7592%" y="2869" width="0.0638%" height="15" fill="rgb(253,112,16)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (50 samples, 0.06%)</title><rect x="98.7592%" y="2853" width="0.0638%" height="15" fill="rgb(234,70,18)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (50 samples, 0.06%)</title><rect x="98.7592%" y="2837" width="0.0638%" height="15" fill="rgb(247,138,19)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (50 samples, 0.06%)</title><rect x="98.7592%" y="2821" width="0.0638%" height="15" fill="rgb(207,171,1)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2831.50"></text></g><g><title>std::panicking::try (50 samples, 0.06%)</title><rect x="98.7592%" y="2805" width="0.0638%" height="15" fill="rgb(239,213,3)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (50 samples, 0.06%)</title><rect x="98.7592%" y="2789" width="0.0638%" height="15" fill="rgb(226,112,4)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50 samples, 0.06%)</title><rect x="98.7592%" y="2773" width="0.0638%" height="15" fill="rgb(252,170,12)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (50 samples, 0.06%)</title><rect x="98.7592%" y="2757" width="0.0638%" height="15" fill="rgb(241,106,13)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (50 samples, 0.06%)</title><rect x="98.7592%" y="2741" width="0.0638%" height="15" fill="rgb(225,73,23)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (50 samples, 0.06%)</title><rect x="98.7592%" y="2725" width="0.0638%" height="15" fill="rgb(251,227,29)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (50 samples, 0.06%)</title><rect x="98.7592%" y="2709" width="0.0638%" height="15" fill="rgb(237,144,13)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (50 samples, 0.06%)</title><rect x="98.7592%" y="2693" width="0.0638%" height="15" fill="rgb(232,106,46)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (50 samples, 0.06%)</title><rect x="98.7592%" y="2677" width="0.0638%" height="15" fill="rgb(245,154,53)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (50 samples, 0.06%)</title><rect x="98.7592%" y="2661" width="0.0638%" height="15" fill="rgb(212,119,47)" fg:x="77444" fg:w="50"/><text x="99.0092%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.03%)</title><rect x="98.7898%" y="2645" width="0.0332%" height="15" fill="rgb(253,135,25)" fg:x="77468" fg:w="26"/><text x="99.0398%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.03%)</title><rect x="98.7898%" y="2629" width="0.0332%" height="15" fill="rgb(253,208,39)" fg:x="77468" fg:w="26"/><text x="99.0398%" y="2639.50"></text></g><g><title>std::panicking::try (26 samples, 0.03%)</title><rect x="98.7898%" y="2613" width="0.0332%" height="15" fill="rgb(226,64,12)" fg:x="77468" fg:w="26"/><text x="99.0398%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.03%)</title><rect x="98.7898%" y="2597" width="0.0332%" height="15" fill="rgb(214,162,37)" fg:x="77468" fg:w="26"/><text x="99.0398%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.03%)</title><rect x="98.7898%" y="2581" width="0.0332%" height="15" fill="rgb(250,104,5)" fg:x="77468" fg:w="26"/><text x="99.0398%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (26 samples, 0.03%)</title><rect x="98.7898%" y="2565" width="0.0332%" height="15" fill="rgb(220,202,50)" fg:x="77468" fg:w="26"/><text x="99.0398%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.03%)</title><rect x="98.7898%" y="2549" width="0.0332%" height="15" fill="rgb(248,67,38)" fg:x="77468" fg:w="26"/><text x="99.0398%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.03%)</title><rect x="98.7898%" y="2533" width="0.0332%" height="15" fill="rgb(242,94,35)" fg:x="77468" fg:w="26"/><text x="99.0398%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.03%)</title><rect x="98.7898%" y="2517" width="0.0332%" height="15" fill="rgb(209,78,37)" fg:x="77468" fg:w="26"/><text x="99.0398%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.03%)</title><rect x="98.7898%" y="2501" width="0.0332%" height="15" fill="rgb(230,126,47)" fg:x="77468" fg:w="26"/><text x="99.0398%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.03%)</title><rect x="98.7898%" y="2485" width="0.0332%" height="15" fill="rgb(222,110,35)" fg:x="77468" fg:w="26"/><text x="99.0398%" y="2495.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.01%)</title><rect x="98.8370%" y="2469" width="0.0115%" height="15" fill="rgb(233,154,20)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2479.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.01%)</title><rect x="98.8370%" y="2453" width="0.0115%" height="15" fill="rgb(223,53,50)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="98.8370%" y="2437" width="0.0115%" height="15" fill="rgb(251,27,26)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.8370%" y="2421" width="0.0115%" height="15" fill="rgb(223,189,16)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2431.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="98.8370%" y="2405" width="0.0115%" height="15" fill="rgb(207,5,54)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2415.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="98.8370%" y="2389" width="0.0115%" height="15" fill="rgb(254,124,50)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2399.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="98.8370%" y="2373" width="0.0115%" height="15" fill="rgb(253,193,24)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2383.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.01%)</title><rect x="98.8370%" y="2357" width="0.0115%" height="15" fill="rgb(235,170,24)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2367.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.01%)</title><rect x="98.8370%" y="2341" width="0.0115%" height="15" fill="rgb(222,212,52)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="98.8370%" y="2325" width="0.0115%" height="15" fill="rgb(223,17,45)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.8370%" y="2309" width="0.0115%" height="15" fill="rgb(227,103,26)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2319.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="98.8370%" y="2293" width="0.0115%" height="15" fill="rgb(251,151,25)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2303.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="98.8370%" y="2277" width="0.0115%" height="15" fill="rgb(248,144,29)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2287.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="98.8370%" y="2261" width="0.0115%" height="15" fill="rgb(245,97,16)" fg:x="77505" fg:w="9"/><text x="99.0870%" y="2271.50"></text></g><g><title>par_exec_15 (33 samples, 0.04%)</title><rect x="98.8230%" y="3189" width="0.0421%" height="15" fill="rgb(220,200,29)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="3199.50"></text></g><g><title>__GI___clone3 (33 samples, 0.04%)</title><rect x="98.8230%" y="3173" width="0.0421%" height="15" fill="rgb(206,38,29)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="3183.50"></text></g><g><title>start_thread (33 samples, 0.04%)</title><rect x="98.8230%" y="3157" width="0.0421%" height="15" fill="rgb(245,19,52)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (33 samples, 0.04%)</title><rect x="98.8230%" y="3141" width="0.0421%" height="15" fill="rgb(205,67,43)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (33 samples, 0.04%)</title><rect x="98.8230%" y="3125" width="0.0421%" height="15" fill="rgb(217,128,23)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (33 samples, 0.04%)</title><rect x="98.8230%" y="3109" width="0.0421%" height="15" fill="rgb(210,109,28)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (33 samples, 0.04%)</title><rect x="98.8230%" y="3093" width="0.0421%" height="15" fill="rgb(233,181,7)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (33 samples, 0.04%)</title><rect x="98.8230%" y="3077" width="0.0421%" height="15" fill="rgb(244,11,22)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (33 samples, 0.04%)</title><rect x="98.8230%" y="3061" width="0.0421%" height="15" fill="rgb(205,124,54)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="3071.50"></text></g><g><title>std::panicking::try (33 samples, 0.04%)</title><rect x="98.8230%" y="3045" width="0.0421%" height="15" fill="rgb(218,21,27)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (33 samples, 0.04%)</title><rect x="98.8230%" y="3029" width="0.0421%" height="15" fill="rgb(224,153,33)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (33 samples, 0.04%)</title><rect x="98.8230%" y="3013" width="0.0421%" height="15" fill="rgb(240,219,28)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (33 samples, 0.04%)</title><rect x="98.8230%" y="2997" width="0.0421%" height="15" fill="rgb(214,80,29)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (33 samples, 0.04%)</title><rect x="98.8230%" y="2981" width="0.0421%" height="15" fill="rgb(247,148,44)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (33 samples, 0.04%)</title><rect x="98.8230%" y="2965" width="0.0421%" height="15" fill="rgb(243,110,30)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (33 samples, 0.04%)</title><rect x="98.8230%" y="2949" width="0.0421%" height="15" fill="rgb(243,173,41)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (33 samples, 0.04%)</title><rect x="98.8230%" y="2933" width="0.0421%" height="15" fill="rgb(225,160,47)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (33 samples, 0.04%)</title><rect x="98.8230%" y="2917" width="0.0421%" height="15" fill="rgb(215,44,21)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (33 samples, 0.04%)</title><rect x="98.8230%" y="2901" width="0.0421%" height="15" fill="rgb(248,90,3)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (33 samples, 0.04%)</title><rect x="98.8230%" y="2885" width="0.0421%" height="15" fill="rgb(220,196,49)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (33 samples, 0.04%)</title><rect x="98.8230%" y="2869" width="0.0421%" height="15" fill="rgb(217,138,14)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (33 samples, 0.04%)</title><rect x="98.8230%" y="2853" width="0.0421%" height="15" fill="rgb(219,111,20)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (33 samples, 0.04%)</title><rect x="98.8230%" y="2837" width="0.0421%" height="15" fill="rgb(218,114,4)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (33 samples, 0.04%)</title><rect x="98.8230%" y="2821" width="0.0421%" height="15" fill="rgb(238,133,3)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2831.50"></text></g><g><title>std::panicking::try (33 samples, 0.04%)</title><rect x="98.8230%" y="2805" width="0.0421%" height="15" fill="rgb(224,95,0)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (33 samples, 0.04%)</title><rect x="98.8230%" y="2789" width="0.0421%" height="15" fill="rgb(220,169,35)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (33 samples, 0.04%)</title><rect x="98.8230%" y="2773" width="0.0421%" height="15" fill="rgb(242,116,47)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (33 samples, 0.04%)</title><rect x="98.8230%" y="2757" width="0.0421%" height="15" fill="rgb(251,42,20)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (33 samples, 0.04%)</title><rect x="98.8230%" y="2741" width="0.0421%" height="15" fill="rgb(234,7,34)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (33 samples, 0.04%)</title><rect x="98.8230%" y="2725" width="0.0421%" height="15" fill="rgb(243,208,13)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (33 samples, 0.04%)</title><rect x="98.8230%" y="2709" width="0.0421%" height="15" fill="rgb(227,33,28)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (33 samples, 0.04%)</title><rect x="98.8230%" y="2693" width="0.0421%" height="15" fill="rgb(250,47,37)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (33 samples, 0.04%)</title><rect x="98.8230%" y="2677" width="0.0421%" height="15" fill="rgb(235,111,52)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (33 samples, 0.04%)</title><rect x="98.8230%" y="2661" width="0.0421%" height="15" fill="rgb(223,64,28)" fg:x="77494" fg:w="33"/><text x="99.0730%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (22 samples, 0.03%)</title><rect x="98.8370%" y="2645" width="0.0281%" height="15" fill="rgb(236,67,22)" fg:x="77505" fg:w="22"/><text x="99.0870%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.03%)</title><rect x="98.8370%" y="2629" width="0.0281%" height="15" fill="rgb(243,79,24)" fg:x="77505" fg:w="22"/><text x="99.0870%" y="2639.50"></text></g><g><title>std::panicking::try (22 samples, 0.03%)</title><rect x="98.8370%" y="2613" width="0.0281%" height="15" fill="rgb(241,225,22)" fg:x="77505" fg:w="22"/><text x="99.0870%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.03%)</title><rect x="98.8370%" y="2597" width="0.0281%" height="15" fill="rgb(228,214,26)" fg:x="77505" fg:w="22"/><text x="99.0870%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.03%)</title><rect x="98.8370%" y="2581" width="0.0281%" height="15" fill="rgb(219,84,52)" fg:x="77505" fg:w="22"/><text x="99.0870%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (22 samples, 0.03%)</title><rect x="98.8370%" y="2565" width="0.0281%" height="15" fill="rgb(220,12,22)" fg:x="77505" fg:w="22"/><text x="99.0870%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (22 samples, 0.03%)</title><rect x="98.8370%" y="2549" width="0.0281%" height="15" fill="rgb(219,9,49)" fg:x="77505" fg:w="22"/><text x="99.0870%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="98.8370%" y="2533" width="0.0281%" height="15" fill="rgb(237,40,43)" fg:x="77505" fg:w="22"/><text x="99.0870%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.03%)</title><rect x="98.8370%" y="2517" width="0.0281%" height="15" fill="rgb(212,189,32)" fg:x="77505" fg:w="22"/><text x="99.0870%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.03%)</title><rect x="98.8370%" y="2501" width="0.0281%" height="15" fill="rgb(247,48,9)" fg:x="77505" fg:w="22"/><text x="99.0870%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.03%)</title><rect x="98.8370%" y="2485" width="0.0281%" height="15" fill="rgb(247,112,3)" fg:x="77505" fg:w="22"/><text x="99.0870%" y="2495.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (8 samples, 0.01%)</title><rect x="98.8689%" y="2645" width="0.0102%" height="15" fill="rgb(243,110,18)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2655.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (8 samples, 0.01%)</title><rect x="98.8689%" y="2629" width="0.0102%" height="15" fill="rgb(233,223,44)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2639.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (8 samples, 0.01%)</title><rect x="98.8689%" y="2613" width="0.0102%" height="15" fill="rgb(245,160,20)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2623.50"></text></g><g><title>rayon_core::job::JobRef::execute (8 samples, 0.01%)</title><rect x="98.8689%" y="2597" width="0.0102%" height="15" fill="rgb(225,37,1)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2607.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (8 samples, 0.01%)</title><rect x="98.8689%" y="2581" width="0.0102%" height="15" fill="rgb(253,227,39)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2591.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="98.8689%" y="2565" width="0.0102%" height="15" fill="rgb(240,179,26)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2575.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="98.8689%" y="2549" width="0.0102%" height="15" fill="rgb(237,212,23)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2559.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="98.8689%" y="2533" width="0.0102%" height="15" fill="rgb(221,38,11)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2543.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="98.8689%" y="2517" width="0.0102%" height="15" fill="rgb(215,85,6)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2527.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="98.8689%" y="2501" width="0.0102%" height="15" fill="rgb(239,64,14)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2511.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (8 samples, 0.01%)</title><rect x="98.8689%" y="2485" width="0.0102%" height="15" fill="rgb(215,150,32)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.01%)</title><rect x="98.8689%" y="2469" width="0.0102%" height="15" fill="rgb(238,15,13)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="98.8689%" y="2453" width="0.0102%" height="15" fill="rgb(251,87,8)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="98.8689%" y="2437" width="0.0102%" height="15" fill="rgb(206,86,1)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2447.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="98.8689%" y="2421" width="0.0102%" height="15" fill="rgb(208,151,45)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2431.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="98.8689%" y="2405" width="0.0102%" height="15" fill="rgb(231,181,24)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="98.8689%" y="2389" width="0.0102%" height="15" fill="rgb(240,106,29)" fg:x="77530" fg:w="8"/><text x="99.1189%" y="2399.50"></text></g><g><title>par_exec_16 (27 samples, 0.03%)</title><rect x="98.8650%" y="3189" width="0.0344%" height="15" fill="rgb(227,166,11)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="3199.50"></text></g><g><title>__GI___clone3 (27 samples, 0.03%)</title><rect x="98.8650%" y="3173" width="0.0344%" height="15" fill="rgb(254,14,34)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="3183.50"></text></g><g><title>start_thread (27 samples, 0.03%)</title><rect x="98.8650%" y="3157" width="0.0344%" height="15" fill="rgb(223,222,6)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (27 samples, 0.03%)</title><rect x="98.8650%" y="3141" width="0.0344%" height="15" fill="rgb(245,69,24)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.03%)</title><rect x="98.8650%" y="3125" width="0.0344%" height="15" fill="rgb(213,193,7)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.03%)</title><rect x="98.8650%" y="3109" width="0.0344%" height="15" fill="rgb(237,92,51)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (27 samples, 0.03%)</title><rect x="98.8650%" y="3093" width="0.0344%" height="15" fill="rgb(225,194,6)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (27 samples, 0.03%)</title><rect x="98.8650%" y="3077" width="0.0344%" height="15" fill="rgb(205,159,49)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (27 samples, 0.03%)</title><rect x="98.8650%" y="3061" width="0.0344%" height="15" fill="rgb(219,69,2)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="3071.50"></text></g><g><title>std::panicking::try (27 samples, 0.03%)</title><rect x="98.8650%" y="3045" width="0.0344%" height="15" fill="rgb(215,107,24)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (27 samples, 0.03%)</title><rect x="98.8650%" y="3029" width="0.0344%" height="15" fill="rgb(249,208,29)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.03%)</title><rect x="98.8650%" y="3013" width="0.0344%" height="15" fill="rgb(213,147,10)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (27 samples, 0.03%)</title><rect x="98.8650%" y="2997" width="0.0344%" height="15" fill="rgb(254,140,42)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (27 samples, 0.03%)</title><rect x="98.8650%" y="2981" width="0.0344%" height="15" fill="rgb(249,9,15)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (27 samples, 0.03%)</title><rect x="98.8650%" y="2965" width="0.0344%" height="15" fill="rgb(210,19,33)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (27 samples, 0.03%)</title><rect x="98.8650%" y="2949" width="0.0344%" height="15" fill="rgb(241,121,22)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (27 samples, 0.03%)</title><rect x="98.8650%" y="2933" width="0.0344%" height="15" fill="rgb(244,69,52)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (27 samples, 0.03%)</title><rect x="98.8650%" y="2917" width="0.0344%" height="15" fill="rgb(244,191,54)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (27 samples, 0.03%)</title><rect x="98.8650%" y="2901" width="0.0344%" height="15" fill="rgb(250,3,53)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (27 samples, 0.03%)</title><rect x="98.8650%" y="2885" width="0.0344%" height="15" fill="rgb(205,77,3)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (27 samples, 0.03%)</title><rect x="98.8650%" y="2869" width="0.0344%" height="15" fill="rgb(207,155,3)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (27 samples, 0.03%)</title><rect x="98.8650%" y="2853" width="0.0344%" height="15" fill="rgb(224,79,2)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (27 samples, 0.03%)</title><rect x="98.8650%" y="2837" width="0.0344%" height="15" fill="rgb(243,172,5)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (27 samples, 0.03%)</title><rect x="98.8650%" y="2821" width="0.0344%" height="15" fill="rgb(217,23,43)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2831.50"></text></g><g><title>std::panicking::try (27 samples, 0.03%)</title><rect x="98.8650%" y="2805" width="0.0344%" height="15" fill="rgb(223,109,20)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (27 samples, 0.03%)</title><rect x="98.8650%" y="2789" width="0.0344%" height="15" fill="rgb(232,159,21)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.03%)</title><rect x="98.8650%" y="2773" width="0.0344%" height="15" fill="rgb(219,58,2)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (27 samples, 0.03%)</title><rect x="98.8650%" y="2757" width="0.0344%" height="15" fill="rgb(241,56,8)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (27 samples, 0.03%)</title><rect x="98.8650%" y="2741" width="0.0344%" height="15" fill="rgb(249,10,27)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (27 samples, 0.03%)</title><rect x="98.8650%" y="2725" width="0.0344%" height="15" fill="rgb(248,177,5)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.03%)</title><rect x="98.8650%" y="2709" width="0.0344%" height="15" fill="rgb(239,12,30)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (27 samples, 0.03%)</title><rect x="98.8650%" y="2693" width="0.0344%" height="15" fill="rgb(229,164,25)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (27 samples, 0.03%)</title><rect x="98.8650%" y="2677" width="0.0344%" height="15" fill="rgb(231,217,50)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (27 samples, 0.03%)</title><rect x="98.8650%" y="2661" width="0.0344%" height="15" fill="rgb(247,99,32)" fg:x="77527" fg:w="27"/><text x="99.1150%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (16 samples, 0.02%)</title><rect x="98.8791%" y="2645" width="0.0204%" height="15" fill="rgb(240,74,50)" fg:x="77538" fg:w="16"/><text x="99.1291%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.02%)</title><rect x="98.8791%" y="2629" width="0.0204%" height="15" fill="rgb(218,54,8)" fg:x="77538" fg:w="16"/><text x="99.1291%" y="2639.50"></text></g><g><title>std::panicking::try (16 samples, 0.02%)</title><rect x="98.8791%" y="2613" width="0.0204%" height="15" fill="rgb(227,132,20)" fg:x="77538" fg:w="16"/><text x="99.1291%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.02%)</title><rect x="98.8791%" y="2597" width="0.0204%" height="15" fill="rgb(232,134,12)" fg:x="77538" fg:w="16"/><text x="99.1291%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.02%)</title><rect x="98.8791%" y="2581" width="0.0204%" height="15" fill="rgb(250,129,18)" fg:x="77538" fg:w="16"/><text x="99.1291%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (16 samples, 0.02%)</title><rect x="98.8791%" y="2565" width="0.0204%" height="15" fill="rgb(232,129,47)" fg:x="77538" fg:w="16"/><text x="99.1291%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.02%)</title><rect x="98.8791%" y="2549" width="0.0204%" height="15" fill="rgb(230,31,40)" fg:x="77538" fg:w="16"/><text x="99.1291%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="98.8791%" y="2533" width="0.0204%" height="15" fill="rgb(232,126,10)" fg:x="77538" fg:w="16"/><text x="99.1291%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.02%)</title><rect x="98.8791%" y="2517" width="0.0204%" height="15" fill="rgb(205,46,31)" fg:x="77538" fg:w="16"/><text x="99.1291%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.02%)</title><rect x="98.8791%" y="2501" width="0.0204%" height="15" fill="rgb(232,37,37)" fg:x="77538" fg:w="16"/><text x="99.1291%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.02%)</title><rect x="98.8791%" y="2485" width="0.0204%" height="15" fill="rgb(240,91,16)" fg:x="77538" fg:w="16"/><text x="99.1291%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="98.8854%" y="2469" width="0.0140%" height="15" fill="rgb(224,160,9)" fg:x="77543" fg:w="11"/><text x="99.1354%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="98.8854%" y="2453" width="0.0140%" height="15" fill="rgb(215,116,14)" fg:x="77543" fg:w="11"/><text x="99.1354%" y="2463.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="98.8854%" y="2437" width="0.0140%" height="15" fill="rgb(235,46,36)" fg:x="77543" fg:w="11"/><text x="99.1354%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="98.8854%" y="2421" width="0.0140%" height="15" fill="rgb(238,39,28)" fg:x="77543" fg:w="11"/><text x="99.1354%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="98.8854%" y="2405" width="0.0140%" height="15" fill="rgb(242,125,29)" fg:x="77543" fg:w="11"/><text x="99.1354%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.01%)</title><rect x="98.8854%" y="2389" width="0.0140%" height="15" fill="rgb(238,211,30)" fg:x="77543" fg:w="11"/><text x="99.1354%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="98.8854%" y="2373" width="0.0140%" height="15" fill="rgb(227,201,28)" fg:x="77543" fg:w="11"/><text x="99.1354%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.8854%" y="2357" width="0.0140%" height="15" fill="rgb(238,77,29)" fg:x="77543" fg:w="11"/><text x="99.1354%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="98.8854%" y="2341" width="0.0140%" height="15" fill="rgb(213,221,40)" fg:x="77543" fg:w="11"/><text x="99.1354%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="98.8854%" y="2325" width="0.0140%" height="15" fill="rgb(226,220,44)" fg:x="77543" fg:w="11"/><text x="99.1354%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="98.8854%" y="2309" width="0.0140%" height="15" fill="rgb(228,90,23)" fg:x="77543" fg:w="11"/><text x="99.1354%" y="2319.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (13 samples, 0.02%)</title><rect x="98.8995%" y="2645" width="0.0166%" height="15" fill="rgb(235,72,29)" fg:x="77554" fg:w="13"/><text x="99.1495%" y="2655.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (13 samples, 0.02%)</title><rect x="98.8995%" y="2629" width="0.0166%" height="15" fill="rgb(248,117,39)" fg:x="77554" fg:w="13"/><text x="99.1495%" y="2639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.02%)</title><rect x="98.8995%" y="2613" width="0.0166%" height="15" fill="rgb(225,43,28)" fg:x="77554" fg:w="13"/><text x="99.1495%" y="2623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="98.8995%" y="2597" width="0.0166%" height="15" fill="rgb(240,93,4)" fg:x="77554" fg:w="13"/><text x="99.1495%" y="2607.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="98.8995%" y="2581" width="0.0166%" height="15" fill="rgb(234,178,27)" fg:x="77554" fg:w="13"/><text x="99.1495%" y="2591.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="98.8995%" y="2565" width="0.0166%" height="15" fill="rgb(254,88,22)" fg:x="77554" fg:w="13"/><text x="99.1495%" y="2575.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="98.8995%" y="2549" width="0.0166%" height="15" fill="rgb(240,206,50)" fg:x="77554" fg:w="13"/><text x="99.1495%" y="2559.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="98.9020%" y="2533" width="0.0140%" height="15" fill="rgb(249,103,8)" fg:x="77556" fg:w="11"/><text x="99.1520%" y="2543.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="98.9020%" y="2517" width="0.0140%" height="15" fill="rgb(241,178,36)" fg:x="77556" fg:w="11"/><text x="99.1520%" y="2527.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="98.9020%" y="2501" width="0.0140%" height="15" fill="rgb(246,110,15)" fg:x="77556" fg:w="11"/><text x="99.1520%" y="2511.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="98.9020%" y="2485" width="0.0140%" height="15" fill="rgb(207,14,43)" fg:x="77556" fg:w="11"/><text x="99.1520%" y="2495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="98.9020%" y="2469" width="0.0140%" height="15" fill="rgb(253,219,19)" fg:x="77556" fg:w="11"/><text x="99.1520%" y="2479.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.01%)</title><rect x="98.9020%" y="2453" width="0.0140%" height="15" fill="rgb(216,126,5)" fg:x="77556" fg:w="11"/><text x="99.1520%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="98.9020%" y="2437" width="0.0140%" height="15" fill="rgb(218,78,42)" fg:x="77556" fg:w="11"/><text x="99.1520%" y="2447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.9020%" y="2421" width="0.0140%" height="15" fill="rgb(215,154,40)" fg:x="77556" fg:w="11"/><text x="99.1520%" y="2431.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="98.9020%" y="2405" width="0.0140%" height="15" fill="rgb(235,129,32)" fg:x="77556" fg:w="11"/><text x="99.1520%" y="2415.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="98.9020%" y="2389" width="0.0140%" height="15" fill="rgb(218,51,8)" fg:x="77556" fg:w="11"/><text x="99.1520%" y="2399.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="98.9020%" y="2373" width="0.0140%" height="15" fill="rgb(245,48,4)" fg:x="77556" fg:w="11"/><text x="99.1520%" y="2383.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (28 samples, 0.04%)</title><rect x="98.8995%" y="2885" width="0.0357%" height="15" fill="rgb(250,175,12)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (28 samples, 0.04%)</title><rect x="98.8995%" y="2869" width="0.0357%" height="15" fill="rgb(237,95,40)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (28 samples, 0.04%)</title><rect x="98.8995%" y="2853" width="0.0357%" height="15" fill="rgb(244,120,0)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (28 samples, 0.04%)</title><rect x="98.8995%" y="2837" width="0.0357%" height="15" fill="rgb(241,19,42)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (28 samples, 0.04%)</title><rect x="98.8995%" y="2821" width="0.0357%" height="15" fill="rgb(217,174,48)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2831.50"></text></g><g><title>std::panicking::try (28 samples, 0.04%)</title><rect x="98.8995%" y="2805" width="0.0357%" height="15" fill="rgb(239,36,38)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (28 samples, 0.04%)</title><rect x="98.8995%" y="2789" width="0.0357%" height="15" fill="rgb(220,63,49)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (28 samples, 0.04%)</title><rect x="98.8995%" y="2773" width="0.0357%" height="15" fill="rgb(240,101,13)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (28 samples, 0.04%)</title><rect x="98.8995%" y="2757" width="0.0357%" height="15" fill="rgb(209,184,51)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (28 samples, 0.04%)</title><rect x="98.8995%" y="2741" width="0.0357%" height="15" fill="rgb(206,136,39)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (28 samples, 0.04%)</title><rect x="98.8995%" y="2725" width="0.0357%" height="15" fill="rgb(254,47,45)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (28 samples, 0.04%)</title><rect x="98.8995%" y="2709" width="0.0357%" height="15" fill="rgb(252,103,20)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (28 samples, 0.04%)</title><rect x="98.8995%" y="2693" width="0.0357%" height="15" fill="rgb(230,69,12)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (28 samples, 0.04%)</title><rect x="98.8995%" y="2677" width="0.0357%" height="15" fill="rgb(219,2,28)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (28 samples, 0.04%)</title><rect x="98.8995%" y="2661" width="0.0357%" height="15" fill="rgb(210,9,12)" fg:x="77554" fg:w="28"/><text x="99.1495%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="98.9237%" y="2645" width="0.0115%" height="15" fill="rgb(235,99,33)" fg:x="77573" fg:w="9"/><text x="99.1737%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="98.9237%" y="2629" width="0.0115%" height="15" fill="rgb(230,11,38)" fg:x="77573" fg:w="9"/><text x="99.1737%" y="2639.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="98.9237%" y="2613" width="0.0115%" height="15" fill="rgb(217,129,0)" fg:x="77573" fg:w="9"/><text x="99.1737%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="98.9237%" y="2597" width="0.0115%" height="15" fill="rgb(222,198,4)" fg:x="77573" fg:w="9"/><text x="99.1737%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="98.9237%" y="2581" width="0.0115%" height="15" fill="rgb(246,170,27)" fg:x="77573" fg:w="9"/><text x="99.1737%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.01%)</title><rect x="98.9237%" y="2565" width="0.0115%" height="15" fill="rgb(229,17,28)" fg:x="77573" fg:w="9"/><text x="99.1737%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="98.9237%" y="2549" width="0.0115%" height="15" fill="rgb(233,198,48)" fg:x="77573" fg:w="9"/><text x="99.1737%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.9237%" y="2533" width="0.0115%" height="15" fill="rgb(238,103,23)" fg:x="77573" fg:w="9"/><text x="99.1737%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="98.9237%" y="2517" width="0.0115%" height="15" fill="rgb(206,91,41)" fg:x="77573" fg:w="9"/><text x="99.1737%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="98.9237%" y="2501" width="0.0115%" height="15" fill="rgb(227,34,25)" fg:x="77573" fg:w="9"/><text x="99.1737%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="98.9237%" y="2485" width="0.0115%" height="15" fill="rgb(210,110,44)" fg:x="77573" fg:w="9"/><text x="99.1737%" y="2495.50"></text></g><g><title>par_exec_17 (29 samples, 0.04%)</title><rect x="98.8995%" y="3189" width="0.0370%" height="15" fill="rgb(216,189,8)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="3199.50"></text></g><g><title>__GI___clone3 (29 samples, 0.04%)</title><rect x="98.8995%" y="3173" width="0.0370%" height="15" fill="rgb(234,9,46)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="3183.50"></text></g><g><title>start_thread (29 samples, 0.04%)</title><rect x="98.8995%" y="3157" width="0.0370%" height="15" fill="rgb(251,200,5)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (29 samples, 0.04%)</title><rect x="98.8995%" y="3141" width="0.0370%" height="15" fill="rgb(238,165,37)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29 samples, 0.04%)</title><rect x="98.8995%" y="3125" width="0.0370%" height="15" fill="rgb(232,77,38)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29 samples, 0.04%)</title><rect x="98.8995%" y="3109" width="0.0370%" height="15" fill="rgb(253,179,33)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (29 samples, 0.04%)</title><rect x="98.8995%" y="3093" width="0.0370%" height="15" fill="rgb(240,13,35)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (29 samples, 0.04%)</title><rect x="98.8995%" y="3077" width="0.0370%" height="15" fill="rgb(242,150,49)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (29 samples, 0.04%)</title><rect x="98.8995%" y="3061" width="0.0370%" height="15" fill="rgb(237,176,28)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="3071.50"></text></g><g><title>std::panicking::try (29 samples, 0.04%)</title><rect x="98.8995%" y="3045" width="0.0370%" height="15" fill="rgb(214,176,33)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (29 samples, 0.04%)</title><rect x="98.8995%" y="3029" width="0.0370%" height="15" fill="rgb(214,25,12)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29 samples, 0.04%)</title><rect x="98.8995%" y="3013" width="0.0370%" height="15" fill="rgb(238,190,20)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (29 samples, 0.04%)</title><rect x="98.8995%" y="2997" width="0.0370%" height="15" fill="rgb(208,11,19)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29 samples, 0.04%)</title><rect x="98.8995%" y="2981" width="0.0370%" height="15" fill="rgb(239,90,4)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (29 samples, 0.04%)</title><rect x="98.8995%" y="2965" width="0.0370%" height="15" fill="rgb(248,110,3)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (29 samples, 0.04%)</title><rect x="98.8995%" y="2949" width="0.0370%" height="15" fill="rgb(210,41,30)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (29 samples, 0.04%)</title><rect x="98.8995%" y="2933" width="0.0370%" height="15" fill="rgb(239,36,8)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (29 samples, 0.04%)</title><rect x="98.8995%" y="2917" width="0.0370%" height="15" fill="rgb(237,201,47)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (29 samples, 0.04%)</title><rect x="98.8995%" y="2901" width="0.0370%" height="15" fill="rgb(224,140,29)" fg:x="77554" fg:w="29"/><text x="99.1495%" y="2911.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (11 samples, 0.01%)</title><rect x="98.9365%" y="2645" width="0.0140%" height="15" fill="rgb(231,209,17)" fg:x="77583" fg:w="11"/><text x="99.1865%" y="2655.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (11 samples, 0.01%)</title><rect x="98.9365%" y="2629" width="0.0140%" height="15" fill="rgb(249,196,1)" fg:x="77583" fg:w="11"/><text x="99.1865%" y="2639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="98.9365%" y="2613" width="0.0140%" height="15" fill="rgb(223,207,51)" fg:x="77583" fg:w="11"/><text x="99.1865%" y="2623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.9365%" y="2597" width="0.0140%" height="15" fill="rgb(210,14,40)" fg:x="77583" fg:w="11"/><text x="99.1865%" y="2607.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="98.9365%" y="2581" width="0.0140%" height="15" fill="rgb(250,20,52)" fg:x="77583" fg:w="11"/><text x="99.1865%" y="2591.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="98.9365%" y="2565" width="0.0140%" height="15" fill="rgb(241,46,11)" fg:x="77583" fg:w="11"/><text x="99.1865%" y="2575.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="98.9365%" y="2549" width="0.0140%" height="15" fill="rgb(219,105,5)" fg:x="77583" fg:w="11"/><text x="99.1865%" y="2559.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.01%)</title><rect x="98.9505%" y="2373" width="0.0102%" height="15" fill="rgb(252,77,35)" fg:x="77594" fg:w="8"/><text x="99.2005%" y="2383.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.01%)</title><rect x="98.9505%" y="2357" width="0.0102%" height="15" fill="rgb(243,119,2)" fg:x="77594" fg:w="8"/><text x="99.2005%" y="2367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="98.9505%" y="2341" width="0.0102%" height="15" fill="rgb(206,82,28)" fg:x="77594" fg:w="8"/><text x="99.2005%" y="2351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="98.9505%" y="2325" width="0.0102%" height="15" fill="rgb(227,120,12)" fg:x="77594" fg:w="8"/><text x="99.2005%" y="2335.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="98.9505%" y="2309" width="0.0102%" height="15" fill="rgb(229,134,41)" fg:x="77594" fg:w="8"/><text x="99.2005%" y="2319.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="98.9505%" y="2293" width="0.0102%" height="15" fill="rgb(239,96,32)" fg:x="77594" fg:w="8"/><text x="99.2005%" y="2303.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="98.9505%" y="2277" width="0.0102%" height="15" fill="rgb(225,46,27)" fg:x="77594" fg:w="8"/><text x="99.2005%" y="2287.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (21 samples, 0.03%)</title><rect x="98.9505%" y="2645" width="0.0268%" height="15" fill="rgb(215,168,2)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2655.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (21 samples, 0.03%)</title><rect x="98.9505%" y="2629" width="0.0268%" height="15" fill="rgb(207,170,52)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2639.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (21 samples, 0.03%)</title><rect x="98.9505%" y="2613" width="0.0268%" height="15" fill="rgb(237,198,36)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2623.50"></text></g><g><title>rayon_core::job::JobRef::execute (21 samples, 0.03%)</title><rect x="98.9505%" y="2597" width="0.0268%" height="15" fill="rgb(213,27,14)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2607.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (21 samples, 0.03%)</title><rect x="98.9505%" y="2581" width="0.0268%" height="15" fill="rgb(218,77,5)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2591.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (21 samples, 0.03%)</title><rect x="98.9505%" y="2565" width="0.0268%" height="15" fill="rgb(230,219,39)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2575.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 0.03%)</title><rect x="98.9505%" y="2549" width="0.0268%" height="15" fill="rgb(245,177,7)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2559.50"></text></g><g><title>std::panicking::try (21 samples, 0.03%)</title><rect x="98.9505%" y="2533" width="0.0268%" height="15" fill="rgb(246,44,46)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2543.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 0.03%)</title><rect x="98.9505%" y="2517" width="0.0268%" height="15" fill="rgb(207,173,15)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2527.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21 samples, 0.03%)</title><rect x="98.9505%" y="2501" width="0.0268%" height="15" fill="rgb(245,170,50)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2511.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (21 samples, 0.03%)</title><rect x="98.9505%" y="2485" width="0.0268%" height="15" fill="rgb(233,156,21)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (21 samples, 0.03%)</title><rect x="98.9505%" y="2469" width="0.0268%" height="15" fill="rgb(253,146,27)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (21 samples, 0.03%)</title><rect x="98.9505%" y="2453" width="0.0268%" height="15" fill="rgb(247,66,29)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.03%)</title><rect x="98.9505%" y="2437" width="0.0268%" height="15" fill="rgb(218,207,26)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2447.50"></text></g><g><title>rayon_core::join::join_context (21 samples, 0.03%)</title><rect x="98.9505%" y="2421" width="0.0268%" height="15" fill="rgb(234,93,26)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2431.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.03%)</title><rect x="98.9505%" y="2405" width="0.0268%" height="15" fill="rgb(214,75,48)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21 samples, 0.03%)</title><rect x="98.9505%" y="2389" width="0.0268%" height="15" fill="rgb(229,119,22)" fg:x="77594" fg:w="21"/><text x="99.2005%" y="2399.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="98.9658%" y="2373" width="0.0115%" height="15" fill="rgb(226,153,19)" fg:x="77606" fg:w="9"/><text x="99.2158%" y="2383.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="98.9658%" y="2357" width="0.0115%" height="15" fill="rgb(220,204,36)" fg:x="77606" fg:w="9"/><text x="99.2158%" y="2367.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="98.9658%" y="2341" width="0.0115%" height="15" fill="rgb(253,181,43)" fg:x="77606" fg:w="9"/><text x="99.2158%" y="2351.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="98.9658%" y="2325" width="0.0115%" height="15" fill="rgb(211,41,51)" fg:x="77606" fg:w="9"/><text x="99.2158%" y="2335.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="98.9658%" y="2309" width="0.0115%" height="15" fill="rgb(207,215,0)" fg:x="77606" fg:w="9"/><text x="99.2158%" y="2319.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.01%)</title><rect x="98.9658%" y="2293" width="0.0115%" height="15" fill="rgb(212,153,10)" fg:x="77606" fg:w="9"/><text x="99.2158%" y="2303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="98.9658%" y="2277" width="0.0115%" height="15" fill="rgb(251,171,36)" fg:x="77606" fg:w="9"/><text x="99.2158%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="98.9658%" y="2261" width="0.0115%" height="15" fill="rgb(225,219,41)" fg:x="77606" fg:w="9"/><text x="99.2158%" y="2271.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="98.9658%" y="2245" width="0.0115%" height="15" fill="rgb(208,200,1)" fg:x="77606" fg:w="9"/><text x="99.2158%" y="2255.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="98.9658%" y="2229" width="0.0115%" height="15" fill="rgb(206,75,47)" fg:x="77606" fg:w="9"/><text x="99.2158%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="98.9658%" y="2213" width="0.0115%" height="15" fill="rgb(248,3,16)" fg:x="77606" fg:w="9"/><text x="99.2158%" y="2223.50"></text></g><g><title>par_exec_18 (43 samples, 0.05%)</title><rect x="98.9365%" y="3189" width="0.0548%" height="15" fill="rgb(242,157,36)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="3199.50"></text></g><g><title>__GI___clone3 (43 samples, 0.05%)</title><rect x="98.9365%" y="3173" width="0.0548%" height="15" fill="rgb(215,175,11)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="3183.50"></text></g><g><title>start_thread (43 samples, 0.05%)</title><rect x="98.9365%" y="3157" width="0.0548%" height="15" fill="rgb(252,222,22)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (43 samples, 0.05%)</title><rect x="98.9365%" y="3141" width="0.0548%" height="15" fill="rgb(250,121,35)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (43 samples, 0.05%)</title><rect x="98.9365%" y="3125" width="0.0548%" height="15" fill="rgb(233,120,49)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (43 samples, 0.05%)</title><rect x="98.9365%" y="3109" width="0.0548%" height="15" fill="rgb(205,201,14)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (43 samples, 0.05%)</title><rect x="98.9365%" y="3093" width="0.0548%" height="15" fill="rgb(219,58,45)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (43 samples, 0.05%)</title><rect x="98.9365%" y="3077" width="0.0548%" height="15" fill="rgb(251,65,12)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (43 samples, 0.05%)</title><rect x="98.9365%" y="3061" width="0.0548%" height="15" fill="rgb(224,47,31)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="3071.50"></text></g><g><title>std::panicking::try (43 samples, 0.05%)</title><rect x="98.9365%" y="3045" width="0.0548%" height="15" fill="rgb(233,74,26)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (43 samples, 0.05%)</title><rect x="98.9365%" y="3029" width="0.0548%" height="15" fill="rgb(231,211,31)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (43 samples, 0.05%)</title><rect x="98.9365%" y="3013" width="0.0548%" height="15" fill="rgb(239,167,5)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (43 samples, 0.05%)</title><rect x="98.9365%" y="2997" width="0.0548%" height="15" fill="rgb(241,85,0)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (43 samples, 0.05%)</title><rect x="98.9365%" y="2981" width="0.0548%" height="15" fill="rgb(229,130,21)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (43 samples, 0.05%)</title><rect x="98.9365%" y="2965" width="0.0548%" height="15" fill="rgb(254,84,49)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (43 samples, 0.05%)</title><rect x="98.9365%" y="2949" width="0.0548%" height="15" fill="rgb(235,85,21)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (43 samples, 0.05%)</title><rect x="98.9365%" y="2933" width="0.0548%" height="15" fill="rgb(246,128,52)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (43 samples, 0.05%)</title><rect x="98.9365%" y="2917" width="0.0548%" height="15" fill="rgb(243,114,49)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (43 samples, 0.05%)</title><rect x="98.9365%" y="2901" width="0.0548%" height="15" fill="rgb(240,224,22)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (43 samples, 0.05%)</title><rect x="98.9365%" y="2885" width="0.0548%" height="15" fill="rgb(247,201,52)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (43 samples, 0.05%)</title><rect x="98.9365%" y="2869" width="0.0548%" height="15" fill="rgb(231,70,45)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (43 samples, 0.05%)</title><rect x="98.9365%" y="2853" width="0.0548%" height="15" fill="rgb(217,215,20)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (43 samples, 0.05%)</title><rect x="98.9365%" y="2837" width="0.0548%" height="15" fill="rgb(226,170,30)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (43 samples, 0.05%)</title><rect x="98.9365%" y="2821" width="0.0548%" height="15" fill="rgb(220,190,43)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2831.50"></text></g><g><title>std::panicking::try (43 samples, 0.05%)</title><rect x="98.9365%" y="2805" width="0.0548%" height="15" fill="rgb(218,20,18)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (43 samples, 0.05%)</title><rect x="98.9365%" y="2789" width="0.0548%" height="15" fill="rgb(245,37,26)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (43 samples, 0.05%)</title><rect x="98.9365%" y="2773" width="0.0548%" height="15" fill="rgb(241,127,29)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (43 samples, 0.05%)</title><rect x="98.9365%" y="2757" width="0.0548%" height="15" fill="rgb(241,33,26)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (43 samples, 0.05%)</title><rect x="98.9365%" y="2741" width="0.0548%" height="15" fill="rgb(220,106,21)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (43 samples, 0.05%)</title><rect x="98.9365%" y="2725" width="0.0548%" height="15" fill="rgb(225,125,35)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (43 samples, 0.05%)</title><rect x="98.9365%" y="2709" width="0.0548%" height="15" fill="rgb(248,80,22)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (43 samples, 0.05%)</title><rect x="98.9365%" y="2693" width="0.0548%" height="15" fill="rgb(231,117,39)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (43 samples, 0.05%)</title><rect x="98.9365%" y="2677" width="0.0548%" height="15" fill="rgb(239,183,16)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (43 samples, 0.05%)</title><rect x="98.9365%" y="2661" width="0.0548%" height="15" fill="rgb(221,61,19)" fg:x="77583" fg:w="43"/><text x="99.1865%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="98.9773%" y="2645" width="0.0140%" height="15" fill="rgb(239,196,44)" fg:x="77615" fg:w="11"/><text x="99.2273%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="98.9773%" y="2629" width="0.0140%" height="15" fill="rgb(206,113,19)" fg:x="77615" fg:w="11"/><text x="99.2273%" y="2639.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="98.9773%" y="2613" width="0.0140%" height="15" fill="rgb(245,114,12)" fg:x="77615" fg:w="11"/><text x="99.2273%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="98.9773%" y="2597" width="0.0140%" height="15" fill="rgb(247,89,39)" fg:x="77615" fg:w="11"/><text x="99.2273%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="98.9773%" y="2581" width="0.0140%" height="15" fill="rgb(213,85,14)" fg:x="77615" fg:w="11"/><text x="99.2273%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.01%)</title><rect x="98.9773%" y="2565" width="0.0140%" height="15" fill="rgb(249,206,33)" fg:x="77615" fg:w="11"/><text x="99.2273%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="98.9773%" y="2549" width="0.0140%" height="15" fill="rgb(235,167,47)" fg:x="77615" fg:w="11"/><text x="99.2273%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.9773%" y="2533" width="0.0140%" height="15" fill="rgb(217,177,16)" fg:x="77615" fg:w="11"/><text x="99.2273%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="98.9773%" y="2517" width="0.0140%" height="15" fill="rgb(250,228,29)" fg:x="77615" fg:w="11"/><text x="99.2273%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="98.9773%" y="2501" width="0.0140%" height="15" fill="rgb(216,195,42)" fg:x="77615" fg:w="11"/><text x="99.2273%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="98.9773%" y="2485" width="0.0140%" height="15" fill="rgb(232,192,32)" fg:x="77615" fg:w="11"/><text x="99.2273%" y="2495.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (11 samples, 0.01%)</title><rect x="98.9989%" y="2645" width="0.0140%" height="15" fill="rgb(211,8,47)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2655.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 0.01%)</title><rect x="98.9989%" y="2629" width="0.0140%" height="15" fill="rgb(251,201,9)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2639.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (11 samples, 0.01%)</title><rect x="98.9989%" y="2613" width="0.0140%" height="15" fill="rgb(206,185,47)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2623.50"></text></g><g><title>rayon_core::job::JobRef::execute (11 samples, 0.01%)</title><rect x="98.9989%" y="2597" width="0.0140%" height="15" fill="rgb(245,54,32)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2607.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (11 samples, 0.01%)</title><rect x="98.9989%" y="2581" width="0.0140%" height="15" fill="rgb(208,1,8)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2591.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="98.9989%" y="2565" width="0.0140%" height="15" fill="rgb(228,57,24)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2575.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="98.9989%" y="2549" width="0.0140%" height="15" fill="rgb(251,24,8)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2559.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="98.9989%" y="2533" width="0.0140%" height="15" fill="rgb(236,196,50)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2543.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="98.9989%" y="2517" width="0.0140%" height="15" fill="rgb(246,222,29)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2527.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="98.9989%" y="2501" width="0.0140%" height="15" fill="rgb(211,34,40)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2511.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (11 samples, 0.01%)</title><rect x="98.9989%" y="2485" width="0.0140%" height="15" fill="rgb(210,66,51)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (11 samples, 0.01%)</title><rect x="98.9989%" y="2469" width="0.0140%" height="15" fill="rgb(250,56,43)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="98.9989%" y="2453" width="0.0140%" height="15" fill="rgb(240,111,50)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="98.9989%" y="2437" width="0.0140%" height="15" fill="rgb(209,117,13)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2447.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="98.9989%" y="2421" width="0.0140%" height="15" fill="rgb(232,164,45)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2431.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="98.9989%" y="2405" width="0.0140%" height="15" fill="rgb(205,69,32)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="98.9989%" y="2389" width="0.0140%" height="15" fill="rgb(240,147,45)" fg:x="77632" fg:w="11"/><text x="99.2489%" y="2399.50"></text></g><g><title>par_exec_19 (26 samples, 0.03%)</title><rect x="98.9913%" y="3189" width="0.0332%" height="15" fill="rgb(221,94,48)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="3199.50"></text></g><g><title>__GI___clone3 (26 samples, 0.03%)</title><rect x="98.9913%" y="3173" width="0.0332%" height="15" fill="rgb(249,209,17)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="3183.50"></text></g><g><title>start_thread (26 samples, 0.03%)</title><rect x="98.9913%" y="3157" width="0.0332%" height="15" fill="rgb(228,57,28)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (26 samples, 0.03%)</title><rect x="98.9913%" y="3141" width="0.0332%" height="15" fill="rgb(250,133,26)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.03%)</title><rect x="98.9913%" y="3125" width="0.0332%" height="15" fill="rgb(254,15,16)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.03%)</title><rect x="98.9913%" y="3109" width="0.0332%" height="15" fill="rgb(209,147,42)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (26 samples, 0.03%)</title><rect x="98.9913%" y="3093" width="0.0332%" height="15" fill="rgb(208,5,29)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (26 samples, 0.03%)</title><rect x="98.9913%" y="3077" width="0.0332%" height="15" fill="rgb(250,73,31)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.03%)</title><rect x="98.9913%" y="3061" width="0.0332%" height="15" fill="rgb(238,45,10)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="3071.50"></text></g><g><title>std::panicking::try (26 samples, 0.03%)</title><rect x="98.9913%" y="3045" width="0.0332%" height="15" fill="rgb(214,104,5)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.03%)</title><rect x="98.9913%" y="3029" width="0.0332%" height="15" fill="rgb(242,217,19)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.03%)</title><rect x="98.9913%" y="3013" width="0.0332%" height="15" fill="rgb(246,113,27)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (26 samples, 0.03%)</title><rect x="98.9913%" y="2997" width="0.0332%" height="15" fill="rgb(221,34,27)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26 samples, 0.03%)</title><rect x="98.9913%" y="2981" width="0.0332%" height="15" fill="rgb(246,109,6)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (26 samples, 0.03%)</title><rect x="98.9913%" y="2965" width="0.0332%" height="15" fill="rgb(217,12,25)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (26 samples, 0.03%)</title><rect x="98.9913%" y="2949" width="0.0332%" height="15" fill="rgb(250,195,5)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (26 samples, 0.03%)</title><rect x="98.9913%" y="2933" width="0.0332%" height="15" fill="rgb(244,140,45)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (26 samples, 0.03%)</title><rect x="98.9913%" y="2917" width="0.0332%" height="15" fill="rgb(230,64,14)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (26 samples, 0.03%)</title><rect x="98.9913%" y="2901" width="0.0332%" height="15" fill="rgb(206,27,27)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (26 samples, 0.03%)</title><rect x="98.9913%" y="2885" width="0.0332%" height="15" fill="rgb(230,14,50)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (26 samples, 0.03%)</title><rect x="98.9913%" y="2869" width="0.0332%" height="15" fill="rgb(237,172,14)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (26 samples, 0.03%)</title><rect x="98.9913%" y="2853" width="0.0332%" height="15" fill="rgb(209,25,21)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.03%)</title><rect x="98.9913%" y="2837" width="0.0332%" height="15" fill="rgb(248,148,22)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.03%)</title><rect x="98.9913%" y="2821" width="0.0332%" height="15" fill="rgb(234,100,22)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2831.50"></text></g><g><title>std::panicking::try (26 samples, 0.03%)</title><rect x="98.9913%" y="2805" width="0.0332%" height="15" fill="rgb(210,20,30)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.03%)</title><rect x="98.9913%" y="2789" width="0.0332%" height="15" fill="rgb(232,58,0)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.03%)</title><rect x="98.9913%" y="2773" width="0.0332%" height="15" fill="rgb(221,68,13)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (26 samples, 0.03%)</title><rect x="98.9913%" y="2757" width="0.0332%" height="15" fill="rgb(231,194,11)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (26 samples, 0.03%)</title><rect x="98.9913%" y="2741" width="0.0332%" height="15" fill="rgb(235,51,41)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.03%)</title><rect x="98.9913%" y="2725" width="0.0332%" height="15" fill="rgb(240,50,32)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.03%)</title><rect x="98.9913%" y="2709" width="0.0332%" height="15" fill="rgb(240,185,36)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.03%)</title><rect x="98.9913%" y="2693" width="0.0332%" height="15" fill="rgb(211,168,15)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.03%)</title><rect x="98.9913%" y="2677" width="0.0332%" height="15" fill="rgb(221,70,0)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.03%)</title><rect x="98.9913%" y="2661" width="0.0332%" height="15" fill="rgb(205,21,33)" fg:x="77626" fg:w="26"/><text x="99.2413%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="99.0130%" y="2645" width="0.0115%" height="15" fill="rgb(225,106,10)" fg:x="77643" fg:w="9"/><text x="99.2630%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="99.0130%" y="2629" width="0.0115%" height="15" fill="rgb(236,200,50)" fg:x="77643" fg:w="9"/><text x="99.2630%" y="2639.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="99.0130%" y="2613" width="0.0115%" height="15" fill="rgb(249,93,23)" fg:x="77643" fg:w="9"/><text x="99.2630%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="99.0130%" y="2597" width="0.0115%" height="15" fill="rgb(244,115,35)" fg:x="77643" fg:w="9"/><text x="99.2630%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="99.0130%" y="2581" width="0.0115%" height="15" fill="rgb(231,129,47)" fg:x="77643" fg:w="9"/><text x="99.2630%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.01%)</title><rect x="99.0130%" y="2565" width="0.0115%" height="15" fill="rgb(225,160,50)" fg:x="77643" fg:w="9"/><text x="99.2630%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="99.0130%" y="2549" width="0.0115%" height="15" fill="rgb(218,135,23)" fg:x="77643" fg:w="9"/><text x="99.2630%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="99.0130%" y="2533" width="0.0115%" height="15" fill="rgb(227,119,14)" fg:x="77643" fg:w="9"/><text x="99.2630%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="99.0130%" y="2517" width="0.0115%" height="15" fill="rgb(242,138,13)" fg:x="77643" fg:w="9"/><text x="99.2630%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="99.0130%" y="2501" width="0.0115%" height="15" fill="rgb(215,11,16)" fg:x="77643" fg:w="9"/><text x="99.2630%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="99.0130%" y="2485" width="0.0115%" height="15" fill="rgb(234,170,50)" fg:x="77643" fg:w="9"/><text x="99.2630%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="99.0142%" y="2469" width="0.0102%" height="15" fill="rgb(233,34,20)" fg:x="77644" fg:w="8"/><text x="99.2642%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="99.0142%" y="2453" width="0.0102%" height="15" fill="rgb(237,100,45)" fg:x="77644" fg:w="8"/><text x="99.2642%" y="2463.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="99.0142%" y="2437" width="0.0102%" height="15" fill="rgb(231,184,36)" fg:x="77644" fg:w="8"/><text x="99.2642%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="99.0142%" y="2421" width="0.0102%" height="15" fill="rgb(252,93,2)" fg:x="77644" fg:w="8"/><text x="99.2642%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="99.0142%" y="2405" width="0.0102%" height="15" fill="rgb(248,176,47)" fg:x="77644" fg:w="8"/><text x="99.2642%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.01%)</title><rect x="99.0142%" y="2389" width="0.0102%" height="15" fill="rgb(249,125,23)" fg:x="77644" fg:w="8"/><text x="99.2642%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="99.0142%" y="2373" width="0.0102%" height="15" fill="rgb(239,67,42)" fg:x="77644" fg:w="8"/><text x="99.2642%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="99.0142%" y="2357" width="0.0102%" height="15" fill="rgb(244,162,4)" fg:x="77644" fg:w="8"/><text x="99.2642%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="99.0142%" y="2341" width="0.0102%" height="15" fill="rgb(214,150,38)" fg:x="77644" fg:w="8"/><text x="99.2642%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="99.0142%" y="2325" width="0.0102%" height="15" fill="rgb(228,211,28)" fg:x="77644" fg:w="8"/><text x="99.2642%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="99.0142%" y="2309" width="0.0102%" height="15" fill="rgb(212,98,48)" fg:x="77644" fg:w="8"/><text x="99.2642%" y="2319.50"></text></g><g><title>par_exec_1 (26 samples, 0.03%)</title><rect x="99.0244%" y="3189" width="0.0332%" height="15" fill="rgb(213,45,13)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="3199.50"></text></g><g><title>__GI___clone3 (26 samples, 0.03%)</title><rect x="99.0244%" y="3173" width="0.0332%" height="15" fill="rgb(218,35,29)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="3183.50"></text></g><g><title>start_thread (26 samples, 0.03%)</title><rect x="99.0244%" y="3157" width="0.0332%" height="15" fill="rgb(244,13,3)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (26 samples, 0.03%)</title><rect x="99.0244%" y="3141" width="0.0332%" height="15" fill="rgb(235,170,19)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.03%)</title><rect x="99.0244%" y="3125" width="0.0332%" height="15" fill="rgb(233,193,43)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.03%)</title><rect x="99.0244%" y="3109" width="0.0332%" height="15" fill="rgb(228,223,20)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (26 samples, 0.03%)</title><rect x="99.0244%" y="3093" width="0.0332%" height="15" fill="rgb(208,85,54)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (26 samples, 0.03%)</title><rect x="99.0244%" y="3077" width="0.0332%" height="15" fill="rgb(254,14,45)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.03%)</title><rect x="99.0244%" y="3061" width="0.0332%" height="15" fill="rgb(247,99,29)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="3071.50"></text></g><g><title>std::panicking::try (26 samples, 0.03%)</title><rect x="99.0244%" y="3045" width="0.0332%" height="15" fill="rgb(225,180,54)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.03%)</title><rect x="99.0244%" y="3029" width="0.0332%" height="15" fill="rgb(239,88,43)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.03%)</title><rect x="99.0244%" y="3013" width="0.0332%" height="15" fill="rgb(209,47,11)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (26 samples, 0.03%)</title><rect x="99.0244%" y="2997" width="0.0332%" height="15" fill="rgb(219,179,23)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26 samples, 0.03%)</title><rect x="99.0244%" y="2981" width="0.0332%" height="15" fill="rgb(213,183,19)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (26 samples, 0.03%)</title><rect x="99.0244%" y="2965" width="0.0332%" height="15" fill="rgb(210,11,9)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (26 samples, 0.03%)</title><rect x="99.0244%" y="2949" width="0.0332%" height="15" fill="rgb(239,194,16)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (26 samples, 0.03%)</title><rect x="99.0244%" y="2933" width="0.0332%" height="15" fill="rgb(246,23,50)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (26 samples, 0.03%)</title><rect x="99.0244%" y="2917" width="0.0332%" height="15" fill="rgb(245,10,41)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (26 samples, 0.03%)</title><rect x="99.0244%" y="2901" width="0.0332%" height="15" fill="rgb(228,43,24)" fg:x="77652" fg:w="26"/><text x="99.2744%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (25 samples, 0.03%)</title><rect x="99.0257%" y="2885" width="0.0319%" height="15" fill="rgb(220,151,0)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (25 samples, 0.03%)</title><rect x="99.0257%" y="2869" width="0.0319%" height="15" fill="rgb(232,219,10)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (25 samples, 0.03%)</title><rect x="99.0257%" y="2853" width="0.0319%" height="15" fill="rgb(227,217,48)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.03%)</title><rect x="99.0257%" y="2837" width="0.0319%" height="15" fill="rgb(210,66,35)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.03%)</title><rect x="99.0257%" y="2821" width="0.0319%" height="15" fill="rgb(254,6,7)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2831.50"></text></g><g><title>std::panicking::try (25 samples, 0.03%)</title><rect x="99.0257%" y="2805" width="0.0319%" height="15" fill="rgb(235,222,42)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.03%)</title><rect x="99.0257%" y="2789" width="0.0319%" height="15" fill="rgb(245,126,5)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.03%)</title><rect x="99.0257%" y="2773" width="0.0319%" height="15" fill="rgb(215,73,17)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (25 samples, 0.03%)</title><rect x="99.0257%" y="2757" width="0.0319%" height="15" fill="rgb(219,198,52)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (25 samples, 0.03%)</title><rect x="99.0257%" y="2741" width="0.0319%" height="15" fill="rgb(217,159,18)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.03%)</title><rect x="99.0257%" y="2725" width="0.0319%" height="15" fill="rgb(212,177,18)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="99.0257%" y="2709" width="0.0319%" height="15" fill="rgb(241,10,11)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.03%)</title><rect x="99.0257%" y="2693" width="0.0319%" height="15" fill="rgb(232,114,35)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.03%)</title><rect x="99.0257%" y="2677" width="0.0319%" height="15" fill="rgb(238,222,8)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.03%)</title><rect x="99.0257%" y="2661" width="0.0319%" height="15" fill="rgb(251,153,44)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.03%)</title><rect x="99.0257%" y="2645" width="0.0319%" height="15" fill="rgb(210,140,51)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.03%)</title><rect x="99.0257%" y="2629" width="0.0319%" height="15" fill="rgb(222,63,0)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2639.50"></text></g><g><title>std::panicking::try (25 samples, 0.03%)</title><rect x="99.0257%" y="2613" width="0.0319%" height="15" fill="rgb(240,18,40)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.03%)</title><rect x="99.0257%" y="2597" width="0.0319%" height="15" fill="rgb(237,88,16)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.03%)</title><rect x="99.0257%" y="2581" width="0.0319%" height="15" fill="rgb(251,117,13)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (25 samples, 0.03%)</title><rect x="99.0257%" y="2565" width="0.0319%" height="15" fill="rgb(251,228,8)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.03%)</title><rect x="99.0257%" y="2549" width="0.0319%" height="15" fill="rgb(205,107,49)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="99.0257%" y="2533" width="0.0319%" height="15" fill="rgb(238,72,41)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.03%)</title><rect x="99.0257%" y="2517" width="0.0319%" height="15" fill="rgb(248,183,52)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.03%)</title><rect x="99.0257%" y="2501" width="0.0319%" height="15" fill="rgb(215,58,20)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.03%)</title><rect x="99.0257%" y="2485" width="0.0319%" height="15" fill="rgb(209,49,13)" fg:x="77653" fg:w="25"/><text x="99.2757%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (23 samples, 0.03%)</title><rect x="99.0283%" y="2469" width="0.0293%" height="15" fill="rgb(208,113,17)" fg:x="77655" fg:w="23"/><text x="99.2783%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.03%)</title><rect x="99.0283%" y="2453" width="0.0293%" height="15" fill="rgb(208,14,22)" fg:x="77655" fg:w="23"/><text x="99.2783%" y="2463.50"></text></g><g><title>std::panicking::try (23 samples, 0.03%)</title><rect x="99.0283%" y="2437" width="0.0293%" height="15" fill="rgb(222,95,2)" fg:x="77655" fg:w="23"/><text x="99.2783%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.03%)</title><rect x="99.0283%" y="2421" width="0.0293%" height="15" fill="rgb(253,180,37)" fg:x="77655" fg:w="23"/><text x="99.2783%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.03%)</title><rect x="99.0283%" y="2405" width="0.0293%" height="15" fill="rgb(250,81,33)" fg:x="77655" fg:w="23"/><text x="99.2783%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (23 samples, 0.03%)</title><rect x="99.0283%" y="2389" width="0.0293%" height="15" fill="rgb(251,151,41)" fg:x="77655" fg:w="23"/><text x="99.2783%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (23 samples, 0.03%)</title><rect x="99.0283%" y="2373" width="0.0293%" height="15" fill="rgb(210,135,17)" fg:x="77655" fg:w="23"/><text x="99.2783%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="99.0283%" y="2357" width="0.0293%" height="15" fill="rgb(239,21,29)" fg:x="77655" fg:w="23"/><text x="99.2783%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (23 samples, 0.03%)</title><rect x="99.0283%" y="2341" width="0.0293%" height="15" fill="rgb(231,215,16)" fg:x="77655" fg:w="23"/><text x="99.2783%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.03%)</title><rect x="99.0283%" y="2325" width="0.0293%" height="15" fill="rgb(239,151,54)" fg:x="77655" fg:w="23"/><text x="99.2783%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (23 samples, 0.03%)</title><rect x="99.0283%" y="2309" width="0.0293%" height="15" fill="rgb(222,122,38)" fg:x="77655" fg:w="23"/><text x="99.2783%" y="2319.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.02%)</title><rect x="99.0334%" y="2293" width="0.0242%" height="15" fill="rgb(243,128,1)" fg:x="77659" fg:w="19"/><text x="99.2834%" y="2303.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="99.0334%" y="2277" width="0.0242%" height="15" fill="rgb(225,74,21)" fg:x="77659" fg:w="19"/><text x="99.2834%" y="2287.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="99.0334%" y="2261" width="0.0242%" height="15" fill="rgb(216,210,10)" fg:x="77659" fg:w="19"/><text x="99.2834%" y="2271.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="99.0334%" y="2245" width="0.0242%" height="15" fill="rgb(228,76,19)" fg:x="77659" fg:w="19"/><text x="99.2834%" y="2255.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.0334%" y="2229" width="0.0242%" height="15" fill="rgb(236,80,34)" fg:x="77659" fg:w="19"/><text x="99.2834%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (19 samples, 0.02%)</title><rect x="99.0334%" y="2213" width="0.0242%" height="15" fill="rgb(225,173,23)" fg:x="77659" fg:w="19"/><text x="99.2834%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.02%)</title><rect x="99.0334%" y="2197" width="0.0242%" height="15" fill="rgb(253,38,1)" fg:x="77659" fg:w="19"/><text x="99.2834%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="99.0334%" y="2181" width="0.0242%" height="15" fill="rgb(206,155,35)" fg:x="77659" fg:w="19"/><text x="99.2834%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.02%)</title><rect x="99.0334%" y="2165" width="0.0242%" height="15" fill="rgb(254,27,53)" fg:x="77659" fg:w="19"/><text x="99.2834%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.02%)</title><rect x="99.0334%" y="2149" width="0.0242%" height="15" fill="rgb(225,52,41)" fg:x="77659" fg:w="19"/><text x="99.2834%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.02%)</title><rect x="99.0334%" y="2133" width="0.0242%" height="15" fill="rgb(244,53,18)" fg:x="77659" fg:w="19"/><text x="99.2834%" y="2143.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="99.0359%" y="2117" width="0.0217%" height="15" fill="rgb(254,206,48)" fg:x="77661" fg:w="17"/><text x="99.2859%" y="2127.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="99.0359%" y="2101" width="0.0217%" height="15" fill="rgb(236,182,23)" fg:x="77661" fg:w="17"/><text x="99.2859%" y="2111.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="99.0359%" y="2085" width="0.0217%" height="15" fill="rgb(236,191,37)" fg:x="77661" fg:w="17"/><text x="99.2859%" y="2095.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="99.0359%" y="2069" width="0.0217%" height="15" fill="rgb(245,53,8)" fg:x="77661" fg:w="17"/><text x="99.2859%" y="2079.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.0359%" y="2053" width="0.0217%" height="15" fill="rgb(245,147,9)" fg:x="77661" fg:w="17"/><text x="99.2859%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.02%)</title><rect x="99.0359%" y="2037" width="0.0217%" height="15" fill="rgb(218,24,48)" fg:x="77661" fg:w="17"/><text x="99.2859%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="99.0359%" y="2021" width="0.0217%" height="15" fill="rgb(254,23,9)" fg:x="77661" fg:w="17"/><text x="99.2859%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="99.0359%" y="2005" width="0.0217%" height="15" fill="rgb(244,105,9)" fg:x="77661" fg:w="17"/><text x="99.2859%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="99.0359%" y="1989" width="0.0217%" height="15" fill="rgb(212,142,22)" fg:x="77661" fg:w="17"/><text x="99.2859%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="99.0359%" y="1973" width="0.0217%" height="15" fill="rgb(221,114,49)" fg:x="77661" fg:w="17"/><text x="99.2859%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="99.0359%" y="1957" width="0.0217%" height="15" fill="rgb(223,210,25)" fg:x="77661" fg:w="17"/><text x="99.2859%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="99.0474%" y="1941" width="0.0102%" height="15" fill="rgb(235,162,44)" fg:x="77670" fg:w="8"/><text x="99.2974%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="99.0474%" y="1925" width="0.0102%" height="15" fill="rgb(237,65,45)" fg:x="77670" fg:w="8"/><text x="99.2974%" y="1935.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="99.0474%" y="1909" width="0.0102%" height="15" fill="rgb(208,79,9)" fg:x="77670" fg:w="8"/><text x="99.2974%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="99.0474%" y="1893" width="0.0102%" height="15" fill="rgb(215,228,8)" fg:x="77670" fg:w="8"/><text x="99.2974%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="99.0474%" y="1877" width="0.0102%" height="15" fill="rgb(205,185,17)" fg:x="77670" fg:w="8"/><text x="99.2974%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.01%)</title><rect x="99.0474%" y="1861" width="0.0102%" height="15" fill="rgb(213,62,36)" fg:x="77670" fg:w="8"/><text x="99.2974%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="99.0474%" y="1845" width="0.0102%" height="15" fill="rgb(209,34,9)" fg:x="77670" fg:w="8"/><text x="99.2974%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="99.0474%" y="1829" width="0.0102%" height="15" fill="rgb(246,151,27)" fg:x="77670" fg:w="8"/><text x="99.2974%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="99.0474%" y="1813" width="0.0102%" height="15" fill="rgb(218,206,3)" fg:x="77670" fg:w="8"/><text x="99.2974%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="99.0474%" y="1797" width="0.0102%" height="15" fill="rgb(242,202,1)" fg:x="77670" fg:w="8"/><text x="99.2974%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="99.0474%" y="1781" width="0.0102%" height="15" fill="rgb(227,185,16)" fg:x="77670" fg:w="8"/><text x="99.2974%" y="1791.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (13 samples, 0.02%)</title><rect x="99.0653%" y="2645" width="0.0166%" height="15" fill="rgb(241,1,14)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2655.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (13 samples, 0.02%)</title><rect x="99.0653%" y="2629" width="0.0166%" height="15" fill="rgb(212,113,25)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2639.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (13 samples, 0.02%)</title><rect x="99.0653%" y="2613" width="0.0166%" height="15" fill="rgb(247,37,43)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2623.50"></text></g><g><title>rayon_core::job::JobRef::execute (13 samples, 0.02%)</title><rect x="99.0653%" y="2597" width="0.0166%" height="15" fill="rgb(226,54,8)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2607.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (13 samples, 0.02%)</title><rect x="99.0653%" y="2581" width="0.0166%" height="15" fill="rgb(251,205,25)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2591.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.02%)</title><rect x="99.0653%" y="2565" width="0.0166%" height="15" fill="rgb(246,87,35)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2575.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="99.0653%" y="2549" width="0.0166%" height="15" fill="rgb(251,145,46)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2559.50"></text></g><g><title>std::panicking::try (13 samples, 0.02%)</title><rect x="99.0653%" y="2533" width="0.0166%" height="15" fill="rgb(210,210,33)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2543.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="99.0653%" y="2517" width="0.0166%" height="15" fill="rgb(221,151,11)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2527.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.02%)</title><rect x="99.0653%" y="2501" width="0.0166%" height="15" fill="rgb(208,160,28)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2511.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (13 samples, 0.02%)</title><rect x="99.0653%" y="2485" width="0.0166%" height="15" fill="rgb(243,69,29)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (13 samples, 0.02%)</title><rect x="99.0653%" y="2469" width="0.0166%" height="15" fill="rgb(224,144,4)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.02%)</title><rect x="99.0653%" y="2453" width="0.0166%" height="15" fill="rgb(211,140,38)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="99.0653%" y="2437" width="0.0166%" height="15" fill="rgb(252,189,15)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2447.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="99.0653%" y="2421" width="0.0166%" height="15" fill="rgb(251,175,23)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2431.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="99.0653%" y="2405" width="0.0166%" height="15" fill="rgb(212,184,11)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="99.0653%" y="2389" width="0.0166%" height="15" fill="rgb(217,205,6)" fg:x="77684" fg:w="13"/><text x="99.3153%" y="2399.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="99.0704%" y="2373" width="0.0115%" height="15" fill="rgb(235,45,45)" fg:x="77688" fg:w="9"/><text x="99.3204%" y="2383.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="99.0704%" y="2357" width="0.0115%" height="15" fill="rgb(211,157,53)" fg:x="77688" fg:w="9"/><text x="99.3204%" y="2367.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="99.0704%" y="2341" width="0.0115%" height="15" fill="rgb(212,13,8)" fg:x="77688" fg:w="9"/><text x="99.3204%" y="2351.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="99.0704%" y="2325" width="0.0115%" height="15" fill="rgb(218,80,36)" fg:x="77688" fg:w="9"/><text x="99.3204%" y="2335.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="99.0704%" y="2309" width="0.0115%" height="15" fill="rgb(211,123,43)" fg:x="77688" fg:w="9"/><text x="99.3204%" y="2319.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.01%)</title><rect x="99.0704%" y="2293" width="0.0115%" height="15" fill="rgb(206,165,2)" fg:x="77688" fg:w="9"/><text x="99.3204%" y="2303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="99.0704%" y="2277" width="0.0115%" height="15" fill="rgb(248,63,35)" fg:x="77688" fg:w="9"/><text x="99.3204%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="99.0704%" y="2261" width="0.0115%" height="15" fill="rgb(219,133,41)" fg:x="77688" fg:w="9"/><text x="99.3204%" y="2271.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="99.0704%" y="2245" width="0.0115%" height="15" fill="rgb(206,175,46)" fg:x="77688" fg:w="9"/><text x="99.3204%" y="2255.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="99.0704%" y="2229" width="0.0115%" height="15" fill="rgb(224,41,35)" fg:x="77688" fg:w="9"/><text x="99.3204%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="99.0704%" y="2213" width="0.0115%" height="15" fill="rgb(226,113,24)" fg:x="77688" fg:w="9"/><text x="99.3204%" y="2223.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.01%)</title><rect x="99.0895%" y="2293" width="0.0128%" height="15" fill="rgb(219,51,41)" fg:x="77703" fg:w="10"/><text x="99.3395%" y="2303.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.01%)</title><rect x="99.0895%" y="2277" width="0.0128%" height="15" fill="rgb(220,145,47)" fg:x="77703" fg:w="10"/><text x="99.3395%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.01%)</title><rect x="99.0895%" y="2261" width="0.0128%" height="15" fill="rgb(239,121,47)" fg:x="77703" fg:w="10"/><text x="99.3395%" y="2271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="99.0895%" y="2245" width="0.0128%" height="15" fill="rgb(207,60,40)" fg:x="77703" fg:w="10"/><text x="99.3395%" y="2255.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.01%)</title><rect x="99.0895%" y="2229" width="0.0128%" height="15" fill="rgb(224,229,11)" fg:x="77703" fg:w="10"/><text x="99.3395%" y="2239.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.01%)</title><rect x="99.0895%" y="2213" width="0.0128%" height="15" fill="rgb(252,28,32)" fg:x="77703" fg:w="10"/><text x="99.3395%" y="2223.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.01%)</title><rect x="99.0895%" y="2197" width="0.0128%" height="15" fill="rgb(207,52,49)" fg:x="77703" fg:w="10"/><text x="99.3395%" y="2207.50"></text></g><g><title>par_exec_20 (40 samples, 0.05%)</title><rect x="99.0576%" y="3189" width="0.0510%" height="15" fill="rgb(243,51,50)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="3199.50"></text></g><g><title>__GI___clone3 (40 samples, 0.05%)</title><rect x="99.0576%" y="3173" width="0.0510%" height="15" fill="rgb(212,92,21)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="3183.50"></text></g><g><title>start_thread (40 samples, 0.05%)</title><rect x="99.0576%" y="3157" width="0.0510%" height="15" fill="rgb(230,183,50)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (40 samples, 0.05%)</title><rect x="99.0576%" y="3141" width="0.0510%" height="15" fill="rgb(225,48,9)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (40 samples, 0.05%)</title><rect x="99.0576%" y="3125" width="0.0510%" height="15" fill="rgb(254,44,4)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (40 samples, 0.05%)</title><rect x="99.0576%" y="3109" width="0.0510%" height="15" fill="rgb(252,128,37)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (40 samples, 0.05%)</title><rect x="99.0576%" y="3093" width="0.0510%" height="15" fill="rgb(227,178,8)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (40 samples, 0.05%)</title><rect x="99.0576%" y="3077" width="0.0510%" height="15" fill="rgb(205,206,32)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 0.05%)</title><rect x="99.0576%" y="3061" width="0.0510%" height="15" fill="rgb(220,218,22)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="3071.50"></text></g><g><title>std::panicking::try (40 samples, 0.05%)</title><rect x="99.0576%" y="3045" width="0.0510%" height="15" fill="rgb(236,41,28)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 0.05%)</title><rect x="99.0576%" y="3029" width="0.0510%" height="15" fill="rgb(219,37,7)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (40 samples, 0.05%)</title><rect x="99.0576%" y="3013" width="0.0510%" height="15" fill="rgb(206,160,15)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (40 samples, 0.05%)</title><rect x="99.0576%" y="2997" width="0.0510%" height="15" fill="rgb(208,82,21)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (40 samples, 0.05%)</title><rect x="99.0576%" y="2981" width="0.0510%" height="15" fill="rgb(226,130,25)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (40 samples, 0.05%)</title><rect x="99.0576%" y="2965" width="0.0510%" height="15" fill="rgb(212,72,24)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (40 samples, 0.05%)</title><rect x="99.0576%" y="2949" width="0.0510%" height="15" fill="rgb(206,28,16)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (40 samples, 0.05%)</title><rect x="99.0576%" y="2933" width="0.0510%" height="15" fill="rgb(249,41,5)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (40 samples, 0.05%)</title><rect x="99.0576%" y="2917" width="0.0510%" height="15" fill="rgb(233,96,48)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (40 samples, 0.05%)</title><rect x="99.0576%" y="2901" width="0.0510%" height="15" fill="rgb(240,198,11)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (40 samples, 0.05%)</title><rect x="99.0576%" y="2885" width="0.0510%" height="15" fill="rgb(209,175,35)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (40 samples, 0.05%)</title><rect x="99.0576%" y="2869" width="0.0510%" height="15" fill="rgb(214,40,51)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (40 samples, 0.05%)</title><rect x="99.0576%" y="2853" width="0.0510%" height="15" fill="rgb(252,56,4)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (40 samples, 0.05%)</title><rect x="99.0576%" y="2837" width="0.0510%" height="15" fill="rgb(219,131,5)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 0.05%)</title><rect x="99.0576%" y="2821" width="0.0510%" height="15" fill="rgb(223,67,53)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2831.50"></text></g><g><title>std::panicking::try (40 samples, 0.05%)</title><rect x="99.0576%" y="2805" width="0.0510%" height="15" fill="rgb(227,154,8)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 0.05%)</title><rect x="99.0576%" y="2789" width="0.0510%" height="15" fill="rgb(216,174,51)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (40 samples, 0.05%)</title><rect x="99.0576%" y="2773" width="0.0510%" height="15" fill="rgb(239,60,34)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (40 samples, 0.05%)</title><rect x="99.0576%" y="2757" width="0.0510%" height="15" fill="rgb(236,165,48)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (40 samples, 0.05%)</title><rect x="99.0576%" y="2741" width="0.0510%" height="15" fill="rgb(210,37,26)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (40 samples, 0.05%)</title><rect x="99.0576%" y="2725" width="0.0510%" height="15" fill="rgb(211,3,17)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.05%)</title><rect x="99.0576%" y="2709" width="0.0510%" height="15" fill="rgb(234,88,49)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (40 samples, 0.05%)</title><rect x="99.0576%" y="2693" width="0.0510%" height="15" fill="rgb(233,40,17)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (40 samples, 0.05%)</title><rect x="99.0576%" y="2677" width="0.0510%" height="15" fill="rgb(235,127,31)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (40 samples, 0.05%)</title><rect x="99.0576%" y="2661" width="0.0510%" height="15" fill="rgb(248,167,17)" fg:x="77678" fg:w="40"/><text x="99.3076%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (21 samples, 0.03%)</title><rect x="99.0818%" y="2645" width="0.0268%" height="15" fill="rgb(218,179,8)" fg:x="77697" fg:w="21"/><text x="99.3318%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 0.03%)</title><rect x="99.0818%" y="2629" width="0.0268%" height="15" fill="rgb(216,92,14)" fg:x="77697" fg:w="21"/><text x="99.3318%" y="2639.50"></text></g><g><title>std::panicking::try (21 samples, 0.03%)</title><rect x="99.0818%" y="2613" width="0.0268%" height="15" fill="rgb(221,198,46)" fg:x="77697" fg:w="21"/><text x="99.3318%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 0.03%)</title><rect x="99.0818%" y="2597" width="0.0268%" height="15" fill="rgb(244,7,25)" fg:x="77697" fg:w="21"/><text x="99.3318%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21 samples, 0.03%)</title><rect x="99.0818%" y="2581" width="0.0268%" height="15" fill="rgb(233,75,6)" fg:x="77697" fg:w="21"/><text x="99.3318%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (21 samples, 0.03%)</title><rect x="99.0818%" y="2565" width="0.0268%" height="15" fill="rgb(240,189,41)" fg:x="77697" fg:w="21"/><text x="99.3318%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (21 samples, 0.03%)</title><rect x="99.0818%" y="2549" width="0.0268%" height="15" fill="rgb(237,157,21)" fg:x="77697" fg:w="21"/><text x="99.3318%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.03%)</title><rect x="99.0818%" y="2533" width="0.0268%" height="15" fill="rgb(210,136,49)" fg:x="77697" fg:w="21"/><text x="99.3318%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (20 samples, 0.03%)</title><rect x="99.0831%" y="2517" width="0.0255%" height="15" fill="rgb(210,68,29)" fg:x="77698" fg:w="20"/><text x="99.3331%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (20 samples, 0.03%)</title><rect x="99.0831%" y="2501" width="0.0255%" height="15" fill="rgb(247,207,20)" fg:x="77698" fg:w="20"/><text x="99.3331%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (20 samples, 0.03%)</title><rect x="99.0831%" y="2485" width="0.0255%" height="15" fill="rgb(224,73,48)" fg:x="77698" fg:w="20"/><text x="99.3331%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (15 samples, 0.02%)</title><rect x="99.0895%" y="2469" width="0.0191%" height="15" fill="rgb(215,136,47)" fg:x="77703" fg:w="15"/><text x="99.3395%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.02%)</title><rect x="99.0895%" y="2453" width="0.0191%" height="15" fill="rgb(232,222,16)" fg:x="77703" fg:w="15"/><text x="99.3395%" y="2463.50"></text></g><g><title>std::panicking::try (15 samples, 0.02%)</title><rect x="99.0895%" y="2437" width="0.0191%" height="15" fill="rgb(249,202,47)" fg:x="77703" fg:w="15"/><text x="99.3395%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.02%)</title><rect x="99.0895%" y="2421" width="0.0191%" height="15" fill="rgb(236,56,8)" fg:x="77703" fg:w="15"/><text x="99.3395%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 0.02%)</title><rect x="99.0895%" y="2405" width="0.0191%" height="15" fill="rgb(222,6,3)" fg:x="77703" fg:w="15"/><text x="99.3395%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (15 samples, 0.02%)</title><rect x="99.0895%" y="2389" width="0.0191%" height="15" fill="rgb(254,222,28)" fg:x="77703" fg:w="15"/><text x="99.3395%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (15 samples, 0.02%)</title><rect x="99.0895%" y="2373" width="0.0191%" height="15" fill="rgb(219,57,23)" fg:x="77703" fg:w="15"/><text x="99.3395%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="99.0895%" y="2357" width="0.0191%" height="15" fill="rgb(251,106,48)" fg:x="77703" fg:w="15"/><text x="99.3395%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (15 samples, 0.02%)</title><rect x="99.0895%" y="2341" width="0.0191%" height="15" fill="rgb(242,2,23)" fg:x="77703" fg:w="15"/><text x="99.3395%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (15 samples, 0.02%)</title><rect x="99.0895%" y="2325" width="0.0191%" height="15" fill="rgb(212,109,31)" fg:x="77703" fg:w="15"/><text x="99.3395%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.02%)</title><rect x="99.0895%" y="2309" width="0.0191%" height="15" fill="rgb(241,9,22)" fg:x="77703" fg:w="15"/><text x="99.3395%" y="2319.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (9 samples, 0.01%)</title><rect x="99.1137%" y="2645" width="0.0115%" height="15" fill="rgb(209,64,27)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2655.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (9 samples, 0.01%)</title><rect x="99.1137%" y="2629" width="0.0115%" height="15" fill="rgb(248,13,44)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2639.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (9 samples, 0.01%)</title><rect x="99.1137%" y="2613" width="0.0115%" height="15" fill="rgb(213,86,6)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2623.50"></text></g><g><title>rayon_core::job::JobRef::execute (9 samples, 0.01%)</title><rect x="99.1137%" y="2597" width="0.0115%" height="15" fill="rgb(247,11,18)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2607.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9 samples, 0.01%)</title><rect x="99.1137%" y="2581" width="0.0115%" height="15" fill="rgb(252,31,11)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2591.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="99.1137%" y="2565" width="0.0115%" height="15" fill="rgb(215,63,51)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2575.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="99.1137%" y="2549" width="0.0115%" height="15" fill="rgb(222,180,4)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2559.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="99.1137%" y="2533" width="0.0115%" height="15" fill="rgb(233,4,23)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2543.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="99.1137%" y="2517" width="0.0115%" height="15" fill="rgb(230,116,22)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2527.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="99.1137%" y="2501" width="0.0115%" height="15" fill="rgb(222,20,14)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2511.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (9 samples, 0.01%)</title><rect x="99.1137%" y="2485" width="0.0115%" height="15" fill="rgb(210,176,43)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.01%)</title><rect x="99.1137%" y="2469" width="0.0115%" height="15" fill="rgb(219,67,32)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="99.1137%" y="2453" width="0.0115%" height="15" fill="rgb(228,91,39)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="99.1137%" y="2437" width="0.0115%" height="15" fill="rgb(254,63,14)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2447.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="99.1137%" y="2421" width="0.0115%" height="15" fill="rgb(216,171,39)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2431.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="99.1137%" y="2405" width="0.0115%" height="15" fill="rgb(248,68,25)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="99.1137%" y="2389" width="0.0115%" height="15" fill="rgb(239,63,16)" fg:x="77722" fg:w="9"/><text x="99.3637%" y="2399.50"></text></g><g><title>par_exec_21 (25 samples, 0.03%)</title><rect x="99.1086%" y="3189" width="0.0319%" height="15" fill="rgb(225,111,43)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="3199.50"></text></g><g><title>__GI___clone3 (25 samples, 0.03%)</title><rect x="99.1086%" y="3173" width="0.0319%" height="15" fill="rgb(246,165,17)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="3183.50"></text></g><g><title>start_thread (25 samples, 0.03%)</title><rect x="99.1086%" y="3157" width="0.0319%" height="15" fill="rgb(208,124,1)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (25 samples, 0.03%)</title><rect x="99.1086%" y="3141" width="0.0319%" height="15" fill="rgb(234,147,33)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 0.03%)</title><rect x="99.1086%" y="3125" width="0.0319%" height="15" fill="rgb(240,86,30)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 0.03%)</title><rect x="99.1086%" y="3109" width="0.0319%" height="15" fill="rgb(237,34,51)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (25 samples, 0.03%)</title><rect x="99.1086%" y="3093" width="0.0319%" height="15" fill="rgb(232,131,41)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (25 samples, 0.03%)</title><rect x="99.1086%" y="3077" width="0.0319%" height="15" fill="rgb(227,129,53)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.03%)</title><rect x="99.1086%" y="3061" width="0.0319%" height="15" fill="rgb(230,90,35)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="3071.50"></text></g><g><title>std::panicking::try (25 samples, 0.03%)</title><rect x="99.1086%" y="3045" width="0.0319%" height="15" fill="rgb(248,88,27)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.03%)</title><rect x="99.1086%" y="3029" width="0.0319%" height="15" fill="rgb(223,18,17)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.03%)</title><rect x="99.1086%" y="3013" width="0.0319%" height="15" fill="rgb(241,11,10)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (25 samples, 0.03%)</title><rect x="99.1086%" y="2997" width="0.0319%" height="15" fill="rgb(232,111,52)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (25 samples, 0.03%)</title><rect x="99.1086%" y="2981" width="0.0319%" height="15" fill="rgb(228,67,8)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (25 samples, 0.03%)</title><rect x="99.1086%" y="2965" width="0.0319%" height="15" fill="rgb(251,168,31)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (25 samples, 0.03%)</title><rect x="99.1086%" y="2949" width="0.0319%" height="15" fill="rgb(249,164,11)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (25 samples, 0.03%)</title><rect x="99.1086%" y="2933" width="0.0319%" height="15" fill="rgb(239,81,9)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (25 samples, 0.03%)</title><rect x="99.1086%" y="2917" width="0.0319%" height="15" fill="rgb(222,145,38)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (25 samples, 0.03%)</title><rect x="99.1086%" y="2901" width="0.0319%" height="15" fill="rgb(238,80,54)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (25 samples, 0.03%)</title><rect x="99.1086%" y="2885" width="0.0319%" height="15" fill="rgb(237,116,16)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (25 samples, 0.03%)</title><rect x="99.1086%" y="2869" width="0.0319%" height="15" fill="rgb(218,135,19)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (25 samples, 0.03%)</title><rect x="99.1086%" y="2853" width="0.0319%" height="15" fill="rgb(216,207,44)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.03%)</title><rect x="99.1086%" y="2837" width="0.0319%" height="15" fill="rgb(226,152,40)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.03%)</title><rect x="99.1086%" y="2821" width="0.0319%" height="15" fill="rgb(219,98,35)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2831.50"></text></g><g><title>std::panicking::try (25 samples, 0.03%)</title><rect x="99.1086%" y="2805" width="0.0319%" height="15" fill="rgb(222,136,46)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.03%)</title><rect x="99.1086%" y="2789" width="0.0319%" height="15" fill="rgb(222,71,8)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.03%)</title><rect x="99.1086%" y="2773" width="0.0319%" height="15" fill="rgb(209,89,53)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (25 samples, 0.03%)</title><rect x="99.1086%" y="2757" width="0.0319%" height="15" fill="rgb(210,97,51)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (25 samples, 0.03%)</title><rect x="99.1086%" y="2741" width="0.0319%" height="15" fill="rgb(248,65,21)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.03%)</title><rect x="99.1086%" y="2725" width="0.0319%" height="15" fill="rgb(222,5,31)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.03%)</title><rect x="99.1086%" y="2709" width="0.0319%" height="15" fill="rgb(241,16,30)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.03%)</title><rect x="99.1086%" y="2693" width="0.0319%" height="15" fill="rgb(215,86,30)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.03%)</title><rect x="99.1086%" y="2677" width="0.0319%" height="15" fill="rgb(235,26,44)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.03%)</title><rect x="99.1086%" y="2661" width="0.0319%" height="15" fill="rgb(228,147,14)" fg:x="77718" fg:w="25"/><text x="99.3586%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.02%)</title><rect x="99.1252%" y="2645" width="0.0153%" height="15" fill="rgb(253,38,50)" fg:x="77731" fg:w="12"/><text x="99.3752%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.02%)</title><rect x="99.1252%" y="2629" width="0.0153%" height="15" fill="rgb(251,151,16)" fg:x="77731" fg:w="12"/><text x="99.3752%" y="2639.50"></text></g><g><title>std::panicking::try (12 samples, 0.02%)</title><rect x="99.1252%" y="2613" width="0.0153%" height="15" fill="rgb(224,64,19)" fg:x="77731" fg:w="12"/><text x="99.3752%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.02%)</title><rect x="99.1252%" y="2597" width="0.0153%" height="15" fill="rgb(235,214,47)" fg:x="77731" fg:w="12"/><text x="99.3752%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.02%)</title><rect x="99.1252%" y="2581" width="0.0153%" height="15" fill="rgb(218,15,19)" fg:x="77731" fg:w="12"/><text x="99.3752%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.02%)</title><rect x="99.1252%" y="2565" width="0.0153%" height="15" fill="rgb(247,209,3)" fg:x="77731" fg:w="12"/><text x="99.3752%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.02%)</title><rect x="99.1252%" y="2549" width="0.0153%" height="15" fill="rgb(217,29,2)" fg:x="77731" fg:w="12"/><text x="99.3752%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.02%)</title><rect x="99.1252%" y="2533" width="0.0153%" height="15" fill="rgb(234,9,9)" fg:x="77731" fg:w="12"/><text x="99.3752%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.02%)</title><rect x="99.1252%" y="2517" width="0.0153%" height="15" fill="rgb(207,43,14)" fg:x="77731" fg:w="12"/><text x="99.3752%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.02%)</title><rect x="99.1252%" y="2501" width="0.0153%" height="15" fill="rgb(216,219,36)" fg:x="77731" fg:w="12"/><text x="99.3752%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.02%)</title><rect x="99.1252%" y="2485" width="0.0153%" height="15" fill="rgb(238,12,26)" fg:x="77731" fg:w="12"/><text x="99.3752%" y="2495.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (15 samples, 0.02%)</title><rect x="99.1405%" y="2645" width="0.0191%" height="15" fill="rgb(226,67,30)" fg:x="77743" fg:w="15"/><text x="99.3905%" y="2655.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (15 samples, 0.02%)</title><rect x="99.1405%" y="2629" width="0.0191%" height="15" fill="rgb(229,154,7)" fg:x="77743" fg:w="15"/><text x="99.3905%" y="2639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (15 samples, 0.02%)</title><rect x="99.1405%" y="2613" width="0.0191%" height="15" fill="rgb(249,90,18)" fg:x="77743" fg:w="15"/><text x="99.3905%" y="2623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="99.1405%" y="2597" width="0.0191%" height="15" fill="rgb(223,53,15)" fg:x="77743" fg:w="15"/><text x="99.3905%" y="2607.50"></text></g><g><title>rayon_core::join::join_context (15 samples, 0.02%)</title><rect x="99.1405%" y="2581" width="0.0191%" height="15" fill="rgb(253,86,38)" fg:x="77743" fg:w="15"/><text x="99.3905%" y="2591.50"></text></g><g><title>rayon_core::registry::in_worker (15 samples, 0.02%)</title><rect x="99.1405%" y="2565" width="0.0191%" height="15" fill="rgb(222,198,9)" fg:x="77743" fg:w="15"/><text x="99.3905%" y="2575.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.02%)</title><rect x="99.1405%" y="2549" width="0.0191%" height="15" fill="rgb(240,146,25)" fg:x="77743" fg:w="15"/><text x="99.3905%" y="2559.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (11 samples, 0.01%)</title><rect x="99.1685%" y="2357" width="0.0140%" height="15" fill="rgb(225,38,10)" fg:x="77765" fg:w="11"/><text x="99.4185%" y="2367.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (11 samples, 0.01%)</title><rect x="99.1685%" y="2341" width="0.0140%" height="15" fill="rgb(246,93,4)" fg:x="77765" fg:w="11"/><text x="99.4185%" y="2351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="99.1685%" y="2325" width="0.0140%" height="15" fill="rgb(222,55,18)" fg:x="77765" fg:w="11"/><text x="99.4185%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="99.1685%" y="2309" width="0.0140%" height="15" fill="rgb(233,137,48)" fg:x="77765" fg:w="11"/><text x="99.4185%" y="2319.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="99.1685%" y="2293" width="0.0140%" height="15" fill="rgb(214,8,54)" fg:x="77765" fg:w="11"/><text x="99.4185%" y="2303.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="99.1685%" y="2277" width="0.0140%" height="15" fill="rgb(206,75,4)" fg:x="77765" fg:w="11"/><text x="99.4185%" y="2287.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="99.1685%" y="2261" width="0.0140%" height="15" fill="rgb(238,171,14)" fg:x="77765" fg:w="11"/><text x="99.4185%" y="2271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (14 samples, 0.02%)</title><rect x="99.1673%" y="2469" width="0.0179%" height="15" fill="rgb(233,70,41)" fg:x="77764" fg:w="14"/><text x="99.4173%" y="2479.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (14 samples, 0.02%)</title><rect x="99.1673%" y="2453" width="0.0179%" height="15" fill="rgb(214,68,36)" fg:x="77764" fg:w="14"/><text x="99.4173%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.02%)</title><rect x="99.1673%" y="2437" width="0.0179%" height="15" fill="rgb(223,29,5)" fg:x="77764" fg:w="14"/><text x="99.4173%" y="2447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="99.1673%" y="2421" width="0.0179%" height="15" fill="rgb(251,22,40)" fg:x="77764" fg:w="14"/><text x="99.4173%" y="2431.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="99.1685%" y="2405" width="0.0166%" height="15" fill="rgb(210,67,41)" fg:x="77765" fg:w="13"/><text x="99.4185%" y="2415.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="99.1685%" y="2389" width="0.0166%" height="15" fill="rgb(225,177,31)" fg:x="77765" fg:w="13"/><text x="99.4185%" y="2399.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="99.1685%" y="2373" width="0.0166%" height="15" fill="rgb(221,229,11)" fg:x="77765" fg:w="13"/><text x="99.4185%" y="2383.50"></text></g><g><title>par_exec_22 (38 samples, 0.05%)</title><rect x="99.1405%" y="3189" width="0.0485%" height="15" fill="rgb(247,172,52)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="3199.50"></text></g><g><title>__GI___clone3 (38 samples, 0.05%)</title><rect x="99.1405%" y="3173" width="0.0485%" height="15" fill="rgb(212,73,19)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="3183.50"></text></g><g><title>start_thread (38 samples, 0.05%)</title><rect x="99.1405%" y="3157" width="0.0485%" height="15" fill="rgb(244,7,46)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (38 samples, 0.05%)</title><rect x="99.1405%" y="3141" width="0.0485%" height="15" fill="rgb(230,113,20)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (38 samples, 0.05%)</title><rect x="99.1405%" y="3125" width="0.0485%" height="15" fill="rgb(209,97,30)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (38 samples, 0.05%)</title><rect x="99.1405%" y="3109" width="0.0485%" height="15" fill="rgb(243,89,12)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (38 samples, 0.05%)</title><rect x="99.1405%" y="3093" width="0.0485%" height="15" fill="rgb(228,32,19)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (38 samples, 0.05%)</title><rect x="99.1405%" y="3077" width="0.0485%" height="15" fill="rgb(248,25,17)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (38 samples, 0.05%)</title><rect x="99.1405%" y="3061" width="0.0485%" height="15" fill="rgb(232,161,29)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="3071.50"></text></g><g><title>std::panicking::try (38 samples, 0.05%)</title><rect x="99.1405%" y="3045" width="0.0485%" height="15" fill="rgb(251,192,11)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (38 samples, 0.05%)</title><rect x="99.1405%" y="3029" width="0.0485%" height="15" fill="rgb(240,47,32)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (38 samples, 0.05%)</title><rect x="99.1405%" y="3013" width="0.0485%" height="15" fill="rgb(250,16,45)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (38 samples, 0.05%)</title><rect x="99.1405%" y="2997" width="0.0485%" height="15" fill="rgb(227,217,42)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (38 samples, 0.05%)</title><rect x="99.1405%" y="2981" width="0.0485%" height="15" fill="rgb(206,82,54)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (38 samples, 0.05%)</title><rect x="99.1405%" y="2965" width="0.0485%" height="15" fill="rgb(243,145,25)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (38 samples, 0.05%)</title><rect x="99.1405%" y="2949" width="0.0485%" height="15" fill="rgb(207,166,24)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (38 samples, 0.05%)</title><rect x="99.1405%" y="2933" width="0.0485%" height="15" fill="rgb(215,191,44)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (38 samples, 0.05%)</title><rect x="99.1405%" y="2917" width="0.0485%" height="15" fill="rgb(234,218,51)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (38 samples, 0.05%)</title><rect x="99.1405%" y="2901" width="0.0485%" height="15" fill="rgb(245,133,21)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (38 samples, 0.05%)</title><rect x="99.1405%" y="2885" width="0.0485%" height="15" fill="rgb(230,136,45)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (38 samples, 0.05%)</title><rect x="99.1405%" y="2869" width="0.0485%" height="15" fill="rgb(247,63,43)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (38 samples, 0.05%)</title><rect x="99.1405%" y="2853" width="0.0485%" height="15" fill="rgb(254,223,31)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (38 samples, 0.05%)</title><rect x="99.1405%" y="2837" width="0.0485%" height="15" fill="rgb(236,185,0)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (38 samples, 0.05%)</title><rect x="99.1405%" y="2821" width="0.0485%" height="15" fill="rgb(231,139,46)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2831.50"></text></g><g><title>std::panicking::try (38 samples, 0.05%)</title><rect x="99.1405%" y="2805" width="0.0485%" height="15" fill="rgb(236,147,31)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (38 samples, 0.05%)</title><rect x="99.1405%" y="2789" width="0.0485%" height="15" fill="rgb(225,222,22)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (38 samples, 0.05%)</title><rect x="99.1405%" y="2773" width="0.0485%" height="15" fill="rgb(225,193,14)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (38 samples, 0.05%)</title><rect x="99.1405%" y="2757" width="0.0485%" height="15" fill="rgb(253,193,46)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (38 samples, 0.05%)</title><rect x="99.1405%" y="2741" width="0.0485%" height="15" fill="rgb(218,187,39)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (38 samples, 0.05%)</title><rect x="99.1405%" y="2725" width="0.0485%" height="15" fill="rgb(227,162,48)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (38 samples, 0.05%)</title><rect x="99.1405%" y="2709" width="0.0485%" height="15" fill="rgb(222,25,5)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (38 samples, 0.05%)</title><rect x="99.1405%" y="2693" width="0.0485%" height="15" fill="rgb(211,205,16)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (38 samples, 0.05%)</title><rect x="99.1405%" y="2677" width="0.0485%" height="15" fill="rgb(244,191,2)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (38 samples, 0.05%)</title><rect x="99.1405%" y="2661" width="0.0485%" height="15" fill="rgb(248,159,12)" fg:x="77743" fg:w="38"/><text x="99.3905%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="99.1673%" y="2645" width="0.0217%" height="15" fill="rgb(235,204,17)" fg:x="77764" fg:w="17"/><text x="99.4173%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="99.1673%" y="2629" width="0.0217%" height="15" fill="rgb(240,21,27)" fg:x="77764" fg:w="17"/><text x="99.4173%" y="2639.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="99.1673%" y="2613" width="0.0217%" height="15" fill="rgb(224,170,31)" fg:x="77764" fg:w="17"/><text x="99.4173%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="99.1673%" y="2597" width="0.0217%" height="15" fill="rgb(223,145,32)" fg:x="77764" fg:w="17"/><text x="99.4173%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.1673%" y="2581" width="0.0217%" height="15" fill="rgb(243,100,5)" fg:x="77764" fg:w="17"/><text x="99.4173%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.02%)</title><rect x="99.1673%" y="2565" width="0.0217%" height="15" fill="rgb(242,131,51)" fg:x="77764" fg:w="17"/><text x="99.4173%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="99.1673%" y="2549" width="0.0217%" height="15" fill="rgb(223,156,46)" fg:x="77764" fg:w="17"/><text x="99.4173%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="99.1673%" y="2533" width="0.0217%" height="15" fill="rgb(215,10,40)" fg:x="77764" fg:w="17"/><text x="99.4173%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="99.1673%" y="2517" width="0.0217%" height="15" fill="rgb(233,155,0)" fg:x="77764" fg:w="17"/><text x="99.4173%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="99.1673%" y="2501" width="0.0217%" height="15" fill="rgb(247,78,6)" fg:x="77764" fg:w="17"/><text x="99.4173%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="99.1673%" y="2485" width="0.0217%" height="15" fill="rgb(237,217,21)" fg:x="77764" fg:w="17"/><text x="99.4173%" y="2495.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (14 samples, 0.02%)</title><rect x="99.1953%" y="2645" width="0.0179%" height="15" fill="rgb(212,1,21)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2655.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (14 samples, 0.02%)</title><rect x="99.1953%" y="2629" width="0.0179%" height="15" fill="rgb(213,7,14)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2639.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (14 samples, 0.02%)</title><rect x="99.1953%" y="2613" width="0.0179%" height="15" fill="rgb(225,84,14)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2623.50"></text></g><g><title>rayon_core::job::JobRef::execute (14 samples, 0.02%)</title><rect x="99.1953%" y="2597" width="0.0179%" height="15" fill="rgb(239,216,39)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2607.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (14 samples, 0.02%)</title><rect x="99.1953%" y="2581" width="0.0179%" height="15" fill="rgb(253,29,23)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2591.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.02%)</title><rect x="99.1953%" y="2565" width="0.0179%" height="15" fill="rgb(220,167,50)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2575.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.02%)</title><rect x="99.1953%" y="2549" width="0.0179%" height="15" fill="rgb(232,141,1)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2559.50"></text></g><g><title>std::panicking::try (14 samples, 0.02%)</title><rect x="99.1953%" y="2533" width="0.0179%" height="15" fill="rgb(222,210,1)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2543.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.02%)</title><rect x="99.1953%" y="2517" width="0.0179%" height="15" fill="rgb(219,84,10)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2527.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.02%)</title><rect x="99.1953%" y="2501" width="0.0179%" height="15" fill="rgb(245,188,6)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2511.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (14 samples, 0.02%)</title><rect x="99.1953%" y="2485" width="0.0179%" height="15" fill="rgb(252,139,39)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (14 samples, 0.02%)</title><rect x="99.1953%" y="2469" width="0.0179%" height="15" fill="rgb(218,42,26)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.02%)</title><rect x="99.1953%" y="2453" width="0.0179%" height="15" fill="rgb(237,226,51)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="99.1953%" y="2437" width="0.0179%" height="15" fill="rgb(246,15,17)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2447.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.02%)</title><rect x="99.1953%" y="2421" width="0.0179%" height="15" fill="rgb(228,170,42)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2431.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.02%)</title><rect x="99.1953%" y="2405" width="0.0179%" height="15" fill="rgb(248,118,53)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.02%)</title><rect x="99.1953%" y="2389" width="0.0179%" height="15" fill="rgb(207,30,10)" fg:x="77786" fg:w="14"/><text x="99.4453%" y="2399.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (11 samples, 0.01%)</title><rect x="99.2145%" y="2133" width="0.0140%" height="15" fill="rgb(217,104,38)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="2143.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (11 samples, 0.01%)</title><rect x="99.2145%" y="2117" width="0.0140%" height="15" fill="rgb(211,165,26)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="2127.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="99.2145%" y="2101" width="0.0140%" height="15" fill="rgb(247,38,9)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="99.2145%" y="2085" width="0.0140%" height="15" fill="rgb(218,187,8)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="2095.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="99.2145%" y="2069" width="0.0140%" height="15" fill="rgb(247,94,28)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="2079.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="99.2145%" y="2053" width="0.0140%" height="15" fill="rgb(218,173,30)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="99.2145%" y="2037" width="0.0140%" height="15" fill="rgb(245,45,36)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="2047.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (11 samples, 0.01%)</title><rect x="99.2145%" y="2021" width="0.0140%" height="15" fill="rgb(221,172,44)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="2031.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (11 samples, 0.01%)</title><rect x="99.2145%" y="2005" width="0.0140%" height="15" fill="rgb(222,45,12)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="2015.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="99.2145%" y="1989" width="0.0140%" height="15" fill="rgb(250,10,22)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1999.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="99.2145%" y="1973" width="0.0140%" height="15" fill="rgb(239,27,0)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (11 samples, 0.01%)</title><rect x="99.2145%" y="1957" width="0.0140%" height="15" fill="rgb(223,118,22)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1967.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.01%)</title><rect x="99.2145%" y="1941" width="0.0140%" height="15" fill="rgb(251,81,25)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1951.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (11 samples, 0.01%)</title><rect x="99.2145%" y="1925" width="0.0140%" height="15" fill="rgb(237,225,53)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1935.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="99.2145%" y="1909" width="0.0140%" height="15" fill="rgb(237,186,51)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1919.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="99.2145%" y="1893" width="0.0140%" height="15" fill="rgb(247,209,11)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1903.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.01%)</title><rect x="99.2145%" y="1877" width="0.0140%" height="15" fill="rgb(223,109,27)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1887.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (11 samples, 0.01%)</title><rect x="99.2145%" y="1861" width="0.0140%" height="15" fill="rgb(246,181,13)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1871.50"></text></g><g><title>core::ops::function::Fn::call (11 samples, 0.01%)</title><rect x="99.2145%" y="1845" width="0.0140%" height="15" fill="rgb(234,57,44)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1855.50"></text></g><g><title>aptos_vm::adapter_common::preprocess_transaction (11 samples, 0.01%)</title><rect x="99.2145%" y="1829" width="0.0140%" height="15" fill="rgb(211,227,50)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1839.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::check_signature (11 samples, 0.01%)</title><rect x="99.2145%" y="1813" width="0.0140%" height="15" fill="rgb(254,57,34)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1823.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::check_signature (11 samples, 0.01%)</title><rect x="99.2145%" y="1797" width="0.0140%" height="15" fill="rgb(227,212,26)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1807.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::verify (11 samples, 0.01%)</title><rect x="99.2145%" y="1781" width="0.0140%" height="15" fill="rgb(244,169,44)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1791.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_sigs::Ed25519Signature as aptos_crypto::traits::Signature&gt;::verify (11 samples, 0.01%)</title><rect x="99.2145%" y="1765" width="0.0140%" height="15" fill="rgb(236,135,50)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1775.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_sigs::Ed25519Signature as aptos_crypto::traits::Signature&gt;::verify_arbitrary_msg (11 samples, 0.01%)</title><rect x="99.2145%" y="1749" width="0.0140%" height="15" fill="rgb(241,89,30)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1759.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_strict (11 samples, 0.01%)</title><rect x="99.2145%" y="1733" width="0.0140%" height="15" fill="rgb(206,113,34)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1743.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (11 samples, 0.01%)</title><rect x="99.2145%" y="1717" width="0.0140%" height="15" fill="rgb(218,104,52)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1727.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (11 samples, 0.01%)</title><rect x="99.2145%" y="1701" width="0.0140%" height="15" fill="rgb(223,82,32)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1711.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (11 samples, 0.01%)</title><rect x="99.2145%" y="1685" width="0.0140%" height="15" fill="rgb(249,219,30)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1695.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (11 samples, 0.01%)</title><rect x="99.2145%" y="1669" width="0.0140%" height="15" fill="rgb(233,141,21)" fg:x="77801" fg:w="11"/><text x="99.4645%" y="1679.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (12 samples, 0.02%)</title><rect x="99.2145%" y="2245" width="0.0153%" height="15" fill="rgb(252,87,44)" fg:x="77801" fg:w="12"/><text x="99.4645%" y="2255.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (12 samples, 0.02%)</title><rect x="99.2145%" y="2229" width="0.0153%" height="15" fill="rgb(229,48,33)" fg:x="77801" fg:w="12"/><text x="99.4645%" y="2239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.02%)</title><rect x="99.2145%" y="2213" width="0.0153%" height="15" fill="rgb(229,23,22)" fg:x="77801" fg:w="12"/><text x="99.4645%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.02%)</title><rect x="99.2145%" y="2197" width="0.0153%" height="15" fill="rgb(244,116,16)" fg:x="77801" fg:w="12"/><text x="99.4645%" y="2207.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.02%)</title><rect x="99.2145%" y="2181" width="0.0153%" height="15" fill="rgb(247,45,10)" fg:x="77801" fg:w="12"/><text x="99.4645%" y="2191.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.02%)</title><rect x="99.2145%" y="2165" width="0.0153%" height="15" fill="rgb(228,60,29)" fg:x="77801" fg:w="12"/><text x="99.4645%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.02%)</title><rect x="99.2145%" y="2149" width="0.0153%" height="15" fill="rgb(205,129,15)" fg:x="77801" fg:w="12"/><text x="99.4645%" y="2159.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (14 samples, 0.02%)</title><rect x="99.2145%" y="2357" width="0.0179%" height="15" fill="rgb(206,229,4)" fg:x="77801" fg:w="14"/><text x="99.4645%" y="2367.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (14 samples, 0.02%)</title><rect x="99.2145%" y="2341" width="0.0179%" height="15" fill="rgb(249,191,30)" fg:x="77801" fg:w="14"/><text x="99.4645%" y="2351.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.02%)</title><rect x="99.2145%" y="2325" width="0.0179%" height="15" fill="rgb(250,84,54)" fg:x="77801" fg:w="14"/><text x="99.4645%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="99.2145%" y="2309" width="0.0179%" height="15" fill="rgb(207,25,53)" fg:x="77801" fg:w="14"/><text x="99.4645%" y="2319.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.02%)</title><rect x="99.2145%" y="2293" width="0.0179%" height="15" fill="rgb(235,40,8)" fg:x="77801" fg:w="14"/><text x="99.4645%" y="2303.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.02%)</title><rect x="99.2145%" y="2277" width="0.0179%" height="15" fill="rgb(226,169,33)" fg:x="77801" fg:w="14"/><text x="99.4645%" y="2287.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.02%)</title><rect x="99.2145%" y="2261" width="0.0179%" height="15" fill="rgb(238,110,8)" fg:x="77801" fg:w="14"/><text x="99.4645%" y="2271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (24 samples, 0.03%)</title><rect x="99.2132%" y="2469" width="0.0306%" height="15" fill="rgb(251,206,12)" fg:x="77800" fg:w="24"/><text x="99.4632%" y="2479.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (24 samples, 0.03%)</title><rect x="99.2132%" y="2453" width="0.0306%" height="15" fill="rgb(248,171,18)" fg:x="77800" fg:w="24"/><text x="99.4632%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (24 samples, 0.03%)</title><rect x="99.2132%" y="2437" width="0.0306%" height="15" fill="rgb(213,65,46)" fg:x="77800" fg:w="24"/><text x="99.4632%" y="2447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.03%)</title><rect x="99.2132%" y="2421" width="0.0306%" height="15" fill="rgb(211,154,15)" fg:x="77800" fg:w="24"/><text x="99.4632%" y="2431.50"></text></g><g><title>rayon_core::join::join_context (23 samples, 0.03%)</title><rect x="99.2145%" y="2405" width="0.0293%" height="15" fill="rgb(217,75,43)" fg:x="77801" fg:w="23"/><text x="99.4645%" y="2415.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.03%)</title><rect x="99.2145%" y="2389" width="0.0293%" height="15" fill="rgb(230,32,33)" fg:x="77801" fg:w="23"/><text x="99.4645%" y="2399.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (23 samples, 0.03%)</title><rect x="99.2145%" y="2373" width="0.0293%" height="15" fill="rgb(221,100,16)" fg:x="77801" fg:w="23"/><text x="99.4645%" y="2383.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="99.2336%" y="2357" width="0.0102%" height="15" fill="rgb(212,129,47)" fg:x="77816" fg:w="8"/><text x="99.4836%" y="2367.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="99.2336%" y="2341" width="0.0102%" height="15" fill="rgb(239,217,47)" fg:x="77816" fg:w="8"/><text x="99.4836%" y="2351.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="99.2336%" y="2325" width="0.0102%" height="15" fill="rgb(230,84,24)" fg:x="77816" fg:w="8"/><text x="99.4836%" y="2335.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="99.2336%" y="2309" width="0.0102%" height="15" fill="rgb(214,153,51)" fg:x="77816" fg:w="8"/><text x="99.4836%" y="2319.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="99.2336%" y="2293" width="0.0102%" height="15" fill="rgb(231,6,35)" fg:x="77816" fg:w="8"/><text x="99.4836%" y="2303.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.01%)</title><rect x="99.2336%" y="2277" width="0.0102%" height="15" fill="rgb(229,122,30)" fg:x="77816" fg:w="8"/><text x="99.4836%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="99.2336%" y="2261" width="0.0102%" height="15" fill="rgb(234,71,10)" fg:x="77816" fg:w="8"/><text x="99.4836%" y="2271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="99.2336%" y="2245" width="0.0102%" height="15" fill="rgb(215,173,26)" fg:x="77816" fg:w="8"/><text x="99.4836%" y="2255.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="99.2336%" y="2229" width="0.0102%" height="15" fill="rgb(248,118,52)" fg:x="77816" fg:w="8"/><text x="99.4836%" y="2239.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="99.2336%" y="2213" width="0.0102%" height="15" fill="rgb(237,55,46)" fg:x="77816" fg:w="8"/><text x="99.4836%" y="2223.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="99.2336%" y="2197" width="0.0102%" height="15" fill="rgb(243,214,43)" fg:x="77816" fg:w="8"/><text x="99.4836%" y="2207.50"></text></g><g><title>par_exec_23 (50 samples, 0.06%)</title><rect x="99.1890%" y="3189" width="0.0638%" height="15" fill="rgb(252,123,30)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="3199.50"></text></g><g><title>__GI___clone3 (50 samples, 0.06%)</title><rect x="99.1890%" y="3173" width="0.0638%" height="15" fill="rgb(215,73,39)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="3183.50"></text></g><g><title>start_thread (50 samples, 0.06%)</title><rect x="99.1890%" y="3157" width="0.0638%" height="15" fill="rgb(251,194,29)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (50 samples, 0.06%)</title><rect x="99.1890%" y="3141" width="0.0638%" height="15" fill="rgb(224,58,52)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50 samples, 0.06%)</title><rect x="99.1890%" y="3125" width="0.0638%" height="15" fill="rgb(248,106,46)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50 samples, 0.06%)</title><rect x="99.1890%" y="3109" width="0.0638%" height="15" fill="rgb(223,80,29)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (50 samples, 0.06%)</title><rect x="99.1890%" y="3093" width="0.0638%" height="15" fill="rgb(243,137,9)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (50 samples, 0.06%)</title><rect x="99.1890%" y="3077" width="0.0638%" height="15" fill="rgb(235,121,28)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (50 samples, 0.06%)</title><rect x="99.1890%" y="3061" width="0.0638%" height="15" fill="rgb(219,121,41)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="3071.50"></text></g><g><title>std::panicking::try (50 samples, 0.06%)</title><rect x="99.1890%" y="3045" width="0.0638%" height="15" fill="rgb(251,60,6)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (50 samples, 0.06%)</title><rect x="99.1890%" y="3029" width="0.0638%" height="15" fill="rgb(208,12,30)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50 samples, 0.06%)</title><rect x="99.1890%" y="3013" width="0.0638%" height="15" fill="rgb(207,176,36)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (50 samples, 0.06%)</title><rect x="99.1890%" y="2997" width="0.0638%" height="15" fill="rgb(211,188,29)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (50 samples, 0.06%)</title><rect x="99.1890%" y="2981" width="0.0638%" height="15" fill="rgb(220,184,37)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (50 samples, 0.06%)</title><rect x="99.1890%" y="2965" width="0.0638%" height="15" fill="rgb(239,87,37)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (50 samples, 0.06%)</title><rect x="99.1890%" y="2949" width="0.0638%" height="15" fill="rgb(232,113,44)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (50 samples, 0.06%)</title><rect x="99.1890%" y="2933" width="0.0638%" height="15" fill="rgb(246,25,39)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (50 samples, 0.06%)</title><rect x="99.1890%" y="2917" width="0.0638%" height="15" fill="rgb(247,30,13)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (50 samples, 0.06%)</title><rect x="99.1890%" y="2901" width="0.0638%" height="15" fill="rgb(230,176,35)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (50 samples, 0.06%)</title><rect x="99.1890%" y="2885" width="0.0638%" height="15" fill="rgb(222,23,18)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (50 samples, 0.06%)</title><rect x="99.1890%" y="2869" width="0.0638%" height="15" fill="rgb(234,86,8)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (50 samples, 0.06%)</title><rect x="99.1890%" y="2853" width="0.0638%" height="15" fill="rgb(206,218,47)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (50 samples, 0.06%)</title><rect x="99.1890%" y="2837" width="0.0638%" height="15" fill="rgb(229,35,31)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (50 samples, 0.06%)</title><rect x="99.1890%" y="2821" width="0.0638%" height="15" fill="rgb(242,81,7)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2831.50"></text></g><g><title>std::panicking::try (50 samples, 0.06%)</title><rect x="99.1890%" y="2805" width="0.0638%" height="15" fill="rgb(231,11,35)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (50 samples, 0.06%)</title><rect x="99.1890%" y="2789" width="0.0638%" height="15" fill="rgb(219,218,17)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50 samples, 0.06%)</title><rect x="99.1890%" y="2773" width="0.0638%" height="15" fill="rgb(221,83,32)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (50 samples, 0.06%)</title><rect x="99.1890%" y="2757" width="0.0638%" height="15" fill="rgb(233,49,54)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (50 samples, 0.06%)</title><rect x="99.1890%" y="2741" width="0.0638%" height="15" fill="rgb(206,18,51)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (50 samples, 0.06%)</title><rect x="99.1890%" y="2725" width="0.0638%" height="15" fill="rgb(249,193,15)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (50 samples, 0.06%)</title><rect x="99.1890%" y="2709" width="0.0638%" height="15" fill="rgb(245,186,19)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (50 samples, 0.06%)</title><rect x="99.1890%" y="2693" width="0.0638%" height="15" fill="rgb(230,4,24)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (50 samples, 0.06%)</title><rect x="99.1890%" y="2677" width="0.0638%" height="15" fill="rgb(234,75,27)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (50 samples, 0.06%)</title><rect x="99.1890%" y="2661" width="0.0638%" height="15" fill="rgb(244,187,35)" fg:x="77781" fg:w="50"/><text x="99.4390%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (31 samples, 0.04%)</title><rect x="99.2132%" y="2645" width="0.0395%" height="15" fill="rgb(241,97,43)" fg:x="77800" fg:w="31"/><text x="99.4632%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (31 samples, 0.04%)</title><rect x="99.2132%" y="2629" width="0.0395%" height="15" fill="rgb(236,94,2)" fg:x="77800" fg:w="31"/><text x="99.4632%" y="2639.50"></text></g><g><title>std::panicking::try (31 samples, 0.04%)</title><rect x="99.2132%" y="2613" width="0.0395%" height="15" fill="rgb(231,175,7)" fg:x="77800" fg:w="31"/><text x="99.4632%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (31 samples, 0.04%)</title><rect x="99.2132%" y="2597" width="0.0395%" height="15" fill="rgb(236,89,47)" fg:x="77800" fg:w="31"/><text x="99.4632%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (31 samples, 0.04%)</title><rect x="99.2132%" y="2581" width="0.0395%" height="15" fill="rgb(213,191,37)" fg:x="77800" fg:w="31"/><text x="99.4632%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (31 samples, 0.04%)</title><rect x="99.2132%" y="2565" width="0.0395%" height="15" fill="rgb(252,0,34)" fg:x="77800" fg:w="31"/><text x="99.4632%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (31 samples, 0.04%)</title><rect x="99.2132%" y="2549" width="0.0395%" height="15" fill="rgb(208,145,44)" fg:x="77800" fg:w="31"/><text x="99.4632%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (31 samples, 0.04%)</title><rect x="99.2132%" y="2533" width="0.0395%" height="15" fill="rgb(227,95,50)" fg:x="77800" fg:w="31"/><text x="99.4632%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (31 samples, 0.04%)</title><rect x="99.2132%" y="2517" width="0.0395%" height="15" fill="rgb(222,136,24)" fg:x="77800" fg:w="31"/><text x="99.4632%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (31 samples, 0.04%)</title><rect x="99.2132%" y="2501" width="0.0395%" height="15" fill="rgb(218,105,10)" fg:x="77800" fg:w="31"/><text x="99.4632%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (31 samples, 0.04%)</title><rect x="99.2132%" y="2485" width="0.0395%" height="15" fill="rgb(216,65,28)" fg:x="77800" fg:w="31"/><text x="99.4632%" y="2495.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (22 samples, 0.03%)</title><rect x="99.2527%" y="2885" width="0.0281%" height="15" fill="rgb(229,6,28)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (22 samples, 0.03%)</title><rect x="99.2527%" y="2869" width="0.0281%" height="15" fill="rgb(222,160,42)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (22 samples, 0.03%)</title><rect x="99.2527%" y="2853" width="0.0281%" height="15" fill="rgb(235,83,49)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (22 samples, 0.03%)</title><rect x="99.2527%" y="2837" width="0.0281%" height="15" fill="rgb(236,86,36)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.03%)</title><rect x="99.2527%" y="2821" width="0.0281%" height="15" fill="rgb(236,19,41)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2831.50"></text></g><g><title>std::panicking::try (22 samples, 0.03%)</title><rect x="99.2527%" y="2805" width="0.0281%" height="15" fill="rgb(217,71,31)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.03%)</title><rect x="99.2527%" y="2789" width="0.0281%" height="15" fill="rgb(236,209,25)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.03%)</title><rect x="99.2527%" y="2773" width="0.0281%" height="15" fill="rgb(247,104,21)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (22 samples, 0.03%)</title><rect x="99.2527%" y="2757" width="0.0281%" height="15" fill="rgb(243,80,38)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (22 samples, 0.03%)</title><rect x="99.2527%" y="2741" width="0.0281%" height="15" fill="rgb(232,109,38)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (22 samples, 0.03%)</title><rect x="99.2527%" y="2725" width="0.0281%" height="15" fill="rgb(212,177,53)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="99.2527%" y="2709" width="0.0281%" height="15" fill="rgb(227,30,34)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.03%)</title><rect x="99.2527%" y="2693" width="0.0281%" height="15" fill="rgb(205,175,25)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.03%)</title><rect x="99.2527%" y="2677" width="0.0281%" height="15" fill="rgb(249,39,54)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.03%)</title><rect x="99.2527%" y="2661" width="0.0281%" height="15" fill="rgb(215,54,37)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (22 samples, 0.03%)</title><rect x="99.2527%" y="2645" width="0.0281%" height="15" fill="rgb(205,60,46)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.03%)</title><rect x="99.2527%" y="2629" width="0.0281%" height="15" fill="rgb(238,89,29)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2639.50"></text></g><g><title>std::panicking::try (22 samples, 0.03%)</title><rect x="99.2527%" y="2613" width="0.0281%" height="15" fill="rgb(212,48,10)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.03%)</title><rect x="99.2527%" y="2597" width="0.0281%" height="15" fill="rgb(237,186,28)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.03%)</title><rect x="99.2527%" y="2581" width="0.0281%" height="15" fill="rgb(237,204,4)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (22 samples, 0.03%)</title><rect x="99.2527%" y="2565" width="0.0281%" height="15" fill="rgb(237,15,47)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (22 samples, 0.03%)</title><rect x="99.2527%" y="2549" width="0.0281%" height="15" fill="rgb(244,110,25)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="99.2527%" y="2533" width="0.0281%" height="15" fill="rgb(241,12,16)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.03%)</title><rect x="99.2527%" y="2517" width="0.0281%" height="15" fill="rgb(235,25,9)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.03%)</title><rect x="99.2527%" y="2501" width="0.0281%" height="15" fill="rgb(245,159,19)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.03%)</title><rect x="99.2527%" y="2485" width="0.0281%" height="15" fill="rgb(236,63,32)" fg:x="77831" fg:w="22"/><text x="99.5027%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.02%)</title><rect x="99.2578%" y="2469" width="0.0230%" height="15" fill="rgb(235,32,52)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="99.2578%" y="2453" width="0.0230%" height="15" fill="rgb(209,176,21)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2463.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="99.2578%" y="2437" width="0.0230%" height="15" fill="rgb(205,90,42)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="99.2578%" y="2421" width="0.0230%" height="15" fill="rgb(213,132,16)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.2578%" y="2405" width="0.0230%" height="15" fill="rgb(232,11,22)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (18 samples, 0.02%)</title><rect x="99.2578%" y="2389" width="0.0230%" height="15" fill="rgb(248,167,41)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.02%)</title><rect x="99.2578%" y="2373" width="0.0230%" height="15" fill="rgb(209,127,6)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="99.2578%" y="2357" width="0.0230%" height="15" fill="rgb(246,210,34)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (18 samples, 0.02%)</title><rect x="99.2578%" y="2341" width="0.0230%" height="15" fill="rgb(238,165,13)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.02%)</title><rect x="99.2578%" y="2325" width="0.0230%" height="15" fill="rgb(233,98,15)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (18 samples, 0.02%)</title><rect x="99.2578%" y="2309" width="0.0230%" height="15" fill="rgb(215,215,51)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2319.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.02%)</title><rect x="99.2578%" y="2293" width="0.0230%" height="15" fill="rgb(217,161,25)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2303.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="99.2578%" y="2277" width="0.0230%" height="15" fill="rgb(217,167,48)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2287.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="99.2578%" y="2261" width="0.0230%" height="15" fill="rgb(205,163,34)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2271.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="99.2578%" y="2245" width="0.0230%" height="15" fill="rgb(241,197,31)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2255.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.2578%" y="2229" width="0.0230%" height="15" fill="rgb(225,123,11)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (18 samples, 0.02%)</title><rect x="99.2578%" y="2213" width="0.0230%" height="15" fill="rgb(217,4,20)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.02%)</title><rect x="99.2578%" y="2197" width="0.0230%" height="15" fill="rgb(215,55,9)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="99.2578%" y="2181" width="0.0230%" height="15" fill="rgb(218,165,5)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (18 samples, 0.02%)</title><rect x="99.2578%" y="2165" width="0.0230%" height="15" fill="rgb(222,175,15)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.02%)</title><rect x="99.2578%" y="2149" width="0.0230%" height="15" fill="rgb(223,85,34)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (18 samples, 0.02%)</title><rect x="99.2578%" y="2133" width="0.0230%" height="15" fill="rgb(234,228,29)" fg:x="77835" fg:w="18"/><text x="99.5078%" y="2143.50"></text></g><g><title>par_exec_2 (23 samples, 0.03%)</title><rect x="99.2527%" y="3189" width="0.0293%" height="15" fill="rgb(239,7,28)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="3199.50"></text></g><g><title>__GI___clone3 (23 samples, 0.03%)</title><rect x="99.2527%" y="3173" width="0.0293%" height="15" fill="rgb(252,222,53)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="3183.50"></text></g><g><title>start_thread (23 samples, 0.03%)</title><rect x="99.2527%" y="3157" width="0.0293%" height="15" fill="rgb(232,146,44)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (23 samples, 0.03%)</title><rect x="99.2527%" y="3141" width="0.0293%" height="15" fill="rgb(243,223,53)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23 samples, 0.03%)</title><rect x="99.2527%" y="3125" width="0.0293%" height="15" fill="rgb(219,128,25)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23 samples, 0.03%)</title><rect x="99.2527%" y="3109" width="0.0293%" height="15" fill="rgb(223,56,32)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (23 samples, 0.03%)</title><rect x="99.2527%" y="3093" width="0.0293%" height="15" fill="rgb(237,41,3)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (23 samples, 0.03%)</title><rect x="99.2527%" y="3077" width="0.0293%" height="15" fill="rgb(235,138,9)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.03%)</title><rect x="99.2527%" y="3061" width="0.0293%" height="15" fill="rgb(214,131,10)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="3071.50"></text></g><g><title>std::panicking::try (23 samples, 0.03%)</title><rect x="99.2527%" y="3045" width="0.0293%" height="15" fill="rgb(229,89,7)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.03%)</title><rect x="99.2527%" y="3029" width="0.0293%" height="15" fill="rgb(240,24,42)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.03%)</title><rect x="99.2527%" y="3013" width="0.0293%" height="15" fill="rgb(243,188,54)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (23 samples, 0.03%)</title><rect x="99.2527%" y="2997" width="0.0293%" height="15" fill="rgb(246,92,22)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (23 samples, 0.03%)</title><rect x="99.2527%" y="2981" width="0.0293%" height="15" fill="rgb(211,176,51)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (23 samples, 0.03%)</title><rect x="99.2527%" y="2965" width="0.0293%" height="15" fill="rgb(246,207,34)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (23 samples, 0.03%)</title><rect x="99.2527%" y="2949" width="0.0293%" height="15" fill="rgb(239,95,2)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (23 samples, 0.03%)</title><rect x="99.2527%" y="2933" width="0.0293%" height="15" fill="rgb(211,124,25)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (23 samples, 0.03%)</title><rect x="99.2527%" y="2917" width="0.0293%" height="15" fill="rgb(231,221,19)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (23 samples, 0.03%)</title><rect x="99.2527%" y="2901" width="0.0293%" height="15" fill="rgb(239,183,19)" fg:x="77831" fg:w="23"/><text x="99.5027%" y="2911.50"></text></g><g><title>par_exec_3 (23 samples, 0.03%)</title><rect x="99.2820%" y="3189" width="0.0293%" height="15" fill="rgb(221,130,29)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="3199.50"></text></g><g><title>__GI___clone3 (23 samples, 0.03%)</title><rect x="99.2820%" y="3173" width="0.0293%" height="15" fill="rgb(206,130,36)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="3183.50"></text></g><g><title>start_thread (23 samples, 0.03%)</title><rect x="99.2820%" y="3157" width="0.0293%" height="15" fill="rgb(215,70,19)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (23 samples, 0.03%)</title><rect x="99.2820%" y="3141" width="0.0293%" height="15" fill="rgb(244,16,43)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23 samples, 0.03%)</title><rect x="99.2820%" y="3125" width="0.0293%" height="15" fill="rgb(222,115,32)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23 samples, 0.03%)</title><rect x="99.2820%" y="3109" width="0.0293%" height="15" fill="rgb(247,48,25)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (23 samples, 0.03%)</title><rect x="99.2820%" y="3093" width="0.0293%" height="15" fill="rgb(226,180,51)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (23 samples, 0.03%)</title><rect x="99.2820%" y="3077" width="0.0293%" height="15" fill="rgb(217,142,42)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.03%)</title><rect x="99.2820%" y="3061" width="0.0293%" height="15" fill="rgb(220,178,3)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="3071.50"></text></g><g><title>std::panicking::try (23 samples, 0.03%)</title><rect x="99.2820%" y="3045" width="0.0293%" height="15" fill="rgb(217,221,4)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.03%)</title><rect x="99.2820%" y="3029" width="0.0293%" height="15" fill="rgb(237,63,43)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.03%)</title><rect x="99.2820%" y="3013" width="0.0293%" height="15" fill="rgb(220,57,8)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (23 samples, 0.03%)</title><rect x="99.2820%" y="2997" width="0.0293%" height="15" fill="rgb(254,186,27)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (23 samples, 0.03%)</title><rect x="99.2820%" y="2981" width="0.0293%" height="15" fill="rgb(251,57,28)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (23 samples, 0.03%)</title><rect x="99.2820%" y="2965" width="0.0293%" height="15" fill="rgb(215,228,0)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (23 samples, 0.03%)</title><rect x="99.2820%" y="2949" width="0.0293%" height="15" fill="rgb(237,218,39)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (23 samples, 0.03%)</title><rect x="99.2820%" y="2933" width="0.0293%" height="15" fill="rgb(207,2,54)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (23 samples, 0.03%)</title><rect x="99.2820%" y="2917" width="0.0293%" height="15" fill="rgb(232,76,50)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (23 samples, 0.03%)</title><rect x="99.2820%" y="2901" width="0.0293%" height="15" fill="rgb(211,85,31)" fg:x="77854" fg:w="23"/><text x="99.5320%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (22 samples, 0.03%)</title><rect x="99.2833%" y="2885" width="0.0281%" height="15" fill="rgb(223,210,27)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (22 samples, 0.03%)</title><rect x="99.2833%" y="2869" width="0.0281%" height="15" fill="rgb(254,36,8)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (22 samples, 0.03%)</title><rect x="99.2833%" y="2853" width="0.0281%" height="15" fill="rgb(213,4,25)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (22 samples, 0.03%)</title><rect x="99.2833%" y="2837" width="0.0281%" height="15" fill="rgb(224,2,39)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.03%)</title><rect x="99.2833%" y="2821" width="0.0281%" height="15" fill="rgb(208,8,39)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2831.50"></text></g><g><title>std::panicking::try (22 samples, 0.03%)</title><rect x="99.2833%" y="2805" width="0.0281%" height="15" fill="rgb(216,226,3)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.03%)</title><rect x="99.2833%" y="2789" width="0.0281%" height="15" fill="rgb(249,139,31)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.03%)</title><rect x="99.2833%" y="2773" width="0.0281%" height="15" fill="rgb(242,170,35)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (22 samples, 0.03%)</title><rect x="99.2833%" y="2757" width="0.0281%" height="15" fill="rgb(238,14,9)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (22 samples, 0.03%)</title><rect x="99.2833%" y="2741" width="0.0281%" height="15" fill="rgb(251,81,46)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (22 samples, 0.03%)</title><rect x="99.2833%" y="2725" width="0.0281%" height="15" fill="rgb(230,23,4)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="99.2833%" y="2709" width="0.0281%" height="15" fill="rgb(211,85,25)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.03%)</title><rect x="99.2833%" y="2693" width="0.0281%" height="15" fill="rgb(252,23,31)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.03%)</title><rect x="99.2833%" y="2677" width="0.0281%" height="15" fill="rgb(234,163,38)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.03%)</title><rect x="99.2833%" y="2661" width="0.0281%" height="15" fill="rgb(210,190,50)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (22 samples, 0.03%)</title><rect x="99.2833%" y="2645" width="0.0281%" height="15" fill="rgb(228,158,3)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.03%)</title><rect x="99.2833%" y="2629" width="0.0281%" height="15" fill="rgb(216,130,0)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2639.50"></text></g><g><title>std::panicking::try (22 samples, 0.03%)</title><rect x="99.2833%" y="2613" width="0.0281%" height="15" fill="rgb(224,184,10)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.03%)</title><rect x="99.2833%" y="2597" width="0.0281%" height="15" fill="rgb(214,202,18)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.03%)</title><rect x="99.2833%" y="2581" width="0.0281%" height="15" fill="rgb(213,229,54)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (22 samples, 0.03%)</title><rect x="99.2833%" y="2565" width="0.0281%" height="15" fill="rgb(246,120,0)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (22 samples, 0.03%)</title><rect x="99.2833%" y="2549" width="0.0281%" height="15" fill="rgb(237,6,15)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.03%)</title><rect x="99.2833%" y="2533" width="0.0281%" height="15" fill="rgb(252,156,15)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.03%)</title><rect x="99.2833%" y="2517" width="0.0281%" height="15" fill="rgb(249,78,18)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.03%)</title><rect x="99.2833%" y="2501" width="0.0281%" height="15" fill="rgb(230,223,44)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.03%)</title><rect x="99.2833%" y="2485" width="0.0281%" height="15" fill="rgb(230,222,32)" fg:x="77855" fg:w="22"/><text x="99.5333%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="99.2897%" y="2469" width="0.0217%" height="15" fill="rgb(247,54,6)" fg:x="77860" fg:w="17"/><text x="99.5397%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="99.2897%" y="2453" width="0.0217%" height="15" fill="rgb(247,115,45)" fg:x="77860" fg:w="17"/><text x="99.5397%" y="2463.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="99.2897%" y="2437" width="0.0217%" height="15" fill="rgb(213,203,37)" fg:x="77860" fg:w="17"/><text x="99.5397%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="99.2897%" y="2421" width="0.0217%" height="15" fill="rgb(248,188,18)" fg:x="77860" fg:w="17"/><text x="99.5397%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.2897%" y="2405" width="0.0217%" height="15" fill="rgb(206,80,8)" fg:x="77860" fg:w="17"/><text x="99.5397%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.02%)</title><rect x="99.2897%" y="2389" width="0.0217%" height="15" fill="rgb(245,217,31)" fg:x="77860" fg:w="17"/><text x="99.5397%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="99.2897%" y="2373" width="0.0217%" height="15" fill="rgb(220,193,15)" fg:x="77860" fg:w="17"/><text x="99.5397%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="99.2897%" y="2357" width="0.0217%" height="15" fill="rgb(226,7,19)" fg:x="77860" fg:w="17"/><text x="99.5397%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="99.2897%" y="2341" width="0.0217%" height="15" fill="rgb(222,145,31)" fg:x="77860" fg:w="17"/><text x="99.5397%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="99.2897%" y="2325" width="0.0217%" height="15" fill="rgb(241,193,36)" fg:x="77860" fg:w="17"/><text x="99.5397%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="99.2897%" y="2309" width="0.0217%" height="15" fill="rgb(225,123,33)" fg:x="77860" fg:w="17"/><text x="99.5397%" y="2319.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.01%)</title><rect x="99.2986%" y="2293" width="0.0128%" height="15" fill="rgb(246,136,38)" fg:x="77867" fg:w="10"/><text x="99.5486%" y="2303.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="99.2986%" y="2277" width="0.0128%" height="15" fill="rgb(243,56,24)" fg:x="77867" fg:w="10"/><text x="99.5486%" y="2287.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="99.2986%" y="2261" width="0.0128%" height="15" fill="rgb(215,147,2)" fg:x="77867" fg:w="10"/><text x="99.5486%" y="2271.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="99.2986%" y="2245" width="0.0128%" height="15" fill="rgb(209,155,27)" fg:x="77867" fg:w="10"/><text x="99.5486%" y="2255.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="99.2986%" y="2229" width="0.0128%" height="15" fill="rgb(222,177,11)" fg:x="77867" fg:w="10"/><text x="99.5486%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.01%)</title><rect x="99.2986%" y="2213" width="0.0128%" height="15" fill="rgb(212,227,15)" fg:x="77867" fg:w="10"/><text x="99.5486%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.01%)</title><rect x="99.2986%" y="2197" width="0.0128%" height="15" fill="rgb(214,138,20)" fg:x="77867" fg:w="10"/><text x="99.5486%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="99.2986%" y="2181" width="0.0128%" height="15" fill="rgb(221,170,31)" fg:x="77867" fg:w="10"/><text x="99.5486%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.01%)</title><rect x="99.2986%" y="2165" width="0.0128%" height="15" fill="rgb(253,207,5)" fg:x="77867" fg:w="10"/><text x="99.5486%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.01%)</title><rect x="99.2986%" y="2149" width="0.0128%" height="15" fill="rgb(212,64,37)" fg:x="77867" fg:w="10"/><text x="99.5486%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.01%)</title><rect x="99.2986%" y="2133" width="0.0128%" height="15" fill="rgb(208,113,51)" fg:x="77867" fg:w="10"/><text x="99.5486%" y="2143.50"></text></g><g><title>par_exec_4 (18 samples, 0.02%)</title><rect x="99.3114%" y="3189" width="0.0230%" height="15" fill="rgb(237,15,5)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="3199.50"></text></g><g><title>__GI___clone3 (18 samples, 0.02%)</title><rect x="99.3114%" y="3173" width="0.0230%" height="15" fill="rgb(238,33,18)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="3183.50"></text></g><g><title>start_thread (18 samples, 0.02%)</title><rect x="99.3114%" y="3157" width="0.0230%" height="15" fill="rgb(253,206,50)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (18 samples, 0.02%)</title><rect x="99.3114%" y="3141" width="0.0230%" height="15" fill="rgb(242,158,43)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.3114%" y="3125" width="0.0230%" height="15" fill="rgb(213,125,27)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.3114%" y="3109" width="0.0230%" height="15" fill="rgb(233,161,31)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (18 samples, 0.02%)</title><rect x="99.3114%" y="3093" width="0.0230%" height="15" fill="rgb(218,135,6)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (18 samples, 0.02%)</title><rect x="99.3114%" y="3077" width="0.0230%" height="15" fill="rgb(222,73,53)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="99.3114%" y="3061" width="0.0230%" height="15" fill="rgb(229,66,53)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="3071.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="99.3114%" y="3045" width="0.0230%" height="15" fill="rgb(208,128,19)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="99.3114%" y="3029" width="0.0230%" height="15" fill="rgb(235,70,27)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.3114%" y="3013" width="0.0230%" height="15" fill="rgb(241,130,30)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="99.3114%" y="2997" width="0.0230%" height="15" fill="rgb(222,57,48)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 0.02%)</title><rect x="99.3114%" y="2981" width="0.0230%" height="15" fill="rgb(225,204,29)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (18 samples, 0.02%)</title><rect x="99.3114%" y="2965" width="0.0230%" height="15" fill="rgb(240,196,35)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (18 samples, 0.02%)</title><rect x="99.3114%" y="2949" width="0.0230%" height="15" fill="rgb(215,150,16)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (18 samples, 0.02%)</title><rect x="99.3114%" y="2933" width="0.0230%" height="15" fill="rgb(209,170,13)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (18 samples, 0.02%)</title><rect x="99.3114%" y="2917" width="0.0230%" height="15" fill="rgb(235,75,31)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (18 samples, 0.02%)</title><rect x="99.3114%" y="2901" width="0.0230%" height="15" fill="rgb(252,1,47)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (18 samples, 0.02%)</title><rect x="99.3114%" y="2885" width="0.0230%" height="15" fill="rgb(241,2,36)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (18 samples, 0.02%)</title><rect x="99.3114%" y="2869" width="0.0230%" height="15" fill="rgb(236,191,4)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (18 samples, 0.02%)</title><rect x="99.3114%" y="2853" width="0.0230%" height="15" fill="rgb(212,65,35)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.02%)</title><rect x="99.3114%" y="2837" width="0.0230%" height="15" fill="rgb(209,49,33)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="99.3114%" y="2821" width="0.0230%" height="15" fill="rgb(208,36,46)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2831.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="99.3114%" y="2805" width="0.0230%" height="15" fill="rgb(210,125,2)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="99.3114%" y="2789" width="0.0230%" height="15" fill="rgb(225,62,6)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.3114%" y="2773" width="0.0230%" height="15" fill="rgb(210,54,27)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (18 samples, 0.02%)</title><rect x="99.3114%" y="2757" width="0.0230%" height="15" fill="rgb(249,189,52)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (18 samples, 0.02%)</title><rect x="99.3114%" y="2741" width="0.0230%" height="15" fill="rgb(225,134,40)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.02%)</title><rect x="99.3114%" y="2725" width="0.0230%" height="15" fill="rgb(206,13,37)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.02%)</title><rect x="99.3114%" y="2709" width="0.0230%" height="15" fill="rgb(232,114,28)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (18 samples, 0.02%)</title><rect x="99.3114%" y="2693" width="0.0230%" height="15" fill="rgb(253,215,8)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.02%)</title><rect x="99.3114%" y="2677" width="0.0230%" height="15" fill="rgb(254,64,19)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (18 samples, 0.02%)</title><rect x="99.3114%" y="2661" width="0.0230%" height="15" fill="rgb(242,18,46)" fg:x="77877" fg:w="18"/><text x="99.5614%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (15 samples, 0.02%)</title><rect x="99.3152%" y="2645" width="0.0191%" height="15" fill="rgb(239,192,30)" fg:x="77880" fg:w="15"/><text x="99.5652%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.02%)</title><rect x="99.3152%" y="2629" width="0.0191%" height="15" fill="rgb(232,73,14)" fg:x="77880" fg:w="15"/><text x="99.5652%" y="2639.50"></text></g><g><title>std::panicking::try (15 samples, 0.02%)</title><rect x="99.3152%" y="2613" width="0.0191%" height="15" fill="rgb(225,51,9)" fg:x="77880" fg:w="15"/><text x="99.5652%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.02%)</title><rect x="99.3152%" y="2597" width="0.0191%" height="15" fill="rgb(242,217,54)" fg:x="77880" fg:w="15"/><text x="99.5652%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 0.02%)</title><rect x="99.3152%" y="2581" width="0.0191%" height="15" fill="rgb(216,93,3)" fg:x="77880" fg:w="15"/><text x="99.5652%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (15 samples, 0.02%)</title><rect x="99.3152%" y="2565" width="0.0191%" height="15" fill="rgb(230,119,33)" fg:x="77880" fg:w="15"/><text x="99.5652%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (15 samples, 0.02%)</title><rect x="99.3152%" y="2549" width="0.0191%" height="15" fill="rgb(238,170,27)" fg:x="77880" fg:w="15"/><text x="99.5652%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.02%)</title><rect x="99.3152%" y="2533" width="0.0191%" height="15" fill="rgb(229,8,2)" fg:x="77880" fg:w="15"/><text x="99.5652%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (15 samples, 0.02%)</title><rect x="99.3152%" y="2517" width="0.0191%" height="15" fill="rgb(205,214,42)" fg:x="77880" fg:w="15"/><text x="99.5652%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (15 samples, 0.02%)</title><rect x="99.3152%" y="2501" width="0.0191%" height="15" fill="rgb(245,113,1)" fg:x="77880" fg:w="15"/><text x="99.5652%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.02%)</title><rect x="99.3152%" y="2485" width="0.0191%" height="15" fill="rgb(252,50,2)" fg:x="77880" fg:w="15"/><text x="99.5652%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.02%)</title><rect x="99.3165%" y="2469" width="0.0179%" height="15" fill="rgb(225,122,24)" fg:x="77881" fg:w="14"/><text x="99.5665%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.02%)</title><rect x="99.3165%" y="2453" width="0.0179%" height="15" fill="rgb(234,129,31)" fg:x="77881" fg:w="14"/><text x="99.5665%" y="2463.50"></text></g><g><title>std::panicking::try (14 samples, 0.02%)</title><rect x="99.3165%" y="2437" width="0.0179%" height="15" fill="rgb(219,177,4)" fg:x="77881" fg:w="14"/><text x="99.5665%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.02%)</title><rect x="99.3165%" y="2421" width="0.0179%" height="15" fill="rgb(225,142,27)" fg:x="77881" fg:w="14"/><text x="99.5665%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.02%)</title><rect x="99.3165%" y="2405" width="0.0179%" height="15" fill="rgb(205,107,51)" fg:x="77881" fg:w="14"/><text x="99.5665%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.02%)</title><rect x="99.3165%" y="2389" width="0.0179%" height="15" fill="rgb(236,223,15)" fg:x="77881" fg:w="14"/><text x="99.5665%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.02%)</title><rect x="99.3165%" y="2373" width="0.0179%" height="15" fill="rgb(235,133,11)" fg:x="77881" fg:w="14"/><text x="99.5665%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="99.3165%" y="2357" width="0.0179%" height="15" fill="rgb(247,172,13)" fg:x="77881" fg:w="14"/><text x="99.5665%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.02%)</title><rect x="99.3165%" y="2341" width="0.0179%" height="15" fill="rgb(233,191,41)" fg:x="77881" fg:w="14"/><text x="99.5665%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.02%)</title><rect x="99.3165%" y="2325" width="0.0179%" height="15" fill="rgb(250,65,16)" fg:x="77881" fg:w="14"/><text x="99.5665%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.02%)</title><rect x="99.3165%" y="2309" width="0.0179%" height="15" fill="rgb(206,10,27)" fg:x="77881" fg:w="14"/><text x="99.5665%" y="2319.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (8 samples, 0.01%)</title><rect x="99.3356%" y="2645" width="0.0102%" height="15" fill="rgb(212,96,22)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2655.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (8 samples, 0.01%)</title><rect x="99.3356%" y="2629" width="0.0102%" height="15" fill="rgb(206,50,0)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2639.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (8 samples, 0.01%)</title><rect x="99.3356%" y="2613" width="0.0102%" height="15" fill="rgb(249,105,52)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2623.50"></text></g><g><title>rayon_core::job::JobRef::execute (8 samples, 0.01%)</title><rect x="99.3356%" y="2597" width="0.0102%" height="15" fill="rgb(216,93,51)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2607.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (8 samples, 0.01%)</title><rect x="99.3356%" y="2581" width="0.0102%" height="15" fill="rgb(217,172,13)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2591.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="99.3356%" y="2565" width="0.0102%" height="15" fill="rgb(235,199,38)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2575.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="99.3356%" y="2549" width="0.0102%" height="15" fill="rgb(221,97,33)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2559.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="99.3356%" y="2533" width="0.0102%" height="15" fill="rgb(205,156,50)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2543.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="99.3356%" y="2517" width="0.0102%" height="15" fill="rgb(215,142,19)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2527.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="99.3356%" y="2501" width="0.0102%" height="15" fill="rgb(232,170,7)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2511.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (8 samples, 0.01%)</title><rect x="99.3356%" y="2485" width="0.0102%" height="15" fill="rgb(223,50,17)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.01%)</title><rect x="99.3356%" y="2469" width="0.0102%" height="15" fill="rgb(230,103,46)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="99.3356%" y="2453" width="0.0102%" height="15" fill="rgb(254,30,34)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="99.3356%" y="2437" width="0.0102%" height="15" fill="rgb(235,198,1)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2447.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="99.3356%" y="2421" width="0.0102%" height="15" fill="rgb(217,105,47)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2431.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="99.3356%" y="2405" width="0.0102%" height="15" fill="rgb(231,18,12)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="99.3356%" y="2389" width="0.0102%" height="15" fill="rgb(218,196,1)" fg:x="77896" fg:w="8"/><text x="99.5856%" y="2399.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.01%)</title><rect x="99.3560%" y="1941" width="0.0102%" height="15" fill="rgb(210,32,3)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.01%)</title><rect x="99.3560%" y="1925" width="0.0102%" height="15" fill="rgb(227,178,30)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="99.3560%" y="1909" width="0.0102%" height="15" fill="rgb(231,140,27)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="99.3560%" y="1893" width="0.0102%" height="15" fill="rgb(206,66,35)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1903.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="99.3560%" y="1877" width="0.0102%" height="15" fill="rgb(212,34,2)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="99.3560%" y="1861" width="0.0102%" height="15" fill="rgb(207,201,33)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="99.3560%" y="1845" width="0.0102%" height="15" fill="rgb(221,135,32)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1855.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.01%)</title><rect x="99.3560%" y="1829" width="0.0102%" height="15" fill="rgb(206,77,31)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.01%)</title><rect x="99.3560%" y="1813" width="0.0102%" height="15" fill="rgb(252,198,50)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="99.3560%" y="1797" width="0.0102%" height="15" fill="rgb(206,79,27)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="99.3560%" y="1781" width="0.0102%" height="15" fill="rgb(228,108,9)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (8 samples, 0.01%)</title><rect x="99.3560%" y="1765" width="0.0102%" height="15" fill="rgb(213,9,39)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1775.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8 samples, 0.01%)</title><rect x="99.3560%" y="1749" width="0.0102%" height="15" fill="rgb(252,51,13)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (8 samples, 0.01%)</title><rect x="99.3560%" y="1733" width="0.0102%" height="15" fill="rgb(218,202,39)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="99.3560%" y="1717" width="0.0102%" height="15" fill="rgb(214,122,21)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.01%)</title><rect x="99.3560%" y="1701" width="0.0102%" height="15" fill="rgb(217,205,48)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1711.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.01%)</title><rect x="99.3560%" y="1685" width="0.0102%" height="15" fill="rgb(230,216,13)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1695.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8 samples, 0.01%)</title><rect x="99.3560%" y="1669" width="0.0102%" height="15" fill="rgb(249,118,4)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1679.50"></text></g><g><title>core::ops::function::Fn::call (8 samples, 0.01%)</title><rect x="99.3560%" y="1653" width="0.0102%" height="15" fill="rgb(212,207,40)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1663.50"></text></g><g><title>aptos_vm::adapter_common::preprocess_transaction (8 samples, 0.01%)</title><rect x="99.3560%" y="1637" width="0.0102%" height="15" fill="rgb(217,156,26)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1647.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::check_signature (8 samples, 0.01%)</title><rect x="99.3560%" y="1621" width="0.0102%" height="15" fill="rgb(226,86,34)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1631.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::check_signature (8 samples, 0.01%)</title><rect x="99.3560%" y="1605" width="0.0102%" height="15" fill="rgb(217,111,30)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1615.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::verify (8 samples, 0.01%)</title><rect x="99.3560%" y="1589" width="0.0102%" height="15" fill="rgb(228,64,18)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1599.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_sigs::Ed25519Signature as aptos_crypto::traits::Signature&gt;::verify (8 samples, 0.01%)</title><rect x="99.3560%" y="1573" width="0.0102%" height="15" fill="rgb(254,217,48)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1583.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_sigs::Ed25519Signature as aptos_crypto::traits::Signature&gt;::verify_arbitrary_msg (8 samples, 0.01%)</title><rect x="99.3560%" y="1557" width="0.0102%" height="15" fill="rgb(226,156,48)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1567.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_strict (8 samples, 0.01%)</title><rect x="99.3560%" y="1541" width="0.0102%" height="15" fill="rgb(236,168,20)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1551.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (8 samples, 0.01%)</title><rect x="99.3560%" y="1525" width="0.0102%" height="15" fill="rgb(239,210,33)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1535.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (8 samples, 0.01%)</title><rect x="99.3560%" y="1509" width="0.0102%" height="15" fill="rgb(242,85,17)" fg:x="77912" fg:w="8"/><text x="99.6060%" y="1519.50"></text></g><g><title>par_exec_5 (29 samples, 0.04%)</title><rect x="99.3343%" y="3189" width="0.0370%" height="15" fill="rgb(221,196,15)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="3199.50"></text></g><g><title>__GI___clone3 (29 samples, 0.04%)</title><rect x="99.3343%" y="3173" width="0.0370%" height="15" fill="rgb(249,76,21)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="3183.50"></text></g><g><title>start_thread (29 samples, 0.04%)</title><rect x="99.3343%" y="3157" width="0.0370%" height="15" fill="rgb(243,67,29)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (29 samples, 0.04%)</title><rect x="99.3343%" y="3141" width="0.0370%" height="15" fill="rgb(240,159,2)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29 samples, 0.04%)</title><rect x="99.3343%" y="3125" width="0.0370%" height="15" fill="rgb(244,64,3)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29 samples, 0.04%)</title><rect x="99.3343%" y="3109" width="0.0370%" height="15" fill="rgb(220,86,40)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (29 samples, 0.04%)</title><rect x="99.3343%" y="3093" width="0.0370%" height="15" fill="rgb(222,194,51)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (29 samples, 0.04%)</title><rect x="99.3343%" y="3077" width="0.0370%" height="15" fill="rgb(207,154,19)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (29 samples, 0.04%)</title><rect x="99.3343%" y="3061" width="0.0370%" height="15" fill="rgb(206,178,36)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="3071.50"></text></g><g><title>std::panicking::try (29 samples, 0.04%)</title><rect x="99.3343%" y="3045" width="0.0370%" height="15" fill="rgb(218,8,24)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (29 samples, 0.04%)</title><rect x="99.3343%" y="3029" width="0.0370%" height="15" fill="rgb(226,83,41)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29 samples, 0.04%)</title><rect x="99.3343%" y="3013" width="0.0370%" height="15" fill="rgb(224,23,22)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (29 samples, 0.04%)</title><rect x="99.3343%" y="2997" width="0.0370%" height="15" fill="rgb(218,198,45)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29 samples, 0.04%)</title><rect x="99.3343%" y="2981" width="0.0370%" height="15" fill="rgb(249,147,41)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (29 samples, 0.04%)</title><rect x="99.3343%" y="2965" width="0.0370%" height="15" fill="rgb(244,224,13)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (29 samples, 0.04%)</title><rect x="99.3343%" y="2949" width="0.0370%" height="15" fill="rgb(225,97,27)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (29 samples, 0.04%)</title><rect x="99.3343%" y="2933" width="0.0370%" height="15" fill="rgb(254,64,0)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (29 samples, 0.04%)</title><rect x="99.3343%" y="2917" width="0.0370%" height="15" fill="rgb(208,130,43)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (29 samples, 0.04%)</title><rect x="99.3343%" y="2901" width="0.0370%" height="15" fill="rgb(247,91,25)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (29 samples, 0.04%)</title><rect x="99.3343%" y="2885" width="0.0370%" height="15" fill="rgb(215,218,42)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (29 samples, 0.04%)</title><rect x="99.3343%" y="2869" width="0.0370%" height="15" fill="rgb(233,9,24)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (29 samples, 0.04%)</title><rect x="99.3343%" y="2853" width="0.0370%" height="15" fill="rgb(252,105,38)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (29 samples, 0.04%)</title><rect x="99.3343%" y="2837" width="0.0370%" height="15" fill="rgb(225,40,49)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (29 samples, 0.04%)</title><rect x="99.3343%" y="2821" width="0.0370%" height="15" fill="rgb(232,196,19)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2831.50"></text></g><g><title>std::panicking::try (29 samples, 0.04%)</title><rect x="99.3343%" y="2805" width="0.0370%" height="15" fill="rgb(207,35,15)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (29 samples, 0.04%)</title><rect x="99.3343%" y="2789" width="0.0370%" height="15" fill="rgb(238,68,36)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29 samples, 0.04%)</title><rect x="99.3343%" y="2773" width="0.0370%" height="15" fill="rgb(205,158,20)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (29 samples, 0.04%)</title><rect x="99.3343%" y="2757" width="0.0370%" height="15" fill="rgb(232,32,22)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (29 samples, 0.04%)</title><rect x="99.3343%" y="2741" width="0.0370%" height="15" fill="rgb(210,169,6)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (29 samples, 0.04%)</title><rect x="99.3343%" y="2725" width="0.0370%" height="15" fill="rgb(229,28,12)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.04%)</title><rect x="99.3343%" y="2709" width="0.0370%" height="15" fill="rgb(229,78,10)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (29 samples, 0.04%)</title><rect x="99.3343%" y="2693" width="0.0370%" height="15" fill="rgb(223,139,54)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (29 samples, 0.04%)</title><rect x="99.3343%" y="2677" width="0.0370%" height="15" fill="rgb(207,110,4)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (29 samples, 0.04%)</title><rect x="99.3343%" y="2661" width="0.0370%" height="15" fill="rgb(248,30,41)" fg:x="77895" fg:w="29"/><text x="99.5843%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (20 samples, 0.03%)</title><rect x="99.3458%" y="2645" width="0.0255%" height="15" fill="rgb(235,54,25)" fg:x="77904" fg:w="20"/><text x="99.5958%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 0.03%)</title><rect x="99.3458%" y="2629" width="0.0255%" height="15" fill="rgb(213,107,41)" fg:x="77904" fg:w="20"/><text x="99.5958%" y="2639.50"></text></g><g><title>std::panicking::try (20 samples, 0.03%)</title><rect x="99.3458%" y="2613" width="0.0255%" height="15" fill="rgb(237,102,9)" fg:x="77904" fg:w="20"/><text x="99.5958%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (20 samples, 0.03%)</title><rect x="99.3458%" y="2597" width="0.0255%" height="15" fill="rgb(252,137,49)" fg:x="77904" fg:w="20"/><text x="99.5958%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20 samples, 0.03%)</title><rect x="99.3458%" y="2581" width="0.0255%" height="15" fill="rgb(233,202,33)" fg:x="77904" fg:w="20"/><text x="99.5958%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (20 samples, 0.03%)</title><rect x="99.3458%" y="2565" width="0.0255%" height="15" fill="rgb(223,14,51)" fg:x="77904" fg:w="20"/><text x="99.5958%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (20 samples, 0.03%)</title><rect x="99.3458%" y="2549" width="0.0255%" height="15" fill="rgb(248,70,23)" fg:x="77904" fg:w="20"/><text x="99.5958%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.03%)</title><rect x="99.3458%" y="2533" width="0.0255%" height="15" fill="rgb(209,207,47)" fg:x="77904" fg:w="20"/><text x="99.5958%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (20 samples, 0.03%)</title><rect x="99.3458%" y="2517" width="0.0255%" height="15" fill="rgb(245,124,2)" fg:x="77904" fg:w="20"/><text x="99.5958%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (20 samples, 0.03%)</title><rect x="99.3458%" y="2501" width="0.0255%" height="15" fill="rgb(249,208,11)" fg:x="77904" fg:w="20"/><text x="99.5958%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (20 samples, 0.03%)</title><rect x="99.3458%" y="2485" width="0.0255%" height="15" fill="rgb(247,112,7)" fg:x="77904" fg:w="20"/><text x="99.5958%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.02%)</title><rect x="99.3471%" y="2469" width="0.0242%" height="15" fill="rgb(209,192,31)" fg:x="77905" fg:w="19"/><text x="99.5971%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="99.3471%" y="2453" width="0.0242%" height="15" fill="rgb(236,55,19)" fg:x="77905" fg:w="19"/><text x="99.5971%" y="2463.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="99.3471%" y="2437" width="0.0242%" height="15" fill="rgb(252,89,41)" fg:x="77905" fg:w="19"/><text x="99.5971%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="99.3471%" y="2421" width="0.0242%" height="15" fill="rgb(220,172,14)" fg:x="77905" fg:w="19"/><text x="99.5971%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.3471%" y="2405" width="0.0242%" height="15" fill="rgb(252,65,2)" fg:x="77905" fg:w="19"/><text x="99.5971%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (19 samples, 0.02%)</title><rect x="99.3471%" y="2389" width="0.0242%" height="15" fill="rgb(250,20,8)" fg:x="77905" fg:w="19"/><text x="99.5971%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.02%)</title><rect x="99.3471%" y="2373" width="0.0242%" height="15" fill="rgb(234,149,13)" fg:x="77905" fg:w="19"/><text x="99.5971%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.02%)</title><rect x="99.3471%" y="2357" width="0.0242%" height="15" fill="rgb(223,219,12)" fg:x="77905" fg:w="19"/><text x="99.5971%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.02%)</title><rect x="99.3471%" y="2341" width="0.0242%" height="15" fill="rgb(234,13,49)" fg:x="77905" fg:w="19"/><text x="99.5971%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.02%)</title><rect x="99.3471%" y="2325" width="0.0242%" height="15" fill="rgb(214,41,25)" fg:x="77905" fg:w="19"/><text x="99.5971%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.02%)</title><rect x="99.3471%" y="2309" width="0.0242%" height="15" fill="rgb(232,198,52)" fg:x="77905" fg:w="19"/><text x="99.5971%" y="2319.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (16 samples, 0.02%)</title><rect x="99.3509%" y="2293" width="0.0204%" height="15" fill="rgb(236,111,46)" fg:x="77908" fg:w="16"/><text x="99.6009%" y="2303.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.02%)</title><rect x="99.3509%" y="2277" width="0.0204%" height="15" fill="rgb(253,30,20)" fg:x="77908" fg:w="16"/><text x="99.6009%" y="2287.50"></text></g><g><title>std::panicking::try (16 samples, 0.02%)</title><rect x="99.3509%" y="2261" width="0.0204%" height="15" fill="rgb(247,141,17)" fg:x="77908" fg:w="16"/><text x="99.6009%" y="2271.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.02%)</title><rect x="99.3509%" y="2245" width="0.0204%" height="15" fill="rgb(214,195,21)" fg:x="77908" fg:w="16"/><text x="99.6009%" y="2255.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.02%)</title><rect x="99.3509%" y="2229" width="0.0204%" height="15" fill="rgb(214,98,12)" fg:x="77908" fg:w="16"/><text x="99.6009%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (16 samples, 0.02%)</title><rect x="99.3509%" y="2213" width="0.0204%" height="15" fill="rgb(239,4,26)" fg:x="77908" fg:w="16"/><text x="99.6009%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.02%)</title><rect x="99.3509%" y="2197" width="0.0204%" height="15" fill="rgb(234,210,35)" fg:x="77908" fg:w="16"/><text x="99.6009%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.02%)</title><rect x="99.3509%" y="2181" width="0.0204%" height="15" fill="rgb(252,178,27)" fg:x="77908" fg:w="16"/><text x="99.6009%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.02%)</title><rect x="99.3509%" y="2165" width="0.0204%" height="15" fill="rgb(217,50,1)" fg:x="77908" fg:w="16"/><text x="99.6009%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.02%)</title><rect x="99.3509%" y="2149" width="0.0204%" height="15" fill="rgb(233,137,5)" fg:x="77908" fg:w="16"/><text x="99.6009%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.02%)</title><rect x="99.3509%" y="2133" width="0.0204%" height="15" fill="rgb(217,227,25)" fg:x="77908" fg:w="16"/><text x="99.6009%" y="2143.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.02%)</title><rect x="99.3560%" y="2117" width="0.0153%" height="15" fill="rgb(242,89,38)" fg:x="77912" fg:w="12"/><text x="99.6060%" y="2127.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.02%)</title><rect x="99.3560%" y="2101" width="0.0153%" height="15" fill="rgb(212,190,30)" fg:x="77912" fg:w="12"/><text x="99.6060%" y="2111.50"></text></g><g><title>std::panicking::try (12 samples, 0.02%)</title><rect x="99.3560%" y="2085" width="0.0153%" height="15" fill="rgb(222,120,8)" fg:x="77912" fg:w="12"/><text x="99.6060%" y="2095.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.02%)</title><rect x="99.3560%" y="2069" width="0.0153%" height="15" fill="rgb(227,181,9)" fg:x="77912" fg:w="12"/><text x="99.6060%" y="2079.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.02%)</title><rect x="99.3560%" y="2053" width="0.0153%" height="15" fill="rgb(222,125,29)" fg:x="77912" fg:w="12"/><text x="99.6060%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.02%)</title><rect x="99.3560%" y="2037" width="0.0153%" height="15" fill="rgb(215,153,31)" fg:x="77912" fg:w="12"/><text x="99.6060%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.02%)</title><rect x="99.3560%" y="2021" width="0.0153%" height="15" fill="rgb(228,77,30)" fg:x="77912" fg:w="12"/><text x="99.6060%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.02%)</title><rect x="99.3560%" y="2005" width="0.0153%" height="15" fill="rgb(226,110,9)" fg:x="77912" fg:w="12"/><text x="99.6060%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.02%)</title><rect x="99.3560%" y="1989" width="0.0153%" height="15" fill="rgb(219,111,7)" fg:x="77912" fg:w="12"/><text x="99.6060%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.02%)</title><rect x="99.3560%" y="1973" width="0.0153%" height="15" fill="rgb(229,167,25)" fg:x="77912" fg:w="12"/><text x="99.6060%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.02%)</title><rect x="99.3560%" y="1957" width="0.0153%" height="15" fill="rgb(209,77,43)" fg:x="77912" fg:w="12"/><text x="99.6060%" y="1967.50"></text></g><g><title>par_exec_6 (9 samples, 0.01%)</title><rect x="99.3713%" y="3189" width="0.0115%" height="15" fill="rgb(233,70,39)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="3199.50"></text></g><g><title>__GI___clone3 (9 samples, 0.01%)</title><rect x="99.3713%" y="3173" width="0.0115%" height="15" fill="rgb(207,171,44)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="3183.50"></text></g><g><title>start_thread (9 samples, 0.01%)</title><rect x="99.3713%" y="3157" width="0.0115%" height="15" fill="rgb(244,91,6)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (9 samples, 0.01%)</title><rect x="99.3713%" y="3141" width="0.0115%" height="15" fill="rgb(234,136,12)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="99.3713%" y="3125" width="0.0115%" height="15" fill="rgb(216,210,38)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="99.3713%" y="3109" width="0.0115%" height="15" fill="rgb(241,227,7)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (9 samples, 0.01%)</title><rect x="99.3713%" y="3093" width="0.0115%" height="15" fill="rgb(241,222,11)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (9 samples, 0.01%)</title><rect x="99.3713%" y="3077" width="0.0115%" height="15" fill="rgb(246,86,18)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="99.3713%" y="3061" width="0.0115%" height="15" fill="rgb(224,151,49)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="3071.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="99.3713%" y="3045" width="0.0115%" height="15" fill="rgb(235,4,41)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="99.3713%" y="3029" width="0.0115%" height="15" fill="rgb(218,30,52)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="99.3713%" y="3013" width="0.0115%" height="15" fill="rgb(205,124,51)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (9 samples, 0.01%)</title><rect x="99.3713%" y="2997" width="0.0115%" height="15" fill="rgb(237,126,51)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.01%)</title><rect x="99.3713%" y="2981" width="0.0115%" height="15" fill="rgb(225,32,46)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (9 samples, 0.01%)</title><rect x="99.3713%" y="2965" width="0.0115%" height="15" fill="rgb(251,60,49)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (9 samples, 0.01%)</title><rect x="99.3713%" y="2949" width="0.0115%" height="15" fill="rgb(234,18,23)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (9 samples, 0.01%)</title><rect x="99.3713%" y="2933" width="0.0115%" height="15" fill="rgb(234,25,23)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (9 samples, 0.01%)</title><rect x="99.3713%" y="2917" width="0.0115%" height="15" fill="rgb(210,43,52)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (9 samples, 0.01%)</title><rect x="99.3713%" y="2901" width="0.0115%" height="15" fill="rgb(237,198,21)" fg:x="77924" fg:w="9"/><text x="99.6213%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (8 samples, 0.01%)</title><rect x="99.3726%" y="2885" width="0.0102%" height="15" fill="rgb(211,20,34)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (8 samples, 0.01%)</title><rect x="99.3726%" y="2869" width="0.0102%" height="15" fill="rgb(221,155,50)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (8 samples, 0.01%)</title><rect x="99.3726%" y="2853" width="0.0102%" height="15" fill="rgb(213,214,53)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.01%)</title><rect x="99.3726%" y="2837" width="0.0102%" height="15" fill="rgb(215,229,48)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.01%)</title><rect x="99.3726%" y="2821" width="0.0102%" height="15" fill="rgb(243,88,5)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2831.50"></text></g><g><title>std::panicking::try (8 samples, 0.01%)</title><rect x="99.3726%" y="2805" width="0.0102%" height="15" fill="rgb(216,199,8)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.01%)</title><rect x="99.3726%" y="2789" width="0.0102%" height="15" fill="rgb(241,22,4)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.01%)</title><rect x="99.3726%" y="2773" width="0.0102%" height="15" fill="rgb(209,190,22)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (8 samples, 0.01%)</title><rect x="99.3726%" y="2757" width="0.0102%" height="15" fill="rgb(251,138,45)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.01%)</title><rect x="99.3726%" y="2741" width="0.0102%" height="15" fill="rgb(219,111,22)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.01%)</title><rect x="99.3726%" y="2725" width="0.0102%" height="15" fill="rgb(253,29,49)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.01%)</title><rect x="99.3726%" y="2709" width="0.0102%" height="15" fill="rgb(238,129,49)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.01%)</title><rect x="99.3726%" y="2693" width="0.0102%" height="15" fill="rgb(240,26,41)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.01%)</title><rect x="99.3726%" y="2677" width="0.0102%" height="15" fill="rgb(221,47,33)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.01%)</title><rect x="99.3726%" y="2661" width="0.0102%" height="15" fill="rgb(216,200,17)" fg:x="77925" fg:w="8"/><text x="99.6226%" y="2671.50"></text></g><g><title>par_exec_7 (17 samples, 0.02%)</title><rect x="99.3828%" y="3189" width="0.0217%" height="15" fill="rgb(230,151,26)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="3199.50"></text></g><g><title>__GI___clone3 (17 samples, 0.02%)</title><rect x="99.3828%" y="3173" width="0.0217%" height="15" fill="rgb(242,182,16)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="3183.50"></text></g><g><title>start_thread (17 samples, 0.02%)</title><rect x="99.3828%" y="3157" width="0.0217%" height="15" fill="rgb(236,35,53)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (17 samples, 0.02%)</title><rect x="99.3828%" y="3141" width="0.0217%" height="15" fill="rgb(214,180,28)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.3828%" y="3125" width="0.0217%" height="15" fill="rgb(208,173,36)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.3828%" y="3109" width="0.0217%" height="15" fill="rgb(218,39,15)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (17 samples, 0.02%)</title><rect x="99.3828%" y="3093" width="0.0217%" height="15" fill="rgb(213,145,15)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (17 samples, 0.02%)</title><rect x="99.3828%" y="3077" width="0.0217%" height="15" fill="rgb(242,110,37)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="99.3828%" y="3061" width="0.0217%" height="15" fill="rgb(247,146,22)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="3071.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="99.3828%" y="3045" width="0.0217%" height="15" fill="rgb(215,191,7)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="99.3828%" y="3029" width="0.0217%" height="15" fill="rgb(240,158,1)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.3828%" y="3013" width="0.0217%" height="15" fill="rgb(241,78,32)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (17 samples, 0.02%)</title><rect x="99.3828%" y="2997" width="0.0217%" height="15" fill="rgb(248,83,10)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 0.02%)</title><rect x="99.3828%" y="2981" width="0.0217%" height="15" fill="rgb(241,52,0)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (17 samples, 0.02%)</title><rect x="99.3828%" y="2965" width="0.0217%" height="15" fill="rgb(238,37,13)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (17 samples, 0.02%)</title><rect x="99.3828%" y="2949" width="0.0217%" height="15" fill="rgb(242,194,17)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (17 samples, 0.02%)</title><rect x="99.3828%" y="2933" width="0.0217%" height="15" fill="rgb(236,96,3)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (17 samples, 0.02%)</title><rect x="99.3828%" y="2917" width="0.0217%" height="15" fill="rgb(235,148,34)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (17 samples, 0.02%)</title><rect x="99.3828%" y="2901" width="0.0217%" height="15" fill="rgb(254,12,11)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (17 samples, 0.02%)</title><rect x="99.3828%" y="2885" width="0.0217%" height="15" fill="rgb(207,31,54)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (17 samples, 0.02%)</title><rect x="99.3828%" y="2869" width="0.0217%" height="15" fill="rgb(252,14,28)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (17 samples, 0.02%)</title><rect x="99.3828%" y="2853" width="0.0217%" height="15" fill="rgb(252,108,36)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.02%)</title><rect x="99.3828%" y="2837" width="0.0217%" height="15" fill="rgb(214,149,7)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="99.3828%" y="2821" width="0.0217%" height="15" fill="rgb(243,94,12)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2831.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="99.3828%" y="2805" width="0.0217%" height="15" fill="rgb(208,36,10)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="99.3828%" y="2789" width="0.0217%" height="15" fill="rgb(233,185,52)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.3828%" y="2773" width="0.0217%" height="15" fill="rgb(234,50,45)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (17 samples, 0.02%)</title><rect x="99.3828%" y="2757" width="0.0217%" height="15" fill="rgb(228,92,54)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (17 samples, 0.02%)</title><rect x="99.3828%" y="2741" width="0.0217%" height="15" fill="rgb(224,85,25)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.02%)</title><rect x="99.3828%" y="2725" width="0.0217%" height="15" fill="rgb(246,1,45)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.02%)</title><rect x="99.3828%" y="2709" width="0.0217%" height="15" fill="rgb(240,66,23)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.02%)</title><rect x="99.3828%" y="2693" width="0.0217%" height="15" fill="rgb(222,96,27)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.02%)</title><rect x="99.3828%" y="2677" width="0.0217%" height="15" fill="rgb(212,136,10)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.02%)</title><rect x="99.3828%" y="2661" width="0.0217%" height="15" fill="rgb(226,192,50)" fg:x="77933" fg:w="17"/><text x="99.6328%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.02%)</title><rect x="99.3879%" y="2645" width="0.0166%" height="15" fill="rgb(241,182,31)" fg:x="77937" fg:w="13"/><text x="99.6379%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="99.3879%" y="2629" width="0.0166%" height="15" fill="rgb(219,205,47)" fg:x="77937" fg:w="13"/><text x="99.6379%" y="2639.50"></text></g><g><title>std::panicking::try (13 samples, 0.02%)</title><rect x="99.3879%" y="2613" width="0.0166%" height="15" fill="rgb(207,96,14)" fg:x="77937" fg:w="13"/><text x="99.6379%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="99.3879%" y="2597" width="0.0166%" height="15" fill="rgb(216,119,9)" fg:x="77937" fg:w="13"/><text x="99.6379%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.02%)</title><rect x="99.3879%" y="2581" width="0.0166%" height="15" fill="rgb(235,62,36)" fg:x="77937" fg:w="13"/><text x="99.6379%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (13 samples, 0.02%)</title><rect x="99.3879%" y="2565" width="0.0166%" height="15" fill="rgb(214,41,27)" fg:x="77937" fg:w="13"/><text x="99.6379%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.02%)</title><rect x="99.3879%" y="2549" width="0.0166%" height="15" fill="rgb(214,174,37)" fg:x="77937" fg:w="13"/><text x="99.6379%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="99.3879%" y="2533" width="0.0166%" height="15" fill="rgb(212,11,25)" fg:x="77937" fg:w="13"/><text x="99.6379%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="99.3879%" y="2517" width="0.0166%" height="15" fill="rgb(217,71,35)" fg:x="77937" fg:w="13"/><text x="99.6379%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="99.3879%" y="2501" width="0.0166%" height="15" fill="rgb(234,152,9)" fg:x="77937" fg:w="13"/><text x="99.6379%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="99.3879%" y="2485" width="0.0166%" height="15" fill="rgb(228,32,51)" fg:x="77937" fg:w="13"/><text x="99.6379%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.01%)</title><rect x="99.3917%" y="2469" width="0.0128%" height="15" fill="rgb(209,14,47)" fg:x="77940" fg:w="10"/><text x="99.6417%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="99.3917%" y="2453" width="0.0128%" height="15" fill="rgb(218,201,17)" fg:x="77940" fg:w="10"/><text x="99.6417%" y="2463.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="99.3917%" y="2437" width="0.0128%" height="15" fill="rgb(218,98,15)" fg:x="77940" fg:w="10"/><text x="99.6417%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="99.3917%" y="2421" width="0.0128%" height="15" fill="rgb(233,202,29)" fg:x="77940" fg:w="10"/><text x="99.6417%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="99.3917%" y="2405" width="0.0128%" height="15" fill="rgb(207,196,44)" fg:x="77940" fg:w="10"/><text x="99.6417%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.01%)</title><rect x="99.3917%" y="2389" width="0.0128%" height="15" fill="rgb(218,63,34)" fg:x="77940" fg:w="10"/><text x="99.6417%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.01%)</title><rect x="99.3917%" y="2373" width="0.0128%" height="15" fill="rgb(209,10,5)" fg:x="77940" fg:w="10"/><text x="99.6417%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="99.3917%" y="2357" width="0.0128%" height="15" fill="rgb(224,36,28)" fg:x="77940" fg:w="10"/><text x="99.6417%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.01%)</title><rect x="99.3917%" y="2341" width="0.0128%" height="15" fill="rgb(249,178,7)" fg:x="77940" fg:w="10"/><text x="99.6417%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.01%)</title><rect x="99.3917%" y="2325" width="0.0128%" height="15" fill="rgb(253,163,10)" fg:x="77940" fg:w="10"/><text x="99.6417%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.01%)</title><rect x="99.3917%" y="2309" width="0.0128%" height="15" fill="rgb(245,67,46)" fg:x="77940" fg:w="10"/><text x="99.6417%" y="2319.50"></text></g><g><title>par_exec_8 (14 samples, 0.02%)</title><rect x="99.4045%" y="3189" width="0.0179%" height="15" fill="rgb(225,14,18)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="3199.50"></text></g><g><title>__GI___clone3 (14 samples, 0.02%)</title><rect x="99.4045%" y="3173" width="0.0179%" height="15" fill="rgb(217,41,54)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="3183.50"></text></g><g><title>start_thread (14 samples, 0.02%)</title><rect x="99.4045%" y="3157" width="0.0179%" height="15" fill="rgb(222,111,11)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (14 samples, 0.02%)</title><rect x="99.4045%" y="3141" width="0.0179%" height="15" fill="rgb(211,85,31)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.02%)</title><rect x="99.4045%" y="3125" width="0.0179%" height="15" fill="rgb(223,29,26)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.02%)</title><rect x="99.4045%" y="3109" width="0.0179%" height="15" fill="rgb(236,124,50)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (14 samples, 0.02%)</title><rect x="99.4045%" y="3093" width="0.0179%" height="15" fill="rgb(219,148,15)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (14 samples, 0.02%)</title><rect x="99.4045%" y="3077" width="0.0179%" height="15" fill="rgb(248,159,33)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.02%)</title><rect x="99.4045%" y="3061" width="0.0179%" height="15" fill="rgb(252,65,8)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="3071.50"></text></g><g><title>std::panicking::try (14 samples, 0.02%)</title><rect x="99.4045%" y="3045" width="0.0179%" height="15" fill="rgb(236,45,7)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.02%)</title><rect x="99.4045%" y="3029" width="0.0179%" height="15" fill="rgb(244,3,48)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.02%)</title><rect x="99.4045%" y="3013" width="0.0179%" height="15" fill="rgb(224,123,53)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (14 samples, 0.02%)</title><rect x="99.4045%" y="2997" width="0.0179%" height="15" fill="rgb(223,173,15)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14 samples, 0.02%)</title><rect x="99.4045%" y="2981" width="0.0179%" height="15" fill="rgb(254,181,5)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (14 samples, 0.02%)</title><rect x="99.4045%" y="2965" width="0.0179%" height="15" fill="rgb(243,124,33)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (14 samples, 0.02%)</title><rect x="99.4045%" y="2949" width="0.0179%" height="15" fill="rgb(253,220,11)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (14 samples, 0.02%)</title><rect x="99.4045%" y="2933" width="0.0179%" height="15" fill="rgb(217,14,4)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (14 samples, 0.02%)</title><rect x="99.4045%" y="2917" width="0.0179%" height="15" fill="rgb(209,196,12)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (14 samples, 0.02%)</title><rect x="99.4045%" y="2901" width="0.0179%" height="15" fill="rgb(237,108,29)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (14 samples, 0.02%)</title><rect x="99.4045%" y="2885" width="0.0179%" height="15" fill="rgb(216,173,20)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (14 samples, 0.02%)</title><rect x="99.4045%" y="2869" width="0.0179%" height="15" fill="rgb(245,27,6)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (14 samples, 0.02%)</title><rect x="99.4045%" y="2853" width="0.0179%" height="15" fill="rgb(210,181,20)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.02%)</title><rect x="99.4045%" y="2837" width="0.0179%" height="15" fill="rgb(235,213,1)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.02%)</title><rect x="99.4045%" y="2821" width="0.0179%" height="15" fill="rgb(239,68,43)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2831.50"></text></g><g><title>std::panicking::try (14 samples, 0.02%)</title><rect x="99.4045%" y="2805" width="0.0179%" height="15" fill="rgb(254,137,43)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.02%)</title><rect x="99.4045%" y="2789" width="0.0179%" height="15" fill="rgb(252,170,38)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.02%)</title><rect x="99.4045%" y="2773" width="0.0179%" height="15" fill="rgb(234,21,42)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (14 samples, 0.02%)</title><rect x="99.4045%" y="2757" width="0.0179%" height="15" fill="rgb(216,145,40)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (14 samples, 0.02%)</title><rect x="99.4045%" y="2741" width="0.0179%" height="15" fill="rgb(251,73,9)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.02%)</title><rect x="99.4045%" y="2725" width="0.0179%" height="15" fill="rgb(242,54,6)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.02%)</title><rect x="99.4045%" y="2709" width="0.0179%" height="15" fill="rgb(239,70,7)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.02%)</title><rect x="99.4045%" y="2693" width="0.0179%" height="15" fill="rgb(216,159,35)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.02%)</title><rect x="99.4045%" y="2677" width="0.0179%" height="15" fill="rgb(224,50,39)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.02%)</title><rect x="99.4045%" y="2661" width="0.0179%" height="15" fill="rgb(235,9,35)" fg:x="77950" fg:w="14"/><text x="99.6545%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.01%)</title><rect x="99.4083%" y="2645" width="0.0140%" height="15" fill="rgb(239,34,21)" fg:x="77953" fg:w="11"/><text x="99.6583%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="99.4083%" y="2629" width="0.0140%" height="15" fill="rgb(218,162,43)" fg:x="77953" fg:w="11"/><text x="99.6583%" y="2639.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="99.4083%" y="2613" width="0.0140%" height="15" fill="rgb(219,89,33)" fg:x="77953" fg:w="11"/><text x="99.6583%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="99.4083%" y="2597" width="0.0140%" height="15" fill="rgb(226,125,37)" fg:x="77953" fg:w="11"/><text x="99.6583%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="99.4083%" y="2581" width="0.0140%" height="15" fill="rgb(233,149,30)" fg:x="77953" fg:w="11"/><text x="99.6583%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.01%)</title><rect x="99.4083%" y="2565" width="0.0140%" height="15" fill="rgb(236,8,18)" fg:x="77953" fg:w="11"/><text x="99.6583%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="99.4083%" y="2549" width="0.0140%" height="15" fill="rgb(205,176,9)" fg:x="77953" fg:w="11"/><text x="99.6583%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="99.4083%" y="2533" width="0.0140%" height="15" fill="rgb(252,103,44)" fg:x="77953" fg:w="11"/><text x="99.6583%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.01%)</title><rect x="99.4083%" y="2517" width="0.0140%" height="15" fill="rgb(207,68,53)" fg:x="77953" fg:w="11"/><text x="99.6583%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.01%)</title><rect x="99.4083%" y="2501" width="0.0140%" height="15" fill="rgb(218,193,48)" fg:x="77953" fg:w="11"/><text x="99.6583%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.01%)</title><rect x="99.4083%" y="2485" width="0.0140%" height="15" fill="rgb(234,121,52)" fg:x="77953" fg:w="11"/><text x="99.6583%" y="2495.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (9 samples, 0.01%)</title><rect x="99.4389%" y="2469" width="0.0115%" height="15" fill="rgb(227,218,49)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2479.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (9 samples, 0.01%)</title><rect x="99.4389%" y="2453" width="0.0115%" height="15" fill="rgb(221,8,7)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2463.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (9 samples, 0.01%)</title><rect x="99.4389%" y="2437" width="0.0115%" height="15" fill="rgb(217,151,36)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2447.50"></text></g><g><title>rayon_core::job::JobRef::execute (9 samples, 0.01%)</title><rect x="99.4389%" y="2421" width="0.0115%" height="15" fill="rgb(213,71,5)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2431.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9 samples, 0.01%)</title><rect x="99.4389%" y="2405" width="0.0115%" height="15" fill="rgb(225,145,43)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2415.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="99.4389%" y="2389" width="0.0115%" height="15" fill="rgb(235,118,19)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2399.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="99.4389%" y="2373" width="0.0115%" height="15" fill="rgb(214,102,36)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2383.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="99.4389%" y="2357" width="0.0115%" height="15" fill="rgb(220,56,43)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2367.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="99.4389%" y="2341" width="0.0115%" height="15" fill="rgb(246,136,46)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2351.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="99.4389%" y="2325" width="0.0115%" height="15" fill="rgb(249,99,12)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2335.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (9 samples, 0.01%)</title><rect x="99.4389%" y="2309" width="0.0115%" height="15" fill="rgb(224,31,42)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2319.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.01%)</title><rect x="99.4389%" y="2293" width="0.0115%" height="15" fill="rgb(208,96,21)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="99.4389%" y="2277" width="0.0115%" height="15" fill="rgb(237,229,7)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="99.4389%" y="2261" width="0.0115%" height="15" fill="rgb(210,12,6)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2271.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="99.4389%" y="2245" width="0.0115%" height="15" fill="rgb(240,9,34)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2255.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="99.4389%" y="2229" width="0.0115%" height="15" fill="rgb(211,68,37)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="99.4389%" y="2213" width="0.0115%" height="15" fill="rgb(249,138,50)" fg:x="77977" fg:w="9"/><text x="99.6889%" y="2223.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.01%)</title><rect x="99.4516%" y="2181" width="0.0128%" height="15" fill="rgb(243,185,40)" fg:x="77987" fg:w="10"/><text x="99.7016%" y="2191.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.01%)</title><rect x="99.4516%" y="2165" width="0.0128%" height="15" fill="rgb(242,92,35)" fg:x="77987" fg:w="10"/><text x="99.7016%" y="2175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.01%)</title><rect x="99.4516%" y="2149" width="0.0128%" height="15" fill="rgb(244,98,5)" fg:x="77987" fg:w="10"/><text x="99.7016%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.01%)</title><rect x="99.4516%" y="2133" width="0.0128%" height="15" fill="rgb(228,186,29)" fg:x="77987" fg:w="10"/><text x="99.7016%" y="2143.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.01%)</title><rect x="99.4516%" y="2117" width="0.0128%" height="15" fill="rgb(253,7,44)" fg:x="77987" fg:w="10"/><text x="99.7016%" y="2127.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.01%)</title><rect x="99.4516%" y="2101" width="0.0128%" height="15" fill="rgb(216,11,45)" fg:x="77987" fg:w="10"/><text x="99.7016%" y="2111.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.01%)</title><rect x="99.4516%" y="2085" width="0.0128%" height="15" fill="rgb(205,67,3)" fg:x="77987" fg:w="10"/><text x="99.7016%" y="2095.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.01%)</title><rect x="99.4529%" y="2069" width="0.0115%" height="15" fill="rgb(250,18,3)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="2079.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.01%)</title><rect x="99.4529%" y="2053" width="0.0115%" height="15" fill="rgb(241,222,43)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="2063.50"></text></g><g><title>std::panicking::try (9 samples, 0.01%)</title><rect x="99.4529%" y="2037" width="0.0115%" height="15" fill="rgb(233,115,3)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="2047.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.01%)</title><rect x="99.4529%" y="2021" width="0.0115%" height="15" fill="rgb(215,165,25)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="2031.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.01%)</title><rect x="99.4529%" y="2005" width="0.0115%" height="15" fill="rgb(234,179,6)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="2015.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.01%)</title><rect x="99.4529%" y="1989" width="0.0115%" height="15" fill="rgb(215,82,23)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1999.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="99.4529%" y="1973" width="0.0115%" height="15" fill="rgb(211,47,18)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="99.4529%" y="1957" width="0.0115%" height="15" fill="rgb(248,17,9)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1967.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.01%)</title><rect x="99.4529%" y="1941" width="0.0115%" height="15" fill="rgb(210,212,12)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1951.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.01%)</title><rect x="99.4529%" y="1925" width="0.0115%" height="15" fill="rgb(230,135,45)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1935.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.01%)</title><rect x="99.4529%" y="1909" width="0.0115%" height="15" fill="rgb(214,121,41)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1919.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.01%)</title><rect x="99.4529%" y="1893" width="0.0115%" height="15" fill="rgb(239,165,45)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1903.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.01%)</title><rect x="99.4529%" y="1877" width="0.0115%" height="15" fill="rgb(214,85,51)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.01%)</title><rect x="99.4529%" y="1861" width="0.0115%" height="15" fill="rgb(223,90,27)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.01%)</title><rect x="99.4529%" y="1845" width="0.0115%" height="15" fill="rgb(244,84,11)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (9 samples, 0.01%)</title><rect x="99.4529%" y="1829" width="0.0115%" height="15" fill="rgb(253,41,47)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1839.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.01%)</title><rect x="99.4529%" y="1813" width="0.0115%" height="15" fill="rgb(232,39,5)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (9 samples, 0.01%)</title><rect x="99.4529%" y="1797" width="0.0115%" height="15" fill="rgb(211,93,4)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="99.4529%" y="1781" width="0.0115%" height="15" fill="rgb(219,50,49)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1791.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.01%)</title><rect x="99.4529%" y="1765" width="0.0115%" height="15" fill="rgb(232,80,19)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1775.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (9 samples, 0.01%)</title><rect x="99.4529%" y="1749" width="0.0115%" height="15" fill="rgb(215,227,39)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1759.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (9 samples, 0.01%)</title><rect x="99.4529%" y="1733" width="0.0115%" height="15" fill="rgb(211,99,12)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1743.50"></text></g><g><title>core::ops::function::Fn::call (9 samples, 0.01%)</title><rect x="99.4529%" y="1717" width="0.0115%" height="15" fill="rgb(214,158,5)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1727.50"></text></g><g><title>aptos_vm::adapter_common::preprocess_transaction (9 samples, 0.01%)</title><rect x="99.4529%" y="1701" width="0.0115%" height="15" fill="rgb(242,19,53)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1711.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::check_signature (9 samples, 0.01%)</title><rect x="99.4529%" y="1685" width="0.0115%" height="15" fill="rgb(208,18,20)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1695.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::check_signature (9 samples, 0.01%)</title><rect x="99.4529%" y="1669" width="0.0115%" height="15" fill="rgb(250,44,11)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1679.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::verify (9 samples, 0.01%)</title><rect x="99.4529%" y="1653" width="0.0115%" height="15" fill="rgb(238,159,13)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1663.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_sigs::Ed25519Signature as aptos_crypto::traits::Signature&gt;::verify (9 samples, 0.01%)</title><rect x="99.4529%" y="1637" width="0.0115%" height="15" fill="rgb(231,74,18)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1647.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_sigs::Ed25519Signature as aptos_crypto::traits::Signature&gt;::verify_arbitrary_msg (9 samples, 0.01%)</title><rect x="99.4529%" y="1621" width="0.0115%" height="15" fill="rgb(229,219,45)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1631.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_strict (9 samples, 0.01%)</title><rect x="99.4529%" y="1605" width="0.0115%" height="15" fill="rgb(210,221,1)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1615.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (9 samples, 0.01%)</title><rect x="99.4529%" y="1589" width="0.0115%" height="15" fill="rgb(209,60,51)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1599.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (9 samples, 0.01%)</title><rect x="99.4529%" y="1573" width="0.0115%" height="15" fill="rgb(252,97,34)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1583.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (9 samples, 0.01%)</title><rect x="99.4529%" y="1557" width="0.0115%" height="15" fill="rgb(243,211,37)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1567.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (9 samples, 0.01%)</title><rect x="99.4529%" y="1541" width="0.0115%" height="15" fill="rgb(210,229,37)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1551.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (9 samples, 0.01%)</title><rect x="99.4529%" y="1525" width="0.0115%" height="15" fill="rgb(220,208,43)" fg:x="77988" fg:w="9"/><text x="99.7029%" y="1535.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (11 samples, 0.01%)</title><rect x="99.4644%" y="1829" width="0.0140%" height="15" fill="rgb(218,118,50)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (11 samples, 0.01%)</title><rect x="99.4644%" y="1813" width="0.0140%" height="15" fill="rgb(254,169,52)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.01%)</title><rect x="99.4644%" y="1797" width="0.0140%" height="15" fill="rgb(221,214,37)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.01%)</title><rect x="99.4644%" y="1781" width="0.0140%" height="15" fill="rgb(254,186,32)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (11 samples, 0.01%)</title><rect x="99.4644%" y="1765" width="0.0140%" height="15" fill="rgb(215,144,43)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1775.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.01%)</title><rect x="99.4644%" y="1749" width="0.0140%" height="15" fill="rgb(252,21,46)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (11 samples, 0.01%)</title><rect x="99.4644%" y="1733" width="0.0140%" height="15" fill="rgb(207,166,46)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="99.4644%" y="1717" width="0.0140%" height="15" fill="rgb(253,37,49)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="99.4644%" y="1701" width="0.0140%" height="15" fill="rgb(222,97,20)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1711.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.01%)</title><rect x="99.4644%" y="1685" width="0.0140%" height="15" fill="rgb(244,181,26)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1695.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (11 samples, 0.01%)</title><rect x="99.4644%" y="1669" width="0.0140%" height="15" fill="rgb(241,22,29)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1679.50"></text></g><g><title>core::ops::function::Fn::call (11 samples, 0.01%)</title><rect x="99.4644%" y="1653" width="0.0140%" height="15" fill="rgb(206,200,43)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1663.50"></text></g><g><title>aptos_vm::adapter_common::preprocess_transaction (11 samples, 0.01%)</title><rect x="99.4644%" y="1637" width="0.0140%" height="15" fill="rgb(226,224,43)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1647.50"></text></g><g><title>&lt;aptos_vm::aptos_vm::AptosVM as aptos_vm::adapter_common::VMAdapter&gt;::check_signature (11 samples, 0.01%)</title><rect x="99.4644%" y="1621" width="0.0140%" height="15" fill="rgb(253,129,28)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1631.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::check_signature (11 samples, 0.01%)</title><rect x="99.4644%" y="1605" width="0.0140%" height="15" fill="rgb(252,99,33)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1615.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::verify (11 samples, 0.01%)</title><rect x="99.4644%" y="1589" width="0.0140%" height="15" fill="rgb(208,123,45)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1599.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_sigs::Ed25519Signature as aptos_crypto::traits::Signature&gt;::verify (11 samples, 0.01%)</title><rect x="99.4644%" y="1573" width="0.0140%" height="15" fill="rgb(251,106,12)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1583.50"></text></g><g><title>&lt;aptos_crypto::ed25519::ed25519_sigs::Ed25519Signature as aptos_crypto::traits::Signature&gt;::verify_arbitrary_msg (11 samples, 0.01%)</title><rect x="99.4644%" y="1557" width="0.0140%" height="15" fill="rgb(240,209,35)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1567.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_strict (11 samples, 0.01%)</title><rect x="99.4644%" y="1541" width="0.0140%" height="15" fill="rgb(214,52,50)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1551.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (11 samples, 0.01%)</title><rect x="99.4644%" y="1525" width="0.0140%" height="15" fill="rgb(234,119,4)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1535.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (11 samples, 0.01%)</title><rect x="99.4644%" y="1509" width="0.0140%" height="15" fill="rgb(228,181,36)" fg:x="77997" fg:w="11"/><text x="99.7144%" y="1519.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (10 samples, 0.01%)</title><rect x="99.4657%" y="1493" width="0.0128%" height="15" fill="rgb(213,171,42)" fg:x="77998" fg:w="10"/><text x="99.7157%" y="1503.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (10 samples, 0.01%)</title><rect x="99.4657%" y="1477" width="0.0128%" height="15" fill="rgb(239,14,41)" fg:x="77998" fg:w="10"/><text x="99.7157%" y="1487.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (23 samples, 0.03%)</title><rect x="99.4516%" y="2293" width="0.0293%" height="15" fill="rgb(239,111,46)" fg:x="77987" fg:w="23"/><text x="99.7016%" y="2303.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (23 samples, 0.03%)</title><rect x="99.4516%" y="2277" width="0.0293%" height="15" fill="rgb(214,72,7)" fg:x="77987" fg:w="23"/><text x="99.7016%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (23 samples, 0.03%)</title><rect x="99.4516%" y="2261" width="0.0293%" height="15" fill="rgb(221,114,1)" fg:x="77987" fg:w="23"/><text x="99.7016%" y="2271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.03%)</title><rect x="99.4516%" y="2245" width="0.0293%" height="15" fill="rgb(213,143,14)" fg:x="77987" fg:w="23"/><text x="99.7016%" y="2255.50"></text></g><g><title>rayon_core::join::join_context (23 samples, 0.03%)</title><rect x="99.4516%" y="2229" width="0.0293%" height="15" fill="rgb(220,221,53)" fg:x="77987" fg:w="23"/><text x="99.7016%" y="2239.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.03%)</title><rect x="99.4516%" y="2213" width="0.0293%" height="15" fill="rgb(236,189,27)" fg:x="77987" fg:w="23"/><text x="99.7016%" y="2223.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (23 samples, 0.03%)</title><rect x="99.4516%" y="2197" width="0.0293%" height="15" fill="rgb(252,139,49)" fg:x="77987" fg:w="23"/><text x="99.7016%" y="2207.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.02%)</title><rect x="99.4644%" y="2181" width="0.0166%" height="15" fill="rgb(231,158,33)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="2191.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="99.4644%" y="2165" width="0.0166%" height="15" fill="rgb(207,201,15)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="2175.50"></text></g><g><title>std::panicking::try (13 samples, 0.02%)</title><rect x="99.4644%" y="2149" width="0.0166%" height="15" fill="rgb(218,43,48)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="2159.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="99.4644%" y="2133" width="0.0166%" height="15" fill="rgb(244,63,52)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="2143.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.02%)</title><rect x="99.4644%" y="2117" width="0.0166%" height="15" fill="rgb(236,60,17)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (13 samples, 0.02%)</title><rect x="99.4644%" y="2101" width="0.0166%" height="15" fill="rgb(205,206,29)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.02%)</title><rect x="99.4644%" y="2085" width="0.0166%" height="15" fill="rgb(205,209,35)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="2095.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="99.4644%" y="2069" width="0.0166%" height="15" fill="rgb(227,112,14)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="2079.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="99.4644%" y="2053" width="0.0166%" height="15" fill="rgb(248,151,9)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="2063.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="99.4644%" y="2037" width="0.0166%" height="15" fill="rgb(247,45,40)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="2047.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="99.4644%" y="2021" width="0.0166%" height="15" fill="rgb(232,185,16)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="2031.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.02%)</title><rect x="99.4644%" y="2005" width="0.0166%" height="15" fill="rgb(215,45,44)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="2015.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="99.4644%" y="1989" width="0.0166%" height="15" fill="rgb(206,69,32)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="1999.50"></text></g><g><title>std::panicking::try (13 samples, 0.02%)</title><rect x="99.4644%" y="1973" width="0.0166%" height="15" fill="rgb(233,98,50)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="1983.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="99.4644%" y="1957" width="0.0166%" height="15" fill="rgb(232,217,52)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="1967.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.02%)</title><rect x="99.4644%" y="1941" width="0.0166%" height="15" fill="rgb(250,42,51)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (13 samples, 0.02%)</title><rect x="99.4644%" y="1925" width="0.0166%" height="15" fill="rgb(241,200,26)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.02%)</title><rect x="99.4644%" y="1909" width="0.0166%" height="15" fill="rgb(207,10,32)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.02%)</title><rect x="99.4644%" y="1893" width="0.0166%" height="15" fill="rgb(214,63,15)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="1903.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.02%)</title><rect x="99.4644%" y="1877" width="0.0166%" height="15" fill="rgb(234,176,14)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.02%)</title><rect x="99.4644%" y="1861" width="0.0166%" height="15" fill="rgb(226,104,52)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.02%)</title><rect x="99.4644%" y="1845" width="0.0166%" height="15" fill="rgb(211,222,1)" fg:x="77997" fg:w="13"/><text x="99.7144%" y="1855.50"></text></g><g><title>par_exec_9 (55 samples, 0.07%)</title><rect x="99.4223%" y="3189" width="0.0701%" height="15" fill="rgb(237,7,3)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="3199.50"></text></g><g><title>__GI___clone3 (55 samples, 0.07%)</title><rect x="99.4223%" y="3173" width="0.0701%" height="15" fill="rgb(218,143,7)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="3183.50"></text></g><g><title>start_thread (55 samples, 0.07%)</title><rect x="99.4223%" y="3157" width="0.0701%" height="15" fill="rgb(208,25,22)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (55 samples, 0.07%)</title><rect x="99.4223%" y="3141" width="0.0701%" height="15" fill="rgb(228,127,16)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (55 samples, 0.07%)</title><rect x="99.4223%" y="3125" width="0.0701%" height="15" fill="rgb(237,86,27)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (55 samples, 0.07%)</title><rect x="99.4223%" y="3109" width="0.0701%" height="15" fill="rgb(207,125,19)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (55 samples, 0.07%)</title><rect x="99.4223%" y="3093" width="0.0701%" height="15" fill="rgb(243,195,0)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (55 samples, 0.07%)</title><rect x="99.4223%" y="3077" width="0.0701%" height="15" fill="rgb(230,95,18)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (55 samples, 0.07%)</title><rect x="99.4223%" y="3061" width="0.0701%" height="15" fill="rgb(232,157,21)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="3071.50"></text></g><g><title>std::panicking::try (55 samples, 0.07%)</title><rect x="99.4223%" y="3045" width="0.0701%" height="15" fill="rgb(212,120,50)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (55 samples, 0.07%)</title><rect x="99.4223%" y="3029" width="0.0701%" height="15" fill="rgb(222,204,44)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (55 samples, 0.07%)</title><rect x="99.4223%" y="3013" width="0.0701%" height="15" fill="rgb(236,6,33)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (55 samples, 0.07%)</title><rect x="99.4223%" y="2997" width="0.0701%" height="15" fill="rgb(247,11,38)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (55 samples, 0.07%)</title><rect x="99.4223%" y="2981" width="0.0701%" height="15" fill="rgb(215,111,0)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (55 samples, 0.07%)</title><rect x="99.4223%" y="2965" width="0.0701%" height="15" fill="rgb(211,65,46)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (55 samples, 0.07%)</title><rect x="99.4223%" y="2949" width="0.0701%" height="15" fill="rgb(216,5,12)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (55 samples, 0.07%)</title><rect x="99.4223%" y="2933" width="0.0701%" height="15" fill="rgb(226,7,2)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (55 samples, 0.07%)</title><rect x="99.4223%" y="2917" width="0.0701%" height="15" fill="rgb(242,116,12)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (55 samples, 0.07%)</title><rect x="99.4223%" y="2901" width="0.0701%" height="15" fill="rgb(249,209,7)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (55 samples, 0.07%)</title><rect x="99.4223%" y="2885" width="0.0701%" height="15" fill="rgb(232,73,17)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (55 samples, 0.07%)</title><rect x="99.4223%" y="2869" width="0.0701%" height="15" fill="rgb(214,13,32)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (55 samples, 0.07%)</title><rect x="99.4223%" y="2853" width="0.0701%" height="15" fill="rgb(221,125,10)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (55 samples, 0.07%)</title><rect x="99.4223%" y="2837" width="0.0701%" height="15" fill="rgb(246,7,44)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (55 samples, 0.07%)</title><rect x="99.4223%" y="2821" width="0.0701%" height="15" fill="rgb(239,18,35)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2831.50"></text></g><g><title>std::panicking::try (55 samples, 0.07%)</title><rect x="99.4223%" y="2805" width="0.0701%" height="15" fill="rgb(250,222,16)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2815.50"></text></g><g><title>std::panicking::try::do_call (55 samples, 0.07%)</title><rect x="99.4223%" y="2789" width="0.0701%" height="15" fill="rgb(219,100,8)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (55 samples, 0.07%)</title><rect x="99.4223%" y="2773" width="0.0701%" height="15" fill="rgb(240,62,13)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (55 samples, 0.07%)</title><rect x="99.4223%" y="2757" width="0.0701%" height="15" fill="rgb(253,194,2)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (55 samples, 0.07%)</title><rect x="99.4223%" y="2741" width="0.0701%" height="15" fill="rgb(235,58,31)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (55 samples, 0.07%)</title><rect x="99.4223%" y="2725" width="0.0701%" height="15" fill="rgb(231,37,11)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (55 samples, 0.07%)</title><rect x="99.4223%" y="2709" width="0.0701%" height="15" fill="rgb(235,133,0)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2719.50"></text></g><g><title>rayon_core::join::join_context (55 samples, 0.07%)</title><rect x="99.4223%" y="2693" width="0.0701%" height="15" fill="rgb(212,185,40)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2703.50"></text></g><g><title>rayon_core::registry::in_worker (55 samples, 0.07%)</title><rect x="99.4223%" y="2677" width="0.0701%" height="15" fill="rgb(216,68,42)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (55 samples, 0.07%)</title><rect x="99.4223%" y="2661" width="0.0701%" height="15" fill="rgb(239,81,4)" fg:x="77964" fg:w="55"/><text x="99.6723%" y="2671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (47 samples, 0.06%)</title><rect x="99.4325%" y="2645" width="0.0599%" height="15" fill="rgb(206,86,6)" fg:x="77972" fg:w="47"/><text x="99.6825%" y="2655.50"></text></g><g><title>std::panic::catch_unwind (47 samples, 0.06%)</title><rect x="99.4325%" y="2629" width="0.0599%" height="15" fill="rgb(249,95,27)" fg:x="77972" fg:w="47"/><text x="99.6825%" y="2639.50"></text></g><g><title>std::panicking::try (47 samples, 0.06%)</title><rect x="99.4325%" y="2613" width="0.0599%" height="15" fill="rgb(205,155,45)" fg:x="77972" fg:w="47"/><text x="99.6825%" y="2623.50"></text></g><g><title>std::panicking::try::do_call (47 samples, 0.06%)</title><rect x="99.4325%" y="2597" width="0.0599%" height="15" fill="rgb(213,55,42)" fg:x="77972" fg:w="47"/><text x="99.6825%" y="2607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (47 samples, 0.06%)</title><rect x="99.4325%" y="2581" width="0.0599%" height="15" fill="rgb(249,197,4)" fg:x="77972" fg:w="47"/><text x="99.6825%" y="2591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (47 samples, 0.06%)</title><rect x="99.4325%" y="2565" width="0.0599%" height="15" fill="rgb(212,128,32)" fg:x="77972" fg:w="47"/><text x="99.6825%" y="2575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (47 samples, 0.06%)</title><rect x="99.4325%" y="2549" width="0.0599%" height="15" fill="rgb(252,47,30)" fg:x="77972" fg:w="47"/><text x="99.6825%" y="2559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.06%)</title><rect x="99.4325%" y="2533" width="0.0599%" height="15" fill="rgb(209,79,18)" fg:x="77972" fg:w="47"/><text x="99.6825%" y="2543.50"></text></g><g><title>rayon_core::join::join_context (47 samples, 0.06%)</title><rect x="99.4325%" y="2517" width="0.0599%" height="15" fill="rgb(225,81,38)" fg:x="77972" fg:w="47"/><text x="99.6825%" y="2527.50"></text></g><g><title>rayon_core::registry::in_worker (47 samples, 0.06%)</title><rect x="99.4325%" y="2501" width="0.0599%" height="15" fill="rgb(205,95,16)" fg:x="77972" fg:w="47"/><text x="99.6825%" y="2511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (47 samples, 0.06%)</title><rect x="99.4325%" y="2485" width="0.0599%" height="15" fill="rgb(214,30,4)" fg:x="77972" fg:w="47"/><text x="99.6825%" y="2495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (32 samples, 0.04%)</title><rect x="99.4516%" y="2469" width="0.0408%" height="15" fill="rgb(232,137,22)" fg:x="77987" fg:w="32"/><text x="99.7016%" y="2479.50"></text></g><g><title>std::panic::catch_unwind (32 samples, 0.04%)</title><rect x="99.4516%" y="2453" width="0.0408%" height="15" fill="rgb(232,156,19)" fg:x="77987" fg:w="32"/><text x="99.7016%" y="2463.50"></text></g><g><title>std::panicking::try (32 samples, 0.04%)</title><rect x="99.4516%" y="2437" width="0.0408%" height="15" fill="rgb(248,157,26)" fg:x="77987" fg:w="32"/><text x="99.7016%" y="2447.50"></text></g><g><title>std::panicking::try::do_call (32 samples, 0.04%)</title><rect x="99.4516%" y="2421" width="0.0408%" height="15" fill="rgb(242,24,3)" fg:x="77987" fg:w="32"/><text x="99.7016%" y="2431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (32 samples, 0.04%)</title><rect x="99.4516%" y="2405" width="0.0408%" height="15" fill="rgb(218,195,48)" fg:x="77987" fg:w="32"/><text x="99.7016%" y="2415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (32 samples, 0.04%)</title><rect x="99.4516%" y="2389" width="0.0408%" height="15" fill="rgb(214,193,36)" fg:x="77987" fg:w="32"/><text x="99.7016%" y="2399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (32 samples, 0.04%)</title><rect x="99.4516%" y="2373" width="0.0408%" height="15" fill="rgb(242,110,40)" fg:x="77987" fg:w="32"/><text x="99.7016%" y="2383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.04%)</title><rect x="99.4516%" y="2357" width="0.0408%" height="15" fill="rgb(233,150,26)" fg:x="77987" fg:w="32"/><text x="99.7016%" y="2367.50"></text></g><g><title>rayon_core::join::join_context (32 samples, 0.04%)</title><rect x="99.4516%" y="2341" width="0.0408%" height="15" fill="rgb(239,200,30)" fg:x="77987" fg:w="32"/><text x="99.7016%" y="2351.50"></text></g><g><title>rayon_core::registry::in_worker (32 samples, 0.04%)</title><rect x="99.4516%" y="2325" width="0.0408%" height="15" fill="rgb(226,28,11)" fg:x="77987" fg:w="32"/><text x="99.7016%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (32 samples, 0.04%)</title><rect x="99.4516%" y="2309" width="0.0408%" height="15" fill="rgb(220,26,48)" fg:x="77987" fg:w="32"/><text x="99.7016%" y="2319.50"></text></g><g><title>aptos_jellyfish_merkle::node_type::InternalNode::gen_node_in_proof (17 samples, 0.02%)</title><rect x="99.4950%" y="2597" width="0.0217%" height="15" fill="rgb(232,10,11)" fg:x="78021" fg:w="17"/><text x="99.7450%" y="2607.50"></text></g><g><title>aptos_jellyfish_merkle::node_type::InternalNode::merkle_hash (12 samples, 0.02%)</title><rect x="99.5014%" y="2581" width="0.0153%" height="15" fill="rgb(252,143,50)" fg:x="78026" fg:w="12"/><text x="99.7514%" y="2591.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_storage_interface::DbReader&gt;::get_state_proof_by_version_ext::{{closure}} (19 samples, 0.02%)</title><rect x="99.4937%" y="2693" width="0.0242%" height="15" fill="rgb(206,58,22)" fg:x="78020" fg:w="19"/><text x="99.7437%" y="2703.50"></text></g><g><title>&lt;aptos_db::state_store::StateStore as aptos_storage_interface::DbReader&gt;::get_state_proof_by_version_ext (19 samples, 0.02%)</title><rect x="99.4937%" y="2677" width="0.0242%" height="15" fill="rgb(250,9,45)" fg:x="78020" fg:w="19"/><text x="99.7437%" y="2687.50"></text></g><g><title>&lt;aptos_db::state_store::StateDb as aptos_storage_interface::DbReader&gt;::get_state_proof_by_version_ext (19 samples, 0.02%)</title><rect x="99.4937%" y="2661" width="0.0242%" height="15" fill="rgb(225,148,14)" fg:x="78020" fg:w="19"/><text x="99.7437%" y="2671.50"></text></g><g><title>aptos_db::state_merkle_db::StateMerkleDb::get_with_proof_ext (19 samples, 0.02%)</title><rect x="99.4937%" y="2645" width="0.0242%" height="15" fill="rgb(205,178,40)" fg:x="78020" fg:w="19"/><text x="99.7437%" y="2655.50"></text></g><g><title>aptos_jellyfish_merkle::JellyfishMerkleTree&lt;R,K&gt;::get_with_proof_ext (18 samples, 0.02%)</title><rect x="99.4950%" y="2629" width="0.0230%" height="15" fill="rgb(215,201,4)" fg:x="78021" fg:w="18"/><text x="99.7450%" y="2639.50"></text></g><g><title>aptos_jellyfish_merkle::node_type::InternalNode::get_child_with_siblings (18 samples, 0.02%)</title><rect x="99.4950%" y="2613" width="0.0230%" height="15" fill="rgb(219,223,24)" fg:x="78021" fg:w="18"/><text x="99.7450%" y="2623.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_storage_interface::DbReader&gt;::get_state_proof_by_version_ext (20 samples, 0.03%)</title><rect x="99.4937%" y="2725" width="0.0255%" height="15" fill="rgb(217,19,31)" fg:x="78020" fg:w="20"/><text x="99.7437%" y="2735.50"></text></g><g><title>aptos_db::gauged_api (20 samples, 0.03%)</title><rect x="99.4937%" y="2709" width="0.0255%" height="15" fill="rgb(235,33,3)" fg:x="78020" fg:w="20"/><text x="99.7437%" y="2719.50"></text></g><g><title>aptos_types::proof::definition::SparseMerkleProofExt::verify_by_hash (8 samples, 0.01%)</title><rect x="99.5218%" y="2725" width="0.0102%" height="15" fill="rgb(221,39,18)" fg:x="78042" fg:w="8"/><text x="99.7718%" y="2735.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (33 samples, 0.04%)</title><rect x="99.4937%" y="2885" width="0.0421%" height="15" fill="rgb(242,162,33)" fg:x="78020" fg:w="33"/><text x="99.7437%" y="2895.50"></text></g><g><title>rayon_core::job::JobRef::execute (33 samples, 0.04%)</title><rect x="99.4937%" y="2869" width="0.0421%" height="15" fill="rgb(233,215,28)" fg:x="78020" fg:w="33"/><text x="99.7437%" y="2879.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (33 samples, 0.04%)</title><rect x="99.4937%" y="2853" width="0.0421%" height="15" fill="rgb(212,117,9)" fg:x="78020" fg:w="33"/><text x="99.7437%" y="2863.50"></text></g><g><title>rayon_core::spawn::spawn_job::{{closure}} (33 samples, 0.04%)</title><rect x="99.4937%" y="2837" width="0.0421%" height="15" fill="rgb(237,70,47)" fg:x="78020" fg:w="33"/><text x="99.7437%" y="2847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (33 samples, 0.04%)</title><rect x="99.4937%" y="2821" width="0.0421%" height="15" fill="rgb(206,177,13)" fg:x="78020" fg:w="33"/><text x="99.7437%" y="2831.50"></text></g><g><title>std::panic::catch_unwind (33 samples, 0.04%)</title><rect x="99.4937%" y="2805" width="0.0421%" height="15" fill="rgb(209,174,33)" fg:x="78020" fg:w="33"/><text x="99.7437%" y="2815.50"></text></g><g><title>std::panicking::try (33 samples, 0.04%)</title><rect x="99.4937%" y="2789" width="0.0421%" height="15" fill="rgb(226,6,11)" fg:x="78020" fg:w="33"/><text x="99.7437%" y="2799.50"></text></g><g><title>std::panicking::try::do_call (33 samples, 0.04%)</title><rect x="99.4937%" y="2773" width="0.0421%" height="15" fill="rgb(240,214,6)" fg:x="78020" fg:w="33"/><text x="99.7437%" y="2783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (33 samples, 0.04%)</title><rect x="99.4937%" y="2757" width="0.0421%" height="15" fill="rgb(254,214,40)" fg:x="78020" fg:w="33"/><text x="99.7437%" y="2767.50"></text></g><g><title>aptos_storage_interface::async_proof_fetcher::AsyncProofFetcher::schedule_proof_read::{{closure}} (33 samples, 0.04%)</title><rect x="99.4937%" y="2741" width="0.0421%" height="15" fill="rgb(230,187,15)" fg:x="78020" fg:w="33"/><text x="99.7437%" y="2751.50"></text></g><g><title>proof_reader_0 (37 samples, 0.05%)</title><rect x="99.4925%" y="3189" width="0.0472%" height="15" fill="rgb(250,11,27)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="3199.50"></text></g><g><title>__GI___clone3 (37 samples, 0.05%)</title><rect x="99.4925%" y="3173" width="0.0472%" height="15" fill="rgb(243,107,19)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="3183.50"></text></g><g><title>start_thread (37 samples, 0.05%)</title><rect x="99.4925%" y="3157" width="0.0472%" height="15" fill="rgb(253,66,26)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (37 samples, 0.05%)</title><rect x="99.4925%" y="3141" width="0.0472%" height="15" fill="rgb(228,43,8)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (37 samples, 0.05%)</title><rect x="99.4925%" y="3125" width="0.0472%" height="15" fill="rgb(232,197,36)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (37 samples, 0.05%)</title><rect x="99.4925%" y="3109" width="0.0472%" height="15" fill="rgb(221,182,31)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (37 samples, 0.05%)</title><rect x="99.4925%" y="3093" width="0.0472%" height="15" fill="rgb(244,25,36)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (37 samples, 0.05%)</title><rect x="99.4925%" y="3077" width="0.0472%" height="15" fill="rgb(247,101,19)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 0.05%)</title><rect x="99.4925%" y="3061" width="0.0472%" height="15" fill="rgb(223,117,19)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="3071.50"></text></g><g><title>std::panicking::try (37 samples, 0.05%)</title><rect x="99.4925%" y="3045" width="0.0472%" height="15" fill="rgb(249,63,38)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (37 samples, 0.05%)</title><rect x="99.4925%" y="3029" width="0.0472%" height="15" fill="rgb(220,143,23)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (37 samples, 0.05%)</title><rect x="99.4925%" y="3013" width="0.0472%" height="15" fill="rgb(252,183,22)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (37 samples, 0.05%)</title><rect x="99.4925%" y="2997" width="0.0472%" height="15" fill="rgb(243,176,15)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (37 samples, 0.05%)</title><rect x="99.4925%" y="2981" width="0.0472%" height="15" fill="rgb(244,204,46)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="2991.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (37 samples, 0.05%)</title><rect x="99.4925%" y="2965" width="0.0472%" height="15" fill="rgb(227,28,54)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="2975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (37 samples, 0.05%)</title><rect x="99.4925%" y="2949" width="0.0472%" height="15" fill="rgb(231,10,15)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="2959.50"></text></g><g><title>rayon_core::registry::main_loop (37 samples, 0.05%)</title><rect x="99.4925%" y="2933" width="0.0472%" height="15" fill="rgb(210,200,17)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="2943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (37 samples, 0.05%)</title><rect x="99.4925%" y="2917" width="0.0472%" height="15" fill="rgb(251,106,46)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="2927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (37 samples, 0.05%)</title><rect x="99.4925%" y="2901" width="0.0472%" height="15" fill="rgb(218,211,15)" fg:x="78019" fg:w="37"/><text x="99.7425%" y="2911.50"></text></g><g><title>LZ4_getIndexOnHash (19 samples, 0.02%)</title><rect x="99.6238%" y="2821" width="0.0242%" height="15" fill="rgb(239,62,10)" fg:x="78122" fg:w="19"/><text x="99.8738%" y="2831.50"></text></g><g><title>LZ4_compress_fast_continue (72 samples, 0.09%)</title><rect x="99.5664%" y="2869" width="0.0918%" height="15" fill="rgb(225,53,53)" fg:x="78077" fg:w="72"/><text x="99.8164%" y="2879.50"></text></g><g><title>LZ4_compress_generic (72 samples, 0.09%)</title><rect x="99.5664%" y="2853" width="0.0918%" height="15" fill="rgb(207,16,24)" fg:x="78077" fg:w="72"/><text x="99.8164%" y="2863.50"></text></g><g><title>LZ4_compress_generic_validated (72 samples, 0.09%)</title><rect x="99.5664%" y="2837" width="0.0918%" height="15" fill="rgb(217,52,28)" fg:x="78077" fg:w="72"/><text x="99.8164%" y="2847.50"></text></g><g><title>LZ4_putPosition (8 samples, 0.01%)</title><rect x="99.6480%" y="2821" width="0.0102%" height="15" fill="rgb(246,1,5)" fg:x="78141" fg:w="8"/><text x="99.8980%" y="2831.50"></text></g><g><title>LZ4_hashPosition (8 samples, 0.01%)</title><rect x="99.6480%" y="2805" width="0.0102%" height="15" fill="rgb(221,29,26)" fg:x="78141" fg:w="8"/><text x="99.8980%" y="2815.50"></text></g><g><title>LZ4_hash5 (8 samples, 0.01%)</title><rect x="99.6480%" y="2789" width="0.0102%" height="15" fill="rgb(250,133,32)" fg:x="78141" fg:w="8"/><text x="99.8980%" y="2799.50"></text></g><g><title>rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (75 samples, 0.10%)</title><rect x="99.5639%" y="2917" width="0.0956%" height="15" fill="rgb(236,63,16)" fg:x="78075" fg:w="75"/><text x="99.8139%" y="2927.50"></text></g><g><title>rocksdb::CompressData(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (74 samples, 0.09%)</title><rect x="99.5651%" y="2901" width="0.0944%" height="15" fill="rgb(231,159,14)" fg:x="78076" fg:w="74"/><text x="99.8151%" y="2911.50"></text></g><g><title>rocksdb::LZ4_Compress(rocksdb::CompressionInfo const&amp;, unsigned int, char const*, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (74 samples, 0.09%)</title><rect x="99.5651%" y="2885" width="0.0944%" height="15" fill="rgb(207,102,36)" fg:x="78076" fg:w="74"/><text x="99.8151%" y="2895.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext const&amp;, rocksdb::UncompressionContext*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice*, rocksdb::CompressionType*, rocksdb::Status*) (78 samples, 0.10%)</title><rect x="99.5639%" y="2933" width="0.0995%" height="15" fill="rgb(230,224,31)" fg:x="78075" fg:w="78"/><text x="99.8139%" y="2943.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, rocksdb::BlockType) (107 samples, 0.14%)</title><rect x="99.5639%" y="2949" width="0.1365%" height="15" fill="rgb(215,182,16)" fg:x="78075" fg:w="107"/><text x="99.8139%" y="2959.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteRawBlock(rocksdb::Slice const&amp;, rocksdb::CompressionType, rocksdb::BlockHandle*, rocksdb::BlockType, rocksdb::Slice const*) (29 samples, 0.04%)</title><rect x="99.6633%" y="2933" width="0.0370%" height="15" fill="rgb(226,113,2)" fg:x="78153" fg:w="29"/><text x="99.9133%" y="2943.50"></text></g><g><title>rocksdb::ComputeBuiltinChecksumWithLastByte(rocksdb::ChecksumType, char const*, unsigned long, char) (29 samples, 0.04%)</title><rect x="99.6633%" y="2917" width="0.0370%" height="15" fill="rgb(241,18,35)" fg:x="78153" fg:w="29"/><text x="99.9133%" y="2927.50"></text></g><g><title>rocksdb::crc32c::Value(char const*, unsigned long) (29 samples, 0.04%)</title><rect x="99.6633%" y="2901" width="0.0370%" height="15" fill="rgb(240,165,44)" fg:x="78153" fg:w="29"/><text x="99.9133%" y="2911.50"></text></g><g><title>ExtendImpl&lt;rocksdb::crc32c::Slow_CRC32&gt; (29 samples, 0.04%)</title><rect x="99.6633%" y="2885" width="0.0370%" height="15" fill="rgb(229,130,47)" fg:x="78153" fg:w="29"/><text x="99.9133%" y="2895.50"></text></g><g><title>Slow_CRC32 (29 samples, 0.04%)</title><rect x="99.6633%" y="2869" width="0.0370%" height="15" fill="rgb(223,93,7)" fg:x="78153" fg:w="29"/><text x="99.9133%" y="2879.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::BlockBuilder*, rocksdb::BlockHandle*, rocksdb::BlockType) (112 samples, 0.14%)</title><rect x="99.5639%" y="2965" width="0.1428%" height="15" fill="rgb(205,180,36)" fg:x="78075" fg:w="112"/><text x="99.8139%" y="2975.50"></text></g><g><title>rocksdb::Slice::difference_offset(rocksdb::Slice const&amp;) const (22 samples, 0.03%)</title><rect x="99.7322%" y="2933" width="0.0281%" height="15" fill="rgb(221,103,28)" fg:x="78207" fg:w="22"/><text x="99.9822%" y="2943.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKey(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (47 samples, 0.06%)</title><rect x="99.7092%" y="2965" width="0.0599%" height="15" fill="rgb(212,4,3)" fg:x="78189" fg:w="47"/><text x="99.9592%" y="2975.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKeyImpl(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*, unsigned long) (47 samples, 0.06%)</title><rect x="99.7092%" y="2949" width="0.0599%" height="15" fill="rgb(209,221,53)" fg:x="78189" fg:w="47"/><text x="99.9592%" y="2959.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (189 samples, 0.24%)</title><rect x="99.5460%" y="2981" width="0.2410%" height="15" fill="rgb(233,229,52)" fg:x="78061" fg:w="189"/><text x="99.7960%" y="2991.50"></text></g><g><title>rocksdb::CompactionIterator::AdvanceInputIter() (8 samples, 0.01%)</title><rect x="99.7896%" y="2965" width="0.0102%" height="15" fill="rgb(254,127,37)" fg:x="78252" fg:w="8"/><text x="100.0396%" y="2975.50"></text></g><g><title>rocksdb::SequenceIterWrapper::Next() (8 samples, 0.01%)</title><rect x="99.7896%" y="2949" width="0.0102%" height="15" fill="rgb(207,161,26)" fg:x="78252" fg:w="8"/><text x="100.0396%" y="2959.50"></text></g><g><title>rocksdb::SequenceIterWrapper::key() const (48 samples, 0.06%)</title><rect x="99.8329%" y="2949" width="0.0612%" height="15" fill="rgb(223,75,5)" fg:x="78286" fg:w="48"/><text x="100.0829%" y="2959.50"></text></g><g><title>rocksdb::MemTableIterator::key() const (48 samples, 0.06%)</title><rect x="99.8329%" y="2933" width="0.0612%" height="15" fill="rgb(235,115,52)" fg:x="78286" fg:w="48"/><text x="100.0829%" y="2943.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice(char const*) (47 samples, 0.06%)</title><rect x="99.8342%" y="2917" width="0.0599%" height="15" fill="rgb(240,91,46)" fg:x="78287" fg:w="47"/><text x="100.0842%" y="2927.50"></text></g><g><title>rocksdb::GetVarint32Ptr(char const*, char const*, unsigned int*) (47 samples, 0.06%)</title><rect x="99.8342%" y="2901" width="0.0599%" height="15" fill="rgb(251,144,21)" fg:x="78287" fg:w="47"/><text x="100.0842%" y="2911.50"></text></g><g><title>rocksdb::SequenceIterWrapper::value() const (15 samples, 0.02%)</title><rect x="99.8942%" y="2949" width="0.0191%" height="15" fill="rgb(247,220,47)" fg:x="78334" fg:w="15"/><text x="100.1442%" y="2959.50"></text></g><g><title>rocksdb::MemTableIterator::value() const (15 samples, 0.02%)</title><rect x="99.8942%" y="2933" width="0.0191%" height="15" fill="rgb(253,122,1)" fg:x="78334" fg:w="15"/><text x="100.1442%" y="2943.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice(char const*) (15 samples, 0.02%)</title><rect x="99.8942%" y="2917" width="0.0191%" height="15" fill="rgb(221,0,24)" fg:x="78334" fg:w="15"/><text x="100.1442%" y="2927.50"></text></g><g><title>rocksdb::GetVarint32Ptr(char const*, char const*, unsigned int*) (15 samples, 0.02%)</title><rect x="99.8942%" y="2901" width="0.0191%" height="15" fill="rgb(220,204,54)" fg:x="78334" fg:w="15"/><text x="100.1442%" y="2911.50"></text></g><g><title>rocksdb::CompactionIterator::Next() (99 samples, 0.13%)</title><rect x="99.7883%" y="2981" width="0.1262%" height="15" fill="rgb(205,96,25)" fg:x="78251" fg:w="99"/><text x="100.0383%" y="2991.50"></text></g><g><title>rocksdb::CompactionIterator::NextFromInput() (90 samples, 0.11%)</title><rect x="99.7998%" y="2965" width="0.1148%" height="15" fill="rgb(247,77,20)" fg:x="78260" fg:w="90"/><text x="100.0498%" y="2975.50"></text></g><g><title>rocksdb::OutputValidator::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 0.01%)</title><rect x="99.9197%" y="2981" width="0.0140%" height="15" fill="rgb(245,151,8)" fg:x="78354" fg:w="11"/><text x="100.1697%" y="2991.50"></text></g><g><title>rocksdb::FlushJob::WriteLevel0Table() (313 samples, 0.40%)</title><rect x="99.5396%" y="3013" width="0.3991%" height="15" fill="rgb(242,158,39)" fg:x="78056" fg:w="313"/><text x="99.7896%" y="3023.50"></text></g><g><title>rocksdb::BuildTable(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&amp;, rocksdb::TableBuilderOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::vector&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt; &gt; &gt;, rocksdb::FileMetaData*, std::vector&lt;rocksdb::BlobFileAddition, std::allocator&lt;rocksdb::BlobFileAddition&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr&lt;rocksdb::IOTracer&gt; const&amp;, rocksdb::BlobFileCreationReason, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*) (313 samples, 0.40%)</title><rect x="99.5396%" y="2997" width="0.3991%" height="15" fill="rgb(222,214,50)" fg:x="78056" fg:w="313"/><text x="99.7896%" y="3007.50"></text></g><g><title>rocksdb:high (314 samples, 0.40%)</title><rect x="99.5396%" y="3189" width="0.4004%" height="15" fill="rgb(229,60,39)" fg:x="78056" fg:w="314"/><text x="99.7896%" y="3199.50"></text></g><g><title>__GI___clone3 (314 samples, 0.40%)</title><rect x="99.5396%" y="3173" width="0.4004%" height="15" fill="rgb(240,148,18)" fg:x="78056" fg:w="314"/><text x="99.7896%" y="3183.50"></text></g><g><title>start_thread (314 samples, 0.40%)</title><rect x="99.5396%" y="3157" width="0.4004%" height="15" fill="rgb(215,96,11)" fg:x="78056" fg:w="314"/><text x="99.7896%" y="3167.50"></text></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*) (314 samples, 0.40%)</title><rect x="99.5396%" y="3141" width="0.4004%" height="15" fill="rgb(238,162,53)" fg:x="78056" fg:w="314"/><text x="99.7896%" y="3151.50"></text></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long) (314 samples, 0.40%)</title><rect x="99.5396%" y="3125" width="0.4004%" height="15" fill="rgb(214,83,18)" fg:x="78056" fg:w="314"/><text x="99.7896%" y="3135.50"></text></g><g><title>std::function&lt;void ()&gt;::operator()() const (314 samples, 0.40%)</title><rect x="99.5396%" y="3109" width="0.4004%" height="15" fill="rgb(248,117,24)" fg:x="78056" fg:w="314"/><text x="99.7896%" y="3119.50"></text></g><g><title>rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority) (314 samples, 0.40%)</title><rect x="99.5396%" y="3093" width="0.4004%" height="15" fill="rgb(238,190,6)" fg:x="78056" fg:w="314"/><text x="99.7896%" y="3103.50"></text></g><g><title>rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority) (314 samples, 0.40%)</title><rect x="99.5396%" y="3077" width="0.4004%" height="15" fill="rgb(213,51,6)" fg:x="78056" fg:w="314"/><text x="99.7896%" y="3087.50"></text></g><g><title>rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector&lt;rocksdb::DBImpl::BGFlushArg, (unsigned long)8&gt; const&amp;, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (314 samples, 0.40%)</title><rect x="99.5396%" y="3061" width="0.4004%" height="15" fill="rgb(212,136,1)" fg:x="78056" fg:w="314"/><text x="99.7896%" y="3071.50"></text></g><g><title>rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;&amp;, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (314 samples, 0.40%)</title><rect x="99.5396%" y="3045" width="0.4004%" height="15" fill="rgb(221,192,14)" fg:x="78056" fg:w="314"/><text x="99.7896%" y="3055.50"></text></g><g><title>rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*) (314 samples, 0.40%)</title><rect x="99.5396%" y="3029" width="0.4004%" height="15" fill="rgb(244,38,54)" fg:x="78056" fg:w="314"/><text x="99.7896%" y="3039.50"></text></g><g><title>state_batch_com (10 samples, 0.01%)</title><rect x="99.9426%" y="3189" width="0.0128%" height="15" fill="rgb(240,45,28)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="3199.50"></text></g><g><title>__GI___clone3 (10 samples, 0.01%)</title><rect x="99.9426%" y="3173" width="0.0128%" height="15" fill="rgb(240,123,12)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="3183.50"></text></g><g><title>start_thread (10 samples, 0.01%)</title><rect x="99.9426%" y="3157" width="0.0128%" height="15" fill="rgb(216,14,30)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="3167.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (10 samples, 0.01%)</title><rect x="99.9426%" y="3141" width="0.0128%" height="15" fill="rgb(212,50,24)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="3151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="99.9426%" y="3125" width="0.0128%" height="15" fill="rgb(253,229,47)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="3135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="99.9426%" y="3109" width="0.0128%" height="15" fill="rgb(214,26,17)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="3119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (10 samples, 0.01%)</title><rect x="99.9426%" y="3093" width="0.0128%" height="15" fill="rgb(252,60,11)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="3103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (10 samples, 0.01%)</title><rect x="99.9426%" y="3077" width="0.0128%" height="15" fill="rgb(209,59,37)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="3087.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="99.9426%" y="3061" width="0.0128%" height="15" fill="rgb(228,126,53)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="3071.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="99.9426%" y="3045" width="0.0128%" height="15" fill="rgb(233,99,2)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="3055.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="99.9426%" y="3029" width="0.0128%" height="15" fill="rgb(217,106,34)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="3039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="99.9426%" y="3013" width="0.0128%" height="15" fill="rgb(222,46,19)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="3023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (10 samples, 0.01%)</title><rect x="99.9426%" y="2997" width="0.0128%" height="15" fill="rgb(251,87,31)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="3007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.01%)</title><rect x="99.9426%" y="2981" width="0.0128%" height="15" fill="rgb(213,70,51)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="2991.50"></text></g><g><title>aptos_db::state_store::state_snapshot_committer::StateSnapshotCommitter::new::{{closure}} (10 samples, 0.01%)</title><rect x="99.9426%" y="2965" width="0.0128%" height="15" fill="rgb(229,144,18)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="2975.50"></text></g><g><title>aptos_db::state_store::state_merkle_batch_committer::StateMerkleBatchCommitter::run (10 samples, 0.01%)</title><rect x="99.9426%" y="2949" width="0.0128%" height="15" fill="rgb(254,60,26)" fg:x="78372" fg:w="10"/><text x="100.1926%" y="2959.50"></text></g><g><title>all (78,417 samples, 100%)</title><rect x="0.0000%" y="3205" width="100.0000%" height="15" fill="rgb(243,127,51)" fg:x="0" fg:w="78417"/><text x="0.2500%" y="3215.50"></text></g></svg></svg>